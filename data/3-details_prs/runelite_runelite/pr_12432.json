{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3Mjk3NzQ5", "number": 12432, "title": "Sort plugin search results with better text matches higher in search results", "bodyText": "Resolves #11520\n\nIntroduce SearchablePlugin and extract plugin search code to PluginSearch, which is now used by both internal and external plugin searches\nOrder search results using a few heuristics such that exact or close text matches occur higher up in the results\n\nI tried using JaroWinklerDistance but it didn't have very good results, probably due to the varying name-length of plugins, so I settled on more human heuristics.", "createdAt": "2020-09-01T19:52:43Z", "url": "https://github.com/runelite/runelite/pull/12432", "merged": true, "mergeCommit": {"oid": "1ce047433682bf223f2284d8fdabfb44eb162e36"}, "closed": true, "closedAt": "2020-10-05T08:18:17Z", "author": {"login": "jrhodkinson"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEtBvtABqjM3MTY2MDYzOTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLs5E1AFqTQ5NDY3OTg0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a52aa657cb0a4b5a5d1b1e70df0bd966afea75ef", "author": {"user": null}, "url": "https://github.com/runelite/runelite/commit/a52aa657cb0a4b5a5d1b1e70df0bd966afea75ef", "committedDate": "2020-09-01T19:44:26Z", "message": "Add test for PluginSearch"}, "afterCommit": {"oid": "0cab51f789c11d9dc0f2eaddfcecc74d4b9aa8c9", "author": {"user": null}, "url": "https://github.com/runelite/runelite/commit/0cab51f789c11d9dc0f2eaddfcecc74d4b9aa8c9", "committedDate": "2020-09-01T19:59:10Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0cab51f789c11d9dc0f2eaddfcecc74d4b9aa8c9", "author": {"user": null}, "url": "https://github.com/runelite/runelite/commit/0cab51f789c11d9dc0f2eaddfcecc74d4b9aa8c9", "committedDate": "2020-09-01T19:59:10Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}, "afterCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "committedDate": "2020-09-01T20:03:15Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MzQxNDEw", "url": "https://github.com/runelite/runelite/pull/12432#pullrequestreview-486341410", "createdAt": "2020-09-10T22:02:44Z", "commit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjowMjo0NFrOHQHR5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjoxOTo0NFrOHQHsgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY1ODUzMw==", "bodyText": "Don't static import", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486658533", "createdAt": "2020-09-10T22:02:44Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/PluginHubPanel.java", "diffHunk": "@@ -87,8 +86,8 @@\n import net.runelite.client.util.ImageUtil;\n import net.runelite.client.util.LinkBrowser;\n import net.runelite.client.util.SwingUtil;\n-import net.runelite.client.util.Text;\n import net.runelite.client.util.VerificationException;\n+import static java.util.stream.Collectors.toList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MDQ2NQ==", "bodyText": "These should be to methods on the PluginListItem/PHP.PluginItem and those classes made private again.\nIt would probably better for this to become an interface and make those classes implement it", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486660465", "createdAt": "2020-09-10T22:07:45Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/SearchablePlugin.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import java.util.List;\n+import java.util.function.Supplier;\n+import lombok.Getter;\n+\n+public class SearchablePlugin<T>\n+{\n+\n+\tprivate final T plugin;\n+\t@Getter\n+\tprivate final String name;\n+\t@Getter\n+\tprivate final List<String> keywords;\n+\tprivate final Supplier<Boolean> isPinnedSupplier;\n+\n+\t@VisibleForTesting\n+\tSearchablePlugin(T plugin, String name, List<String> keywords, Supplier<Boolean> isPinnedSupplier)\n+\t{\n+\t\tthis.plugin = plugin;\n+\t\tthis.name = name;\n+\t\tthis.keywords = keywords;\n+\t\tthis.isPinnedSupplier = isPinnedSupplier;\n+\t}\n+\n+\tpublic static SearchablePlugin<PluginListItem> from(PluginListItem pluginListItem)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MTY3Ng==", "bodyText": "the comparator should be cached in a final field. Most of these methods are single use and should be inlined (+ a comment if its not otherwise obvious what they do)", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486661676", "createdAt": "2020-09-10T22:10:53Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/SearchablePluginComparator.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.commons.lang3.StringUtils;\n+import static java.util.Comparator.comparing;\n+import static java.util.Comparator.naturalOrder;\n+import static java.util.Comparator.nullsLast;\n+import static java.util.Comparator.reverseOrder;\n+\n+public class SearchablePluginComparator implements Comparator<SearchablePlugin<?>>\n+{\n+\n+\tprivate final String query;\n+\tprivate final List<String> queryPieces;\n+\n+\tpublic SearchablePluginComparator(String query)\n+\t{\n+\t\tthis.query = query.trim().toLowerCase();\n+\t\tthis.queryPieces = Arrays.asList(this.query.split(\" \"));\n+\t}\n+\n+\t@Override\n+\tpublic int compare(SearchablePlugin<?> plugin1, SearchablePlugin<?> plugin2)\n+\t{\n+\t\treturn comparator().compare(plugin1, plugin2);\n+\t}\n+\n+\tpublic Comparator<SearchablePlugin<?>> comparator()\n+\t{\n+\t\tif (StringUtils.isBlank(query))\n+\t\t{\n+\t\t\treturn nullsLast(isPinned()).thenComparing(name());\n+\t\t}\n+\t\treturn nullsLast(exactMatch())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MjQ5OA==", "bodyText": "maybe use a guava Splitter so you can filter empties", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486662498", "createdAt": "2020-09-10T22:13:05Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/SearchablePluginComparator.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.commons.lang3.StringUtils;\n+import static java.util.Comparator.comparing;\n+import static java.util.Comparator.naturalOrder;\n+import static java.util.Comparator.nullsLast;\n+import static java.util.Comparator.reverseOrder;\n+\n+public class SearchablePluginComparator implements Comparator<SearchablePlugin<?>>\n+{\n+\n+\tprivate final String query;\n+\tprivate final List<String> queryPieces;\n+\n+\tpublic SearchablePluginComparator(String query)\n+\t{\n+\t\tthis.query = query.trim().toLowerCase();\n+\t\tthis.queryPieces = Arrays.asList(this.query.split(\" \"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2MjYwOQ==", "bodyText": "current year", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486662609", "createdAt": "2020-09-10T22:13:25Z", "author": {"login": "abextm"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/config/PluginSearchTest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright (c) 2018, Jack Hodkinson <https://github.com/jrhodkinson>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2NDE2NA==", "bodyText": "this can probably just be a static method on the comparator", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486664164", "createdAt": "2020-09-10T22:17:06Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/PluginSearch.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import net.runelite.client.util.Text;\n+import static java.util.stream.Collectors.toList;\n+\n+public class PluginSearch<T>\n+{\n+\n+\tprivate final List<SearchablePlugin<T>> searchablePlugins;\n+\n+\tpublic PluginSearch(List<SearchablePlugin<T>> searchablePlugins)\n+\t{\n+\t\tthis.searchablePlugins = new ArrayList<>(searchablePlugins);\n+\t}\n+\n+\tpublic List<T> query(String query)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2NDMxMw==", "bodyText": "why do you need a copy?", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486664313", "createdAt": "2020-09-10T22:17:17Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/PluginSearch.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import net.runelite.client.util.Text;\n+import static java.util.stream.Collectors.toList;\n+\n+public class PluginSearch<T>\n+{\n+\n+\tprivate final List<SearchablePlugin<T>> searchablePlugins;\n+\n+\tpublic PluginSearch(List<SearchablePlugin<T>> searchablePlugins)\n+\t{\n+\t\tthis.searchablePlugins = new ArrayList<>(searchablePlugins);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2NTM0NQ==", "bodyText": "don't static import", "url": "https://github.com/runelite/runelite/pull/12432#discussion_r486665345", "createdAt": "2020-09-10T22:19:44Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/SearchablePluginComparator.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright (c) 2020, Jack Hodkinson <https://github.com/jrhodkinson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.commons.lang3.StringUtils;\n+import static java.util.Comparator.comparing;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/e5b9e1b5d909ab1120dff98dceb8317bae6fe0b8", "committedDate": "2020-09-01T20:03:15Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}, "afterCommit": {"oid": "9cc9e304cd97769152b2ef98fa7375f7712f5aaa", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/9cc9e304cd97769152b2ef98fa7375f7712f5aaa", "committedDate": "2020-09-22T20:54:50Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins\n\n\u00a3Resolve PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9cc9e304cd97769152b2ef98fa7375f7712f5aaa", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/9cc9e304cd97769152b2ef98fa7375f7712f5aaa", "committedDate": "2020-09-22T20:54:50Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins\n\n\u00a3Resolve PR comments"}, "afterCommit": {"oid": "22144b8ca8a4b9d23865d4682d658e73627eeaab", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/22144b8ca8a4b9d23865d4682d658e73627eeaab", "committedDate": "2020-09-22T21:00:46Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22144b8ca8a4b9d23865d4682d658e73627eeaab", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/22144b8ca8a4b9d23865d4682d658e73627eeaab", "committedDate": "2020-09-22T21:00:46Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}, "afterCommit": {"oid": "4d5090713aca16cd70335299c70deb914031cac1", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/4d5090713aca16cd70335299c70deb914031cac1", "committedDate": "2020-09-22T21:11:09Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69f1dfad6ef6ae5ff0ac25f1444268e4dba182b0", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/69f1dfad6ef6ae5ff0ac25f1444268e4dba182b0", "committedDate": "2020-09-22T21:14:36Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d5090713aca16cd70335299c70deb914031cac1", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/4d5090713aca16cd70335299c70deb914031cac1", "committedDate": "2020-09-22T21:11:09Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}, "afterCommit": {"oid": "69f1dfad6ef6ae5ff0ac25f1444268e4dba182b0", "author": {"user": {"login": "jrhodkinson", "name": "Jack Hodkinson"}}, "url": "https://github.com/runelite/runelite/commit/69f1dfad6ef6ae5ff0ac25f1444268e4dba182b0", "committedDate": "2020-09-22T21:14:36Z", "message": "Sort plugin search results with closer test matches higher up and extract search functionality into common class for both internal and external plugins"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0Njc5ODQ1", "url": "https://github.com/runelite/runelite/pull/12432#pullrequestreview-494679845", "createdAt": "2020-09-23T13:48:34Z", "commit": {"oid": "69f1dfad6ef6ae5ff0ac25f1444268e4dba182b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3359, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}