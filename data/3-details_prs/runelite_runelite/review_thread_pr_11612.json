{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NjIyNzc3", "number": 11612, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowNDowM1rOD-2WmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNDoyOTozMlrOEBL2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjI4ODI0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowNDowM1rOGZMzag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowNDowM1rOGZMzag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3NzM1NA==", "bodyText": "Add a comment with the source of this data\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tREVITALISATION_TABLE = new ImmutableMap.Builder<Integer, Integer>()\n          \n          \n            \n            \t\t// https://oldschool.runescape.wiki/w/Revitalisation_(%2B)#Maximum_stat_restoration\n          \n          \n            \n            \t\tREVITALISATION_TABLE = new ImmutableMap.Builder<Integer, Integer>()", "url": "https://github.com/runelite/runelite/pull/11612#discussion_r429077354", "createdAt": "2020-05-22T07:04:03Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2020, TheStonedTurtle <https://github.com/TheStonedTurtle>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.itemstats;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.google.inject.testing.fieldbinder.Bind;\n+import java.util.Map;\n+import net.runelite.api.Client;\n+import net.runelite.api.ItemID;\n+import net.runelite.api.Skill;\n+import static org.junit.Assert.assertEquals;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import static org.mockito.ArgumentMatchers.any;\n+import org.mockito.Mock;\n+import static org.mockito.Mockito.when;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class ItemStatEffectTest\n+{\n+\tprivate static final ImmutableMap<Integer, Integer> REVITALISATION_TABLE;\n+\n+\tstatic\n+\t{\n+\t\tREVITALISATION_TABLE = new ImmutableMap.Builder<Integer, Integer>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f48e620e6b5081a6eae1d99add8e74130ef0f0a"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjI5OTIxOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowODo0NlrOGZM6Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowODo0NlrOGZM6Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3OTA1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSUPER_RESTORE_TABLE = new ImmutableMap.Builder<Integer, Integer>()\n          \n          \n            \n            \t\t// https://oldschool.runescape.wiki/w/Super_restore#Maximum_restoration\n          \n          \n            \n            \t\tSUPER_RESTORE_TABLE = new ImmutableMap.Builder<Integer, Integer>()", "url": "https://github.com/runelite/runelite/pull/11612#discussion_r429079055", "createdAt": "2020-05-22T07:08:46Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "diffHunk": "@@ -78,6 +86,50 @@\n \t\t\t.put(47, 25)  \t.put(97, 40)\n \t\t\t.put(49, 25)  \t.put(99, 40)\n \t\t\t.build();\n+\n+\t\tSUPER_RESTORE_TABLE = new ImmutableMap.Builder<Integer, Integer>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35c6203d18c0a629e103b9240682128f2f1119d"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjI5OTQ2OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowODo1NlrOGZM6NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowODo1NlrOGZM6NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3OTA5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSANFEW_TABLE = new ImmutableMap.Builder<Integer, Integer>()\n          \n          \n            \n            \t\t// https://oldschool.runescape.wiki/w/Sanfew_serum#Maximum_restoration\n          \n          \n            \n            \t\tSANFEW_TABLE = new ImmutableMap.Builder<Integer, Integer>()", "url": "https://github.com/runelite/runelite/pull/11612#discussion_r429079093", "createdAt": "2020-05-22T07:08:56Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "diffHunk": "@@ -78,6 +86,50 @@\n \t\t\t.put(47, 25)  \t.put(97, 40)\n \t\t\t.put(49, 25)  \t.put(99, 40)\n \t\t\t.build();\n+\n+\t\tSUPER_RESTORE_TABLE = new ImmutableMap.Builder<Integer, Integer>()\n+\t\t\t.put(1, 8)    \t.put(36, 17)  \t.put(72, 26)\n+\t\t\t.put(3, 8)    \t.put(39, 17)  \t.put(75, 26)\n+\t\t\t.put(4, 9)    \t.put(40, 18)  \t.put(76, 27)\n+\t\t\t.put(7, 9)    \t.put(43, 18)  \t.put(79, 27)\n+\t\t\t.put(8, 10)   \t.put(44, 19)  \t.put(80, 28)\n+\t\t\t.put(11, 10)  \t.put(47, 19)  \t.put(83, 28)\n+\t\t\t.put(12, 11)  \t.put(48, 20)  \t.put(84, 29)\n+\t\t\t.put(15, 11)  \t.put(51, 20)  \t.put(87, 29)\n+\t\t\t.put(16, 12)  \t.put(52, 21)  \t.put(88, 30)\n+\t\t\t.put(19, 12)  \t.put(55, 21)  \t.put(91, 30)\n+\t\t\t.put(20, 13)  \t.put(56, 22)  \t.put(92, 31)\n+\t\t\t.put(23, 13)  \t.put(59, 22)  \t.put(95, 31)\n+\t\t\t.put(24, 14)  \t.put(60, 23)  \t.put(96, 32)\n+\t\t\t.put(27, 14)  \t.put(63, 23)  \t.put(99, 32)\n+\t\t\t.put(28, 15)  \t.put(64, 24)\n+\t\t\t.put(31, 15)  \t.put(67, 24)\n+\t\t\t.put(32, 16)  \t.put(68, 25)\n+\t\t\t.put(35, 16)  \t.put(71, 25)\n+\t\t\t.build();\n+\n+\t\tSANFEW_TABLE = new ImmutableMap.Builder<Integer, Integer>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35c6203d18c0a629e103b9240682128f2f1119d"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjMxNTg1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzoxNTo1M1rOGZNEcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzoxNTo1M1rOGZNEcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA4MTcxNA==", "bodyText": "Given that the wrench test code is exactly the same as the implementation, I don't see a reason to test it.", "url": "https://github.com/runelite/runelite/pull/11612#discussion_r429081714", "createdAt": "2020-05-22T07:15:53Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "diffHunk": "@@ -93,15 +145,59 @@ public void prepare()\n \t\t\t.thenReturn(0);\n \t}\n \n+\tprivate void prepareInventory()\n+\t{\n+\t\tfinal Item holy_wrench = new Item(ItemID.HOLY_WRENCH, 1);\n+\t\tfinal ItemContainer invi = mock(ItemContainer.class);\n+\t\twhen(invi.getItems())\n+\t\t\t.thenReturn(new Item[]{holy_wrench});\n+\n+\t\twhen(client.getItemContainer(eq(InventoryID.INVENTORY)))\n+\t\t\t.thenReturn(invi);\n+\t}\n+\n \t@Test\n \tpublic void testRevitalisationPlus()\n \t{\n \t\tfinal Effect item = itemStats.get(ItemID.REVITALISATION_1_20957);\n-\t\tmatchWikiTable(REVITALISATION_TABLE, item);\n+\t\tmatchWikiTable(REVITALISATION_TABLE, item, false);\n \t}\n \n-\tprivate void matchWikiTable(final ImmutableMap<Integer, Integer> table, final Effect item)\n+\t@Test\n+\tpublic void testSuperRestore()\n \t{\n+\t\tfinal Effect item = itemStats.get(ItemID.SUPER_RESTORE1);\n+\t\tmatchWikiTable(SUPER_RESTORE_TABLE, item, false);\n+\t}\n+\n+\t@Test\n+\tpublic void testSuperRestoreWithWrench()\n+\t{\n+\t\tprepareInventory();\n+\n+\t\tfinal Effect item = itemStats.get(ItemID.SUPER_RESTORE1);\n+\t\tmatchWikiTable(SUPER_RESTORE_TABLE, item, true);\n+\t}\n+\n+\t@Test\n+\tpublic void testSanfewSerum()\n+\t{\n+\t\tfinal Effect item = itemStats.get(ItemID.SANFEW_SERUM1);\n+\t\tmatchWikiTable(SANFEW_TABLE, item, false);\n+\t}\n+\n+\t@Test\n+\tpublic void testSanfewSerumWithWrench()\n+\t{\n+\t\tprepareInventory();\n+\n+\t\tfinal Effect item = itemStats.get(ItemID.SANFEW_SERUM1);\n+\t\tmatchWikiTable(SANFEW_TABLE, item, true);\n+\t}\n+\n+\tprivate void matchWikiTable(final ImmutableMap<Integer, Integer> table, final Effect item, boolean hasWrench)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c35c6203d18c0a629e103b9240682128f2f1119d"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTM1Nzk3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNToxMTo1NVrOGaO0vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNToxMTo1NVrOGaO0vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE1OTAzOQ==", "bodyText": "Nit-pick, but tabs shouldn't be included after the initial indentation. All of the alignment of table entries should be done using spaces. For instance, this line would be changed as follows:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t.put(1, 8)    \t.put(36, 17)  \t.put(72, 26)\n          \n          \n            \n            \t\t\t.put(1, 8)      .put(36, 17)    .put(72, 26)", "url": "https://github.com/runelite/runelite/pull/11612#discussion_r430159039", "createdAt": "2020-05-26T05:11:55Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "diffHunk": "@@ -79,6 +86,52 @@\n \t\t\t.put(47, 25)  \t.put(97, 40)\n \t\t\t.put(49, 25)  \t.put(99, 40)\n \t\t\t.build();\n+\n+\t\t// https://oldschool.runescape.wiki/w/Super_restore#Maximum_restoration\n+\t\tSUPER_RESTORE_TABLE = new ImmutableMap.Builder<Integer, Integer>()\n+\t\t\t.put(1, 8)    \t.put(36, 17)  \t.put(72, 26)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e02141e348c2da478ff64590a527b77731676393"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjAyODgzOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMjowMjo0OVrOGcMcSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzo0OTo0OFrOGcN4wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxNzE2MA==", "bodyText": "This looks like it's left behind from the holy wrench testing that was removed.", "url": "https://github.com/runelite/runelite/pull/11612#discussion_r432217160", "createdAt": "2020-05-29T02:02:49Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "diffHunk": "@@ -94,13 +147,38 @@ public void prepare()\n \t\t\t.thenReturn(0);\n \t}\n \n+\tprivate void prepareInventory()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5174554b5802b5a8511ba79a6ff66f99e8e7f972"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI0MDgzMw==", "bodyText": "One of these force pushes will be right i promise.", "url": "https://github.com/runelite/runelite/pull/11612#discussion_r432240833", "createdAt": "2020-05-29T03:49:48Z", "author": {"login": "TheStonedTurtle"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "diffHunk": "@@ -94,13 +147,38 @@ public void prepare()\n \t\t\t.thenReturn(0);\n \t}\n \n+\tprivate void prepareInventory()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIxNzE2MA=="}, "originalCommit": {"oid": "5174554b5802b5a8511ba79a6ff66f99e8e7f972"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Njc4MTM3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNDoyOTozMlrOGc5Vpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNDoyOTozMlrOGc5Vpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1Mjc0Mw==", "bodyText": "this is only required if you are using the guice testlib stuff, and you aren't?", "url": "https://github.com/runelite/runelite/pull/11612#discussion_r432952743", "createdAt": "2020-05-31T14:29:32Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/itemstats/ItemStatEffectTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright (c) 2020, TheStonedTurtle <https://github.com/TheStonedTurtle>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.itemstats;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.google.inject.testing.fieldbinder.Bind;\n+import java.util.Map;\n+import net.runelite.api.Client;\n+import net.runelite.api.ItemID;\n+import net.runelite.api.Skill;\n+import static org.junit.Assert.assertEquals;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import static org.mockito.ArgumentMatchers.any;\n+import org.mockito.Mock;\n+import static org.mockito.Mockito.when;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class ItemStatEffectTest\n+{\n+\tprivate static final ImmutableMap<Integer, Integer> REVITALISATION_TABLE;\n+\tprivate static final ImmutableMap<Integer, Integer> SUPER_RESTORE_TABLE;\n+\tprivate static final ImmutableMap<Integer, Integer> SANFEW_TABLE;\n+\n+\tstatic\n+\t{\n+\t\t// https://oldschool.runescape.wiki/w/Revitalisation_(+)#Maximum_stat_restoration\n+\t\tREVITALISATION_TABLE = new ImmutableMap.Builder<Integer, Integer>()\n+\t\t\t.put(1, 11)     .put(50, 26)\n+\t\t\t.put(3, 11)     .put(53, 26)\n+\t\t\t.put(4, 12)     .put(54, 27)\n+\t\t\t.put(6, 12)     .put(56, 27)\n+\t\t\t.put(7, 13)     .put(57, 28)\n+\t\t\t.put(9, 13)     .put(59, 28)\n+\t\t\t.put(10, 14)    .put(60, 29)\n+\t\t\t.put(13, 14)    .put(63, 29)\n+\t\t\t.put(14, 15)    .put(64, 30)\n+\t\t\t.put(16, 15)    .put(66, 30)\n+\t\t\t.put(17, 16)    .put(67, 31)\n+\t\t\t.put(19, 16)    .put(69, 31)\n+\t\t\t.put(20, 17)    .put(70, 32)\n+\t\t\t.put(23, 17)    .put(73, 32)\n+\t\t\t.put(24, 18)    .put(74, 33)\n+\t\t\t.put(26, 18)    .put(76, 33)\n+\t\t\t.put(27, 19)    .put(77, 34)\n+\t\t\t.put(29, 19)    .put(79, 34)\n+\t\t\t.put(30, 20)    .put(80, 35)\n+\t\t\t.put(33, 20)    .put(83, 35)\n+\t\t\t.put(34, 21)    .put(84, 36)\n+\t\t\t.put(36, 21)    .put(86, 36)\n+\t\t\t.put(37, 22)    .put(87, 37)\n+\t\t\t.put(39, 22)    .put(89, 37)\n+\t\t\t.put(40, 23)    .put(90, 38)\n+\t\t\t.put(43, 23)    .put(93, 38)\n+\t\t\t.put(44, 24)    .put(94, 39)\n+\t\t\t.put(46, 24)    .put(96, 39)\n+\t\t\t.put(47, 25)    .put(97, 40)\n+\t\t\t.put(49, 25)    .put(99, 40)\n+\t\t\t.build();\n+\n+\t\t// https://oldschool.runescape.wiki/w/Super_restore#Maximum_restoration\n+\t\tSUPER_RESTORE_TABLE = new ImmutableMap.Builder<Integer, Integer>()\n+\t\t\t.put(1, 8)      .put(36, 17)    .put(72, 26)\n+\t\t\t.put(3, 8)      .put(39, 17)    .put(75, 26)\n+\t\t\t.put(4, 9)      .put(40, 18)    .put(76, 27)\n+\t\t\t.put(7, 9)      .put(43, 18)    .put(79, 27)\n+\t\t\t.put(8, 10)     .put(44, 19)    .put(80, 28)\n+\t\t\t.put(11, 10)    .put(47, 19)    .put(83, 28)\n+\t\t\t.put(12, 11)    .put(48, 20)    .put(84, 29)\n+\t\t\t.put(15, 11)    .put(51, 20)    .put(87, 29)\n+\t\t\t.put(16, 12)    .put(52, 21)    .put(88, 30)\n+\t\t\t.put(19, 12)    .put(55, 21)    .put(91, 30)\n+\t\t\t.put(20, 13)    .put(56, 22)    .put(92, 31)\n+\t\t\t.put(23, 13)    .put(59, 22)    .put(95, 31)\n+\t\t\t.put(24, 14)    .put(60, 23)    .put(96, 32)\n+\t\t\t.put(27, 14)    .put(63, 23)    .put(99, 32)\n+\t\t\t.put(28, 15)    .put(64, 24)\n+\t\t\t.put(31, 15)    .put(67, 24)\n+\t\t\t.put(32, 16)    .put(68, 25)\n+\t\t\t.put(35, 16)    .put(71, 25)\n+\t\t\t.build();\n+\n+\t\t// https://oldschool.runescape.wiki/w/Sanfew_serum#Maximum_restoration\n+\t\tSANFEW_TABLE = new ImmutableMap.Builder<Integer, Integer>()\n+\t\t\t.put(1, 4)      .put(34, 14)    .put(67, 24)\n+\t\t\t.put(3, 4)      .put(36, 14)    .put(69, 24)\n+\t\t\t.put(4, 5)      .put(37, 15)    .put(70, 25)\n+\t\t\t.put(6, 5)      .put(39, 15)    .put(73, 25)\n+\t\t\t.put(7, 6)      .put(40, 16)    .put(74, 26)\n+\t\t\t.put(9, 6)      .put(43, 16)    .put(76, 26)\n+\t\t\t.put(10, 7)     .put(44, 17)    .put(77, 27)\n+\t\t\t.put(13, 7)     .put(46, 17)    .put(79, 27)\n+\t\t\t.put(14, 8)     .put(47, 18)    .put(80, 28)\n+\t\t\t.put(16, 8)     .put(49, 18)    .put(83, 28)\n+\t\t\t.put(17, 9)     .put(50, 19)    .put(84, 29)\n+\t\t\t.put(19, 9)     .put(53, 19)    .put(86, 29)\n+\t\t\t.put(20, 10)    .put(54, 20)    .put(87, 30)\n+\t\t\t.put(23, 10)    .put(56, 20)    .put(89, 30)\n+\t\t\t.put(24, 11)    .put(57, 21)    .put(90, 31)\n+\t\t\t.put(26, 11)    .put(59, 21)    .put(93, 31)\n+\t\t\t.put(27, 12)    .put(60, 22)    .put(94, 32)\n+\t\t\t.put(29, 12)    .put(63, 22)    .put(96, 32)\n+\t\t\t.put(30, 13)    .put(64, 23)    .put(97, 33)\n+\t\t\t.put(33, 13)    .put(66, 23)    .put(99, 33)\n+\t\t\t.build();\n+\t}\n+\n+\t@Mock\n+\t@Bind", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ad73a3c1d9cfe9c97d23d29c24a225eb9f562ce"}, "originalPosition": 133}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3583, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}