{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMzQyMTI5", "number": 11066, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyNjoxN1rODrDRZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjowOTozN1rODtuWSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDY4OTY2OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyNjoxN1rOF7K78Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyNjoxN1rOF7K78Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4OTQ4OQ==", "bodyText": "Instead of having hardcoded values here and below for the full set effect check, an enum with the slot index, set of graceful item IDs, and slot bonus could be defined which would give better definition to this data. This also would allow creation of some static FULL_SET_BONUS value that can be referenced below.", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r397589489", "createdAt": "2020-03-25T03:26:17Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -199,30 +210,42 @@ String getEstimatedRunTimeRemaining(boolean inSeconds)\n \t\t}\n \t}\n \n-\tprivate boolean isLocalPlayerWearingFullGraceful()\n+\tprivate int getGracefulRecoveryBoost()\n \t{\n \t\tfinal ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);\n \n \t\tif (equipment == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n \t\tfinal Item[] items = equipment.getItems();\n \n-\t\t// Check that the local player is wearing enough items to be using full Graceful\n-\t\t// (the Graceful boots will have the highest slot index in the worn set).\n-\t\tif (items == null || items.length <= EquipmentInventorySlot.BOOTS.getSlotIdx())\n+\t\tif (items == null)\n+\t\t{\n+\t\t\treturn 0;\n+\t\t}\n+\n+\t\tint boost = 0;\n+\n+\t\tfor (int i = 0; i < items.length; ++i)\n+\t\t{\n+\t\t\tfinal ImmutableSet<Integer> gracefulForSlot = GRACEFUL_EQUIPMENT_SLOT_MAP.get(i);\n+\n+\t\t\tif (gracefulForSlot != null && gracefulForSlot.contains(items[i].getId()))\n+\t\t\t{\n+\t\t\t\t// 4% boost for the top and legs; 3% for the others\n+\t\t\t\tboost += i == EquipmentInventorySlot.BODY.getSlotIdx() || i == EquipmentInventorySlot.LEGS.getSlotIdx() ? 4 : 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f734d4e76775a24abd9870e0b0af1f43084877e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTAwMjE2OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMTo1Mzo1MVrOF70pPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMTo1Mzo1MVrOF70pPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI3MjgyOA==", "bodyText": "This can cause ArrayIndexOutOfBoundsException as equipment.getItems() is not guaranteed to have a length out to the highest equipment slot type's ID. Moving the items.length > slot.getIndex() check which is currently part of the if statement below this to the start of the block should correct that.\nif (items.length <= slot.getIndex())\n{\n\tcontinue;\n}\n\n// rest of method", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r398272828", "createdAt": "2020-03-26T01:53:51Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -199,30 +223,40 @@ String getEstimatedRunTimeRemaining(boolean inSeconds)\n \t\t}\n \t}\n \n-\tprivate boolean isLocalPlayerWearingFullGraceful()\n+\tprivate int getGracefulRecoveryBoost()\n \t{\n \t\tfinal ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);\n \n \t\tif (equipment == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n \t\tfinal Item[] items = equipment.getItems();\n \n-\t\t// Check that the local player is wearing enough items to be using full Graceful\n-\t\t// (the Graceful boots will have the highest slot index in the worn set).\n-\t\tif (items == null || items.length <= EquipmentInventorySlot.BOOTS.getSlotIdx())\n+\t\tif (items == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n-\t\treturn (ALL_GRACEFUL_HOODS.contains(items[EquipmentInventorySlot.HEAD.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_TOPS.contains(items[EquipmentInventorySlot.BODY.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_LEGS.contains(items[EquipmentInventorySlot.LEGS.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_GLOVES.contains(items[EquipmentInventorySlot.GLOVES.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_BOOTS.contains(items[EquipmentInventorySlot.BOOTS.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_CAPES.contains(items[EquipmentInventorySlot.CAPE.getSlotIdx()].getId()));\n+\t\tint boost = 0;\n+\n+\t\tfor (final GracefulEquipmentSlot slot : GracefulEquipmentSlot.values())\n+\t\t{\n+\t\t\tfinal int wornItemId = items[slot.getIndex()].getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb817f4068bcc09bbc4718a46e6c281072c2a546"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTEyNTIwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMzowMjoxNlrOF71w_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMzowMjoxNlrOF71w_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI5MTE5OA==", "bodyText": "Entries are not guaranteed to be nonnull. Change this to final Item wornItem and null-check it along with checking slot.getItems().contains(wornItem.getId()) below.", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r398291198", "createdAt": "2020-03-26T03:02:16Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -199,30 +223,45 @@ String getEstimatedRunTimeRemaining(boolean inSeconds)\n \t\t}\n \t}\n \n-\tprivate boolean isLocalPlayerWearingFullGraceful()\n+\tprivate int getGracefulRecoveryBoost()\n \t{\n \t\tfinal ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);\n \n \t\tif (equipment == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n \t\tfinal Item[] items = equipment.getItems();\n \n-\t\t// Check that the local player is wearing enough items to be using full Graceful\n-\t\t// (the Graceful boots will have the highest slot index in the worn set).\n-\t\tif (items == null || items.length <= EquipmentInventorySlot.BOOTS.getSlotIdx())\n+\t\tif (items == null)\n+\t\t{\n+\t\t\treturn 0;\n+\t\t}\n+\n+\t\tint boost = 0;\n+\n+\t\tfor (final GracefulEquipmentSlot slot : GracefulEquipmentSlot.values())\n \t\t{\n-\t\t\treturn false;\n+\t\t\tif (items.length <= slot.getIndex())\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tfinal int wornItemId = items[slot.getIndex()].getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ccbb977fcae2ed4cc5f4ef3a4e45fcbb27e53af"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjcxODgzOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjowOTozN1rOF_Ubmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjowOTozN1rOF_Ubmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzOTM1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(x -> x.getBoost()).sum();\n          \n          \n            \n            \t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(GracefulEquipmentSlot::getBoost).sum();", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r401939355", "createdAt": "2020-04-01T22:09:37Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -94,6 +97,27 @@\n \t\tAGILITY_CAPE, AGILITY_CAPET, MAX_CAPE\n \t);\n \n+\t@RequiredArgsConstructor\n+\t@Getter\n+\tprivate enum GracefulEquipmentSlot\n+\t{\n+\t\tHEAD(EquipmentInventorySlot.HEAD.getSlotIdx(), ALL_GRACEFUL_HOODS, 3),\n+\t\tBODY(EquipmentInventorySlot.BODY.getSlotIdx(), ALL_GRACEFUL_TOPS, 4),\n+\t\tLEGS(EquipmentInventorySlot.LEGS.getSlotIdx(), ALL_GRACEFUL_LEGS, 4),\n+\t\tGLOVES(EquipmentInventorySlot.GLOVES.getSlotIdx(), ALL_GRACEFUL_GLOVES, 3),\n+\t\tBOOTS(EquipmentInventorySlot.BOOTS.getSlotIdx(), ALL_GRACEFUL_BOOTS, 3),\n+\t\tCAPE(EquipmentInventorySlot.CAPE.getSlotIdx(), ALL_GRACEFUL_CAPES, 3);\n+\n+\t\tprivate final int index;\n+\t\tprivate final ImmutableSet<Integer> items;\n+\t\tprivate final int boost;\n+\n+\t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(x -> x.getBoost()).sum();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6c517f4553772f8d06239298eb277756bbe8d7a"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3742, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}