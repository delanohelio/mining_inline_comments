{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNjk3ODU3", "number": 10912, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTowNDozM1rODkhCLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTowNDowNFrODl6Czw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjE2NTU4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/NamedQuantity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTowNDozM1rOFw4dJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTowNDozM1rOFw4dJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMDkzNA==", "bodyText": "The else and brackets can be removed.", "url": "https://github.com/runelite/runelite/pull/10912#discussion_r386800934", "createdAt": "2020-03-03T05:04:33Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/NamedQuantity.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright (c) 2020, dekvall <https://github.com/dekvall>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package net.runelite.client.plugins.grounditems;\n+\n+import com.google.common.base.Strings;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Value;\n+\n+@Value\n+@RequiredArgsConstructor\n+class NamedQuantity\n+{\n+\tprivate static final Pattern QUANTITY_THRESHOLD_PATTERN = Pattern.compile(\"(.+)(<|>)\\\\s*(\\\\d+)\");\n+\n+\tprivate final String name;\n+\tprivate final int quantity;\n+\tprivate final Inequality inequality;\n+\n+\tNamedQuantity(GroundItem groundItem)\n+\t{\n+\t\tthis(groundItem.getName(), groundItem.getQuantity(), null);\n+\t}\n+\n+\tNamedQuantity(String name, int quantity)\n+\t{\n+\t\tthis(name, quantity, null);\n+\t}\n+\n+\tstatic NamedQuantity fromConfigEntry(String entry)\n+\t{\n+\t\tif (Strings.isNullOrEmpty(entry))\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tMatcher matcher = QUANTITY_THRESHOLD_PATTERN.matcher(entry);\n+\n+\t\tif (matcher.find())\n+\t\t{\n+\t\t\tString name = matcher.group(1).trim();\n+\t\t\tString sign = matcher.group(2);\n+\t\t\tint quantity = Integer.parseInt(matcher.group(3));\n+\t\t\tInequality inequality = sign.equals(\"<\") ? Inequality.LESS_THAN : Inequality.MORE_THAN;\n+\n+\t\t\treturn new NamedQuantity(name, quantity, inequality);\n+\t\t}\n+\t\telse", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c32b30e681b693211c088593bc84f6b589314a32"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjE2NjIyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/NamedQuantity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTowNTowNFrOFw4dgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTowNTowNFrOFw4dgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMTAyNw==", "bodyText": "enum should be at the top of the file", "url": "https://github.com/runelite/runelite/pull/10912#discussion_r386801027", "createdAt": "2020-03-03T05:05:04Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/NamedQuantity.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright (c) 2020, dekvall <https://github.com/dekvall>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package net.runelite.client.plugins.grounditems;\n+\n+import com.google.common.base.Strings;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Value;\n+\n+@Value\n+@RequiredArgsConstructor\n+class NamedQuantity\n+{\n+\tprivate static final Pattern QUANTITY_THRESHOLD_PATTERN = Pattern.compile(\"(.+)(<|>)\\\\s*(\\\\d+)\");\n+\n+\tprivate final String name;\n+\tprivate final int quantity;\n+\tprivate final Inequality inequality;\n+\n+\tNamedQuantity(GroundItem groundItem)\n+\t{\n+\t\tthis(groundItem.getName(), groundItem.getQuantity(), null);\n+\t}\n+\n+\tNamedQuantity(String name, int quantity)\n+\t{\n+\t\tthis(name, quantity, null);\n+\t}\n+\n+\tstatic NamedQuantity fromConfigEntry(String entry)\n+\t{\n+\t\tif (Strings.isNullOrEmpty(entry))\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tMatcher matcher = QUANTITY_THRESHOLD_PATTERN.matcher(entry);\n+\n+\t\tif (matcher.find())\n+\t\t{\n+\t\t\tString name = matcher.group(1).trim();\n+\t\t\tString sign = matcher.group(2);\n+\t\t\tint quantity = Integer.parseInt(matcher.group(3));\n+\t\t\tInequality inequality = sign.equals(\"<\") ? Inequality.LESS_THAN : Inequality.MORE_THAN;\n+\n+\t\t\treturn new NamedQuantity(name, quantity, inequality);\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\treturn new NamedQuantity(entry, 0, Inequality.MORE_THAN);\n+\t\t}\n+\t}\n+\n+\tenum Inequality", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c32b30e681b693211c088593bc84f6b589314a32"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjE2OTE1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/WildcardMatchLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTowNzowM1rOFw4fPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTowNzowM1rOFw4fPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMTQ2OQ==", "bodyText": "The strings should already be trimmed from Text::fromCSV", "url": "https://github.com/runelite/runelite/pull/10912#discussion_r386801469", "createdAt": "2020-03-03T05:07:03Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/WildcardMatchLoader.java", "diffHunk": "@@ -27,36 +27,58 @@\n import com.google.common.base.Strings;\r\n import com.google.common.cache.CacheLoader;\r\n import java.util.List;\r\n+import java.util.Objects;\r\n+import java.util.stream.Collectors;\r\n import javax.annotation.Nonnull;\r\n+import lombok.extern.slf4j.Slf4j;\r\n import net.runelite.client.util.WildcardMatcher;\r\n \r\n-class WildcardMatchLoader extends CacheLoader<String, Boolean>\r\n+@Slf4j\r\n+class WildcardMatchLoader extends CacheLoader<NamedQuantity, Boolean>\r\n {\r\n-\tprivate final List<String> nameFilters;\r\n+\tprivate final List<NamedQuantity> namedQuantityFilters;\r\n \r\n-\tWildcardMatchLoader(List<String> nameFilters)\r\n+\tWildcardMatchLoader(List<String> configEntries)\r\n \t{\r\n-\t\tthis.nameFilters = nameFilters;\r\n+\t\tthis.namedQuantityFilters = configEntries.stream()\r\n+\t\t\t.map(String::trim)\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c32b30e681b693211c088593bc84f6b589314a32"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjMyNjY3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/NamedQuantity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNjo0NjowN1rOFw58-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNjo0NjowN1rOFw58-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyNTQ2NQ==", "bodyText": "Remove this newline\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/runelite/runelite/pull/10912#discussion_r386825465", "createdAt": "2020-03-03T06:46:07Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/NamedQuantity.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright (c) 2020, dekvall <https://github.com/dekvall>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c32b30e681b693211c088593bc84f6b589314a32"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjM2ODE5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/grounditems/WildcardMatchLoaderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzowODo0OFrOFw6WYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzowODo0OFrOFw6WYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzMTk2OQ==", "bodyText": "Rather than modifying this test, add another test case which tests against quantity matchers.", "url": "https://github.com/runelite/runelite/pull/10912#discussion_r386831969", "createdAt": "2020-03-03T07:08:48Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/grounditems/WildcardMatchLoaderTest.java", "diffHunk": "@@ -34,12 +34,14 @@\n \t@Test\n \tpublic void testLoad()\n \t{\n-\t\tWildcardMatchLoader loader = new WildcardMatchLoader(Arrays.asList(\"rune*\", \"Abyssal whip\"));\n-\t\tassertTrue(loader.load(\"rune pouch\"));\n-\t\tassertTrue(loader.load(\"Rune pouch\"));\n-\t\tassertFalse(loader.load(\"Adamant dagger\"));\n-\t\tassertTrue(loader.load(\"Runeite Ore\"));\n-\t\tassertTrue(loader.load(\"Abyssal whip\"));\n-\t\tassertFalse(loader.load(\"Abyssal dagger\"));\n+\t\tWildcardMatchLoader loader = new WildcardMatchLoader(Arrays.asList(\"rune* <5\", \"Abyssal whip\", \"nature* > 20\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c32b30e681b693211c088593bc84f6b589314a32"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDc0ODk1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/NamedQuantity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTowNDowNVrOFzD8VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjowMzoxNFrOFzkXIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA4NjI5Mg==", "bodyText": "This is being used for both config provided name thresholds & also for representing the grounditems/menu items for matching, which seems kind of odd?", "url": "https://github.com/runelite/runelite/pull/10912#discussion_r389086292", "createdAt": "2020-03-06T19:04:05Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/NamedQuantity.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2020, dekvall <https://github.com/dekvall>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.grounditems;\n+\n+import com.google.common.base.Strings;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Value;\n+\n+@Value\n+@RequiredArgsConstructor\n+class NamedQuantity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a3559141c303397c08e91361b1c96b7c58f0d9a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzQ0MQ==", "bodyText": "I guess i combined them because they held approximately the same information, except that the configs had the inequality information. But i can see how it's odd and will split them up so that it'll look better.", "url": "https://github.com/runelite/runelite/pull/10912#discussion_r389617441", "createdAt": "2020-03-09T12:03:14Z", "author": {"login": "dekvall"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/NamedQuantity.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2020, dekvall <https://github.com/dekvall>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.grounditems;\n+\n+import com.google.common.base.Strings;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Value;\n+\n+@Value\n+@RequiredArgsConstructor\n+class NamedQuantity", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA4NjI5Mg=="}, "originalCommit": {"oid": "0a3559141c303397c08e91361b1c96b7c58f0d9a"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3858, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}