{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMjA1MzIz", "number": 11036, "reviewThreads": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo1MzowOFrODqOllA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOToyNDowOFrODu6MnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjA1NzgwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo1MzowOFrOF52Ohg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMzoxNTo1NVrOF6fp4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMTYwNg==", "bodyText": "This should be referenced from the ConfigGroup in AntiDragConfig", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396201606", "createdAt": "2020-03-23T03:53:08Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,32 +24,44 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n+import lombok.extern.slf4j.Slf4j;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n-import net.runelite.api.events.FocusChanged;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;\n+import net.runelite.api.GameState;\n+import net.runelite.api.events.WidgetLoaded;\n import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetID;\n import net.runelite.api.widgets.WidgetInfo;\n-import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.callback.ClientThread;\n import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.VarbitChanged;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.events.ConfigChanged;\n import net.runelite.client.input.KeyListener;\n import net.runelite.client.input.KeyManager;\n import net.runelite.client.plugins.Plugin;\n import net.runelite.client.plugins.PluginDescriptor;\n \n+\n @PluginDescriptor(\n-\tname = \"Shift Anti Drag\",\n-\tdescription = \"Prevent dragging an item for a specified delay\",\n-\ttags = {\"antidrag\", \"delay\", \"inventory\", \"items\"}\n+\tname = \"Anti Drag\",\n+\tenabledByDefault = false\n )\n+@Slf4j\n public class AntiDragPlugin extends Plugin implements KeyListener\n {\n-\tprivate static final int DEFAULT_DELAY = 5;\n+\tstatic final String CONFIG_GROUP = \"antiDrag\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NzY5OA==", "bodyText": "I'm sorry I am still trying to learn my way around github and understand the review process. Are you referring to line 55 - static final String CONFIG_GROUP = \"antiDrag\";? If so, are you suggesting referencing the ConfigGroup\nvia AntiDragConifg.class.getAnnotation(ConfigGroup.class).value()?", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396877698", "createdAt": "2020-03-24T03:04:39Z", "author": {"login": "usa-usa-usa-usa"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,32 +24,44 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n+import lombok.extern.slf4j.Slf4j;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n-import net.runelite.api.events.FocusChanged;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;\n+import net.runelite.api.GameState;\n+import net.runelite.api.events.WidgetLoaded;\n import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetID;\n import net.runelite.api.widgets.WidgetInfo;\n-import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.callback.ClientThread;\n import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.VarbitChanged;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.events.ConfigChanged;\n import net.runelite.client.input.KeyListener;\n import net.runelite.client.input.KeyManager;\n import net.runelite.client.plugins.Plugin;\n import net.runelite.client.plugins.PluginDescriptor;\n \n+\n @PluginDescriptor(\n-\tname = \"Shift Anti Drag\",\n-\tdescription = \"Prevent dragging an item for a specified delay\",\n-\ttags = {\"antidrag\", \"delay\", \"inventory\", \"items\"}\n+\tname = \"Anti Drag\",\n+\tenabledByDefault = false\n )\n+@Slf4j\n public class AntiDragPlugin extends Plugin implements KeyListener\n {\n-\tprivate static final int DEFAULT_DELAY = 5;\n+\tstatic final String CONFIG_GROUP = \"antiDrag\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMTYwNg=="}, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4MDM1NQ==", "bodyText": "He means that AntiDragConfig should also have its @ConfigGroup definition updated to reference this constant. So it would read like this:\n@ConfigGroup(AntiDragPlugin.CONFIG_GROUP)", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396880355", "createdAt": "2020-03-24T03:15:55Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,32 +24,44 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n+import lombok.extern.slf4j.Slf4j;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n-import net.runelite.api.events.FocusChanged;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;\n+import net.runelite.api.GameState;\n+import net.runelite.api.events.WidgetLoaded;\n import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetID;\n import net.runelite.api.widgets.WidgetInfo;\n-import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.callback.ClientThread;\n import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.VarbitChanged;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.events.ConfigChanged;\n import net.runelite.client.input.KeyListener;\n import net.runelite.client.input.KeyManager;\n import net.runelite.client.plugins.Plugin;\n import net.runelite.client.plugins.PluginDescriptor;\n \n+\n @PluginDescriptor(\n-\tname = \"Shift Anti Drag\",\n-\tdescription = \"Prevent dragging an item for a specified delay\",\n-\ttags = {\"antidrag\", \"delay\", \"inventory\", \"items\"}\n+\tname = \"Anti Drag\",\n+\tenabledByDefault = false\n )\n+@Slf4j\n public class AntiDragPlugin extends Plugin implements KeyListener\n {\n-\tprivate static final int DEFAULT_DELAY = 5;\n+\tstatic final String CONFIG_GROUP = \"antiDrag\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMTYwNg=="}, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjA1ODE4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo1MzoyM1rOF52OwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMzo0MzozOFrOF6gCtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMTY2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn client.getVarbitValue(8121) == 1;\n          \n          \n            \n            \t\treturn client.getVarbitValue(PVP_SPEC_ORB_DISABLED) == 1;", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396201665", "createdAt": "2020-03-23T03:53:23Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -125,4 +193,9 @@ private void setBankDragDelay(int delay)\n \t\t}\n \t}\n \n+\tpublic boolean inPvp()\n+\t{\n+\t\treturn client.getVarbitValue(8121) == 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4NjcxMA==", "bodyText": "Can I keep the Varbits.java file change and make this client.getVar(Varbits.PVP_SPEC_ORB_DISABLED) or is it better practice to not modify the varbits and just use client.getVarbitValue(8121)?", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396886710", "createdAt": "2020-03-24T03:43:38Z", "author": {"login": "usa-usa-usa-usa"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -125,4 +193,9 @@ private void setBankDragDelay(int delay)\n \t\t}\n \t}\n \n+\tpublic boolean inPvp()\n+\t{\n+\t\treturn client.getVarbitValue(8121) == 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMTY2NQ=="}, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjA1OTc1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo1NTowNVrOF52P0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo1NTowNVrOF52P0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMTkzNw==", "bodyText": "This should keep a stored value for isPvp and check isPvp() against that, and then only run this code if that changes", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396201937", "createdAt": "2020-03-23T03:55:05Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,32 +110,74 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tclientThread.invoke(() ->\n \t\t{\n-\t\t\tfinal int delay = config.dragDelay();\n-\t\t\tclient.setInventoryDragDelay(delay);\n-\t\t\tsetBankDragDelay(delay);\n-\t\t}\n+\t\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT && !inPvp())\n+\t\t\t{\n+\t\t\t\tclient.setInventoryDragDelay(config.dragDelay());\n+\t\t\t\tsetBankDragDelay(config.dragDelay());\n+\t\t\t}\n+\t\t});\n \t}\n \n \t@Override\n \tpublic void keyReleased(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tclientThread.invoke(() ->\n \t\t{\n-\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n-\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\t\t{\n+\t\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n+\t\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\t}\n+\t\t});\n+\t}\n+\n+\t@Subscribe\n+\tpublic void onConfigChanged(ConfigChanged event)\n+\t{\n+\t\tif (event.getGroup().equals(CONFIG_GROUP))\n+\t\t{\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tif (!config.onShiftOnly() && !inPvp())\n+\t\t\t\t{\n+\t\t\t\t\tclient.setInventoryDragDelay(config.dragDelay());\n+\t\t\t\t\tsetBankDragDelay(config.dragDelay());\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t{\n+\t\t\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n+\t\t\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\t\t}\n+\t\t\t});\n \t\t}\n \t}\n \n \t@Subscribe\n-\tpublic void onFocusChanged(FocusChanged focusChanged)\n+\tpublic void onVarbitChanged(VarbitChanged varbitChanged)\n \t{\n-\t\tif (!focusChanged.isFocused())\n+\n+\t\tif (!inPvp() && !config.onShiftOnly())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjA2MTg4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo1Njo1OFrOF52RIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo1Njo1OFrOF52RIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMjI3NA==", "bodyText": "This should be 1) check shift 2) check config 3) thread 4) check pvp 5) change drags, as it prevents an unnecessary clientThread.invoke() per key. The config checks and keyevent checks are fine on this thread.\nThe previous behavior also allowed shift click in pvp, which would be nice to not lose, so maybe don't check that?", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396202274", "createdAt": "2020-03-23T03:56:58Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,32 +110,74 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tclientThread.invoke(() ->\n \t\t{\n-\t\t\tfinal int delay = config.dragDelay();\n-\t\t\tclient.setInventoryDragDelay(delay);\n-\t\t\tsetBankDragDelay(delay);\n-\t\t}\n+\t\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT && !inPvp())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjA2NjE0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNDowMTowMVrOF52TvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMzoyNjo0OFrOF6fz7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMjk0MA==", "bodyText": "This actually looks like a bug fix? I may take this independently/it should be in a separate commit.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396202940", "createdAt": "2020-03-23T04:01:01Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -65,13 +77,27 @@ AntiDragConfig getConfig(ConfigManager configManager)\n \t@Override\n \tprotected void startUp() throws Exception\n \t{\n+\t\tif (client.getGameState() == GameState.LOGGED_IN)\n+\t\t{\n+\t\t\tclientThread.invokeLater(() ->\n+\t\t\t{\n+\t\t\t\tif (!config.onShiftOnly() && !inPvp())\n+\t\t\t\t{\n+\t\t\t\t\tclient.setInventoryDragDelay(config.dragDelay());\n+\t\t\t\t\tsetBankDragDelay(config.dragDelay());\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\n \t\tkeyManager.registerKeyListener(this);\n \t}\n \n \t@Override\n \tprotected void shutDown() throws Exception\n \t{\n \t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n+\t\tsetBankDragDelay(DEFAULT_DELAY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4MjkyNA==", "bodyText": "Referring to the shutdown behavior? This really is there because the original anti-drag plugin had it. I will test to validate. Also, sorry still trying to understand github and what the comments/suggestions are in reference to.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396882924", "createdAt": "2020-03-24T03:26:48Z", "author": {"login": "usa-usa-usa-usa"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -65,13 +77,27 @@ AntiDragConfig getConfig(ConfigManager configManager)\n \t@Override\n \tprotected void startUp() throws Exception\n \t{\n+\t\tif (client.getGameState() == GameState.LOGGED_IN)\n+\t\t{\n+\t\t\tclientThread.invokeLater(() ->\n+\t\t\t{\n+\t\t\t\tif (!config.onShiftOnly() && !inPvp())\n+\t\t\t\t{\n+\t\t\t\t\tclient.setInventoryDragDelay(config.dragDelay());\n+\t\t\t\t\tsetBankDragDelay(config.dragDelay());\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\n \t\tkeyManager.registerKeyListener(this);\n \t}\n \n \t@Override\n \tprotected void shutDown() throws Exception\n \t{\n \t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n+\t\tsetBankDragDelay(DEFAULT_DELAY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMjk0MA=="}, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjA2OTQ4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNDowMzozNFrOF52VoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMToyMjowN1rOF9Ftig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMzQyNA==", "bodyText": "I can't figure out what this is here for. I don't think it's being used?", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r396203424", "createdAt": "2020-03-23T04:03:34Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragConfig.java", "diffHunk": "@@ -40,6 +40,24 @@\n \t)\n \tdefault int dragDelay()\n \t{\n-\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH; // one game tick\n+\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"dragDelay\",\n+\t\tname = \"\",\n+\t\tdescription = \"\"\n+\t)\n+\tvoid dragDelay(int delay);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5MzAxMg==", "bodyText": "This was an accident. I have removed it.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r397593012", "createdAt": "2020-03-25T03:40:52Z", "author": {"login": "usa-usa-usa-usa"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragConfig.java", "diffHunk": "@@ -40,6 +40,24 @@\n \t)\n \tdefault int dragDelay()\n \t{\n-\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH; // one game tick\n+\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"dragDelay\",\n+\t\tname = \"\",\n+\t\tdescription = \"\"\n+\t)\n+\tvoid dragDelay(int delay);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMzQyNA=="}, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcwNzM5Nw==", "bodyText": "This still has not been removed. Why was this comment marked resolved?", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r398707397", "createdAt": "2020-03-26T16:22:53Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragConfig.java", "diffHunk": "@@ -40,6 +40,24 @@\n \t)\n \tdefault int dragDelay()\n \t{\n-\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH; // one game tick\n+\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"dragDelay\",\n+\t\tname = \"\",\n+\t\tdescription = \"\"\n+\t)\n+\tvoid dragDelay(int delay);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMzQyNA=="}, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYwMTAzNA==", "bodyText": "Sorry. I did remove this error, but someone accidentally re-pushed it back out.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r399601034", "createdAt": "2020-03-28T01:22:07Z", "author": {"login": "usa-usa-usa-usa"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragConfig.java", "diffHunk": "@@ -40,6 +40,24 @@\n \t)\n \tdefault int dragDelay()\n \t{\n-\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH; // one game tick\n+\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"dragDelay\",\n+\t\tname = \"\",\n+\t\tdescription = \"\"\n+\t)\n+\tvoid dragDelay(int delay);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMzQyNA=="}, "originalCommit": {"oid": "e5b319d8178c97c5764def3867fd3d4ca02d0f34"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDYzNjY2OnYy", "diffSide": "LEFT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1NTowM1rOF7Kchg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1NTowM1rOF7Kchg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4MTQ0Ng==", "bodyText": "Why are the plugin description and tags removed?", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r397581446", "createdAt": "2020-03-25T02:55:03Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,32 +24,45 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n+import lombok.extern.slf4j.Slf4j;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n-import net.runelite.api.events.FocusChanged;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;\n+import net.runelite.api.GameState;\n+import net.runelite.api.Varbits;\n+import net.runelite.api.events.WidgetLoaded;\n import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetID;\n import net.runelite.api.widgets.WidgetInfo;\n-import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.callback.ClientThread;\n import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.VarbitChanged;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.events.ConfigChanged;\n import net.runelite.client.input.KeyListener;\n import net.runelite.client.input.KeyManager;\n import net.runelite.client.plugins.Plugin;\n import net.runelite.client.plugins.PluginDescriptor;\n \n+\n @PluginDescriptor(\n-\tname = \"Shift Anti Drag\",\n-\tdescription = \"Prevent dragging an item for a specified delay\",\n-\ttags = {\"antidrag\", \"delay\", \"inventory\", \"items\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29d145eaabb09a0bc52892813c1f2a26969993a3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDYzNjkyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1NToxNVrOF7KcuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1NToxNVrOF7KcuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4MTQ5Nw==", "bodyText": "You're not using any log statements... Remove this.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r397581497", "createdAt": "2020-03-25T02:55:15Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,32 +24,45 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n+import lombok.extern.slf4j.Slf4j;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n-import net.runelite.api.events.FocusChanged;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;\n+import net.runelite.api.GameState;\n+import net.runelite.api.Varbits;\n+import net.runelite.api.events.WidgetLoaded;\n import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetID;\n import net.runelite.api.widgets.WidgetInfo;\n-import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.callback.ClientThread;\n import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.VarbitChanged;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.events.ConfigChanged;\n import net.runelite.client.input.KeyListener;\n import net.runelite.client.input.KeyManager;\n import net.runelite.client.plugins.Plugin;\n import net.runelite.client.plugins.PluginDescriptor;\n \n+\n @PluginDescriptor(\n-\tname = \"Shift Anti Drag\",\n-\tdescription = \"Prevent dragging an item for a specified delay\",\n-\ttags = {\"antidrag\", \"delay\", \"inventory\", \"items\"}\n+\tname = \"Anti Drag\",\n+\tenabledByDefault = false\n )\n+@Slf4j", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29d145eaabb09a0bc52892813c1f2a26969993a3"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDYzNzgyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1NTo0NVrOF7KdRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1NTo0NVrOF7KdRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4MTYzNg==", "bodyText": "Is this being used outside the plugin? Seems like it can remain private.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r397581636", "createdAt": "2020-03-25T02:55:45Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,32 +24,45 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n+import lombok.extern.slf4j.Slf4j;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n-import net.runelite.api.events.FocusChanged;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;\n+import net.runelite.api.GameState;\n+import net.runelite.api.Varbits;\n+import net.runelite.api.events.WidgetLoaded;\n import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetID;\n import net.runelite.api.widgets.WidgetInfo;\n-import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.callback.ClientThread;\n import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.VarbitChanged;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.events.ConfigChanged;\n import net.runelite.client.input.KeyListener;\n import net.runelite.client.input.KeyManager;\n import net.runelite.client.plugins.Plugin;\n import net.runelite.client.plugins.PluginDescriptor;\n \n+\n @PluginDescriptor(\n-\tname = \"Shift Anti Drag\",\n-\tdescription = \"Prevent dragging an item for a specified delay\",\n-\ttags = {\"antidrag\", \"delay\", \"inventory\", \"items\"}\n+\tname = \"Anti Drag\",\n+\tenabledByDefault = false\n )\n+@Slf4j\n public class AntiDragPlugin extends Plugin implements KeyListener\n {\n-\tprivate static final int DEFAULT_DELAY = 5;\n+\tstatic final String CONFIG_GROUP = \"antiDrag\";\n+\n+\tstatic final int DEFAULT_DELAY = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29d145eaabb09a0bc52892813c1f2a26969993a3"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDYzODc1OnYy", "diffSide": "LEFT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1NjoyM1rOF7Kd1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzo0MTo0MlrOF7LKXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4MTc4MQ==", "bodyText": "Why is the FocusChanged handler removed?", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r397581781", "createdAt": "2020-03-25T02:56:23Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,32 +111,76 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tfinal int delay = config.dragDelay();\n-\t\t\tclient.setInventoryDragDelay(delay);\n-\t\t\tsetBankDragDelay(delay);\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tif (!inPvp()) {\n+\t\t\t\t\tclient.setInventoryDragDelay(config.dragDelay());\n+\t\t\t\t\tsetBankDragDelay(config.dragDelay());\n+\t\t\t\t}\n+\t\t\t});\n \t\t}\n \t}\n \n \t@Override\n \tpublic void keyReleased(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n-\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n+\t\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\t});\n \t\t}\n \t}\n \n \t@Subscribe\n-\tpublic void onFocusChanged(FocusChanged focusChanged)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29d145eaabb09a0bc52892813c1f2a26969993a3"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5MzE4Mw==", "bodyText": "I removed it at first because I didn't understand why it was important to turn off delay when the client left focus. I have added it back.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r397593183", "createdAt": "2020-03-25T03:41:42Z", "author": {"login": "usa-usa-usa-usa"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,32 +111,76 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tfinal int delay = config.dragDelay();\n-\t\t\tclient.setInventoryDragDelay(delay);\n-\t\t\tsetBankDragDelay(delay);\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tif (!inPvp()) {\n+\t\t\t\t\tclient.setInventoryDragDelay(config.dragDelay());\n+\t\t\t\t\tsetBankDragDelay(config.dragDelay());\n+\t\t\t\t}\n+\t\t\t});\n \t\t}\n \t}\n \n \t@Override\n \tpublic void keyReleased(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n-\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n+\t\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\t});\n \t\t}\n \t}\n \n \t@Subscribe\n-\tpublic void onFocusChanged(FocusChanged focusChanged)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4MTc4MQ=="}, "originalCommit": {"oid": "29d145eaabb09a0bc52892813c1f2a26969993a3"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDYzOTY1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1Njo1MVrOF7KeXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1Njo1MVrOF7KeXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4MTkxNw==", "bodyText": "These blocks are duplicated numerous times in this plugin now. Move them to helper methods.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r397581917", "createdAt": "2020-03-25T02:56:51Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,32 +111,76 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tfinal int delay = config.dragDelay();\n-\t\t\tclient.setInventoryDragDelay(delay);\n-\t\t\tsetBankDragDelay(delay);\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tif (!inPvp()) {\n+\t\t\t\t\tclient.setInventoryDragDelay(config.dragDelay());\n+\t\t\t\t\tsetBankDragDelay(config.dragDelay());\n+\t\t\t\t}\n+\t\t\t});\n \t\t}\n \t}\n \n \t@Override\n \tpublic void keyReleased(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n-\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n+\t\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\t});\n \t\t}\n \t}\n \n \t@Subscribe\n-\tpublic void onFocusChanged(FocusChanged focusChanged)\n+\tpublic void onConfigChanged(ConfigChanged event)\n \t{\n-\t\tif (!focusChanged.isFocused())\n+\t\tif (event.getGroup().equals(CONFIG_GROUP))\n+\t\t{\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tif (!config.onShiftOnly() && !inPvp())\n+\t\t\t\t{\n+\t\t\t\t\tclient.setInventoryDragDelay(config.dragDelay());\n+\t\t\t\t\tsetBankDragDelay(config.dragDelay());\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t{\n+\t\t\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n+\t\t\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29d145eaabb09a0bc52892813c1f2a26969993a3"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDY0MjQ1OnYy", "diffSide": "RIGHT", "path": "runelite-api/src/main/java/net/runelite/api/Varbits.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1ODozM1rOF7KgGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjo1ODozM1rOF7KgGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4MjM2MA==", "bodyText": "This should explain the expected function and values of this varbit, not just be a section header of sorts. (Not all other entries in this file are a good reference; I would expect this to look more like GE_OFFER_CREATION_TYPE on L542 than the sections above)", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r397582360", "createdAt": "2020-03-25T02:58:33Z", "author": {"login": "Nightfirecat"}, "path": "runelite-api/src/main/java/net/runelite/api/Varbits.java", "diffHunk": "@@ -563,7 +563,12 @@\n \tTWISTED_LEAGUE_RELIC_2(10050),\n \tTWISTED_LEAGUE_RELIC_3(10051),\n \tTWISTED_LEAGUE_RELIC_4(10052),\n-\tTWISTED_LEAGUE_RELIC_5(10053);\n+\tTWISTED_LEAGUE_RELIC_5(10053),\n+\n+\t/**\n+\t * PVP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29d145eaabb09a0bc52892813c1f2a26969993a3"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTcxNTkwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjoxNDozNVrOF8OwcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjoxNDozNVrOF8OwcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcwMDY1Ng==", "bodyText": "This can remain static in addition to being private.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate final int DEFAULT_DELAY = 5;\n          \n          \n            \n            \tprivate static final int DEFAULT_DELAY = 5;", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r398700656", "createdAt": "2020-03-26T16:14:35Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -48,14 +48,15 @@\n \n @PluginDescriptor(\n \tname = \"Anti Drag\",\n-\tenabledByDefault = false\n+\tenabledByDefault = false,\n+\tdescription = \"Prevent dragging an item for a specified delay\",\n+\ttags = {\"antidrag\", \"delay\", \"inventory\", \"items\"}\n )\n-@Slf4j\n public class AntiDragPlugin extends Plugin implements KeyListener\n {\n \tstatic final String CONFIG_GROUP = \"antiDrag\";\n \n-\tstatic final int DEFAULT_DELAY = 5;\n+\tprivate final int DEFAULT_DELAY = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52cca8ef2db1d395bdf793b5dc4adf6891d3c9b3"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTc1MjY3OnYy", "diffSide": "RIGHT", "path": "runelite-api/src/main/java/net/runelite/api/Varbits.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjoyMTo1MlrOF8PHmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjoyMTo1MlrOF8PHmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcwNjU4Nw==", "bodyText": "This javadoc does not match the implementation of inPvp(). I would expect it to read more like the following:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Status of the PvP Spec Orb\n          \n          \n            \n            \t * 0 = Disabled\n          \n          \n            \n            \t * 1 = Enabled\n          \n          \n            \n            \t * Whether the Special Attack orb is disabled due to being in a PvP area\n          \n          \n            \n            \t *\n          \n          \n            \n            \t * 0 = Enabled (player is not in PvP)\n          \n          \n            \n            \t * 1 = Disabled (player in in PvP)\n          \n          \n            \n            \t *\n          \n          \n            \n            \t * @see https://oldschool.runescape.wiki/w/Minimap#Special_attack_orb", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r398706587", "createdAt": "2020-03-26T16:21:52Z", "author": {"login": "Nightfirecat"}, "path": "runelite-api/src/main/java/net/runelite/api/Varbits.java", "diffHunk": "@@ -563,7 +563,14 @@\n \tTWISTED_LEAGUE_RELIC_2(10050),\n \tTWISTED_LEAGUE_RELIC_3(10051),\n \tTWISTED_LEAGUE_RELIC_4(10052),\n-\tTWISTED_LEAGUE_RELIC_5(10053);\n+\tTWISTED_LEAGUE_RELIC_5(10053),\n+\n+\t/**\n+\t * Status of the PvP Spec Orb\n+\t * 0 = Disabled\n+\t * 1 = Enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dccb11c844ed5f3c7e7588c8ebd2c1177c409ca"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTc2Mzg5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjoyMzo1OVrOF8POPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjoyMzo1OVrOF8POPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcwODI4Nw==", "bodyText": "lastInPvp would be a much better var name, which would completely remove the need for this added comment.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r398708287", "createdAt": "2020-03-26T16:23:59Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,54 +24,82 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;\n+import net.runelite.api.GameState;\n+import net.runelite.api.Varbits;\n import net.runelite.api.events.FocusChanged;\n+import net.runelite.api.events.WidgetLoaded;\n import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetID;\n import net.runelite.api.widgets.WidgetInfo;\n-import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.callback.ClientThread;\n import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.VarbitChanged;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.events.ConfigChanged;\n import net.runelite.client.input.KeyListener;\n import net.runelite.client.input.KeyManager;\n import net.runelite.client.plugins.Plugin;\n import net.runelite.client.plugins.PluginDescriptor;\n \n+\n @PluginDescriptor(\n-\tname = \"Shift Anti Drag\",\n+\tname = \"Anti Drag\",\n+\tenabledByDefault = false,\n \tdescription = \"Prevent dragging an item for a specified delay\",\n \ttags = {\"antidrag\", \"delay\", \"inventory\", \"items\"}\n )\n public class AntiDragPlugin extends Plugin implements KeyListener\n {\n-\tprivate static final int DEFAULT_DELAY = 5;\n+\tstatic final String CONFIG_GROUP = \"antiDrag\";\n+\n+\tprivate final int DEFAULT_DELAY = 5;\n \n \t@Inject\n \tprivate Client client;\n \n+\t@Inject\n+\tprivate ClientThread clientThread;\n+\n \t@Inject\n \tprivate AntiDragConfig config;\n \n \t@Inject\n \tprivate KeyManager keyManager;\n \n+\tprivate boolean lastStatus; //true = was in PvP, false = was not in Pvp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dccb11c844ed5f3c7e7588c8ebd2c1177c409ca"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDEzMTgxOnYy", "diffSide": "LEFT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo0ODoxNFrOF-BYIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo0ODoxNFrOF-BYIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3ODU5NQ==", "bodyText": "Don't remove the comment on this line", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r400578595", "createdAt": "2020-03-31T00:48:14Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragConfig.java", "diffHunk": "@@ -40,6 +40,17 @@\n \t)\n \tdefault int dragDelay()\n \t{\n-\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH; // one game tick", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eed4484084639d100ebfac82cc2ddc7c1b749d4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDEzNTIyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo0OTo0OVrOF-BaIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo0OTo0OVrOF-BaIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3OTEwNA==", "bodyText": "This needs some extra description to clarify that the plugin still requires the use of Shift in PVP.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r400579104", "createdAt": "2020-03-31T00:49:49Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragConfig.java", "diffHunk": "@@ -40,6 +40,17 @@\n \t)\n \tdefault int dragDelay()\n \t{\n-\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH; // one game tick\n+\t\treturn Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"onShiftOnly\",\n+\t\tname = \"On Shift Only\",\n+\t\tdescription = \"Configures whether to only adjust the delay while holding shift\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eed4484084639d100ebfac82cc2ddc7c1b749d4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDEzNjQzOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1MDozM1rOF-Ba4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1MDozM1rOF-Ba4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3OTI5OA==", "bodyText": "These imports need to be reordered, they should still be in alphabetical order.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r400579298", "createdAt": "2020-03-31T00:50:33Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,54 +24,82 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eed4484084639d100ebfac82cc2ddc7c1b749d4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDEzNzYzOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1MToyNFrOF-Bbvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1MToyNFrOF-Bbvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3OTUxOA==", "bodyText": "This also should be moved back where it was originally to maintain import ordering.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r400579518", "createdAt": "2020-03-31T00:51:24Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,54 +24,82 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;\n+import net.runelite.api.GameState;\n+import net.runelite.api.Varbits;\n import net.runelite.api.events.FocusChanged;\n+import net.runelite.api.events.WidgetLoaded;\n import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetID;\n import net.runelite.api.widgets.WidgetInfo;\n-import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.callback.ClientThread;\n import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.api.Client;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eed4484084639d100ebfac82cc2ddc7c1b749d4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDEzODY0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1MjowMVrOF-BcXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1MjowMVrOF-BcXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3OTY3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r400579676", "createdAt": "2020-03-31T00:52:01Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -24,54 +24,82 @@\n  */\n package net.runelite.client.plugins.antidrag;\n \n-import com.google.inject.Provides;\n-import java.awt.event.KeyEvent;\n import javax.inject.Inject;\n-import net.runelite.api.Client;\n+import java.awt.event.KeyEvent;\n+import com.google.inject.Provides;\n+import net.runelite.api.GameState;\n+import net.runelite.api.Varbits;\n import net.runelite.api.events.FocusChanged;\n+import net.runelite.api.events.WidgetLoaded;\n import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetID;\n import net.runelite.api.widgets.WidgetInfo;\n-import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.callback.ClientThread;\n import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.VarbitChanged;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.events.ConfigChanged;\n import net.runelite.client.input.KeyListener;\n import net.runelite.client.input.KeyManager;\n import net.runelite.client.plugins.Plugin;\n import net.runelite.client.plugins.PluginDescriptor;\n \n+\n @PluginDescriptor(\n-\tname = \"Shift Anti Drag\",\n+\tname = \"Anti Drag\",\n+\tenabledByDefault = false,\n \tdescription = \"Prevent dragging an item for a specified delay\",\n \ttags = {\"antidrag\", \"delay\", \"inventory\", \"items\"}\n )\n public class AntiDragPlugin extends Plugin implements KeyListener\n {\n+\tstatic final String CONFIG_GROUP = \"antiDrag\";\n+\n \tprivate static final int DEFAULT_DELAY = 5;\n \n \t@Inject\n \tprivate Client client;\n \n+\t@Inject\n+\tprivate ClientThread clientThread;\n+\n \t@Inject\n \tprivate AntiDragConfig config;\n \n \t@Inject\n \tprivate KeyManager keyManager;\n \n+\tprivate boolean lastInPvp;\n+\n \t@Provides\n \tAntiDragConfig getConfig(ConfigManager configManager)\n \t{\n \t\treturn configManager.getConfig(AntiDragConfig.class);\n \t}\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eed4484084639d100ebfac82cc2ddc7c1b749d4"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDE0MzMzOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1NDoyM1rOF-BfDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1NDoyM1rOF-BfDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4MDM2Ng==", "bodyText": "This should be indented only one level further\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tsetDragDelay();\n          \n          \n            \n            \t\t\tsetDragDelay();", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r400580366", "createdAt": "2020-03-31T00:54:23Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,31 +112,86 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tfinal int delay = config.dragDelay();\n-\t\t\tclient.setInventoryDragDelay(delay);\n-\t\t\tsetBankDragDelay(delay);\n+\t\t\t\tsetDragDelay();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eed4484084639d100ebfac82cc2ddc7c1b749d4"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDE0NTk4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1NjowNVrOF-Bgww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1NjowNVrOF-Bgww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4MDgwMw==", "bodyText": "Use a non-inverted condition:\nif (config.onShiftOnly() || inPvp())\n{\n\tremoveDragDelay();\n}\nelse\n{\n\tsetDragDelay();\n}", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r400580803", "createdAt": "2020-03-31T00:56:05Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,31 +112,86 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tfinal int delay = config.dragDelay();\n-\t\t\tclient.setInventoryDragDelay(delay);\n-\t\t\tsetBankDragDelay(delay);\n+\t\t\t\tsetDragDelay();\n \t\t}\n \t}\n \n \t@Override\n \tpublic void keyReleased(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\t{\n+\t\t\tremoveDragDelay();\n+\t\t}\n+\t}\n+\n+\t@Subscribe\n+\tpublic void onConfigChanged(ConfigChanged event)\n+\t{\n+\t\tif (event.getGroup().equals(CONFIG_GROUP))\n+\t\t{\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tif (!config.onShiftOnly() && !inPvp())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eed4484084639d100ebfac82cc2ddc7c1b749d4"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDE0NjkyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1NjozN1rOF-BhUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1NjozN1rOF-BhUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4MDk0NQ==", "bodyText": "This doesn't remove the drag delay, it only resets it to default values. resetDragDelay() would be a better name.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r400580945", "createdAt": "2020-03-31T00:56:37Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -125,4 +208,21 @@ private void setBankDragDelay(int delay)\n \t\t}\n \t}\n \n+\tprivate boolean inPvp()\n+\t{\n+\t\treturn client.getVar(Varbits.PVP_SPEC_ORB) == 1;\n+\t}\n+\n+\tprivate void setDragDelay()\n+\t{\n+\t\tclient.setInventoryDragDelay(config.dragDelay());\n+\t\tsetBankDragDelay(config.dragDelay());\n+\t}\n+\n+\tprivate void removeDragDelay()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eed4484084639d100ebfac82cc2ddc7c1b749d4"}, "originalPosition": 200}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDIxOTYyOnYy", "diffSide": "RIGHT", "path": "runelite-api/src/main/java/net/runelite/api/Varbits.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTozNDozN1rOF-CLRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTozNDozN1rOF-CLRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTY4NQ==", "bodyText": "Turns out my suggestion wasn't proper javadoc. This should be though.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @see https://oldschool.runescape.wiki/w/Minimap#Special_attack_orb\n          \n          \n            \n            \t * @see <a href=\"https://oldschool.runescape.wiki/w/Minimap#Special_attack_orb\">The OSRS Wiki's Minimap page</a>", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r400591685", "createdAt": "2020-03-31T01:34:37Z", "author": {"login": "Nightfirecat"}, "path": "runelite-api/src/main/java/net/runelite/api/Varbits.java", "diffHunk": "@@ -563,7 +563,17 @@\n \tTWISTED_LEAGUE_RELIC_2(10050),\n \tTWISTED_LEAGUE_RELIC_3(10051),\n \tTWISTED_LEAGUE_RELIC_4(10052),\n-\tTWISTED_LEAGUE_RELIC_5(10053);\n+\tTWISTED_LEAGUE_RELIC_5(10053),\n+\n+\t/**\n+\t * Whether the Special Attack orb is disabled due to being in a PvP area\n+\t *\n+\t * 0 = Enabled (player is not in PvP)\n+\t * 1 = Disabled (player in in PvP)\n+\t *\n+\t * @see https://oldschool.runescape.wiki/w/Minimap#Special_attack_orb", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eed4484084639d100ebfac82cc2ddc7c1b749d4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjc4NTA5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjozNDo1OFrOF_VESQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjozNDo1OFrOF_VESQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0OTc2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n          \n          \n            \n            \t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT && config.onShiftOnly())", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r401949769", "createdAt": "2020-04-01T22:34:58Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,31 +110,86 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a149fc69cbf5ae388d7c8c62492b1e140c5e500b"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjc4NjA4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjozNToyNVrOF_VE7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjozNToyNVrOF_VE7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0OTkzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n          \n          \n            \n            \t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT && config.onShiftOnly())", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r401949933", "createdAt": "2020-04-01T22:35:25Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,31 +110,86 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tfinal int delay = config.dragDelay();\n-\t\t\tclient.setInventoryDragDelay(delay);\n-\t\t\tsetBankDragDelay(delay);\n+\t\t\tsetDragDelay();\n \t\t}\n \t}\n \n \t@Override\n \tpublic void keyReleased(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a149fc69cbf5ae388d7c8c62492b1e140c5e500b"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE0MDgwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOToxODo0M1rOGBCpcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOToxODo0M1rOGBCpcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc0NTEzOA==", "bodyText": "This should probably be on the client thread", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r403745138", "createdAt": "2020-04-05T19:18:43Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -65,13 +80,24 @@ AntiDragConfig getConfig(ConfigManager configManager)\n \t@Override\n \tprotected void startUp() throws Exception\n \t{\n+\t\tif (client.getGameState() == GameState.LOGGED_IN)\n+\t\t{\n+\t\t\tclientThread.invokeLater(() ->\n+\t\t\t{\n+\t\t\t\tif (!config.onShiftOnly() && !inPvp())\n+\t\t\t\t{\n+\t\t\t\t\tsetDragDelay();\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\n \t\tkeyManager.registerKeyListener(this);\n \t}\n \n \t@Override\n \tprotected void shutDown() throws Exception\n \t{\n-\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n+\t\tresetDragDelay();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b61d8823e1b86d3aef3b271042c1690d7506acb"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE0NTQ5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOToyMzo1NlrOGBCrtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOToyMzo1NlrOGBCrtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc0NTcxNg==", "bodyText": "Only the set (and probably the above resetDragDelay()) needs to be on client thread, the rest is fine off.", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r403745716", "createdAt": "2020-04-05T19:23:56Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -84,31 +110,86 @@ public void keyTyped(KeyEvent e)\n \t@Override\n \tpublic void keyPressed(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (config.onShiftOnly() && e.getKeyCode() == KeyEvent.VK_SHIFT)\n \t\t{\n-\t\t\tfinal int delay = config.dragDelay();\n-\t\t\tclient.setInventoryDragDelay(delay);\n-\t\t\tsetBankDragDelay(delay);\n+\t\t\tsetDragDelay();\n \t\t}\n \t}\n \n \t@Override\n \tpublic void keyReleased(KeyEvent e)\n \t{\n-\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT)\n+\t\tif (e.getKeyCode() == KeyEvent.VK_SHIFT && config.onShiftOnly())\n+\t\t{\n+\t\t\tresetDragDelay();\n+\t\t}\n+\t}\n+\n+\t@Subscribe\n+\tpublic void onConfigChanged(ConfigChanged event)\n+\t{\n+\t\tif (event.getGroup().equals(CONFIG_GROUP))\n+\t\t{\n+\t\t\tclientThread.invoke(() ->\n+\t\t\t{\n+\t\t\t\tif (config.onShiftOnly() || inPvp())\n+\t\t\t\t{\n+\t\t\t\t\tresetDragDelay();\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t{\n+\t\t\t\t\tsetDragDelay();\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t}\n+\n+\t@Subscribe\n+\tpublic void onVarbitChanged(VarbitChanged varbitChanged)\n+\t{\n+\t\tboolean currentStatus = inPvp();\n+\n+\t\tif (currentStatus != lastInPvp)\n \t\t{\n-\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n-\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\tif (!currentStatus && !config.onShiftOnly())\n+\t\t\t{\n+\t\t\t\tsetDragDelay();\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tresetDragDelay();\n+\t\t\t}\n+\n+\t\t\tlastInPvp = currentStatus;\n \t\t}\n+\n \t}\n \n \t@Subscribe\n \tpublic void onFocusChanged(FocusChanged focusChanged)\n \t{\n \t\tif (!focusChanged.isFocused())\n \t\t{\n-\t\t\tclient.setInventoryDragDelay(DEFAULT_DELAY);\n-\t\t\tsetBankDragDelay(DEFAULT_DELAY);\n+\t\t\tresetDragDelay();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tclientThread.invokeLater(() ->\n+\t\t\t{\n+\t\t\t\tif (!config.onShiftOnly() && !inPvp())\n+\t\t\t\t{\n+\t\t\t\t\tsetDragDelay();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b61d8823e1b86d3aef3b271042c1690d7506acb"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTE0NTg5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOToyNDowOFrOGBCr5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOToyNDowOFrOGBCr5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc0NTc2Nw==", "bodyText": "This is just lastInPvp ?", "url": "https://github.com/runelite/runelite/pull/11036#discussion_r403745767", "createdAt": "2020-04-05T19:24:08Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/antidrag/AntiDragPlugin.java", "diffHunk": "@@ -125,4 +206,21 @@ private void setBankDragDelay(int delay)\n \t\t}\n \t}\n \n+\tprivate boolean inPvp()\n+\t{\n+\t\treturn client.getVar(Varbits.PVP_SPEC_ORB) == 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b61d8823e1b86d3aef3b271042c1690d7506acb"}, "originalPosition": 183}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3724, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}