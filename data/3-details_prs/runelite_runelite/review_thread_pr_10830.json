{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2ODc3MzUz", "number": 10830, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzoxMTowN1rODiIPrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxNzoxNzoxMFrODiKqrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTEzMjYzOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzoxMTowN1rOFtOsNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzoxMTowN1rOFtOsNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MDkzNQ==", "bodyText": "This doesn't throw any exceptions.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic String valueToString(final Object value) throws ParseException\n          \n          \n            \n            \tpublic String valueToString(final Object value)", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382970935", "createdAt": "2020-02-23T07:11:07Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(String units)\n+\t{\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;\n+\t\t// Using the spinner controls causes the value to have the unit on the end, so remove it\n+\t\tif (text.substring(text.length() - units.length()).equals(units))\n+\t\t{\n+\t\t\ttrimmedText = text.substring(0, text.length() - units.length());\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\ttrimmedText = text;\n+\t\t}\n+\n+\t\ttry\n+\t\t{\n+\t\t\treturn Integer.valueOf(trimmedText);\n+\t\t}\n+\t\tcatch (NumberFormatException e)\n+\t\t{\n+\t\t\tthrow new ParseException(trimmedText + \" is not an integer.\", 0);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String valueToString(final Object value) throws ParseException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "416db3695cbbfaf953e01915b1e90dde95f103af"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTEzNDAwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzoxNDoxNlrOFtOs3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzoxNDoxNlrOFtOs3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MTEwMQ==", "bodyText": "Newline below this\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal String trimmedText;\n          \n          \n            \n            \t\tfinal String trimmedText;", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382971101", "createdAt": "2020-02-23T07:14:16Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(String units)\n+\t{\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "416db3695cbbfaf953e01915b1e90dde95f103af"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTEzNjU5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzoxOTo0NlrOFtOuGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxMTo1NjowMFrOFtQTrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MTQxNw==", "bodyText": "This will throw a StringIndexOutOfBoundsException if you enter a string which is just a number for a field which expects to have units added. Why doesn't this simply check text.endsWith(units)?", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382971417", "createdAt": "2020-02-23T07:19:46Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(String units)\n+\t{\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;\n+\t\t// Using the spinner controls causes the value to have the unit on the end, so remove it\n+\t\tif (text.substring(text.length() - units.length()).equals(units))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "416db3695cbbfaf953e01915b1e90dde95f103af"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk5NzQyMw==", "bodyText": "Honestly didn't know that existed. Wow that makes it a lot cleaner", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382997423", "createdAt": "2020-02-23T11:56:00Z", "author": {"login": "Hydrox6"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(String units)\n+\t{\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;\n+\t\t// Using the spinner controls causes the value to have the unit on the end, so remove it\n+\t\tif (text.substring(text.length() - units.length()).equals(units))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MTQxNw=="}, "originalCommit": {"oid": "416db3695cbbfaf953e01915b1e90dde95f103af"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTEzNjgwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzoyMDoyOFrOFtOuNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNzoyMDoyOFrOFtOuNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MTQ0Nw==", "bodyText": "Why pass units.value() rather than units itself? I'd rather this factory handle as little as possible and pass most of its logic to the formatter class.", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382971447", "createdAt": "2020-02-23T07:20:28Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(String units)\n+\t{\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;\n+\t\t// Using the spinner controls causes the value to have the unit on the end, so remove it\n+\t\tif (text.substring(text.length() - units.length()).equals(units))\n+\t\t{\n+\t\t\ttrimmedText = text.substring(0, text.length() - units.length());\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\ttrimmedText = text;\n+\t\t}\n+\n+\t\ttry\n+\t\t{\n+\t\t\treturn Integer.valueOf(trimmedText);\n+\t\t}\n+\t\tcatch (NumberFormatException e)\n+\t\t{\n+\t\t\tthrow new ParseException(trimmedText + \" is not an integer.\", 0);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String valueToString(final Object value) throws ParseException\n+\t{\n+\t\treturn value + units;\n+\t}\n+}\n+\n+final class UnitFormatterFactory extends JFormattedTextField.AbstractFormatterFactory\n+{\n+\tprivate final HashMap<JFormattedTextField, JFormattedTextField.AbstractFormatter> formatters;\n+\tprivate final Units units;\n+\n+\tUnitFormatterFactory(Units units)\n+\t{\n+\t\tformatters = new HashMap<>();\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic JFormattedTextField.AbstractFormatter getFormatter(final JFormattedTextField tf)\n+\t{\n+\t\tif (!formatters.containsKey(tf))\n+\t\t{\n+\t\t\tformatters.put(tf, new UnitFormatter(units.value()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "416db3695cbbfaf953e01915b1e90dde95f103af"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTUyOTQyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxNzoxNzoxMFrOFtR0yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxNzoxNzoxMFrOFtR0yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyMjI4Mg==", "bodyText": "Whats with all this logic if there is only ever one formatter factory per text field?", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r383022282", "createdAt": "2020-02-23T17:17:10Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(Units units)\n+\t{\n+\t\tthis.units = units.value();\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;\n+\n+\t\t// Using the spinner controls causes the value to have the unit on the end, so remove it\n+\t\tif (text.endsWith(units))\n+\t\t{\n+\t\t\ttrimmedText = text.substring(0, text.length() - units.length());\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\ttrimmedText = text;\n+\t\t}\n+\n+\t\ttry\n+\t\t{\n+\t\t\treturn Integer.valueOf(trimmedText);\n+\t\t}\n+\t\tcatch (NumberFormatException e)\n+\t\t{\n+\t\t\tthrow new ParseException(trimmedText + \" is not an integer.\", 0);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String valueToString(final Object value)\n+\t{\n+\t\treturn value + units;\n+\t}\n+}\n+\n+final class UnitFormatterFactory extends JFormattedTextField.AbstractFormatterFactory\n+{\n+\tprivate final HashMap<JFormattedTextField, JFormattedTextField.AbstractFormatter> formatters;\n+\tprivate final Units units;\n+\n+\tUnitFormatterFactory(Units units)\n+\t{\n+\t\tformatters = new HashMap<>();\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic JFormattedTextField.AbstractFormatter getFormatter(final JFormattedTextField tf)\n+\t{\n+\t\tif (!formatters.containsKey(tf))\n+\t\t{\n+\t\t\tformatters.put(tf, new UnitFormatter(units));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cdd67eb9f539b82eb283d6c73ff684be23f30df"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3820, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}