{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNTA4ODUy", "number": 12033, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMDoyODozN1rOELgkTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1NzozMVrOEYNpUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTAzMzczOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMDoyODozN1rOGtF9Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMDoyODozN1rOGtF9Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzNjcxMA==", "bodyText": "Copy pasta mistake \"tree\"", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r449936710", "createdAt": "2020-07-06T00:28:37Z", "author": {"login": "JesseAusten"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningConfig.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+ * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n+ * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import net.runelite.client.config.Config;\n+import net.runelite.client.config.ConfigGroup;\n+import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Units;\n+\n+@ConfigGroup(\"mining\")\n+public interface MiningConfig extends Config\n+{\n+\t@ConfigItem(\n+\t\tposition = 1,\n+\t\tkeyName = \"statTimeout\",\n+\t\tname = \"Reset stats\",\n+\t\tdescription = \"Configures the time until statistic is reset. Also configures when tree indicator is hidden\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed10dad5ffc78dbb81ace766bc5b3cb0ddd8342f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTAzNjMyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningRocksOverlay.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMDozMToyN1rOGtF-oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNDo0MDoyNFrOGtInJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzNzA1Nw==", "bodyText": "Copyright name and date", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r449937057", "createdAt": "2020-07-06T00:31:27Z", "author": {"login": "JesseAusten"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningRocksOverlay.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright (c) 2019, Adam <Adam@sigterm.info>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed10dad5ffc78dbb81ace766bc5b3cb0ddd8342f"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3NjU5Ng==", "bodyText": "I'm pretty sure this one is actually correct.", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r449976596", "createdAt": "2020-07-06T04:23:04Z", "author": {"login": "makingcomment"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningRocksOverlay.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright (c) 2019, Adam <Adam@sigterm.info>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzNzA1Nw=="}, "originalCommit": {"oid": "ed10dad5ffc78dbb81ace766bc5b3cb0ddd8342f"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4MDE5OQ==", "bodyText": "Follow the commit history. This is Adam's work. I renamed the class.", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r449980199", "createdAt": "2020-07-06T04:40:24Z", "author": {"login": "JZomDev"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningRocksOverlay.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright (c) 2019, Adam <Adam@sigterm.info>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzNzA1Nw=="}, "originalCommit": {"oid": "ed10dad5ffc78dbb81ace766bc5b3cb0ddd8342f"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODk5MTQyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDozNjoxMFrOGtrTtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDozNjoxMFrOGtrTtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0ODY2MA==", "bodyText": "The positions can be omitted since these are already sorted in this order alphabetically.", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r450548660", "createdAt": "2020-07-07T00:36:10Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningConfig.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+ * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n+ * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import net.runelite.client.config.Config;\n+import net.runelite.client.config.ConfigGroup;\n+import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Units;\n+\n+@ConfigGroup(\"mining\")\n+public interface MiningConfig extends Config\n+{\n+\t@ConfigItem(\n+\t\tposition = 1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9425e5ae7f10b680b8909837481c490609bab69"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTAwMjQ0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0Mjo0NlrOGtrZ5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0Mjo0NlrOGtrZ5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU1MDI0Nw==", "bodyText": "This wording needs work. Prepending the description with \"Configures\" doesn't make it more clear or concise. For instance, I'd write the following for this config: \"Duration the mining indicator and session stats are displayed before being reset.\"", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r450550247", "createdAt": "2020-07-07T00:42:46Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningConfig.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+ * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n+ * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import net.runelite.client.config.Config;\n+import net.runelite.client.config.ConfigGroup;\n+import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Units;\n+\n+@ConfigGroup(\"mining\")\n+public interface MiningConfig extends Config\n+{\n+\t@ConfigItem(\n+\t\tposition = 1,\n+\t\tkeyName = \"statTimeout\",\n+\t\tname = \"Reset stats\",\n+\t\tdescription = \"Configures the time until statistic is reset. Also configures when mining indicator is hidden\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9425e5ae7f10b680b8909837481c490609bab69"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTAwNjk5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0NToyMlrOGtrcfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0NToyMlrOGtrcfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU1MDkwOQ==", "bodyText": "Users can check configs to discover they can enable one or the other, no need to explicitly state that here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tdescription = \"Show mining statistics and/or ore respawn timers\",\n          \n          \n            \n            \tdescription = \"Show mining statistics and ore respawn timers\",", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r450550909", "createdAt": "2020-07-07T00:45:22Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java", "diffHunk": "@@ -42,27 +47,41 @@\n import static net.runelite.api.ObjectID.ORE_VEIN_26662;\n import static net.runelite.api.ObjectID.ORE_VEIN_26663;\n import static net.runelite.api.ObjectID.ORE_VEIN_26664;\n+import net.runelite.api.Player;\n import net.runelite.api.WallObject;\n import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.events.AnimationChanged;\n+import net.runelite.api.events.ChatMessage;\n import net.runelite.api.events.GameObjectDespawned;\n import net.runelite.api.events.GameObjectSpawned;\n import net.runelite.api.events.GameStateChanged;\n import net.runelite.api.events.GameTick;\n import net.runelite.api.events.WallObjectSpawned;\n+import net.runelite.client.config.ConfigManager;\n import net.runelite.client.eventbus.Subscribe;\n import net.runelite.client.plugins.Plugin;\n+import net.runelite.client.plugins.PluginDependency;\n import net.runelite.client.plugins.PluginDescriptor;\n+import net.runelite.client.plugins.xptracker.XpTrackerPlugin;\n import net.runelite.client.ui.overlay.OverlayManager;\n \n @PluginDescriptor(\n \tname = \"Mining\",\n-\tdescription = \"Show ore respawn timers\",\n-\ttags = {\"overlay\", \"skilling\", \"timers\"},\n+\tdescription = \"Show mining statistics and/or ore respawn timers\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9425e5ae7f10b680b8909837481c490609bab69"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTAwODkyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0NjoxN1rOGtrdcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0NjoxN1rOGtrdcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU1MTE1NA==", "bodyText": "Plugin search already checks the plugin name and description for terms, this doesn't need to be defined here as well.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \ttags = {\"overlay\", \"skilling\", \"timers\", \"mining\"},\n          \n          \n            \n            \ttags = {\"overlay\", \"skilling\", \"timers\"},", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r450551154", "createdAt": "2020-07-07T00:46:17Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java", "diffHunk": "@@ -42,27 +47,41 @@\n import static net.runelite.api.ObjectID.ORE_VEIN_26662;\n import static net.runelite.api.ObjectID.ORE_VEIN_26663;\n import static net.runelite.api.ObjectID.ORE_VEIN_26664;\n+import net.runelite.api.Player;\n import net.runelite.api.WallObject;\n import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.events.AnimationChanged;\n+import net.runelite.api.events.ChatMessage;\n import net.runelite.api.events.GameObjectDespawned;\n import net.runelite.api.events.GameObjectSpawned;\n import net.runelite.api.events.GameStateChanged;\n import net.runelite.api.events.GameTick;\n import net.runelite.api.events.WallObjectSpawned;\n+import net.runelite.client.config.ConfigManager;\n import net.runelite.client.eventbus.Subscribe;\n import net.runelite.client.plugins.Plugin;\n+import net.runelite.client.plugins.PluginDependency;\n import net.runelite.client.plugins.PluginDescriptor;\n+import net.runelite.client.plugins.xptracker.XpTrackerPlugin;\n import net.runelite.client.ui.overlay.OverlayManager;\n \n @PluginDescriptor(\n \tname = \"Mining\",\n-\tdescription = \"Show ore respawn timers\",\n-\ttags = {\"overlay\", \"skilling\", \"timers\"},\n+\tdescription = \"Show mining statistics and/or ore respawn timers\",\n+\ttags = {\"overlay\", \"skilling\", \"timers\", \"mining\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9425e5ae7f10b680b8909837481c490609bab69"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTAxMTEwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/mining/MiningPluginTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0Nzo0M1rOGtreug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0Nzo0M1rOGtreug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU1MTQ4Mg==", "bodyText": "Since each of these test methods contains the same body, move the messages into a list and run these tests against each message from the list in a loop.", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r450551482", "createdAt": "2020-07-07T00:47:43Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/mining/MiningPluginTest.java", "diffHunk": "@@ -0,0 +1,174 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import com.google.inject.Guice;\n+import com.google.inject.testing.fieldbinder.Bind;\n+import com.google.inject.testing.fieldbinder.BoundFieldModule;\n+import javax.inject.Inject;\n+import net.runelite.api.ChatMessageType;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.ChatMessage;\n+import net.runelite.client.Notifier;\n+import net.runelite.client.ui.overlay.OverlayManager;\n+import static org.junit.Assert.assertNotNull;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class MiningPluginTest\n+{\n+\t@Inject\n+\tMiningPlugin miningPlugin;\n+\n+\t@Mock\n+\t@Bind\n+\tMiningConfig miningConfig;\n+\n+\t@Mock\n+\t@Bind\n+\tNotifier notifier;\n+\n+\t@Mock\n+\t@Bind\n+\tClient client;\n+\n+\t@Mock\n+\t@Bind\n+\tMiningOverlay miningOverlay;\n+\n+\t@Mock\n+\t@Bind\n+\tMiningRocksOverlay miningRocksOverlay;\n+\n+\t@Mock\n+\t@Bind\n+\tOverlayManager overlayManager;\n+\n+\t@Before\n+\tpublic void before()\n+\t{\n+\t\tGuice.createInjector(BoundFieldModule.of(this)).injectMembers(this);\n+\t}\n+\n+\t@Test\n+\tpublic void testClay()\n+\t{\n+\t\tChatMessage chatMessage = new ChatMessage(null, ChatMessageType.SPAM, \"\", \"You manage to mine some clay.\", \"\", 0);\n+\t\tminingPlugin.onChatMessage(chatMessage);\n+\t\tassertNotNull(miningPlugin.getSession());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9425e5ae7f10b680b8909837481c490609bab69"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTAxMzk0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/Pickaxe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0OTozN1rOGtrgdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDo0OTozN1rOGtrgdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU1MTkyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tstatic Pickaxe findPickaxeyAnimId(int animId)\n          \n          \n            \n            \tstatic Pickaxe fromAnimation(int animId)", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r450551926", "createdAt": "2020-07-07T00:49:37Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/Pickaxe.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import static net.runelite.api.AnimationID.MINING_3A_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_ADAMANT_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_BLACK_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_BRONZE_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_CRYSTAL_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_DRAGON_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_DRAGON_PICKAXE_OR;\n+import static net.runelite.api.AnimationID.MINING_DRAGON_PICKAXE_UPGRADED;\n+import static net.runelite.api.AnimationID.MINING_GILDED_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_INFERNAL_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_IRON_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_MITHRIL_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_RUNE_PICKAXE;\n+import static net.runelite.api.AnimationID.MINING_STEEL_PICKAXE;\n+import static net.runelite.api.ItemID.ADAMANT_PICKAXE;\n+import static net.runelite.api.ItemID.BLACK_PICKAXE;\n+import static net.runelite.api.ItemID.BRONZE_PICKAXE;\n+import static net.runelite.api.ItemID.CRYSTAL_PICKAXE;\n+import static net.runelite.api.ItemID.DRAGON_PICKAXE;\n+import static net.runelite.api.ItemID.DRAGON_PICKAXEOR;\n+import static net.runelite.api.ItemID.DRAGON_PICKAXE_12797;\n+import static net.runelite.api.ItemID.GILDED_PICKAXE;\n+import static net.runelite.api.ItemID.INFERNAL_PICKAXE;\n+import static net.runelite.api.ItemID.IRON_PICKAXE;\n+import static net.runelite.api.ItemID.MITHRIL_PICKAXE;\n+import static net.runelite.api.ItemID.RUNE_PICKAXE;\n+import static net.runelite.api.ItemID.STEEL_PICKAXE;\n+import static net.runelite.api.ItemID._3RD_AGE_PICKAXE;\n+import net.runelite.api.Player;\n+\n+@AllArgsConstructor\n+@Getter\n+enum Pickaxe\n+{\n+\tBRONZE(MINING_BRONZE_PICKAXE, BRONZE_PICKAXE),\n+\tIRON(MINING_IRON_PICKAXE, IRON_PICKAXE),\n+\tSTEEL(MINING_STEEL_PICKAXE, STEEL_PICKAXE),\n+\tBLACK(MINING_BLACK_PICKAXE, BLACK_PICKAXE),\n+\tMITHRIL(MINING_MITHRIL_PICKAXE, MITHRIL_PICKAXE),\n+\tADAMANT(MINING_ADAMANT_PICKAXE, ADAMANT_PICKAXE),\n+\tRUNE(MINING_RUNE_PICKAXE, RUNE_PICKAXE),\n+\tGILDED(MINING_GILDED_PICKAXE, GILDED_PICKAXE),\n+\tDRAGON(MINING_DRAGON_PICKAXE, DRAGON_PICKAXE),\n+\tDRAGON_OR(MINING_DRAGON_PICKAXE_OR, DRAGON_PICKAXEOR),\n+\tDRAGON_UPGRADED(MINING_DRAGON_PICKAXE_UPGRADED, DRAGON_PICKAXE_12797),\n+\tINFERNAL(MINING_INFERNAL_PICKAXE, INFERNAL_PICKAXE),\n+\tTHIRDAGE(MINING_3A_PICKAXE, _3RD_AGE_PICKAXE),\n+\tCRYSTAL(MINING_CRYSTAL_PICKAXE, CRYSTAL_PICKAXE);\n+\n+\tprivate final Integer animId;\n+\tprivate final Integer itemId;\n+\n+\tprivate static final Map<Integer, Pickaxe> PICKAXE_ANIM_IDS;\n+\n+\tstatic\n+\t{\n+\t\tImmutableMap.Builder<Integer, Pickaxe> builder = new ImmutableMap.Builder<>();\n+\n+\t\tfor (Pickaxe pickaxe : values())\n+\t\t{\n+\t\t\tbuilder.put(pickaxe.animId, pickaxe);\n+\t\t}\n+\n+\t\tPICKAXE_ANIM_IDS = builder.build();\n+\t}\n+\n+\tboolean matchesMiningAnimation(final Player player)\n+\t{\n+\t\treturn player != null && animId == player.getAnimation();\n+\t}\n+\n+\tstatic Pickaxe findPickaxeyAnimId(int animId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9425e5ae7f10b680b8909837481c490609bab69"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTA5MTIyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/Pickaxe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMTozNTo0NlrOGtsOdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMTozNTo0NlrOGtsOdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU2MzcwMw==", "bodyText": "Imports should be in a single block, no blank lines included", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r450563703", "createdAt": "2020-07-07T01:35:46Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/Pickaxe.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import static net.runelite.api.AnimationID.MINING_3A_PICKAXE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9425e5ae7f10b680b8909837481c490609bab69"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTA5MjM5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/Pickaxe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMTozNjoyMFrOGtsPJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMTozNjoyMFrOGtsPJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU2Mzg3Ng==", "bodyText": "You can do a star import for these animation IDs as well", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r450563876", "createdAt": "2020-07-07T01:36:20Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/Pickaxe.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import static net.runelite.api.AnimationID.MINING_3A_PICKAXE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9425e5ae7f10b680b8909837481c490609bab69"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTA5MjY0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/Rock.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMTozNjoyOVrOGtsPUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMTozNjoyOVrOGtsPUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU2MzkyMA==", "bodyText": "Don't un-star these ObjectID imports.", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r450563920", "createdAt": "2020-07-07T01:36:29Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/Rock.java", "diffHunk": "@@ -29,8 +29,44 @@\n import java.util.Map;\n import lombok.AccessLevel;\n import lombok.Getter;\n-import static net.runelite.api.ObjectID.*;\n-import static net.runelite.client.util.RSTimeUnit.*;\n+import static net.runelite.api.ObjectID.ASH_PILE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9425e5ae7f10b680b8909837481c490609bab69"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODIyNjc3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningOverlay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1MToxOVrOHAbPhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1MToxOVrOHAbPhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwODM4OQ==", "bodyText": "The config check should be after the session check as it is more expensive / forces the config key to be hot in the config cache", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r470208389", "createdAt": "2020-08-13T19:51:19Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningOverlay.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import javax.inject.Inject;\n+import net.runelite.api.Client;\n+import net.runelite.api.MenuAction;\n+import net.runelite.api.Skill;\n+import net.runelite.client.plugins.xptracker.XpTrackerService;\n+import static net.runelite.client.ui.overlay.OverlayManager.OPTION_CONFIGURE;\n+import net.runelite.client.ui.overlay.OverlayMenuEntry;\n+import net.runelite.client.ui.overlay.OverlayPanel;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.components.LineComponent;\n+import net.runelite.client.ui.overlay.components.TitleComponent;\n+\n+class MiningOverlay extends OverlayPanel\n+{\n+\tstatic final String MINING_RESET = \"Reset\";\n+\n+\tprivate final Client client;\n+\tprivate final MiningPlugin plugin;\n+\tprivate final MiningConfig config;\n+\tprivate final XpTrackerService xpTrackerService;\n+\n+\t@Inject\n+\tprivate MiningOverlay(final Client client, final MiningPlugin plugin, final MiningConfig config, XpTrackerService xpTrackerService)\n+\t{\n+\t\tsuper(plugin);\n+\t\tsetPosition(OverlayPosition.TOP_LEFT);\n+\t\tthis.client = client;\n+\t\tthis.plugin = plugin;\n+\t\tthis.config = config;\n+\t\tthis.xpTrackerService = xpTrackerService;\n+\t\tgetMenuEntries().add(new OverlayMenuEntry(MenuAction.RUNELITE_OVERLAY_CONFIG, OPTION_CONFIGURE, \"Mining overlay\"));\n+\t\tgetMenuEntries().add(new OverlayMenuEntry(MenuAction.RUNELITE_OVERLAY, MINING_RESET, \"Mining overlay\"));\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(Graphics2D graphics)\n+\t{\n+\t\tif (!config.showMiningStats())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a999c8c586b3213295cfba588c443ab6402f4eac"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODIzMjg3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningSession.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1MzoxMlrOHAbTMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1MzoxMlrOHAbTMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwOTMyOQ==", "bodyText": "@Getter", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r470209329", "createdAt": "2020-08-13T19:53:12Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningSession.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import java.time.Instant;\n+\n+class MiningSession\n+{\n+\tprivate Instant lastMined;\n+\n+\tvoid setLastMined()\n+\t{\n+\t\tlastMined = Instant.now();\n+\t}\n+\n+\tInstant getLastMined()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a999c8c586b3213295cfba588c443ab6402f4eac"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODIzODQyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningOverlay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1NDo0OFrOHAbWhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1NDo0OFrOHAbWhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMDE4Mw==", "bodyText": "This is missing the reset handler", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r470210183", "createdAt": "2020-08-13T19:54:48Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningOverlay.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import javax.inject.Inject;\n+import net.runelite.api.Client;\n+import net.runelite.api.MenuAction;\n+import net.runelite.api.Skill;\n+import net.runelite.client.plugins.xptracker.XpTrackerService;\n+import static net.runelite.client.ui.overlay.OverlayManager.OPTION_CONFIGURE;\n+import net.runelite.client.ui.overlay.OverlayMenuEntry;\n+import net.runelite.client.ui.overlay.OverlayPanel;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.components.LineComponent;\n+import net.runelite.client.ui.overlay.components.TitleComponent;\n+\n+class MiningOverlay extends OverlayPanel\n+{\n+\tstatic final String MINING_RESET = \"Reset\";\n+\n+\tprivate final Client client;\n+\tprivate final MiningPlugin plugin;\n+\tprivate final MiningConfig config;\n+\tprivate final XpTrackerService xpTrackerService;\n+\n+\t@Inject\n+\tprivate MiningOverlay(final Client client, final MiningPlugin plugin, final MiningConfig config, XpTrackerService xpTrackerService)\n+\t{\n+\t\tsuper(plugin);\n+\t\tsetPosition(OverlayPosition.TOP_LEFT);\n+\t\tthis.client = client;\n+\t\tthis.plugin = plugin;\n+\t\tthis.config = config;\n+\t\tthis.xpTrackerService = xpTrackerService;\n+\t\tgetMenuEntries().add(new OverlayMenuEntry(MenuAction.RUNELITE_OVERLAY_CONFIG, OPTION_CONFIGURE, \"Mining overlay\"));\n+\t\tgetMenuEntries().add(new OverlayMenuEntry(MenuAction.RUNELITE_OVERLAY, MINING_RESET, \"Mining overlay\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a999c8c586b3213295cfba588c443ab6402f4eac"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODI0MjAwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/mining/MiningPluginTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1NTozOFrOHAbYig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1NTozOFrOHAbYig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMDY5OA==", "bodyText": "Only direct dependencies of the plugin should be mocked, this is not one of them.", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r470210698", "createdAt": "2020-08-13T19:55:38Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/mining/MiningPluginTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.inject.Guice;\n+import com.google.inject.testing.fieldbinder.Bind;\n+import com.google.inject.testing.fieldbinder.BoundFieldModule;\n+import javax.inject.Inject;\n+import net.runelite.api.ChatMessageType;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.ChatMessage;\n+import net.runelite.client.Notifier;\n+import net.runelite.client.ui.overlay.OverlayManager;\n+import static org.junit.Assert.assertNotNull;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class MiningPluginTest\n+{\n+\t@Inject\n+\tMiningPlugin miningPlugin;\n+\n+\t@Mock\n+\t@Bind\n+\tMiningConfig miningConfig;\n+\n+\t@Mock\n+\t@Bind\n+\tNotifier notifier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432800701df854385bc1019e4a210f990effc85e"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODI0ODQ4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/mining/MiningPluginTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1NzozMVrOHAbcYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTo1NzozMVrOHAbcYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxMTY4Mw==", "bodyText": "You could just make one test per message, it would avoid bugs related to keeping state around in the plugin on accident. Though this does look correct currently.", "url": "https://github.com/runelite/runelite/pull/12033#discussion_r470211683", "createdAt": "2020-08-13T19:57:31Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/mining/MiningPluginTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright (c) 2020, Jordan Zomerlei <https://github.com/JZomerlei>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.mining;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.inject.Guice;\n+import com.google.inject.testing.fieldbinder.Bind;\n+import com.google.inject.testing.fieldbinder.BoundFieldModule;\n+import javax.inject.Inject;\n+import net.runelite.api.ChatMessageType;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.ChatMessage;\n+import net.runelite.client.Notifier;\n+import net.runelite.client.ui.overlay.OverlayManager;\n+import static org.junit.Assert.assertNotNull;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class MiningPluginTest\n+{\n+\t@Inject\n+\tMiningPlugin miningPlugin;\n+\n+\t@Mock\n+\t@Bind\n+\tMiningConfig miningConfig;\n+\n+\t@Mock\n+\t@Bind\n+\tNotifier notifier;\n+\n+\t@Mock\n+\t@Bind\n+\tClient client;\n+\n+\t@Mock\n+\t@Bind\n+\tMiningOverlay miningOverlay;\n+\n+\t@Mock\n+\t@Bind\n+\tMiningRocksOverlay miningRocksOverlay;\n+\n+\t@Mock\n+\t@Bind\n+\tOverlayManager overlayManager;\n+\n+\tImmutableList<String> miningMessages = ImmutableList.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432800701df854385bc1019e4a210f990effc85e"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3409, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}