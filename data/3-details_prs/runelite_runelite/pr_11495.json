{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0ODEzOTQ4", "number": 11495, "title": "timetracking: add farming contract functionality", "bodyText": "Closes #7634\n\n\n\nAllotment\nBerries\nFlower\nHerbs\nSpecial\nTrees\n\n\n\n\nCabbages\nCadava berries\nLimpwurt roots\nAvantoe\nCactus\nApple tree\n\n\nOnions\nDwellberries\nMarigolds\nCadantine\nPotato cacti\nBanana tree\n\n\nPotatoes\nJangerberries\nNasturtiums\nDwarf weed\n\u00a0\nCelastrus tree\n\n\nSnape grass\nPoison ivy berries\nRosemary\nGuam\n\u00a0\nCurry tree\n\n\nStrawberries\nRedberries\nWhite lillies\nHarralander\n\u00a0\nDragonfruit tree\n\n\nSweetcorn\nWhite berries\nWoad\nIrit\n\u00a0\nMagic tree\n\n\nTomatoes\n\u00a0\n\u00a0\nKwuarm\n\u00a0\nMaple tree\n\n\nWatermelons\n\u00a0\n\u00a0\nLantadyme\n\u00a0\nOak tree\n\n\n\u00a0\n\u00a0\n\u00a0\nMarrentill\n\u00a0\nOrange tree\n\n\n\u00a0\n\u00a0\n\u00a0\nRanarr\n\u00a0\nPalm tree\n\n\n\u00a0\n\u00a0\n\u00a0\nSnapdragon\n\u00a0\nPapaya tree\n\n\n\u00a0\n\u00a0\n\u00a0\nTarromin\n\u00a0\nPineapple plant\n\n\n\u00a0\n\u00a0\n\u00a0\nToadflax\n\u00a0\nRedwood tree\n\n\n\u00a0\n\u00a0\n\u00a0\nTorstol\n\u00a0\nWillow tree\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nYew tree", "createdAt": "2020-05-07T17:10:32Z", "url": "https://github.com/runelite/runelite/pull/11495", "merged": true, "mergeCommit": {"oid": "db3b32c09380d2d7b197e4f468d068312243f05e"}, "closed": true, "closedAt": "2020-06-08T22:02:06Z", "author": {"login": "melkypie"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfC1t0gFqTQwNzc2NzA4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpXPT3gBqjM0MjIwNzI3Mzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NzY3MDg3", "url": "https://github.com/runelite/runelite/pull/11495#pullrequestreview-407767087", "createdAt": "2020-05-07T19:21:44Z", "commit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOToyMTo0NFrOGSM1ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOTo1MDoxM1rOGSNzKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczNzkxNA==", "bodyText": "Precompile this", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421737914", "createdAt": "2020-05-07T19:21:44Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczODEyNg==", "bodyText": "We need to grow a NullNpcID instead of having random npc constants in plugins", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421738126", "createdAt": "2020-05-07T19:22:07Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\tprivate final Client client;\n+\tprivate final ItemManager itemManager;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final TimeTrackingPlugin plugin;\n+\tprivate final FarmingWorld farmingWorld;\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final InfoBoxManager infoBoxManager;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate FarmingContract contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\t@Inject\n+\tpublic FarmingContractManager(\n+\t\t@Nonnull Client client,\n+\t\t@Nonnull ItemManager itemManager,\n+\t\t@Nonnull TimeTrackingConfig config,\n+\t\t@Nonnull TimeTrackingPlugin plugin,\n+\t\t@Nonnull FarmingWorld farmingWorld,\n+\t\t@Nonnull FarmingTracker farmingTracker,\n+\t\t@Nonnull InfoBoxManager infoBoxManager,\n+\t\t@Nonnull ConfigManager configManager\n+\t)\n+\t{\n+\t\tthis.client = client;\n+\t\tthis.itemManager = itemManager;\n+\t\tthis.config = config;\n+\t\tthis.plugin = plugin;\n+\t\tthis.farmingWorld = farmingWorld;\n+\t\tthis.farmingTracker = farmingTracker;\n+\t\tthis.infoBoxManager = infoBoxManager;\n+\t\tthis.configManager = configManager;\n+\t}\n+\n+\tpublic void setContract(@Nullable FarmingContract contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getName().equalsIgnoreCase(FARMING_REGION_NAME) &&\n+\t\t\tcontract.getPatchImplementation() == patch.getImplementation() &&\n+\t\t\tpatchPrediction != null &&\n+\t\t\t(patchPrediction.getProduce().equals(contract.getProduce()) || summary == SummaryState.EMPTY))\n+\t\t{\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void loadContractFromConfig()\n+\t{\n+\t\tcontract = getStoredContract();\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean updateData(WorldPoint loc)\n+\t{\n+\t\tSummaryState oldSummary = summary;\n+\n+\t\thandleContractState();\n+\t\tif (loc.getRegionID() == FARMING_GUILD_REGION_ID)\n+\t\t{\n+\t\t\thandleGuildmasterJaneWidgetDialog();\n+\t\t\thandleInfoBox();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif (infoBox != null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldSummary != summary;\n+\t}\n+\n+\tprivate void handleInfoBox()\n+\t{\n+\t\tif (infoBox != null)\n+\t\t{\n+\t\t\tif (contract == null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t\telse if (infoBox.getContract() != contract)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t\t}\n+\t\t}\n+\t\telse if (contract != null)\n+\t\t{\n+\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t}\n+\t}\n+\n+\tprivate void handleGuildmasterJaneWidgetDialog()\n+\t{\n+\t\tWidget npcDialog = client.getWidget(WidgetInfo.DIALOG_NPC_HEAD_MODEL);\n+\n+\t\tif (npcDialog == null || npcDialog.getModelId() != GUILDMASTER_JANE_WIDGET_MODEL_ID)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczOTQ2OA==", "bodyText": ";", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421739468", "createdAt": "2020-05-07T19:24:36Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\tprivate final Client client;\n+\tprivate final ItemManager itemManager;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final TimeTrackingPlugin plugin;\n+\tprivate final FarmingWorld farmingWorld;\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final InfoBoxManager infoBoxManager;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate FarmingContract contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\t@Inject\n+\tpublic FarmingContractManager(\n+\t\t@Nonnull Client client,\n+\t\t@Nonnull ItemManager itemManager,\n+\t\t@Nonnull TimeTrackingConfig config,\n+\t\t@Nonnull TimeTrackingPlugin plugin,\n+\t\t@Nonnull FarmingWorld farmingWorld,\n+\t\t@Nonnull FarmingTracker farmingTracker,\n+\t\t@Nonnull InfoBoxManager infoBoxManager,\n+\t\t@Nonnull ConfigManager configManager\n+\t)\n+\t{\n+\t\tthis.client = client;\n+\t\tthis.itemManager = itemManager;\n+\t\tthis.config = config;\n+\t\tthis.plugin = plugin;\n+\t\tthis.farmingWorld = farmingWorld;\n+\t\tthis.farmingTracker = farmingTracker;\n+\t\tthis.infoBoxManager = infoBoxManager;\n+\t\tthis.configManager = configManager;\n+\t}\n+\n+\tpublic void setContract(@Nullable FarmingContract contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getName().equalsIgnoreCase(FARMING_REGION_NAME) &&\n+\t\t\tcontract.getPatchImplementation() == patch.getImplementation() &&\n+\t\t\tpatchPrediction != null &&\n+\t\t\t(patchPrediction.getProduce().equals(contract.getProduce()) || summary == SummaryState.EMPTY))\n+\t\t{\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void loadContractFromConfig()\n+\t{\n+\t\tcontract = getStoredContract();\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean updateData(WorldPoint loc)\n+\t{\n+\t\tSummaryState oldSummary = summary;\n+\n+\t\thandleContractState();\n+\t\tif (loc.getRegionID() == FARMING_GUILD_REGION_ID)\n+\t\t{\n+\t\t\thandleGuildmasterJaneWidgetDialog();\n+\t\t\thandleInfoBox();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif (infoBox != null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldSummary != summary;\n+\t}\n+\n+\tprivate void handleInfoBox()\n+\t{\n+\t\tif (infoBox != null)\n+\t\t{\n+\t\t\tif (contract == null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t\telse if (infoBox.getContract() != contract)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t\t}\n+\t\t}\n+\t\telse if (contract != null)\n+\t\t{\n+\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t}\n+\t}\n+\n+\tprivate void handleGuildmasterJaneWidgetDialog()\n+\t{\n+\t\tWidget npcDialog = client.getWidget(WidgetInfo.DIALOG_NPC_HEAD_MODEL);\n+\n+\t\tif (npcDialog == null || npcDialog.getModelId() != GUILDMASTER_JANE_WIDGET_MODEL_ID)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString dialogText = Text.removeTags(client.getWidget(WidgetInfo.DIALOG_NPC_TEXT).getText());\n+\t\tlog.debug(dialogText + \" \");\n+\n+\t\tif (dialogText.equals(CONTRACT_REWARDED))\n+\t\t{\n+\t\t\tsetContract(null);\n+\t\t\t;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczOTgwOQ==", "bodyText": "@Nonnull is unneeded here", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421739809", "createdAt": "2020-05-07T19:25:14Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\tprivate final Client client;\n+\tprivate final ItemManager itemManager;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final TimeTrackingPlugin plugin;\n+\tprivate final FarmingWorld farmingWorld;\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final InfoBoxManager infoBoxManager;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate FarmingContract contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\t@Inject\n+\tpublic FarmingContractManager(\n+\t\t@Nonnull Client client,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczOTg4Mw==", "bodyText": "@Nonnull is unneeded here", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421739883", "createdAt": "2020-05-07T19:25:23Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractInfoBox.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.awt.Color;\n+import java.awt.image.BufferedImage;\n+import javax.annotation.Nonnull;\n+import lombok.Getter;\n+import net.runelite.client.plugins.Plugin;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.ui.ColorScheme;\n+import net.runelite.client.ui.overlay.infobox.InfoBox;\n+import net.runelite.client.util.ColorUtil;\n+import net.runelite.client.util.Text;\n+\n+class FarmingContractInfoBox extends InfoBox\n+{\n+\t@Getter\n+\tprivate final FarmingContract contract;\n+\tprivate final FarmingContractManager manager;\n+\tprivate final TimeTrackingConfig config;\n+\n+\tFarmingContractInfoBox(@Nonnull BufferedImage image, @Nonnull Plugin plugin, @Nonnull FarmingContract contract, @Nonnull TimeTrackingConfig config, @Nonnull FarmingContractManager manager)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0MDAxOA==", "bodyText": "Why isn't this just part of Produce?", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421740018", "createdAt": "2020-05-07T19:25:38Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContract.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+enum FarmingContract", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0MDQ2NA==", "bodyText": "its probably more clear to just use a BooleanPredicate than this", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421740464", "createdAt": "2020-05-07T19:26:23Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/OverviewItemPanel.java", "diffHunk": "@@ -43,11 +43,27 @@\n \n class OverviewItemPanel extends JPanel\n {\n+\tinterface TabSwitch\n+\t{\n+\t\tvoid selected();\n+\t}\n+\n+\tinterface Selectable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0MDk5Ng==", "bodyText": "this can just be a Runnable instead", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421740996", "createdAt": "2020-05-07T19:27:21Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/OverviewItemPanel.java", "diffHunk": "@@ -43,11 +43,27 @@\n \n class OverviewItemPanel extends JPanel\n {\n+\tinterface TabSwitch", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0MTQ0Ng==", "bodyText": "tabSwitch -> onTabSwitched", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421741446", "createdAt": "2020-05-07T19:28:11Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/OverviewItemPanel.java", "diffHunk": "@@ -56,16 +72,23 @@\n \n \tOverviewItemPanel(ItemManager itemManager, TimeTrackingPanel pluginPanel, Tab tab, String title)\n \t{\n+\t\tthis(itemManager, () -> pluginPanel.switchTab(tab), () -> true, tab.getItemID(), title);\n+\t}\n+\n+\tOverviewItemPanel(ItemManager itemManager, TabSwitch tabSwitch, Selectable selectable, int iconItemID, String title)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0Mjc1OQ==", "bodyText": "static + move to the top of the class", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421742759", "createdAt": "2020-05-07T19:30:37Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingPlugin.java", "diffHunk": "@@ -96,6 +102,7 @@\n \n \tprivate WorldPoint lastTickLocation;\n \tprivate boolean lastTickPostLogin;\n+\tprivate final String CONTRACT_COMPLETED = \"You've completed a Farming Guild Contract. You should return to Guildmaster Jane.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0MzU5Nw==", "bodyText": "this is unused", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421743597", "createdAt": "2020-05-07T19:32:12Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0NTQ2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tFarmingContractManager manager\n          \n          \n            \n            \t\tFarmingContractManager farmingContractManager", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421745468", "createdAt": "2020-05-07T19:35:33Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTabPanel.java", "diffHunk": "@@ -40,25 +41,29 @@\n import net.runelite.client.plugins.timetracking.TimeablePanel;\n import net.runelite.client.ui.ColorScheme;\n import net.runelite.client.ui.FontManager;\n+import net.runelite.client.util.Text;\n \n public class FarmingTabPanel extends TabContentPanel\n {\n \tprivate final FarmingTracker farmingTracker;\n \tprivate final ItemManager itemManager;\n \tprivate final TimeTrackingConfig config;\n \tprivate final List<TimeablePanel<FarmingPatch>> patchPanels;\n+\tprivate final FarmingContractManager farmingContractManager;\n \n \tFarmingTabPanel(\n \t\tFarmingTracker farmingTracker,\n \t\tItemManager itemManager,\n \t\tTimeTrackingConfig config,\n-\t\tSet<FarmingPatch> patches\n+\t\tSet<FarmingPatch> patches,\n+\t\tFarmingContractManager manager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0NTg2Nw==", "bodyText": "remove this newline", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421745867", "createdAt": "2020-05-07T19:36:18Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/util/Text.java", "diffHunk": "@@ -206,4 +210,49 @@ public static boolean matchesSearchTerms(String[] searchTerms, final Collection<\n \t\t}\n \t\treturn true;\n \t}\n+\n+\t/**\n+\t * Returns a formatted time string\n+\t *\n+\t * @param remainingSeconds\n+\t * @param useRelativeTime\n+\t * @return a relative time string (1d 2h 3m) if useRelativeTime is true, date time string (Sunday at 3:05) (at 17:30) if useRelativeTime is false\n+\t */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0NjAyNA==", "bodyText": "why did you move this?", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421746024", "createdAt": "2020-05-07T19:36:38Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/util/Text.java", "diffHunk": "@@ -206,4 +210,49 @@ public static boolean matchesSearchTerms(String[] searchTerms, final Collection<\n \t\t}\n \t\treturn true;\n \t}\n+\n+\t/**\n+\t * Returns a formatted time string\n+\t *\n+\t * @param remainingSeconds\n+\t * @param useRelativeTime\n+\t * @return a relative time string (1d 2h 3m) if useRelativeTime is true, date time string (Sunday at 3:05) (at 17:30) if useRelativeTime is false\n+\t */\n+\n+\tpublic static String getFormattedEstimate(long remainingSeconds, boolean useRelativeTime)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc0NzA5Mw==", "bodyText": "just store this in FarmingWorld and add a getter so you don't have to iterate", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421747093", "createdAt": "2020-05-07T19:38:39Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\tprivate final Client client;\n+\tprivate final ItemManager itemManager;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final TimeTrackingPlugin plugin;\n+\tprivate final FarmingWorld farmingWorld;\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final InfoBoxManager infoBoxManager;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate FarmingContract contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\t@Inject\n+\tpublic FarmingContractManager(\n+\t\t@Nonnull Client client,\n+\t\t@Nonnull ItemManager itemManager,\n+\t\t@Nonnull TimeTrackingConfig config,\n+\t\t@Nonnull TimeTrackingPlugin plugin,\n+\t\t@Nonnull FarmingWorld farmingWorld,\n+\t\t@Nonnull FarmingTracker farmingTracker,\n+\t\t@Nonnull InfoBoxManager infoBoxManager,\n+\t\t@Nonnull ConfigManager configManager\n+\t)\n+\t{\n+\t\tthis.client = client;\n+\t\tthis.itemManager = itemManager;\n+\t\tthis.config = config;\n+\t\tthis.plugin = plugin;\n+\t\tthis.farmingWorld = farmingWorld;\n+\t\tthis.farmingTracker = farmingTracker;\n+\t\tthis.infoBoxManager = infoBoxManager;\n+\t\tthis.configManager = configManager;\n+\t}\n+\n+\tpublic void setContract(@Nullable FarmingContract contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getName().equalsIgnoreCase(FARMING_REGION_NAME) &&\n+\t\t\tcontract.getPatchImplementation() == patch.getImplementation() &&\n+\t\t\tpatchPrediction != null &&\n+\t\t\t(patchPrediction.getProduce().equals(contract.getProduce()) || summary == SummaryState.EMPTY))\n+\t\t{\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void loadContractFromConfig()\n+\t{\n+\t\tcontract = getStoredContract();\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean updateData(WorldPoint loc)\n+\t{\n+\t\tSummaryState oldSummary = summary;\n+\n+\t\thandleContractState();\n+\t\tif (loc.getRegionID() == FARMING_GUILD_REGION_ID)\n+\t\t{\n+\t\t\thandleGuildmasterJaneWidgetDialog();\n+\t\t\thandleInfoBox();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif (infoBox != null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldSummary != summary;\n+\t}\n+\n+\tprivate void handleInfoBox()\n+\t{\n+\t\tif (infoBox != null)\n+\t\t{\n+\t\t\tif (contract == null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t\telse if (infoBox.getContract() != contract)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t\t}\n+\t\t}\n+\t\telse if (contract != null)\n+\t\t{\n+\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t}\n+\t}\n+\n+\tprivate void handleGuildmasterJaneWidgetDialog()\n+\t{\n+\t\tWidget npcDialog = client.getWidget(WidgetInfo.DIALOG_NPC_HEAD_MODEL);\n+\n+\t\tif (npcDialog == null || npcDialog.getModelId() != GUILDMASTER_JANE_WIDGET_MODEL_ID)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString dialogText = Text.removeTags(client.getWidget(WidgetInfo.DIALOG_NPC_TEXT).getText());\n+\t\tlog.debug(dialogText + \" \");\n+\n+\t\tif (dialogText.equals(CONTRACT_REWARDED))\n+\t\t{\n+\t\t\tsetContract(null);\n+\t\t\t;\n+\t\t}\n+\t\thandleContractAssigning(dialogText);\n+\t}\n+\n+\tprivate void handleContractAssigning(@Nonnull String dialogText)\n+\t{\n+\t\tPattern pattern = Pattern.compile(CONTRACT_ASSIGN_REGEX);\n+\t\tMatcher matcher = pattern.matcher(dialogText);\n+\n+\t\tif (!matcher.find())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString name = matcher.group(1);\n+\n+\t\tFarmingContract farmingContract = FarmingContract.getByName(name);\n+\n+\t\tif (farmingContract == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tFarmingContract currentFarmingContract = contract;\n+\n+\t\tif (farmingContract == currentFarmingContract)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tsetContract(farmingContract);\n+\t}\n+\n+\tprivate void handleContractState()\n+\t{\n+\t\tif (contract == null)\n+\t\t{\n+\t\t\tsummary = SummaryState.UNKNOWN;\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tPatchImplementation patchImplementation = contract.getPatchImplementation();\n+\t\tList<PatchPrediction> predictions = new ArrayList<>();\n+\n+\t\tfor (FarmingRegion farmingRegion : farmingWorld.getRegions().values())\n+\t\t{\n+\t\t\tif (!farmingRegion.getName().equalsIgnoreCase(FARMING_REGION_NAME))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 253}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc1MDQwNw==", "bodyText": "same as below; don't compare ui strings", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421750407", "createdAt": "2020-05-07T19:44:36Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\tprivate final Client client;\n+\tprivate final ItemManager itemManager;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final TimeTrackingPlugin plugin;\n+\tprivate final FarmingWorld farmingWorld;\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final InfoBoxManager infoBoxManager;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate FarmingContract contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\t@Inject\n+\tpublic FarmingContractManager(\n+\t\t@Nonnull Client client,\n+\t\t@Nonnull ItemManager itemManager,\n+\t\t@Nonnull TimeTrackingConfig config,\n+\t\t@Nonnull TimeTrackingPlugin plugin,\n+\t\t@Nonnull FarmingWorld farmingWorld,\n+\t\t@Nonnull FarmingTracker farmingTracker,\n+\t\t@Nonnull InfoBoxManager infoBoxManager,\n+\t\t@Nonnull ConfigManager configManager\n+\t)\n+\t{\n+\t\tthis.client = client;\n+\t\tthis.itemManager = itemManager;\n+\t\tthis.config = config;\n+\t\tthis.plugin = plugin;\n+\t\tthis.farmingWorld = farmingWorld;\n+\t\tthis.farmingTracker = farmingTracker;\n+\t\tthis.infoBoxManager = infoBoxManager;\n+\t\tthis.configManager = configManager;\n+\t}\n+\n+\tpublic void setContract(@Nullable FarmingContract contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getName().equalsIgnoreCase(FARMING_REGION_NAME) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc1MTM2MA==", "bodyText": "?", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421751360", "createdAt": "2020-05-07T19:46:19Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\tprivate final Client client;\n+\tprivate final ItemManager itemManager;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final TimeTrackingPlugin plugin;\n+\tprivate final FarmingWorld farmingWorld;\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final InfoBoxManager infoBoxManager;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate FarmingContract contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\t@Inject\n+\tpublic FarmingContractManager(\n+\t\t@Nonnull Client client,\n+\t\t@Nonnull ItemManager itemManager,\n+\t\t@Nonnull TimeTrackingConfig config,\n+\t\t@Nonnull TimeTrackingPlugin plugin,\n+\t\t@Nonnull FarmingWorld farmingWorld,\n+\t\t@Nonnull FarmingTracker farmingTracker,\n+\t\t@Nonnull InfoBoxManager infoBoxManager,\n+\t\t@Nonnull ConfigManager configManager\n+\t)\n+\t{\n+\t\tthis.client = client;\n+\t\tthis.itemManager = itemManager;\n+\t\tthis.config = config;\n+\t\tthis.plugin = plugin;\n+\t\tthis.farmingWorld = farmingWorld;\n+\t\tthis.farmingTracker = farmingTracker;\n+\t\tthis.infoBoxManager = infoBoxManager;\n+\t\tthis.configManager = configManager;\n+\t}\n+\n+\tpublic void setContract(@Nullable FarmingContract contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getName().equalsIgnoreCase(FARMING_REGION_NAME) &&\n+\t\t\tcontract.getPatchImplementation() == patch.getImplementation() &&\n+\t\t\tpatchPrediction != null &&\n+\t\t\t(patchPrediction.getProduce().equals(contract.getProduce()) || summary == SummaryState.EMPTY))\n+\t\t{\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void loadContractFromConfig()\n+\t{\n+\t\tcontract = getStoredContract();\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean updateData(WorldPoint loc)\n+\t{\n+\t\tSummaryState oldSummary = summary;\n+\n+\t\thandleContractState();\n+\t\tif (loc.getRegionID() == FARMING_GUILD_REGION_ID)\n+\t\t{\n+\t\t\thandleGuildmasterJaneWidgetDialog();\n+\t\t\thandleInfoBox();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif (infoBox != null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldSummary != summary;\n+\t}\n+\n+\tprivate void handleInfoBox()\n+\t{\n+\t\tif (infoBox != null)\n+\t\t{\n+\t\t\tif (contract == null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t\telse if (infoBox.getContract() != contract)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t\t}\n+\t\t}\n+\t\telse if (contract != null)\n+\t\t{\n+\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t}\n+\t}\n+\n+\tprivate void handleGuildmasterJaneWidgetDialog()\n+\t{\n+\t\tWidget npcDialog = client.getWidget(WidgetInfo.DIALOG_NPC_HEAD_MODEL);\n+\n+\t\tif (npcDialog == null || npcDialog.getModelId() != GUILDMASTER_JANE_WIDGET_MODEL_ID)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString dialogText = Text.removeTags(client.getWidget(WidgetInfo.DIALOG_NPC_TEXT).getText());\n+\t\tlog.debug(dialogText + \" \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc1MTg2Mw==", "bodyText": "just remove these 4 lines, there is no reason for this to be its own method when you are just tail calling it", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421751863", "createdAt": "2020-05-07T19:47:11Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\tprivate final Client client;\n+\tprivate final ItemManager itemManager;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final TimeTrackingPlugin plugin;\n+\tprivate final FarmingWorld farmingWorld;\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final InfoBoxManager infoBoxManager;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate FarmingContract contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\t@Inject\n+\tpublic FarmingContractManager(\n+\t\t@Nonnull Client client,\n+\t\t@Nonnull ItemManager itemManager,\n+\t\t@Nonnull TimeTrackingConfig config,\n+\t\t@Nonnull TimeTrackingPlugin plugin,\n+\t\t@Nonnull FarmingWorld farmingWorld,\n+\t\t@Nonnull FarmingTracker farmingTracker,\n+\t\t@Nonnull InfoBoxManager infoBoxManager,\n+\t\t@Nonnull ConfigManager configManager\n+\t)\n+\t{\n+\t\tthis.client = client;\n+\t\tthis.itemManager = itemManager;\n+\t\tthis.config = config;\n+\t\tthis.plugin = plugin;\n+\t\tthis.farmingWorld = farmingWorld;\n+\t\tthis.farmingTracker = farmingTracker;\n+\t\tthis.infoBoxManager = infoBoxManager;\n+\t\tthis.configManager = configManager;\n+\t}\n+\n+\tpublic void setContract(@Nullable FarmingContract contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getName().equalsIgnoreCase(FARMING_REGION_NAME) &&\n+\t\t\tcontract.getPatchImplementation() == patch.getImplementation() &&\n+\t\t\tpatchPrediction != null &&\n+\t\t\t(patchPrediction.getProduce().equals(contract.getProduce()) || summary == SummaryState.EMPTY))\n+\t\t{\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void loadContractFromConfig()\n+\t{\n+\t\tcontract = getStoredContract();\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean updateData(WorldPoint loc)\n+\t{\n+\t\tSummaryState oldSummary = summary;\n+\n+\t\thandleContractState();\n+\t\tif (loc.getRegionID() == FARMING_GUILD_REGION_ID)\n+\t\t{\n+\t\t\thandleGuildmasterJaneWidgetDialog();\n+\t\t\thandleInfoBox();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif (infoBox != null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldSummary != summary;\n+\t}\n+\n+\tprivate void handleInfoBox()\n+\t{\n+\t\tif (infoBox != null)\n+\t\t{\n+\t\t\tif (contract == null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t\telse if (infoBox.getContract() != contract)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t\t}\n+\t\t}\n+\t\telse if (contract != null)\n+\t\t{\n+\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t}\n+\t}\n+\n+\tprivate void handleGuildmasterJaneWidgetDialog()\n+\t{\n+\t\tWidget npcDialog = client.getWidget(WidgetInfo.DIALOG_NPC_HEAD_MODEL);\n+\n+\t\tif (npcDialog == null || npcDialog.getModelId() != GUILDMASTER_JANE_WIDGET_MODEL_ID)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString dialogText = Text.removeTags(client.getWidget(WidgetInfo.DIALOG_NPC_TEXT).getText());\n+\t\tlog.debug(dialogText + \" \");\n+\n+\t\tif (dialogText.equals(CONTRACT_REWARDED))\n+\t\t{\n+\t\t\tsetContract(null);\n+\t\t\t;\n+\t\t}\n+\t\thandleContractAssigning(dialogText);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 208}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc1Mjc1Ng==", "bodyText": "this is always Math.max(0, v)?", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421752756", "createdAt": "2020-05-07T19:48:45Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\tprivate final Client client;\n+\tprivate final ItemManager itemManager;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final TimeTrackingPlugin plugin;\n+\tprivate final FarmingWorld farmingWorld;\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final InfoBoxManager infoBoxManager;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate FarmingContract contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\t@Inject\n+\tpublic FarmingContractManager(\n+\t\t@Nonnull Client client,\n+\t\t@Nonnull ItemManager itemManager,\n+\t\t@Nonnull TimeTrackingConfig config,\n+\t\t@Nonnull TimeTrackingPlugin plugin,\n+\t\t@Nonnull FarmingWorld farmingWorld,\n+\t\t@Nonnull FarmingTracker farmingTracker,\n+\t\t@Nonnull InfoBoxManager infoBoxManager,\n+\t\t@Nonnull ConfigManager configManager\n+\t)\n+\t{\n+\t\tthis.client = client;\n+\t\tthis.itemManager = itemManager;\n+\t\tthis.config = config;\n+\t\tthis.plugin = plugin;\n+\t\tthis.farmingWorld = farmingWorld;\n+\t\tthis.farmingTracker = farmingTracker;\n+\t\tthis.infoBoxManager = infoBoxManager;\n+\t\tthis.configManager = configManager;\n+\t}\n+\n+\tpublic void setContract(@Nullable FarmingContract contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getName().equalsIgnoreCase(FARMING_REGION_NAME) &&\n+\t\t\tcontract.getPatchImplementation() == patch.getImplementation() &&\n+\t\t\tpatchPrediction != null &&\n+\t\t\t(patchPrediction.getProduce().equals(contract.getProduce()) || summary == SummaryState.EMPTY))\n+\t\t{\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void loadContractFromConfig()\n+\t{\n+\t\tcontract = getStoredContract();\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean updateData(WorldPoint loc)\n+\t{\n+\t\tSummaryState oldSummary = summary;\n+\n+\t\thandleContractState();\n+\t\tif (loc.getRegionID() == FARMING_GUILD_REGION_ID)\n+\t\t{\n+\t\t\thandleGuildmasterJaneWidgetDialog();\n+\t\t\thandleInfoBox();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif (infoBox != null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldSummary != summary;\n+\t}\n+\n+\tprivate void handleInfoBox()\n+\t{\n+\t\tif (infoBox != null)\n+\t\t{\n+\t\t\tif (contract == null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t\telse if (infoBox.getContract() != contract)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t\t}\n+\t\t}\n+\t\telse if (contract != null)\n+\t\t{\n+\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getProduce().getItemID()), plugin, contract, config, this);\n+\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t}\n+\t}\n+\n+\tprivate void handleGuildmasterJaneWidgetDialog()\n+\t{\n+\t\tWidget npcDialog = client.getWidget(WidgetInfo.DIALOG_NPC_HEAD_MODEL);\n+\n+\t\tif (npcDialog == null || npcDialog.getModelId() != GUILDMASTER_JANE_WIDGET_MODEL_ID)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString dialogText = Text.removeTags(client.getWidget(WidgetInfo.DIALOG_NPC_TEXT).getText());\n+\t\tlog.debug(dialogText + \" \");\n+\n+\t\tif (dialogText.equals(CONTRACT_REWARDED))\n+\t\t{\n+\t\t\tsetContract(null);\n+\t\t\t;\n+\t\t}\n+\t\thandleContractAssigning(dialogText);\n+\t}\n+\n+\tprivate void handleContractAssigning(@Nonnull String dialogText)\n+\t{\n+\t\tPattern pattern = Pattern.compile(CONTRACT_ASSIGN_REGEX);\n+\t\tMatcher matcher = pattern.matcher(dialogText);\n+\n+\t\tif (!matcher.find())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString name = matcher.group(1);\n+\n+\t\tFarmingContract farmingContract = FarmingContract.getByName(name);\n+\n+\t\tif (farmingContract == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tFarmingContract currentFarmingContract = contract;\n+\n+\t\tif (farmingContract == currentFarmingContract)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tsetContract(farmingContract);\n+\t}\n+\n+\tprivate void handleContractState()\n+\t{\n+\t\tif (contract == null)\n+\t\t{\n+\t\t\tsummary = SummaryState.UNKNOWN;\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tPatchImplementation patchImplementation = contract.getPatchImplementation();\n+\t\tList<PatchPrediction> predictions = new ArrayList<>();\n+\n+\t\tfor (FarmingRegion farmingRegion : farmingWorld.getRegions().values())\n+\t\t{\n+\t\t\tif (!farmingRegion.getName().equalsIgnoreCase(FARMING_REGION_NAME))\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tfor (FarmingPatch patch : farmingRegion.getPatches())\n+\t\t\t{\n+\t\t\t\tif (patch.getImplementation() != patchImplementation)\n+\t\t\t\t{\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\tPatchPrediction prediction = farmingTracker.predictPatch(patch);\n+\n+\t\t\t\tif (prediction == null)\n+\t\t\t\t{\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\tpredictions.add(prediction);\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (predictions.size() == 0)\n+\t\t{\n+\t\t\tsummary = SummaryState.UNKNOWN;\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tlong maxCompletionTime = 0;\n+\t\tint emptyPatches = 0;\n+\n+\t\tfor (PatchPrediction prediction : predictions)\n+\t\t{\n+\t\t\tif (prediction.getProduce() == null || prediction.getProduce() == Produce.WEEDS)\n+\t\t\t{\n+\t\t\t\tsummary = SummaryState.EMPTY;\n+\t\t\t\temptyPatches++;\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tif ((prediction.getProduce() != contract.getProduce() ||\n+\t\t\t\t(contract.requiresHealthCheck() && prediction.getCropState() == CropState.HARVESTABLE)) &&\n+\t\t\t\temptyPatches == 0)\n+\t\t\t{\n+\t\t\t\tsummary = SummaryState.OCCUPIED;\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tmaxCompletionTime = Math.max(maxCompletionTime, prediction.getDoneEstimate());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 302}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc1MzY0Mg==", "bodyText": "you can just fieldinject all of these since your ctor is otherwise empty", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r421753642", "createdAt": "2020-05-07T19:50:13Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,351 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = 8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final String CONTRACT_ASSIGN_REGEX = \"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\";\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\n+\tprivate static final String FARMING_REGION_NAME = \"Farming Guild\";\n+\tprivate static final String HTML_STRIP = \"\\\\<[^>]*>\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\tprivate final Client client;\n+\tprivate final ItemManager itemManager;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final TimeTrackingPlugin plugin;\n+\tprivate final FarmingWorld farmingWorld;\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final InfoBoxManager infoBoxManager;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate FarmingContract contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\t@Inject\n+\tpublic FarmingContractManager(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88"}, "originalPosition": 82}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f5d8a88ca0efd485190caad9fedcca51ec67d88", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/8f5d8a88ca0efd485190caad9fedcca51ec67d88", "committedDate": "2020-05-07T16:55:07Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "575bcd13c9594b9ba7a1a00ce5793ac477417feb", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/575bcd13c9594b9ba7a1a00ce5793ac477417feb", "committedDate": "2020-05-07T21:12:15Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "575bcd13c9594b9ba7a1a00ce5793ac477417feb", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/575bcd13c9594b9ba7a1a00ce5793ac477417feb", "committedDate": "2020-05-07T21:12:15Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "98bc46e74ff4db0815850e3f8005a907018ee659", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/98bc46e74ff4db0815850e3f8005a907018ee659", "committedDate": "2020-05-07T21:19:23Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98bc46e74ff4db0815850e3f8005a907018ee659", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/98bc46e74ff4db0815850e3f8005a907018ee659", "committedDate": "2020-05-07T21:19:23Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "1523e476c42f441891243eca2710f8dd55ca6214", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/1523e476c42f441891243eca2710f8dd55ca6214", "committedDate": "2020-05-07T21:25:30Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1523e476c42f441891243eca2710f8dd55ca6214", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/1523e476c42f441891243eca2710f8dd55ca6214", "committedDate": "2020-05-07T21:25:30Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "bf602446601410035f9505c05c4e58c7de0edf36", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/bf602446601410035f9505c05c4e58c7de0edf36", "committedDate": "2020-05-07T22:30:53Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf602446601410035f9505c05c4e58c7de0edf36", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/bf602446601410035f9505c05c4e58c7de0edf36", "committedDate": "2020-05-07T22:30:53Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "73c467de5430847895efa36886e2c08f8884dddc", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/73c467de5430847895efa36886e2c08f8884dddc", "committedDate": "2020-05-08T10:14:45Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73c467de5430847895efa36886e2c08f8884dddc", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/73c467de5430847895efa36886e2c08f8884dddc", "committedDate": "2020-05-08T10:14:45Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "0f01d3909f4e7851a6c2c00dafd42df20df4d21c", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/0f01d3909f4e7851a6c2c00dafd42df20df4d21c", "committedDate": "2020-05-08T10:30:29Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f01d3909f4e7851a6c2c00dafd42df20df4d21c", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/0f01d3909f4e7851a6c2c00dafd42df20df4d21c", "committedDate": "2020-05-08T10:30:29Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "0632c02b0d5337c7c5668a8328a9ea65f5ea4441", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/0632c02b0d5337c7c5668a8328a9ea65f5ea4441", "committedDate": "2020-05-08T11:04:03Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0632c02b0d5337c7c5668a8328a9ea65f5ea4441", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/0632c02b0d5337c7c5668a8328a9ea65f5ea4441", "committedDate": "2020-05-08T11:04:03Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "3545be60cc59e5a8bfa90d22ed0a64ed40649c73", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/3545be60cc59e5a8bfa90d22ed0a64ed40649c73", "committedDate": "2020-05-08T11:23:51Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3545be60cc59e5a8bfa90d22ed0a64ed40649c73", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/3545be60cc59e5a8bfa90d22ed0a64ed40649c73", "committedDate": "2020-05-08T11:23:51Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "0f570d8379c0b75d09d9f593c649c74b983fd24d", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/0f570d8379c0b75d09d9f593c649c74b983fd24d", "committedDate": "2020-05-08T13:17:48Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f570d8379c0b75d09d9f593c649c74b983fd24d", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/0f570d8379c0b75d09d9f593c649c74b983fd24d", "committedDate": "2020-05-08T13:17:48Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "c56f93d3d8f49748206824a956646006267f62f2", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/c56f93d3d8f49748206824a956646006267f62f2", "committedDate": "2020-05-08T14:57:44Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTkwNzIy", "url": "https://github.com/runelite/runelite/pull/11495#pullrequestreview-408590722", "createdAt": "2020-05-09T00:29:41Z", "commit": {"oid": "c56f93d3d8f49748206824a956646006267f62f2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDoyOTo0MlrOGS3Frw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDo0NjozNlrOGS3Qow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMDEyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = NullNpcID.NULL_8628;\n          \n          \n            \n            \tprivate static final int GUILDMASTER_JANE_NPC_ID = NullNpcID.NULL_8628;", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r422430127", "createdAt": "2020-05-09T00:29:42Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.NullNpcID;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = NullNpcID.NULL_8628;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c56f93d3d8f49748206824a956646006267f62f2"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMjAyMQ==", "bodyText": "generally prefer having get + guards like these so the guard is attached to the get, as opposed to having a newline separating them:\n\t\t\tPatchPrediction prediction = farmingTracker.predictPatch(patch);\n\t\t\tif (prediction == null)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tProduce produce = prediction.getProduce();", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r422432021", "createdAt": "2020-05-09T00:40:48Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.NullNpcID;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = NullNpcID.NULL_8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final Pattern CONTRACT_ASSIGN_PATTERN = Pattern.compile(\"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\");\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\t@Inject\n+\tprivate Client client;\n+\n+\t@Inject\n+\tprivate ItemManager itemManager;\n+\n+\t@Inject\n+\tprivate TimeTrackingConfig config;\n+\n+\t@Inject\n+\tprivate TimeTrackingPlugin plugin;\n+\n+\t@Inject\n+\tprivate FarmingWorld farmingWorld;\n+\n+\t@Inject\n+\tprivate FarmingTracker farmingTracker;\n+\n+\t@Inject\n+\tprivate InfoBoxManager infoBoxManager;\n+\n+\t@Inject\n+\tprivate ConfigManager configManager;\n+\n+\t@Getter\n+\tprivate Produce contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\tpublic void setContract(@Nullable Produce contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getContractName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getRegionID() == FARMING_GUILD_REGION_ID &&\n+\t\t\tcontract.getPatchImplementation() == patch.getImplementation() &&\n+\t\t\tpatchPrediction != null &&\n+\t\t\t(summary == SummaryState.EMPTY &&\n+\t\t\t\t(patchPrediction.getProduce() == null || patchPrediction.getProduce() == Produce.WEEDS)\n+\t\t\t\t|| patchPrediction.getProduce().equals(contract)))\n+\t\t{\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void loadContractFromConfig()\n+\t{\n+\t\tcontract = getStoredContract();\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean updateData(WorldPoint loc)\n+\t{\n+\t\tSummaryState oldSummary = summary;\n+\n+\t\thandleContractState();\n+\t\tif (loc.getRegionID() == FARMING_GUILD_REGION_ID)\n+\t\t{\n+\t\t\thandleGuildmasterJaneWidgetDialog();\n+\t\t\thandleInfoBox();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif (infoBox != null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldSummary != summary;\n+\t}\n+\n+\tprivate void handleInfoBox()\n+\t{\n+\t\tif (infoBox != null)\n+\t\t{\n+\t\t\tif (contract == null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t\telse if (infoBox.getContract() != contract)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getItemID()), plugin, contract, config, this);\n+\t\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t\t}\n+\t\t}\n+\t\telse if (contract != null)\n+\t\t{\n+\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getItemID()), plugin, contract, config, this);\n+\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t}\n+\t}\n+\n+\tprivate void handleGuildmasterJaneWidgetDialog()\n+\t{\n+\t\tWidget npcDialog = client.getWidget(WidgetInfo.DIALOG_NPC_HEAD_MODEL);\n+\n+\t\tif (npcDialog == null || npcDialog.getModelId() != GUILDMASTER_JANE_WIDGET_MODEL_ID)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString dialogText = Text.removeTags(client.getWidget(WidgetInfo.DIALOG_NPC_TEXT).getText());\n+\n+\t\tif (dialogText.equals(CONTRACT_REWARDED))\n+\t\t{\n+\t\t\tsetContract(null);\n+\t\t}\n+\n+\t\tMatcher matcher = CONTRACT_ASSIGN_PATTERN.matcher(dialogText);\n+\n+\t\tif (!matcher.find())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString name = matcher.group(1);\n+\n+\t\tProduce farmingContract = Produce.getByContractName(name);\n+\n+\t\tif (farmingContract == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tProduce currentFarmingContract = contract;\n+\n+\t\tif (farmingContract == currentFarmingContract)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tsetContract(farmingContract);\n+\t}\n+\n+\tprivate void handleContractState()\n+\t{\n+\t\tif (contract == null)\n+\t\t{\n+\t\t\tsummary = SummaryState.UNKNOWN;\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tPatchImplementation patchImplementation = contract.getPatchImplementation();\n+\n+\t\tboolean hasEmptyPatch = false;\n+\t\tfor (FarmingPatch patch : farmingWorld.getFarmingGuildRegion().getPatches())\n+\t\t{\n+\t\t\tif (patch.getImplementation() != patchImplementation)\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tPatchPrediction prediction = farmingTracker.predictPatch(patch);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c56f93d3d8f49748206824a956646006267f62f2"}, "originalPosition": 243}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMjU1Mg==", "bodyText": "If you have 2 patches that match this crop, and the first one is growing, but the second one is done, this will say you have to wait, which seems wrong.", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r422432552", "createdAt": "2020-05-09T00:43:52Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.NullNpcID;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = NullNpcID.NULL_8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final Pattern CONTRACT_ASSIGN_PATTERN = Pattern.compile(\"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\");\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\t@Inject\n+\tprivate Client client;\n+\n+\t@Inject\n+\tprivate ItemManager itemManager;\n+\n+\t@Inject\n+\tprivate TimeTrackingConfig config;\n+\n+\t@Inject\n+\tprivate TimeTrackingPlugin plugin;\n+\n+\t@Inject\n+\tprivate FarmingWorld farmingWorld;\n+\n+\t@Inject\n+\tprivate FarmingTracker farmingTracker;\n+\n+\t@Inject\n+\tprivate InfoBoxManager infoBoxManager;\n+\n+\t@Inject\n+\tprivate ConfigManager configManager;\n+\n+\t@Getter\n+\tprivate Produce contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\tpublic void setContract(@Nullable Produce contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getContractName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getRegionID() == FARMING_GUILD_REGION_ID &&\n+\t\t\tcontract.getPatchImplementation() == patch.getImplementation() &&\n+\t\t\tpatchPrediction != null &&\n+\t\t\t(summary == SummaryState.EMPTY &&\n+\t\t\t\t(patchPrediction.getProduce() == null || patchPrediction.getProduce() == Produce.WEEDS)\n+\t\t\t\t|| patchPrediction.getProduce().equals(contract)))\n+\t\t{\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void loadContractFromConfig()\n+\t{\n+\t\tcontract = getStoredContract();\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean updateData(WorldPoint loc)\n+\t{\n+\t\tSummaryState oldSummary = summary;\n+\n+\t\thandleContractState();\n+\t\tif (loc.getRegionID() == FARMING_GUILD_REGION_ID)\n+\t\t{\n+\t\t\thandleGuildmasterJaneWidgetDialog();\n+\t\t\thandleInfoBox();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif (infoBox != null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldSummary != summary;\n+\t}\n+\n+\tprivate void handleInfoBox()\n+\t{\n+\t\tif (infoBox != null)\n+\t\t{\n+\t\t\tif (contract == null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t\telse if (infoBox.getContract() != contract)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getItemID()), plugin, contract, config, this);\n+\t\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t\t}\n+\t\t}\n+\t\telse if (contract != null)\n+\t\t{\n+\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getItemID()), plugin, contract, config, this);\n+\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t}\n+\t}\n+\n+\tprivate void handleGuildmasterJaneWidgetDialog()\n+\t{\n+\t\tWidget npcDialog = client.getWidget(WidgetInfo.DIALOG_NPC_HEAD_MODEL);\n+\n+\t\tif (npcDialog == null || npcDialog.getModelId() != GUILDMASTER_JANE_WIDGET_MODEL_ID)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString dialogText = Text.removeTags(client.getWidget(WidgetInfo.DIALOG_NPC_TEXT).getText());\n+\n+\t\tif (dialogText.equals(CONTRACT_REWARDED))\n+\t\t{\n+\t\t\tsetContract(null);\n+\t\t}\n+\n+\t\tMatcher matcher = CONTRACT_ASSIGN_PATTERN.matcher(dialogText);\n+\n+\t\tif (!matcher.find())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString name = matcher.group(1);\n+\n+\t\tProduce farmingContract = Produce.getByContractName(name);\n+\n+\t\tif (farmingContract == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tProduce currentFarmingContract = contract;\n+\n+\t\tif (farmingContract == currentFarmingContract)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tsetContract(farmingContract);\n+\t}\n+\n+\tprivate void handleContractState()\n+\t{\n+\t\tif (contract == null)\n+\t\t{\n+\t\t\tsummary = SummaryState.UNKNOWN;\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tPatchImplementation patchImplementation = contract.getPatchImplementation();\n+\n+\t\tboolean hasEmptyPatch = false;\n+\t\tfor (FarmingPatch patch : farmingWorld.getFarmingGuildRegion().getPatches())\n+\t\t{\n+\t\t\tif (patch.getImplementation() != patchImplementation)\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tPatchPrediction prediction = farmingTracker.predictPatch(patch);\n+\n+\t\t\tif (prediction == null)\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\tProduce produce = prediction.getProduce();\n+\n+\t\t\tif (produce == null || produce == Produce.WEEDS)\n+\t\t\t{\n+\t\t\t\tsummary = SummaryState.EMPTY;\n+\t\t\t\thasEmptyPatch = true;\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tif ((contract.requiresHealthCheck() && prediction.getCropState() == CropState.HARVESTABLE)\n+\t\t\t\t&& !hasEmptyPatch)\n+\t\t\t{\n+\t\t\t\tsummary = SummaryState.OCCUPIED;\n+\t\t\t}\n+\n+\t\t\tif (produce != contract)\n+\t\t\t{\n+\t\t\t\tif (!hasEmptyPatch)\n+\t\t\t\t{\n+\t\t\t\t\tsummary = SummaryState.OCCUPIED;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tlong estimatedTime = prediction.getDoneEstimate();\n+\n+\t\t\t\tif (estimatedTime <= Instant.now().getEpochSecond())\n+\t\t\t\t{\n+\t\t\t\t\tsummary = SummaryState.COMPLETED;\n+\t\t\t\t\tcompletionTime = 0;\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t{\n+\t\t\t\t\tsummary = SummaryState.IN_PROGRESS;\n+\t\t\t\t\tcompletionTime = estimatedTime;\n+\t\t\t\t}\n+\t\t\t\tbreak;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c56f93d3d8f49748206824a956646006267f62f2"}, "originalPosition": 285}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMjkzMQ==", "bodyText": "remove this newline", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r422432931", "createdAt": "2020-05-09T00:46:36Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Copyright (c) 2019, Koekkruimels <https://github.com/koekkruimels>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import java.time.Instant;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.NullNpcID;\n+import net.runelite.api.coords.WorldPoint;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.game.ItemManager;\n+import net.runelite.client.plugins.timetracking.SummaryState;\n+import net.runelite.client.plugins.timetracking.Tab;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeTrackingPlugin;\n+import net.runelite.client.ui.overlay.infobox.InfoBoxManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class FarmingContractManager\n+{\n+\tprivate static final int GUILDMASTER_JANE_WIDGET_MODEL_ID = NullNpcID.NULL_8628;\n+\tprivate static final int FARMING_GUILD_REGION_ID = 4922;\n+\tprivate static final Pattern CONTRACT_ASSIGN_PATTERN = Pattern.compile(\"(?:We need you to grow|Please could you grow) (?:some|a|an) ([a-zA-Z ]+)(?: for us\\\\?|\\\\.)\");\n+\tprivate static final String CONTRACT_REWARDED = \"You'll be wanting a reward then. Here you go.\";\n+\tprivate static final String CONFIG_KEY_CONTRACT = \"contract\";\n+\n+\t@Getter\n+\tprivate SummaryState summary = SummaryState.UNKNOWN;\n+\n+\t@Inject\n+\tprivate Client client;\n+\n+\t@Inject\n+\tprivate ItemManager itemManager;\n+\n+\t@Inject\n+\tprivate TimeTrackingConfig config;\n+\n+\t@Inject\n+\tprivate TimeTrackingPlugin plugin;\n+\n+\t@Inject\n+\tprivate FarmingWorld farmingWorld;\n+\n+\t@Inject\n+\tprivate FarmingTracker farmingTracker;\n+\n+\t@Inject\n+\tprivate InfoBoxManager infoBoxManager;\n+\n+\t@Inject\n+\tprivate ConfigManager configManager;\n+\n+\t@Getter\n+\tprivate Produce contract = null;\n+\tprivate FarmingContractInfoBox infoBox;\n+\n+\t@Getter\n+\tprivate long completionTime;\n+\n+\tpublic void setContract(@Nullable Produce contract)\n+\t{\n+\t\tthis.contract = contract;\n+\t\tsetStoredContract(contract);\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean hasContract()\n+\t{\n+\t\treturn contract != null;\n+\t}\n+\n+\t@Nullable\n+\tpublic Tab getContractTab()\n+\t{\n+\t\treturn hasContract() ? contract.getPatchImplementation().getTab() : null;\n+\t}\n+\n+\t@Nullable\n+\tpublic String getContractName()\n+\t{\n+\t\treturn hasContract() ? contract.getContractName() : null;\n+\t}\n+\n+\tpublic boolean shouldHighlightFarmingTabPanel(@Nonnull FarmingPatch patch)\n+\t{\n+\t\tPatchPrediction patchPrediction = farmingTracker.predictPatch(patch);\n+\t\tif (contract != null &&\n+\t\t\tpatch.getRegion().getRegionID() == FARMING_GUILD_REGION_ID &&\n+\t\t\tcontract.getPatchImplementation() == patch.getImplementation() &&\n+\t\t\tpatchPrediction != null &&\n+\t\t\t(summary == SummaryState.EMPTY &&\n+\t\t\t\t(patchPrediction.getProduce() == null || patchPrediction.getProduce() == Produce.WEEDS)\n+\t\t\t\t|| patchPrediction.getProduce().equals(contract)))\n+\t\t{\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void loadContractFromConfig()\n+\t{\n+\t\tcontract = getStoredContract();\n+\t\thandleContractState();\n+\t}\n+\n+\tpublic boolean updateData(WorldPoint loc)\n+\t{\n+\t\tSummaryState oldSummary = summary;\n+\n+\t\thandleContractState();\n+\t\tif (loc.getRegionID() == FARMING_GUILD_REGION_ID)\n+\t\t{\n+\t\t\thandleGuildmasterJaneWidgetDialog();\n+\t\t\thandleInfoBox();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif (infoBox != null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldSummary != summary;\n+\t}\n+\n+\tprivate void handleInfoBox()\n+\t{\n+\t\tif (infoBox != null)\n+\t\t{\n+\t\t\tif (contract == null)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = null;\n+\t\t\t}\n+\t\t\telse if (infoBox.getContract() != contract)\n+\t\t\t{\n+\t\t\t\tinfoBoxManager.removeInfoBox(infoBox);\n+\t\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getItemID()), plugin, contract, config, this);\n+\t\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t\t}\n+\t\t}\n+\t\telse if (contract != null)\n+\t\t{\n+\t\t\tinfoBox = new FarmingContractInfoBox(itemManager.getImage(contract.getItemID()), plugin, contract, config, this);\n+\t\t\tinfoBoxManager.addInfoBox(infoBox);\n+\t\t}\n+\t}\n+\n+\tprivate void handleGuildmasterJaneWidgetDialog()\n+\t{\n+\t\tWidget npcDialog = client.getWidget(WidgetInfo.DIALOG_NPC_HEAD_MODEL);\n+\n+\t\tif (npcDialog == null || npcDialog.getModelId() != GUILDMASTER_JANE_WIDGET_MODEL_ID)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString dialogText = Text.removeTags(client.getWidget(WidgetInfo.DIALOG_NPC_TEXT).getText());\n+\n+\t\tif (dialogText.equals(CONTRACT_REWARDED))\n+\t\t{\n+\t\t\tsetContract(null);\n+\t\t}\n+\n+\t\tMatcher matcher = CONTRACT_ASSIGN_PATTERN.matcher(dialogText);\n+\n+\t\tif (!matcher.find())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString name = matcher.group(1);\n+\n+\t\tProduce farmingContract = Produce.getByContractName(name);\n+\n+\t\tif (farmingContract == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tProduce currentFarmingContract = contract;\n+\n+\t\tif (farmingContract == currentFarmingContract)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tsetContract(farmingContract);\n+\t}\n+\n+\tprivate void handleContractState()\n+\t{\n+\t\tif (contract == null)\n+\t\t{\n+\t\t\tsummary = SummaryState.UNKNOWN;\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tPatchImplementation patchImplementation = contract.getPatchImplementation();\n+\n+\t\tboolean hasEmptyPatch = false;\n+\t\tfor (FarmingPatch patch : farmingWorld.getFarmingGuildRegion().getPatches())\n+\t\t{\n+\t\t\tif (patch.getImplementation() != patchImplementation)\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tPatchPrediction prediction = farmingTracker.predictPatch(patch);\n+\n+\t\t\tif (prediction == null)\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\tProduce produce = prediction.getProduce();\n+\n+\t\t\tif (produce == null || produce == Produce.WEEDS)\n+\t\t\t{\n+\t\t\t\tsummary = SummaryState.EMPTY;\n+\t\t\t\thasEmptyPatch = true;\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tif ((contract.requiresHealthCheck() && prediction.getCropState() == CropState.HARVESTABLE)\n+\t\t\t\t&& !hasEmptyPatch)\n+\t\t\t{\n+\t\t\t\tsummary = SummaryState.OCCUPIED;\n+\t\t\t}\n+\n+\t\t\tif (produce != contract)\n+\t\t\t{\n+\t\t\t\tif (!hasEmptyPatch)\n+\t\t\t\t{\n+\t\t\t\t\tsummary = SummaryState.OCCUPIED;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tlong estimatedTime = prediction.getDoneEstimate();\n+\n+\t\t\t\tif (estimatedTime <= Instant.now().getEpochSecond())\n+\t\t\t\t{\n+\t\t\t\t\tsummary = SummaryState.COMPLETED;\n+\t\t\t\t\tcompletionTime = 0;\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t{\n+\t\t\t\t\tsummary = SummaryState.IN_PROGRESS;\n+\t\t\t\t\tcompletionTime = estimatedTime;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\n+\t@Nullable\n+\tprivate Produce getStoredContract()\n+\t{\n+\t\ttry\n+\t\t{\n+\t\t\treturn Produce.getByItemID(Integer.parseInt(configManager.getConfiguration(getConfigGroup(), CONFIG_KEY_CONTRACT)));\n+\t\t}\n+\t\tcatch (NumberFormatException ignored)\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\tprivate void setStoredContract(@Nullable Produce contract)\n+\t{\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c56f93d3d8f49748206824a956646006267f62f2"}, "originalPosition": 306}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8a4b3a77de1ad5befd1cf66d86ad18396b50e7a", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/b8a4b3a77de1ad5befd1cf66d86ad18396b50e7a", "committedDate": "2020-05-09T00:59:35Z", "message": "Update runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingContractManager.java\n\nCo-authored-by: Abex <mii7303@gmail.com>"}, "afterCommit": {"oid": "3b8870a1b668161683cce3fb42303a0f73e071c8", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/3b8870a1b668161683cce3fb42303a0f73e071c8", "committedDate": "2020-05-09T01:46:28Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b8870a1b668161683cce3fb42303a0f73e071c8", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/3b8870a1b668161683cce3fb42303a0f73e071c8", "committedDate": "2020-05-09T01:46:28Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "9f0a470e4a80bded078191386c0b71d49e8a9cb5", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/9f0a470e4a80bded078191386c0b71d49e8a9cb5", "committedDate": "2020-05-09T02:51:37Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjI0MTky", "url": "https://github.com/runelite/runelite/pull/11495#pullrequestreview-408624192", "createdAt": "2020-05-09T07:52:38Z", "commit": {"oid": "9f0a470e4a80bded078191386c0b71d49e8a9cb5"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f0a470e4a80bded078191386c0b71d49e8a9cb5", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/9f0a470e4a80bded078191386c0b71d49e8a9cb5", "committedDate": "2020-05-09T02:51:37Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "25bcf21c9b435f9ac961f173bb5b381f75db2079", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/25bcf21c9b435f9ac961f173bb5b381f75db2079", "committedDate": "2020-05-09T19:15:17Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25bcf21c9b435f9ac961f173bb5b381f75db2079", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/25bcf21c9b435f9ac961f173bb5b381f75db2079", "committedDate": "2020-05-09T19:15:17Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "b59f7e3c105fb9b23c3c5ebd47bf1afe3efea2c6", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/b59f7e3c105fb9b23c3c5ebd47bf1afe3efea2c6", "committedDate": "2020-05-21T20:46:11Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b59f7e3c105fb9b23c3c5ebd47bf1afe3efea2c6", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/b59f7e3c105fb9b23c3c5ebd47bf1afe3efea2c6", "committedDate": "2020-05-21T20:46:11Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "e72485a752dce7beb4552402a29fed7d9abb78e8", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/e72485a752dce7beb4552402a29fed7d9abb78e8", "committedDate": "2020-05-24T16:54:22Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e72485a752dce7beb4552402a29fed7d9abb78e8", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/e72485a752dce7beb4552402a29fed7d9abb78e8", "committedDate": "2020-05-24T16:54:22Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "a6b308ba00d10ac8c38dd15df9df4f05d2937145", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/a6b308ba00d10ac8c38dd15df9df4f05d2937145", "committedDate": "2020-05-26T17:34:16Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6b308ba00d10ac8c38dd15df9df4f05d2937145", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/a6b308ba00d10ac8c38dd15df9df4f05d2937145", "committedDate": "2020-05-26T17:34:16Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "a13b23201806be24b774318899aec3205f99b339", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/a13b23201806be24b774318899aec3205f99b339", "committedDate": "2020-05-27T21:29:22Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjE2Mjk3", "url": "https://github.com/runelite/runelite/pull/11495#pullrequestreview-421216297", "createdAt": "2020-05-29T19:10:05Z", "commit": {"oid": "a13b23201806be24b774318899aec3205f99b339"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NjA0Nzc3", "url": "https://github.com/runelite/runelite/pull/11495#pullrequestreview-426604777", "createdAt": "2020-06-08T20:41:41Z", "commit": {"oid": "803310d5aa88746db8c1615254597c4c7dc36e9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo0MTo0MVrOGgvpAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo0MTo0MVrOGgvpAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4ODE2Mg==", "bodyText": "For some reason the other classes don't do this, but you can have try-with-resources with multiple resources fyi.", "url": "https://github.com/runelite/runelite/pull/11495#discussion_r436988162", "createdAt": "2020-06-08T20:41:41Z", "author": {"login": "Adam-"}, "path": "cache/src/main/java/net/runelite/cache/NpcManager.java", "diffHunk": "@@ -97,14 +97,19 @@ public void java(File java) throws IOException\n \t\tjava.mkdirs();\n \t\ttry (IDClass ids = IDClass.create(java, \"NpcID\"))\n \t\t{\n-\t\t\tfor (NpcDefinition def : npcs.values())\n+\t\t\ttry (IDClass nulls = IDClass.create(java, \"NullNpcID\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803310d5aa88746db8c1615254597c4c7dc36e9c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd573f37fb16a9a393a437cdd3d7a153c489a6d9", "author": {"user": null}, "url": "https://github.com/runelite/runelite/commit/dd573f37fb16a9a393a437cdd3d7a153c489a6d9", "committedDate": "2020-06-08T21:16:33Z", "message": "runelite-api: add NullNpcID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a13b23201806be24b774318899aec3205f99b339", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/a13b23201806be24b774318899aec3205f99b339", "committedDate": "2020-05-27T21:29:22Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "14e405056c8cbc96d434a8d52dac669e4321a091", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/14e405056c8cbc96d434a8d52dac669e4321a091", "committedDate": "2020-06-08T21:16:33Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "080bba5bb7e3f30e41a0ff3bf4d5801060c5451a", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/080bba5bb7e3f30e41a0ff3bf4d5801060c5451a", "committedDate": "2020-06-08T21:21:05Z", "message": "cache: emit null npc ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f448af1c4a2a2fe9486cd21a4ce4887f2a3fdc5", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/0f448af1c4a2a2fe9486cd21a4ce4887f2a3fdc5", "committedDate": "2020-06-08T21:21:09Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14e405056c8cbc96d434a8d52dac669e4321a091", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/14e405056c8cbc96d434a8d52dac669e4321a091", "committedDate": "2020-06-08T21:16:33Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}, "afterCommit": {"oid": "0f448af1c4a2a2fe9486cd21a4ce4887f2a3fdc5", "author": {"user": {"login": "melkypie", "name": "Melky"}}, "url": "https://github.com/runelite/runelite/commit/0f448af1c4a2a2fe9486cd21a4ce4887f2a3fdc5", "committedDate": "2020-06-08T21:21:09Z", "message": "timetracking: add farming contract functionality\n\nCo-authored-by: Koekkruimels <lifeinvader-dev@outlook.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3659, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}