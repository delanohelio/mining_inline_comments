{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNDgyNjQ3", "number": 10773, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo0MTozNFrODhsECA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo0MTozNFrODhsECA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjUxNTI4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/util/RSTimeUnit.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo0MTozNFrOFskHBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjowNjowOFrOFskysA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3MzI4Ng==", "bodyText": "What is all of this? are they missing @Override?", "url": "https://github.com/runelite/runelite/pull/10773#discussion_r382273286", "createdAt": "2020-02-20T21:41:34Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/util/RSTimeUnit.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright (c) 2020, Jordan Atwood <jordan.atwood423@gmail.com>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.util;\n+\n+import java.time.Duration;\n+import java.time.temporal.Temporal;\n+import java.time.temporal.TemporalUnit;\n+import lombok.Getter;\n+import net.runelite.api.Constants;\n+\n+@Getter\n+public enum RSTimeUnit implements TemporalUnit\n+{\n+\tCLIENT_TICKS(\"Client tick\", Duration.ofMillis(Constants.CLIENT_TICK_LENGTH)),\n+\tGAME_TICKS(\"Game tick\", Duration.ofMillis(Constants.GAME_TICK_LENGTH)),\n+\t;\n+\n+\tprivate final String name;\n+\tprivate final Duration duration;\n+\n+\tRSTimeUnit(String name, Duration estimatedDuration)\n+\t{\n+\t\tthis.name = name;\n+\t\tduration = estimatedDuration;\n+\t}\n+\n+\tpublic boolean isDurationEstimated()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1388b36fe0890cde455989078fca09ad3e6777a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDQ2NA==", "bodyText": "Yes. I've added @Overrides to these methods now.", "url": "https://github.com/runelite/runelite/pull/10773#discussion_r382284464", "createdAt": "2020-02-20T22:06:08Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/util/RSTimeUnit.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright (c) 2020, Jordan Atwood <jordan.atwood423@gmail.com>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.util;\n+\n+import java.time.Duration;\n+import java.time.temporal.Temporal;\n+import java.time.temporal.TemporalUnit;\n+import lombok.Getter;\n+import net.runelite.api.Constants;\n+\n+@Getter\n+public enum RSTimeUnit implements TemporalUnit\n+{\n+\tCLIENT_TICKS(\"Client tick\", Duration.ofMillis(Constants.CLIENT_TICK_LENGTH)),\n+\tGAME_TICKS(\"Game tick\", Duration.ofMillis(Constants.GAME_TICK_LENGTH)),\n+\t;\n+\n+\tprivate final String name;\n+\tprivate final Duration duration;\n+\n+\tRSTimeUnit(String name, Duration estimatedDuration)\n+\t{\n+\t\tthis.name = name;\n+\t\tduration = estimatedDuration;\n+\t}\n+\n+\tpublic boolean isDurationEstimated()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3MzI4Ng=="}, "originalCommit": {"oid": "a1388b36fe0890cde455989078fca09ad3e6777a"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3795, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}