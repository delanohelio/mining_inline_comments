{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MjY2NDY2", "number": 10551, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzozMjoyM1rODV2kEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzozNDozNlrODV2kaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQwNjU5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzozMjoyM1rOFaSRPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzozMjoyM1rOFaSRPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjYyMw==", "bodyText": "Check widget id first, it is cheaper.", "url": "https://github.com/runelite/runelite/pull/10551#discussion_r363106623", "createdAt": "2020-01-05T17:32:23Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "diffHunk": "@@ -215,6 +232,53 @@ public void onConfigChanged(ConfigChanged event)\n \t\tclientThread.invokeLater(() -> checkRaidPresence(true));\n \t}\n \n+\t@Subscribe\n+\tpublic void onWidgetLoaded(WidgetLoaded event)\n+\t{\n+\t\tif (!config.showLootValue() ||\n+\t\t\tevent.getGroupId() != WidgetID.CHAMBERS_OF_XERIC_REWARD_GROUP_ID ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fa75f9e94c0c28630016b48bc0eae2cca5b50a"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQwNjg5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzozMzowM1rOFaSRaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzozMzowM1rOFaSRaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjY2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate boolean chestOpened = false;\n          \n          \n            \n            \tprivate boolean chestOpened;", "url": "https://github.com/runelite/runelite/pull/10551#discussion_r363106667", "createdAt": "2020-01-05T17:33:03Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "diffHunk": "@@ -163,6 +177,8 @@\n \t@Getter\n \tprivate boolean inRaidChambers;\n \n+\tprivate boolean chestOpened = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fa75f9e94c0c28630016b48bc0eae2cca5b50a"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQwNzQyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzozNDoxOVrOFaSRtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODo0MDozNlrOFaSdzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjc0MQ==", "bodyText": "Why is this here?", "url": "https://github.com/runelite/runelite/pull/10551#discussion_r363106741", "createdAt": "2020-01-05T17:34:19Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "diffHunk": "@@ -215,6 +232,53 @@ public void onConfigChanged(ConfigChanged event)\n \t\tclientThread.invokeLater(() -> checkRaidPresence(true));\n \t}\n \n+\t@Subscribe\n+\tpublic void onWidgetLoaded(WidgetLoaded event)\n+\t{\n+\t\tif (!config.showLootValue() ||\n+\t\t\tevent.getGroupId() != WidgetID.CHAMBERS_OF_XERIC_REWARD_GROUP_ID ||\n+\t\t\tchestOpened)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tchestOpened = true;\n+\t\tItemContainer rewardItemContainer = client.getItemContainer(InventoryID.CHAMBERS_OF_XERIC_CHEST);\n+\t\tif (rewardItemContainer == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Collection<Item> rewardItems = Arrays.stream(rewardItemContainer.getItems())\n+\t\t\t.filter(item -> item.getId() > 0)\n+\t\t\t.map(item -> new Item(item.getId(), item.getQuantity()))\n+\t\t\t.collect(Collectors.toList());\n+\n+\t\tint rewardValue = 0;\n+\n+\t\tfor (Item reweardItem : rewardItems)\n+\t\t{\n+\t\t\tif (UNTRADABLE_ITEMS.contains(reweardItem.getId()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fa75f9e94c0c28630016b48bc0eae2cca5b50a"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjgzMA==", "bodyText": "Guess it is not needed, was thinking about it not checking item price if it is an untradable item but the item prive would be 0 anyways so it is useless, will take it out", "url": "https://github.com/runelite/runelite/pull/10551#discussion_r363106830", "createdAt": "2020-01-05T17:36:29Z", "author": {"login": "melkypie"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "diffHunk": "@@ -215,6 +232,53 @@ public void onConfigChanged(ConfigChanged event)\n \t\tclientThread.invokeLater(() -> checkRaidPresence(true));\n \t}\n \n+\t@Subscribe\n+\tpublic void onWidgetLoaded(WidgetLoaded event)\n+\t{\n+\t\tif (!config.showLootValue() ||\n+\t\t\tevent.getGroupId() != WidgetID.CHAMBERS_OF_XERIC_REWARD_GROUP_ID ||\n+\t\t\tchestOpened)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tchestOpened = true;\n+\t\tItemContainer rewardItemContainer = client.getItemContainer(InventoryID.CHAMBERS_OF_XERIC_CHEST);\n+\t\tif (rewardItemContainer == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Collection<Item> rewardItems = Arrays.stream(rewardItemContainer.getItems())\n+\t\t\t.filter(item -> item.getId() > 0)\n+\t\t\t.map(item -> new Item(item.getId(), item.getQuantity()))\n+\t\t\t.collect(Collectors.toList());\n+\n+\t\tint rewardValue = 0;\n+\n+\t\tfor (Item reweardItem : rewardItems)\n+\t\t{\n+\t\t\tif (UNTRADABLE_ITEMS.contains(reweardItem.getId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjc0MQ=="}, "originalCommit": {"oid": "73fa75f9e94c0c28630016b48bc0eae2cca5b50a"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjg2MA==", "bodyText": "The item manager has some logic to apply prices to untradeables, but if you don't want it to there is a ignoreUntradeableMap flag.", "url": "https://github.com/runelite/runelite/pull/10551#discussion_r363106860", "createdAt": "2020-01-05T17:37:08Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "diffHunk": "@@ -215,6 +232,53 @@ public void onConfigChanged(ConfigChanged event)\n \t\tclientThread.invokeLater(() -> checkRaidPresence(true));\n \t}\n \n+\t@Subscribe\n+\tpublic void onWidgetLoaded(WidgetLoaded event)\n+\t{\n+\t\tif (!config.showLootValue() ||\n+\t\t\tevent.getGroupId() != WidgetID.CHAMBERS_OF_XERIC_REWARD_GROUP_ID ||\n+\t\t\tchestOpened)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tchestOpened = true;\n+\t\tItemContainer rewardItemContainer = client.getItemContainer(InventoryID.CHAMBERS_OF_XERIC_CHEST);\n+\t\tif (rewardItemContainer == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Collection<Item> rewardItems = Arrays.stream(rewardItemContainer.getItems())\n+\t\t\t.filter(item -> item.getId() > 0)\n+\t\t\t.map(item -> new Item(item.getId(), item.getQuantity()))\n+\t\t\t.collect(Collectors.toList());\n+\n+\t\tint rewardValue = 0;\n+\n+\t\tfor (Item reweardItem : rewardItems)\n+\t\t{\n+\t\t\tif (UNTRADABLE_ITEMS.contains(reweardItem.getId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjc0MQ=="}, "originalCommit": {"oid": "73fa75f9e94c0c28630016b48bc0eae2cca5b50a"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwOTgzOA==", "bodyText": "Removed the check", "url": "https://github.com/runelite/runelite/pull/10551#discussion_r363109838", "createdAt": "2020-01-05T18:40:36Z", "author": {"login": "melkypie"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "diffHunk": "@@ -215,6 +232,53 @@ public void onConfigChanged(ConfigChanged event)\n \t\tclientThread.invokeLater(() -> checkRaidPresence(true));\n \t}\n \n+\t@Subscribe\n+\tpublic void onWidgetLoaded(WidgetLoaded event)\n+\t{\n+\t\tif (!config.showLootValue() ||\n+\t\t\tevent.getGroupId() != WidgetID.CHAMBERS_OF_XERIC_REWARD_GROUP_ID ||\n+\t\t\tchestOpened)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tchestOpened = true;\n+\t\tItemContainer rewardItemContainer = client.getItemContainer(InventoryID.CHAMBERS_OF_XERIC_CHEST);\n+\t\tif (rewardItemContainer == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Collection<Item> rewardItems = Arrays.stream(rewardItemContainer.getItems())\n+\t\t\t.filter(item -> item.getId() > 0)\n+\t\t\t.map(item -> new Item(item.getId(), item.getQuantity()))\n+\t\t\t.collect(Collectors.toList());\n+\n+\t\tint rewardValue = 0;\n+\n+\t\tfor (Item reweardItem : rewardItems)\n+\t\t{\n+\t\t\tif (UNTRADABLE_ITEMS.contains(reweardItem.getId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjc0MQ=="}, "originalCommit": {"oid": "73fa75f9e94c0c28630016b48bc0eae2cca5b50a"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQwNzQ0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzozNDozNlrOFaSRuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODoyODo0NFrOFaSbow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjc0NQ==", "bodyText": "This should maybe be a long.", "url": "https://github.com/runelite/runelite/pull/10551#discussion_r363106745", "createdAt": "2020-01-05T17:34:36Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "diffHunk": "@@ -215,6 +232,53 @@ public void onConfigChanged(ConfigChanged event)\n \t\tclientThread.invokeLater(() -> checkRaidPresence(true));\n \t}\n \n+\t@Subscribe\n+\tpublic void onWidgetLoaded(WidgetLoaded event)\n+\t{\n+\t\tif (!config.showLootValue() ||\n+\t\t\tevent.getGroupId() != WidgetID.CHAMBERS_OF_XERIC_REWARD_GROUP_ID ||\n+\t\t\tchestOpened)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tchestOpened = true;\n+\t\tItemContainer rewardItemContainer = client.getItemContainer(InventoryID.CHAMBERS_OF_XERIC_CHEST);\n+\t\tif (rewardItemContainer == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Collection<Item> rewardItems = Arrays.stream(rewardItemContainer.getItems())\n+\t\t\t.filter(item -> item.getId() > 0)\n+\t\t\t.map(item -> new Item(item.getId(), item.getQuantity()))\n+\t\t\t.collect(Collectors.toList());\n+\n+\t\tint rewardValue = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fa75f9e94c0c28630016b48bc0eae2cca5b50a"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwOTI4Mw==", "bodyText": "QuantityFormatter.quantitotyToRsDecimalStack requires an int, that is why I left it as int", "url": "https://github.com/runelite/runelite/pull/10551#discussion_r363109283", "createdAt": "2020-01-05T18:28:44Z", "author": {"login": "melkypie"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsPlugin.java", "diffHunk": "@@ -215,6 +232,53 @@ public void onConfigChanged(ConfigChanged event)\n \t\tclientThread.invokeLater(() -> checkRaidPresence(true));\n \t}\n \n+\t@Subscribe\n+\tpublic void onWidgetLoaded(WidgetLoaded event)\n+\t{\n+\t\tif (!config.showLootValue() ||\n+\t\t\tevent.getGroupId() != WidgetID.CHAMBERS_OF_XERIC_REWARD_GROUP_ID ||\n+\t\t\tchestOpened)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tchestOpened = true;\n+\t\tItemContainer rewardItemContainer = client.getItemContainer(InventoryID.CHAMBERS_OF_XERIC_CHEST);\n+\t\tif (rewardItemContainer == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Collection<Item> rewardItems = Arrays.stream(rewardItemContainer.getItems())\n+\t\t\t.filter(item -> item.getId() > 0)\n+\t\t\t.map(item -> new Item(item.getId(), item.getQuantity()))\n+\t\t\t.collect(Collectors.toList());\n+\n+\t\tint rewardValue = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjc0NQ=="}, "originalCommit": {"oid": "73fa75f9e94c0c28630016b48bc0eae2cca5b50a"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3870, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}