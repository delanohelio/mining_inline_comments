{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzOTUxMTIw", "number": 11714, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjowNjo1MlrOEAxDEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjowNjo1MlrOEAxDEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjM5MDU4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilityPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjowNjo1MlrOGcP4OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjowNzoxN1rOGcP4ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3MzQ2NA==", "bodyText": "These indents are one level too far.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t&& overlayMenuClicked.getEntry().getOption().equals(LapCounterOverlay.AGILITY_RESET)\n          \n          \n            \n            \t\t\t\t&& overlayMenuClicked.getOverlay() == lapCounterOverlay)\n          \n          \n            \n            \t\t\t&& overlayMenuClicked.getEntry().getOption().equals(LapCounterOverlay.AGILITY_RESET)\n          \n          \n            \n            \t\t\t&& overlayMenuClicked.getOverlay() == lapCounterOverlay)", "url": "https://github.com/runelite/runelite/pull/11714#discussion_r432273464", "createdAt": "2020-05-29T06:06:52Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilityPlugin.java", "diffHunk": "@@ -157,6 +160,18 @@ protected void shutDown() throws Exception\n \t\tstickTile = null;\n \t}\n \n+\t@Subscribe\n+\tpublic void onOverlayMenuClicked(OverlayMenuClicked overlayMenuClicked)\n+\t{\n+\t\tOverlayMenuEntry overlayMenuEntry = overlayMenuClicked.getEntry();\n+\t\tif (overlayMenuEntry.getMenuAction() == MenuAction.RUNELITE_OVERLAY\n+\t\t\t\t&& overlayMenuClicked.getEntry().getOption().equals(LapCounterOverlay.AGILITY_RESET)\n+\t\t\t\t&& overlayMenuClicked.getOverlay() == lapCounterOverlay)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "610f686b21aca626ad996f7dcfd7888a4c804ee6"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3MzU3MQ==", "bodyText": "Also, checking overlay equality is cheaper than doing a string comparison. Switch the order of the overlay check and the option check.", "url": "https://github.com/runelite/runelite/pull/11714#discussion_r432273571", "createdAt": "2020-05-29T06:07:17Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilityPlugin.java", "diffHunk": "@@ -157,6 +160,18 @@ protected void shutDown() throws Exception\n \t\tstickTile = null;\n \t}\n \n+\t@Subscribe\n+\tpublic void onOverlayMenuClicked(OverlayMenuClicked overlayMenuClicked)\n+\t{\n+\t\tOverlayMenuEntry overlayMenuEntry = overlayMenuClicked.getEntry();\n+\t\tif (overlayMenuEntry.getMenuAction() == MenuAction.RUNELITE_OVERLAY\n+\t\t\t\t&& overlayMenuClicked.getEntry().getOption().equals(LapCounterOverlay.AGILITY_RESET)\n+\t\t\t\t&& overlayMenuClicked.getOverlay() == lapCounterOverlay)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3MzQ2NA=="}, "originalCommit": {"oid": "610f686b21aca626ad996f7dcfd7888a4c804ee6"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3440, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}