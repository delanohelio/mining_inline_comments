{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNTg4ODg3", "number": 10928, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzo0OTo1MVrODki1SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo1ODowOFrODl3o6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjQ2MDI0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsOverlay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzo0OTo1MVrOFw7NRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzo0OTo1MVrOFw7NRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg0NjAyMw==", "bodyText": "This should be checked for null and set to a real value before calling renderPolygon.", "url": "https://github.com/runelite/runelite/pull/10928#discussion_r386846023", "createdAt": "2020-03-03T07:49:51Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsOverlay.java", "diffHunk": "@@ -60,8 +61,11 @@ private ObjectIndicatorsOverlay(Client client, ObjectIndicatorsConfig config, Ob\n \t@Override\n \tpublic Dimension render(Graphics2D graphics)\n \t{\n-\t\tfor (TileObject object : plugin.getObjects())\n+\t\tfor (ColorTileObject colorTileObject : plugin.getObjects())\n \t\t{\n+\t\t\tTileObject object = colorTileObject.getTileObject();\n+\t\t\tColor color = colorTileObject.getColor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a88e9d93bb5cfae05c8c6975d13c6c9572f6bebd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDM0MzA4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo1NTowNVrOFy_8Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo1NTowNVrOFy_8Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyMDcyMg==", "bodyText": "you can also just objects.removeIf(o -> o.getTileObject() == tileObject)", "url": "https://github.com/runelite/runelite/pull/10928#discussion_r389020722", "createdAt": "2020-03-06T16:55:05Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java", "diffHunk": "@@ -178,54 +182,56 @@ public void onWallObjectChanged(WallObjectChanged event)\n \t\tWallObject previous = event.getPrevious();\n \t\tWallObject wallObject = event.getWallObject();\n \n-\t\tobjects.remove(previous);\n+\t\tremoveObject(previous);\n \t\tcheckObjectPoints(wallObject);\n \t}\n \n \t@Subscribe\n \tpublic void onWallObjectDespawned(WallObjectDespawned event)\n \t{\n-\t\tobjects.remove(event.getWallObject());\n+\t\tremoveObject(event.getWallObject());\n \t}\n \n \t@Subscribe\n \tpublic void onGameObjectSpawned(GameObjectSpawned event)\n \t{\n-\t\tfinal GameObject eventObject = event.getGameObject();\n-\t\tcheckObjectPoints(eventObject);\n+\t\tcheckObjectPoints(event.getGameObject());\n \t}\n \n \t@Subscribe\n \tpublic void onDecorativeObjectSpawned(DecorativeObjectSpawned event)\n \t{\n-\t\tfinal DecorativeObject eventObject = event.getDecorativeObject();\n-\t\tcheckObjectPoints(eventObject);\n+\t\tcheckObjectPoints(event.getDecorativeObject());\n \t}\n \n \t@Subscribe\n \tpublic void onGameObjectDespawned(GameObjectDespawned event)\n \t{\n-\t\tobjects.remove(event.getGameObject());\n+\t\tremoveObject(event.getGameObject());\n \t}\n \n \t@Subscribe\n \tpublic void onDecorativeObjectDespawned(DecorativeObjectDespawned event)\n \t{\n-\t\tobjects.remove(event.getDecorativeObject());\n+\t\tremoveObject(event.getDecorativeObject());\n \t}\n \n \t@Subscribe\n-\tpublic void onGroundObjectSpawned(GroundObjectSpawned groundObjectSpawned)\n+\tpublic void onGroundObjectSpawned(GroundObjectSpawned event)\n \t{\n-\t\tfinal GroundObject groundObject = groundObjectSpawned.getGroundObject();\n-\t\tcheckObjectPoints(groundObject);\n+\t\tcheckObjectPoints(event.getGroundObject());\n \t}\n \n \t@Subscribe\n-\tpublic void onGroundObjectDespawned(GroundObjectDespawned groundObjectDespawned)\n+\tpublic void onGroundObjectDespawned(GroundObjectDespawned event)\n+\t{\n+\t\tremoveObject(event.getGroundObject());\n+\t}\n+\n+\tprivate void removeObject(TileObject tileObject)\n \t{\n-\t\tGroundObject groundObject = groundObjectDespawned.getGroundObject();\n-\t\tobjects.remove(groundObject);\n+\t\tColorTileObject colorTileObject = new ColorTileObject(tileObject);\n+\t\tobjects.remove(colorTileObject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bc5b1ad721ef7cb00fb72f9c36ad13fe5eb8171"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDM1NDk4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo1ODowOFrOFzADpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo1ODowOFrOFzADpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyMjYzMQ==", "bodyText": "similarly objects.stream().anyMatch(o -> o.getTileObject() == tileObject)", "url": "https://github.com/runelite/runelite/pull/10928#discussion_r389022631", "createdAt": "2020-03-06T16:58:08Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java", "diffHunk": "@@ -263,11 +269,19 @@ public void onMenuEntryAdded(MenuEntryAdded event)\n \t\t}\n \n \t\tfinal Tile tile = client.getScene().getTiles()[client.getPlane()][event.getActionParam0()][event.getActionParam1()];\n+\t\tfinal TileObject tileObject = findTileObject(tile, event.getIdentifier());\n+\n+\t\tif (tileObject == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal ColorTileObject colorTileObject = new ColorTileObject(tileObject);\n \n \t\tMenuEntry[] menuEntries = client.getMenuEntries();\n \t\tmenuEntries = Arrays.copyOf(menuEntries, menuEntries.length + 1);\n \t\tMenuEntry menuEntry = menuEntries[menuEntries.length - 1] = new MenuEntry();\n-\t\tmenuEntry.setOption(objects.contains(findTileObject(tile, event.getIdentifier())) ? UNMARK : MARK);\n+\t\tmenuEntry.setOption(objects.contains(colorTileObject) ? UNMARK : MARK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bc5b1ad721ef7cb00fb72f9c36ad13fe5eb8171"}, "originalPosition": 115}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3678, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}