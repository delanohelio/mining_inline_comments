{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTQ5ODY1", "number": 11909, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0MTowM1rOEGM1rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1Mjo1N1rOEGM_dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM3MjYxOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/infobox/InfoBoxOverlay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0MTowM1rOGk2WTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0MTowM1rOGk2WTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MjM2Nw==", "bodyText": "Why assert then cast? It will throw regardless", "url": "https://github.com/runelite/runelite/pull/11909#discussion_r441292367", "createdAt": "2020-06-17T05:41:03Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/infobox/InfoBoxOverlay.java", "diffHunk": "@@ -122,25 +141,56 @@ public Dimension render(Graphics2D graphics)\n \n \t\tfor (final LayoutableRenderableEntity child : panelComponent.getChildren())\n \t\t{\n-\t\t\tif (child instanceof InfoBoxComponent)\n+\t\t\tassert child instanceof InfoBoxComponent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28de3105b7d27b94aad8b5d56b10847a63fb4830"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM5MTU5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/infobox/InfoBoxOverlay.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1MDowN1rOGk2hcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzo0MTo1NlrOGlGU0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NTIxNw==", "bodyText": "why not just invoke a listener attached to the infobox?", "url": "https://github.com/runelite/runelite/pull/11909#discussion_r441295217", "createdAt": "2020-06-17T05:50:07Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/infobox/InfoBoxOverlay.java", "diffHunk": "@@ -122,25 +141,56 @@ public Dimension render(Graphics2D graphics)\n \n \t\tfor (final LayoutableRenderableEntity child : panelComponent.getChildren())\n \t\t{\n-\t\t\tif (child instanceof InfoBoxComponent)\n+\t\t\tassert child instanceof InfoBoxComponent;\n+\t\t\tfinal InfoBoxComponent component = (InfoBoxComponent) child;\n+\n+\t\t\t// Create intersection rectangle\n+\t\t\tfinal Rectangle intersectionRectangle = new Rectangle(component.getBounds());\n+\t\t\tintersectionRectangle.translate(getBounds().x, getBounds().y);\n+\n+\t\t\tif (intersectionRectangle.contains(mouse))\n \t\t\t{\n-\t\t\t\tfinal InfoBoxComponent component = (InfoBoxComponent) child;\n+\t\t\t\tfinal String tooltip = component.getTooltip();\n+\t\t\t\tif (!Strings.isNullOrEmpty(tooltip))\n+\t\t\t\t{\n+\t\t\t\t\ttooltipManager.add(new Tooltip(tooltip));\n+\t\t\t\t}\n \n-\t\t\t\tif (!Strings.isNullOrEmpty(component.getTooltip()))\n+\t\t\t\tif (!menuOpen)\n \t\t\t\t{\n-\t\t\t\t\t// Create intersection rectangle\n-\t\t\t\t\tfinal Rectangle intersectionRectangle = new Rectangle(component.getBounds());\n-\t\t\t\t\tintersectionRectangle.translate(getBounds().x, getBounds().y);\n-\n-\t\t\t\t\tif (intersectionRectangle.contains(mouse))\n-\t\t\t\t\t{\n-\t\t\t\t\t\ttooltipManager.add(new Tooltip(component.getTooltip()));\n-\t\t\t\t\t}\n+\t\t\t\t\thoveredComponent = component;\n \t\t\t\t}\n+\t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \n \t\tpanelComponent.getChildren().clear();\n \t\treturn dimension;\n \t}\n+\n+\t@Override\n+\tpublic List<OverlayMenuEntry> getMenuEntries()\n+\t{\n+\t\t// we dynamically build the menu options based on which infobox is hovered\n+\t\treturn hoveredComponent == null ? Collections.emptyList() : hoveredComponent.getInfoBox().getMenuEntries();\n+\t}\n+\n+\t@Subscribe\n+\tpublic void onMenuOptionClicked(MenuOptionClicked menuOptionClicked)\n+\t{\n+\t\tif (menuOptionClicked.getMenuAction() != MenuAction.RUNELITE_INFOBOX)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tInfoBox infoBox = hoveredComponent.getInfoBox();\n+\t\tOverlayMenuEntry overlayMenuEntry = infoBox.getMenuEntries().stream()\n+\t\t\t.filter(me -> me.getOption().equals(menuOptionClicked.getMenuOption()))\n+\t\t\t.findAny()\n+\t\t\t.orElse(null);\n+\t\tif (overlayMenuEntry != null)\n+\t\t{\n+\t\t\teventBus.post(new InfoBoxMenuClicked(overlayMenuEntry, infoBox));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28de3105b7d27b94aad8b5d56b10847a63fb4830"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU1NDEyOQ==", "bodyText": "EDIT: nvm", "url": "https://github.com/runelite/runelite/pull/11909#discussion_r441554129", "createdAt": "2020-06-17T13:41:56Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/infobox/InfoBoxOverlay.java", "diffHunk": "@@ -122,25 +141,56 @@ public Dimension render(Graphics2D graphics)\n \n \t\tfor (final LayoutableRenderableEntity child : panelComponent.getChildren())\n \t\t{\n-\t\t\tif (child instanceof InfoBoxComponent)\n+\t\t\tassert child instanceof InfoBoxComponent;\n+\t\t\tfinal InfoBoxComponent component = (InfoBoxComponent) child;\n+\n+\t\t\t// Create intersection rectangle\n+\t\t\tfinal Rectangle intersectionRectangle = new Rectangle(component.getBounds());\n+\t\t\tintersectionRectangle.translate(getBounds().x, getBounds().y);\n+\n+\t\t\tif (intersectionRectangle.contains(mouse))\n \t\t\t{\n-\t\t\t\tfinal InfoBoxComponent component = (InfoBoxComponent) child;\n+\t\t\t\tfinal String tooltip = component.getTooltip();\n+\t\t\t\tif (!Strings.isNullOrEmpty(tooltip))\n+\t\t\t\t{\n+\t\t\t\t\ttooltipManager.add(new Tooltip(tooltip));\n+\t\t\t\t}\n \n-\t\t\t\tif (!Strings.isNullOrEmpty(component.getTooltip()))\n+\t\t\t\tif (!menuOpen)\n \t\t\t\t{\n-\t\t\t\t\t// Create intersection rectangle\n-\t\t\t\t\tfinal Rectangle intersectionRectangle = new Rectangle(component.getBounds());\n-\t\t\t\t\tintersectionRectangle.translate(getBounds().x, getBounds().y);\n-\n-\t\t\t\t\tif (intersectionRectangle.contains(mouse))\n-\t\t\t\t\t{\n-\t\t\t\t\t\ttooltipManager.add(new Tooltip(component.getTooltip()));\n-\t\t\t\t\t}\n+\t\t\t\t\thoveredComponent = component;\n \t\t\t\t}\n+\t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \n \t\tpanelComponent.getChildren().clear();\n \t\treturn dimension;\n \t}\n+\n+\t@Override\n+\tpublic List<OverlayMenuEntry> getMenuEntries()\n+\t{\n+\t\t// we dynamically build the menu options based on which infobox is hovered\n+\t\treturn hoveredComponent == null ? Collections.emptyList() : hoveredComponent.getInfoBox().getMenuEntries();\n+\t}\n+\n+\t@Subscribe\n+\tpublic void onMenuOptionClicked(MenuOptionClicked menuOptionClicked)\n+\t{\n+\t\tif (menuOptionClicked.getMenuAction() != MenuAction.RUNELITE_INFOBOX)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tInfoBox infoBox = hoveredComponent.getInfoBox();\n+\t\tOverlayMenuEntry overlayMenuEntry = infoBox.getMenuEntries().stream()\n+\t\t\t.filter(me -> me.getOption().equals(menuOptionClicked.getMenuOption()))\n+\t\t\t.findAny()\n+\t\t\t.orElse(null);\n+\t\tif (overlayMenuEntry != null)\n+\t\t{\n+\t\t\teventBus.post(new InfoBoxMenuClicked(overlayMenuEntry, infoBox));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NTIxNw=="}, "originalCommit": {"oid": "28de3105b7d27b94aad8b5d56b10847a63fb4830"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM5NzY0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/deathindicator/DeathIndicatorPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1Mjo1N1rOGk2lJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1Mjo1N1rOGk2lJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NjE2NA==", "bodyText": "if (infoBoxMenuClicked.getInfobox() == deathTimer)?", "url": "https://github.com/runelite/runelite/pull/11909#discussion_r441296164", "createdAt": "2020-06-17T05:52:57Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/deathindicator/DeathIndicatorPlugin.java", "diffHunk": "@@ -287,12 +303,37 @@ public void onGameStateChanged(GameStateChanged event)\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onInfoBoxMenuClicked(InfoBoxMenuClicked infoBoxMenuClicked)\n+\t{\n+\t\tOverlayMenuEntry overlayMenuEntry = infoBoxMenuClicked.getEntry();\n+\t\tif (overlayMenuEntry.getMenuAction() == MenuAction.RUNELITE_INFOBOX\n+\t\t\t&& infoBoxMenuClicked.getInfoBox() == deathTimer\n+\t\t\t&& infoBoxMenuClicked.getEntry().getOption().equals(DEATH_TIMER_CLEAR))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca45fbe4103f1f66f75ee92798673258c17c725f"}, "originalPosition": 134}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3371, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}