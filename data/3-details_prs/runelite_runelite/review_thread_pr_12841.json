{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NzI4MzUx", "number": 12841, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyMjoxNVrOE-4cSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyNjowNFrOE-4gbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzcxOTEyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyMjoxNVrOH8RyPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyMjoxNVrOH8RyPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2Nzk5OQ==", "bodyText": "Maybe call this Threshold Notifications", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532967999", "createdAt": "2020-11-30T23:22:15Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\r\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+\r\n+package net.runelite.client.plugins.specialcounter;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+\r\n+@ConfigGroup(\"specialcounter\")\r\n+public interface SpecialCounterConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 0,\r\n+\t\t\tkeyName = \"receiveSpecialAttackNotification\",\r\n+\t\t\tname = \"Notification\",\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzcxOTc4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyMjoyNlrOH8Rylw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyMjoyNlrOH8Rylw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2ODA4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tkeyName = \"receiveSpecialAttackNotification\",\n          \n          \n            \n            \t\t\tkeyName = \"thresholdNotification\",", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532968087", "createdAt": "2020-11-30T23:22:26Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\r\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+\r\n+package net.runelite.client.plugins.specialcounter;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+\r\n+@ConfigGroup(\"specialcounter\")\r\n+public interface SpecialCounterConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 0,\r\n+\t\t\tkeyName = \"receiveSpecialAttackNotification\",\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzcyMTQ1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyMzoxMFrOH8RzoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyMzoxMFrOH8RzoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2ODM1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tdefault boolean receiveSpecialAttackNotification()\n          \n          \n            \n            \tdefault boolean thresholdNotification()", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532968352", "createdAt": "2020-11-30T23:23:10Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\r\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+\r\n+package net.runelite.client.plugins.specialcounter;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+\r\n+@ConfigGroup(\"specialcounter\")\r\n+public interface SpecialCounterConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 0,\r\n+\t\t\tkeyName = \"receiveSpecialAttackNotification\",\r\n+\t\t\tname = \"Notification\",\r\n+\t\t\tdescription = \"Check to receive notifications at below thresholds\"\r\n+\t)\r\n+\tdefault boolean receiveSpecialAttackNotification()\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzcyMzk3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyNDoxMFrOH8R1HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyNDoxMFrOH8R1HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2ODczMw==", "bodyText": "I would just default these to 0 and treat that as off, which is consistent with many other things we have.", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532968733", "createdAt": "2020-11-30T23:24:10Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\r\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+\r\n+package net.runelite.client.plugins.specialcounter;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+\r\n+@ConfigGroup(\"specialcounter\")\r\n+public interface SpecialCounterConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 0,\r\n+\t\t\tkeyName = \"receiveSpecialAttackNotification\",\r\n+\t\t\tname = \"Notification\",\r\n+\t\t\tdescription = \"Check to receive notifications at below thresholds\"\r\n+\t)\r\n+\tdefault boolean receiveSpecialAttackNotification()\r\n+\t{\r\n+\t\treturn false;\r\n+\t}\r\n+\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 1,\r\n+\t\t\tkeyName = \"dragonWarhammerThreshold\",\r\n+\t\t\tname = \"Dragon Warhammer\",\r\n+\t\t\tdescription = \"Threshold for Dragon Warhammer\"\r\n+\t)\r\n+\tdefault int dragonWarhammerThreshold()\r\n+\t{\r\n+\t\treturn 1;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzcyOTc0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyNjowNFrOH8R4YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoyNjowNFrOH8R4YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2OTU2OA==", "bodyText": "Instead of switching on the weapon name, use the weapon. This is preferred in the event an item name changes.", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532969568", "createdAt": "2020-11-30T23:26:04Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterPlugin.java", "diffHunk": "@@ -326,6 +345,44 @@ private void updateCounter(SpecialWeapon specialWeapon, String name, int hit)\n \t\t}\n \t}\n \n+\tprivate void displayNotification(SpecialWeapon weapon, SpecialCounter counter)\n+\t{\n+\t\tif (config.receiveSpecialAttackNotification())\n+\t\t{\n+\t\t\tif (counter.getCount() >= getSpecialWeaponThreshold(weapon))\n+\t\t\t{\n+\t\t\t\tString notificationMessage = \"You've reached your \" + weapon.getName() + \" threshold!\";\n+\t\t\t\tnotifier.notify(notificationMessage);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate int getSpecialWeaponThreshold(SpecialWeapon weapon)\n+\t{\n+\t\tint threshold = Integer.MAX_VALUE;\n+\n+\t\tswitch (weapon.getName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3264, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}