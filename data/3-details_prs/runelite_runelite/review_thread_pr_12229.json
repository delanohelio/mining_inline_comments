{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzAyNjQy", "number": 12229, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwNToxNDoyN1rOESHK1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTozODoyMFrOEbA9oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDI3Mjg1OnYy", "diffSide": "LEFT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/cannon/CannonConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwNToxNDoyN1rOG3JdBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwNToxNDoyN1rOG3JdBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ3OTc1MQ==", "bodyText": "Revert this change", "url": "https://github.com/runelite/runelite/pull/12229#discussion_r460479751", "createdAt": "2020-07-26T05:14:27Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/cannon/CannonConfig.java", "diffHunk": "@@ -89,10 +89,7 @@ default boolean showDoubleHitSpot()\n \t\tdescription = \"Configures the highlight color of double hit spots\",\n \t\tposition = 5\n \t)\n-\tdefault Color highlightDoubleHitColor()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabfdf8a3950a22f7ff52b19b8d5440379200b4a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODc4NDQ1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/config/ConfigManagerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMjozMjo0N1rOG5Q3dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMjozMjo0N1rOG5Q3dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY5ODM1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tAssert.assertEquals(conf.nullDefaultKey(), null);\n          \n          \n            \n            \t\tAssert.assertNull(conf.nullDefaultKey());", "url": "https://github.com/runelite/runelite/pull/12229#discussion_r462698356", "createdAt": "2020-07-30T02:32:47Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/test/java/net/runelite/client/config/ConfigManagerTest.java", "diffHunk": "@@ -118,6 +118,21 @@ public void testGetConfigDescriptor() throws IOException\n \n \t\tTestConfig conf = manager.getConfig(TestConfig.class);\n \t\tConfigDescriptor descriptor = manager.getConfigDescriptor(conf);\n-\t\tAssert.assertEquals(1, descriptor.getItems().size());\n+\t\tAssert.assertEquals(2, descriptor.getItems().size());\n+\t}\n+\n+\t@Test\n+\tpublic void testResetNullDefaultConfig()\n+\t{\n+\t\tAccountSession accountSession = new AccountSession(UUID.randomUUID(), Instant.now());\n+\t\taccountSession.setUsername(\"test\");\n+\n+\t\tTestConfig conf = manager.getConfig(TestConfig.class);\n+\t\tConfigDescriptor descriptor = manager.getConfigDescriptor(conf);\n+\t\tconf.nullDefaultKey(\"new value\");\n+\n+\t\tmanager.unsetConfiguration(descriptor.getGroup().value(), \"nullDefaultKey\");\n+\t\tmanager.setDefaultConfiguration(conf, false);\n+\t\tAssert.assertEquals(conf.nullDefaultKey(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "987782010ced695dec218eb2ab6f648b577a2e5b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzYxMjQ1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/config/ConfigManagerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTozMzo1OFrOHEx5IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTozMzo1OFrOHEx5IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc3Mzc5Mw==", "bodyText": "What is this?", "url": "https://github.com/runelite/runelite/pull/12229#discussion_r474773793", "createdAt": "2020-08-21T15:33:58Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/test/java/net/runelite/client/config/ConfigManagerTest.java", "diffHunk": "@@ -118,6 +118,21 @@ public void testGetConfigDescriptor() throws IOException\n \n \t\tTestConfig conf = manager.getConfig(TestConfig.class);\n \t\tConfigDescriptor descriptor = manager.getConfigDescriptor(conf);\n-\t\tAssert.assertEquals(1, descriptor.getItems().size());\n+\t\tAssert.assertEquals(2, descriptor.getItems().size());\n+\t}\n+\n+\t@Test\n+\tpublic void testResetNullDefaultConfig()\n+\t{\n+\t\tAccountSession accountSession = new AccountSession(UUID.randomUUID(), Instant.now());\n+\t\taccountSession.setUsername(\"test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02ee2e618b9cd2d48f82ba0b6c21a7d0430efab8"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzYyNzg1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/config/ConfigManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTozODoyMFrOHEyCsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTozODoyMFrOHEyCsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc3NjI0MA==", "bodyText": "Shouldn't this just be object == null ? null : object.toString()?", "url": "https://github.com/runelite/runelite/pull/12229#discussion_r474776240", "createdAt": "2020-08-21T15:38:20Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/config/ConfigManager.java", "diffHunk": "@@ -703,7 +703,7 @@ static String objectToString(Object object)\n \t\t{\n \t\t\treturn Long.toString(((Duration) object).toMillis());\n \t\t}\n-\t\treturn object.toString();\n+\t\treturn object == null ? \"\" : object.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02ee2e618b9cd2d48f82ba0b6c21a7d0430efab8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3333, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}