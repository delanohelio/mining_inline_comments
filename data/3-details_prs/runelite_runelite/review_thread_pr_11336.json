{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2ODkzNTI4", "number": 11336, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNjo1NjoyOVrOD2Q25w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0NDowN1rOD4AcJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MjI1ODk1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNjo1NjoyOVrOGL_9kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNzozOTozMVrOGMHn8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNTQ3Mg==", "bodyText": "This feels way too much like it should be an API function than an, admittedly documented, magic number-ridden line of code in some plugin.", "url": "https://github.com/runelite/runelite/pull/11336#discussion_r415235472", "createdAt": "2020-04-26T06:56:29Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "diffHunk": "@@ -167,6 +182,43 @@ public void onChatMessage(ChatMessage chatMessage)\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onMenuOpened(MenuOpened event)\n+\t{\n+\t\tif (event.getFirstEntry() == null || !config.copyToClipboard())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal int groupId = TO_GROUP(event.getFirstEntry().getParam1());\n+\t\tfinal int childId = TO_CHILD(event.getFirstEntry().getParam1());\n+\n+\t\tif (groupId != WidgetInfo.CHATBOX.getGroupId())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Widget widget = client.getWidget(groupId, childId);\n+\t\tfinal Widget parent = widget.getParent();\n+\t\tfinal Widget[] dynamicChildren = parent.getDynamicChildren();\n+\n+\t\t// Convert current message static widget id to dynamic widget id of message node with message contents\n+\t\tfinal int dynamicChildId = (childId - 59) * 2 + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5765ebffbfc4273d3deb31b7ba50e8b1145c6e"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM2MTAwOA==", "bodyText": "I don't think this should be API method as I don't think it will be useful outside of this plugin. It works just for getting chat message contents based on info from menu entry when menu is openened and nothing else.", "url": "https://github.com/runelite/runelite/pull/11336#discussion_r415361008", "createdAt": "2020-04-26T17:39:31Z", "author": {"login": "deathbeam"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "diffHunk": "@@ -167,6 +182,43 @@ public void onChatMessage(ChatMessage chatMessage)\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onMenuOpened(MenuOpened event)\n+\t{\n+\t\tif (event.getFirstEntry() == null || !config.copyToClipboard())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal int groupId = TO_GROUP(event.getFirstEntry().getParam1());\n+\t\tfinal int childId = TO_CHILD(event.getFirstEntry().getParam1());\n+\n+\t\tif (groupId != WidgetInfo.CHATBOX.getGroupId())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Widget widget = client.getWidget(groupId, childId);\n+\t\tfinal Widget parent = widget.getParent();\n+\t\tfinal Widget[] dynamicChildren = parent.getDynamicChildren();\n+\n+\t\t// Convert current message static widget id to dynamic widget id of message node with message contents\n+\t\tfinal int dynamicChildId = (childId - 59) * 2 + 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNTQ3Mg=="}, "originalCommit": {"oid": "5f5765ebffbfc4273d3deb31b7ba50e8b1145c6e"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDQ3MzA2OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMToyMjozMVrOGOk83w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMToyMjozMVrOGOk83w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkzODY1NQ==", "bodyText": "this should check the entry type first", "url": "https://github.com/runelite/runelite/pull/11336#discussion_r417938655", "createdAt": "2020-04-30T11:22:31Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "diffHunk": "@@ -167,6 +182,50 @@ public void onChatMessage(ChatMessage chatMessage)\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onMenuOpened(MenuOpened event)\n+\t{\n+\t\tif (event.getMenuEntries().length < 2 || !config.copyToClipboard())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t// Use second entry as first one can be walk here with transparent chatbox\n+\t\tfinal MenuEntry entry = event.getMenuEntries()[event.getMenuEntries().length - 2];\n+\n+\t\tfinal int groupId = TO_GROUP(entry.getParam1());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38faa2d5d6eca07cdb1db917583fcf74dd20277d"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDUxMzU1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozNTo1MlrOGOlWNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozNTo1MlrOGOlWNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0NTE0Mg==", "bodyText": "This should be a constant 169.59 in widgetinfo", "url": "https://github.com/runelite/runelite/pull/11336#discussion_r417945142", "createdAt": "2020-04-30T11:35:52Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "diffHunk": "@@ -167,6 +182,50 @@ public void onChatMessage(ChatMessage chatMessage)\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onMenuOpened(MenuOpened event)\n+\t{\n+\t\tif (event.getMenuEntries().length < 2 || !config.copyToClipboard())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t// Use second entry as first one can be walk here with transparent chatbox\n+\t\tfinal MenuEntry entry = event.getMenuEntries()[event.getMenuEntries().length - 2];\n+\n+\t\tfinal int groupId = TO_GROUP(entry.getParam1());\n+\t\tfinal int childId = TO_CHILD(entry.getParam1());\n+\n+\t\tif (groupId != WidgetInfo.CHATBOX.getGroupId())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Widget widget = client.getWidget(groupId, childId);\n+\t\tfinal Widget parent = widget.getParent();\n+\t\tfinal Widget[] dynamicChildren = parent.getDynamicChildren();\n+\n+\t\t// Get child id of first chat message static child so we can substract this offset to link to dynamic child\n+\t\t// later\n+\t\tfinal int first = TO_CHILD(parent.getStaticChildren()[0].getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38faa2d5d6eca07cdb1db917583fcf74dd20277d"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDUyNDMyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozOTowMFrOGOlcsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozOTowMFrOGOlcsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0NjgwMA==", "bodyText": "this should have a check against a widget info too", "url": "https://github.com/runelite/runelite/pull/11336#discussion_r417946800", "createdAt": "2020-04-30T11:39:00Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "diffHunk": "@@ -167,6 +182,50 @@ public void onChatMessage(ChatMessage chatMessage)\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onMenuOpened(MenuOpened event)\n+\t{\n+\t\tif (event.getMenuEntries().length < 2 || !config.copyToClipboard())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t// Use second entry as first one can be walk here with transparent chatbox\n+\t\tfinal MenuEntry entry = event.getMenuEntries()[event.getMenuEntries().length - 2];\n+\n+\t\tfinal int groupId = TO_GROUP(entry.getParam1());\n+\t\tfinal int childId = TO_CHILD(entry.getParam1());\n+\n+\t\tif (groupId != WidgetInfo.CHATBOX.getGroupId())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Widget widget = client.getWidget(groupId, childId);\n+\t\tfinal Widget parent = widget.getParent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38faa2d5d6eca07cdb1db917583fcf74dd20277d"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDUyNDkxOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozOToxMlrOGOldGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozOToxMlrOGOldGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0NjkwNQ==", "bodyText": "prefer getChildren or getChild", "url": "https://github.com/runelite/runelite/pull/11336#discussion_r417946905", "createdAt": "2020-04-30T11:39:12Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "diffHunk": "@@ -167,6 +182,50 @@ public void onChatMessage(ChatMessage chatMessage)\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onMenuOpened(MenuOpened event)\n+\t{\n+\t\tif (event.getMenuEntries().length < 2 || !config.copyToClipboard())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t// Use second entry as first one can be walk here with transparent chatbox\n+\t\tfinal MenuEntry entry = event.getMenuEntries()[event.getMenuEntries().length - 2];\n+\n+\t\tfinal int groupId = TO_GROUP(entry.getParam1());\n+\t\tfinal int childId = TO_CHILD(entry.getParam1());\n+\n+\t\tif (groupId != WidgetInfo.CHATBOX.getGroupId())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Widget widget = client.getWidget(groupId, childId);\n+\t\tfinal Widget parent = widget.getParent();\n+\t\tfinal Widget[] dynamicChildren = parent.getDynamicChildren();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38faa2d5d6eca07cdb1db917583fcf74dd20277d"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDUzMjAyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0MToyNlrOGOlhbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0MToyNlrOGOlhbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0ODAxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\telse if (menuOption.contains(COPY_TO_CLIPBOARD) && !Strings.isNullOrEmpty(currentMessage))\n          \n          \n            \n            \t\telse if (COPY_TO_CLIPBOARD.equals(menuOption) && !Strings.isNullOrEmpty(currentMessage))", "url": "https://github.com/runelite/runelite/pull/11336#discussion_r417948015", "createdAt": "2020-04-30T11:41:26Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "diffHunk": "@@ -185,6 +244,11 @@ public void onMenuOptionClicked(MenuOptionClicked event)\n \t\t\t\tmessageQueue.removeIf(e -> e.getType() == ChatMessageType.PUBLICCHAT || e.getType() == ChatMessageType.MODCHAT);\n \t\t\t}\n \t\t}\n+\t\telse if (menuOption.contains(COPY_TO_CLIPBOARD) && !Strings.isNullOrEmpty(currentMessage))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38faa2d5d6eca07cdb1db917583fcf74dd20277d"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDU0MDU0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0NDowN1rOGOlmiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0NDowN1rOGOlmiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0OTMyMQ==", "bodyText": "also an explanation of what the widget tree looks like for this to work would be nice", "url": "https://github.com/runelite/runelite/pull/11336#discussion_r417949321", "createdAt": "2020-04-30T11:44:07Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/chathistory/ChatHistoryPlugin.java", "diffHunk": "@@ -167,6 +182,50 @@ public void onChatMessage(ChatMessage chatMessage)\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onMenuOpened(MenuOpened event)\n+\t{\n+\t\tif (event.getMenuEntries().length < 2 || !config.copyToClipboard())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t// Use second entry as first one can be walk here with transparent chatbox\n+\t\tfinal MenuEntry entry = event.getMenuEntries()[event.getMenuEntries().length - 2];\n+\n+\t\tfinal int groupId = TO_GROUP(entry.getParam1());\n+\t\tfinal int childId = TO_CHILD(entry.getParam1());\n+\n+\t\tif (groupId != WidgetInfo.CHATBOX.getGroupId())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal Widget widget = client.getWidget(groupId, childId);\n+\t\tfinal Widget parent = widget.getParent();\n+\t\tfinal Widget[] dynamicChildren = parent.getDynamicChildren();\n+\n+\t\t// Get child id of first chat message static child so we can substract this offset to link to dynamic child\n+\t\t// later\n+\t\tfinal int first = TO_CHILD(parent.getStaticChildren()[0].getId());\n+\n+\t\t// Convert current message static widget id to dynamic widget id of message node with message contents\n+\t\tfinal int dynamicChildId = (childId - first) * 2 + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38faa2d5d6eca07cdb1db917583fcf74dd20277d"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3642, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}