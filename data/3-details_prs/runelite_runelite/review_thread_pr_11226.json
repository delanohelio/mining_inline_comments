{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwODYwMjY2", "number": 11226, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjoxNTo1NFrODwlb8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjoxNTo1NFrODwlb8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjcxNjAyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilitySession.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjoxNTo1NFrOGDrQ2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMzoxMTozM1rOGDsWxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwNzczNw==", "bodyText": "You can simplify this to something like:\n\t\tInstant now = Instant.now();\n\n\t\tif (lastLapCompleted != null)\n\t\t{\n\t\t\tDuration timeSinceLastLap = Duration.between(lastLapCompleted, now);\n\n\t\t\tif (!timeSinceLastLap.isNegative())\n\t\t\t{\n\t\t\t\tlastLapTimes.add(timeSinceLastLap);\n\n\t\t\t\tDuration sum = Duration.ofSeconds(0);\n\t\t\t\tfor (Duration lapTime : lastLapTimes)\n\t\t\t\t{\n\t\t\t\t\tsum = sum.plus(lapTime);\n\t\t\t\t}\n\n\t\t\t\tDuration averageLapTime = sum.dividedBy(lastLapTimes.size());\n\t\t\t\tlapsPerHour = Duration.ofHours(1).toMillis() / averageLapTime.toMillis();\n\t\t\t}\n\t\t}\n\n\t\tlastLapCompleted = now;", "url": "https://github.com/runelite/runelite/pull/11226#discussion_r406507737", "createdAt": "2020-04-09T22:15:54Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilitySession.java", "diffHunk": "@@ -64,6 +70,37 @@ void incrementLapCount(Client client, XpTrackerService xpTrackerService)\n \t\tlapsTillGoal = goalRemainingXp > 0 ? (int) Math.ceil(goalRemainingXp / courseTotalExp) : 0;\n \t}\n \n+\tvoid calculateLapsPerHour()\n+\t{\n+\t\tInstant now = Instant.now();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe6bd20189873283cdf6710f7069a6b3af7c1a6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyNTYzOQ==", "bodyText": "That is better, I have fixed this", "url": "https://github.com/runelite/runelite/pull/11226#discussion_r406525639", "createdAt": "2020-04-09T23:11:33Z", "author": {"login": "petter"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilitySession.java", "diffHunk": "@@ -64,6 +70,37 @@ void incrementLapCount(Client client, XpTrackerService xpTrackerService)\n \t\tlapsTillGoal = goalRemainingXp > 0 ? (int) Math.ceil(goalRemainingXp / courseTotalExp) : 0;\n \t}\n \n+\tvoid calculateLapsPerHour()\n+\t{\n+\t\tInstant now = Instant.now();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwNzczNw=="}, "originalCommit": {"oid": "7fe6bd20189873283cdf6710f7069a6b3af7c1a6"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3613, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}