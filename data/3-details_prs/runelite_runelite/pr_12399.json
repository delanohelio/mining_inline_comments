{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MDgxMTUw", "number": 12399, "title": "DevTools: Add Movement Flags DevTools Plugin.", "bodyText": "Background: I created this tool to assist a Hallowed Sepulchre plugin (in progress) and I thought it might be useful to others.\nThis plugin highlights the tile the player is currently hovering over and displays the movement flags above it. The movement flags can be useful for pathfinding and other debugging purposes.", "createdAt": "2020-08-26T18:33:30Z", "url": "https://github.com/runelite/runelite/pull/12399", "merged": true, "mergeCommit": {"oid": "a8846cfef85b5a0b8c1bc10d582d95e61f613459"}, "closed": true, "closedAt": "2020-09-28T01:02:53Z", "author": {"login": "Pratted"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCx9rWAFqTQ3NTgzNDY4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNCEmSgH2gAyNDc0MDgxMTUwOjIwODM2OTEyN2JjODZlODY5YjA5NDMxMDRlN2M2ZjdmNWNmMmU4YmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODM0Njg3", "url": "https://github.com/runelite/runelite/pull/12399#pullrequestreview-475834687", "createdAt": "2020-08-26T20:28:54Z", "commit": {"oid": "89ac38b87023f76f712765e445c061607250d101"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDoyODo1NFrOHHcjbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDozNTo1NlrOHHcxww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2OTkwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\ttoolTipManager.add(new Tooltip(\"No flags\"));\n          \n          \n            \n            \t\t\t\t\ttoolTipManager.add(new Tooltip(\"No movement flags\"));", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477569903", "createdAt": "2020-08-26T20:28:54Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/DevToolsOverlay.java", "diffHunk": "@@ -249,6 +255,34 @@ private void renderTileTooltip(Graphics2D graphics, Tile tile)\n \t\t}\n \t}\n \n+\tprivate void renderMovementInfo(Graphics2D graphics, Tile tile)\n+\t{\n+\t\tPolygon poly = Perspective.getCanvasTilePoly(client, tile.getLocalLocation());\n+\n+\t\tif (poly != null && poly.contains(client.getMouseCanvasPosition().getX(), client.getMouseCanvasPosition().getY()))\n+\t\t{\n+\t\t\t// We can only get CollisionMaps only for instanced regions.\n+\t\t\tif (client.isInInstancedRegion() && client.getCollisionMaps() != null)\n+\t\t\t{\n+\t\t\t\tint flags[][] = client.getCollisionMaps()[client.getPlane()].getFlags();\n+\t\t\t\tint data = flags[tile.getSceneLocation().getX()][tile.getSceneLocation().getY()];\n+\n+\t\t\t\tSet<MovementFlag> movementFlags = MovementFlag.getSetFlags(data);\n+\n+\t\t\t\tif (movementFlags.isEmpty())\n+\t\t\t\t{\n+\t\t\t\t\ttoolTipManager.add(new Tooltip(\"No flags\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89ac38b87023f76f712765e445c061607250d101"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MDY5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tint flag;\n          \n          \n            \n            \tprivate int flag;", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477570696", "createdAt": "2020-08-26T20:30:24Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/MovementFlag.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Pratted <https://github.com/Pratted>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import net.runelite.api.CollisionDataFlag;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An enum that binds a name to each movement flag.\n+ *\n+ * @see CollisionDataFlag\n+ */\n+@AllArgsConstructor\n+public enum MovementFlag\n+{\n+\tBLOCK_MOVEMENT_NORTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_WEST),\n+\tBLOCK_MOVEMENT_NORTH(CollisionDataFlag.BLOCK_MOVEMENT_NORTH),\n+\tBLOCK_MOVEMENT_NORTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_EAST),\n+\tBLOCK_MOVEMENT_EAST(CollisionDataFlag.BLOCK_MOVEMENT_EAST),\n+\tBLOCK_MOVEMENT_SOUTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_EAST),\n+\tBLOCK_MOVEMENT_SOUTH(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH),\n+\tBLOCK_MOVEMENT_SOUTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_WEST),\n+\tBLOCK_MOVEMENT_WEST(CollisionDataFlag.BLOCK_MOVEMENT_WEST),\n+\n+\tBLOCK_MOVEMENT_OBJECT(CollisionDataFlag.BLOCK_MOVEMENT_OBJECT),\n+\tBLOCK_MOVEMENT_FLOOR_DECORATION(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR_DECORATION),\n+\tBLOCK_MOVEMENT_FLOOR(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR),\n+\tBLOCK_MOVEMENT_FULL(CollisionDataFlag.BLOCK_MOVEMENT_FULL);\n+\n+\t@Getter\n+\tint flag;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89ac38b87023f76f712765e445c061607250d101"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MDg2NA==", "bodyText": "Dedent these lines by one level.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t.filter(movementFlag -> (movementFlag.flag & collisionData) > 0)\n          \n          \n            \n            \t\t\t\t.collect(Collectors.toSet());\n          \n          \n            \n            \t\t\t.filter(movementFlag -> (movementFlag.flag & collisionData) > 0)\n          \n          \n            \n            \t\t\t.collect(Collectors.toSet());", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477570864", "createdAt": "2020-08-26T20:30:44Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/MovementFlag.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Pratted <https://github.com/Pratted>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import net.runelite.api.CollisionDataFlag;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An enum that binds a name to each movement flag.\n+ *\n+ * @see CollisionDataFlag\n+ */\n+@AllArgsConstructor\n+public enum MovementFlag\n+{\n+\tBLOCK_MOVEMENT_NORTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_WEST),\n+\tBLOCK_MOVEMENT_NORTH(CollisionDataFlag.BLOCK_MOVEMENT_NORTH),\n+\tBLOCK_MOVEMENT_NORTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_EAST),\n+\tBLOCK_MOVEMENT_EAST(CollisionDataFlag.BLOCK_MOVEMENT_EAST),\n+\tBLOCK_MOVEMENT_SOUTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_EAST),\n+\tBLOCK_MOVEMENT_SOUTH(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH),\n+\tBLOCK_MOVEMENT_SOUTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_WEST),\n+\tBLOCK_MOVEMENT_WEST(CollisionDataFlag.BLOCK_MOVEMENT_WEST),\n+\n+\tBLOCK_MOVEMENT_OBJECT(CollisionDataFlag.BLOCK_MOVEMENT_OBJECT),\n+\tBLOCK_MOVEMENT_FLOOR_DECORATION(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR_DECORATION),\n+\tBLOCK_MOVEMENT_FLOOR(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR),\n+\tBLOCK_MOVEMENT_FULL(CollisionDataFlag.BLOCK_MOVEMENT_FULL);\n+\n+\t@Getter\n+\tint flag;\n+\n+\t/**\n+\t * @param collisionData The tile collision flags.\n+\t * @return The set of {@link MovementFlag}s that have been set.\n+\t */\n+\tpublic static Set<MovementFlag> getSetFlags(int collisionData)\n+\t{\n+\t\treturn Arrays.stream(values())\n+\t\t\t\t.filter(movementFlag -> (movementFlag.flag & collisionData) > 0)\n+\t\t\t\t.collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89ac38b87023f76f712765e445c061607250d101"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MTM2MA==", "bodyText": "I believe we have reversed this behavior, so this should be available in non-instanced areas now.", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477571360", "createdAt": "2020-08-26T20:31:45Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/DevToolsOverlay.java", "diffHunk": "@@ -249,6 +255,34 @@ private void renderTileTooltip(Graphics2D graphics, Tile tile)\n \t\t}\n \t}\n \n+\tprivate void renderMovementInfo(Graphics2D graphics, Tile tile)\n+\t{\n+\t\tPolygon poly = Perspective.getCanvasTilePoly(client, tile.getLocalLocation());\n+\n+\t\tif (poly != null && poly.contains(client.getMouseCanvasPosition().getX(), client.getMouseCanvasPosition().getY()))\n+\t\t{\n+\t\t\t// We can only get CollisionMaps only for instanced regions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89ac38b87023f76f712765e445c061607250d101"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MjczOQ==", "bodyText": "Use a guard clause instead of a large nested if statement.\neg.\nif (poly == null || !poly.contains(client.getMousePosition().getX(), client.getMousePosition().getY())\n{\n\treturn;\n}\n\n// continue method code here", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477572739", "createdAt": "2020-08-26T20:34:30Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/DevToolsOverlay.java", "diffHunk": "@@ -249,6 +255,34 @@ private void renderTileTooltip(Graphics2D graphics, Tile tile)\n \t\t}\n \t}\n \n+\tprivate void renderMovementInfo(Graphics2D graphics, Tile tile)\n+\t{\n+\t\tPolygon poly = Perspective.getCanvasTilePoly(client, tile.getLocalLocation());\n+\n+\t\tif (poly != null && poly.contains(client.getMouseCanvasPosition().getX(), client.getMouseCanvasPosition().getY()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89ac38b87023f76f712765e445c061607250d101"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MzU3MQ==", "bodyText": "We prefer Type[][] varName over Type varName[][]", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477573571", "createdAt": "2020-08-26T20:35:56Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/DevToolsOverlay.java", "diffHunk": "@@ -249,6 +255,34 @@ private void renderTileTooltip(Graphics2D graphics, Tile tile)\n \t\t}\n \t}\n \n+\tprivate void renderMovementInfo(Graphics2D graphics, Tile tile)\n+\t{\n+\t\tPolygon poly = Perspective.getCanvasTilePoly(client, tile.getLocalLocation());\n+\n+\t\tif (poly != null && poly.contains(client.getMouseCanvasPosition().getX(), client.getMouseCanvasPosition().getY()))\n+\t\t{\n+\t\t\t// We can only get CollisionMaps only for instanced regions.\n+\t\t\tif (client.isInInstancedRegion() && client.getCollisionMaps() != null)\n+\t\t\t{\n+\t\t\t\tint flags[][] = client.getCollisionMaps()[client.getPlane()].getFlags();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89ac38b87023f76f712765e445c061607250d101"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "89ac38b87023f76f712765e445c061607250d101", "author": {"user": {"login": "Pratted", "name": "Eric Pratt"}}, "url": "https://github.com/runelite/runelite/commit/89ac38b87023f76f712765e445c061607250d101", "committedDate": "2020-08-26T18:15:08Z", "message": "Add MovementFlags devtools plugin."}, "afterCommit": {"oid": "4abbed7f1d701ce7456609d3854f32180c6b7017", "author": {"user": {"login": "Pratted", "name": "Eric Pratt"}}, "url": "https://github.com/runelite/runelite/commit/4abbed7f1d701ce7456609d3854f32180c6b7017", "committedDate": "2020-08-26T21:22:23Z", "message": "Add MovementFlags devtools plugin."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1OTU5ODI3", "url": "https://github.com/runelite/runelite/pull/12399#pullrequestreview-475959827", "createdAt": "2020-08-26T22:29:09Z", "commit": {"oid": "4abbed7f1d701ce7456609d3854f32180c6b7017"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMjoyOTowOVrOHHf4xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMjoyOTowOVrOHHf4xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYyNDUxOA==", "bodyText": "This should be package private\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public enum MovementFlag\n          \n          \n            \n            enum MovementFlag", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r477624518", "createdAt": "2020-08-26T22:29:09Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/MovementFlag.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Pratted <https://github.com/Pratted>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import net.runelite.api.CollisionDataFlag;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An enum that binds a name to each movement flag.\n+ *\n+ * @see CollisionDataFlag\n+ */\n+@AllArgsConstructor\n+public enum MovementFlag", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4abbed7f1d701ce7456609d3854f32180c6b7017"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abf636929062fb4b72382b7aefb942a003ffc307", "author": {"user": {"login": "Pratted", "name": "Eric Pratt"}}, "url": "https://github.com/runelite/runelite/commit/abf636929062fb4b72382b7aefb942a003ffc307", "committedDate": "2020-08-26T23:27:51Z", "message": "Add MovementFlags devtools plugin."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4abbed7f1d701ce7456609d3854f32180c6b7017", "author": {"user": {"login": "Pratted", "name": "Eric Pratt"}}, "url": "https://github.com/runelite/runelite/commit/4abbed7f1d701ce7456609d3854f32180c6b7017", "committedDate": "2020-08-26T21:22:23Z", "message": "Add MovementFlags devtools plugin."}, "afterCommit": {"oid": "abf636929062fb4b72382b7aefb942a003ffc307", "author": {"user": {"login": "Pratted", "name": "Eric Pratt"}}, "url": "https://github.com/runelite/runelite/commit/abf636929062fb4b72382b7aefb942a003ffc307", "committedDate": "2020-08-26T23:27:51Z", "message": "Add MovementFlags devtools plugin."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDk1MTQ2", "url": "https://github.com/runelite/runelite/pull/12399#pullrequestreview-497095146", "createdAt": "2020-09-27T16:57:54Z", "commit": {"oid": "abf636929062fb4b72382b7aefb942a003ffc307"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNjo1Nzo1NFrOHYolGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNjo1Nzo1NFrOHYolGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5MjcyOA==", "bodyText": "This does work, but note if a flag was 0x80000000 it would not work due to ints in Java being signed. Normally you would use !=", "url": "https://github.com/runelite/runelite/pull/12399#discussion_r495592728", "createdAt": "2020-09-27T16:57:54Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/MovementFlag.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, Pratted <https://github.com/Pratted>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import net.runelite.api.CollisionDataFlag;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An enum that binds a name to each movement flag.\n+ *\n+ * @see CollisionDataFlag\n+ */\n+@AllArgsConstructor\n+enum MovementFlag\n+{\n+\tBLOCK_MOVEMENT_NORTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_WEST),\n+\tBLOCK_MOVEMENT_NORTH(CollisionDataFlag.BLOCK_MOVEMENT_NORTH),\n+\tBLOCK_MOVEMENT_NORTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_NORTH_EAST),\n+\tBLOCK_MOVEMENT_EAST(CollisionDataFlag.BLOCK_MOVEMENT_EAST),\n+\tBLOCK_MOVEMENT_SOUTH_EAST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_EAST),\n+\tBLOCK_MOVEMENT_SOUTH(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH),\n+\tBLOCK_MOVEMENT_SOUTH_WEST(CollisionDataFlag.BLOCK_MOVEMENT_SOUTH_WEST),\n+\tBLOCK_MOVEMENT_WEST(CollisionDataFlag.BLOCK_MOVEMENT_WEST),\n+\n+\tBLOCK_MOVEMENT_OBJECT(CollisionDataFlag.BLOCK_MOVEMENT_OBJECT),\n+\tBLOCK_MOVEMENT_FLOOR_DECORATION(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR_DECORATION),\n+\tBLOCK_MOVEMENT_FLOOR(CollisionDataFlag.BLOCK_MOVEMENT_FLOOR),\n+\tBLOCK_MOVEMENT_FULL(CollisionDataFlag.BLOCK_MOVEMENT_FULL);\n+\n+\t@Getter\n+\tprivate int flag;\n+\n+\t/**\n+\t * @param collisionData The tile collision flags.\n+\t * @return The set of {@link MovementFlag}s that have been set.\n+\t */\n+\tpublic static Set<MovementFlag> getSetFlags(int collisionData)\n+\t{\n+\t\treturn Arrays.stream(values())\n+\t\t\t.filter(movementFlag -> (movementFlag.flag & collisionData) > 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abf636929062fb4b72382b7aefb942a003ffc307"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "208369127bc86e869b0943104e7c6f7f5cf2e8bf", "author": {"user": {"login": "Adam-", "name": "Adam"}}, "url": "https://github.com/runelite/runelite/commit/208369127bc86e869b0943104e7c6f7f5cf2e8bf", "committedDate": "2020-09-27T17:03:05Z", "message": "Update MovementFlag.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3344, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}