{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMjM5NDg5", "number": 10565, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMToxNDozN1rODWajfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzoyNDowNVrODd7o4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODMwMzM0OnYy", "diffSide": "RIGHT", "path": "runelite-api/src/main/java/net/runelite/api/events/ScriptPreFired.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMToxNDozN1rOFbKavA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMToxNDozN1rOFbKavA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAyNjU1Ng==", "bodyText": "this should probably hold the whole scriptevent", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r364026556", "createdAt": "2020-01-08T01:14:37Z", "author": {"login": "abextm"}, "path": "runelite-api/src/main/java/net/runelite/api/events/ScriptPreFired.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.api.events;\n+\n+import lombok.Data;\n+import net.runelite.api.widgets.Widget;\n+\n+/**\n+ * An event that is fired before the designated script is ran\n+ */\n+@Data\n+public class ScriptPreFired\n+{\n+\t/**\n+\t * The script id of the invoked script\n+\t */\n+\tprivate final int scriptId;\n+\n+\t/**\n+\t * The source of the script invoke, this will be null unless\n+\t */\n+\tprivate Widget source = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45aa66373a931ac0fba1ca3f75e3228863aecd62"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzEyMzMyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzoyMzozNVrOFm0McA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzozMjo1NlrOFm0WFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NTM2MA==", "bodyText": "Name these in ScriptID so they're not magic numbers.", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r376245360", "createdAt": "2020-02-07T07:23:35Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java", "diffHunk": "@@ -0,0 +1,493 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import com.google.common.collect.Lists;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.inject.Inject;\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JButton;\n+import javax.swing.JFormattedTextField;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.JSpinner;\n+import javax.swing.JTree;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreePath;\n+import lombok.Data;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.ScriptPostFired;\n+import net.runelite.api.events.ScriptPreFired;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import static net.runelite.api.widgets.WidgetInfo.TO_CHILD;\n+import static net.runelite.api.widgets.WidgetInfo.TO_GROUP;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.eventbus.EventBus;\n+import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.client.ui.ClientUI;\n+import net.runelite.client.ui.ColorScheme;\n+import net.runelite.client.ui.DynamicGridLayout;\n+import net.runelite.client.ui.FontManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class ScriptInspector extends JFrame\n+{\n+\tprivate final static String DEFAULT_BLACKLIST = \"3174,1004\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a427512f18091e8bf8a0c72904aca8e3d5392888"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NjE4MQ==", "bodyText": "imo its better not in scriptid so I don't have to see them when they change, it doesn't matter for this use case.", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r376246181", "createdAt": "2020-02-07T07:26:46Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java", "diffHunk": "@@ -0,0 +1,493 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import com.google.common.collect.Lists;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.inject.Inject;\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JButton;\n+import javax.swing.JFormattedTextField;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.JSpinner;\n+import javax.swing.JTree;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreePath;\n+import lombok.Data;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.ScriptPostFired;\n+import net.runelite.api.events.ScriptPreFired;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import static net.runelite.api.widgets.WidgetInfo.TO_CHILD;\n+import static net.runelite.api.widgets.WidgetInfo.TO_GROUP;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.eventbus.EventBus;\n+import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.client.ui.ClientUI;\n+import net.runelite.client.ui.ColorScheme;\n+import net.runelite.client.ui.DynamicGridLayout;\n+import net.runelite.client.ui.FontManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class ScriptInspector extends JFrame\n+{\n+\tprivate final static String DEFAULT_BLACKLIST = \"3174,1004\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NTM2MA=="}, "originalCommit": {"oid": "a427512f18091e8bf8a0c72904aca8e3d5392888"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NzgyOQ==", "bodyText": "A comment explaining the IDs here would be sufficient then. It's just awkward to leave these as magic numbers.", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r376247829", "createdAt": "2020-02-07T07:32:56Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java", "diffHunk": "@@ -0,0 +1,493 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import com.google.common.collect.Lists;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.inject.Inject;\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JButton;\n+import javax.swing.JFormattedTextField;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.JSpinner;\n+import javax.swing.JTree;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreePath;\n+import lombok.Data;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.ScriptPostFired;\n+import net.runelite.api.events.ScriptPreFired;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import static net.runelite.api.widgets.WidgetInfo.TO_CHILD;\n+import static net.runelite.api.widgets.WidgetInfo.TO_GROUP;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.eventbus.EventBus;\n+import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.client.ui.ClientUI;\n+import net.runelite.client.ui.ColorScheme;\n+import net.runelite.client.ui.DynamicGridLayout;\n+import net.runelite.client.ui.FontManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class ScriptInspector extends JFrame\n+{\n+\tprivate final static String DEFAULT_BLACKLIST = \"3174,1004\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NTM2MA=="}, "originalCommit": {"oid": "a427512f18091e8bf8a0c72904aca8e3d5392888"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzEyNDE4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzoyNDowNVrOFm0M9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzoyNDowNVrOFm0M9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NTQ5Mg==", "bodyText": "0 is the initial value for int fields.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate int lastTick = 0;\n          \n          \n            \n            \tprivate int lastTick;", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r376245492", "createdAt": "2020-02-07T07:24:05Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java", "diffHunk": "@@ -0,0 +1,493 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import com.google.common.collect.Lists;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.inject.Inject;\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JButton;\n+import javax.swing.JFormattedTextField;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.JSpinner;\n+import javax.swing.JTree;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreePath;\n+import lombok.Data;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.ScriptPostFired;\n+import net.runelite.api.events.ScriptPreFired;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import static net.runelite.api.widgets.WidgetInfo.TO_CHILD;\n+import static net.runelite.api.widgets.WidgetInfo.TO_GROUP;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.eventbus.EventBus;\n+import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.client.ui.ClientUI;\n+import net.runelite.client.ui.ColorScheme;\n+import net.runelite.client.ui.DynamicGridLayout;\n+import net.runelite.client.ui.FontManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class ScriptInspector extends JFrame\n+{\n+\tprivate final static String DEFAULT_BLACKLIST = \"3174,1004\";\n+\tprivate final static int MAX_LOG_ENTRIES = 10000;\n+\n+\tprivate final Client client;\n+\tprivate final EventBus eventBus;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate final JPanel tracker = new JPanel();\n+\tprivate ScriptTreeNode currentNode;\n+\tprivate int lastTick = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a427512f18091e8bf8a0c72904aca8e3d5392888"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3877, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}