{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjIwNDc3", "number": 12947, "title": "Add farming tick offsets to time tracking plugin", "bodyText": "Automatically tracks and applies your accounts offset to farming ticks. For a general user, your farming times will become more accurate over time as you inadvertently observe crops growing.\nFor anyone looking to quickly get accurate times the simplest solution is to plant a normal tree and keep it within your render distance for 40 minutes. After observing the tree growing one stage your timers for all crops will be 100% accurate.\nCloses #8381\nRequires !127", "createdAt": "2020-12-18T00:49:48Z", "url": "https://github.com/runelite/runelite/pull/12947", "merged": true, "mergeCommit": {"oid": "d314c0eceeea23dd29809407a18e0604e77340c0"}, "closed": true, "closedAt": "2020-12-28T02:28:34Z", "author": {"login": "MESLewis"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnNsPNABqjQxMjc3MTgxMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdqahv_gBqjQxNTA2ODE0ODc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c579a79b39eedf19ba5f0264d65d2ab08f3969a", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/7c579a79b39eedf19ba5f0264d65d2ab08f3969a", "committedDate": "2020-12-18T00:41:37Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "d89a265c1868592c42262a56c38fd136f32b926e", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/d89a265c1868592c42262a56c38fd136f32b926e", "committedDate": "2020-12-18T01:17:00Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d89a265c1868592c42262a56c38fd136f32b926e", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/d89a265c1868592c42262a56c38fd136f32b926e", "committedDate": "2020-12-18T01:17:00Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "d157ab2083a662d30567f93e91fdd9f03c510ab7", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/d157ab2083a662d30567f93e91fdd9f03c510ab7", "committedDate": "2020-12-18T01:26:03Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d157ab2083a662d30567f93e91fdd9f03c510ab7", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/d157ab2083a662d30567f93e91fdd9f03c510ab7", "committedDate": "2020-12-18T01:26:03Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "49993620cbbc71bbebdfeab71b5a9fd9425ff3e4", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/49993620cbbc71bbebdfeab71b5a9fd9425ff3e4", "committedDate": "2020-12-18T01:29:19Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49993620cbbc71bbebdfeab71b5a9fd9425ff3e4", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/49993620cbbc71bbebdfeab71b5a9fd9425ff3e4", "committedDate": "2020-12-18T01:29:19Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "cd96859c523d9c2351289d9fdd91a910e1a73907", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/cd96859c523d9c2351289d9fdd91a910e1a73907", "committedDate": "2020-12-18T02:49:09Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd96859c523d9c2351289d9fdd91a910e1a73907", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/cd96859c523d9c2351289d9fdd91a910e1a73907", "committedDate": "2020-12-18T02:49:09Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "c11378b4ac75c3205e7d055988cee75bc0f459b3", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/c11378b4ac75c3205e7d055988cee75bc0f459b3", "committedDate": "2020-12-18T20:46:19Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c11378b4ac75c3205e7d055988cee75bc0f459b3", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/c11378b4ac75c3205e7d055988cee75bc0f459b3", "committedDate": "2020-12-18T20:46:19Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "e6872f04840abd3f3c915c5d0594dbded0474e3b", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/e6872f04840abd3f3c915c5d0594dbded0474e3b", "committedDate": "2020-12-18T22:43:39Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6872f04840abd3f3c915c5d0594dbded0474e3b", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/e6872f04840abd3f3c915c5d0594dbded0474e3b", "committedDate": "2020-12-18T22:43:39Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "9d0cbe8cf1f3d33dca2213a2c43049cc5c100671", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/9d0cbe8cf1f3d33dca2213a2c43049cc5c100671", "committedDate": "2020-12-18T22:56:26Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d0cbe8cf1f3d33dca2213a2c43049cc5c100671", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/9d0cbe8cf1f3d33dca2213a2c43049cc5c100671", "committedDate": "2020-12-18T22:56:26Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "e8a052df7f717bd4c159f13bd0181f0e13ffc840", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/e8a052df7f717bd4c159f13bd0181f0e13ffc840", "committedDate": "2020-12-19T22:39:13Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8a052df7f717bd4c159f13bd0181f0e13ffc840", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/e8a052df7f717bd4c159f13bd0181f0e13ffc840", "committedDate": "2020-12-19T22:39:13Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "a2b13c5a85f7cafcd1bf97ed11909ba498d98a87", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/a2b13c5a85f7cafcd1bf97ed11909ba498d98a87", "committedDate": "2020-12-20T02:47:29Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2b13c5a85f7cafcd1bf97ed11909ba498d98a87", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/a2b13c5a85f7cafcd1bf97ed11909ba498d98a87", "committedDate": "2020-12-20T02:47:29Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "bca3b686c3d4e32cae0db905d2c24069b15f2482", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/bca3b686c3d4e32cae0db905d2c24069b15f2482", "committedDate": "2020-12-21T17:54:09Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bca3b686c3d4e32cae0db905d2c24069b15f2482", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/bca3b686c3d4e32cae0db905d2c24069b15f2482", "committedDate": "2020-12-21T17:54:09Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "9e48fe9c2a083bf9911e82d9bcafa38108c70ba2", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/9e48fe9c2a083bf9911e82d9bcafa38108c70ba2", "committedDate": "2020-12-21T18:11:34Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e48fe9c2a083bf9911e82d9bcafa38108c70ba2", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/9e48fe9c2a083bf9911e82d9bcafa38108c70ba2", "committedDate": "2020-12-21T18:11:34Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "46f3215af798ca69cfd3000dec0fc0be99b41353", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/46f3215af798ca69cfd3000dec0fc0be99b41353", "committedDate": "2020-12-21T19:51:51Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46f3215af798ca69cfd3000dec0fc0be99b41353", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/46f3215af798ca69cfd3000dec0fc0be99b41353", "committedDate": "2020-12-21T19:51:51Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "8e32c0880c9bc1075082f4c7f8fe9a35c447917d", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/8e32c0880c9bc1075082f4c7f8fe9a35c447917d", "committedDate": "2020-12-21T22:01:28Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e32c0880c9bc1075082f4c7f8fe9a35c447917d", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/8e32c0880c9bc1075082f4c7f8fe9a35c447917d", "committedDate": "2020-12-21T22:01:28Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "613348f15952268e396be5564dc8e968736bee58", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/613348f15952268e396be5564dc8e968736bee58", "committedDate": "2020-12-21T22:10:04Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "613348f15952268e396be5564dc8e968736bee58", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/613348f15952268e396be5564dc8e968736bee58", "committedDate": "2020-12-21T22:10:04Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "d060ed6f5151095e18cd797e567f0a1ae5d11d6c", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/d060ed6f5151095e18cd797e567f0a1ae5d11d6c", "committedDate": "2020-12-22T00:08:59Z", "message": "Improve time tracking to account for farming tick offsets"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d060ed6f5151095e18cd797e567f0a1ae5d11d6c", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/d060ed6f5151095e18cd797e567f0a1ae5d11d6c", "committedDate": "2020-12-22T00:08:59Z", "message": "Improve time tracking to account for farming tick offsets"}, "afterCommit": {"oid": "916e463efad1a2b66989f9948ab5912591cffd0c", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/916e463efad1a2b66989f9948ab5912591cffd0c", "committedDate": "2020-12-22T01:00:31Z", "message": "Add farming tick offset to time tracking plugin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "916e463efad1a2b66989f9948ab5912591cffd0c", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/916e463efad1a2b66989f9948ab5912591cffd0c", "committedDate": "2020-12-22T01:00:31Z", "message": "Add farming tick offset to time tracking plugin"}, "afterCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/015ff83e47c2b765e50e8bec79f258bf0e9d1fff", "committedDate": "2020-12-22T02:21:47Z", "message": "Add farming tick offset to time tracking plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTcyOTQ0", "url": "https://github.com/runelite/runelite/pull/12947#pullrequestreview-556972944", "createdAt": "2020-12-22T10:22:41Z", "commit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDoyMjo0MVrOIJ2CyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDo1MTowNVrOIJ26Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE5MzU0NA==", "bodyText": "this would probably be better as a :: command. maybe ::resetfarmtick?", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547193544", "createdAt": "2020-12-22T10:22:41Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java", "diffHunk": "@@ -136,4 +140,23 @@ default Tab activeTab()\n \t\thidden = true\n \t)\n \tvoid setActiveTab(Tab t);\n+\n+\t@ConfigSection(\n+\t\tname = \"Advanced Farming Settings\",\n+\t\tdescription = \"These settings should not be changed unless you know what you are doing\",\n+\t\tposition = 7,\n+\t\tclosedByDefault = true\n+\t)\n+\tString advancedSection = \"advanced\";\n+\n+\t@ConfigItem(\n+\t\tkeyName = FARM_TICK_OFFSET_RESET,\n+\t\tname = \"Reset Automatic Farming Tick Tracking\",\n+\t\tdescription = \"Reset automatic farming tick offset tracking.\",\n+\t\tsection = advancedSection\n+\t)\n+\tdefault boolean resetFarmTickOffset()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE5Mzg2OA==", "bodyText": "newlines", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547193868", "createdAt": "2020-12-22T10:23:17Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingPanel.java", "diffHunk": "@@ -64,9 +68,8 @@\n \t@Nullable\n \tprivate TabContentPanel activeTabPanel = null;\n \n-\tTimeTrackingPanel(ItemManager itemManager, TimeTrackingConfig config,\n-\t\tFarmingTracker farmingTracker, BirdHouseTracker birdHouseTracker, ClockManager clockManager,\n-\t\tFarmingContractManager farmingContractManager)\n+\t@Inject\n+\tTimeTrackingPanel(ItemManager itemManager, TimeTrackingConfig config, FarmingTracker farmingTracker, BirdHouseTracker birdHouseTracker, ClockManager clockManager, FarmingContractManager farmingContractManager, ConfigManager configManager, @Named(\"developerMode\") boolean developerMode)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE5NDY5Ng==", "bodyText": "newValue can be null. In general prefer \"value\".equals(thing) to thing.equals(value)", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547194696", "createdAt": "2020-12-22T10:24:58Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingPlugin.java", "diffHunk": "@@ -172,6 +169,13 @@ else if (clockManager.getStopwatches().isEmpty() && e.getKey().equals(STOPWATCHE\n \t\t{\n \t\t\tclockManager.loadStopwatches();\n \t\t}\n+\n+\t\tif (e.getKey().equals(FARM_TICK_OFFSET_RESET) && e.getNewValue().equals(\"true\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE5NjU2Ng==", "bodyText": "Use {} replacement rather than string concatenation.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tlog.debug(\"Farming: New region loaded. \" + newRegions.toString() + \" at \" + client.getTickCount() + \" ticks\");\n          \n          \n            \n            \t\t\tlog.debug(\"Farming: New region loaded. {} at {} ticks\", newRegions, client.getTickCount());", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547196566", "createdAt": "2020-12-22T10:28:47Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -100,13 +104,16 @@ public boolean updateData(WorldPoint location)\n \t\t\t}\n \t\t}\n \n-\t\tfor (FarmingRegion region : farmingWorld.getRegions().get(location.getRegionID()))\n+\t\tCollection<FarmingRegion> newRegions = farmingWorld.getRegionsForLocation(location);\n+\n+\t\tif (!newRegions.equals(lastRegions))\n \t\t{\n-\t\t\tif (!region.isInBounds(location))\n-\t\t\t{\n-\t\t\t\tcontinue;\n-\t\t\t}\n+\t\t\tnewRegionLoaded = true;\n+\t\t\tlog.debug(\"Farming: New region loaded. \" + newRegions.toString() + \" at \" + client.getTickCount() + \" ticks\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwMDEzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t\t\tString storedOffsetPrecisionString = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION);\n          \n          \n            \n            \t\t\t\t\t\t\t\tInteger storedOffsetPrecision = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION, Integer.class);\n          \n      \n    \n    \n  \n\nThe config manager is capable of doing the conversion, you should use that since it handles corrupted configs.", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547200132", "createdAt": "2020-12-22T10:35:44Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -121,30 +128,81 @@ public boolean updateData(WorldPoint location)\n \t\t\t\tif (storedValue != null)\n \t\t\t\t{\n \t\t\t\t\tString[] parts = storedValue.split(\":\");\n-\t\t\t\t\tif (parts.length == 2 && parts[0].equals(strVarbit))\n+\t\t\t\t\tif (parts.length == 2)\n \t\t\t\t\t{\n-\t\t\t\t\t\tlong unixTime = 0;\n-\t\t\t\t\t\ttry\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\tif (parts[0].equals(strVarbit))\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\tlong unixTime = 0;\n+\t\t\t\t\t\t\ttry\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\telse if (!newRegionLoaded)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\tPatchState previousPatchState = patch.getImplementation().forVarbitValue(Integer.parseInt(parts[0]));\n+\t\t\t\t\t\t\tPatchState currentPatchState = patch.getImplementation().forVarbitValue(client.getVar(varbit));\n+\t\t\t\t\t\t\tint patchTickRate = previousPatchState.getTickRate();\n+\n+\t\t\t\t\t\t\tif (isObservedGrowthTick(previousPatchState, currentPatchState))\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tString storedOffsetPrecisionString = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwMDQ4MA==", "bodyText": "again use formatting and not concatenation", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547200480", "createdAt": "2020-12-22T10:36:24Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -121,30 +128,81 @@ public boolean updateData(WorldPoint location)\n \t\t\t\tif (storedValue != null)\n \t\t\t\t{\n \t\t\t\t\tString[] parts = storedValue.split(\":\");\n-\t\t\t\t\tif (parts.length == 2 && parts[0].equals(strVarbit))\n+\t\t\t\t\tif (parts.length == 2)\n \t\t\t\t\t{\n-\t\t\t\t\t\tlong unixTime = 0;\n-\t\t\t\t\t\ttry\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\tif (parts[0].equals(strVarbit))\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\tlong unixTime = 0;\n+\t\t\t\t\t\t\ttry\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\telse if (!newRegionLoaded)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\tPatchState previousPatchState = patch.getImplementation().forVarbitValue(Integer.parseInt(parts[0]));\n+\t\t\t\t\t\t\tPatchState currentPatchState = patch.getImplementation().forVarbitValue(client.getVar(varbit));\n+\t\t\t\t\t\t\tint patchTickRate = previousPatchState.getTickRate();\n+\n+\t\t\t\t\t\t\tif (isObservedGrowthTick(previousPatchState, currentPatchState))\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tString storedOffsetPrecisionString = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION);\n+\t\t\t\t\t\t\t\tString storedOffsetString = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET);\n+\n+\t\t\t\t\t\t\t\tint storedOffsetPrecision = 0;\n+\t\t\t\t\t\t\t\tint storedOffsetMins = 0;\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetPrecisionString != null)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tstoredOffsetPrecision = Integer.parseInt(storedOffsetPrecisionString);\n+\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetString != null)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tstoredOffsetMins = Integer.parseInt(storedOffsetString);\n+\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\tint offsetMins = (int) Math.abs(((Instant.now().getEpochSecond() / 60) % patchTickRate) - patchTickRate);\n+\t\t\t\t\t\t\t\tString growthTickMessage = \"Farming: Observed an exact growth tick. Offset is: \" + offsetMins + \" from a \" + patchTickRate + \" minute tick\";\n+\t\t\t\t\t\t\t\tlog.debug(growthTickMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwMDY4Ng==", "bodyText": "ditto", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547200686", "createdAt": "2020-12-22T10:36:49Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -121,30 +128,81 @@ public boolean updateData(WorldPoint location)\n \t\t\t\tif (storedValue != null)\n \t\t\t\t{\n \t\t\t\t\tString[] parts = storedValue.split(\":\");\n-\t\t\t\t\tif (parts.length == 2 && parts[0].equals(strVarbit))\n+\t\t\t\t\tif (parts.length == 2)\n \t\t\t\t\t{\n-\t\t\t\t\t\tlong unixTime = 0;\n-\t\t\t\t\t\ttry\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\tif (parts[0].equals(strVarbit))\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\tlong unixTime = 0;\n+\t\t\t\t\t\t\ttry\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\telse if (!newRegionLoaded)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\tPatchState previousPatchState = patch.getImplementation().forVarbitValue(Integer.parseInt(parts[0]));\n+\t\t\t\t\t\t\tPatchState currentPatchState = patch.getImplementation().forVarbitValue(client.getVar(varbit));\n+\t\t\t\t\t\t\tint patchTickRate = previousPatchState.getTickRate();\n+\n+\t\t\t\t\t\t\tif (isObservedGrowthTick(previousPatchState, currentPatchState))\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tString storedOffsetPrecisionString = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION);\n+\t\t\t\t\t\t\t\tString storedOffsetString = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET);\n+\n+\t\t\t\t\t\t\t\tint storedOffsetPrecision = 0;\n+\t\t\t\t\t\t\t\tint storedOffsetMins = 0;\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetPrecisionString != null)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tstoredOffsetPrecision = Integer.parseInt(storedOffsetPrecisionString);\n+\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetString != null)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tstoredOffsetMins = Integer.parseInt(storedOffsetString);\n+\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\tint offsetMins = (int) Math.abs(((Instant.now().getEpochSecond() / 60) % patchTickRate) - patchTickRate);\n+\t\t\t\t\t\t\t\tString growthTickMessage = \"Farming: Observed an exact growth tick. Offset is: \" + offsetMins + \" from a \" + patchTickRate + \" minute tick\";\n+\t\t\t\t\t\t\t\tlog.debug(growthTickMessage);\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetMins != 0 && offsetMins != storedOffsetMins % patchTickRate)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tWorldPoint playerLocation = client.getLocalPlayer().getWorldLocation();\n+\t\t\t\t\t\t\t\t\tString info = \"Farming: Offset error! Observed new offset of \" + offsetMins + \", previous observed offset was \" + storedOffsetMins + \" (\" + storedOffsetMins % patchTickRate + \")\" + \" Player Loc:\" + ((playerLocation != null) ? playerLocation.toString() : \"\");\n+\t\t\t\t\t\t\t\t\tlog.error(info);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwMjAxMQ==", "bodyText": "remove this newline; readd the one above", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547202011", "createdAt": "2020-12-22T10:39:24Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -121,30 +128,81 @@ public boolean updateData(WorldPoint location)\n \t\t\t\tif (storedValue != null)\n \t\t\t\t{\n \t\t\t\t\tString[] parts = storedValue.split(\":\");\n-\t\t\t\t\tif (parts.length == 2 && parts[0].equals(strVarbit))\n+\t\t\t\t\tif (parts.length == 2)\n \t\t\t\t\t{\n-\t\t\t\t\t\tlong unixTime = 0;\n-\t\t\t\t\t\ttry\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\tif (parts[0].equals(strVarbit))\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\tlong unixTime = 0;\n+\t\t\t\t\t\t\ttry\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\telse if (!newRegionLoaded)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\tPatchState previousPatchState = patch.getImplementation().forVarbitValue(Integer.parseInt(parts[0]));\n+\t\t\t\t\t\t\tPatchState currentPatchState = patch.getImplementation().forVarbitValue(client.getVar(varbit));\n+\t\t\t\t\t\t\tint patchTickRate = previousPatchState.getTickRate();\n+\n+\t\t\t\t\t\t\tif (isObservedGrowthTick(previousPatchState, currentPatchState))\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tString storedOffsetPrecisionString = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION);\n+\t\t\t\t\t\t\t\tString storedOffsetString = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET);\n+\n+\t\t\t\t\t\t\t\tint storedOffsetPrecision = 0;\n+\t\t\t\t\t\t\t\tint storedOffsetMins = 0;\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetPrecisionString != null)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tstoredOffsetPrecision = Integer.parseInt(storedOffsetPrecisionString);\n+\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetString != null)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tstoredOffsetMins = Integer.parseInt(storedOffsetString);\n+\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\tint offsetMins = (int) Math.abs(((Instant.now().getEpochSecond() / 60) % patchTickRate) - patchTickRate);\n+\t\t\t\t\t\t\t\tString growthTickMessage = \"Farming: Observed an exact growth tick. Offset is: \" + offsetMins + \" from a \" + patchTickRate + \" minute tick\";\n+\t\t\t\t\t\t\t\tlog.debug(growthTickMessage);\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetMins != 0 && offsetMins != storedOffsetMins % patchTickRate)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tWorldPoint playerLocation = client.getLocalPlayer().getWorldLocation();\n+\t\t\t\t\t\t\t\t\tString info = \"Farming: Offset error! Observed new offset of \" + offsetMins + \", previous observed offset was \" + storedOffsetMins + \" (\" + storedOffsetMins % patchTickRate + \")\" + \" Player Loc:\" + ((playerLocation != null) ? playerLocation.toString() : \"\");\n+\t\t\t\t\t\t\t\t\tlog.error(info);\n+\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetPrecision == 0 || patchTickRate >= storedOffsetPrecision)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tlog.debug(\"Farming: Found a longer growth tick \" + patchTickRate + \", saving new offset\");\n+\n+\t\t\t\t\t\t\t\t\tconfigManager.setRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION, patchTickRate);\n+\t\t\t\t\t\t\t\t\tconfigManager.setRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET, offsetMins);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n-\n \t\t\t\tString value = strVarbit + \":\" + unixNow;\n \t\t\t\tconfigManager.setRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, key, value);\n \t\t\t\tchanged = true;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwMjYyNg==", "bodyText": "probably also add a safety for the patch changing to a different produce", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547202626", "createdAt": "2020-12-22T10:40:48Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -153,6 +211,44 @@ public boolean updateData(WorldPoint location)\n \t\treturn changed;\n \t}\n \n+\tprivate boolean isObservedGrowthTick(PatchState previous, PatchState current)\n+\t{\n+\t\t//Check the previous state so it will still calculate during the final growth tick\n+\t\tint patchTickRate = previous.getTickRate();\n+\t\tCropState previousCropState = previous.getCropState();\n+\t\tCropState currentCropState = current.getCropState();\n+\t\tProduce previousProduce = previous.getProduce();\n+\n+\t\t//Ignore weeds growing or being cleared.\n+\t\tif (previousProduce == Produce.WEEDS || current.getProduce() == Produce.WEEDS || patchTickRate <= 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwMzIzMQ==", "bodyText": "also maybe a safety that the state is +1 of the old one", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547203231", "createdAt": "2020-12-22T10:41:57Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -153,6 +211,44 @@ public boolean updateData(WorldPoint location)\n \t\treturn changed;\n \t}\n \n+\tprivate boolean isObservedGrowthTick(PatchState previous, PatchState current)\n+\t{\n+\t\t//Check the previous state so it will still calculate during the final growth tick\n+\t\tint patchTickRate = previous.getTickRate();\n+\t\tCropState previousCropState = previous.getCropState();\n+\t\tCropState currentCropState = current.getCropState();\n+\t\tProduce previousProduce = previous.getProduce();\n+\n+\t\t//Ignore weeds growing or being cleared.\n+\t\tif (previousProduce == Produce.WEEDS || current.getProduce() == Produce.WEEDS || patchTickRate <= 0)\n+\t\t{\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\tif (previousCropState == CropState.GROWING)\n+\t\t{\n+\t\t\tif (currentCropState == CropState.GROWING || currentCropState == CropState.DISEASED)\n+\t\t\t{\n+\t\t\t\tlog.debug(\"Farming: Found GROWING -> GROWING or GROWING -> DISEASED\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNDI2Nw==", "bodyText": "unsafe parseInt. Use the ConfigManager to do the conversion.", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547204267", "createdAt": "2020-12-22T10:44:12Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -244,6 +338,34 @@ public PatchPrediction predictPatch(FarmingPatch patch)\n \t\t);\n \t}\n \n+\tpublic long getTickTime(int tickRate, int ticks)\n+\t{\n+\t\treturn getTickTime(tickRate, ticks, Instant.now().getEpochSecond());\n+\t}\n+\n+\tpublic long getTickTime(int tickRate, int ticks, long requestedtime)\n+\t{\n+\t\tString offsetPrecisionMins = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION);\n+\t\tString offsetTimeMins = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET);\n+\n+\t\t//All offsets are negative but are stored as positive\n+\t\tlong calculatedOffsetTime = 0L;\n+\t\tif (offsetPrecisionMins != null && (Integer.parseInt(offsetPrecisionMins) >= tickRate || Integer.parseInt(offsetPrecisionMins) >= 40))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 251}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNDU5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic long getTickTime(int tickRate, int ticks, long requestedtime)\n          \n          \n            \n            \tpublic long getTickTime(int tickRate, int ticks, long requestedTime)", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547204592", "createdAt": "2020-12-22T10:44:51Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -244,6 +338,34 @@ public PatchPrediction predictPatch(FarmingPatch patch)\n \t\t);\n \t}\n \n+\tpublic long getTickTime(int tickRate, int ticks)\n+\t{\n+\t\treturn getTickTime(tickRate, ticks, Instant.now().getEpochSecond());\n+\t}\n+\n+\tpublic long getTickTime(int tickRate, int ticks, long requestedtime)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 244}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNjkxNQ==", "bodyText": "newlines", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547206915", "createdAt": "2020-12-22T10:49:27Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingWorld.java", "diffHunk": "@@ -306,4 +342,9 @@ private void add(FarmingRegion r, int... extraRegions)\n \t\t\t\t.add(p);\n \t\t}\n \t}\n+\n+\tCollection<FarmingRegion> getRegionsForLocation(WorldPoint location)\n+\t{\n+\t\treturn this.regions.get(location.getRegionID()).stream().filter(region -> region.isInBounds(location)).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 356}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNzE4MA==", "bodyText": "I dislike this change, especially since this is private.", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547207180", "createdAt": "2020-12-22T10:50:00Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingWorld.java", "diffHunk": "@@ -292,7 +328,7 @@ public boolean isInBounds(WorldPoint loc)\n \t\tthis.tabs = Collections.unmodifiableMap(umtabs);\n \t}\n \n-\tprivate void add(FarmingRegion r, int... extraRegions)\n+\tprivate void add(Multimap<Integer, FarmingRegion> regions, FarmingRegion r, int... extraRegions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 345}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNzcwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate final boolean requiresHealthCheck;\n          \n          \n            \n            \tprivate final boolean healthCheckRequired;\n          \n      \n    \n    \n  \n\nor write your own getter idc", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547207703", "createdAt": "2020-12-22T10:51:05Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java", "diffHunk": "@@ -2787,4 +2787,6 @@ PatchState forVarbitValue(int value)\n \tprivate final Tab tab;\n \n \tprivate final String name;\n+\n+\tprivate final boolean requiresHealthCheck;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff"}, "originalPosition": 203}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "015ff83e47c2b765e50e8bec79f258bf0e9d1fff", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/015ff83e47c2b765e50e8bec79f258bf0e9d1fff", "committedDate": "2020-12-22T02:21:47Z", "message": "Add farming tick offset to time tracking plugin"}, "afterCommit": {"oid": "b8273cb4688d370e3a78f9a9691222f19afbcbb2", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/b8273cb4688d370e3a78f9a9691222f19afbcbb2", "committedDate": "2020-12-22T20:42:37Z", "message": "Add farming tick offset to time tracking plugin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8273cb4688d370e3a78f9a9691222f19afbcbb2", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/b8273cb4688d370e3a78f9a9691222f19afbcbb2", "committedDate": "2020-12-22T20:42:37Z", "message": "Add farming tick offset to time tracking plugin"}, "afterCommit": {"oid": "c3520eda34270f9af0613c1bbc65456b128f5fc9", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/c3520eda34270f9af0613c1bbc65456b128f5fc9", "committedDate": "2020-12-22T21:55:07Z", "message": "Add farming tick offset to time tracking plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDU1NTI1", "url": "https://github.com/runelite/runelite/pull/12947#pullrequestreview-557455525", "createdAt": "2020-12-23T01:17:34Z", "commit": {"oid": "c3520eda34270f9af0613c1bbc65456b128f5fc9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMToxNzozNVrOIKOHGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMToxNzozNVrOIKOHGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU4Nzg2Ng==", "bodyText": "Should this be behind developer mode?", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547587866", "createdAt": "2020-12-23T01:17:35Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingPlugin.java", "diffHunk": "@@ -174,6 +171,16 @@ else if (clockManager.getStopwatches().isEmpty() && e.getKey().equals(STOPWATCHE\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onCommandExecuted(CommandExecuted commandExecuted)\n+\t{\n+\t\tif (commandExecuted.getCommand().equals(\"resetfarmtick\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3520eda34270f9af0613c1bbc65456b128f5fc9"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODU0NDU3", "url": "https://github.com/runelite/runelite/pull/12947#pullrequestreview-557854457", "createdAt": "2020-12-23T13:02:28Z", "commit": {"oid": "c3520eda34270f9af0613c1bbc65456b128f5fc9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzowMjoyOFrOIKkG9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzoxNjo1NVrOIKkdBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk0ODI3Ng==", "bodyText": "normally config keys are camel case", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547948276", "createdAt": "2020-12-23T13:02:28Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java", "diffHunk": "@@ -33,6 +33,9 @@\n public interface TimeTrackingConfig extends Config\n {\n \tString CONFIG_GROUP = \"timetracking\";\n+\tString FARM_TICK_OFFSET = \"farm_tick_offset\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3520eda34270f9af0613c1bbc65456b128f5fc9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk1MjMwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t\t\t\tlog.error(\"Farming: Offset error! Observed new offset of {}, previous observed offset was {} ({}) Player Loc:{}\", offsetMins, storedOffsetMins, storedOffsetMins % patchTickRate, ((playerLocation != null) ? playerLocation.toString() : \"\"));\n          \n          \n            \n            \t\t\t\t\t\t\t\t\tlog.error(\"Farming: Offset error! Observed new offset of {}, previous observed offset was {} ({}) Player Loc:{}\",\n          \n          \n            \n            \t\t\t\t\t\t\t\t\t\toffsetMins, storedOffsetMins, storedOffsetMins % patchTickRate, playerLocation));\n          \n      \n    \n    \n  \n\nplayerLocation will never be null, and even if it could be this would be better", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547952305", "createdAt": "2020-12-23T13:13:03Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -121,20 +128,52 @@ public boolean updateData(WorldPoint location)\n \t\t\t\tif (storedValue != null)\n \t\t\t\t{\n \t\t\t\t\tString[] parts = storedValue.split(\":\");\n-\t\t\t\t\tif (parts.length == 2 && parts[0].equals(strVarbit))\n+\t\t\t\t\tif (parts.length == 2)\n \t\t\t\t\t{\n-\t\t\t\t\t\tlong unixTime = 0;\n-\t\t\t\t\t\ttry\n+\t\t\t\t\t\tif (parts[0].equals(strVarbit))\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n+\t\t\t\t\t\t\tlong unixTime = 0;\n+\t\t\t\t\t\t\ttry\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\telse if (!newRegionLoaded)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t// ignored\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\tPatchState previousPatchState = patch.getImplementation().forVarbitValue(Integer.parseInt(parts[0]));\n+\t\t\t\t\t\t\tPatchState currentPatchState = patch.getImplementation().forVarbitValue(client.getVar(varbit));\n+\t\t\t\t\t\t\tint patchTickRate = previousPatchState.getTickRate();\n+\n+\t\t\t\t\t\t\tif (isObservedGrowthTick(previousPatchState, currentPatchState))\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tInteger storedOffsetPrecision = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION, int.class);\n+\t\t\t\t\t\t\t\tInteger storedOffsetMins = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET, int.class);\n+\n+\t\t\t\t\t\t\t\tint offsetMins = (int) Math.abs(((Instant.now().getEpochSecond() / 60) % patchTickRate) - patchTickRate);\n+\t\t\t\t\t\t\t\tlog.debug(\"Farming: Observed an exact growth tick. Offset is: {} from a {} minute tick\", offsetMins, patchTickRate);\n+\n+\t\t\t\t\t\t\t\tif (storedOffsetMins != null && storedOffsetMins != 0 && offsetMins != storedOffsetMins % patchTickRate)\n+\t\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t\tWorldPoint playerLocation = client.getLocalPlayer().getWorldLocation();\n+\t\t\t\t\t\t\t\t\tlog.error(\"Farming: Offset error! Observed new offset of {}, previous observed offset was {} ({}) Player Loc:{}\", offsetMins, storedOffsetMins, storedOffsetMins % patchTickRate, ((playerLocation != null) ? playerLocation.toString() : \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3520eda34270f9af0613c1bbc65456b128f5fc9"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk1MzkyNQ==", "bodyText": "should have a null check for offsetTimeMins too", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r547953925", "createdAt": "2020-12-23T13:16:55Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -244,6 +326,34 @@ public PatchPrediction predictPatch(FarmingPatch patch)\n \t\t);\n \t}\n \n+\tpublic long getTickTime(int tickRate, int ticks)\n+\t{\n+\t\treturn getTickTime(tickRate, ticks, Instant.now().getEpochSecond());\n+\t}\n+\n+\tpublic long getTickTime(int tickRate, int ticks, long requestedTime)\n+\t{\n+\t\tInteger offsetPrecisionMins = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET_PRECISION, int.class);\n+\t\tInteger offsetTimeMins = configManager.getRSProfileConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.FARM_TICK_OFFSET, int.class);\n+\n+\t\t//All offsets are negative but are stored as positive\n+\t\tlong calculatedOffsetTime = 0L;\n+\t\tif (offsetPrecisionMins != null && (offsetPrecisionMins >= tickRate || offsetPrecisionMins >= 40))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3520eda34270f9af0613c1bbc65456b128f5fc9"}, "originalPosition": 235}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3520eda34270f9af0613c1bbc65456b128f5fc9", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/c3520eda34270f9af0613c1bbc65456b128f5fc9", "committedDate": "2020-12-22T21:55:07Z", "message": "Add farming tick offset to time tracking plugin"}, "afterCommit": {"oid": "1f8057426c5eba229aee383ee5263ae6a774fbb4", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/1f8057426c5eba229aee383ee5263ae6a774fbb4", "committedDate": "2020-12-23T19:45:38Z", "message": "Add farming tick offset to time tracking plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODQxNDAz", "url": "https://github.com/runelite/runelite/pull/12947#pullrequestreview-558841403", "createdAt": "2020-12-26T00:26:10Z", "commit": {"oid": "1f8057426c5eba229aee383ee5263ae6a774fbb4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f8057426c5eba229aee383ee5263ae6a774fbb4", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/1f8057426c5eba229aee383ee5263ae6a774fbb4", "committedDate": "2020-12-23T19:45:38Z", "message": "Add farming tick offset to time tracking plugin"}, "afterCommit": {"oid": "e1c64dbea32a22affd868d4bef02bc45bb397484", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/e1c64dbea32a22affd868d4bef02bc45bb397484", "committedDate": "2020-12-27T15:43:18Z", "message": "Add farming tick offset to time tracking plugin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1c64dbea32a22affd868d4bef02bc45bb397484", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/e1c64dbea32a22affd868d4bef02bc45bb397484", "committedDate": "2020-12-27T15:43:18Z", "message": "Add farming tick offset to time tracking plugin"}, "afterCommit": {"oid": "e628fbfea8334b8636aace4ce42623425df209a3", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/e628fbfea8334b8636aace4ce42623425df209a3", "committedDate": "2020-12-27T16:21:18Z", "message": "Add farming tick offset to time tracking plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7898c466302a6f32282122f8a6d7cc9ef2d9862b", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/7898c466302a6f32282122f8a6d7cc9ef2d9862b", "committedDate": "2020-12-27T20:58:45Z", "message": "runelite-api: add WidgetClosed event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27ea3fbab689764a9cdf7483cd92cf768402b16d", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/27ea3fbab689764a9cdf7483cd92cf768402b16d", "committedDate": "2020-12-27T20:58:45Z", "message": "runelite-api: add WidgetNode::modalMode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0381abddcbbad5aad71c471678af7e232d95ee9c", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/0381abddcbbad5aad71c471678af7e232d95ee9c", "committedDate": "2020-12-27T20:58:45Z", "message": "Add additional areas to FarmingRegions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "519968f568ec01a7970a50b3b776511aed173900", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/519968f568ec01a7970a50b3b776511aed173900", "committedDate": "2020-12-27T20:58:45Z", "message": "Add Health Check data to PatchImplementation.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e628fbfea8334b8636aace4ce42623425df209a3", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/e628fbfea8334b8636aace4ce42623425df209a3", "committedDate": "2020-12-27T16:21:18Z", "message": "Add farming tick offset to time tracking plugin"}, "afterCommit": {"oid": "1fb5d19ec0f933484688dd23355c8f8d8c6b8256", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/1fb5d19ec0f933484688dd23355c8f8d8c6b8256", "committedDate": "2020-12-27T22:10:29Z", "message": "Add farming tick offset to time tracking plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4OTYzODk5", "url": "https://github.com/runelite/runelite/pull/12947#pullrequestreview-558963899", "createdAt": "2020-12-27T23:12:56Z", "commit": {"oid": "1fb5d19ec0f933484688dd23355c8f8d8c6b8256"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QyMzoxMjo1NlrOILu-kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QyMzoyNDozMVrOILvB3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE3NDkyOQ==", "bodyText": "too many indents", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r549174929", "createdAt": "2020-12-27T23:12:56Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingPanel.java", "diffHunk": "@@ -64,9 +68,11 @@\n \t@Nullable\n \tprivate TabContentPanel activeTabPanel = null;\n \n-\tTimeTrackingPanel(ItemManager itemManager, TimeTrackingConfig config,\n-\t\tFarmingTracker farmingTracker, BirdHouseTracker birdHouseTracker, ClockManager clockManager,\n-\t\tFarmingContractManager farmingContractManager)\n+\t@Inject\n+\tTimeTrackingPanel(ItemManager itemManager, TimeTrackingConfig config, FarmingTracker farmingTracker,\n+\t\t\t\t\tBirdHouseTracker birdHouseTracker, ClockManager clockManager,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb5d19ec0f933484688dd23355c8f8d8c6b8256"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE3NTUyOQ==", "bodyText": "Add type parameters to all these raw TimeablePanels\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate final List<TimeablePanel> patchPanels;\n          \n          \n            \n            \tprivate final List<TimeablePanel<Void>> patchPanels;", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r549175529", "createdAt": "2020-12-27T23:20:28Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingNextTickPanel.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright (c) 2020 Morgan Lewis\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *     list of conditions and the following disclaimer.\n+ *  2. Redistributions in binary form must reproduce the above copyright notice,\n+ *     this list of conditions and the following disclaimer in the documentation\n+ *     and/or other materials provided with the distribution.\n+ *\n+ *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ *  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ *  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ *  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ *  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking.farming;\n+\n+import com.google.inject.Inject;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.swing.JTextArea;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.plugins.timetracking.TabContentPanel;\n+import net.runelite.client.plugins.timetracking.TimeTrackingConfig;\n+import net.runelite.client.plugins.timetracking.TimeablePanel;\n+import net.runelite.client.ui.ColorScheme;\n+\n+public class FarmingNextTickPanel extends TabContentPanel\n+{\n+\tprivate final FarmingTracker farmingTracker;\n+\tprivate final TimeTrackingConfig config;\n+\tprivate final ConfigManager configManager;\n+\tprivate final List<TimeablePanel> patchPanels;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb5d19ec0f933484688dd23355c8f8d8c6b8256"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE3NTc1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate Collection<FarmingRegion> lastRegions = Collections.EMPTY_LIST;\n          \n          \n            \n            \tprivate Collection<FarmingRegion> lastRegions = Collections.emptyList();\n          \n      \n    \n    \n  \n\nor I think this can be null", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r549175758", "createdAt": "2020-12-27T23:24:00Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -58,9 +63,11 @@\n \t */\n \tprivate final Map<Tab, Long> completionTimes = new EnumMap<>(Tab.class);\n \n+\tprivate boolean newRegionLoaded;\n+\tprivate Collection<FarmingRegion> lastRegions = Collections.EMPTY_LIST;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb5d19ec0f933484688dd23355c8f8d8c6b8256"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE3NTc3NQ==", "bodyText": "(previous|current)PatchState should have null checks", "url": "https://github.com/runelite/runelite/pull/12947#discussion_r549175775", "createdAt": "2020-12-27T23:24:31Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingTracker.java", "diffHunk": "@@ -121,20 +138,56 @@ public boolean updateData(WorldPoint location)\n \t\t\t\tif (storedValue != null)\n \t\t\t\t{\n \t\t\t\t\tString[] parts = storedValue.split(\":\");\n-\t\t\t\t\tif (parts.length == 2 && parts[0].equals(strVarbit))\n+\t\t\t\t\tif (parts.length == 2)\n \t\t\t\t\t{\n-\t\t\t\t\t\tlong unixTime = 0;\n-\t\t\t\t\t\ttry\n+\t\t\t\t\t\tif (parts[0].equals(strVarbit))\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n+\t\t\t\t\t\t\tlong unixTime = 0;\n+\t\t\t\t\t\t\ttry\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tunixTime = Long.parseLong(parts[1]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (unixTime + (5 * 60) > unixNow && unixNow + 30 > unixTime)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (NumberFormatException e)\n+\t\t\t\t\t\telse if (!newRegionLoaded && timeSinceModalClose > 1)\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t// ignored\n+\t\t\t\t\t\t\tPatchState previousPatchState = patch.getImplementation().forVarbitValue(Integer.parseInt(parts[0]));\n+\t\t\t\t\t\t\tPatchState currentPatchState = patch.getImplementation().forVarbitValue(client.getVar(varbit));\n+\t\t\t\t\t\t\tint patchTickRate = previousPatchState.getTickRate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb5d19ec0f933484688dd23355c8f8d8c6b8256"}, "originalPosition": 122}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4e91c60cd794afa32ac5984ec92b961317487a8", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/d4e91c60cd794afa32ac5984ec92b961317487a8", "committedDate": "2020-12-27T23:56:08Z", "message": "Add farming tick offset to time tracking plugin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1fb5d19ec0f933484688dd23355c8f8d8c6b8256", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/1fb5d19ec0f933484688dd23355c8f8d8c6b8256", "committedDate": "2020-12-27T22:10:29Z", "message": "Add farming tick offset to time tracking plugin"}, "afterCommit": {"oid": "d4e91c60cd794afa32ac5984ec92b961317487a8", "author": {"user": {"login": "MESLewis", "name": "Morgan Lewis"}}, "url": "https://github.com/runelite/runelite/commit/d4e91c60cd794afa32ac5984ec92b961317487a8", "committedDate": "2020-12-27T23:56:08Z", "message": "Add farming tick offset to time tracking plugin"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3004, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}