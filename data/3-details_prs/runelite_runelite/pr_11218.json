{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDUwNTgx", "number": 11218, "title": "runelite-client: add ClientShutdown event", "bodyText": "Requires !107\nThis should hopefully make the client not corrupt it's cache randomly, and prevents the config sets from racing shutdown", "createdAt": "2020-04-07T19:11:40Z", "url": "https://github.com/runelite/runelite/pull/11218", "merged": true, "mergeCommit": {"oid": "242ea42964dae5a16818782980b3809a70bd6aec"}, "closed": true, "closedAt": "2020-04-10T18:37:29Z", "author": {"login": "abextm"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVY-4nAFqTM4OTQ0OTAxMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWD59HABqjMyMjAxMzA3MDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NDQ5MDEz", "url": "https://github.com/runelite/runelite/pull/11218#pullrequestreview-389449013", "createdAt": "2020-04-07T20:03:59Z", "commit": {"oid": "881a0dc31bd19d2b5576665d8d902da2f7c24455"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMDowMzo1OVrOGCUBGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMDowNDo1MVrOGCUDBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3ODI5OQ==", "bodyText": "Can't this smply be singleton? You are creating it only once ever during the whole lifecycle of the app", "url": "https://github.com/runelite/runelite/pull/11218#discussion_r405078299", "createdAt": "2020-04-07T20:03:59Z", "author": {"login": "deathbeam"}, "path": "runelite-client/src/main/java/net/runelite/client/events/ClientShutdown.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright (c) 2020 Abex\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.events;\n+\n+import java.time.Duration;\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import lombok.Value;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Value\n+@Slf4j\n+public class ClientShutdown", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881a0dc31bd19d2b5576665d8d902da2f7c24455"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3ODc5MA==", "bodyText": "I dont really like the complexity of this, cant you at least move it to separate method? Its very annoying to read.\nAlso the method do not needs Runelite as param anymore right", "url": "https://github.com/runelite/runelite/pull/11218#discussion_r405078790", "createdAt": "2020-04-07T20:04:51Z", "author": {"login": "deathbeam"}, "path": "runelite-client/src/main/java/net/runelite/client/ui/ClientUI.java", "diffHunk": "@@ -317,14 +326,76 @@ public void init(final RuneLite runelite) throws Exception\n \t\t\tframe.setLocationRelativeTo(frame.getOwner());\n \t\t\tframe.setResizable(true);\n \n-\t\t\tSwingUtil.addGracefulExitCallback(frame,\n-\t\t\t\t() ->\n+\t\t\tframe.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\n+\t\t\tframe.addWindowListener(new WindowAdapter()\n+\t\t\t{\n+\t\t\t\t@Override\n+\t\t\t\tpublic void windowClosing(WindowEvent event)\n \t\t\t\t{\n-\t\t\t\t\tsaveClientBoundsConfig();\n-\t\t\t\t\trunelite.shutdown();\n-\t\t\t\t},\n-\t\t\t\tthis::showWarningOnExit\n-\t\t\t);\n+\t\t\t\t\tint result = JOptionPane.OK_OPTION;\n+\n+\t\t\t\t\tif (showWarningOnExit())\n+\t\t\t\t\t{\n+\t\t\t\t\t\ttry\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tresult = JOptionPane.showConfirmDialog(\n+\t\t\t\t\t\t\t\tframe,\n+\t\t\t\t\t\t\t\t\"Are you sure you want to exit?\", \"Exit\",\n+\t\t\t\t\t\t\t\tJOptionPane.OK_CANCEL_OPTION,\n+\t\t\t\t\t\t\t\tJOptionPane.QUESTION_MESSAGE);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tcatch (Exception e)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tlog.warn(\"Unexpected exception occurred while check for confirm required\", e);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (result == JOptionPane.OK_OPTION)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tsaveClientBoundsConfig();\n+\t\t\t\t\t\tClientShutdown csev = new ClientShutdown();\n+\t\t\t\t\t\teventBus.post(csev);\n+\t\t\t\t\t\tnew Thread(() ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881a0dc31bd19d2b5576665d8d902da2f7c24455"}, "originalPosition": 87}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "881a0dc31bd19d2b5576665d8d902da2f7c24455", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/881a0dc31bd19d2b5576665d8d902da2f7c24455", "committedDate": "2020-04-07T19:07:19Z", "message": "eventbus: make higher priority events fire first"}, "afterCommit": {"oid": "9e87aec525f77c9bd4c3eefc28b16fe6dd0c2a29", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/9e87aec525f77c9bd4c3eefc28b16fe6dd0c2a29", "committedDate": "2020-04-08T08:18:23Z", "message": "runelite-client: add ClientShutdown event\n\nThis should hopefully make the client not corrupt it's cache randomly,\nand prevents the config sets from racing shutdown"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e87aec525f77c9bd4c3eefc28b16fe6dd0c2a29", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/9e87aec525f77c9bd4c3eefc28b16fe6dd0c2a29", "committedDate": "2020-04-08T08:18:23Z", "message": "runelite-client: add ClientShutdown event\n\nThis should hopefully make the client not corrupt it's cache randomly,\nand prevents the config sets from racing shutdown"}, "afterCommit": {"oid": "1073f62caf4d9901f089953977f852c7172c6b29", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/1073f62caf4d9901f089953977f852c7172c6b29", "committedDate": "2020-04-08T08:22:15Z", "message": "runelite-client: add ClientShutdown event\n\nThis should hopefully make the client not corrupt it's cache randomly,\nand prevents the config sets from racing shutdown"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTEyMDIy", "url": "https://github.com/runelite/runelite/pull/11218#pullrequestreview-391112022", "createdAt": "2020-04-09T20:33:00Z", "commit": {"oid": "9a190d8eafec514c6389ed3940dc49a2edeb22d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDozMzowMFrOGDoY0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDozMzowMFrOGDoY0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ2MDYyNg==", "bodyText": "This probably breaks 9a2872e", "url": "https://github.com/runelite/runelite/pull/11218#discussion_r406460626", "createdAt": "2020-04-09T20:33:00Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/eventbus/EventBus.java", "diffHunk": "@@ -106,7 +106,7 @@ public synchronized void register(@Nonnull final Object object)\n \t\t\tbuilder.putAll(subscribers);\n \t\t}\n \n-\t\tbuilder.orderValuesBy(Comparator.comparing(Subscriber::getPriority)\n+\t\tbuilder.orderValuesBy(Comparator.comparing(Subscriber::getPriority).reversed()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a190d8eafec514c6389ed3940dc49a2edeb22d4"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTE3MDA2", "url": "https://github.com/runelite/runelite/pull/11218#pullrequestreview-391117006", "createdAt": "2020-04-09T20:41:30Z", "commit": {"oid": "1073f62caf4d9901f089953977f852c7172c6b29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDo0MTozMFrOGDoo1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDo0MTozMFrOGDoo1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ2NDcyNw==", "bodyText": "is this supposed to exit here?", "url": "https://github.com/runelite/runelite/pull/11218#discussion_r406464727", "createdAt": "2020-04-09T20:41:30Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/events/ClientShutdown.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright (c) 2020 Abex\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.events;\n+\n+import java.time.Duration;\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import lombok.Value;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Value\n+@Slf4j\n+public class ClientShutdown\n+{\n+\tprivate Queue<Future<?>> tasks = new ConcurrentLinkedQueue<>();\n+\n+\tpublic void waitFor(Future<?> future)\n+\t{\n+\t\ttasks.add(future);\n+\t}\n+\n+\tpublic void waitForAllConsumers(Duration totalTimeout)\n+\t{\n+\t\tlong deadline = System.nanoTime() + totalTimeout.toNanos();\n+\t\tfor (Future<?> task; (task = tasks.poll()) != null; )\n+\t\t{\n+\t\t\tlong timeout = deadline - System.nanoTime();\n+\t\t\tif (timeout < 0)\n+\t\t\t{\n+\t\t\t\tlog.warn(\"Timed out waiting for task completion\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1073f62caf4d9901f089953977f852c7172c6b29"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb89319cc433296fe190d939bb4b7843b56f2af7", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/eb89319cc433296fe190d939bb4b7843b56f2af7", "committedDate": "2020-04-09T20:52:53Z", "message": "runelite-api: add stopNow to cleanly shutdown the client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42db64dc79609256638ad2709bcbaccf382975e7", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/42db64dc79609256638ad2709bcbaccf382975e7", "committedDate": "2020-04-09T20:52:53Z", "message": "eventbus: make higher priority events fire first"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1073f62caf4d9901f089953977f852c7172c6b29", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/1073f62caf4d9901f089953977f852c7172c6b29", "committedDate": "2020-04-08T08:22:15Z", "message": "runelite-client: add ClientShutdown event\n\nThis should hopefully make the client not corrupt it's cache randomly,\nand prevents the config sets from racing shutdown"}, "afterCommit": {"oid": "db97bb638dcee0e1e092649b4c33a5ca0d48a82a", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/db97bb638dcee0e1e092649b4c33a5ca0d48a82a", "committedDate": "2020-04-09T20:53:22Z", "message": "runelite-client: add ClientShutdown event\n\nThis should hopefully make the client not corrupt it's cache randomly,\nand prevents the config sets from racing shutdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e83d1e6b7269235726dd007e20a3b7e8b7bcdbb1", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/e83d1e6b7269235726dd007e20a3b7e8b7bcdbb1", "committedDate": "2020-04-09T22:04:39Z", "message": "runelite-client: add ClientShutdown event\n\nThis should hopefully make the client not corrupt it's cache randomly,\nand prevents the config sets from racing shutdown"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db97bb638dcee0e1e092649b4c33a5ca0d48a82a", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/db97bb638dcee0e1e092649b4c33a5ca0d48a82a", "committedDate": "2020-04-09T20:53:22Z", "message": "runelite-client: add ClientShutdown event\n\nThis should hopefully make the client not corrupt it's cache randomly,\nand prevents the config sets from racing shutdown"}, "afterCommit": {"oid": "e83d1e6b7269235726dd007e20a3b7e8b7bcdbb1", "author": {"user": {"login": "abextm", "name": "Abex"}}, "url": "https://github.com/runelite/runelite/commit/e83d1e6b7269235726dd007e20a3b7e8b7bcdbb1", "committedDate": "2020-04-09T22:04:39Z", "message": "runelite-client: add ClientShutdown event\n\nThis should hopefully make the client not corrupt it's cache randomly,\nand prevents the config sets from racing shutdown"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3840, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}