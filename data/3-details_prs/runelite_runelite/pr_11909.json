{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTQ5ODY1", "number": 11909, "title": "Add support for menu options on infoboxes", "bodyText": "Closes #6410", "createdAt": "2020-06-17T01:31:22Z", "url": "https://github.com/runelite/runelite/pull/11909", "merged": true, "mergeCommit": {"oid": "111f099654b080fe83b07a86ee013db0219c1f6c"}, "closed": true, "closedAt": "2020-06-17T16:52:47Z", "author": {"login": "Adam-"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsDWekgFqTQzMjA3Mjc3OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsLcXGgFqTQzMjUxMjIyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDcyNzc4", "url": "https://github.com/runelite/runelite/pull/11909#pullrequestreview-432072778", "createdAt": "2020-06-17T05:41:03Z", "commit": {"oid": "28de3105b7d27b94aad8b5d56b10847a63fb4830"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0MTowM1rOGk2WTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1Mjo1N1rOGk2lJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MjM2Nw==", "bodyText": "Why assert then cast? It will throw regardless", "url": "https://github.com/runelite/runelite/pull/11909#discussion_r441292367", "createdAt": "2020-06-17T05:41:03Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/infobox/InfoBoxOverlay.java", "diffHunk": "@@ -122,25 +141,56 @@ public Dimension render(Graphics2D graphics)\n \n \t\tfor (final LayoutableRenderableEntity child : panelComponent.getChildren())\n \t\t{\n-\t\t\tif (child instanceof InfoBoxComponent)\n+\t\t\tassert child instanceof InfoBoxComponent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28de3105b7d27b94aad8b5d56b10847a63fb4830"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NTIxNw==", "bodyText": "why not just invoke a listener attached to the infobox?", "url": "https://github.com/runelite/runelite/pull/11909#discussion_r441295217", "createdAt": "2020-06-17T05:50:07Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/ui/overlay/infobox/InfoBoxOverlay.java", "diffHunk": "@@ -122,25 +141,56 @@ public Dimension render(Graphics2D graphics)\n \n \t\tfor (final LayoutableRenderableEntity child : panelComponent.getChildren())\n \t\t{\n-\t\t\tif (child instanceof InfoBoxComponent)\n+\t\t\tassert child instanceof InfoBoxComponent;\n+\t\t\tfinal InfoBoxComponent component = (InfoBoxComponent) child;\n+\n+\t\t\t// Create intersection rectangle\n+\t\t\tfinal Rectangle intersectionRectangle = new Rectangle(component.getBounds());\n+\t\t\tintersectionRectangle.translate(getBounds().x, getBounds().y);\n+\n+\t\t\tif (intersectionRectangle.contains(mouse))\n \t\t\t{\n-\t\t\t\tfinal InfoBoxComponent component = (InfoBoxComponent) child;\n+\t\t\t\tfinal String tooltip = component.getTooltip();\n+\t\t\t\tif (!Strings.isNullOrEmpty(tooltip))\n+\t\t\t\t{\n+\t\t\t\t\ttooltipManager.add(new Tooltip(tooltip));\n+\t\t\t\t}\n \n-\t\t\t\tif (!Strings.isNullOrEmpty(component.getTooltip()))\n+\t\t\t\tif (!menuOpen)\n \t\t\t\t{\n-\t\t\t\t\t// Create intersection rectangle\n-\t\t\t\t\tfinal Rectangle intersectionRectangle = new Rectangle(component.getBounds());\n-\t\t\t\t\tintersectionRectangle.translate(getBounds().x, getBounds().y);\n-\n-\t\t\t\t\tif (intersectionRectangle.contains(mouse))\n-\t\t\t\t\t{\n-\t\t\t\t\t\ttooltipManager.add(new Tooltip(component.getTooltip()));\n-\t\t\t\t\t}\n+\t\t\t\t\thoveredComponent = component;\n \t\t\t\t}\n+\t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \n \t\tpanelComponent.getChildren().clear();\n \t\treturn dimension;\n \t}\n+\n+\t@Override\n+\tpublic List<OverlayMenuEntry> getMenuEntries()\n+\t{\n+\t\t// we dynamically build the menu options based on which infobox is hovered\n+\t\treturn hoveredComponent == null ? Collections.emptyList() : hoveredComponent.getInfoBox().getMenuEntries();\n+\t}\n+\n+\t@Subscribe\n+\tpublic void onMenuOptionClicked(MenuOptionClicked menuOptionClicked)\n+\t{\n+\t\tif (menuOptionClicked.getMenuAction() != MenuAction.RUNELITE_INFOBOX)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tInfoBox infoBox = hoveredComponent.getInfoBox();\n+\t\tOverlayMenuEntry overlayMenuEntry = infoBox.getMenuEntries().stream()\n+\t\t\t.filter(me -> me.getOption().equals(menuOptionClicked.getMenuOption()))\n+\t\t\t.findAny()\n+\t\t\t.orElse(null);\n+\t\tif (overlayMenuEntry != null)\n+\t\t{\n+\t\t\teventBus.post(new InfoBoxMenuClicked(overlayMenuEntry, infoBox));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28de3105b7d27b94aad8b5d56b10847a63fb4830"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NjE2NA==", "bodyText": "if (infoBoxMenuClicked.getInfobox() == deathTimer)?", "url": "https://github.com/runelite/runelite/pull/11909#discussion_r441296164", "createdAt": "2020-06-17T05:52:57Z", "author": {"login": "abextm"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/deathindicator/DeathIndicatorPlugin.java", "diffHunk": "@@ -287,12 +303,37 @@ public void onGameStateChanged(GameStateChanged event)\n \t\t}\n \t}\n \n+\t@Subscribe\n+\tpublic void onInfoBoxMenuClicked(InfoBoxMenuClicked infoBoxMenuClicked)\n+\t{\n+\t\tOverlayMenuEntry overlayMenuEntry = infoBoxMenuClicked.getEntry();\n+\t\tif (overlayMenuEntry.getMenuAction() == MenuAction.RUNELITE_INFOBOX\n+\t\t\t&& infoBoxMenuClicked.getInfoBox() == deathTimer\n+\t\t\t&& infoBoxMenuClicked.getEntry().getOption().equals(DEATH_TIMER_CLEAR))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca45fbe4103f1f66f75ee92798673258c17c725f"}, "originalPosition": 134}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1680e97315eb91fbb2904e8b4fec64a0b14f0a64", "author": {"user": {"login": "Adam-", "name": "Adam"}}, "url": "https://github.com/runelite/runelite/commit/1680e97315eb91fbb2904e8b4fec64a0b14f0a64", "committedDate": "2020-06-17T15:12:42Z", "message": "overlay: optimize some menu handling code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3f0932cba2e5b91cc4fd24d51ec6413226f8c08", "author": {"user": {"login": "Adam-", "name": "Adam"}}, "url": "https://github.com/runelite/runelite/commit/a3f0932cba2e5b91cc4fd24d51ec6413226f8c08", "committedDate": "2020-06-17T15:12:44Z", "message": "client: add support for menu options on infoboxes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "442535ffb8fb9468fc6a73c8093fde20d17e0ef6", "author": {"user": {"login": "Adam-", "name": "Adam"}}, "url": "https://github.com/runelite/runelite/commit/442535ffb8fb9468fc6a73c8093fde20d17e0ef6", "committedDate": "2020-06-17T15:12:46Z", "message": "death indicator: add clear option to infobox\n\nCo-authored-by: ThatGamerBlue <thatgamerblue@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bd9955998704f2029a6c9a537d1f1d20c17f309", "author": {"user": {"login": "Adam-", "name": "Adam"}}, "url": "https://github.com/runelite/runelite/commit/5bd9955998704f2029a6c9a537d1f1d20c17f309", "committedDate": "2020-06-17T13:56:18Z", "message": "this?"}, "afterCommit": {"oid": "442535ffb8fb9468fc6a73c8093fde20d17e0ef6", "author": {"user": {"login": "Adam-", "name": "Adam"}}, "url": "https://github.com/runelite/runelite/commit/442535ffb8fb9468fc6a73c8093fde20d17e0ef6", "committedDate": "2020-06-17T15:12:46Z", "message": "death indicator: add clear option to infobox\n\nCo-authored-by: ThatGamerBlue <thatgamerblue@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTEyMjIw", "url": "https://github.com/runelite/runelite/pull/11909#pullrequestreview-432512220", "createdAt": "2020-06-17T15:18:41Z", "commit": {"oid": "442535ffb8fb9468fc6a73c8093fde20d17e0ef6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3372, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}