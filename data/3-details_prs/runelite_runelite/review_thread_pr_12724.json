{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzQyMzYz", "number": 12724, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxOToyNToyNlrOE0EqYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQyMjo1NzowM1rOE0MWJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDM3NzkyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/keyremapping/KeyRemappingConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxOToyNToyNlrOHrpe2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxOToyNToyNlrOHrpe2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUzMDQ1Nw==", "bodyText": "I don't think a new section for this is required. Having no section usually implies miscellaneous.", "url": "https://github.com/runelite/runelite/pull/12724#discussion_r515530457", "createdAt": "2020-10-31T19:25:26Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/keyremapping/KeyRemappingConfig.java", "diffHunk": "@@ -276,14 +277,34 @@ default ModifierlessKeybind esc()\n \t\treturn new ModifierlessKeybind(KeyEvent.VK_ESCAPE, 0);\n \t}\n \n+\t@ConfigSection(\n+\t\tname = \"Miscellaneous Remapping\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a458248d1f8a2024c449459870207e9661aa1752"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDM3ODQ1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/test/java/net/runelite/client/plugins/keyremapping/KeyRemappingListenerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxOToyNjoxNFrOHrpfGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxOToyNjoxNFrOHrpfGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUzMDUyMA==", "bodyText": "You can also just put this in setUp I think", "url": "https://github.com/runelite/runelite/pull/12724#discussion_r515530520", "createdAt": "2020-10-31T19:26:14Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/test/java/net/runelite/client/plugins/keyremapping/KeyRemappingListenerTest.java", "diffHunk": "@@ -73,6 +74,7 @@ public void testTypingStateChange()\n \t\twhen(keyRemappingConfig.down()).thenReturn(new ModifierlessKeybind(KeyEvent.VK_S, 0));\n \t\twhen(keyRemappingConfig.left()).thenReturn(new ModifierlessKeybind(KeyEvent.VK_A, 0));\n \t\twhen(keyRemappingConfig.right()).thenReturn(new ModifierlessKeybind(KeyEvent.VK_D, 0));\n+\t\twhen(keyRemappingConfig.control()).thenReturn(new ModifierlessKeybind(KeyEvent.VK_CONTROL, InputEvent.CTRL_DOWN_MASK));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a458248d1f8a2024c449459870207e9661aa1752"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTYzNjg0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/keyremapping/KeyRemappingConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQyMjo1NzowM1rOHry23g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQyMjo1NzowM1rOHry23g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY4NDA2Mg==", "bodyText": "From testing on my system and talking to abex, it seems like this should be new ModifierlessKeybind(KeyEvent.VK_UNDEFINED, InputEvent.CTRL_DOWN_MASK);. Optionally we could just make this not have a default value and check for null, although we don't do that for the other keybinds.", "url": "https://github.com/runelite/runelite/pull/12724#discussion_r515684062", "createdAt": "2020-11-01T22:57:03Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/keyremapping/KeyRemappingConfig.java", "diffHunk": "@@ -286,4 +287,15 @@ default ModifierlessKeybind space()\n \t{\n \t\treturn new ModifierlessKeybind(KeyEvent.VK_SPACE, 0);\n \t}\n+\n+\t@ConfigItem(\n+\t\tposition = 22,\n+\t\tkeyName = \"control\",\n+\t\tname = \"Control\",\n+\t\tdescription = \"The key which will replace {Control}.\"\n+\t)\n+\tdefault ModifierlessKeybind control()\n+\t{\n+\t\treturn new ModifierlessKeybind(KeyEvent.VK_CONTROL, InputEvent.CTRL_DOWN_MASK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a266cd10cfe513b909d1e16044486dc50e36189"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3249, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}