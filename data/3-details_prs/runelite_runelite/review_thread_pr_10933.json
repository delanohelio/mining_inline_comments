{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNzU4MDc0", "number": 10933, "reviewThreads": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjoxMzo0NFrODkt8Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QyMjoxMTozN1rOFffOmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODI4MDY3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjoxMzo0NFrOFxMfag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyMjozM1rOFxTRHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyOTE5NA==", "bodyText": "These should be added as hidden config options that can be then be used by the overlay and your code", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387129194", "createdAt": "2020-03-03T16:13:44Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -99,7 +138,40 @@ private void processInfobox()\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n+\n+\tprivate void setKnownValues()\n+\t{\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && hasCompletedQuest() && isInKingdom())\n+\t\t{\n+\t\t\tconfigManager.setConfiguration(CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED, Instant.now().getEpochSecond());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "322b9a610bb07b6bd0eb5925c871af5bf7f26447"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMTE3OA==", "bodyText": "Do you mind pointing me towards an example of this?", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387131178", "createdAt": "2020-03-03T16:16:26Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -99,7 +138,40 @@ private void processInfobox()\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n+\n+\tprivate void setKnownValues()\n+\t{\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && hasCompletedQuest() && isInKingdom())\n+\t\t{\n+\t\t\tconfigManager.setConfiguration(CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED, Instant.now().getEpochSecond());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyOTE5NA=="}, "originalCommit": {"oid": "322b9a610bb07b6bd0eb5925c871af5bf7f26447"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMTg0NA==", "bodyText": "https://github.com/runelite/runelite/blob/master/runelite-client/src/main/java/net/runelite/client/plugins/slayer/SlayerConfig.java#L131", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387131844", "createdAt": "2020-03-03T16:17:26Z", "author": {"login": "Trevor159"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -99,7 +138,40 @@ private void processInfobox()\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n+\n+\tprivate void setKnownValues()\n+\t{\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && hasCompletedQuest() && isInKingdom())\n+\t\t{\n+\t\t\tconfigManager.setConfiguration(CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED, Instant.now().getEpochSecond());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyOTE5NA=="}, "originalCommit": {"oid": "322b9a610bb07b6bd0eb5925c871af5bf7f26447"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIyMjA2Nw==", "bodyText": "Thank you. Added KingdomConfig.\nIs it a known issue that ConfigManager can't store longs?", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387222067", "createdAt": "2020-03-03T18:49:19Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -99,7 +138,40 @@ private void processInfobox()\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n+\n+\tprivate void setKnownValues()\n+\t{\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && hasCompletedQuest() && isInKingdom())\n+\t\t{\n+\t\t\tconfigManager.setConfiguration(CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED, Instant.now().getEpochSecond());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyOTE5NA=="}, "originalCommit": {"oid": "322b9a610bb07b6bd0eb5925c871af5bf7f26447"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIyNDE4OQ==", "bodyText": "store the Instant see ConfigManager::stringToObject", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387224189", "createdAt": "2020-03-03T18:52:55Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -99,7 +138,40 @@ private void processInfobox()\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n+\n+\tprivate void setKnownValues()\n+\t{\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && hasCompletedQuest() && isInKingdom())\n+\t\t{\n+\t\t\tconfigManager.setConfiguration(CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED, Instant.now().getEpochSecond());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyOTE5NA=="}, "originalCommit": {"oid": "322b9a610bb07b6bd0eb5925c871af5bf7f26447"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MDIyMg==", "bodyText": "Changed to store lastChanged as java.time.Instant instead of int representation of decaseconds epoch", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387240222", "createdAt": "2020-03-03T19:22:33Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -99,7 +138,40 @@ private void processInfobox()\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n+\n+\tprivate void setKnownValues()\n+\t{\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && hasCompletedQuest() && isInKingdom())\n+\t\t{\n+\t\t\tconfigManager.setConfiguration(CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED, Instant.now().getEpochSecond());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyOTE5NA=="}, "originalCommit": {"oid": "322b9a610bb07b6bd0eb5925c871af5bf7f26447"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODk3NzA4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyNDowMVrOFxTUHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1Mzo0N1rOFxUSzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MDk4OA==", "bodyText": "Comments in this file aren't needed", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387240988", "createdAt": "2020-03-03T19:24:01Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -52,9 +52,8 @@ default int getFavorThreshold()\n \t}\r\n \r\n \t/** Stored data **/\r\n-\t// Epoch in *Decaseconds of last time coffer or favor values changed.\r\n-\t// Default is -1. Must return positive value to display notification message\r\n-\t// *Stored as integer in Decaseconds because ConfigManager unable to store longs, and 2038 problem\r\n+\t// Instant of last coffer or favor change.\r\n+\t// Default is -1 epoch. Must return positive epoch value to display notification message\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NzAzOA==", "bodyText": "Removed comments", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387257038", "createdAt": "2020-03-03T19:53:47Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -52,9 +52,8 @@ default int getFavorThreshold()\n \t}\r\n \r\n \t/** Stored data **/\r\n-\t// Epoch in *Decaseconds of last time coffer or favor values changed.\r\n-\t// Default is -1. Must return positive value to display notification message\r\n-\t// *Stored as integer in Decaseconds because ConfigManager unable to store longs, and 2038 problem\r\n+\t// Instant of last coffer or favor change.\r\n+\t// Default is -1 epoch. Must return positive epoch value to display notification message\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MDk4OA=="}, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODk3ODc3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyNDozMlrOFxTVNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1MjoyNVrOFxUP4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MTI2OA==", "bodyText": "This needs the license header", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387241268", "createdAt": "2020-03-03T19:24:32Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package net.runelite.client.plugins.kingdomofmiscellania;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NjI5MQ==", "bodyText": "Added license header", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387256291", "createdAt": "2020-03-03T19:52:25Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package net.runelite.client.plugins.kingdomofmiscellania;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MTI2OA=="}, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODk3OTkwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyNDo1MFrOFxTV4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyNDo1MFrOFxTV4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MTQ0Mg==", "bodyText": "space above this line", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387241442", "createdAt": "2020-03-03T19:24:50Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+import java.time.Instant;\r\n+\r\n+@ConfigGroup(\"kingdomOfMiscellania\")\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 1,\r\n+\t\t\tkeyName = \"sendNotifications\",\r\n+\t\t\tname = \"Send Notifications\",\r\n+\t\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn true;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\t\tmin = 0,\r\n+\t\t\tmax = 7_500_000\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 2,\r\n+\t\t\tkeyName = \"cofferThreshold\",\r\n+\t\t\tname = \"Coffer Threshold\",\r\n+\t\t\tdescription = \"Send notifications if coffer is at or below this value\"\r\n+\t)\r\n+\tdefault int getCofferThreshold()\r\n+\t{\r\n+\t\treturn 7_500_000;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\t\tmin = 0,\r\n+\t\t\tmax = 100\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 3,\r\n+\t\t\tkeyName = \"favorThreshold\",\r\n+\t\t\tname = \"Favor Threshold\",\r\n+\t\t\tdescription = \"Send notifications if favor percentage is at or below this value\"\r\n+\t)\r\n+\tdefault int getFavorThreshold()\r\n+\t{\r\n+\t\treturn 100;\r\n+\t}\r\n+\r\n+\t/** Stored data **/\r\n+\t// Instant of last coffer or favor change.\r\n+\t// Default is -1 epoch. Must return positive epoch value to display notification message\r\n+\t@ConfigItem(\r\n+\t\t\tkeyName = \"lastChanged\",\r\n+\t\t\tname = \"\",\r\n+\t\t\tdescription = \"\",\r\n+\t\t\thidden = true\r\n+\t)\r\n+\tdefault Instant getLastChanged()\r\n+\t{\r\n+\t\treturn Instant.ofEpochSecond(-1);\r\n+\t}\r\n+\t@ConfigItem(\r\n+\t\t\tkeyName = \"lastChanged\",\r\n+\t\t\tname = \"\",\r\n+\t\t\tdescription = \"\"\r\n+\t)\r\n+\tvoid setLastChanged(Instant lastChanged);\r\n+\r\n+\t// Last known value of coffer - default is -1: should be set when visiting Miscellania\r\n+\t@ConfigItem(\r\n+\t\t\tkeyName = \"coffer\",\r\n+\t\t\tname = \"\",\r\n+\t\t\tdescription = \"\",\r\n+\t\t\thidden = true\r\n+\t)\r\n+\tdefault int getCoffer()\r\n+\t{\r\n+\t\treturn -1;\r\n+\t}\r\n+\t@ConfigItem(\r\n+\t\t\tkeyName = \"coffer\",\r\n+\t\t\tname = \"\",\r\n+\t\t\tdescription = \"\"\r\n+\t)\r\n+\tvoid setCoffer(int coffer);\r\n+\r\n+\t// Last known value of favor - default is -1: should be set when visiting Miscellania\r\n+\t@ConfigItem(\r\n+\t\t\tkeyName = \"favor\",\r\n+\t\t\tname = \"\",\r\n+\t\t\tdescription = \"\",\r\n+\t\t\thidden = true\r\n+\t)\r\n+\tdefault int getFavor()\r\n+\t{\r\n+\t\treturn -1;\r\n+\t}\r\n+\t@ConfigItem(\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODk4MDQ1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyNTowMFrOFxTWPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyNTowMFrOFxTWPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MTUzNA==", "bodyText": "space above this line", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387241534", "createdAt": "2020-03-03T19:25:00Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+import java.time.Instant;\r\n+\r\n+@ConfigGroup(\"kingdomOfMiscellania\")\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 1,\r\n+\t\t\tkeyName = \"sendNotifications\",\r\n+\t\t\tname = \"Send Notifications\",\r\n+\t\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn true;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\t\tmin = 0,\r\n+\t\t\tmax = 7_500_000\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 2,\r\n+\t\t\tkeyName = \"cofferThreshold\",\r\n+\t\t\tname = \"Coffer Threshold\",\r\n+\t\t\tdescription = \"Send notifications if coffer is at or below this value\"\r\n+\t)\r\n+\tdefault int getCofferThreshold()\r\n+\t{\r\n+\t\treturn 7_500_000;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\t\tmin = 0,\r\n+\t\t\tmax = 100\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 3,\r\n+\t\t\tkeyName = \"favorThreshold\",\r\n+\t\t\tname = \"Favor Threshold\",\r\n+\t\t\tdescription = \"Send notifications if favor percentage is at or below this value\"\r\n+\t)\r\n+\tdefault int getFavorThreshold()\r\n+\t{\r\n+\t\treturn 100;\r\n+\t}\r\n+\r\n+\t/** Stored data **/\r\n+\t// Instant of last coffer or favor change.\r\n+\t// Default is -1 epoch. Must return positive epoch value to display notification message\r\n+\t@ConfigItem(\r\n+\t\t\tkeyName = \"lastChanged\",\r\n+\t\t\tname = \"\",\r\n+\t\t\tdescription = \"\",\r\n+\t\t\thidden = true\r\n+\t)\r\n+\tdefault Instant getLastChanged()\r\n+\t{\r\n+\t\treturn Instant.ofEpochSecond(-1);\r\n+\t}\r\n+\t@ConfigItem(\r\n+\t\t\tkeyName = \"lastChanged\",\r\n+\t\t\tname = \"\",\r\n+\t\t\tdescription = \"\"\r\n+\t)\r\n+\tvoid setLastChanged(Instant lastChanged);\r\n+\r\n+\t// Last known value of coffer - default is -1: should be set when visiting Miscellania\r\n+\t@ConfigItem(\r\n+\t\t\tkeyName = \"coffer\",\r\n+\t\t\tname = \"\",\r\n+\t\t\tdescription = \"\",\r\n+\t\t\thidden = true\r\n+\t)\r\n+\tdefault int getCoffer()\r\n+\t{\r\n+\t\treturn -1;\r\n+\t}\r\n+\t@ConfigItem(\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODk4MDk4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyNToxMVrOFxTWoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyNToxMVrOFxTWoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MTYzMw==", "bodyText": "space above this line", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387241633", "createdAt": "2020-03-03T19:25:11Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+import java.time.Instant;\r\n+\r\n+@ConfigGroup(\"kingdomOfMiscellania\")\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 1,\r\n+\t\t\tkeyName = \"sendNotifications\",\r\n+\t\t\tname = \"Send Notifications\",\r\n+\t\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn true;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\t\tmin = 0,\r\n+\t\t\tmax = 7_500_000\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 2,\r\n+\t\t\tkeyName = \"cofferThreshold\",\r\n+\t\t\tname = \"Coffer Threshold\",\r\n+\t\t\tdescription = \"Send notifications if coffer is at or below this value\"\r\n+\t)\r\n+\tdefault int getCofferThreshold()\r\n+\t{\r\n+\t\treturn 7_500_000;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\t\tmin = 0,\r\n+\t\t\tmax = 100\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 3,\r\n+\t\t\tkeyName = \"favorThreshold\",\r\n+\t\t\tname = \"Favor Threshold\",\r\n+\t\t\tdescription = \"Send notifications if favor percentage is at or below this value\"\r\n+\t)\r\n+\tdefault int getFavorThreshold()\r\n+\t{\r\n+\t\treturn 100;\r\n+\t}\r\n+\r\n+\t/** Stored data **/\r\n+\t// Instant of last coffer or favor change.\r\n+\t// Default is -1 epoch. Must return positive epoch value to display notification message\r\n+\t@ConfigItem(\r\n+\t\t\tkeyName = \"lastChanged\",\r\n+\t\t\tname = \"\",\r\n+\t\t\tdescription = \"\",\r\n+\t\t\thidden = true\r\n+\t)\r\n+\tdefault Instant getLastChanged()\r\n+\t{\r\n+\t\treturn Instant.ofEpochSecond(-1);\r\n+\t}\r\n+\t@ConfigItem(\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODk4OTEwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyNzoyMlrOFxTbag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1Mjo0OFrOFxUQoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0Mjg1OA==", "bodyText": "this doesn't need to be a function", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387242858", "createdAt": "2020-03-03T19:27:22Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -99,7 +142,43 @@ private void processInfobox()\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n \n+\tprivate void setKnownValues()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NjQ4MA==", "bodyText": "Inlined function", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387256480", "createdAt": "2020-03-03T19:52:48Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -99,7 +142,43 @@ private void processInfobox()\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n \n+\tprivate void setKnownValues()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0Mjg1OA=="}, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODk5MTQ1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOToyODowM1rOFxTc8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1MzowM1rOFxURJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MzI0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate boolean hasCompletedNextQuest()\n          \n          \n            \n            \tprivate boolean royalTroubleCompleted()", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387243248", "createdAt": "2020-03-03T19:28:03Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -133,9 +234,27 @@ private boolean hasCompletedQuest()\n \t\treturn client.getVar(VarPlayer.THRONE_OF_MISCELLANIA) > 0;\n \t}\n \n+\tprivate boolean hasCompletedNextQuest()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NjYxMw==", "bodyText": "Renamed", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387256613", "createdAt": "2020-03-03T19:53:03Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -133,9 +234,27 @@ private boolean hasCompletedQuest()\n \t\treturn client.getVar(VarPlayer.THRONE_OF_MISCELLANIA) > 0;\n \t}\n \n+\tprivate boolean hasCompletedNextQuest()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI0MzI0OA=="}, "originalCommit": {"oid": "14e8d67ad4cdafd4ffccdd7375f64fbfceeb8ed6"}, "originalPosition": 175}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzI0MDExOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoyNToxNFrOFx8arA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToyMDoyMFrOFx-CWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNDQxMg==", "bodyText": "These can be removed in favor of using the config", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387914412", "createdAt": "2020-03-04T20:25:14Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -61,6 +77,12 @@\n \t@Inject\n \tprivate ItemManager itemManager;\n \n+\t@Inject\n+\tprivate KingdomConfig config;\n+\n+\t@Inject\n+\tprivate ChatMessageManager chatMessageManager;\n+\n \t@Getter\n \tprivate int favor = 0, coffer = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e06b83f357cd71c743ed0bb2b4860462d518c282"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0MDk1NA==", "bodyText": "True. Changed in latest commit,", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r387940954", "createdAt": "2020-03-04T21:20:20Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -61,6 +77,12 @@\n \t@Inject\n \tprivate ItemManager itemManager;\n \n+\t@Inject\n+\tprivate KingdomConfig config;\n+\n+\t@Inject\n+\tprivate ChatMessageManager chatMessageManager;\n+\n \t@Getter\n \tprivate int favor = 0, coffer = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNDQxMg=="}, "originalCommit": {"oid": "e06b83f357cd71c743ed0bb2b4860462d518c282"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTY5MDI3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNTozMDo0MVrOFzMuAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNTozMDo0MVrOFzMuAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMDA4Mw==", "bodyText": "Don't use a magic number to represent one day's worth of seconds. Make a private static final int constant instead and represent it with (int) Duration.of(1, ChronoUnit.DAYS).get(ChronoUnit.SECONDS)", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r389230083", "createdAt": "2020-03-07T05:30:41Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +189,60 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / 86_400, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac8bc35c6319e4afd049fa0a20922c235621bc45"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTY5MTA1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNTozMTo1MFrOFzMuZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNTozMTo1MFrOFzMuZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMDE4Mw==", "bodyText": "50k and 75k should also be defined as constants.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r389230183", "createdAt": "2020-03-07T05:31:50Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +189,60 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / 86_400, 0);\n+\t\tint maxDailyWithdrawl = royalTroubleCompleted() ? 75_000 : 50_000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac8bc35c6319e4afd049fa0a20922c235621bc45"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTY5MzM5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNTozNTo1NFrOFzMveA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNTozNTo1NFrOFzMveA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMDQ1Ng==", "bodyText": "127 should also be made into a constant and should get a healthy dose of javadoc to explain that approval rating is stored as an unsigned 7-bit int. (Perhaps this should be added to the varbit entry for kingdom favor)", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r389230456", "createdAt": "2020-03-07T05:35:54Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +189,60 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / 86_400, 0);\n+\t\tint maxDailyWithdrawl = royalTroubleCompleted() ? 75_000 : 50_000;\n+\t\tint maxDailyThreshold = maxDailyWithdrawl * 10;\n+\n+\t\tfor (int i = 0; i < daysSince; i++)\n+\t\t{\n+\t\t\tlastCoffer -= (lastCoffer > maxDailyThreshold) ? maxDailyWithdrawl : lastCoffer / 10;\n+\t\t}\n+\t\treturn lastCoffer;\n+\t}\n+\n+\tprivate int estimateFavor(long lastChangedEpoch, int lastFavor)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / 86_400, 0);\n+\t\tfloat dailyPercentage = royalTroubleCompleted() ? 0.01f : 0.025f;\n+\n+\t\tlastFavor -= (int) (daysSince * dailyPercentage * 127);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac8bc35c6319e4afd049fa0a20922c235621bc45"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjM1MjkwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMDoxNTozMlrOFzSXSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzo0MzowOFrOFzS9Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyMjU2OQ==", "bodyText": "Is shouldSendNotification needed? It seems like sending notifications is already fully guarded by config.shouldSendNotifications(), loggingIn,and throneOfMiscellaniaCompleted().", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r389322569", "createdAt": "2020-03-08T00:15:32Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -51,6 +64,15 @@\n public class KingdomPlugin extends Plugin\n {\n \tprivate static final ImmutableSet<Integer> KINGDOM_REGION = ImmutableSet.of(10044, 10300);\n+\tprivate static final String CHAT_MESSAGE_FORMAT = \"Your Kingdom of Miscellania favor is %d%%, and your coffer has %s coins.\";\n+\tprivate static final int SECONDS_IN_DAY = (int) Duration.of(1, ChronoUnit.DAYS).getSeconds();\n+\tprivate static final int MAX_WITHDRAWAL_BASE = 50_000;\n+\tprivate static final int MAX_WITHDRAWAL_ROYAL_TROUBLE = 75_000;\n+\tprivate static final float FAVOR_DECREMENT_BASE = 0.025f;\n+\tprivate static final float FAVOR_DECREMENT_ROYAL_TROUBLE = 0.01f;\n+\tprotected static final int MAX_FAVOR = 127;\n+\n+\tprivate boolean loggingIn, shouldSendNotification;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21639b7a5009dd5e5ac7a6d9df016664cccea69"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyNTExMw==", "bodyText": "True, createNotification() is only called in one place after checking loggingIn. I\u2019ll change when I get home.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r389325113", "createdAt": "2020-03-08T01:09:43Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -51,6 +64,15 @@\n public class KingdomPlugin extends Plugin\n {\n \tprivate static final ImmutableSet<Integer> KINGDOM_REGION = ImmutableSet.of(10044, 10300);\n+\tprivate static final String CHAT_MESSAGE_FORMAT = \"Your Kingdom of Miscellania favor is %d%%, and your coffer has %s coins.\";\n+\tprivate static final int SECONDS_IN_DAY = (int) Duration.of(1, ChronoUnit.DAYS).getSeconds();\n+\tprivate static final int MAX_WITHDRAWAL_BASE = 50_000;\n+\tprivate static final int MAX_WITHDRAWAL_ROYAL_TROUBLE = 75_000;\n+\tprivate static final float FAVOR_DECREMENT_BASE = 0.025f;\n+\tprivate static final float FAVOR_DECREMENT_ROYAL_TROUBLE = 0.01f;\n+\tprotected static final int MAX_FAVOR = 127;\n+\n+\tprivate boolean loggingIn, shouldSendNotification;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyMjU2OQ=="}, "originalCommit": {"oid": "c21639b7a5009dd5e5ac7a6d9df016664cccea69"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMjI1MQ==", "bodyText": "I think I originally used shouldSendNotification as the only flag, then I created loggingIn since I had to wait for the first game tick for royalTroubleCompleted() to return accurately, making it obsolete. Anyway, I've removed it.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r389332251", "createdAt": "2020-03-08T03:43:08Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -51,6 +64,15 @@\n public class KingdomPlugin extends Plugin\n {\n \tprivate static final ImmutableSet<Integer> KINGDOM_REGION = ImmutableSet.of(10044, 10300);\n+\tprivate static final String CHAT_MESSAGE_FORMAT = \"Your Kingdom of Miscellania favor is %d%%, and your coffer has %s coins.\";\n+\tprivate static final int SECONDS_IN_DAY = (int) Duration.of(1, ChronoUnit.DAYS).getSeconds();\n+\tprivate static final int MAX_WITHDRAWAL_BASE = 50_000;\n+\tprivate static final int MAX_WITHDRAWAL_ROYAL_TROUBLE = 75_000;\n+\tprivate static final float FAVOR_DECREMENT_BASE = 0.025f;\n+\tprivate static final float FAVOR_DECREMENT_ROYAL_TROUBLE = 0.01f;\n+\tprotected static final int MAX_FAVOR = 127;\n+\n+\tprivate boolean loggingIn, shouldSendNotification;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyMjU2OQ=="}, "originalCommit": {"oid": "c21639b7a5009dd5e5ac7a6d9df016664cccea69"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzczMDY5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTo1MDozNFrOF3DjAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTo1MDozNFrOF3DjAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3NDExNQ==", "bodyText": "you can just use null for this", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r393274115", "createdAt": "2020-03-16T19:50:34Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\r\n+ * Copyright (c) 2020, Brandt Hill <https://github.com/BrandtHill>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import java.time.Instant;\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+@ConfigGroup(\"kingdomOfMiscellania\")\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\tint MAX_COFFER = 7_500_000;\r\n+\tint MAX_FAVOR_PERCENT = 100;\r\n+\r\n+\t@ConfigItem(\r\n+\t\tposition = 1,\r\n+\t\tkeyName = \"sendNotifications\",\r\n+\t\tname = \"Send Notifications\",\r\n+\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn true;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\tmin = 0,\r\n+\t\tmax = MAX_COFFER\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\tposition = 2,\r\n+\t\tkeyName = \"cofferThreshold\",\r\n+\t\tname = \"Coffer Threshold\",\r\n+\t\tdescription = \"Send notifications if coffer is at or below this value\"\r\n+\t)\r\n+\tdefault int getCofferThreshold()\r\n+\t{\r\n+\t\treturn MAX_COFFER;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\tmin = 0,\r\n+\t\tmax = MAX_FAVOR_PERCENT\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\tposition = 3,\r\n+\t\tkeyName = \"favorThreshold\",\r\n+\t\tname = \"Favor Threshold\",\r\n+\t\tdescription = \"Send notifications if favor percentage is at or below this value\"\r\n+\t)\r\n+\tdefault int getFavorThreshold()\r\n+\t{\r\n+\t\treturn MAX_FAVOR_PERCENT;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Stored data\r\n+\t **/\r\n+\t@ConfigItem(\r\n+\t\tkeyName = \"lastChanged\",\r\n+\t\tname = \"\",\r\n+\t\tdescription = \"\",\r\n+\t\thidden = true\r\n+\t)\r\n+\tdefault Instant getLastChanged()\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e7cc6c29138e82ff2523c6f12493ab91a292ff0"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzczNTExOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTo1MTozMlrOF3Dlqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTo1MTozMlrOF3Dlqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3NDc5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprotected static final int MAX_FAVOR = 127;\n          \n          \n            \n            \tstatic final int MAX_FAVOR = 127;", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r393274794", "createdAt": "2020-03-16T19:51:32Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -51,6 +64,15 @@\n public class KingdomPlugin extends Plugin\n {\n \tprivate static final ImmutableSet<Integer> KINGDOM_REGION = ImmutableSet.of(10044, 10300);\n+\tprivate static final String CHAT_MESSAGE_FORMAT = \"Your Kingdom of Miscellania favor is %d%%, and your coffer has %s coins.\";\n+\tprivate static final int SECONDS_IN_DAY = (int) Duration.of(1, ChronoUnit.DAYS).getSeconds();\n+\tprivate static final int MAX_WITHDRAWAL_BASE = 50_000;\n+\tprivate static final int MAX_WITHDRAWAL_ROYAL_TROUBLE = 75_000;\n+\tprivate static final float FAVOR_DECREMENT_BASE = 0.025f;\n+\tprivate static final float FAVOR_DECREMENT_ROYAL_TROUBLE = 0.010f;\n+\tprotected static final int MAX_FAVOR = 127;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e7cc6c29138e82ff2523c6f12493ab91a292ff0"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzczNzgyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTo1MjozMVrOF3DnZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMToyOTo1MlrOF3LCCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3NTIzNg==", "bodyText": "this isn't always necessarily the kingdom vars changing here, is that fine?", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r393275236", "createdAt": "2020-03-16T19:52:31Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -72,11 +97,21 @@ protected void shutDown() throws Exception\n \t\tremoveKingdomInfobox();\n \t}\n \n+\t@Provides\n+\tKingdomConfig getConfig(ConfigManager configManager)\n+\t{\n+\t\treturn configManager.getConfig(KingdomConfig.class);\n+\t}\n+\n \t@Subscribe\n \tpublic void onVarbitChanged(VarbitChanged event)\n \t{\n-\t\tfavor = client.getVar(Varbits.KINGDOM_FAVOR);\n-\t\tcoffer = client.getVar(Varbits.KINGDOM_COFFER);\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && throneOfMiscellaniaCompleted() && isInKingdom())\n+\t\t{\n+\t\t\tconfig.setLastChanged(Instant.now());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e7cc6c29138e82ff2523c6f12493ab91a292ff0"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMwMzU3Nw==", "bodyText": "When the isInKingdom() guard returns true, the majority of VarbitChanged events changing are those of the kingdom values, and the few extraneous events don't impact the kingdom values.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r393303577", "createdAt": "2020-03-16T20:52:21Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -72,11 +97,21 @@ protected void shutDown() throws Exception\n \t\tremoveKingdomInfobox();\n \t}\n \n+\t@Provides\n+\tKingdomConfig getConfig(ConfigManager configManager)\n+\t{\n+\t\treturn configManager.getConfig(KingdomConfig.class);\n+\t}\n+\n \t@Subscribe\n \tpublic void onVarbitChanged(VarbitChanged event)\n \t{\n-\t\tfavor = client.getVar(Varbits.KINGDOM_FAVOR);\n-\t\tcoffer = client.getVar(Varbits.KINGDOM_COFFER);\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && throneOfMiscellaniaCompleted() && isInKingdom())\n+\t\t{\n+\t\t\tconfig.setLastChanged(Instant.now());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3NTIzNg=="}, "originalCommit": {"oid": "2e7cc6c29138e82ff2523c6f12493ab91a292ff0"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MjgyNA==", "bodyText": "Right, I just mean it would bump the time. That's fine?", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r393352824", "createdAt": "2020-03-16T22:51:07Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -72,11 +97,21 @@ protected void shutDown() throws Exception\n \t\tremoveKingdomInfobox();\n \t}\n \n+\t@Provides\n+\tKingdomConfig getConfig(ConfigManager configManager)\n+\t{\n+\t\treturn configManager.getConfig(KingdomConfig.class);\n+\t}\n+\n \t@Subscribe\n \tpublic void onVarbitChanged(VarbitChanged event)\n \t{\n-\t\tfavor = client.getVar(Varbits.KINGDOM_FAVOR);\n-\t\tcoffer = client.getVar(Varbits.KINGDOM_COFFER);\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && throneOfMiscellaniaCompleted() && isInKingdom())\n+\t\t{\n+\t\t\tconfig.setLastChanged(Instant.now());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3NTIzNg=="}, "originalCommit": {"oid": "2e7cc6c29138e82ff2523c6f12493ab91a292ff0"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5Njc0Nw==", "bodyText": "The value really is lastTimeKnown. For most cases it shouldn't matter, but I'll add a check to make the value make accurate to its purpose.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r393396747", "createdAt": "2020-03-17T01:29:52Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -72,11 +97,21 @@ protected void shutDown() throws Exception\n \t\tremoveKingdomInfobox();\n \t}\n \n+\t@Provides\n+\tKingdomConfig getConfig(ConfigManager configManager)\n+\t{\n+\t\treturn configManager.getConfig(KingdomConfig.class);\n+\t}\n+\n \t@Subscribe\n \tpublic void onVarbitChanged(VarbitChanged event)\n \t{\n-\t\tfavor = client.getVar(Varbits.KINGDOM_FAVOR);\n-\t\tcoffer = client.getVar(Varbits.KINGDOM_COFFER);\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && throneOfMiscellaniaCompleted() && isInKingdom())\n+\t\t{\n+\t\t\tconfig.setLastChanged(Instant.now());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3NTIzNg=="}, "originalCommit": {"oid": "2e7cc6c29138e82ff2523c6f12493ab91a292ff0"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzc0MDQyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTo1MzoyNVrOF3DpBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTo1MzoyNVrOF3DpBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3NTY1NQ==", "bodyText": "this should be debug level", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r393275655", "createdAt": "2020-03-16T19:53:25Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -87,26 +122,65 @@ public void onGameStateChanged(GameStateChanged event)\n \t\t{\n \t\t\tprocessInfobox();\n \t\t}\n+\t\tif (event.getGameState() == GameState.LOGGING_IN)\n+\t\t{\n+\t\t\tloggingIn = true;\n+\t\t}\n+\t}\n+\n+\t@Subscribe\n+\tpublic void onGameTick(GameTick gameTick)\n+\t{\n+\t\tif (loggingIn)\n+\t\t{\n+\t\t\tloggingIn = false;\n+\t\t\tcreateNotification();\n+\t\t}\n \t}\n \n \tprivate void processInfobox()\n \t{\n-\t\tif (client.getGameState() == GameState.LOGGED_IN && hasCompletedQuest() && isInKingdom())\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && throneOfMiscellaniaCompleted() && isInKingdom())\n \t\t{\n \t\t\taddKingdomInfobox();\n \t\t}\n \t\telse\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n \n+\tprivate void createNotification()\n+\t{\n+\t\tif (config.shouldSendNotifications() && throneOfMiscellaniaCompleted())\n+\t\t{\n+\t\t\tif (config.getLastChanged().getEpochSecond() > 0)\n+\t\t\t{\n+\t\t\t\tlong lastChangedEpoch = config.getLastChanged().getEpochSecond();\n+\t\t\t\tint lastCoffer = config.getCoffer();\n+\t\t\t\tint lastFavor = config.getFavor();\n+\t\t\t\tint estimatedCoffer = estimateCoffer(lastChangedEpoch, lastCoffer);\n+\t\t\t\tint estimatedFavor = estimateFavor(lastChangedEpoch, lastFavor);\n+\t\t\t\tif (estimatedCoffer <= config.getCofferThreshold() || getFavorPercent(estimatedFavor) <= config.getFavorThreshold())\n+\t\t\t\t{\n+\t\t\t\t\tsendChatMessage(String.format(\n+\t\t\t\t\t\tCHAT_MESSAGE_FORMAT,\n+\t\t\t\t\t\tgetFavorPercent(estimatedFavor),\n+\t\t\t\t\t\tQuantityFormatter.quantityToStackSize(estimatedCoffer)));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tlog.info(\"Kingdom Of Miscellania values not yet set. Visit Miscellania to automatically set values.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e7cc6c29138e82ff2523c6f12493ab91a292ff0"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTY5NzM0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo0OTo0OVrOIQIqZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo0OTo0OVrOIQIqZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5MDA1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn Quest.ROYAL_TROUBLE.getState(client).equals(QuestState.FINISHED);\n          \n          \n            \n            \t\treturn Quest.ROYAL_TROUBLE.getState(client) == QuestState.FINISHED;", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r553790055", "createdAt": "2021-01-08T07:49:49Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +197,60 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / SECONDS_IN_DAY, 0);\n+\t\tint maxDailyWithdrawal = royalTroubleCompleted() ? MAX_WITHDRAWAL_ROYAL_TROUBLE : MAX_WITHDRAWAL_BASE;\n+\t\tint maxDailyThreshold = maxDailyWithdrawal * 10;\n+\n+\t\tfor (int i = 0; i < daysSince; i++)\n+\t\t{\n+\t\t\tlastCoffer -= (lastCoffer > maxDailyThreshold) ? maxDailyWithdrawal : lastCoffer / 10;\n+\t\t}\n+\t\treturn lastCoffer;\n+\t}\n+\n+\tprivate int estimateFavor(long lastChangedEpoch, int lastFavor)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / SECONDS_IN_DAY, 0);\n+\t\tfloat dailyPercentage = royalTroubleCompleted() ? FAVOR_DECREMENT_ROYAL_TROUBLE : FAVOR_DECREMENT_BASE;\n+\n+\t\tlastFavor -= (int) (daysSince * dailyPercentage * MAX_FAVOR);\n+\t\treturn Math.max(lastFavor, 0);\n+\t}\n+\n \tprivate boolean isInKingdom()\n \t{\n \t\treturn client.getLocalPlayer() != null\n \t\t\t&& KINGDOM_REGION.contains(client.getLocalPlayer().getWorldLocation().getRegionID());\n \t}\n \n-\tprivate boolean hasCompletedQuest()\n+\tprivate boolean throneOfMiscellaniaCompleted()\n \t{\n \t\treturn client.getVar(VarPlayer.THRONE_OF_MISCELLANIA) > 0;\n \t}\n \n+\tprivate boolean royalTroubleCompleted()\n+\t{\n+\t\treturn Quest.ROYAL_TROUBLE.getState(client).equals(QuestState.FINISHED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0342f82de6f07fad430914ff3e77ac05dd3177"}, "originalPosition": 199}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTcwMTQ1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo1MTozMVrOIQIszA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo1MTozMVrOIQIszA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5MDY2OA==", "bodyText": "This is the default and can be removed.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tmin = 0,", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r553790668", "createdAt": "2021-01-08T07:51:31Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\r\n+ * Copyright (c) 2020, Brandt Hill <https://github.com/BrandtHill>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import java.time.Instant;\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+@ConfigGroup(\"kingdomOfMiscellania\")\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\tint MAX_COFFER = 7_500_000;\r\n+\tint MAX_FAVOR_PERCENT = 100;\r\n+\r\n+\t@ConfigItem(\r\n+\t\tposition = 1,\r\n+\t\tkeyName = \"sendNotifications\",\r\n+\t\tname = \"Send Notifications\",\r\n+\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn true;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\tmin = 0,\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0342f82de6f07fad430914ff3e77ac05dd3177"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTcwMjA0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo1MTo0MlrOIQItFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo1MTo0MlrOIQItFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5MDc0Mg==", "bodyText": "This is the default and can be removed.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tmin = 0,", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r553790742", "createdAt": "2021-01-08T07:51:42Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\r\n+ * Copyright (c) 2020, Brandt Hill <https://github.com/BrandtHill>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import java.time.Instant;\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+@ConfigGroup(\"kingdomOfMiscellania\")\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\tint MAX_COFFER = 7_500_000;\r\n+\tint MAX_FAVOR_PERCENT = 100;\r\n+\r\n+\t@ConfigItem(\r\n+\t\tposition = 1,\r\n+\t\tkeyName = \"sendNotifications\",\r\n+\t\tname = \"Send Notifications\",\r\n+\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn true;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\tmin = 0,\r\n+\t\tmax = MAX_COFFER\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\tposition = 2,\r\n+\t\tkeyName = \"cofferThreshold\",\r\n+\t\tname = \"Coffer Threshold\",\r\n+\t\tdescription = \"Send notifications if coffer is at or below this value\"\r\n+\t)\r\n+\tdefault int getCofferThreshold()\r\n+\t{\r\n+\t\treturn MAX_COFFER;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\tmin = 0,\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0342f82de6f07fad430914ff3e77ac05dd3177"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTcwOTM2OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo1NDo1MVrOIQIxZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo1NDo1MVrOIQIxZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5MTg0Ng==", "bodyText": "Only one of these if statements should ever be executed so there's no need to check both every time the subscriber runs.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (event.getGameState() == GameState.LOGGING_IN)\n          \n          \n            \n            \t\telse if (event.getGameState() == GameState.LOGGING_IN)", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r553791846", "createdAt": "2021-01-08T07:54:51Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -87,26 +123,65 @@ public void onGameStateChanged(GameStateChanged event)\n \t\t{\n \t\t\tprocessInfobox();\n \t\t}\n+\t\tif (event.getGameState() == GameState.LOGGING_IN)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0342f82de6f07fad430914ff3e77ac05dd3177"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTcxNDc2OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo1NzowM1rOIQI0oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNzo1NzowM1rOIQI0oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5MjY3Mw==", "bodyText": "This function would be much neater with a pair of guard clauses, eg.\nprivate void createNotification()\n{\n\tif (!config.shouldSendNotifications() || !throneOfMiscellaniaCompleted())\n\t{\n\t\treturn;\n\t}\n\n\tif (config.getLastChanged() == null)\n\t{\n\t\tlog.debug(\"Kingdom Of Miscellania values not yet set. Visit Miscellania to automatically set values.\");\n\t\treturn;\n\t}\n\n\t// rest of function code continues here\n}", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r553792673", "createdAt": "2021-01-08T07:57:03Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -87,26 +123,65 @@ public void onGameStateChanged(GameStateChanged event)\n \t\t{\n \t\t\tprocessInfobox();\n \t\t}\n+\t\tif (event.getGameState() == GameState.LOGGING_IN)\n+\t\t{\n+\t\t\tloggingIn = true;\n+\t\t}\n+\t}\n+\n+\t@Subscribe\n+\tpublic void onGameTick(GameTick gameTick)\n+\t{\n+\t\tif (loggingIn)\n+\t\t{\n+\t\t\tloggingIn = false;\n+\t\t\tcreateNotification();\n+\t\t}\n \t}\n \n \tprivate void processInfobox()\n \t{\n-\t\tif (client.getGameState() == GameState.LOGGED_IN && hasCompletedQuest() && isInKingdom())\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && throneOfMiscellaniaCompleted() && isInKingdom())\n \t\t{\n \t\t\taddKingdomInfobox();\n \t\t}\n \t\telse\n \t\t{\n \t\t\tremoveKingdomInfobox();\n \t\t}\n+\t}\n \n+\tprivate void createNotification()\n+\t{\n+\t\tif (config.shouldSendNotifications() && throneOfMiscellaniaCompleted())\n+\t\t{\n+\t\t\tif (config.getLastChanged() != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0342f82de6f07fad430914ff3e77ac05dd3177"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTcyMjE2OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowMDoxMVrOIQI5FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowMDoxMVrOIQI5FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5MzgxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate boolean throneOfMiscellaniaCompleted()\n          \n          \n            \n            \tprivate boolean isThroneOfMiscellaniaCompleted()", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r553793812", "createdAt": "2021-01-08T08:00:11Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +197,60 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / SECONDS_IN_DAY, 0);\n+\t\tint maxDailyWithdrawal = royalTroubleCompleted() ? MAX_WITHDRAWAL_ROYAL_TROUBLE : MAX_WITHDRAWAL_BASE;\n+\t\tint maxDailyThreshold = maxDailyWithdrawal * 10;\n+\n+\t\tfor (int i = 0; i < daysSince; i++)\n+\t\t{\n+\t\t\tlastCoffer -= (lastCoffer > maxDailyThreshold) ? maxDailyWithdrawal : lastCoffer / 10;\n+\t\t}\n+\t\treturn lastCoffer;\n+\t}\n+\n+\tprivate int estimateFavor(long lastChangedEpoch, int lastFavor)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / SECONDS_IN_DAY, 0);\n+\t\tfloat dailyPercentage = royalTroubleCompleted() ? FAVOR_DECREMENT_ROYAL_TROUBLE : FAVOR_DECREMENT_BASE;\n+\n+\t\tlastFavor -= (int) (daysSince * dailyPercentage * MAX_FAVOR);\n+\t\treturn Math.max(lastFavor, 0);\n+\t}\n+\n \tprivate boolean isInKingdom()\n \t{\n \t\treturn client.getLocalPlayer() != null\n \t\t\t&& KINGDOM_REGION.contains(client.getLocalPlayer().getWorldLocation().getRegionID());\n \t}\n \n-\tprivate boolean hasCompletedQuest()\n+\tprivate boolean throneOfMiscellaniaCompleted()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0342f82de6f07fad430914ff3e77ac05dd3177"}, "originalPosition": 192}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTcyMjcxOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowMDoyMlrOIQI5Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwODowMDoyMlrOIQI5Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc5Mzg5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate boolean royalTroubleCompleted()\n          \n          \n            \n            \tprivate boolean isRoyalTroubleCompleted()", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r553793890", "createdAt": "2021-01-08T08:00:22Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +197,60 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / SECONDS_IN_DAY, 0);\n+\t\tint maxDailyWithdrawal = royalTroubleCompleted() ? MAX_WITHDRAWAL_ROYAL_TROUBLE : MAX_WITHDRAWAL_BASE;\n+\t\tint maxDailyThreshold = maxDailyWithdrawal * 10;\n+\n+\t\tfor (int i = 0; i < daysSince; i++)\n+\t\t{\n+\t\t\tlastCoffer -= (lastCoffer > maxDailyThreshold) ? maxDailyWithdrawal : lastCoffer / 10;\n+\t\t}\n+\t\treturn lastCoffer;\n+\t}\n+\n+\tprivate int estimateFavor(long lastChangedEpoch, int lastFavor)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / SECONDS_IN_DAY, 0);\n+\t\tfloat dailyPercentage = royalTroubleCompleted() ? FAVOR_DECREMENT_ROYAL_TROUBLE : FAVOR_DECREMENT_BASE;\n+\n+\t\tlastFavor -= (int) (daysSince * dailyPercentage * MAX_FAVOR);\n+\t\treturn Math.max(lastFavor, 0);\n+\t}\n+\n \tprivate boolean isInKingdom()\n \t{\n \t\treturn client.getLocalPlayer() != null\n \t\t\t&& KINGDOM_REGION.contains(client.getLocalPlayer().getWorldLocation().getRegionID());\n \t}\n \n-\tprivate boolean hasCompletedQuest()\n+\tprivate boolean throneOfMiscellaniaCompleted()\n \t{\n \t\treturn client.getVar(VarPlayer.THRONE_OF_MISCELLANIA) > 0;\n \t}\n \n+\tprivate boolean royalTroubleCompleted()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0342f82de6f07fad430914ff3e77ac05dd3177"}, "originalPosition": 197}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNDMyMzIwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxODoxOToxM1rOIlqagQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxODoxOToxM1rOIlqagQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjM2MzEzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @ConfigGroup(\"kingdomOfMiscellania\")\n          \n          \n            \n            @ConfigGroup(\"kingdomofmiscellania\")\n          \n      \n    \n    \n  \n\nGenerally we keep these all lowercase.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r576363137", "createdAt": "2021-02-15T18:19:13Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\r\n+ * Copyright (c) 2020, Brandt Hill <https://github.com/BrandtHill>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import java.time.Instant;\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+@ConfigGroup(\"kingdomOfMiscellania\")\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83ffd3459be0b2004bb0b680ae5de25910323fd0"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNDMyNDU4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxODoxOTo0NVrOIlqbVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxODoxOTo0NVrOIlqbVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjM2MzM0OQ==", "bodyText": "I think the daily task plugin already spams people enough, I don't want to add more spam to the login by default", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r576363349", "createdAt": "2021-02-15T18:19:45Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\r\n+ * Copyright (c) 2020, Brandt Hill <https://github.com/BrandtHill>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import java.time.Instant;\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+@ConfigGroup(\"kingdomOfMiscellania\")\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\tint MAX_COFFER = 7_500_000;\r\n+\tint MAX_FAVOR_PERCENT = 100;\r\n+\r\n+\t@ConfigItem(\r\n+\t\tposition = 1,\r\n+\t\tkeyName = \"sendNotifications\",\r\n+\t\tname = \"Send Notifications\",\r\n+\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn true;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83ffd3459be0b2004bb0b680ae5de25910323fd0"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNDMyNzczOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxODoyMDo1MlrOIlqdJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxODoyMDo1MlrOIlqdJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjM2MzgxNQ==", "bodyText": "This and everything below here is per-profile, and so should use the set/get rsprofile functions in config manager, so that it works correctly when using more than one account/profile.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r576363815", "createdAt": "2021-02-15T18:20:52Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\r\n+ * Copyright (c) 2020, Brandt Hill <https://github.com/BrandtHill>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import java.time.Instant;\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+@ConfigGroup(\"kingdomOfMiscellania\")\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\tint MAX_COFFER = 7_500_000;\r\n+\tint MAX_FAVOR_PERCENT = 100;\r\n+\r\n+\t@ConfigItem(\r\n+\t\tposition = 1,\r\n+\t\tkeyName = \"sendNotifications\",\r\n+\t\tname = \"Send Notifications\",\r\n+\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn true;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\tmax = MAX_COFFER\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\tposition = 2,\r\n+\t\tkeyName = \"cofferThreshold\",\r\n+\t\tname = \"Coffer Threshold\",\r\n+\t\tdescription = \"Send notifications if coffer is at or below this value\"\r\n+\t)\r\n+\tdefault int getCofferThreshold()\r\n+\t{\r\n+\t\treturn MAX_COFFER;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\tmax = MAX_FAVOR_PERCENT\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\tposition = 3,\r\n+\t\tkeyName = \"favorThreshold\",\r\n+\t\tname = \"Favor Threshold\",\r\n+\t\tdescription = \"Send notifications if favor percentage is at or below this value\"\r\n+\t)\r\n+\tdefault int getFavorThreshold()\r\n+\t{\r\n+\t\treturn MAX_FAVOR_PERCENT;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Stored data\r\n+\t **/\r\n+\t@ConfigItem(\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83ffd3459be0b2004bb0b680ae5de25910323fd0"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNDMzMjUyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxODoyMjo1MVrOIlqgBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxODoyMjo1MVrOIlqgBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjM2NDU1MA==", "bodyText": "You can just use the java time apis for conversion between time units,\n(int) Duration.between(Instant.now(), lastChanged).toDays()", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r576364550", "createdAt": "2021-02-15T18:22:51Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +198,60 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = Math.max((int) (Instant.now().getEpochSecond() - lastChangedEpoch) / SECONDS_IN_DAY, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83ffd3459be0b2004bb0b680ae5de25910323fd0"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNTQwNTc3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMjo1ODo0OVrOIlz_xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMjo1ODo0OVrOIlz_xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjUyMDEzMg==", "bodyText": "This looks flipped around. The method signature is Duration.between(Temporal startInclusive, Temporal endInclusive), meaning Instant.now() should be the second arg, not the first. As-is, this will always return a value <= 0.\nPlease apply the changes to this method's handling of the duration calculation to estimateFavor() as well.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r576520132", "createdAt": "2021-02-16T02:58:49Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +203,90 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.now(), Instant.ofEpochSecond(lastChangedEpoch)).toDays();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bcf522e8a2ec79751178cf169727768df59979"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNTQwNjk3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMjo1OTozOVrOIl0Agg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMjo1OTozOVrOIl0Agg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjUyMDMyMg==", "bodyText": "Per my previous comment, daysSince should never be <= 0 after switching the arguments.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfor (int i = 0; i < Math.max(daysSince, 0); i++)\n          \n          \n            \n            \t\tfor (int i = 0; i < daysSince; i++)", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r576520322", "createdAt": "2021-02-16T02:59:39Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +203,90 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.now(), Instant.ofEpochSecond(lastChangedEpoch)).toDays();\n+\t\tint maxDailyWithdrawal = isRoyalTroubleCompleted() ? MAX_WITHDRAWAL_ROYAL_TROUBLE : MAX_WITHDRAWAL_BASE;\n+\t\tint maxDailyThreshold = maxDailyWithdrawal * 10;\n+\n+\t\tfor (int i = 0; i < Math.max(daysSince, 0); i++)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bcf522e8a2ec79751178cf169727768df59979"}, "originalPosition": 167}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNTQwODcwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMzowMDozOFrOIl0BdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMzowMDozOFrOIl0BdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjUyMDU2NA==", "bodyText": "These methods can all be private or package-private instead of protected as we will not subclass the plugin.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprotected Instant getLastChanged()\n          \n          \n            \n            \tprivate Instant getLastChanged()\n          \n      \n    \n    \n  \n\nSpecifically, it looks like each of these added methods can be private besides getCoffer() and getFavor() as they are referenced from the counter.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r576520564", "createdAt": "2021-02-16T03:00:38Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +203,90 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.now(), Instant.ofEpochSecond(lastChangedEpoch)).toDays();\n+\t\tint maxDailyWithdrawal = isRoyalTroubleCompleted() ? MAX_WITHDRAWAL_ROYAL_TROUBLE : MAX_WITHDRAWAL_BASE;\n+\t\tint maxDailyThreshold = maxDailyWithdrawal * 10;\n+\n+\t\tfor (int i = 0; i < Math.max(daysSince, 0); i++)\n+\t\t{\n+\t\t\tlastCoffer -= (lastCoffer > maxDailyThreshold) ? maxDailyWithdrawal : lastCoffer / 10;\n+\t\t}\n+\t\treturn lastCoffer;\n+\t}\n+\n+\tprivate int estimateFavor(long lastChangedEpoch, int lastFavor)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.now(), Instant.ofEpochSecond(lastChangedEpoch)).toDays();\n+\t\tfloat dailyPercentage = isRoyalTroubleCompleted() ? FAVOR_DECREMENT_ROYAL_TROUBLE : FAVOR_DECREMENT_BASE;\n+\n+\t\tlastFavor -= (int) (Math.max(daysSince, 0) * dailyPercentage * MAX_FAVOR);\n+\t\treturn Math.max(lastFavor, 0);\n+\t}\n+\n \tprivate boolean isInKingdom()\n \t{\n \t\treturn client.getLocalPlayer() != null\n \t\t\t&& KINGDOM_REGION.contains(client.getLocalPlayer().getWorldLocation().getRegionID());\n \t}\n \n-\tprivate boolean hasCompletedQuest()\n+\tprivate boolean isThroneOfMiscellaniaCompleted()\n \t{\n \t\treturn client.getVar(VarPlayer.THRONE_OF_MISCELLANIA) > 0;\n \t}\n \n+\tprivate boolean isRoyalTroubleCompleted()\n+\t{\n+\t\treturn Quest.ROYAL_TROUBLE.getState(client) == QuestState.FINISHED;\n+\t}\n+\n \tstatic int getFavorPercent(int favor)\n \t{\n-\t\treturn (favor * 100) / 127;\n+\t\treturn (favor * 100) / MAX_FAVOR;\n+\t}\n+\n+\tprivate void sendChatMessage(String chatMessage)\n+\t{\n+\t\tfinal String message = new ChatMessageBuilder()\n+\t\t\t.append(ChatColorType.HIGHLIGHT)\n+\t\t\t.append(chatMessage)\n+\t\t\t.build();\n+\n+\t\tchatMessageManager.queue(\n+\t\t\tQueuedMessage.builder()\n+\t\t\t\t.type(ChatMessageType.CONSOLE)\n+\t\t\t\t.runeLiteFormattedMessage(message)\n+\t\t\t\t.build());\n \t}\n \n+\tprotected Instant getLastChanged()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bcf522e8a2ec79751178cf169727768df59979"}, "originalPosition": 220}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNTQxMjg3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMzowMzozNlrOIl0ECA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMzowMzozNlrOIl0ECA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjUyMTIyNA==", "bodyText": "As mentioned above, package-private.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprotected int getCoffer()\n          \n          \n            \n            \tint getCoffer()", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r576521224", "createdAt": "2021-02-16T03:03:36Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +203,90 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.now(), Instant.ofEpochSecond(lastChangedEpoch)).toDays();\n+\t\tint maxDailyWithdrawal = isRoyalTroubleCompleted() ? MAX_WITHDRAWAL_ROYAL_TROUBLE : MAX_WITHDRAWAL_BASE;\n+\t\tint maxDailyThreshold = maxDailyWithdrawal * 10;\n+\n+\t\tfor (int i = 0; i < Math.max(daysSince, 0); i++)\n+\t\t{\n+\t\t\tlastCoffer -= (lastCoffer > maxDailyThreshold) ? maxDailyWithdrawal : lastCoffer / 10;\n+\t\t}\n+\t\treturn lastCoffer;\n+\t}\n+\n+\tprivate int estimateFavor(long lastChangedEpoch, int lastFavor)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.now(), Instant.ofEpochSecond(lastChangedEpoch)).toDays();\n+\t\tfloat dailyPercentage = isRoyalTroubleCompleted() ? FAVOR_DECREMENT_ROYAL_TROUBLE : FAVOR_DECREMENT_BASE;\n+\n+\t\tlastFavor -= (int) (Math.max(daysSince, 0) * dailyPercentage * MAX_FAVOR);\n+\t\treturn Math.max(lastFavor, 0);\n+\t}\n+\n \tprivate boolean isInKingdom()\n \t{\n \t\treturn client.getLocalPlayer() != null\n \t\t\t&& KINGDOM_REGION.contains(client.getLocalPlayer().getWorldLocation().getRegionID());\n \t}\n \n-\tprivate boolean hasCompletedQuest()\n+\tprivate boolean isThroneOfMiscellaniaCompleted()\n \t{\n \t\treturn client.getVar(VarPlayer.THRONE_OF_MISCELLANIA) > 0;\n \t}\n \n+\tprivate boolean isRoyalTroubleCompleted()\n+\t{\n+\t\treturn Quest.ROYAL_TROUBLE.getState(client) == QuestState.FINISHED;\n+\t}\n+\n \tstatic int getFavorPercent(int favor)\n \t{\n-\t\treturn (favor * 100) / 127;\n+\t\treturn (favor * 100) / MAX_FAVOR;\n+\t}\n+\n+\tprivate void sendChatMessage(String chatMessage)\n+\t{\n+\t\tfinal String message = new ChatMessageBuilder()\n+\t\t\t.append(ChatColorType.HIGHLIGHT)\n+\t\t\t.append(chatMessage)\n+\t\t\t.build();\n+\n+\t\tchatMessageManager.queue(\n+\t\t\tQueuedMessage.builder()\n+\t\t\t\t.type(ChatMessageType.CONSOLE)\n+\t\t\t\t.runeLiteFormattedMessage(message)\n+\t\t\t\t.build());\n \t}\n \n+\tprotected Instant getLastChanged()\n+\t{\n+\t\treturn configManager.getRSProfileConfiguration(CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED_KEY, Instant.class);\n+\t}\n+\n+\tprotected void setLastChanged(Instant lastChanged)\n+\t{\n+\t\tconfigManager.setConfiguration(CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED_KEY, lastChanged);\n+\t}\n+\n+\tprotected int getCoffer()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bcf522e8a2ec79751178cf169727768df59979"}, "originalPosition": 230}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzNTQxNDIyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMzowNDozMlrOIl0E0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQwMzowNDozMlrOIl0E0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjUyMTQyNQ==", "bodyText": "Define this as a constant in the config interface, and reference it both in the @ConfigGroup definition and here in the plugin.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r576521425", "createdAt": "2021-02-16T03:04:32Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -51,6 +63,18 @@\n public class KingdomPlugin extends Plugin\n {\n \tprivate static final ImmutableSet<Integer> KINGDOM_REGION = ImmutableSet.of(10044, 10300);\n+\tprivate static final String CONFIG_GROUP_NAME = \"kingdomofmiscellania\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bcf522e8a2ec79751178cf169727768df59979"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY1NjMxODAwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMFQyMjowOToxMlrOIo3CSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMFQyMzowOTowM1rOIo3YtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTcxNTY1OA==", "bodyText": "It strikes me that these should be nullable as we would not want to send notifications to players for whom we don't know their coffer/favor values. They would obviously be set once they return to Miscellania, but if a player were to turn these notifications on prior to going back to the island, they could get notifications for \"0\" coffer/favor values being returned here rather than null which would indicate they're not yet known.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r579715658", "createdAt": "2021-02-20T22:09:12Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +202,92 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.ofEpochSecond(lastChangedEpoch), Instant.now()).toDays();\n+\t\tint maxDailyWithdrawal = isRoyalTroubleCompleted() ? MAX_WITHDRAWAL_ROYAL_TROUBLE : MAX_WITHDRAWAL_BASE;\n+\t\tint maxDailyThreshold = maxDailyWithdrawal * 10;\n+\n+\t\tfor (int i = 0; i < daysSince; i++)\n+\t\t{\n+\t\t\tlastCoffer -= (lastCoffer > maxDailyThreshold) ? maxDailyWithdrawal : lastCoffer / 10;\n+\t\t}\n+\t\treturn lastCoffer;\n+\t}\n+\n+\tprivate int estimateFavor(long lastChangedEpoch, int lastFavor)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.ofEpochSecond(lastChangedEpoch), Instant.now()).toDays();\n+\t\tfloat dailyPercentage = isRoyalTroubleCompleted() ? FAVOR_DECREMENT_ROYAL_TROUBLE : FAVOR_DECREMENT_BASE;\n+\n+\t\tlastFavor -= (int) (daysSince * dailyPercentage * MAX_FAVOR);\n+\t\treturn Math.max(lastFavor, 0);\n+\t}\n+\n \tprivate boolean isInKingdom()\n \t{\n \t\treturn client.getLocalPlayer() != null\n \t\t\t&& KINGDOM_REGION.contains(client.getLocalPlayer().getWorldLocation().getRegionID());\n \t}\n \n-\tprivate boolean hasCompletedQuest()\n+\tprivate boolean isThroneOfMiscellaniaCompleted()\n \t{\n \t\treturn client.getVar(VarPlayer.THRONE_OF_MISCELLANIA) > 0;\n \t}\n \n+\tprivate boolean isRoyalTroubleCompleted()\n+\t{\n+\t\treturn Quest.ROYAL_TROUBLE.getState(client) == QuestState.FINISHED;\n+\t}\n+\n \tstatic int getFavorPercent(int favor)\n \t{\n-\t\treturn (favor * 100) / 127;\n+\t\treturn (favor * 100) / MAX_FAVOR;\n+\t}\n+\n+\tprivate void sendChatMessage(String chatMessage)\n+\t{\n+\t\tfinal String message = new ChatMessageBuilder()\n+\t\t\t.append(ChatColorType.HIGHLIGHT)\n+\t\t\t.append(chatMessage)\n+\t\t\t.build();\n+\n+\t\tchatMessageManager.queue(\n+\t\t\tQueuedMessage.builder()\n+\t\t\t\t.type(ChatMessageType.CONSOLE)\n+\t\t\t\t.runeLiteFormattedMessage(message)\n+\t\t\t\t.build());\n \t}\n \n+\tprivate Instant getLastChanged()\n+\t{\n+\t\treturn configManager.getRSProfileConfiguration(KingdomConfig.CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED_KEY, Instant.class);\n+\t}\n+\n+\tprivate void setLastChanged(Instant lastChanged)\n+\t{\n+\t\tconfigManager.setRSProfileConfiguration(KingdomConfig.CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED_KEY, lastChanged);\n+\t}\n+\n+\tint getCoffer()\n+\t{\n+\t\tInteger coffer = configManager.getRSProfileConfiguration(KingdomConfig.CONFIG_GROUP_NAME, CONFIG_COFFER_KEY, int.class);\n+\t\treturn coffer == null ? 0 : coffer;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0acd4a6db5f89238645cd9e8775a5920d340c1b5"}, "originalPosition": 233}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTcyMTM5Ng==", "bodyText": "This is accounted for, because getLastChanged() will return null until you\u2019ve visited Miscellania, and no message will be sent.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r579721396", "createdAt": "2021-02-20T23:09:03Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +202,92 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.ofEpochSecond(lastChangedEpoch), Instant.now()).toDays();\n+\t\tint maxDailyWithdrawal = isRoyalTroubleCompleted() ? MAX_WITHDRAWAL_ROYAL_TROUBLE : MAX_WITHDRAWAL_BASE;\n+\t\tint maxDailyThreshold = maxDailyWithdrawal * 10;\n+\n+\t\tfor (int i = 0; i < daysSince; i++)\n+\t\t{\n+\t\t\tlastCoffer -= (lastCoffer > maxDailyThreshold) ? maxDailyWithdrawal : lastCoffer / 10;\n+\t\t}\n+\t\treturn lastCoffer;\n+\t}\n+\n+\tprivate int estimateFavor(long lastChangedEpoch, int lastFavor)\n+\t{\n+\t\tint daysSince = (int) Duration.between(Instant.ofEpochSecond(lastChangedEpoch), Instant.now()).toDays();\n+\t\tfloat dailyPercentage = isRoyalTroubleCompleted() ? FAVOR_DECREMENT_ROYAL_TROUBLE : FAVOR_DECREMENT_BASE;\n+\n+\t\tlastFavor -= (int) (daysSince * dailyPercentage * MAX_FAVOR);\n+\t\treturn Math.max(lastFavor, 0);\n+\t}\n+\n \tprivate boolean isInKingdom()\n \t{\n \t\treturn client.getLocalPlayer() != null\n \t\t\t&& KINGDOM_REGION.contains(client.getLocalPlayer().getWorldLocation().getRegionID());\n \t}\n \n-\tprivate boolean hasCompletedQuest()\n+\tprivate boolean isThroneOfMiscellaniaCompleted()\n \t{\n \t\treturn client.getVar(VarPlayer.THRONE_OF_MISCELLANIA) > 0;\n \t}\n \n+\tprivate boolean isRoyalTroubleCompleted()\n+\t{\n+\t\treturn Quest.ROYAL_TROUBLE.getState(client) == QuestState.FINISHED;\n+\t}\n+\n \tstatic int getFavorPercent(int favor)\n \t{\n-\t\treturn (favor * 100) / 127;\n+\t\treturn (favor * 100) / MAX_FAVOR;\n+\t}\n+\n+\tprivate void sendChatMessage(String chatMessage)\n+\t{\n+\t\tfinal String message = new ChatMessageBuilder()\n+\t\t\t.append(ChatColorType.HIGHLIGHT)\n+\t\t\t.append(chatMessage)\n+\t\t\t.build();\n+\n+\t\tchatMessageManager.queue(\n+\t\t\tQueuedMessage.builder()\n+\t\t\t\t.type(ChatMessageType.CONSOLE)\n+\t\t\t\t.runeLiteFormattedMessage(message)\n+\t\t\t\t.build());\n \t}\n \n+\tprivate Instant getLastChanged()\n+\t{\n+\t\treturn configManager.getRSProfileConfiguration(KingdomConfig.CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED_KEY, Instant.class);\n+\t}\n+\n+\tprivate void setLastChanged(Instant lastChanged)\n+\t{\n+\t\tconfigManager.setRSProfileConfiguration(KingdomConfig.CONFIG_GROUP_NAME, CONFIG_LAST_CHANGED_KEY, lastChanged);\n+\t}\n+\n+\tint getCoffer()\n+\t{\n+\t\tInteger coffer = configManager.getRSProfileConfiguration(KingdomConfig.CONFIG_GROUP_NAME, CONFIG_COFFER_KEY, int.class);\n+\t\treturn coffer == null ? 0 : coffer;\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTcxNTY1OA=="}, "originalCommit": {"oid": "0acd4a6db5f89238645cd9e8775a5920d340c1b5"}, "originalPosition": 233}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY2MzI3Mjc2OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yM1QwMjo1MTozNFrOIp1XLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yM1QwNjoxMzo1MlrOIp4nMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDczNjgxMw==", "bodyText": "After having tested this on a dev build for a few days, I think this would work better if it tested for the coffer/favor being strictly less than the config. (instead of less than or equal, that is) That way, players can set the values to 0 to disable a specific check, or leave them at their maximum values to get notifications whenever they're not maximum.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r580736813", "createdAt": "2021-02-23T02:51:34Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\r\n+ * Copyright (c) 2020, Brandt Hill <https://github.com/BrandtHill>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+@ConfigGroup(KingdomConfig.CONFIG_GROUP_NAME)\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\tString CONFIG_GROUP_NAME = \"kingdomofmiscellania\";\r\n+\tint MAX_COFFER = 7_500_000;\r\n+\tint MAX_FAVOR_PERCENT = 100;\r\n+\r\n+\t@ConfigItem(\r\n+\t\tposition = 1,\r\n+\t\tkeyName = \"sendNotifications\",\r\n+\t\tname = \"Send Notifications\",\r\n+\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn false;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\tmax = MAX_COFFER\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\tposition = 2,\r\n+\t\tkeyName = \"cofferThreshold\",\r\n+\t\tname = \"Coffer Threshold\",\r\n+\t\tdescription = \"Send notifications if coffer is at or below this value\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0acd4a6db5f89238645cd9e8775a5920d340c1b5"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDc5MDA2Nw==", "bodyText": "Good thinking. I've made that change.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r580790067", "createdAt": "2021-02-23T06:13:52Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomConfig.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\r\n+ * Copyright (c) 2020, Brandt Hill <https://github.com/BrandtHill>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+package net.runelite.client.plugins.kingdomofmiscellania;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+import net.runelite.client.config.Range;\r\n+\r\n+@ConfigGroup(KingdomConfig.CONFIG_GROUP_NAME)\r\n+public interface KingdomConfig extends Config\r\n+{\r\n+\tString CONFIG_GROUP_NAME = \"kingdomofmiscellania\";\r\n+\tint MAX_COFFER = 7_500_000;\r\n+\tint MAX_FAVOR_PERCENT = 100;\r\n+\r\n+\t@ConfigItem(\r\n+\t\tposition = 1,\r\n+\t\tkeyName = \"sendNotifications\",\r\n+\t\tname = \"Send Notifications\",\r\n+\t\tdescription = \"Send chat notifications upon login showing current estimated coffer and favor\"\r\n+\t)\r\n+\tdefault boolean shouldSendNotifications()\r\n+\t{\r\n+\t\treturn false;\r\n+\t}\r\n+\r\n+\t@Range(\r\n+\t\tmax = MAX_COFFER\r\n+\t)\r\n+\t@ConfigItem(\r\n+\t\tposition = 2,\r\n+\t\tkeyName = \"cofferThreshold\",\r\n+\t\tname = \"Coffer Threshold\",\r\n+\t\tdescription = \"Send notifications if coffer is at or below this value\"\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDczNjgxMw=="}, "originalCommit": {"oid": "0acd4a6db5f89238645cd9e8775a5920d340c1b5"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4MDI2ODQyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQwNTo1NzoyN1rOIsX-pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQwNTo1NzoyN1rOIsX-pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzQwMTEyNQ==", "bodyText": "One annoying thing I found about this code is that this will not automatically update the values when visiting Etceteria until some varbit change happens after you're there. For instance, if you travel to Etceteria via spirit tree then leave right away, these conditions will never be met because isInKingdom() is false during the varbit changes while you're changing game states.\nBecause of the isKingdom() false negative, I propose this subscriber be changed somewhat to handle this case.\n\nIf inKingdom() is false and either coffer or favor values are 0, don't set any new values (this will be the case in some varbit changed events as the indexes are transmitted)\nIf inKingdom() is false, coffer and favor are both non-zero, and either of their values are different from the stored values, set lastChanged and the values (the server seems to send the last known values from visiting misc/etc--if we didn't get a varbitchanged on the island itself, we should update the values from varbit changes elsewhere in the world)\nIf inKingdom() is true and either value is different from the stored values, set lastChanged and the values\n\nie.\npublic void onVarbitChanged(VarbitChanged event)\n{\n\tfinal int coffer = client.getVar(Varbits.KINGDOM_COFFER);\n\tfinal int favor = client.getVar(Varbits.KINGDOM_FAVOR);\n\n\tif (client.getGameState() == GameState.LOGGED_IN\n\t\t&& isThroneOfMiscellaniaCompleted()\n\t\t&& (isInKingdom() || coffer != 0 && favor != 0)\n\t\t&& (coffer != getCoffer() && favor != getFavor()))\n\t{\n\t\tsetLastChanged(Instant.now());\n\t\tsetCoffer(coffer);\n\t\tsetFavor(favor);\n\t}\n\n\tprocessInfobox();\n}", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r583401125", "createdAt": "2021-02-26T05:57:27Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -72,11 +101,22 @@ protected void shutDown() throws Exception\n \t\tremoveKingdomInfobox();\n \t}\n \n+\t@Provides\n+\tKingdomConfig getConfig(ConfigManager configManager)\n+\t{\n+\t\treturn configManager.getConfig(KingdomConfig.class);\n+\t}\n+\n \t@Subscribe\n \tpublic void onVarbitChanged(VarbitChanged event)\n \t{\n-\t\tfavor = client.getVar(Varbits.KINGDOM_FAVOR);\n-\t\tcoffer = client.getVar(Varbits.KINGDOM_COFFER);\n+\t\tif (client.getGameState() == GameState.LOGGED_IN && isThroneOfMiscellaniaCompleted() && isInKingdom()\n+\t\t\t&& (getCoffer() != client.getVar(Varbits.KINGDOM_COFFER) || getFavor() != client.getVar(Varbits.KINGDOM_FAVOR)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ceca35c25b2fa2615e5b8700c3ca5fabac4232"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4NTMzNjY3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxNzoyMjowOFrOItGbXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODoyODo1OFrOItHB1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE2MjE0MA==", "bodyText": "why isn't this %d coins?", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r584162140", "createdAt": "2021-02-27T17:22:08Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -51,6 +63,17 @@\n public class KingdomPlugin extends Plugin\n {\n \tprivate static final ImmutableSet<Integer> KINGDOM_REGION = ImmutableSet.of(10044, 10300);\n+\tprivate static final String CONFIG_LAST_CHANGED_KEY = \"lastChanged\";\n+\tprivate static final String CONFIG_COFFER_KEY = \"coffer\";\n+\tprivate static final String CONFIG_FAVOR_KEY = \"favor\";\n+\tprivate static final String CHAT_MESSAGE_FORMAT = \"Your Kingdom of Miscellania favor is %d%%, and your coffer has %s coins.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc3c5af064d3ffe0d5d2f89d70a1a3a460054218"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE3MTk5MQ==", "bodyText": "It prints as a string like 1.16M, not an int like1160395", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r584171991", "createdAt": "2021-02-27T18:28:58Z", "author": {"login": "BrandtHill"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -51,6 +63,17 @@\n public class KingdomPlugin extends Plugin\n {\n \tprivate static final ImmutableSet<Integer> KINGDOM_REGION = ImmutableSet.of(10044, 10300);\n+\tprivate static final String CONFIG_LAST_CHANGED_KEY = \"lastChanged\";\n+\tprivate static final String CONFIG_COFFER_KEY = \"coffer\";\n+\tprivate static final String CONFIG_FAVOR_KEY = \"favor\";\n+\tprivate static final String CHAT_MESSAGE_FORMAT = \"Your Kingdom of Miscellania favor is %d%%, and your coffer has %s coins.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE2MjE0MA=="}, "originalCommit": {"oid": "fc3c5af064d3ffe0d5d2f89d70a1a3a460054218"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4NTM0NTg1OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxNzoyOTowM1rOItGgPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxNzoyOTowM1rOItGgPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE2MzM4OA==", "bodyText": "You already have the last changed as an Instant so there's no reason to convert to epoch second and then back like you are doing here and in estimateFavor.", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r584163388", "createdAt": "2021-02-27T17:29:03Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -122,20 +207,92 @@ private void removeKingdomInfobox()\n \t\t}\n \t}\n \n+\tprivate int estimateCoffer(long lastChangedEpoch, int lastCoffer)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc3c5af064d3ffe0d5d2f89d70a1a3a460054218"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4NTYxODE3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QyMjoxMTozN1rOItIlQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QyMjo1Mjo0MVrOItI0dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE5NzQ0Mg==", "bodyText": "This should be || right?", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r584197442", "createdAt": "2021-02-27T22:11:37Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -72,11 +101,27 @@ protected void shutDown() throws Exception\n \t\tremoveKingdomInfobox();\n \t}\n \n+\t@Provides\n+\tKingdomConfig getConfig(ConfigManager configManager)\n+\t{\n+\t\treturn configManager.getConfig(KingdomConfig.class);\n+\t}\n+\n \t@Subscribe\n \tpublic void onVarbitChanged(VarbitChanged event)\n \t{\n-\t\tfavor = client.getVar(Varbits.KINGDOM_FAVOR);\n-\t\tcoffer = client.getVar(Varbits.KINGDOM_COFFER);\n+\t\tfinal int coffer = client.getVar(Varbits.KINGDOM_COFFER);\n+\t\tfinal int favor = client.getVar(Varbits.KINGDOM_FAVOR);\n+\n+\t\tif (client.getGameState() == GameState.LOGGED_IN\n+\t\t\t&& isThroneOfMiscellaniaCompleted()\n+\t\t\t&& (isInKingdom() || coffer > 0 && favor > 0)\n+\t\t\t&& (getCoffer() != coffer && getFavor() != favor))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55da30e92be996b40a6962d59a96f47e1d230f8a"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDIwMTMzNA==", "bodyText": "I think so, I've changed it", "url": "https://github.com/runelite/runelite/pull/10933#discussion_r584201334", "createdAt": "2021-02-27T22:52:41Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/kingdomofmiscellania/KingdomPlugin.java", "diffHunk": "@@ -72,11 +101,27 @@ protected void shutDown() throws Exception\n \t\tremoveKingdomInfobox();\n \t}\n \n+\t@Provides\n+\tKingdomConfig getConfig(ConfigManager configManager)\n+\t{\n+\t\treturn configManager.getConfig(KingdomConfig.class);\n+\t}\n+\n \t@Subscribe\n \tpublic void onVarbitChanged(VarbitChanged event)\n \t{\n-\t\tfavor = client.getVar(Varbits.KINGDOM_FAVOR);\n-\t\tcoffer = client.getVar(Varbits.KINGDOM_COFFER);\n+\t\tfinal int coffer = client.getVar(Varbits.KINGDOM_COFFER);\n+\t\tfinal int favor = client.getVar(Varbits.KINGDOM_FAVOR);\n+\n+\t\tif (client.getGameState() == GameState.LOGGED_IN\n+\t\t\t&& isThroneOfMiscellaniaCompleted()\n+\t\t\t&& (isInKingdom() || coffer > 0 && favor > 0)\n+\t\t\t&& (getCoffer() != coffer && getFavor() != favor))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE5NzQ0Mg=="}, "originalCommit": {"oid": "55da30e92be996b40a6962d59a96f47e1d230f8a"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3687, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}