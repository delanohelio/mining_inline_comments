{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNjI2MDky", "number": 10895, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoxMjoxOVrODl3-mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoxMjoxOVrODl3-mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDQxMDUxOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/skillcalculator/SkillCalculator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoxMjoxOVrOFzAnQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoxMjoxOVrOFzAnQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzMTc0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (currentSkill == null || !currentSkill.equals(calculatorType.getSkill()))\n          \n          \n            \n            \t\tif (currentSkill != calculatorType.getSkill())", "url": "https://github.com/runelite/runelite/pull/10895#discussion_r389031747", "createdAt": "2020-03-06T17:12:19Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/skillcalculator/SkillCalculator.java", "diffHunk": "@@ -123,48 +124,54 @@\n \n \tvoid openCalculator(CalculatorType calculatorType)\n \t{\n-\t\t// Load the skill data.\n-\t\tskillData = cacheSkillData.getSkillData(calculatorType.getDataFile());\n-\n-\t\t// Reset the XP factor, removing bonuses.\n-\t\txpFactor = 1.0f;\n-\n \t\t// Update internal skill/XP values.\n \t\tcurrentXP = client.getSkillExperience(calculatorType.getSkill());\n \t\tcurrentLevel = Experience.getLevelForXp(currentXP);\n-\t\tVarPlayer endGoalVarp = endGoalVarpForSkill(calculatorType.getSkill());\n-\t\tint endGoal = client.getVar(endGoalVarp);\n-\t\tif (endGoal != -1)\n-\t\t{\n-\t\t\ttargetLevel = Experience.getLevelForXp(endGoal);\n-\t\t\ttargetXP = endGoal;\n-\t\t}\n-\t\telse\n+\n+\t\tif (currentSkill == null || !currentSkill.equals(calculatorType.getSkill()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96d650e72b68739e68affc558e6424abe1160bd7"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3854, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}