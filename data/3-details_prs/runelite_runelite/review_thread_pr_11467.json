{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjc5Mzk1", "number": 11467, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNDoxNzo1OFrOD5PyYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOToxMzozOFrOD-t5oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzU0MDgwOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNDoxNzo1OFrOGQZ6iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNDoxNzo1OFrOGQZ6iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg1NDk4NA==", "bodyText": "The project's code conventions are to place curly braces on newlines.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tdefault MetronomeVolume tickVolume() { return MetronomeVolume.MEDIUM_HIGH; }\n          \n          \n            \n            \tdefault MetronomeVolume tickVolume()\n          \n          \n            \n            \t{\n          \n          \n            \n            \t\treturn MetronomeVolume.MEDIUM_HIGH;\n          \n          \n            \n            \t}", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r419854984", "createdAt": "2020-05-05T04:17:58Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -36,21 +37,37 @@\n \t\tkeyName = \"tickCount\",\n \t\tname = \"Tick count\",\n \t\tdescription = \"Configures the tick on which a sound will be played\",\n-\t\tposition = 2\n+\t\tposition = 0\n \t)\n \tdefault int tickCount()\n \t{\n \t\treturn 1;\n \t}\n \n+\t@ConfigItem(\n+\t\tkeyName = \"tickVolume\",\n+\t\tname = \"Tick Volume\",\n+\t\tdescription = \"Configures the volume of the tick sound\",\n+\t\tposition = 1\n+\t)\n+\tdefault MetronomeVolume tickVolume() { return MetronomeVolume.MEDIUM_HIGH; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19ba5dba283454bcd0a5467ec9c528e56add456c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTE1NjkyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMjo1NDowNVrOGS_-JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMDo1NzowNlrOGTycNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3NTY1Mw==", "bodyText": "Positions can be removed.", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r422575653", "createdAt": "2020-05-10T02:54:05Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,49 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;\n+\n \t@ConfigItem(\n \t\tkeyName = \"tickCount\",\n \t\tname = \"Tick count\",\n-\t\tdescription = \"Configures the tick on which a sound will be played\",\n-\t\tposition = 2\n+\t\tdescription = \"Configures the tick on which a sound will be played.\",\n+\t\tposition = 0\n \t)\n \tdefault int tickCount()\n \t{\n \t\treturn 1;\n \t}\n \n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n+\t@ConfigItem(\n+\t\tkeyName = \"tickVolume\",\n+\t\tname = \"Tick volume\",\n+\t\tdescription = \"Configures the volume of the tick sound. A value of 0 will disable tick sounds.\",\n+\t\tposition = 1\n+\t)\n+\tdefault int tickVolume()\n+\t{\n+\t\treturn 96;\n+\t}\n+\n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n \t@ConfigItem(\n-\t\tkeyName = \"enableTock\",\n-\t\tname = \"Enable tock (alternating) sound\",\n-\t\tdescription = \"Toggles whether to play two alternating sounds\",\n-\t\tposition = 3\n+\t\tkeyName = \"tockVolume\",\n+\t\tname = \"Tock volume\",\n+\t\tdescription = \"Configures the volume of the tock sound. A value of 0 will disable tock sounds.\",\n+\t\tposition = 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab53cf1022b4111c8c3aa86184d18eeb83fb98dc"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQwMjU0OA==", "bodyText": "Completed.", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r423402548", "createdAt": "2020-05-12T00:57:06Z", "author": {"login": "machkr"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,49 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;\n+\n \t@ConfigItem(\n \t\tkeyName = \"tickCount\",\n \t\tname = \"Tick count\",\n-\t\tdescription = \"Configures the tick on which a sound will be played\",\n-\t\tposition = 2\n+\t\tdescription = \"Configures the tick on which a sound will be played.\",\n+\t\tposition = 0\n \t)\n \tdefault int tickCount()\n \t{\n \t\treturn 1;\n \t}\n \n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n+\t@ConfigItem(\n+\t\tkeyName = \"tickVolume\",\n+\t\tname = \"Tick volume\",\n+\t\tdescription = \"Configures the volume of the tick sound. A value of 0 will disable tick sounds.\",\n+\t\tposition = 1\n+\t)\n+\tdefault int tickVolume()\n+\t{\n+\t\treturn 96;\n+\t}\n+\n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n \t@ConfigItem(\n-\t\tkeyName = \"enableTock\",\n-\t\tname = \"Enable tock (alternating) sound\",\n-\t\tdescription = \"Toggles whether to play two alternating sounds\",\n-\t\tposition = 3\n+\t\tkeyName = \"tockVolume\",\n+\t\tname = \"Tock volume\",\n+\t\tdescription = \"Configures the volume of the tock sound. A value of 0 will disable tock sounds.\",\n+\t\tposition = 2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3NTY1Mw=="}, "originalCommit": {"oid": "ab53cf1022b4111c8c3aa86184d18eeb83fb98dc"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTE1ODU4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomeVolume.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMjo1Njo0NVrOGS_-4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMDo1NzoyMlrOGTycfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3NTg0MQ==", "bodyText": "This is unused?", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r422575841", "createdAt": "2020-05-10T02:56:45Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomeVolume.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2020, machkr <https://github.com/machkr>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.metronome;\n+\n+import net.runelite.api.SoundEffectVolume;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+\n+@Getter\n+@RequiredArgsConstructor\n+public enum MetronomeVolume", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab53cf1022b4111c8c3aa86184d18eeb83fb98dc"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQwMjYyMQ==", "bodyText": "Removed.", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r423402621", "createdAt": "2020-05-12T00:57:22Z", "author": {"login": "machkr"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomeVolume.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2020, machkr <https://github.com/machkr>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.metronome;\n+\n+import net.runelite.api.SoundEffectVolume;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+\n+@Getter\n+@RequiredArgsConstructor\n+public enum MetronomeVolume", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3NTg0MQ=="}, "originalCommit": {"oid": "ab53cf1022b4111c8c3aa86184d18eeb83fb98dc"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTE1OTA0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMjo1Nzo0OVrOGS__IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMDo1ODo1MVrOGTyeLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3NTkwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tint VOLUME_MAX = 127;\n          \n          \n            \n            \tprivate static final int VOLUME_MAX = 127;", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r422575904", "createdAt": "2020-05-10T02:57:49Z", "author": {"login": "raiyni"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,49 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab53cf1022b4111c8c3aa86184d18eeb83fb98dc"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQwMzA1NQ==", "bodyText": "Interface fields are always \"public\", \"static\" and \"final\". No change necessary.", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r423403055", "createdAt": "2020-05-12T00:58:51Z", "author": {"login": "machkr"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,49 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3NTkwNA=="}, "originalCommit": {"oid": "ab53cf1022b4111c8c3aa86184d18eeb83fb98dc"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTg3NDI5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzo0MzowNVrOGUR4pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozODo1NVrOGUT8wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxNzczMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn 96;\n          \n          \n            \n            \t\treturn SoundEffectVolume.MEDIUM_HIGH;", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r423917732", "createdAt": "2020-05-12T17:43:05Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,46 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;\n+\n \t@ConfigItem(\n \t\tkeyName = \"tickCount\",\n \t\tname = \"Tick count\",\n-\t\tdescription = \"Configures the tick on which a sound will be played\",\n-\t\tposition = 2\n+\t\tdescription = \"Configures the tick on which a sound will be played.\"\n \t)\n \tdefault int tickCount()\n \t{\n \t\treturn 1;\n \t}\n \n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n+\t@ConfigItem(\n+\t\tkeyName = \"tickVolume\",\n+\t\tname = \"Tick volume\",\n+\t\tdescription = \"Configures the volume of the tick sound. A value of 0 will disable tick sounds.\"\n+\t)\n+\tdefault int tickVolume()\n+\t{\n+\t\treturn 96;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2431014734a49cb80efc8b1dc51862be1df1327"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MTU1Mg==", "bodyText": "Complete.", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r423951552", "createdAt": "2020-05-12T18:38:55Z", "author": {"login": "machkr"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,46 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;\n+\n \t@ConfigItem(\n \t\tkeyName = \"tickCount\",\n \t\tname = \"Tick count\",\n-\t\tdescription = \"Configures the tick on which a sound will be played\",\n-\t\tposition = 2\n+\t\tdescription = \"Configures the tick on which a sound will be played.\"\n \t)\n \tdefault int tickCount()\n \t{\n \t\treturn 1;\n \t}\n \n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n+\t@ConfigItem(\n+\t\tkeyName = \"tickVolume\",\n+\t\tname = \"Tick volume\",\n+\t\tdescription = \"Configures the volume of the tick sound. A value of 0 will disable tick sounds.\"\n+\t)\n+\tdefault int tickVolume()\n+\t{\n+\t\treturn 96;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxNzczMg=="}, "originalCommit": {"oid": "a2431014734a49cb80efc8b1dc51862be1df1327"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTg3NTI5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzo0MzoyMVrOGUR5Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozODo1MFrOGUT8jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxNzg4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tint VOLUME_MAX = 127;\n          \n          \n            \n            \tint VOLUME_MAX = SoundEffectVolume.HIGH;", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r423917882", "createdAt": "2020-05-12T17:43:21Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,46 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2431014734a49cb80efc8b1dc51862be1df1327"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MTUwMA==", "bodyText": "Complete.", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r423951500", "createdAt": "2020-05-12T18:38:50Z", "author": {"login": "machkr"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,46 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxNzg4Mg=="}, "originalCommit": {"oid": "a2431014734a49cb80efc8b1dc51862be1df1327"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTg4MDcxOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzo0NDo1NFrOGUR85A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozODo0NVrOGUT8VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxODgyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn 0;\n          \n          \n            \n            \t\treturn SoundEffectVolume.MUTED;", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r423918820", "createdAt": "2020-05-12T17:44:54Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,46 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;\n+\n \t@ConfigItem(\n \t\tkeyName = \"tickCount\",\n \t\tname = \"Tick count\",\n-\t\tdescription = \"Configures the tick on which a sound will be played\",\n-\t\tposition = 2\n+\t\tdescription = \"Configures the tick on which a sound will be played.\"\n \t)\n \tdefault int tickCount()\n \t{\n \t\treturn 1;\n \t}\n \n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n+\t@ConfigItem(\n+\t\tkeyName = \"tickVolume\",\n+\t\tname = \"Tick volume\",\n+\t\tdescription = \"Configures the volume of the tick sound. A value of 0 will disable tick sounds.\"\n+\t)\n+\tdefault int tickVolume()\n+\t{\n+\t\treturn 96;\n+\t}\n+\n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n \t@ConfigItem(\n-\t\tkeyName = \"enableTock\",\n-\t\tname = \"Enable tock (alternating) sound\",\n-\t\tdescription = \"Toggles whether to play two alternating sounds\",\n-\t\tposition = 3\n+\t\tkeyName = \"tockVolume\",\n+\t\tname = \"Tock volume\",\n+\t\tdescription = \"Configures the volume of the tock sound. A value of 0 will disable tock sounds.\"\n \t)\n-\tdefault boolean enableTock()\n+\tdefault int tockVolume()\n \t{\n-\t\treturn false;\n+\t\treturn 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2431014734a49cb80efc8b1dc51862be1df1327"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MTQ0NA==", "bodyText": "Complete.", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r423951444", "createdAt": "2020-05-12T18:38:45Z", "author": {"login": "machkr"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePluginConfiguration.java", "diffHunk": "@@ -28,29 +28,46 @@\n import net.runelite.client.config.Config;\n import net.runelite.client.config.ConfigGroup;\n import net.runelite.client.config.ConfigItem;\n+import net.runelite.client.config.Range;\n \n @ConfigGroup(\"metronome\")\n public interface MetronomePluginConfiguration extends Config\n {\n+\tint VOLUME_MAX = 127;\n+\n \t@ConfigItem(\n \t\tkeyName = \"tickCount\",\n \t\tname = \"Tick count\",\n-\t\tdescription = \"Configures the tick on which a sound will be played\",\n-\t\tposition = 2\n+\t\tdescription = \"Configures the tick on which a sound will be played.\"\n \t)\n \tdefault int tickCount()\n \t{\n \t\treturn 1;\n \t}\n \n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n+\t@ConfigItem(\n+\t\tkeyName = \"tickVolume\",\n+\t\tname = \"Tick volume\",\n+\t\tdescription = \"Configures the volume of the tick sound. A value of 0 will disable tick sounds.\"\n+\t)\n+\tdefault int tickVolume()\n+\t{\n+\t\treturn 96;\n+\t}\n+\n+\t@Range(\n+\t\tmax = VOLUME_MAX\n+\t)\n \t@ConfigItem(\n-\t\tkeyName = \"enableTock\",\n-\t\tname = \"Enable tock (alternating) sound\",\n-\t\tdescription = \"Toggles whether to play two alternating sounds\",\n-\t\tposition = 3\n+\t\tkeyName = \"tockVolume\",\n+\t\tname = \"Tock volume\",\n+\t\tdescription = \"Configures the volume of the tock sound. A value of 0 will disable tock sounds.\"\n \t)\n-\tdefault boolean enableTock()\n+\tdefault int tockVolume()\n \t{\n-\t\treturn false;\n+\t\treturn 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxODgyMA=="}, "originalCommit": {"oid": "a2431014734a49cb80efc8b1dc51862be1df1327"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDkwMzM3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOToxMzozOFrOGY_bTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOToxMzozOFrOGY_bTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg1ODE5MA==", "bodyText": "do you mean not muted?", "url": "https://github.com/runelite/runelite/pull/11467#discussion_r428858190", "createdAt": "2020-05-21T19:13:38Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/metronome/MetronomePlugin.java", "diffHunk": "@@ -69,14 +68,23 @@ public void onGameTick(GameTick tick)\n \n \t\tif (++tickCounter % config.tickCount() == 0)\n \t\t{\n-\t\t\tif (config.enableTock() && shouldTock)\n+\t\t\t// As playSoundEffect only uses the volume argument when the in-game volume is muted, sound effect volume", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92f7e3b5d605e3db7768f9b73c8e3d2484f2b03"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3675, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}