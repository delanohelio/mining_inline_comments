{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNDc5NTM5", "number": 362, "title": "Handle the elasticsearch exceptions in JDBC formatted outputs", "bodyText": "Issue #, if available:\n\nIssue #320\nIssue #308\n\nDescription of changes:\nThe JDBC output and Json formatted result have different behaviors when exceptions are thrown from the ES engine. Typically these exceptions are due to bad requests, cluster issues and so forth. Currently we have tested out a couple type of such exceptions, the are either indeed or their root causes are ElasticsearchException instances.\nIt's unlikely to remodel JDBC driver to give the exactly same behavior with the ES raw response due to the limited JDBC types. This PR proposes to only change the behavior of the JDBC output and remain the Json output as it is looking like. The proposed behavior is looking like:\nQuery example:\nSELECT CASE LOWER(OriginWeather) WHEN 'sunny' THEN '1' ELSE '2' END AS cases FROM kibana_sample_data_flights\n/** Result from JDBC (assume there exists more than one shards and all shards failed): */\n{\n  \"error\": {\n    \"reason\": \"Error occurred in Elasticsearch engine: all shards failed\",\n    \"details\": \"\"\"\nShard[0]: ScriptException[compile error]; nested: IllegalArgumentException[invalid sequence of tokens near ['lower_1'].]; nested: NoViableAltException;\nShard[1]: ...\nShard[2]: ...\n...\n\nFor more details, please send request for Json format to see the raw response from elasticsearch engine.\n\"\"\",\n    \"type\": \"SearchPhaseExecutionException\"\n  },\n  \"status\": 400\n}\n\n\nCurrent behaviors look like:\nJson format (thrown directly from the ES engine, which would be remained)\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"script_exception\",\n        \"reason\": \"compile error\",\n        \"script_stack\": [\n          \"if((def lower_1 = doc['OriginWeat ...\",\n          \"        ^---- HERE\"\n        ],\n        \"script\": \"if((def lower_1 = doc['OriginWeather'].value.toLowerCase(Locale.forLanguageTag(\\\"en\\\"));lower_1 == 'sunny')){'1'} else {'2'}\",\n        \"lang\": \"painless\"\n      }\n    ],\n    \"type\": \"search_phase_execution_exception\",\n    \"reason\": \"all shards failed\",\n    \"phase\": \"query\",\n    \"grouped\": true,\n    \"failed_shards\": [\n      {\n        \"shard\": 0,\n        \"index\": \"kibana_sample_data_flights\",\n        \"node\": \"uGM73ev2RauYEnj6AboXyg\",\n        \"reason\": {\n          \"type\": \"script_exception\",\n          \"reason\": \"compile error\",\n          \"script_stack\": [\n            \"if((def lower_1 = doc['OriginWeat ...\",\n            \"        ^---- HERE\"\n          ],\n          \"script\": \"if((def lower_1 = doc['OriginWeather'].value.toLowerCase(Locale.forLanguageTag(\\\"en\\\"));lower_1 == 'sunny')){'1'} else {'2'}\",\n          \"lang\": \"painless\",\n          \"caused_by\": {\n            \"type\": \"illegal_argument_exception\",\n            \"reason\": \"invalid sequence of tokens near ['lower_1'].\",\n            \"caused_by\": {\n              \"type\": \"no_viable_alt_exception\",\n              \"reason\": null\n            }\n          }\n        }\n      }\n    ]\n  },\n  \"status\": 400\n}\n\nJDBC output:\n{\n  \"error\": {\n    \"reason\": \"There was internal problem at backend\",\n    \"details\": \"all shards failed\",\n    \"type\": \"SearchPhaseExecutionException\"\n  },\n  \"status\": 500\n}\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-02-03T19:20:03Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362", "merged": true, "mergeCommit": {"oid": "71aba383a69c107c83480be5015339d76bb055a8"}, "closed": true, "closedAt": "2020-03-17T20:09:27Z", "author": {"login": "chloe-zh"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_oMmBgH2gAyMzcwNDc5NTM5Ojc2OWRkNzFmNDViMGM5YjU0MzJhMzQwNTBjNTY1ODBhMWQ5YjZiMGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOoGgiAH2gAyMzcwNDc5NTM5OmFkMjA2ZmI5YjFmN2EzZDQwMGMwMGU0ZDgyZGU3ZDk1Yzk4YmE0ZGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "769dd71f45b0c9b5432a34050c56580a1d9b6b0f", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/769dd71f45b0c9b5432a34050c56580a1d9b6b0f", "committedDate": "2020-01-31T05:22:07Z", "message": "Caught ES exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad59e1d12514ff97aafdaa427c176feb2b689ba3", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ad59e1d12514ff97aafdaa427c176feb2b689ba3", "committedDate": "2020-01-31T06:04:31Z", "message": "Merge remote-tracking branch 'origin' into es-exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a711f36ac64f480f84173e7a3743bd5991ae89e", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2a711f36ac64f480f84173e7a3743bd5991ae89e", "committedDate": "2020-02-01T01:46:53Z", "message": "Update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e50e042ddfe0a886bdb5e5d2fd4c4e3e375ba63a", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e50e042ddfe0a886bdb5e5d2fd4c4e3e375ba63a", "committedDate": "2020-02-02T10:33:44Z", "message": "Added details in errMsgs to enrich the behavior; added IT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90a74457a72cea06b2dba678718d6e55ec40e414", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/90a74457a72cea06b2dba678718d6e55ec40e414", "committedDate": "2020-02-03T02:55:50Z", "message": "Updated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebaf20211f077af7621b4559c16aa4e4ee509fad", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ebaf20211f077af7621b4559c16aa4e4ee509fad", "committedDate": "2020-02-03T22:47:10Z", "message": "Handled cases where ES exceptions are wrapped up; added default fetching details method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca2fea95c9f4666a4bb71af36b7a45fc690af4d", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6ca2fea95c9f4666a4bb71af36b7a45fc690af4d", "committedDate": "2020-02-03T22:52:44Z", "message": "Updated"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNjU1NzI5", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-352655729", "createdAt": "2020-02-04T00:26:44Z", "commit": {"oid": "90a74457a72cea06b2dba678718d6e55ec40e414"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDoyNjo0NFrOFlEmQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDo0Mjo0MlrOFlE21w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxNjk2Mg==", "bodyText": "Because ElasticsearchErrorMessage is dedicated to ElasticsearchException, I think you can pass in e only and get everything you need inside the constructor.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374416962", "createdAt": "2020-02-04T00:26:44Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/Protocol.java", "diffHunk": "@@ -65,7 +66,9 @@ public Protocol(Client client, QueryAction queryAction, Object queryResult, Stri\n     public Protocol(Exception e) {\n         this.formatType = null;\n         this.status = ERROR_STATUS;\n-        this.error = new ErrorMessage(e, ERROR_STATUS);\n+        this.error = e instanceof ElasticsearchException ? new ElasticsearchErrorMessage((ElasticsearchException) e,\n+                ((ElasticsearchException) e).status().getStatus())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a74457a72cea06b2dba678718d6e55ec40e414"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxOTcyMw==", "bodyText": "Is this try-catch required? Same for fetchDetails and fetchSearchPhaseExecutionExceptionDetails.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374419723", "createdAt": "2020-02-04T00:37:01Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/ElasticsearchErrorMessage.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.executor.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.StringUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.action.search.SearchPhaseExecutionException;\n+import org.elasticsearch.action.search.ShardSearchFailure;\n+\n+public class ElasticsearchErrorMessage extends ErrorMessage {\n+\n+    private static final Logger LOG = LogManager.getLogger();\n+\n+    ElasticsearchErrorMessage(ElasticsearchException exception, int status) {\n+        super(exception, status);\n+    }\n+\n+    @Override\n+    protected String fetchReason() {\n+        String detailedMsg = \"\";\n+        try {\n+            detailedMsg = \": \" + exception.getMessage();\n+        } catch (Exception e) {\n+            LOG.error(\"Error occurred when fetching ES exception reasons\", e);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a74457a72cea06b2dba678718d6e55ec40e414"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQyMDE2OA==", "bodyText": "Do we need else for other cases? ex. call super.fetchDetails() to get default message.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374420168", "createdAt": "2020-02-04T00:38:42Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/ElasticsearchErrorMessage.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.executor.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.StringUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.action.search.SearchPhaseExecutionException;\n+import org.elasticsearch.action.search.ShardSearchFailure;\n+\n+public class ElasticsearchErrorMessage extends ErrorMessage {\n+\n+    private static final Logger LOG = LogManager.getLogger();\n+\n+    ElasticsearchErrorMessage(ElasticsearchException exception, int status) {\n+        super(exception, status);\n+    }\n+\n+    @Override\n+    protected String fetchReason() {\n+        String detailedMsg = \"\";\n+        try {\n+            detailedMsg = \": \" + exception.getMessage();\n+        } catch (Exception e) {\n+            LOG.error(\"Error occurred when fetching ES exception reasons\", e);\n+        }\n+        return \"Error occurred in Elasticsearch engine\" + detailedMsg;\n+    }\n+\n+    /** Currently Sql-Jdbc plugin only supports string type as reason and details in the error messages */\n+    @Override\n+    protected String fetchDetails() {\n+        StringBuilder details = new StringBuilder();\n+        try {\n+            if (exception instanceof SearchPhaseExecutionException) {\n+                String detail = fetchSearchPhaseExecutionExceptionDetails((SearchPhaseExecutionException) exception);\n+                details.append(detail);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a74457a72cea06b2dba678718d6e55ec40e414"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQyMTIwNw==", "bodyText": "Could you remove this field and pass it to fetchReason and fetchDetails instead?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374421207", "createdAt": "2020-02-04T00:42:42Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/ErrorMessage.java", "diffHunk": "@@ -20,7 +20,7 @@\n \n public class ErrorMessage {\n \n-    private Exception exception;\n+    protected Exception exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a74457a72cea06b2dba678718d6e55ec40e414"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNjQ4NTEz", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-352648513", "createdAt": "2020-02-04T00:05:28Z", "commit": {"oid": "6ca2fea95c9f4666a4bb71af36b7a45fc690af4d"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDowNToyOVrOFlEOxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNTo1NTowOFrOFlI0iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxMDk0OA==", "bodyText": "Is it possible to merge with the existing bank index?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374410948", "createdAt": "2020-02-04T00:05:29Z", "author": {"login": "penghuo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/esintgtest/TestsConstants.java", "diffHunk": "@@ -42,6 +42,7 @@\n     public final static String TEST_INDEX_JOIN_TYPE = TEST_INDEX + \"_join_type\";\n     public final static String TEST_INDEX_BANK = TEST_INDEX + \"_bank\";\n     public final static String TEST_INDEX_BANK_TWO = TEST_INDEX_BANK + \"_two\";\n+    public final static String TEST_INDEX_BANK_WITH_NULL_VALUES = TEST_INDEX_BANK + \"_with_null_values\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ca2fea95c9f4666a4bb71af36b7a45fc690af4d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxODA1MQ==", "bodyText": "the assert will not be executed when the errMsgs.length = 0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374418051", "createdAt": "2020-02-04T00:30:42Z", "author": {"login": "penghuo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/esintgtest/QueryIT.java", "diffHunk": "@@ -1773,6 +1776,40 @@ public void caseWhenJdbcResponseTest() {\n         );\n     }\n \n+    @Test\n+    public void functionInCaseFieldShouldThrowESExceptionDueToIllegalScriptInJdbc() {\n+        String response = executeQuery(\n+                \"select case lower(firstname) when 'amber' then '1' else '2' end as cases from \" + TEST_INDEX_ACCOUNT,\n+                \"jdbc\");\n+        queryInJdbcResponseShouldIndicateESException(response, \"SearchPhaseExecutionException\",\n+                \"For more details, please send request for Json format\");\n+    }\n+\n+    @Test\n+    public void functionCallWithIllegalScriptShouldThrowESExceptionInJdbc() {\n+        String response = executeQuery(\"select log(balance + 2) from \" + TEST_INDEX_BANK,\n+                \"jdbc\");\n+        queryInJdbcResponseShouldIndicateESException(response, \"SearchPhaseExecutionException\",\n+                \"please send request for Json format to see the raw response from elasticsearch engine.\");\n+    }\n+\n+    @Ignore(\"Goes in different route, does not call PrettyFormatRestExecutor.execute methods.\" +\n+            \"The performRequest method in RestClient doesn't throw any exceptions for null value fields in script\")\n+    @Test\n+    public void functionArgWithNullValueFieldShouldThrowESExceptionInJdbc() {\n+        String response = executeQuery(\n+                \"select log(balance) from \" + TEST_INDEX_BANK_WITH_NULL_VALUES, \"jdbc\");\n+        queryInJdbcResponseShouldIndicateESException(response, \"SearchPhaseExecutionException\",\n+                \"For more details, please send request for Json format\");\n+    }\n+\n+    private void queryInJdbcResponseShouldIndicateESException(String response, String exceptionType, String... errMsgs) {\n+        Assert.assertThat(response, containsString(exceptionType));\n+        for (String errMsg: errMsgs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ca2fea95c9f4666a4bb71af36b7a45fc690af4d"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQyNzYyMw==", "bodyText": "add the scope for constructor or using lombok", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374427623", "createdAt": "2020-02-04T01:08:02Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/ElasticsearchErrorMessage.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.executor.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.StringUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.action.search.SearchPhaseExecutionException;\n+import org.elasticsearch.action.search.ShardSearchFailure;\n+\n+public class ElasticsearchErrorMessage extends ErrorMessage {\n+\n+    private static final Logger LOG = LogManager.getLogger();\n+\n+    ElasticsearchErrorMessage(ElasticsearchException exception, int status) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ca2fea95c9f4666a4bb71af36b7a45fc690af4d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NDE3OQ==", "bodyText": "is it possible to use factory method to construct the ErrorMessage", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374474179", "createdAt": "2020-02-04T04:56:01Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/Protocol.java", "diffHunk": "@@ -65,7 +66,13 @@ public Protocol(Client client, QueryAction queryAction, Object queryResult, Stri\n     public Protocol(Exception e) {\n         this.formatType = null;\n         this.status = ERROR_STATUS;\n-        this.error = new ErrorMessage(e, ERROR_STATUS);\n+        this.error = e instanceof ElasticsearchException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ca2fea95c9f4666a4bb71af36b7a45fc690af4d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4NjE1Mw==", "bodyText": "Not sure how easily ElasticsearchErrorMessage could be extended to handle different error type? Is it the valid use cases?\nIs it possible to create different ErrorMessage class for different exception type? for example,\npublic class ElasticsearchErrorMessage extends ErrorMessage<ElasticsearchException> {\n    public ElasticsearchErrorMessage(ElasticsearchException exception, int status) {\n        super(exception, status);\n    }\n    \n    @Override\n    protected String fetchReason() {\n        return exception.getMessage();\n    }\n\n    @Override\n    protected String fetchDetails() {\n        return exception.getDetailedMessage();\n    }\n}", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374486153", "createdAt": "2020-02-04T05:55:08Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/ElasticsearchErrorMessage.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.executor.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.StringUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.action.search.SearchPhaseExecutionException;\n+import org.elasticsearch.action.search.ShardSearchFailure;\n+\n+public class ElasticsearchErrorMessage extends ErrorMessage {\n+\n+    private static final Logger LOG = LogManager.getLogger();\n+\n+    ElasticsearchErrorMessage(ElasticsearchException exception, int status) {\n+        super(exception, status);\n+    }\n+\n+    @Override\n+    protected String fetchReason() {\n+        String detailedMsg = \"\";\n+        try {\n+            detailedMsg = \": \" + exception.getMessage();\n+        } catch (Exception e) {\n+            LOG.error(\"Error occurred when fetching ES exception reasons\", e);\n+        }\n+        return \"Error occurred in Elasticsearch engine\" + detailedMsg;\n+    }\n+\n+    /** Currently Sql-Jdbc plugin only supports string type as reason and details in the error messages */\n+    @Override\n+    protected String fetchDetails() {\n+        StringBuilder details = new StringBuilder();\n+        if (exception instanceof SearchPhaseExecutionException) {\n+            String detail = fetchSearchPhaseExecutionExceptionDetails((SearchPhaseExecutionException) exception);\n+            details.append(detail);\n+        } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ca2fea95c9f4666a4bb71af36b7a45fc690af4d"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNjY4NTM0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-352668534", "createdAt": "2020-02-04T01:07:15Z", "commit": {"oid": "6ca2fea95c9f4666a4bb71af36b7a45fc690af4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMTowNzoxNVrOFlFPKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMTowNzoxNVrOFlFPKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQyNzQzMw==", "bodyText": "np: adding a space at the end of the error string will make it easier to read the exception message", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r374427433", "createdAt": "2020-02-04T01:07:15Z", "author": {"login": "davidcui1225"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/ElasticsearchErrorMessage.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.executor.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.StringUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.action.search.SearchPhaseExecutionException;\n+import org.elasticsearch.action.search.ShardSearchFailure;\n+\n+public class ElasticsearchErrorMessage extends ErrorMessage {\n+\n+    private static final Logger LOG = LogManager.getLogger();\n+\n+    ElasticsearchErrorMessage(ElasticsearchException exception, int status) {\n+        super(exception, status);\n+    }\n+\n+    @Override\n+    protected String fetchReason() {\n+        String detailedMsg = \"\";\n+        try {\n+            detailedMsg = \": \" + exception.getMessage();\n+        } catch (Exception e) {\n+            LOG.error(\"Error occurred when fetching ES exception reasons\", e);\n+        }\n+        return \"Error occurred in Elasticsearch engine\" + detailedMsg;\n+    }\n+\n+    /** Currently Sql-Jdbc plugin only supports string type as reason and details in the error messages */\n+    @Override\n+    protected String fetchDetails() {\n+        StringBuilder details = new StringBuilder();\n+        if (exception instanceof SearchPhaseExecutionException) {\n+            String detail = fetchSearchPhaseExecutionExceptionDetails((SearchPhaseExecutionException) exception);\n+            details.append(detail);\n+        } else {\n+            details.append(defaultDetails((ElasticsearchException) exception));\n+        }\n+        details.append(\"\\nFor more details, please send request for Json format to see the raw response from \"\n+                + \"elasticsearch engine.\");\n+        return details.toString();\n+    }\n+\n+    private String defaultDetails(ElasticsearchException exception) {\n+        String detailedMsg = \"\";\n+        try {\n+            detailedMsg = exception.getDetailedMessage();\n+        } catch (Exception e) {\n+            LOG.error(\"Error occurred when fetching ES exception details\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ca2fea95c9f4666a4bb71af36b7a45fc690af4d"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d47af7353a3d8a196da5ee44862900766996a5e7", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d47af7353a3d8a196da5ee44862900766996a5e7", "committedDate": "2020-02-05T20:55:52Z", "message": "Added factory method to construct ErrorMessage; extended exception type for ErrorMessage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2e0f6a0e0589127413447fd73c4982523daceaf", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a2e0f6a0e0589127413447fd73c4982523daceaf", "committedDate": "2020-02-05T21:25:15Z", "message": "Update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDU3NTQz", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-357057543", "createdAt": "2020-02-11T22:55:17Z", "commit": {"oid": "a2e0f6a0e0589127413447fd73c4982523daceaf"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMjo1NToxN1rOFocLZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMjo1NzoyMFrOFocOkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0OTAyOA==", "bodyText": "Any reason to use generic type here? I assume there is no difference in our case.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r377949028", "createdAt": "2020-02-11T22:55:17Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/ErrorMessage.java", "diffHunk": "@@ -18,16 +18,16 @@\n import org.elasticsearch.rest.RestStatus;\n import org.json.JSONObject;\n \n-public class ErrorMessage {\n+public class ErrorMessage<E extends Exception> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2e0f6a0e0589127413447fd73c4982523daceaf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0OTg0Mw==", "bodyText": "Please add a little JavaDoc on this new class and public method. And also consider adding UT because your factory method has logic in unwrapCause().", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r377949843", "createdAt": "2020-02-11T22:57:20Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/ErrorMessageFactory.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.executor.format;\n+\n+import org.elasticsearch.ElasticsearchException;\n+\n+public class ErrorMessageFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2e0f6a0e0589127413447fd73c4982523daceaf"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62e84d516f00d6ddfea5b9b8bad832f8e7dbdec5", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/62e84d516f00d6ddfea5b9b8bad832f8e7dbdec5", "committedDate": "2020-02-13T02:02:51Z", "message": "Added UT for ErrorMessageFactory"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDYzODk3", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-358463897", "createdAt": "2020-02-13T18:47:42Z", "commit": {"oid": "62e84d516f00d6ddfea5b9b8bad832f8e7dbdec5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo0Nzo0M1rOFpfaOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo0Nzo0M1rOFpfaOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MDU1NQ==", "bodyText": "remove this?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r379050555", "createdAt": "2020-02-13T18:47:43Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/Protocol.java", "diffHunk": "@@ -198,4 +199,21 @@ private JSONArray dataEntry(Row dataRow, Schema schema) {\n         }\n         return entry;\n     }\n+\n+    public static Throwable unwrapCause(Throwable t) {\n+        Throwable result = t;\n+        int layer = 0;\n+        // limit the unwrapping up to 5 layers\n+        while (result != null && layer < 5) {\n+            if (result instanceof ElasticsearchException) {\n+                return result;\n+            }\n+            if (result.getCause() == null) {\n+                return result;\n+            }\n+            result = result.getCause();\n+            layer++;\n+        }\n+        return result;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e84d516f00d6ddfea5b9b8bad832f8e7dbdec5"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1a3fe98613ef78ec01e3d9f3e15fefb0898523f", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f1a3fe98613ef78ec01e3d9f3e15fefb0898523f", "committedDate": "2020-02-27T23:35:51Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ea0956a18001b1cfa9fbfbd3613014431e2fc7f", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2ea0956a18001b1cfa9fbfbd3613014431e2fc7f", "committedDate": "2020-02-27T23:37:14Z", "message": "Merge branch 'master' into es-exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8bc91d5ddd50b43ebe29975b8ed791caf4f05a2", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f8bc91d5ddd50b43ebe29975b8ed791caf4f05a2", "committedDate": "2020-02-27T23:41:45Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDg1OTEy", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-366085912", "createdAt": "2020-02-28T00:08:44Z", "commit": {"oid": "f8bc91d5ddd50b43ebe29975b8ed791caf4f05a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowODo0NFrOFvlhAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowODo0NFrOFvlhAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0MjA0OQ==", "bodyText": "np: can be reduced to one line? details.append(fetchSearchPhaseExecutionExceptionDetails((SearchPhaseExecutionException) exception);", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r385442049", "createdAt": "2020-02-28T00:08:44Z", "author": {"login": "davidcui1225"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/executor/format/ElasticsearchErrorMessage.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.executor.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.StringUtils;\n+import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.action.search.SearchPhaseExecutionException;\n+import org.elasticsearch.action.search.ShardSearchFailure;\n+\n+public class ElasticsearchErrorMessage extends ErrorMessage<ElasticsearchException> {\n+\n+    ElasticsearchErrorMessage(ElasticsearchException exception, int status) {\n+        super(exception, status);\n+    }\n+\n+    @Override\n+    protected String fetchReason() {\n+        return \"Error occurred in Elasticsearch engine: \" + exception.getMessage();\n+    }\n+\n+    /** Currently Sql-Jdbc plugin only supports string type as reason and details in the error messages */\n+    @Override\n+    protected String fetchDetails() {\n+        StringBuilder details = new StringBuilder();\n+        if (exception instanceof SearchPhaseExecutionException) {\n+            String detail = fetchSearchPhaseExecutionExceptionDetails((SearchPhaseExecutionException) exception);\n+            details.append(detail);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8bc91d5ddd50b43ebe29975b8ed791caf4f05a2"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NTYyMjky", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-366562292", "createdAt": "2020-02-28T17:26:10Z", "commit": {"oid": "f8bc91d5ddd50b43ebe29975b8ed791caf4f05a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzoyNjoxMFrOFv85gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzoyNjoxMFrOFv85gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyNTE1Mg==", "bodyText": "Using ErrorMessageFactory.createErrorMessage?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r385825152", "createdAt": "2020-02-28T17:26:10Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/RestSqlAction.java", "diffHunk": "@@ -202,7 +202,7 @@ private void sendResponse(final RestChannel channel, final String message, final\n     }\n \n     private void reportError(final RestChannel channel, final Exception e, final RestStatus status) {\n-        sendResponse(channel, new ErrorMessage(e, status.getStatus()).toString(), status);\n+        sendResponse(channel, new ErrorMessage<>(e, status.getStatus()).toString(), status);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8bc91d5ddd50b43ebe29975b8ed791caf4f05a2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NTYyMzg1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-366562385", "createdAt": "2020-02-28T17:26:21Z", "commit": {"oid": "f8bc91d5ddd50b43ebe29975b8ed791caf4f05a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzoyNjoyMlrOFv85yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzoyNjoyMlrOFv85yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyNTIyNw==", "bodyText": "Using ErrorMessageFactory.createErrorMessage?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#discussion_r385825227", "createdAt": "2020-02-28T17:26:22Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/RestSqlStatsAction.java", "diffHunk": "@@ -69,7 +69,7 @@ protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient cli\n             LOG.error(\"Failed during Query SQL STATS Action.\", e);\n \n             return channel -> channel.sendResponse(new BytesRestResponse(SERVICE_UNAVAILABLE,\n-                    new ErrorMessage(e, SERVICE_UNAVAILABLE.getStatus()).toString()));\n+                    new ErrorMessage<>(e, SERVICE_UNAVAILABLE.getStatus()).toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8bc91d5ddd50b43ebe29975b8ed791caf4f05a2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f9a6186d348e9b125c33a7bdb03fcc3e8f57a6e", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6f9a6186d348e9b125c33a7bdb03fcc3e8f57a6e", "committedDate": "2020-03-02T17:38:14Z", "message": "addressed comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d101cb1fb49f2542904fcc3601cb60635b0049b6", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d101cb1fb49f2542904fcc3601cb60635b0049b6", "committedDate": "2020-03-02T17:39:01Z", "message": "Merge branch 'master' into es-exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "029b372f1d38a0945abfcb81488f1629e66a44a8", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/029b372f1d38a0945abfcb81488f1629e66a44a8", "committedDate": "2020-03-02T17:42:44Z", "message": "addressed comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdfa17471686524b671f31498e392bd0589f1aec", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/cdfa17471686524b671f31498e392bd0589f1aec", "committedDate": "2020-03-02T17:46:53Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDI1MDY0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-367425064", "createdAt": "2020-03-02T18:27:40Z", "commit": {"oid": "cdfa17471686524b671f31498e392bd0589f1aec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTUyMDI2", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/362#pullrequestreview-367552026", "createdAt": "2020-03-02T21:46:36Z", "commit": {"oid": "cdfa17471686524b671f31498e392bd0589f1aec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1282eb8cdf35af82e742f4e27b02bd60a27651bc", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/1282eb8cdf35af82e742f4e27b02bd60a27651bc", "committedDate": "2020-03-16T03:40:52Z", "message": "Merge remote-tracking branch 'origin' into es-exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad206fb9b1f7a3d400c00e4d82de7d95c98ba4db", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ad206fb9b1f7a3d400c00e4d82de7d95c98ba4db", "committedDate": "2020-03-17T19:44:20Z", "message": "update"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 743, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}