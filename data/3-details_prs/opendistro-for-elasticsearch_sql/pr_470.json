{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODI2OTQ1", "number": 470, "title": "Enhancement, add the field type conflict check in semantic check", "bodyText": "Issue #, if available: #348, #445\nDescription of changes:\n\nAdd wildcard index handing in semantic. If the field is used in query have conflict type in wildcard index, semantic exception will be thrown.\nThe mapping conflict resolver logic in the TermFieldRewriter has been refined to do the lazy evaluation only when the field is accessed.\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-05-15T21:27:25Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470", "merged": true, "mergeCommit": {"oid": "bda0b47e3eef38b2de6ee9abd27d70c9b084e514"}, "closed": true, "closedAt": "2020-05-18T12:03:57Z", "author": {"login": "penghuo"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchoZlkAH2gAyNDE4ODI2OTQ1OjU3MGZiOWUxMWUwMDYxZmE2MGMwZTdhYjM4MTllZDk3ODE3OTcxMTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcieq9dgFqTQxMzUyNzc4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/570fb9e11e0061fa60c0e7ab3819ed9781797115", "committedDate": "2020-05-15T20:49:44Z", "message": "Enhancement, add the field type conflict check in semantic check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTk2MDE1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#pullrequestreview-412996015", "createdAt": "2020-05-15T22:13:01Z", "commit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjoxMzowMVrOGWVM6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjoxMzowMVrOGWVM6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA2OTIyNA==", "bodyText": "We should change this to Field [%s] has\u00a0conflicting type [%s]", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#discussion_r426069224", "createdAt": "2020-05-15T22:13:01Z", "author": {"login": "abbashus"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/scope/TypeSupplier.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.antlr.semantic.scope;\n+\n+import com.amazon.opendistroforelasticsearch.sql.antlr.semantic.SemanticAnalysisException;\n+import com.amazon.opendistroforelasticsearch.sql.antlr.semantic.types.Type;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+\n+/**\n+ * The TypeSupplier is construct by the symbolName and symbolType.\n+ * The TypeSupplier implement the {@link Supplier<Type>} interface to provide the {@link Type}.\n+ * The TypeSupplier maintain types to track different {@link Type} definition for the same symbolName.\n+ */\n+public class TypeSupplier implements Supplier<Type> {\n+    private final String symbolName;\n+    private final Type symbolType;\n+    private final Set<Type> types;\n+\n+    public TypeSupplier(String symbolName, Type symbolType) {\n+        this.symbolName = symbolName;\n+        this.symbolType = symbolType;\n+        this.types = new HashSet<>();\n+        this.types.add(symbolType);\n+    }\n+\n+    public TypeSupplier add(Type type) {\n+        types.add(type);\n+        return this;\n+    }\n+\n+    /**\n+     * Get the {@link Type}\n+     * Throw {@link SemanticAnalysisException} if conflict found.\n+     * Currently, if the two type not equal, it been treated as conflict.\n+     */\n+    @Override\n+    public Type get() {\n+        if (types.size() > 1) {\n+            throw new SemanticAnalysisException(\n+                    String.format(\"Symbol [%s] have conflict type [%s]\", symbolName, types));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTk2ODM5", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#pullrequestreview-412996839", "createdAt": "2020-05-15T22:15:34Z", "commit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjoxNTozNVrOGWVPjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjoxNTozNVrOGWVPjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA2OTkwMQ==", "bodyText": "np: type - >types , it been treated as conflict - > they are treated as conflicting", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#discussion_r426069901", "createdAt": "2020-05-15T22:15:35Z", "author": {"login": "abbashus"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/scope/TypeSupplier.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.antlr.semantic.scope;\n+\n+import com.amazon.opendistroforelasticsearch.sql.antlr.semantic.SemanticAnalysisException;\n+import com.amazon.opendistroforelasticsearch.sql.antlr.semantic.types.Type;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+\n+/**\n+ * The TypeSupplier is construct by the symbolName and symbolType.\n+ * The TypeSupplier implement the {@link Supplier<Type>} interface to provide the {@link Type}.\n+ * The TypeSupplier maintain types to track different {@link Type} definition for the same symbolName.\n+ */\n+public class TypeSupplier implements Supplier<Type> {\n+    private final String symbolName;\n+    private final Type symbolType;\n+    private final Set<Type> types;\n+\n+    public TypeSupplier(String symbolName, Type symbolType) {\n+        this.symbolName = symbolName;\n+        this.symbolType = symbolType;\n+        this.types = new HashSet<>();\n+        this.types.add(symbolType);\n+    }\n+\n+    public TypeSupplier add(Type type) {\n+        types.add(type);\n+        return this;\n+    }\n+\n+    /**\n+     * Get the {@link Type}\n+     * Throw {@link SemanticAnalysisException} if conflict found.\n+     * Currently, if the two type not equal, it been treated as conflict.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTk3NTIz", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#pullrequestreview-412997523", "createdAt": "2020-05-15T22:17:27Z", "commit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjoxNzoyN1rOGWVRlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjoxNzoyN1rOGWVRlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA3MDQyMw==", "bodyText": "np: Conflict -> conflict", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#discussion_r426070423", "createdAt": "2020-05-15T22:17:27Z", "author": {"login": "abbashus"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/SemanticAnalyzerFieldTypeTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.antlr.semantic;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.util.MultipleIndexClusterUtils.mockMultipleIndexEnv;\n+\n+public class SemanticAnalyzerFieldTypeTest extends SemanticAnalyzerTestBase {\n+    @Before\n+    public void setup() {\n+        mockMultipleIndexEnv();\n+    }\n+\n+    /**\n+     * id has same type in account1 and account2.\n+     */\n+    @Test\n+    public void accessFieldTypeNotInQueryPassSemanticCheck() {\n+        validate(\"SELECT id FROM account* WHERE id = 1\");\n+    }\n+\n+    /**\n+     * address doesn't exist in account1.\n+     */\n+    @Test\n+    public void accessFieldTypeOnlyInOneIndexPassSemanticCheck() {\n+        validate(\"SELECT address FROM account* WHERE id = 30\");\n+    }\n+\n+    /**\n+     * age has different type in account1 and account2.\n+     */\n+    @Test\n+    public void accessConflictFieldTypeShouldFailSemanticCheck() {\n+        expectValidationFailWithErrorMessages(\"SELECT age FROM account* WHERE age = 30\",\n+                \"Symbol [age] have conflict type\");\n+    }\n+\n+    /**\n+     * age has different type in account1 and account2.\n+     */\n+    @Test\n+    public void mixNonConflictTypeAndConflictFieldTypeShouldFailSemanticCheck() {\n+        expectValidationFailWithErrorMessages(\"SELECT id, age FROM account* WHERE id = 1\",\n+                \"Symbol [age] have conflict type\");\n+    }\n+\n+    /**\n+     * age has different type in account1 and account2.\n+     */\n+    @Test\n+    public void ConflictFieldTypeWithAliasShouldFailSemanticCheck() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDAxMTM1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#pullrequestreview-413001135", "createdAt": "2020-05-15T22:28:14Z", "commit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjoyODoxNFrOGWVdLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjoyODoxNFrOGWVdLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA3MzM4OA==", "bodyText": "np: wildcard import", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#discussion_r426073388", "createdAt": "2020-05-15T22:28:14Z", "author": {"login": "dai-chen"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/scope/TypeSupplierTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.antlr.semantic.scope;\n+\n+import com.amazon.opendistroforelasticsearch.sql.antlr.semantic.SemanticAnalysisException;\n+import com.amazon.opendistroforelasticsearch.sql.antlr.semantic.types.base.ESDataType;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+\n+import static org.junit.Assert.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDQxNTE0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#pullrequestreview-413041514", "createdAt": "2020-05-16T03:02:00Z", "commit": {"oid": "570fb9e11e0061fa60c0e7ab3819ed9781797115"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "782ae8c6f908ac4b6fb5260deb22330aa6c79b7b", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/782ae8c6f908ac4b6fb5260deb22330aa6c79b7b", "committedDate": "2020-05-16T15:34:41Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTI3Nzg0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/470#pullrequestreview-413527784", "createdAt": "2020-05-18T12:03:36Z", "commit": {"oid": "782ae8c6f908ac4b6fb5260deb22330aa6c79b7b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 673, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}