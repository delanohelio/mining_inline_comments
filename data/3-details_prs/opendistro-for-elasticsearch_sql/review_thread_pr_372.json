{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNDIyMTAy", "number": 372, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzo0MjoxMVrODjpkUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTozMzozNVrODkbnAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzA3Nzk0OnYy", "diffSide": "RIGHT", "path": "docs/user/dql/troubleshooting.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzo0MjoxMVrOFvlBGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNzo1ODozN1rOFwpX-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzMzg4MA==", "bodyText": "Are these 2 steps also meant to be labelled 1.?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r385433880", "createdAt": "2020-02-27T23:42:11Z", "author": {"login": "davidcui1225"}, "path": "docs/user/dql/troubleshooting.rst", "diffHunk": "@@ -0,0 +1,89 @@\n+\n+===============\n+Troubleshooting\n+===============\n+\n+.. contents::\n+   :local:\n+   :depth: 2\n+\n+\n+Narrative\n+=========\n+\n+SQL plugin is stateless for now so mostly the troubleshooting is mainly focused on why a single query fails.\n+\n+\n+Syntax Analysis / Semantic Analysis Exceptions\n+----------------------------------------------\n+\n+**Symptoms**\n+\n+When you end up with exceptions similar to as follows:\n+\n+Query:\n+\n+.. code-block:: JSON\n+\n+\tPOST /_opendistro/_sql\n+\t{\n+\t  \"query\" : \"SELECT * FROM sample:data\"\n+\t}\n+\n+Result:\n+\n+.. code-block:: JSON\n+\n+    {\n+      \"reason\": \"Invalid SQL query\",\n+      \"details\": \"Failed to parse query due to offending symbol [:] at: 'SELECT * FROM xxx WHERE xxx:' <--- HERE...\n+        More details: Expecting tokens in {<EOF>, 'AND', 'BETWEEN', 'GROUP', 'HAVING', 'IN', 'IS', 'LIKE', 'LIMIT',\n+        'NOT', 'OR', 'ORDER', 'REGEXP', '*', '/', '%', '+', '-', 'DIV', 'MOD', '=', '>', '<', '!',\n+        '|', '&', '^', '.', DOT_ID}\",\n+      \"type\": \"SyntaxAnalysisException\"\n+    }\n+\n+**Workaround**\n+\n+You need to confirm if the syntax is not supported and disable query analysis if that's the case by the following steps:\n+\n+1. Identify syntax error in failed query, and correct the syntax if the query does not follow MySQL grammar. Go to step 2 if your query is correct in syntax but it still ends up syntax exception.\n+\n+1. Disable strict query analysis in new ANTLR parser with the following code block.\n+\n+1. Verify if the query can pass now. If the query fails as well, please create an issue in our `GitHub Issues <https://github.com/opendistro-for-elasticsearch/sql/issues>`_ section to report bugs fixing or request new features.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca13dd4deb8f6387a01c0fa82b0a5cb76d586d6f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1Mzg1MA==", "bodyText": "I followed the markdown rule by mistake. It's corrected now. Thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r386553850", "createdAt": "2020-03-02T17:58:37Z", "author": {"login": "chloe-zh"}, "path": "docs/user/dql/troubleshooting.rst", "diffHunk": "@@ -0,0 +1,89 @@\n+\n+===============\n+Troubleshooting\n+===============\n+\n+.. contents::\n+   :local:\n+   :depth: 2\n+\n+\n+Narrative\n+=========\n+\n+SQL plugin is stateless for now so mostly the troubleshooting is mainly focused on why a single query fails.\n+\n+\n+Syntax Analysis / Semantic Analysis Exceptions\n+----------------------------------------------\n+\n+**Symptoms**\n+\n+When you end up with exceptions similar to as follows:\n+\n+Query:\n+\n+.. code-block:: JSON\n+\n+\tPOST /_opendistro/_sql\n+\t{\n+\t  \"query\" : \"SELECT * FROM sample:data\"\n+\t}\n+\n+Result:\n+\n+.. code-block:: JSON\n+\n+    {\n+      \"reason\": \"Invalid SQL query\",\n+      \"details\": \"Failed to parse query due to offending symbol [:] at: 'SELECT * FROM xxx WHERE xxx:' <--- HERE...\n+        More details: Expecting tokens in {<EOF>, 'AND', 'BETWEEN', 'GROUP', 'HAVING', 'IN', 'IS', 'LIKE', 'LIMIT',\n+        'NOT', 'OR', 'ORDER', 'REGEXP', '*', '/', '%', '+', '-', 'DIV', 'MOD', '=', '>', '<', '!',\n+        '|', '&', '^', '.', DOT_ID}\",\n+      \"type\": \"SyntaxAnalysisException\"\n+    }\n+\n+**Workaround**\n+\n+You need to confirm if the syntax is not supported and disable query analysis if that's the case by the following steps:\n+\n+1. Identify syntax error in failed query, and correct the syntax if the query does not follow MySQL grammar. Go to step 2 if your query is correct in syntax but it still ends up syntax exception.\n+\n+1. Disable strict query analysis in new ANTLR parser with the following code block.\n+\n+1. Verify if the query can pass now. If the query fails as well, please create an issue in our `GitHub Issues <https://github.com/opendistro-for-elasticsearch/sql/issues>`_ section to report bugs fixing or request new features.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzMzg4MA=="}, "originalCommit": {"oid": "ca13dd4deb8f6387a01c0fa82b0a5cb76d586d6f"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzExMDUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/spatial/WktToGeoJsonConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzo1Nzo0MlrOFvlUIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNzo1ODo0NVrOFwpYVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzODc1Mg==", "bodyText": "well-known-text?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r385438752", "createdAt": "2020-02-27T23:57:42Z", "author": {"login": "davidcui1225"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/spatial/WktToGeoJsonConverter.java", "diffHunk": "@@ -29,7 +30,8 @@ public static String toGeoJson(String wkt) {\n         wkt = wkt.toLowerCase();\n         int startOfCoordinates = wkt.indexOf(\"(\");\n         if (startOfCoordinates == -1) {\n-            throw new IllegalArgumentException(\"not valid wkt\");\n+            throw new IllegalArgumentException(\n+                    StringUtils.format(\"Failed to convert well-know-text [%s] to geometry type\", wkt));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca13dd4deb8f6387a01c0fa82b0a5cb76d586d6f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1Mzk0MA==", "bodyText": "Done now, thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r386553940", "createdAt": "2020-03-02T17:58:45Z", "author": {"login": "chloe-zh"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/spatial/WktToGeoJsonConverter.java", "diffHunk": "@@ -29,7 +30,8 @@ public static String toGeoJson(String wkt) {\n         wkt = wkt.toLowerCase();\n         int startOfCoordinates = wkt.indexOf(\"(\");\n         if (startOfCoordinates == -1) {\n-            throw new IllegalArgumentException(\"not valid wkt\");\n+            throw new IllegalArgumentException(\n+                    StringUtils.format(\"Failed to convert well-know-text [%s] to geometry type\", wkt));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzODc1Mg=="}, "originalCommit": {"oid": "ca13dd4deb8f6387a01c0fa82b0a5cb76d586d6f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzExNjE3OnYy", "diffSide": "RIGHT", "path": "docs/user/dql/troubleshooting.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDowMDozMlrOFvlXjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNzo1OTowOVrOFwpZKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzOTYzMQ==", "bodyText": "no need for mostly and mainly to both be in the sentence, it's redundant.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r385439631", "createdAt": "2020-02-28T00:00:32Z", "author": {"login": "davidcui1225"}, "path": "docs/user/dql/troubleshooting.rst", "diffHunk": "@@ -0,0 +1,89 @@\n+\n+===============\n+Troubleshooting\n+===============\n+\n+.. contents::\n+   :local:\n+   :depth: 2\n+\n+\n+Narrative\n+=========\n+\n+SQL plugin is stateless for now so mostly the troubleshooting is mainly focused on why a single query fails.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca13dd4deb8f6387a01c0fa82b0a5cb76d586d6f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1NDE1NQ==", "bodyText": "Corrected now, thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r386554155", "createdAt": "2020-03-02T17:59:09Z", "author": {"login": "chloe-zh"}, "path": "docs/user/dql/troubleshooting.rst", "diffHunk": "@@ -0,0 +1,89 @@\n+\n+===============\n+Troubleshooting\n+===============\n+\n+.. contents::\n+   :local:\n+   :depth: 2\n+\n+\n+Narrative\n+=========\n+\n+SQL plugin is stateless for now so mostly the troubleshooting is mainly focused on why a single query fails.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzOTYzMQ=="}, "originalCommit": {"oid": "ca13dd4deb8f6387a01c0fa82b0a5cb76d586d6f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTI0NDQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/domain/Condition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMToyMzoyNVrOFwvwZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwMzozODoyMVrOF2ktEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY1ODQwNA==", "bodyText": "Maybe better to use SemanticAnalysisException for consistency here and elsewhere.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r386658404", "createdAt": "2020-03-02T21:23:25Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/domain/Condition.java", "diffHunk": "@@ -242,7 +243,7 @@ public Condition(CONN conn, String name, SQLExpr nameExpr, String oper,\n         if (OPEAR.operStringToOpear.containsKey(oper)) {\n             this.opear = OPEAR.operStringToOpear.get(oper);\n         } else {\n-            throw new SqlParseException(oper + \" is not a supported operation\");\n+            throw new SqlParseException(\"Unsupported operation: \" + oper);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1651d56b58c1b415aea586700321d19fb00038b8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc2ODc4NQ==", "bodyText": "Done now, thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r392768785", "createdAt": "2020-03-16T03:38:21Z", "author": {"login": "chloe-zh"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/domain/Condition.java", "diffHunk": "@@ -242,7 +243,7 @@ public Condition(CONN conn, String name, SQLExpr nameExpr, String oper,\n         if (OPEAR.operStringToOpear.containsKey(oper)) {\n             this.opear = OPEAR.operStringToOpear.get(oper);\n         } else {\n-            throw new SqlParseException(oper + \" is not a supported operation\");\n+            throw new SqlParseException(\"Unsupported operation: \" + oper);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY1ODQwNA=="}, "originalCommit": {"oid": "1651d56b58c1b415aea586700321d19fb00038b8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTI2NzIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/domain/SearchResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTozMDo0OVrOFwv-dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwMzozODoyOFrOF2ktKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2MjAwNw==", "bodyText": "value.getClass() may need to be replaced by value.getClass().getSimpleName() for example.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r386662007", "createdAt": "2020-03-02T21:30:49Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/domain/SearchResult.java", "diffHunk": "@@ -135,7 +135,7 @@ private Object covenValue(Aggregation value) throws SqlParseException {\n         } else if (value instanceof LongTerms) {\n             return value;\n         } else {\n-            throw new SqlParseException(\"unknow this agg type \" + value.getClass());\n+            throw new SqlParseException(\"Unknown aggregation value type: \" + value.getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1651d56b58c1b415aea586700321d19fb00038b8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc2ODgxMQ==", "bodyText": "Done, thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r392768811", "createdAt": "2020-03-16T03:38:28Z", "author": {"login": "chloe-zh"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/domain/SearchResult.java", "diffHunk": "@@ -135,7 +135,7 @@ private Object covenValue(Aggregation value) throws SqlParseException {\n         } else if (value instanceof LongTerms) {\n             return value;\n         } else {\n-            throw new SqlParseException(\"unknow this agg type \" + value.getClass());\n+            throw new SqlParseException(\"Unknown aggregation value type: \" + value.getClass());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2MjAwNw=="}, "originalCommit": {"oid": "1651d56b58c1b415aea586700321d19fb00038b8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTI3NjgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/parser/ElasticSqlExprParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTozMzozNVrOFwwECQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwMzozODozN1rOF2ktPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2MzQzMw==", "bodyText": "Same here to throw SyntaxAnalysisException for consistency.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r386663433", "createdAt": "2020-03-02T21:33:35Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/parser/ElasticSqlExprParser.java", "diffHunk": "@@ -120,7 +120,7 @@ protected SQLExpr methodRest(SQLExpr expr, boolean acceptLPAREN) {\n             return primaryRest(methodInvokeExpr);\n         }\n \n-        throw new ParserException(\"not support token:\" + lexer.token());\n+        throw new ParserException(\"Syntax error:\" + lexer.token());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1651d56b58c1b415aea586700321d19fb00038b8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc2ODgzMQ==", "bodyText": "Done, thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/372#discussion_r392768831", "createdAt": "2020-03-16T03:38:37Z", "author": {"login": "chloe-zh"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/parser/ElasticSqlExprParser.java", "diffHunk": "@@ -120,7 +120,7 @@ protected SQLExpr methodRest(SQLExpr expr, boolean acceptLPAREN) {\n             return primaryRest(methodInvokeExpr);\n         }\n \n-        throw new ParserException(\"not support token:\" + lexer.token());\n+        throw new ParserException(\"Syntax error:\" + lexer.token());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2MzQzMw=="}, "originalCommit": {"oid": "1651d56b58c1b415aea586700321d19fb00038b8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2179, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}