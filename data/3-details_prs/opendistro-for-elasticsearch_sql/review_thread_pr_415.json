{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTk3Mjcy", "number": 415, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDo1NzowMlrODwKbYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDo1NzowMlrODwKbYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODI5MDg5OnYy", "diffSide": "RIGHT", "path": "plugin/src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/rest/RestPPLQueryAction.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMDo1NzowMlrOGDArww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjo0MjozN1rOGDDgQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgxMDExNQ==", "bodyText": "Just curious, is this privilege call required for all classes annotated by Spring annotation?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/415#discussion_r405810115", "createdAt": "2020-04-08T20:57:02Z", "author": {"login": "dai-chen"}, "path": "plugin/src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/rest/RestPPLQueryAction.java", "diffHunk": "@@ -44,17 +48,23 @@ public String getName() {\n \n     @Override\n     protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {\n-        PPLService pplService = new PPLService();\n-        return channel -> pplService.execute(new PPLQueryRequest(), new ResponseListener<PPLQueryResponse>() {\n-            @Override\n-            public void onResponse(PPLQueryResponse pplQueryResponse) {\n-                channel.sendResponse(new BytesRestResponse(OK, \"application/json; charset=UTF-8\", \"ok\"));\n-            }\n-\n-            @Override\n-            public void onFailure(Exception e) {\n-                channel.sendResponse(new BytesRestResponse(OK, \"application/json; charset=UTF-8\", \"error\"));\n-            }\n-        });\n+        AnnotationConfigApplicationContext context = SecurityAccess.doPrivileged(\n+                () -> new AnnotationConfigApplicationContext(\n+                        PPLServiceConfig.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30ad6db8693fbe870cf80a64e24ff4931e929b9c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1NTM5MQ==", "bodyText": "If we use Spring IoC, it should be fine. But for other features, I am not sure now.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/415#discussion_r405855391", "createdAt": "2020-04-08T22:40:02Z", "author": {"login": "penghuo"}, "path": "plugin/src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/rest/RestPPLQueryAction.java", "diffHunk": "@@ -44,17 +48,23 @@ public String getName() {\n \n     @Override\n     protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {\n-        PPLService pplService = new PPLService();\n-        return channel -> pplService.execute(new PPLQueryRequest(), new ResponseListener<PPLQueryResponse>() {\n-            @Override\n-            public void onResponse(PPLQueryResponse pplQueryResponse) {\n-                channel.sendResponse(new BytesRestResponse(OK, \"application/json; charset=UTF-8\", \"ok\"));\n-            }\n-\n-            @Override\n-            public void onFailure(Exception e) {\n-                channel.sendResponse(new BytesRestResponse(OK, \"application/json; charset=UTF-8\", \"error\"));\n-            }\n-        });\n+        AnnotationConfigApplicationContext context = SecurityAccess.doPrivileged(\n+                () -> new AnnotationConfigApplicationContext(\n+                        PPLServiceConfig.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgxMDExNQ=="}, "originalCommit": {"oid": "30ad6db8693fbe870cf80a64e24ff4931e929b9c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1NjMyMA==", "bodyText": "I see. Thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/415#discussion_r405856320", "createdAt": "2020-04-08T22:42:37Z", "author": {"login": "dai-chen"}, "path": "plugin/src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/rest/RestPPLQueryAction.java", "diffHunk": "@@ -44,17 +48,23 @@ public String getName() {\n \n     @Override\n     protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {\n-        PPLService pplService = new PPLService();\n-        return channel -> pplService.execute(new PPLQueryRequest(), new ResponseListener<PPLQueryResponse>() {\n-            @Override\n-            public void onResponse(PPLQueryResponse pplQueryResponse) {\n-                channel.sendResponse(new BytesRestResponse(OK, \"application/json; charset=UTF-8\", \"ok\"));\n-            }\n-\n-            @Override\n-            public void onFailure(Exception e) {\n-                channel.sendResponse(new BytesRestResponse(OK, \"application/json; charset=UTF-8\", \"error\"));\n-            }\n-        });\n+        AnnotationConfigApplicationContext context = SecurityAccess.doPrivileged(\n+                () -> new AnnotationConfigApplicationContext(\n+                        PPLServiceConfig.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgxMDExNQ=="}, "originalCommit": {"oid": "30ad6db8693fbe870cf80a64e24ff4931e929b9c"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2213, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}