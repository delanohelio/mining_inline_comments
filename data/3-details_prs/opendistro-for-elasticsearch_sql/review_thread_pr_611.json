{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTc0MDM4", "number": 611, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjoxMzo1MlrOERolRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjoxNzo0OVrOERopKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTI2MTQ5OnYy", "diffSide": "RIGHT", "path": "sql-odbc/src/odfesqlodbc/odbcapi.c", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjoxMzo1MlrOG2dYWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTowOTozNFrOG291Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1NzY1OQ==", "bodyText": "You should check this Statement, connection, then environment rather than the other way around. The most recently constructed handle gets priority.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/611#discussion_r459757659", "createdAt": "2020-07-23T22:13:52Z", "author": {"login": "jduo"}, "path": "sql-odbc/src/odfesqlodbc/odbcapi.c", "diffHunk": "@@ -1367,4 +1367,33 @@ SQLRETURN SQL_API SQLColAttributes(SQLHSTMT StatementHandle,\n     LEAVE_STMT_CS(stmt);\n     return ret;\n }\n+\n+/*\tSQLError -> SQLDiagRec */\n+RETCODE SQL_API SQLError(SQLHENV EnvironmentHandle, SQLHDBC ConnectionHandle,\n+                         SQLHSTMT StatementHandle, SQLCHAR *Sqlstate,\n+                         SQLINTEGER *NativeError, SQLCHAR *MessageText,\n+                         SQLSMALLINT BufferLength, SQLSMALLINT *TextLength) {\n+    RETCODE ret;\n+    SQLSMALLINT RecNumber = 1;\n+\n+    MYLOG(ES_TRACE, \"entering\\n\");\n+\n+    if (EnvironmentHandle) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c605da92d382f9eed7d01aec495e33648d9efdd"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI4OTM3NQ==", "bodyText": "Reversed order of handle checks", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/611#discussion_r460289375", "createdAt": "2020-07-24T21:09:34Z", "author": {"login": "jordanw-bq"}, "path": "sql-odbc/src/odfesqlodbc/odbcapi.c", "diffHunk": "@@ -1367,4 +1367,33 @@ SQLRETURN SQL_API SQLColAttributes(SQLHSTMT StatementHandle,\n     LEAVE_STMT_CS(stmt);\n     return ret;\n }\n+\n+/*\tSQLError -> SQLDiagRec */\n+RETCODE SQL_API SQLError(SQLHENV EnvironmentHandle, SQLHDBC ConnectionHandle,\n+                         SQLHSTMT StatementHandle, SQLCHAR *Sqlstate,\n+                         SQLINTEGER *NativeError, SQLCHAR *MessageText,\n+                         SQLSMALLINT BufferLength, SQLSMALLINT *TextLength) {\n+    RETCODE ret;\n+    SQLSMALLINT RecNumber = 1;\n+\n+    MYLOG(ES_TRACE, \"entering\\n\");\n+\n+    if (EnvironmentHandle) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1NzY1OQ=="}, "originalCommit": {"oid": "1c605da92d382f9eed7d01aec495e33648d9efdd"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTI3MTQ3OnYy", "diffSide": "RIGHT", "path": "sql-odbc/src/odfesqlodbc/odbcapiw.c", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjoxNzo0OVrOG2deLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjoxOTo1MFrOG2dg7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1OTE0OQ==", "bodyText": "SQLCHAR inputs aren't guaranteed to be UTF-8. On Windows it depends on the OS codepage for example (usually codepage CP1252), though on Windows the DM does the conversion for you. This should likely be a separate issue to fix.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/611#discussion_r459759149", "createdAt": "2020-07-23T22:17:49Z", "author": {"login": "jduo"}, "path": "sql-odbc/src/odfesqlodbc/odbcapiw.c", "diffHunk": "@@ -1005,3 +1006,63 @@ RETCODE SQL_API SQLSetConnectOptionW(HDBC ConnectionHandle, SQLUSMALLINT Option,\n     LEAVE_CONN_CS(conn);\n     return ret;\n }\n+\n+RETCODE SQL_API SQLErrorW(SQLHENV EnvironmentHandle, SQLHDBC ConnectionHandle,\n+                          SQLHSTMT StatementHandle, SQLWCHAR *Sqlstate,\n+                          SQLINTEGER *NativeError, SQLWCHAR *MessageText,\n+                          SQLSMALLINT BufferLength, SQLSMALLINT *TextLength) {\n+    RETCODE ret;\n+    SQLSMALLINT buflen;\n+    SQLSMALLINT tlen = 0;\n+    SQLSMALLINT RecNumber = 1;\n+    char qstr_ansi[8], *mtxt = NULL;\n+\n+    MYLOG(ES_TRACE, \"entering\\n\");\n+    buflen = 0;\n+    if (MessageText && BufferLength > 0) {\n+        buflen = BufferLength;\n+        mtxt = malloc(buflen);\n+    }\n+\n+    if (EnvironmentHandle) {\n+        ret = ESAPI_EnvError(EnvironmentHandle, RecNumber, (SQLCHAR *)qstr_ansi,\n+                             NativeError, (SQLCHAR *)mtxt, buflen, &tlen, 0);\n+    } else if (ConnectionHandle) {\n+        ret = ESAPI_ConnectError(ConnectionHandle, RecNumber,\n+                                 (SQLCHAR *)qstr_ansi, NativeError,\n+                                 (SQLCHAR *)mtxt, buflen, &tlen, 0);\n+    } else if (StatementHandle) {\n+        ret = ESAPI_StmtError(StatementHandle, RecNumber, (SQLCHAR *)qstr_ansi,\n+                              NativeError, (SQLCHAR *)mtxt, buflen, &tlen, 0);\n+    } else {\n+        ret = SQL_ERROR;\n+    }\n+\n+    if (SQL_SUCCEEDED(ret)) {\n+        if (Sqlstate)\n+            utf8_to_ucs2(qstr_ansi, -1, Sqlstate, 6);\n+        if (mtxt && tlen <= BufferLength) {\n+            SQLULEN ulen = utf8_to_ucs2_lf(mtxt, tlen, FALSE, MessageText,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c605da92d382f9eed7d01aec495e33648d9efdd"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1OTg1Mw==", "bodyText": "\ud83d\udc4d Will log another issue for this", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/611#discussion_r459759853", "createdAt": "2020-07-23T22:19:50Z", "author": {"login": "jordanw-bq"}, "path": "sql-odbc/src/odfesqlodbc/odbcapiw.c", "diffHunk": "@@ -1005,3 +1006,63 @@ RETCODE SQL_API SQLSetConnectOptionW(HDBC ConnectionHandle, SQLUSMALLINT Option,\n     LEAVE_CONN_CS(conn);\n     return ret;\n }\n+\n+RETCODE SQL_API SQLErrorW(SQLHENV EnvironmentHandle, SQLHDBC ConnectionHandle,\n+                          SQLHSTMT StatementHandle, SQLWCHAR *Sqlstate,\n+                          SQLINTEGER *NativeError, SQLWCHAR *MessageText,\n+                          SQLSMALLINT BufferLength, SQLSMALLINT *TextLength) {\n+    RETCODE ret;\n+    SQLSMALLINT buflen;\n+    SQLSMALLINT tlen = 0;\n+    SQLSMALLINT RecNumber = 1;\n+    char qstr_ansi[8], *mtxt = NULL;\n+\n+    MYLOG(ES_TRACE, \"entering\\n\");\n+    buflen = 0;\n+    if (MessageText && BufferLength > 0) {\n+        buflen = BufferLength;\n+        mtxt = malloc(buflen);\n+    }\n+\n+    if (EnvironmentHandle) {\n+        ret = ESAPI_EnvError(EnvironmentHandle, RecNumber, (SQLCHAR *)qstr_ansi,\n+                             NativeError, (SQLCHAR *)mtxt, buflen, &tlen, 0);\n+    } else if (ConnectionHandle) {\n+        ret = ESAPI_ConnectError(ConnectionHandle, RecNumber,\n+                                 (SQLCHAR *)qstr_ansi, NativeError,\n+                                 (SQLCHAR *)mtxt, buflen, &tlen, 0);\n+    } else if (StatementHandle) {\n+        ret = ESAPI_StmtError(StatementHandle, RecNumber, (SQLCHAR *)qstr_ansi,\n+                              NativeError, (SQLCHAR *)mtxt, buflen, &tlen, 0);\n+    } else {\n+        ret = SQL_ERROR;\n+    }\n+\n+    if (SQL_SUCCEEDED(ret)) {\n+        if (Sqlstate)\n+            utf8_to_ucs2(qstr_ansi, -1, Sqlstate, 6);\n+        if (mtxt && tlen <= BufferLength) {\n+            SQLULEN ulen = utf8_to_ucs2_lf(mtxt, tlen, FALSE, MessageText,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1OTE0OQ=="}, "originalCommit": {"oid": "1c605da92d382f9eed7d01aec495e33648d9efdd"}, "originalPosition": 97}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1964, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}