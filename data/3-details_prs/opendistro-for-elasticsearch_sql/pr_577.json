{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTcxMjcx", "number": 577, "title": "Support mathematical functions: conv, crc32, mod, pow/power, round, sign, sqrt, truncate", "bodyText": "Issue #, if available:\nDescription of changes:\n\n\nconv\nusage: conv(x, a, b) converts the number x from a base to b base\nargument type: x: string, a: integer, b: integer\nreturn type: string\n\n\ncrc32\nusage: calculates a cyclic redundancy check value and returns a 32-bit unsigned value\nargument type: string\nreturn type: long\n\n\nmod\nusage: mod(n, m) calculates the remainder of the number n divided by m\nargument type: integer/long/float/double\nreturn type: widen type between types of n and m\n\n\npow/power\nusage: pow(x, y) calculates the value of x raised to the power of y\nargument type: integer/long/float/double\nreturn type: double\n\n\nround\nusage: round(x, d) rounds the argument x to d decimal places, d defaults to 0 if not specified\nargument type: integer/long/float/double\nreturn type map:\n(integer/long [,integer]) -> long\n(float/double [,integer]) -> double\n\n\nsign\nusage: returns the sign of the argument as -1, 0, or 1, depending on whether the number is negative, zero, or positive\nargument type: integer/long/float/double\nreturn type: integer\n\n\nsqrt\nusage: calculate the square root of a nonnegative number\nargument type: integer/long/float/double\nreturn type map:\n(nonnegative) integer/long/float/double -> double\n(negative) integer/long/float/double -> null\n\n\ntruncate\nusage: truncate(x, d) returns the number x, truncated to d decimal places\nargument type: integer/long/float/double\nreturn type map:\ninteger/long -> long\nfloat/double  -> double\n\n\nReference\n\nMySQL Reference Munual\nArterixDB Numeric Functions\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-07-15T00:03:22Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577", "merged": true, "mergeCommit": {"oid": "9d7286771f5c90be07a6183a337fbd10f085427b"}, "closed": true, "closedAt": "2020-07-20T16:44:07Z", "author": {"login": "chloe-zh"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0-t6-gH2gAyNDQ5MTcxMjcxOjI1MjVmYWNkNWZiNzI0OGRlZjE0M2NhZGQwOTQzYzIzOGVlYjIwMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2zrs0gFqTQ1MTczNzcxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2525facd5fb7248def143cadd0943c238eeb2033", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2525facd5fb7248def143cadd0943c238eeb2033", "committedDate": "2020-07-14T23:34:25Z", "message": "supported conv, crc32, mod, pow/power, round, sign, sqrt, truncate functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5d1ab1c8e30811b6bf41e477773a902e1566997", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a5d1ab1c8e30811b6bf41e477773a902e1566997", "committedDate": "2020-07-15T00:02:46Z", "message": "Merge branch 'develop' into math2\n\n# Conflicts:\n#\tsql/src/main/antlr/OpenDistroSQLParser.g4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2066375cd4c819de2d64f2de660c3935572c505e", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2066375cd4c819de2d64f2de660c3935572c505e", "committedDate": "2020-07-15T00:43:40Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d9cc31818940a1ef851ad84f752684cf66a4b0a", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2d9cc31818940a1ef851ad84f752684cf66a4b0a", "committedDate": "2020-07-15T21:39:44Z", "message": "added test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba6d9b17a36d9fed2c9950b3b3f38cad840343a1", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ba6d9b17a36d9fed2c9950b3b3f38cad840343a1", "committedDate": "2020-07-15T23:04:08Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e15b7b838cd282ade23972e9983dcca31847b80", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3e15b7b838cd282ade23972e9983dcca31847b80", "committedDate": "2020-07-16T03:38:07Z", "message": "added integ test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4038f5aeddf3435d3c684fc15bb47858bf5cbccf", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/4038f5aeddf3435d3c684fc15bb47858bf5cbccf", "committedDate": "2020-07-16T04:20:54Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTMzNTEw", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#pullrequestreview-449933510", "createdAt": "2020-07-16T14:57:59Z", "commit": {"oid": "4038f5aeddf3435d3c684fc15bb47858bf5cbccf"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNDo1Nzo1OVrOGyvAtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTowOTowN1rOGyvgvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1MjIxMg==", "bodyText": "Unrelated change?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#discussion_r455852212", "createdAt": "2020-07-16T14:57:59Z", "author": {"login": "dai-chen"}, "path": "ppl/src/main/antlr/OpenDistroPPLLexer.g4", "diffHunk": "@@ -137,20 +137,29 @@ DC:                                 'DC';\n ABS:                                'ABS';\n CEIL:                               'CEIL';\n CEILING:                            'CEILING';\n+CONV:                               'CONV';\n+CRC32:                              'CRC32';\n EXP:                                'EXP';\n FLOOR:                              'FLOOR';\n LN:                                 'LN';\n LOG:                                'LOG';\n LOG10:                              'LOG10';\n LOG2:                               'LOG2';\n+MOD:                                'MOD';\n+POW:                                'POW';\n+POWER:                              'POWER';\n+ROUND:                              'ROUND';\n+SIGN:                               'SIGN';\n+SQRT:                               'SQRT';\n+TRUNCATE:                           'TRUNCATE';\n \n // LITERALS AND VALUES\n //STRING_LITERAL:                     DQUOTA_STRING | SQUOTA_STRING | BQUOTA_STRING;\n ID:                                 ID_LITERAL;\n INTEGER_LITERAL:                    DEC_DIGIT+;\n DECIMAL_LITERAL:                    (DEC_DIGIT+)? '.' DEC_DIGIT+;\n \n-fragment ID_LITERAL:                [A-Z_$0-9@]*?[A-Z_$\\-]+?[A-Z_$\\-0-9]*;\n+fragment ID_LITERAL:                [A-Z_]+[A-Z_$0-9@\\-]*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4038f5aeddf3435d3c684fc15bb47858bf5cbccf"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1NTc5Nw==", "bodyText": "Is this case and all others in this IT unable to cover in comparison test?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#discussion_r455855797", "createdAt": "2020-07-16T15:02:49Z", "author": {"login": "dai-chen"}, "path": "integ-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/sql/MathematicalFunctionIT.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.sql;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.legacy.plugin.RestSqlAction.QUERY_API_ENDPOINT;\n+import static com.amazon.opendistroforelasticsearch.sql.util.MatcherUtils.rows;\n+import static com.amazon.opendistroforelasticsearch.sql.util.MatcherUtils.schema;\n+import static com.amazon.opendistroforelasticsearch.sql.util.MatcherUtils.verifyDataRows;\n+import static com.amazon.opendistroforelasticsearch.sql.util.MatcherUtils.verifySchema;\n+import static com.amazon.opendistroforelasticsearch.sql.util.TestUtils.getResponseBody;\n+\n+import com.amazon.opendistroforelasticsearch.sql.legacy.SQLIntegTestCase;\n+import com.amazon.opendistroforelasticsearch.sql.util.TestUtils;\n+import java.io.IOException;\n+import java.util.Locale;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.RequestOptions;\n+import org.elasticsearch.client.Response;\n+import org.json.JSONObject;\n+import org.junit.jupiter.api.Test;\n+\n+public class MathematicalFunctionIT extends SQLIntegTestCase {\n+\n+  @Override\n+  public void init() throws Exception {\n+    super.init();\n+    TestUtils.enableNewQueryEngine(client());\n+  }\n+\n+  @Test\n+  public void testConv() throws IOException {\n+    JSONObject result = executeQuery(\"select conv(11, 10, 16)\");\n+    verifySchema(result, schema(\"conv(11, 10, 16)\", null, \"string\"));\n+    verifyDataRows(result, rows(\"b\"));\n+\n+    result = executeQuery(\"select conv(11, 16, 10)\");\n+    verifySchema(result, schema(\"conv(11, 16, 10)\", null, \"string\"));\n+    verifyDataRows(result, rows(\"17\"));\n+  }\n+\n+  @Test\n+  public void testCrc32() throws IOException {\n+    JSONObject result = executeQuery(\"select crc32('MySQL')\");\n+    verifySchema(result, schema(\"crc32(\\\"MySQL\\\")\", null, \"long\"));\n+    verifyDataRows(result, rows(3259397556L));\n+  }\n+\n+  @Test\n+  public void testMod() throws IOException {\n+    JSONObject result = executeQuery(\"select mod(3, 2)\");\n+    verifySchema(result, schema(\"mod(3, 2)\", null, \"integer\"));\n+    verifyDataRows(result, rows(1));\n+\n+    result = executeQuery(\"select mod(3.1, 2)\");\n+    verifySchema(result, schema(\"mod(3.1, 2)\", null, \"double\"));\n+    verifyDataRows(result, rows(1.1));\n+  }\n+\n+  @Test\n+  public void testRound() throws IOException {\n+    JSONObject result = executeQuery(\"select round(56.78)\");\n+    verifySchema(result, schema(\"round(56.78)\", null, \"double\"));\n+    verifyDataRows(result, rows(57));\n+\n+    result = executeQuery(\"select round(56.78, 1)\");\n+    verifySchema(result, schema(\"round(56.78, 1)\", null, \"double\"));\n+    verifyDataRows(result, rows(56.8));\n+\n+    result = executeQuery(\"select round(56.78, -1)\");\n+    verifySchema(result, schema(\"round(56.78, -1)\", null, \"double\"));\n+    verifyDataRows(result, rows(60));\n+\n+    result = executeQuery(\"select round(-56)\");\n+    verifySchema(result, schema(\"round(-56)\", null, \"long\"));\n+    verifyDataRows(result, rows(-56));\n+\n+    result = executeQuery(\"select round(-56, 1)\");\n+    verifySchema(result, schema(\"round(-56, 1)\", null, \"long\"));\n+    verifyDataRows(result, rows(-56));\n+\n+    result = executeQuery(\"select round(-56, -1)\");\n+    verifySchema(result, schema(\"round(-56, -1)\", null, \"long\"));\n+    verifyDataRows(result, rows(-60));\n+  }\n+\n+  /**\n+   * Test sign function with double value.\n+   */\n+  @Test\n+  public void testSign() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4038f5aeddf3435d3c684fc15bb47858bf5cbccf"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MDQxNQ==", "bodyText": "Could we use more readable argument name such as (num, fromBase, toBase) -> ?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#discussion_r455860415", "createdAt": "2020-07-16T15:09:07Z", "author": {"login": "dai-chen"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/arthmetic/MathematicalFunction.java", "diffHunk": "@@ -97,6 +110,58 @@ private static FunctionResolver ceiling() {\n             .build());\n   }\n \n+  /**\n+   * Definition of conv(x, a, b) function.\n+   * Convert number x from base a to base b\n+   * The supported signature of floor function is\n+   * (STRING, INTEGER, INTEGER) -> STRING\n+   */\n+  private static FunctionResolver conv() {\n+    FunctionName functionName = BuiltinFunctionName.CONV.getName();\n+    return new FunctionResolver(\n+        functionName,\n+        new ImmutableMap.Builder<FunctionSignature, FunctionBuilder>()\n+            .put(\n+                new FunctionSignature(functionName,\n+                    Arrays.asList(ExprCoreType.STRING, ExprCoreType.INTEGER, ExprCoreType.INTEGER)),\n+                tripleArgFunc(\n+                    functionName, (t, u, v) -> Integer.toString(Integer.parseInt(t, u), v),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4038f5aeddf3435d3c684fc15bb47858bf5cbccf"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTk0MzAz", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#pullrequestreview-449994303", "createdAt": "2020-07-16T16:02:55Z", "commit": {"oid": "4038f5aeddf3435d3c684fc15bb47858bf5cbccf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjowMjo1NVrOGyx2Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjowMjo1NVrOGyx2Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5ODY2Ng==", "bodyText": "does mod support LONG and FLOAT?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#discussion_r455898666", "createdAt": "2020-07-16T16:02:55Z", "author": {"login": "penghuo"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/arthmetic/MathematicalFunction.java", "diffHunk": "@@ -182,6 +247,186 @@ private static FunctionResolver log2() {\n         singleArgumentFunction(BuiltinFunctionName.LOG2.getName(), v -> Math.log(v) / Math.log(2)));\n   }\n \n+  /**\n+   * Definition of mod(x, y) function.\n+   * Calculate the remainder of x divided by y\n+   * The supported signature of mod function is\n+   * (INTEGER, INTEGER) -> INTEGER\n+   * (LONG, LONG) -> LONG\n+   * (FLOAT, FLOAT) -> FLOAT\n+   * (DOUBLE, DOUBLE) -> DOUBLE\n+   */\n+  private static FunctionResolver mod() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4038f5aeddf3435d3c684fc15bb47858bf5cbccf"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMDE2NjQx", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#pullrequestreview-450016641", "createdAt": "2020-07-16T16:28:47Z", "commit": {"oid": "4038f5aeddf3435d3c684fc15bb47858bf5cbccf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjoyODo0N1rOGyy56A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjoyODo0N1rOGyy56A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkxNjAwOA==", "bodyText": "Any reason why not test mod here? I can see the support in H2: http://www.h2database.com/html/functions.html#mod", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#discussion_r455916008", "createdAt": "2020-07-16T16:28:47Z", "author": {"login": "dai-chen"}, "path": "integ-test/src/test/resources/correctness/expressions/functions.txt", "diffHunk": "@@ -10,6 +10,19 @@ ceil(-1)\n ceil(0.0)\n ceil(0.4999)\n ceil(abs(1))\n+power(2, 2)\n+power(2, -2)\n+power(2.1, 2)\n+power(2, -2.1)\n+power(abs(2), 2)\n+sign(0)\n+sign(-1)\n+sign(1)\n+sign(abs(1))\n+sqrt(0)\n+sqrt(1)\n+sqrt(1.1)\n+sqrt(abs(1))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4038f5aeddf3435d3c684fc15bb47858bf5cbccf"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37131cacad08b453d73cb47df95cba80fbafdb2d", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/37131cacad08b453d73cb47df95cba80fbafdb2d", "committedDate": "2020-07-16T22:15:48Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aec97aceaa6c1ecdf0f3c4fdeed47b733d12674e", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/aec97aceaa6c1ecdf0f3c4fdeed47b733d12674e", "committedDate": "2020-07-16T23:09:00Z", "message": "updated java doc, change the behavior of divided by 0, updated sql function doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92b7dfd329aa2e0c12d9f596f4db42adab92835e", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/92b7dfd329aa2e0c12d9f596f4db42adab92835e", "committedDate": "2020-07-16T23:09:17Z", "message": "Merge remote-tracking branch 'upstream/develop' into math2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76a7f7815fc4572f378e52d446959127a7e85e65", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/76a7f7815fc4572f378e52d446959127a7e85e65", "committedDate": "2020-07-16T23:59:09Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMjkzNTE5", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#pullrequestreview-450293519", "createdAt": "2020-07-17T00:04:49Z", "commit": {"oid": "92b7dfd329aa2e0c12d9f596f4db42adab92835e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowNDo0OVrOGzA2_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowNDo0OVrOGzA2_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0NDYzOQ==", "bodyText": "Could you add example for each function? Reference: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_mod\nFor example,\n    od> SELECT MOD(5, 2), MOD(-5, 2), MOD(5, 0);\n    fetched rows / total rows = 1/1\n    +---------+-------------+-------------+\n    ...", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#discussion_r456144639", "createdAt": "2020-07-17T00:04:49Z", "author": {"login": "dai-chen"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -139,6 +139,20 @@ Description\n \n Specification is undefined and type check is skipped for now\n \n+\n+CONV\n+====\n+\n+Description\n+-----------\n+\n+Usage: CONV(x, a, b) converts the number x from a base to b base\n+\n+Argument type: x: string, a: integer, b: integer\n+\n+Return type: string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92b7dfd329aa2e0c12d9f596f4db42adab92835e"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc58fe39a7840d0d0a7fec3bfe5a5f7aa7aa79d1", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bc58fe39a7840d0d0a7fec3bfe5a5f7aa7aa79d1", "committedDate": "2020-07-17T05:07:06Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8962517dd5359111a3b5a67927e880807e80555", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a8962517dd5359111a3b5a67927e880807e80555", "committedDate": "2020-07-17T15:12:14Z", "message": "remove test cases that returns null value in doctest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b868f74cbceed7be1ef569f97972cdf4fe3b53d6", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b868f74cbceed7be1ef569f97972cdf4fe3b53d6", "committedDate": "2020-07-17T15:38:48Z", "message": "added instruction in null value result"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODQxNDEw", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#pullrequestreview-450841410", "createdAt": "2020-07-17T17:38:34Z", "commit": {"oid": "b868f74cbceed7be1ef569f97972cdf4fe3b53d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNzM3NzEx", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/577#pullrequestreview-451737711", "createdAt": "2020-07-20T15:50:53Z", "commit": {"oid": "b868f74cbceed7be1ef569f97972cdf4fe3b53d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 720, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}