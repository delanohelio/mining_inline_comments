{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MDIwMzM5", "number": 627, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDowMTo1NVrOES-FQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzozOTowNFrOETCiDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzI2OTc3OnYy", "diffSide": "RIGHT", "path": "sql-odbc/src/IntegrationTests/ITODBCResults/test_odbc_results.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDowMTo1NVrOG4cpFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTozODoyMVrOG4f1ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MjcxMA==", "bodyText": "Why is this?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461842710", "createdAt": "2020-07-28T20:01:55Z", "author": {"login": "kylepbit"}, "path": "sql-odbc/src/IntegrationTests/ITODBCResults/test_odbc_results.cpp", "diffHunk": "@@ -936,7 +937,9 @@ TEST_F(TestSQLDescribeCol, SingleColumnMetadata) {\n     EXPECT_EQ(single_col, m_column_name);\n     EXPECT_EQ(single_col_name_length, m_column_name_length);\n     EXPECT_EQ(single_col_data_type, m_data_type);\n-    EXPECT_EQ(single_col_column_size, m_column_size);\n+    // Value changes according to pagination setup on server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76c382c3ead0ef192ed15ba8c37bb32acd0e843"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5NTAzNQ==", "bodyText": "Not sure why. Created an issue #628 to investigate this further since I got one another value as 23 for server 1.9.0.\nWill revert changes in this PR and handle this separately as it's not a blocker for fixing the data loading issue in Power BI.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461895035", "createdAt": "2020-07-28T21:38:21Z", "author": {"login": "rupal-bq"}, "path": "sql-odbc/src/IntegrationTests/ITODBCResults/test_odbc_results.cpp", "diffHunk": "@@ -936,7 +937,9 @@ TEST_F(TestSQLDescribeCol, SingleColumnMetadata) {\n     EXPECT_EQ(single_col, m_column_name);\n     EXPECT_EQ(single_col_name_length, m_column_name_length);\n     EXPECT_EQ(single_col_data_type, m_data_type);\n-    EXPECT_EQ(single_col_column_size, m_column_size);\n+    // Value changes according to pagination setup on server", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MjcxMA=="}, "originalCommit": {"oid": "a76c382c3ead0ef192ed15ba8c37bb32acd0e843"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzI3MTkwOnYy", "diffSide": "RIGHT", "path": "sql-odbc/src/odfesqlodbc/es_info.cpp", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDowMjozOFrOG4cqhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMToyMjoyNlrOG4lNSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MzA3OQ==", "bodyText": "Should we just report the extra columns regardless?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461843079", "createdAt": "2020-07-28T20:02:38Z", "author": {"login": "kylepbit"}, "path": "sql-odbc/src/odfesqlodbc/es_info.cpp", "diffHunk": "@@ -476,8 +492,28 @@ void SetTableTuples(QResultClass *res, const TableResultSet res_type,\n         // information for its Data Preview window.\n         std::string catalog(\"\");\n         bind_tbl[TABLES_CATALOG_NAME]->UpdateData((void *)catalog.c_str(), 0);\n-        for (size_t i = 0; i < binds.size(); i++)\n-            binds[i]->AssignData(&tuple[i]);\n+\n+        for (size_t i = 0; i < binds.size(); i++) {\n+            // Add tuples for SQLColumns\n+            if (binds.size() > COLUMNS_SQL_DATA_TYPE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76c382c3ead0ef192ed15ba8c37bb32acd0e843"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg3Mjk3Nw==", "bodyText": "The same method is used while adding tuples for SQLTables as well. SQLTables has only 5 columns whereas SQLColumns has 18.\nSo this check ensures that the data type column is updated for SQLColumns only. If we remove this check then we get Memory Corruption since SQLTables will try to access column which doesn't exist.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461872977", "createdAt": "2020-07-28T20:55:12Z", "author": {"login": "rupal-bq"}, "path": "sql-odbc/src/odfesqlodbc/es_info.cpp", "diffHunk": "@@ -476,8 +492,28 @@ void SetTableTuples(QResultClass *res, const TableResultSet res_type,\n         // information for its Data Preview window.\n         std::string catalog(\"\");\n         bind_tbl[TABLES_CATALOG_NAME]->UpdateData((void *)catalog.c_str(), 0);\n-        for (size_t i = 0; i < binds.size(); i++)\n-            binds[i]->AssignData(&tuple[i]);\n+\n+        for (size_t i = 0; i < binds.size(); i++) {\n+            // Add tuples for SQLColumns\n+            if (binds.size() > COLUMNS_SQL_DATA_TYPE) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MzA3OQ=="}, "originalCommit": {"oid": "a76c382c3ead0ef192ed15ba8c37bb32acd0e843"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1NDUwNQ==", "bodyText": "Almost wondering if it would be worth it to split some of this logic up, now that we're handling special cases for SQLTables & SQLColumns", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461954505", "createdAt": "2020-07-28T23:40:22Z", "author": {"login": "jordanw-bq"}, "path": "sql-odbc/src/odfesqlodbc/es_info.cpp", "diffHunk": "@@ -476,8 +492,28 @@ void SetTableTuples(QResultClass *res, const TableResultSet res_type,\n         // information for its Data Preview window.\n         std::string catalog(\"\");\n         bind_tbl[TABLES_CATALOG_NAME]->UpdateData((void *)catalog.c_str(), 0);\n-        for (size_t i = 0; i < binds.size(); i++)\n-            binds[i]->AssignData(&tuple[i]);\n+\n+        for (size_t i = 0; i < binds.size(); i++) {\n+            // Add tuples for SQLColumns\n+            if (binds.size() > COLUMNS_SQL_DATA_TYPE) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MzA3OQ=="}, "originalCommit": {"oid": "a76c382c3ead0ef192ed15ba8c37bb32acd0e843"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4MzA0OQ==", "bodyText": "Created issue #630 to revisit the logic of assigning data for SQLTables & SQLColumns", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461983049", "createdAt": "2020-07-29T01:22:26Z", "author": {"login": "rupal-bq"}, "path": "sql-odbc/src/odfesqlodbc/es_info.cpp", "diffHunk": "@@ -476,8 +492,28 @@ void SetTableTuples(QResultClass *res, const TableResultSet res_type,\n         // information for its Data Preview window.\n         std::string catalog(\"\");\n         bind_tbl[TABLES_CATALOG_NAME]->UpdateData((void *)catalog.c_str(), 0);\n-        for (size_t i = 0; i < binds.size(); i++)\n-            binds[i]->AssignData(&tuple[i]);\n+\n+        for (size_t i = 0; i < binds.size(); i++) {\n+            // Add tuples for SQLColumns\n+            if (binds.size() > COLUMNS_SQL_DATA_TYPE) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MzA3OQ=="}, "originalCommit": {"oid": "a76c382c3ead0ef192ed15ba8c37bb32acd0e843"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzcyMDYwOnYy", "diffSide": "RIGHT", "path": "sql-odbc/src/IntegrationTests/ITODBCCatalog/test_odbc_catalog.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjowMDoxMVrOG4g3BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMToyMTozOFrOG4lMhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxMTgxMg==", "bodyText": "Can we use SQL type contstants here instead? (eg. SQLWVARCHAR)", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461911812", "createdAt": "2020-07-28T22:00:11Z", "author": {"login": "jordanw-bq"}, "path": "sql-odbc/src/IntegrationTests/ITODBCCatalog/test_odbc_catalog.cpp", "diffHunk": "@@ -85,6 +85,9 @@ const std::vector< std::string > flights_data_type = {\n     \"float\",   \"keyword\", \"integer\", \"keyword\", \"keyword\", \"keyword\", \"date\",\n     \"keyword\", \"keyword\", \"boolean\", \"float\",   \"keyword\", \"keyword\", \"keyword\",\n     \"keyword\", \"keyword\", \"keyword\", \"keyword\"};\n+const std::vector< short > flights_sql_data_type = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6add9da5949e1816b5174e13285d3ebb4f204a50"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4Mjg1Mw==", "bodyText": "added", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461982853", "createdAt": "2020-07-29T01:21:38Z", "author": {"login": "rupal-bq"}, "path": "sql-odbc/src/IntegrationTests/ITODBCCatalog/test_odbc_catalog.cpp", "diffHunk": "@@ -85,6 +85,9 @@ const std::vector< std::string > flights_data_type = {\n     \"float\",   \"keyword\", \"integer\", \"keyword\", \"keyword\", \"keyword\", \"date\",\n     \"keyword\", \"keyword\", \"boolean\", \"float\",   \"keyword\", \"keyword\", \"keyword\",\n     \"keyword\", \"keyword\", \"keyword\", \"keyword\"};\n+const std::vector< short > flights_sql_data_type = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxMTgxMg=="}, "originalCommit": {"oid": "6add9da5949e1816b5174e13285d3ebb4f204a50"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mzk5ODg2OnYy", "diffSide": "RIGHT", "path": "sql-odbc/src/odfesqlodbc/es_parse_result.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzozOTowNFrOG4jcEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMToyMjo1MlrOG4lNvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1NDA2Ng==", "bodyText": "Already included on L22 (might need to expand GH code preview)", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461954066", "createdAt": "2020-07-28T23:39:04Z", "author": {"login": "jordanw-bq"}, "path": "sql-odbc/src/odfesqlodbc/es_parse_result.cpp", "diffHunk": "@@ -29,6 +29,7 @@\n #pragma clang diagnostic pop\n #endif  // __APPLE__\n #include \"statement.h\"\n+#include \"es_types.h\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6add9da5949e1816b5174e13285d3ebb4f204a50"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4MzE2NQ==", "bodyText": "removed", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/627#discussion_r461983165", "createdAt": "2020-07-29T01:22:52Z", "author": {"login": "rupal-bq"}, "path": "sql-odbc/src/odfesqlodbc/es_parse_result.cpp", "diffHunk": "@@ -29,6 +29,7 @@\n #pragma clang diagnostic pop\n #endif  // __APPLE__\n #include \"statement.h\"\n+#include \"es_types.h\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1NDA2Ng=="}, "originalCommit": {"oid": "6add9da5949e1816b5174e13285d3ebb4f204a50"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1970, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}