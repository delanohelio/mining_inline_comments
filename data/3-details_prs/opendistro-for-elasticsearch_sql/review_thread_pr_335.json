{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NzMwNzUw", "number": 335, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo0MTozNVrODWTbVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODoyNzo1MFrODWVMCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NzEzNTU2OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo0MTozNVrOFa_CKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjo0NzoxNFrOFbIJWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0MDA0Mg==", "bodyText": "When excluding the doctest folder. Does it means the doc need to be build manually with doctest paramater?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363840042", "createdAt": "2020-01-07T16:41:35Z", "author": {"login": "penghuo"}, "path": "build.gradle", "diffHunk": "@@ -132,6 +132,33 @@ integTestRunner {\n     systemProperty 'tests.security.manager', 'false'\n     // allows integration test classes to access test resource from project root path\n     systemProperty('project.root', project.rootDir.absolutePath)\n+\n+    // Run different task based on test type. \"exclude\" is required for each task.\n+    def testType = System.getProperty(\"testType\")\n+    if (testType == 'doctest') { // Doctest to generate documentation\n+        include 'com/amazon/opendistroforelasticsearch/sql/doctest/**/*IT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/correctness/**'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**'\n+\n+    } else if (testType == 'comparison') { // Comparision testing\n+        include 'com/amazon/opendistroforelasticsearch/sql/correctness/CorrectnessIT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/doctest/**'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**'\n+\n+        // Enable logging output to console\n+        testLogging.showStandardStreams true\n+\n+        // Pass down system properties to IT class\n+        systemProperty \"esHost\", System.getProperty(\"esHost\")\n+        systemProperty \"dbUrl\", System.getProperty(\"dbUrl\")\n+        systemProperty \"otherDbUrls\", System.getProperty(\"otherDbUrls\")\n+        systemProperty \"queries\", System.getProperty(\"queries\")\n+\n+    } else { // Run all other integration tests\n+        include 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**/*IT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/doctest/**'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NTE3Nw==", "bodyText": "+1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363885177", "createdAt": "2020-01-07T18:24:47Z", "author": {"login": "chloe-zh"}, "path": "build.gradle", "diffHunk": "@@ -132,6 +132,33 @@ integTestRunner {\n     systemProperty 'tests.security.manager', 'false'\n     // allows integration test classes to access test resource from project root path\n     systemProperty('project.root', project.rootDir.absolutePath)\n+\n+    // Run different task based on test type. \"exclude\" is required for each task.\n+    def testType = System.getProperty(\"testType\")\n+    if (testType == 'doctest') { // Doctest to generate documentation\n+        include 'com/amazon/opendistroforelasticsearch/sql/doctest/**/*IT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/correctness/**'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**'\n+\n+    } else if (testType == 'comparison') { // Comparision testing\n+        include 'com/amazon/opendistroforelasticsearch/sql/correctness/CorrectnessIT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/doctest/**'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**'\n+\n+        // Enable logging output to console\n+        testLogging.showStandardStreams true\n+\n+        // Pass down system properties to IT class\n+        systemProperty \"esHost\", System.getProperty(\"esHost\")\n+        systemProperty \"dbUrl\", System.getProperty(\"dbUrl\")\n+        systemProperty \"otherDbUrls\", System.getProperty(\"otherDbUrls\")\n+        systemProperty \"queries\", System.getProperty(\"queries\")\n+\n+    } else { // Run all other integration tests\n+        include 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**/*IT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/doctest/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0MDA0Mg=="}, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4OTMzOQ==", "bodyText": "Changed to run doctest by default too. Thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363989339", "createdAt": "2020-01-07T22:47:14Z", "author": {"login": "dai-chen"}, "path": "build.gradle", "diffHunk": "@@ -132,6 +132,33 @@ integTestRunner {\n     systemProperty 'tests.security.manager', 'false'\n     // allows integration test classes to access test resource from project root path\n     systemProperty('project.root', project.rootDir.absolutePath)\n+\n+    // Run different task based on test type. \"exclude\" is required for each task.\n+    def testType = System.getProperty(\"testType\")\n+    if (testType == 'doctest') { // Doctest to generate documentation\n+        include 'com/amazon/opendistroforelasticsearch/sql/doctest/**/*IT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/correctness/**'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**'\n+\n+    } else if (testType == 'comparison') { // Comparision testing\n+        include 'com/amazon/opendistroforelasticsearch/sql/correctness/CorrectnessIT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/doctest/**'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**'\n+\n+        // Enable logging output to console\n+        testLogging.showStandardStreams true\n+\n+        // Pass down system properties to IT class\n+        systemProperty \"esHost\", System.getProperty(\"esHost\")\n+        systemProperty \"dbUrl\", System.getProperty(\"dbUrl\")\n+        systemProperty \"otherDbUrls\", System.getProperty(\"otherDbUrls\")\n+        systemProperty \"queries\", System.getProperty(\"queries\")\n+\n+    } else { // Run all other integration tests\n+        include 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**/*IT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/doctest/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0MDA0Mg=="}, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NzE5NjcxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/correctness/report/FailedTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzowMDo0NlrOFa_niA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNzo0N1rOFbHvLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0OTYwOA==", "bodyText": "Is it possible to construct the report object and serialize the object to json. It may more clear to represent what is include in the report.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363849608", "createdAt": "2020-01-07T17:00:46Z", "author": {"login": "penghuo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/correctness/report/FailedTestCase.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.correctness.report;\n+\n+import com.amazon.opendistroforelasticsearch.sql.correctness.runner.resultset.DBResult;\n+import com.amazon.opendistroforelasticsearch.sql.correctness.runner.resultset.Row;\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * Report for test case that fails due to inconsistent result set.\n+ */\n+public class FailedTestCase extends TestCaseReport {\n+\n+    /** Inconsistent result set for reporting */\n+    private final List<DBResult> results;\n+\n+    public FailedTestCase(String sql, List<DBResult> results) {\n+        super(false, sql);\n+        this.results = results;\n+        this.results.sort(Comparator.comparing(DBResult::getDatabaseName));\n+    }\n+\n+    @Override\n+    public JSONObject report() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4MjYzOQ==", "bodyText": "Good point! Changed all report classes to generate JSON from object directly. And also use Lombok to simplify the code.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363982639", "createdAt": "2020-01-07T22:27:47Z", "author": {"login": "dai-chen"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/correctness/report/FailedTestCase.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.correctness.report;\n+\n+import com.amazon.opendistroforelasticsearch.sql.correctness.runner.resultset.DBResult;\n+import com.amazon.opendistroforelasticsearch.sql.correctness.runner.resultset.Row;\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * Report for test case that fails due to inconsistent result set.\n+ */\n+public class FailedTestCase extends TestCaseReport {\n+\n+    /** Inconsistent result set for reporting */\n+    private final List<DBResult> results;\n+\n+    public FailedTestCase(String sql, List<DBResult> results) {\n+        super(false, sql);\n+        this.results = results;\n+        this.results.sort(Comparator.comparing(DBResult::getDatabaseName));\n+    }\n+\n+    @Override\n+    public JSONObject report() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0OTYwOA=="}, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NzM3NDk3OnYy", "diffSide": "RIGHT", "path": "src/test/resources/correctness/sanity_integration_tests.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODowODozOFrOFbBYSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjo0MDo1MlrOFbIBDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3ODQ3Mg==", "bodyText": "Curious: are these sanity tests testing basic bug fixes/feature additions we've made recently, or are they just a list of generic queries?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363878472", "createdAt": "2020-01-07T18:08:38Z", "author": {"login": "davidcui1225"}, "path": "src/test/resources/correctness/sanity_integration_tests.txt", "diffHunk": "@@ -0,0 +1,8 @@\n+SELECT AvgTicketPrice, Cancelled, Carrier, FlightDelayMin, timestamp FROM kibana_sample_data_flights", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4NzIxNQ==", "bodyText": "Yes, I just added some generic queries. We can add more later.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363987215", "createdAt": "2020-01-07T22:40:52Z", "author": {"login": "dai-chen"}, "path": "src/test/resources/correctness/sanity_integration_tests.txt", "diffHunk": "@@ -0,0 +1,8 @@\n+SELECT AvgTicketPrice, Cancelled, Carrier, FlightDelayMin, timestamp FROM kibana_sample_data_flights", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3ODQ3Mg=="}, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NzQxNzk0OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODoyNToxNlrOFbBzTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjo0Mjo1NVrOFbIDqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NTM5MA==", "bodyText": "Seems that the doc ut is only for manual testing, any reason for that? or shall we put both IT and UT in \"doctest\"?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363885390", "createdAt": "2020-01-07T18:25:16Z", "author": {"login": "chloe-zh"}, "path": "build.gradle", "diffHunk": "@@ -132,6 +132,33 @@ integTestRunner {\n     systemProperty 'tests.security.manager', 'false'\n     // allows integration test classes to access test resource from project root path\n     systemProperty('project.root', project.rootDir.absolutePath)\n+\n+    // Run different task based on test type. \"exclude\" is required for each task.\n+    def testType = System.getProperty(\"testType\")\n+    if (testType == 'doctest') { // Doctest to generate documentation\n+        include 'com/amazon/opendistroforelasticsearch/sql/doctest/**/*IT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/correctness/**'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**'\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4Nzg4Mg==", "bodyText": "This integTestRunner task is only for IT. All unit tests is configured in test task.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363987882", "createdAt": "2020-01-07T22:42:55Z", "author": {"login": "dai-chen"}, "path": "build.gradle", "diffHunk": "@@ -132,6 +132,33 @@ integTestRunner {\n     systemProperty 'tests.security.manager', 'false'\n     // allows integration test classes to access test resource from project root path\n     systemProperty('project.root', project.rootDir.absolutePath)\n+\n+    // Run different task based on test type. \"exclude\" is required for each task.\n+    def testType = System.getProperty(\"testType\")\n+    if (testType == 'doctest') { // Doctest to generate documentation\n+        include 'com/amazon/opendistroforelasticsearch/sql/doctest/**/*IT.class'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/correctness/**'\n+        exclude 'com/amazon/opendistroforelasticsearch/sql/esintgtest/**'\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NTM5MA=="}, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NzQyNDExOnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODoyNzo1MFrOFbB3iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjo0MjowOVrOFbICxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NjQ3Mg==", "bodyText": "Just curious, are we going to base the test on v1.3? Because I thought it would be v1.4.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363886472", "createdAt": "2020-01-07T18:27:50Z", "author": {"login": "chloe-zh"}, "path": "build.gradle", "diffHunk": "@@ -214,6 +241,12 @@ dependencies {\n     // testCompile group: 'com.alibaba', name: 'fastjson', version:'1.2.56'\n     // testCompile group: 'org.mockito', name: 'mockito-core', version:'2.23.4'\n     testCompile group: \"org.elasticsearch.client\", name: 'transport', version: \"${es_version}\"\n+\n+    // JDBC drivers for comparison test. Somehow Apache Derby throws security permission exception.\n+    testCompile group: 'com.amazon.opendistroforelasticsearch.client', name: 'opendistro-sql-jdbc', version: '1.3.0.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4NzY1NA==", "bodyText": "Yes, JDBC driver 1.4 is not published to Maven central repository yet.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/335#discussion_r363987654", "createdAt": "2020-01-07T22:42:09Z", "author": {"login": "dai-chen"}, "path": "build.gradle", "diffHunk": "@@ -214,6 +241,12 @@ dependencies {\n     // testCompile group: 'com.alibaba', name: 'fastjson', version:'1.2.56'\n     // testCompile group: 'org.mockito', name: 'mockito-core', version:'2.23.4'\n     testCompile group: \"org.elasticsearch.client\", name: 'transport', version: \"${es_version}\"\n+\n+    // JDBC drivers for comparison test. Somehow Apache Derby throws security permission exception.\n+    testCompile group: 'com.amazon.opendistroforelasticsearch.client', name: 'opendistro-sql-jdbc', version: '1.3.0.0'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4NjQ3Mg=="}, "originalCommit": {"oid": "6b9642f3c68b0ad8fcb98788bd3ce6489610c73a"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2143, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}