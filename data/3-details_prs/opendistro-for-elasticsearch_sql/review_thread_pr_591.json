{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxNDg1ODgz", "number": 591, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToxNzo0OFrOEQX-qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOToxOTo0NVrOEQw0Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjA1NTQ0OnYy", "diffSide": "RIGHT", "path": "sql/src/main/antlr/OpenDistroSQLParser.g4", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToxNzo0OFrOG0fnoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOToxNTozMFrOG1GOpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5NzE4NQ==", "bodyText": "is this not necessary because of functionArgs? in functionCall? And I think it's more appropriate to mark this optional in functionCall for PPL too?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r457697185", "createdAt": "2020-07-20T21:17:48Z", "author": {"login": "dai-chen"}, "path": "sql/src/main/antlr/OpenDistroSQLParser.g4", "diffHunk": "@@ -166,16 +166,16 @@ scalarFunctionName\n     ;\n \n mathematicalFunctionName\n-    : ABS | CEIL | CEILING | CONV | CRC32 | EXP | FLOOR | LN | LOG | LOG10 | LOG2 | MOD | POW | POWER\n-    | ROUND | SIGN | SQRT | TRUNCATE\n+    : ABS | CEIL | CEILING | CONV | CRC32 | E | EXP | FLOOR | LN | LOG | LOG10 | LOG2 | MOD | PI | POW | POWER\n+    | RAND | ROUND | SIGN | SQRT | TRUNCATE\n     ;\n \n dateTimeFunctionName\n     : DAYOFMONTH\n     ;\n \n functionArgs\n-    : functionArg (COMMA functionArg)*\n+    : (functionArg (COMMA functionArg)*)?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075551350f29253263d38fd5071c1e73891743b6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MTE1Ng==", "bodyText": "Yes functions with no argument will return an empty collection as functionArgs in parser. It has also been refracted in PPL.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r458241156", "createdAt": "2020-07-21T16:45:46Z", "author": {"login": "chloe-zh"}, "path": "sql/src/main/antlr/OpenDistroSQLParser.g4", "diffHunk": "@@ -166,16 +166,16 @@ scalarFunctionName\n     ;\n \n mathematicalFunctionName\n-    : ABS | CEIL | CEILING | CONV | CRC32 | EXP | FLOOR | LN | LOG | LOG10 | LOG2 | MOD | POW | POWER\n-    | ROUND | SIGN | SQRT | TRUNCATE\n+    : ABS | CEIL | CEILING | CONV | CRC32 | E | EXP | FLOOR | LN | LOG | LOG10 | LOG2 | MOD | PI | POW | POWER\n+    | RAND | ROUND | SIGN | SQRT | TRUNCATE\n     ;\n \n dateTimeFunctionName\n     : DAYOFMONTH\n     ;\n \n functionArgs\n-    : functionArg (COMMA functionArg)*\n+    : (functionArg (COMMA functionArg)*)?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5NzE4NQ=="}, "originalCommit": {"oid": "075551350f29253263d38fd5071c1e73891743b6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyOTc2NA==", "bodyText": "I was asking why is this change necessary because:\nfunctionCall\n    : scalarFunctionName LR_BRACKET functionArgs? RR_BRACKET        #scalarFunctionCall\n    ;", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r458329764", "createdAt": "2020-07-21T19:15:30Z", "author": {"login": "dai-chen"}, "path": "sql/src/main/antlr/OpenDistroSQLParser.g4", "diffHunk": "@@ -166,16 +166,16 @@ scalarFunctionName\n     ;\n \n mathematicalFunctionName\n-    : ABS | CEIL | CEILING | CONV | CRC32 | EXP | FLOOR | LN | LOG | LOG10 | LOG2 | MOD | POW | POWER\n-    | ROUND | SIGN | SQRT | TRUNCATE\n+    : ABS | CEIL | CEILING | CONV | CRC32 | E | EXP | FLOOR | LN | LOG | LOG10 | LOG2 | MOD | PI | POW | POWER\n+    | RAND | ROUND | SIGN | SQRT | TRUNCATE\n     ;\n \n dateTimeFunctionName\n     : DAYOFMONTH\n     ;\n \n functionArgs\n-    : functionArg (COMMA functionArg)*\n+    : (functionArg (COMMA functionArg)*)?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5NzE4NQ=="}, "originalCommit": {"oid": "075551350f29253263d38fd5071c1e73891743b6"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjA2NjQ3OnYy", "diffSide": "RIGHT", "path": "docs/user/dql/functions.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToyMToyN1rOG0fuHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0Njo1OFrOG1A3rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5ODg0NQ==", "bodyText": "return type is float?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r457698845", "createdAt": "2020-07-20T21:21:27Z", "author": {"login": "dai-chen"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -616,10 +636,21 @@ RAND\n Description\n -----------\n \n-Specifications: \n+Usage: RAND()/RAND(N) returns a random floating-point value in the range 0 <= value < 1.0. If integer N is specified, the seed is initialized prior to execution. One implication of this behavior is with identical argument N, rand(N) returns the same value each time, and thus produces a repeatable sequence of column values.\n+\n+Argument type: x: STRING, a: INTEGER, b: INTEGER\n \n-1. RAND() -> NUMBER\n-2. RAND(NUMBER T) -> T\n+Return type: STRING", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075551350f29253263d38fd5071c1e73891743b6"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MTk2NQ==", "bodyText": "Typo, will correct it, thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r458241965", "createdAt": "2020-07-21T16:46:58Z", "author": {"login": "chloe-zh"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -616,10 +636,21 @@ RAND\n Description\n -----------\n \n-Specifications: \n+Usage: RAND()/RAND(N) returns a random floating-point value in the range 0 <= value < 1.0. If integer N is specified, the seed is initialized prior to execution. One implication of this behavior is with identical argument N, rand(N) returns the same value each time, and thus produces a repeatable sequence of column values.\n+\n+Argument type: x: STRING, a: INTEGER, b: INTEGER\n \n-1. RAND() -> NUMBER\n-2. RAND(NUMBER T) -> T\n+Return type: STRING", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5ODg0NQ=="}, "originalCommit": {"oid": "075551350f29253263d38fd5071c1e73891743b6"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjA3NzYwOnYy", "diffSide": "RIGHT", "path": "docs/user/dql/functions.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToyNDo0OVrOG0f0pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0NzozN1rOG1A5TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcwMDUxNg==", "bodyText": "what does this mean?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r457700516", "createdAt": "2020-07-20T21:24:49Z", "author": {"login": "dai-chen"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -616,10 +636,21 @@ RAND\n Description\n -----------\n \n-Specifications: \n+Usage: RAND()/RAND(N) returns a random floating-point value in the range 0 <= value < 1.0. If integer N is specified, the seed is initialized prior to execution. One implication of this behavior is with identical argument N, rand(N) returns the same value each time, and thus produces a repeatable sequence of column values.\n+\n+Argument type: x: STRING, a: INTEGER, b: INTEGER", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075551350f29253263d38fd5071c1e73891743b6"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MjM4MQ==", "bodyText": "It should be INTEGER", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r458242381", "createdAt": "2020-07-21T16:47:37Z", "author": {"login": "chloe-zh"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -616,10 +636,21 @@ RAND\n Description\n -----------\n \n-Specifications: \n+Usage: RAND()/RAND(N) returns a random floating-point value in the range 0 <= value < 1.0. If integer N is specified, the seed is initialized prior to execution. One implication of this behavior is with identical argument N, rand(N) returns the same value each time, and thus produces a repeatable sequence of column values.\n+\n+Argument type: x: STRING, a: INTEGER, b: INTEGER", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcwMDUxNg=="}, "originalCommit": {"oid": "075551350f29253263d38fd5071c1e73891743b6"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDEyNTExOnYy", "diffSide": "RIGHT", "path": "docs/user/dql/functions.rst", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOToxOTo0NVrOG1GXdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMTowMTozM1rOG1JnlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzMjAyMA==", "bodyText": "Sorry for last minute comment. Since we haven't added many functions yet, could you check if the column name required to be all upper case (ex. E(), PI()) or not? In MySQL or SQL standard.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r458332020", "createdAt": "2020-07-21T19:19:45Z", "author": {"login": "dai-chen"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -291,9 +291,19 @@ E\n Description\n -----------\n \n-Specifications: \n+Usage: E() returns the Euler's number\n \n-1. E() -> DOUBLE\n+Return type: DOUBLE\n+\n+Example::\n+\n+    od> SELECT E()\n+    fetched rows / total rows = 1/1\n+    +-------------------+\n+    | e()               |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e99698b5407b52a68ebddb6d238407ad35e70a18"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MTM1MQ==", "bodyText": "Good point! Checked it in MySQL, it should be consistent with the input cases", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r458361351", "createdAt": "2020-07-21T20:15:52Z", "author": {"login": "chloe-zh"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -291,9 +291,19 @@ E\n Description\n -----------\n \n-Specifications: \n+Usage: E() returns the Euler's number\n \n-1. E() -> DOUBLE\n+Return type: DOUBLE\n+\n+Example::\n+\n+    od> SELECT E()\n+    fetched rows / total rows = 1/1\n+    +-------------------+\n+    | e()               |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzMjAyMA=="}, "originalCommit": {"oid": "e99698b5407b52a68ebddb6d238407ad35e70a18"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2ODQzMw==", "bodyText": "Thanks for confirming. So the result column name is always lowercase for now? We can fix this separately if change is major.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r458368433", "createdAt": "2020-07-21T20:29:03Z", "author": {"login": "dai-chen"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -291,9 +291,19 @@ E\n Description\n -----------\n \n-Specifications: \n+Usage: E() returns the Euler's number\n \n-1. E() -> DOUBLE\n+Return type: DOUBLE\n+\n+Example::\n+\n+    od> SELECT E()\n+    fetched rows / total rows = 1/1\n+    +-------------------+\n+    | e()               |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzMjAyMA=="}, "originalCommit": {"oid": "e99698b5407b52a68ebddb6d238407ad35e70a18"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM4NDM5NA==", "bodyText": "Yes all lowercase for now. I looked into this issue, it might be a major change. Created related issue: #606", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r458384394", "createdAt": "2020-07-21T20:59:49Z", "author": {"login": "chloe-zh"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -291,9 +291,19 @@ E\n Description\n -----------\n \n-Specifications: \n+Usage: E() returns the Euler's number\n \n-1. E() -> DOUBLE\n+Return type: DOUBLE\n+\n+Example::\n+\n+    od> SELECT E()\n+    fetched rows / total rows = 1/1\n+    +-------------------+\n+    | e()               |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzMjAyMA=="}, "originalCommit": {"oid": "e99698b5407b52a68ebddb6d238407ad35e70a18"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM4NTMwMQ==", "bodyText": "Cool. Thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/591#discussion_r458385301", "createdAt": "2020-07-21T21:01:33Z", "author": {"login": "dai-chen"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -291,9 +291,19 @@ E\n Description\n -----------\n \n-Specifications: \n+Usage: E() returns the Euler's number\n \n-1. E() -> DOUBLE\n+Return type: DOUBLE\n+\n+Example::\n+\n+    od> SELECT E()\n+    fetched rows / total rows = 1/1\n+    +-------------------+\n+    | e()               |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzMjAyMA=="}, "originalCommit": {"oid": "e99698b5407b52a68ebddb6d238407ad35e70a18"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1955, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}