{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NDc0NjI4", "number": 400, "title": "New SQL cluster settings endpoint", "bodyText": "Description of changes:\nThis change exposes a new endpoint to manage OpenDistro SQL only cluster settings.\nAll other settings are ignored. In terms of behavior, it is identical to _cluster/settings API.\nWhy is this change required?\nThough we can manage SQL settings via POST _cluster/settings API, some distributions blacklist access to  _cluster/_settings url. This change provides mechanism to modify SQL plugin only settings, thus providing better control on plugin behavior without affecting other settings.\nTesting\nNew integration tests added. All existing unit and integration tests passing.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-03-30T08:01:52Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400", "merged": true, "mergeCommit": {"oid": "f1d538fc53e94e62754272b199f835551d90f7bd"}, "closed": true, "closedAt": "2020-03-31T23:38:09Z", "author": {"login": "abbashus"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSlxO_gH2gAyMzk1NDc0NjI4Ojk2MjFjZTNlOTVkMmJmYWZlMTAxNWQzNDlkOWNiZWRkNjcxNTUyY2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTLzQVgFqTM4NTE3NTE2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9621ce3e95d2bfafe1015d349d9cbedd671552ce", "author": {"user": {"login": "abbashus", "name": "Abbas Hussain"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9621ce3e95d2bfafe1015d349d9cbedd671552ce", "committedDate": "2020-03-30T03:16:59Z", "message": "Add new _sql/settings endpoint, and a non-op implementation for testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de3caffe9de594b8fea7f7392b9df5ddd670c066", "author": {"user": {"login": "abbashus", "name": "Abbas Hussain"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/de3caffe9de594b8fea7f7392b9df5ddd670c066", "committedDate": "2020-03-30T06:11:15Z", "message": "Add logic to only affect opendistro.sql settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad3d702e0a6ac32208d6c2d5d54df165b6ac7804", "author": {"user": {"login": "abbashus", "name": "Abbas Hussain"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ad3d702e0a6ac32208d6c2d5d54df165b6ac7804", "committedDate": "2020-03-30T07:52:22Z", "message": "Add integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e67c90941fa9734b5aa7e42f1b48d8871db60f32", "author": {"user": {"login": "abbashus", "name": "Abbas Hussain"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e67c90941fa9734b5aa7e42f1b48d8871db60f32", "committedDate": "2020-03-30T08:04:50Z", "message": "Rename settings action"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzOTk1MDQw", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#pullrequestreview-383995040", "createdAt": "2020-03-30T15:52:22Z", "commit": {"oid": "e67c90941fa9734b5aa7e42f1b48d8871db60f32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTo1MjoyMlrOF9wfpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTo1MjoyMlrOF9wfpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMwMTk4OQ==", "bodyText": "log.error already done this.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#discussion_r400301989", "createdAt": "2020-03-30T15:52:22Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/RestSqlSettingsAction.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.plugin;\n+\n+import com.amazon.opendistroforelasticsearch.sql.executor.format.ErrorMessageFactory;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.LogUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.action.admin.cluster.settings.ClusterUpdateSettingsRequest;\n+import org.elasticsearch.client.Requests;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.rest.BaseRestHandler;\n+import org.elasticsearch.rest.BytesRestResponse;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.RestToXContentListener;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import static org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR;\n+\n+/**\n+ * Interface to manage opendistro.sql.* cluster settings\n+ * All non-sql settings are ignored.\n+ * Any non-transient and non-persistent settings are ignored.\n+ */\n+public class RestSqlSettingsAction extends BaseRestHandler {\n+    private static final Logger LOG = LogManager.getLogger(RestSqlSettingsAction.class);\n+\n+    private static final String PERSISTENT = \"persistent\";\n+    private static final String TRANSIENT = \"transient\";\n+    private static final String SQL_SETTINGS_PREFIX = \"opendistro.sql.\";\n+\n+    /**\n+     * API endpoint path\n+     */\n+    public static final String SETTINGS_API_ENDPOINT = \"/_opendistro/_sql/settings\";\n+\n+    public RestSqlSettingsAction(Settings settings, RestController restController) {\n+        super();\n+        restController.registerHandler(RestRequest.Method.POST, SETTINGS_API_ENDPOINT, this);\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"sql_settings_action\";\n+    }\n+\n+    /**\n+     * @see org.elasticsearch.rest.action.admin.cluster.RestClusterUpdateSettingsAction\n+     */\n+    @Override\n+    protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {\n+        LogUtils.addRequestId();\n+        final ClusterUpdateSettingsRequest clusterUpdateSettingsRequest = Requests.clusterUpdateSettingsRequest();\n+        clusterUpdateSettingsRequest.timeout(request.paramAsTime(\"timeout\", clusterUpdateSettingsRequest.timeout()));\n+        clusterUpdateSettingsRequest.masterNodeTimeout(\n+                request.paramAsTime(\"master_timeout\", clusterUpdateSettingsRequest.masterNodeTimeout()));\n+        Map<String, Object> source;\n+        try (XContentParser parser = request.contentParser()) {\n+            source = parser.map();\n+        }\n+\n+        try {\n+            if (source.containsKey(TRANSIENT)) {\n+                clusterUpdateSettingsRequest.transientSettings((Map) source.get(TRANSIENT));\n+            }\n+            if (source.containsKey(PERSISTENT)) {\n+                clusterUpdateSettingsRequest.persistentSettings((Map) source.get(PERSISTENT));\n+            }\n+\n+            // filter out all non-sql settings\n+            clusterUpdateSettingsRequest.transientSettings(\n+                    filterSettings(clusterUpdateSettingsRequest.transientSettings())\n+            );\n+            clusterUpdateSettingsRequest.persistentSettings(\n+                    filterSettings(clusterUpdateSettingsRequest.persistentSettings())\n+            );\n+\n+            return channel -> client.admin().cluster().updateSettings(\n+                    clusterUpdateSettingsRequest, new RestToXContentListener<>(channel));\n+        } catch (Exception e) {\n+            LOG.error(\"Error changing OpenDistro SQL plugin cluster settings\", e);\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67c90941fa9734b5aa7e42f1b48d8871db60f32"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzOTk3OTg3", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#pullrequestreview-383997987", "createdAt": "2020-03-30T15:55:34Z", "commit": {"oid": "e67c90941fa9734b5aa7e42f1b48d8871db60f32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTo1NTozNFrOF9wo8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTo1NTozNFrOF9wo8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMwNDM3MA==", "bodyText": "why call transientSettings two times? ref: line 86.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#discussion_r400304370", "createdAt": "2020-03-30T15:55:34Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/RestSqlSettingsAction.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.plugin;\n+\n+import com.amazon.opendistroforelasticsearch.sql.executor.format.ErrorMessageFactory;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.LogUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.action.admin.cluster.settings.ClusterUpdateSettingsRequest;\n+import org.elasticsearch.client.Requests;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.rest.BaseRestHandler;\n+import org.elasticsearch.rest.BytesRestResponse;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.RestToXContentListener;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import static org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR;\n+\n+/**\n+ * Interface to manage opendistro.sql.* cluster settings\n+ * All non-sql settings are ignored.\n+ * Any non-transient and non-persistent settings are ignored.\n+ */\n+public class RestSqlSettingsAction extends BaseRestHandler {\n+    private static final Logger LOG = LogManager.getLogger(RestSqlSettingsAction.class);\n+\n+    private static final String PERSISTENT = \"persistent\";\n+    private static final String TRANSIENT = \"transient\";\n+    private static final String SQL_SETTINGS_PREFIX = \"opendistro.sql.\";\n+\n+    /**\n+     * API endpoint path\n+     */\n+    public static final String SETTINGS_API_ENDPOINT = \"/_opendistro/_sql/settings\";\n+\n+    public RestSqlSettingsAction(Settings settings, RestController restController) {\n+        super();\n+        restController.registerHandler(RestRequest.Method.POST, SETTINGS_API_ENDPOINT, this);\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"sql_settings_action\";\n+    }\n+\n+    /**\n+     * @see org.elasticsearch.rest.action.admin.cluster.RestClusterUpdateSettingsAction\n+     */\n+    @Override\n+    protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {\n+        LogUtils.addRequestId();\n+        final ClusterUpdateSettingsRequest clusterUpdateSettingsRequest = Requests.clusterUpdateSettingsRequest();\n+        clusterUpdateSettingsRequest.timeout(request.paramAsTime(\"timeout\", clusterUpdateSettingsRequest.timeout()));\n+        clusterUpdateSettingsRequest.masterNodeTimeout(\n+                request.paramAsTime(\"master_timeout\", clusterUpdateSettingsRequest.masterNodeTimeout()));\n+        Map<String, Object> source;\n+        try (XContentParser parser = request.contentParser()) {\n+            source = parser.map();\n+        }\n+\n+        try {\n+            if (source.containsKey(TRANSIENT)) {\n+                clusterUpdateSettingsRequest.transientSettings((Map) source.get(TRANSIENT));\n+            }\n+            if (source.containsKey(PERSISTENT)) {\n+                clusterUpdateSettingsRequest.persistentSettings((Map) source.get(PERSISTENT));\n+            }\n+\n+            // filter out all non-sql settings\n+            clusterUpdateSettingsRequest.transientSettings(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67c90941fa9734b5aa7e42f1b48d8871db60f32"}, "originalPosition": 93}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dd345c38dceae41fac0da80c02818a44046031a", "author": {"user": {"login": "abbashus", "name": "Abbas Hussain"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9dd345c38dceae41fac0da80c02818a44046031a", "committedDate": "2020-03-30T16:14:42Z", "message": "Merge branch 'master' into settings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MDI0MDI2", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#pullrequestreview-384024026", "createdAt": "2020-03-30T16:24:54Z", "commit": {"oid": "9dd345c38dceae41fac0da80c02818a44046031a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjoyNDo1NFrOF9x6UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjozOToyNFrOF9yg5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNTIwMQ==", "bodyText": "np: should this file be named SqlPlugin vs SqlPlug?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#discussion_r400325201", "createdAt": "2020-03-30T16:24:54Z", "author": {"login": "davidcui1225"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/SqlPlug.java", "diffHunk": "@@ -78,7 +78,8 @@ public String description() {\n         Metrics.getInstance().registerDefaultMetrics();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd345c38dceae41fac0da80c02818a44046031a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzNTA3Nw==", "bodyText": "not a big deal, just curious- is there a way we can export some of these JSON strings to a separate file?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#discussion_r400335077", "createdAt": "2020-03-30T16:39:24Z", "author": {"login": "davidcui1225"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/esintgtest/PluginIT.java", "diffHunk": "@@ -52,22 +55,399 @@ public void sqlEnableSettingsTest() throws IOException {\n         }\n \n         queryResult = new JSONObject(TestUtils.getResponseBody(response));\n-        Assert.assertThat(queryResult.getInt(\"status\"), equalTo(400));\n+        assertThat(queryResult.getInt(\"status\"), equalTo(400));\n         JSONObject error = queryResult.getJSONObject(\"error\");\n-        Assert.assertThat(error.getString(\"reason\"), equalTo(\"Invalid SQL query\"));\n-        Assert.assertThat(error.getString(\"details\"), equalTo(\"Either opendistro.sql.enabled or rest.action.multi.allow_explicit_index setting is false\"));\n-        Assert.assertThat(error.getString(\"type\"), equalTo(\"SQLFeatureDisabledException\"));\n-        resetClusterSettings(PERSISTENT, \"opendistro.sql.enabled\");\n+        assertThat(error.getString(\"reason\"), equalTo(\"Invalid SQL query\"));\n+        assertThat(error.getString(\"details\"), equalTo(\"Either opendistro.sql.enabled or rest.action.multi.allow_explicit_index setting is false\"));\n+        assertThat(error.getString(\"type\"), equalTo(\"SQLFeatureDisabledException\"));\n+        wipeAllClusterSettings();\n+    }\n+\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd345c38dceae41fac0da80c02818a44046031a"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "809b14ef208a2ad80a7aab9d529805bb60a35363", "author": {"user": {"login": "abbashus", "name": "Abbas Hussain"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/809b14ef208a2ad80a7aab9d529805bb60a35363", "committedDate": "2020-03-30T16:56:19Z", "message": "Address comments: remove e.printStackTrace()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MDcxMTYw", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#pullrequestreview-384071160", "createdAt": "2020-03-30T17:22:51Z", "commit": {"oid": "e67c90941fa9734b5aa7e42f1b48d8871db60f32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzoyMjo1MVrOF90O9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzoyMjo1MVrOF90O9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM2MzI1Mw==", "bodyText": "Does this block operation on transport thread?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#discussion_r400363253", "createdAt": "2020-03-30T17:22:51Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/RestSqlSettingsAction.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.plugin;\n+\n+import com.amazon.opendistroforelasticsearch.sql.executor.format.ErrorMessageFactory;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.LogUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.action.admin.cluster.settings.ClusterUpdateSettingsRequest;\n+import org.elasticsearch.client.Requests;\n+import org.elasticsearch.client.node.NodeClient;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.rest.BaseRestHandler;\n+import org.elasticsearch.rest.BytesRestResponse;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.action.RestToXContentListener;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import static org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR;\n+\n+/**\n+ * Interface to manage opendistro.sql.* cluster settings\n+ * All non-sql settings are ignored.\n+ * Any non-transient and non-persistent settings are ignored.\n+ */\n+public class RestSqlSettingsAction extends BaseRestHandler {\n+    private static final Logger LOG = LogManager.getLogger(RestSqlSettingsAction.class);\n+\n+    private static final String PERSISTENT = \"persistent\";\n+    private static final String TRANSIENT = \"transient\";\n+    private static final String SQL_SETTINGS_PREFIX = \"opendistro.sql.\";\n+\n+    /**\n+     * API endpoint path\n+     */\n+    public static final String SETTINGS_API_ENDPOINT = \"/_opendistro/_sql/settings\";\n+\n+    public RestSqlSettingsAction(Settings settings, RestController restController) {\n+        super();\n+        restController.registerHandler(RestRequest.Method.POST, SETTINGS_API_ENDPOINT, this);\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"sql_settings_action\";\n+    }\n+\n+    /**\n+     * @see org.elasticsearch.rest.action.admin.cluster.RestClusterUpdateSettingsAction\n+     */\n+    @Override\n+    protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient client) throws IOException {\n+        LogUtils.addRequestId();\n+        final ClusterUpdateSettingsRequest clusterUpdateSettingsRequest = Requests.clusterUpdateSettingsRequest();\n+        clusterUpdateSettingsRequest.timeout(request.paramAsTime(\"timeout\", clusterUpdateSettingsRequest.timeout()));\n+        clusterUpdateSettingsRequest.masterNodeTimeout(\n+                request.paramAsTime(\"master_timeout\", clusterUpdateSettingsRequest.masterNodeTimeout()));\n+        Map<String, Object> source;\n+        try (XContentParser parser = request.contentParser()) {\n+            source = parser.map();\n+        }\n+\n+        try {\n+            if (source.containsKey(TRANSIENT)) {\n+                clusterUpdateSettingsRequest.transientSettings((Map) source.get(TRANSIENT));\n+            }\n+            if (source.containsKey(PERSISTENT)) {\n+                clusterUpdateSettingsRequest.persistentSettings((Map) source.get(PERSISTENT));\n+            }\n+\n+            // filter out all non-sql settings\n+            clusterUpdateSettingsRequest.transientSettings(\n+                    filterSettings(clusterUpdateSettingsRequest.transientSettings())\n+            );\n+            clusterUpdateSettingsRequest.persistentSettings(\n+                    filterSettings(clusterUpdateSettingsRequest.persistentSettings())\n+            );\n+\n+            return channel -> client.admin().cluster().updateSettings(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67c90941fa9734b5aa7e42f1b48d8871db60f32"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "983a8c98f875d383c51da5c4435a1f0df3521d5a", "author": {"user": {"login": "abbashus", "name": "Abbas Hussain"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/983a8c98f875d383c51da5c4435a1f0df3521d5a", "committedDate": "2020-03-30T19:00:30Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "665d999980f638ab85b488880860aef7cfc17fdf", "author": {"user": {"login": "abbashus", "name": "Abbas Hussain"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/665d999980f638ab85b488880860aef7cfc17fdf", "committedDate": "2020-03-30T19:25:31Z", "message": "Change endpoint HTTP method to PUT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03cb8130c75c2b55518eb59cf32005b41b07f011", "author": {"user": {"login": "abbashus", "name": "Abbas Hussain"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/03cb8130c75c2b55518eb59cf32005b41b07f011", "committedDate": "2020-03-30T19:31:38Z", "message": "Update Settings doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTc0NjM4", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#pullrequestreview-385174638", "createdAt": "2020-03-31T23:34:02Z", "commit": {"oid": "03cb8130c75c2b55518eb59cf32005b41b07f011"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTc1MTYx", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/400#pullrequestreview-385175161", "createdAt": "2020-03-31T23:35:35Z", "commit": {"oid": "03cb8130c75c2b55518eb59cf32005b41b07f011"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 770, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}