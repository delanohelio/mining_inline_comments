{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTQyNDAz", "number": 870, "title": "Add CSV formatter in new engine", "bodyText": "Issue #, if available:\n#148 #117 #100\nDescription of changes:\n\n\nAdded csv formatter CsvResponseFormatter in new engine. The formatter formats the QueryResult to csv format and by default it sanitizes the result by (1) inserting single-quote in front of header/data if it starts with special characters including +, -, = and @; (2) quoting the header/data if one or more commas (,) in the header/data. The sanitizing can be skipped by adding an sanitize param and set it to false value in the request.\n\n\nUser manual updates: https://github.com/chloe-zh/sql/blob/csv-formatter/docs/user/interfaces/protocol.rst\n\n\nAdded tests for the formatter; ignored a couple of legacy tests that are not applicable for the new engine\n\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-12-01T20:04:16Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870", "merged": true, "mergeCommit": {"oid": "daee92e009817cd3e057f28a5c874d55aae9e91c"}, "closed": true, "closedAt": "2020-12-11T21:05:09Z", "author": {"login": "chloe-zh"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdh_axkAH2gAyNTMwNTQyNDAzOjA0ZDUwMzYwM2ZiYjZiN2Y0MThkNzUwZTBkMjBlMWI5ZDZiNzRkMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlOeWJgFqTU1MDU3NjY1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04d503603fbb6b7f418d750e0d20e1b9d6b74d09", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/04d503603fbb6b7f418d750e0d20e1b9d6b74d09", "committedDate": "2020-12-01T19:50:00Z", "message": "support csv format in new engine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "489ac8996a42ab72071ab196e0d795c6d0d346ac", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/489ac8996a42ab72071ab196e0d795c6d0d346ac", "committedDate": "2020-12-03T00:05:10Z", "message": "skipped some IT cases that are not applicable in new engine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5299e6e28e965268632e2d73d57bbe7407e39d7f", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5299e6e28e965268632e2d73d57bbe7407e39d7f", "committedDate": "2020-12-03T01:08:02Z", "message": "udpate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c518d58b0b88828c954798e00b9b7bc6cdd454c", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9c518d58b0b88828c954798e00b9b7bc6cdd454c", "committedDate": "2020-12-04T05:34:42Z", "message": "added escape option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc45e073563e83ee8fa3bc163f4ec5fa327a2a16", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/fc45e073563e83ee8fa3bc163f4ec5fa327a2a16", "committedDate": "2020-12-04T19:57:15Z", "message": "added test for Format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d96b19f7e8eac54c3ffafd22fc55618793e00bf0", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d96b19f7e8eac54c3ffafd22fc55618793e00bf0", "committedDate": "2020-12-04T20:22:54Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e6d58e847ece406edaa105abc6cd6e6bc5e6e8f", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6e6d58e847ece406edaa105abc6cd6e6bc5e6e8f", "committedDate": "2020-12-07T19:50:33Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27e7dcf1f05cfe7556fd325671ae62728907bbe6", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/27e7dcf1f05cfe7556fd325671ae62728907bbe6", "committedDate": "2020-12-08T18:30:02Z", "message": "Merge remote-tracking branch 'upstream/develop' into csv-formatter\n\n# Conflicts:\n#\tlegacy/src/main/java/com/amazon/opendistroforelasticsearch/sql/legacy/plugin/RestSQLQueryAction.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6d24ff22b00f3c79343c5efddab0afdd1bd7a48", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e6d24ff22b00f3c79343c5efddab0afdd1bd7a48", "committedDate": "2020-12-08T19:29:50Z", "message": "added IT for ppl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b158985f066e76e0c2ac0c4b7685635f0e6db0b", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/1b158985f066e76e0c2ac0c4b7685635f0e6db0b", "committedDate": "2020-12-08T19:43:05Z", "message": "added IT for ppl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d37cba009d8e4b0fabda776c849f99f09224f30", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8d37cba009d8e4b0fabda776c849f99f09224f30", "committedDate": "2020-12-08T19:43:27Z", "message": "added IT for ppl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66a6b1c102d4f4b9aa7feec0a727e63fbbf91c41", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/66a6b1c102d4f4b9aa7feec0a727e63fbbf91c41", "committedDate": "2020-12-08T19:47:28Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e8656d5a2ba105d2f47884898ad4e91687eaf58", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8e8656d5a2ba105d2f47884898ad4e91687eaf58", "committedDate": "2020-12-08T19:48:52Z", "message": "added license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "558b3ea7a51467132f00a4538fd687215b430594", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/558b3ea7a51467132f00a4538fd687215b430594", "committedDate": "2020-12-08T20:32:47Z", "message": "added test for sql"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99271a0b86d411def80e82f98e44d734c7c29682", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/99271a0b86d411def80e82f98e44d734c7c29682", "committedDate": "2020-12-09T18:24:09Z", "message": "added example in protocol doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTAwNDA4", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#pullrequestreview-548500408", "createdAt": "2020-12-09T18:48:37Z", "commit": {"oid": "99271a0b86d411def80e82f98e44d734c7c29682"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODo0ODozN1rOICkFQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTozODozM1rOICmErQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU1OTIzMw==", "bodyText": "Could we pass this formatter object to create listener method directly without need to make formatter a global field?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#discussion_r539559233", "createdAt": "2020-12-09T18:48:37Z", "author": {"login": "dai-chen"}, "path": "legacy/src/main/java/com/amazon/opendistroforelasticsearch/sql/legacy/plugin/RestSQLQueryAction.java", "diffHunk": "@@ -109,6 +121,13 @@ public RestChannelConsumer prepareRequest(SQLQueryRequest request, NodeClient no\n       return NOT_SUPPORTED_YET;\n     }\n \n+    Format format = request.format();\n+    if (format.equals(Format.CSV)) {\n+      formatter = new CsvResponseFormatter(request.escape());\n+    } else {\n+      formatter = new JdbcResponseFormatter(PRETTY);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99271a0b86d411def80e82f98e44d734c7c29682"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU2MDg3OQ==", "bodyText": "Could we pass request params to SQLQueryRequest and hide all these request parsing logic in the query request class?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#discussion_r539560879", "createdAt": "2020-12-09T18:51:04Z", "author": {"login": "dai-chen"}, "path": "legacy/src/main/java/com/amazon/opendistroforelasticsearch/sql/legacy/plugin/RestSqlAction.java", "diffHunk": "@@ -154,6 +154,10 @@ protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient cli\n                                                                     sqlRequest.getSql(),\n                                                                     request.path(),\n                                                                     format.getFormatName());\n+                // set escape option if csv format\n+                if (format.equals(Format.CSV)) {\n+                    newSqlRequest.escape(SqlRequestParam.getEscapeOption(request.params()));\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99271a0b86d411def80e82f98e44d734c7c29682"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU4MTQ5OA==", "bodyText": "I feel escape is not very clear. Could we use a different name? ex. sanitize=false means skip sanitizing operation.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#discussion_r539581498", "createdAt": "2020-12-09T19:22:40Z", "author": {"login": "dai-chen"}, "path": "docs/user/interfaces/protocol.rst", "diffHunk": "@@ -299,6 +299,39 @@ Result set::\n \tAmber,Duke,32\n \tDale,Adams,33\n \tHattie,Bond,36\n+\n+\n+The formatter sanitizes the csv result with the following rules:\n+1. If a header cell or data cell is starting with special character including '+', '-', '=' , '@', the sanitizer will insert a single-quote at the start of the cell.\n+2. If there exists one or more commas (','), the sanitizer will quote the cell with double quotes.\n+\n+For example::\n+\n+    >> curl -H 'Content-Type: application/json' -X PUT localhost:9200/userdata/_doc/1?refresh=true -d '{\n+      \"+firstname\": \"-Hattie\",\n+      \"=lastname\": \"@Bond\",\n+      \"address\": \"671 Bristol Street, Dente, TN\"\n+    }'\n+\t>> curl -H 'Content-Type: application/json' -X POST localhost:9200/_opendistro/_sql?format=csv -d '{\n+\t  \"query\" : \"SELECT firstname, lastname, address FROM userdata\"\n+\t}'\n+\n+Result set::\n+\n+    '+firstname,'=lastname,address\n+    'Hattie,'@Bond,\"671 Bristol Street, Dente, TN\"\n+\n+\n+To escape the sanitize and keep the csv result as the original, you can add the escape param and set it to true value. For example::\n+\n+\t>> curl -H 'Content-Type: application/json' -X POST localhost:9200/_opendistro/_sql?format=csv&escape=true -d '{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99271a0b86d411def80e82f98e44d734c7c29682"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU5MTg1Mw==", "bodyText": "Could you double check in CSV should we use JDK's platform independent separator or not? https://stackoverflow.com/questions/207947/how-do-i-get-a-platform-dependent-new-line-character", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#discussion_r539591853", "createdAt": "2020-12-09T19:38:33Z", "author": {"login": "dai-chen"}, "path": "protocol/src/main/java/com/amazon/opendistroforelasticsearch/sql/protocol/response/format/CsvResponseFormatter.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.protocol.response.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.protocol.response.QueryResult;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Singular;\n+\n+@RequiredArgsConstructor\n+public class CsvResponseFormatter implements ResponseFormatter<QueryResult> {\n+  private static final String INLINE_SEPARATOR = \",\";\n+  private static final String INTERLINE_SEPARATOR = \"\\n\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99271a0b86d411def80e82f98e44d734c7c29682"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "248dfec283734e30d3b00d6ddcb03906bfd1b04c", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/248dfec283734e30d3b00d6ddcb03906bfd1b04c", "committedDate": "2020-12-10T00:19:45Z", "message": "addressed comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81c94aa8a1130728e9926271f76a52fa63bc4e40", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/81c94aa8a1130728e9926271f76a52fa63bc4e40", "committedDate": "2020-12-10T01:08:52Z", "message": "added responseParams override method to sql and ppl stats actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea62f08c2c75bae3a682e3e9d7cbfdef78bb5343", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ea62f08c2c75bae3a682e3e9d7cbfdef78bb5343", "committedDate": "2020-12-10T20:03:43Z", "message": "added unit test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c628a94694e12122185c335376947069a75ef1e", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/4c628a94694e12122185c335376947069a75ef1e", "committedDate": "2020-12-10T20:26:14Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzE1OTQ5", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#pullrequestreview-549715949", "createdAt": "2020-12-11T00:24:17Z", "commit": {"oid": "4c628a94694e12122185c335376947069a75ef1e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMDoyNDoxOFrOIDjjqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMDoyNDoxOFrOIDjjqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5OTIxMA==", "bodyText": "Just curious why not just pass this request to createQueryResponseListener()? Any reason it has to be a class field?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#discussion_r540599210", "createdAt": "2020-12-11T00:24:18Z", "author": {"login": "dai-chen"}, "path": "legacy/src/main/java/com/amazon/opendistroforelasticsearch/sql/legacy/plugin/RestSQLQueryAction.java", "diffHunk": "@@ -93,6 +105,7 @@ protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient nod\n    * @return            channel consumer\n    */\n   public RestChannelConsumer prepareRequest(SQLQueryRequest request, NodeClient nodeClient) {\n+    this.request = request;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c628a94694e12122185c335376947069a75ef1e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2a502479814f8bbe780b099248a213e1b422242", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a2a502479814f8bbe780b099248a213e1b422242", "committedDate": "2020-12-11T02:48:11Z", "message": "addressed comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzgyMDE4", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#pullrequestreview-549782018", "createdAt": "2020-12-11T03:46:26Z", "commit": {"oid": "a2a502479814f8bbe780b099248a213e1b422242"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzo0NjoyNlrOIDn1tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzo0NjoyNlrOIDn1tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2OTM2Ng==", "bodyText": "It should in seperate paragraph, right?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#discussion_r540669366", "createdAt": "2020-12-11T03:46:26Z", "author": {"login": "penghuo"}, "path": "docs/user/interfaces/protocol.rst", "diffHunk": "@@ -299,6 +299,39 @@ Result set::\n \tAmber,Duke,32\n \tDale,Adams,33\n \tHattie,Bond,36\n+\n+\n+The formatter sanitizes the csv result with the following rules:\n+1. If a header cell or data cell is starting with special character including '+', '-', '=' , '@', the sanitizer will insert a single-quote at the start of the cell.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2a502479814f8bbe780b099248a213e1b422242"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Nzg4NjIx", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#pullrequestreview-549788621", "createdAt": "2020-12-11T04:10:02Z", "commit": {"oid": "a2a502479814f8bbe780b099248a213e1b422242"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDoxMDowMlrOIDoSCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDoxMDowMlrOIDoSCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY3NjYxOA==", "bodyText": "In case we already have CsvResult abstraction. Could we make the  code like following\nCsvResult result = new CsvResult(response)\nreturn result.getCsv()", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#discussion_r540676618", "createdAt": "2020-12-11T04:10:02Z", "author": {"login": "penghuo"}, "path": "protocol/src/main/java/com/amazon/opendistroforelasticsearch/sql/protocol/response/format/CsvResponseFormatter.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.protocol.response.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.protocol.response.QueryResult;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Singular;\n+\n+@RequiredArgsConstructor\n+public class CsvResponseFormatter implements ResponseFormatter<QueryResult> {\n+  private static final String INLINE_SEPARATOR = \",\";\n+  private static final String INTERLINE_SEPARATOR = System.lineSeparator();\n+  private static final Set<String> SENSITIVE_CHAR = ImmutableSet.of(\"=\", \"+\", \"-\", \"@\");\n+\n+  private final boolean sanitize;\n+\n+  public CsvResponseFormatter() {\n+    this.sanitize = true;\n+  }\n+\n+  @Override\n+  public String format(QueryResult response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2a502479814f8bbe780b099248a213e1b422242"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Nzg5MTAx", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#pullrequestreview-549789101", "createdAt": "2020-12-11T04:11:35Z", "commit": {"oid": "a2a502479814f8bbe780b099248a213e1b422242"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDoxMTozNVrOIDoT8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDoxMTozNVrOIDoT8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY3NzEwNw==", "bodyText": "could we simply the logic as\nStream<String> headerAndData = (?);\nheaderAndData.stream().collect(Collectors.joining(INTERLINE_SEPARATOR))", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#discussion_r540677107", "createdAt": "2020-12-11T04:11:35Z", "author": {"login": "penghuo"}, "path": "protocol/src/main/java/com/amazon/opendistroforelasticsearch/sql/protocol/response/format/CsvResponseFormatter.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.protocol.response.format;\n+\n+import com.amazon.opendistroforelasticsearch.sql.protocol.response.QueryResult;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Singular;\n+\n+@RequiredArgsConstructor\n+public class CsvResponseFormatter implements ResponseFormatter<QueryResult> {\n+  private static final String INLINE_SEPARATOR = \",\";\n+  private static final String INTERLINE_SEPARATOR = System.lineSeparator();\n+  private static final Set<String> SENSITIVE_CHAR = ImmutableSet.of(\"=\", \"+\", \"-\", \"@\");\n+\n+  private final boolean sanitize;\n+\n+  public CsvResponseFormatter() {\n+    this.sanitize = true;\n+  }\n+\n+  @Override\n+  public String format(QueryResult response) {\n+    CsvResult result = buildCsvResult(response);\n+    String headers = String.join(INLINE_SEPARATOR, result.getHeaders());\n+    ImmutableList.Builder<String> dataLines = new ImmutableList.Builder<>();\n+    result.getData().forEach(line -> dataLines.add(String.join(INLINE_SEPARATOR, line)));\n+    return String.join(\n+        INTERLINE_SEPARATOR, headers, String.join(INTERLINE_SEPARATOR, dataLines.build()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2a502479814f8bbe780b099248a213e1b422242"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84f6f844fbfa5f814435851cb135aeeacb764a4d", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/84f6f844fbfa5f814435851cb135aeeacb764a4d", "committedDate": "2020-12-11T19:25:40Z", "message": "addressed comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNTc2NjU0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/870#pullrequestreview-550576654", "createdAt": "2020-12-11T21:04:15Z", "commit": {"oid": "84f6f844fbfa5f814435851cb135aeeacb764a4d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 577, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}