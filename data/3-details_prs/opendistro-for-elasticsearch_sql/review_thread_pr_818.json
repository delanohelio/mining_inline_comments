{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NDk3NzQx", "number": 818, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoxNDoxOFrOE42pIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoyMjoyMlrOE42wVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDUwOTc4OnYy", "diffSide": "RIGHT", "path": "docs/user/dql/functions.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoxNDoxOFrOHzBV-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo1NDo0OFrOH0KrEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2MTQzNQ==", "bodyText": "The case_value and compare_value could be expression, right? Could we refer the T-SQL definition https://docs.microsoft.com/en-us/sql/t-sql/language-elements/case-transact-sql?view=sql-server-ver15", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/818#discussion_r523261435", "createdAt": "2020-11-13T22:14:18Z", "author": {"login": "penghuo"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -1832,3 +1832,82 @@ Description\n Specifications:\n \n 1. ISNULL(ES_TYPE) -> INTEGER\n+\n+\n+CASE\n+----\n+\n+Description\n+>>>>>>>>>>>\n+\n+``CASE`` statement has two forms with slightly different syntax: Simple Case and Searched Case.\n+\n+Simple case syntax compares a case value with each compare value in ``WHEN`` clause and return its result if matched. Otherwise, result in ``ELSE`` clause is returned (or ``NULL`` if absent). Note that case value, compare value and result can be any expression::\n+\n+   CASE case_value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e25a2308b21bf001509229939056f2781ab65bf"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2Mjg2Ng==", "bodyText": "sure, will do. thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/818#discussion_r524462866", "createdAt": "2020-11-16T17:54:48Z", "author": {"login": "dai-chen"}, "path": "docs/user/dql/functions.rst", "diffHunk": "@@ -1832,3 +1832,82 @@ Description\n Specifications:\n \n 1. ISNULL(ES_TYPE) -> INTEGER\n+\n+\n+CASE\n+----\n+\n+Description\n+>>>>>>>>>>>\n+\n+``CASE`` statement has two forms with slightly different syntax: Simple Case and Searched Case.\n+\n+Simple case syntax compares a case value with each compare value in ``WHEN`` clause and return its result if matched. Otherwise, result in ``ELSE`` clause is returned (or ``NULL`` if absent). Note that case value, compare value and result can be any expression::\n+\n+   CASE case_value", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2MTQzNQ=="}, "originalCommit": {"oid": "0e25a2308b21bf001509229939056f2781ab65bf"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDUyODIyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/analysis/ExpressionAnalyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjoyMjoyMlrOHzBgqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo1NDozOFrOH0KqlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2NDE2OQ==", "bodyText": "Can we merge two different case...when logic in the AstBuilder?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/818#discussion_r523264169", "createdAt": "2020-11-13T22:22:22Z", "author": {"login": "penghuo"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/analysis/ExpressionAnalyzer.java", "diffHunk": "@@ -163,6 +169,43 @@ public Expression visitCompare(Compare node, AnalysisContext context) {\n         repository.compile(functionName, Arrays.asList(left, right));\n   }\n \n+  @Override\n+  public Expression visitCase(Case node, AnalysisContext context) {\n+    List<WhenClause> whens = new ArrayList<>();\n+    for (When when : node.getWhenClauses()) {\n+      if (node.getCaseValue() == null) {\n+        whens.add((WhenClause) analyze(when, context));\n+      } else {\n+        // Merge case value and condition (compare value) into a single equal condition\n+        whens.add((WhenClause) analyze(\n+            new When(\n+                new Function(\"=\", Arrays.asList(node.getCaseValue(), when.getCondition())),\n+                when.getResult()\n+            ), context));\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e25a2308b21bf001509229939056f2781ab65bf"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2Mjc0MQ==", "bodyText": "yeah, we can, but I was thinking make AST close to original form and do this equivalent transform and type check in analyzer together.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/818#discussion_r524462741", "createdAt": "2020-11-16T17:54:38Z", "author": {"login": "dai-chen"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/analysis/ExpressionAnalyzer.java", "diffHunk": "@@ -163,6 +169,43 @@ public Expression visitCompare(Compare node, AnalysisContext context) {\n         repository.compile(functionName, Arrays.asList(left, right));\n   }\n \n+  @Override\n+  public Expression visitCase(Case node, AnalysisContext context) {\n+    List<WhenClause> whens = new ArrayList<>();\n+    for (When when : node.getWhenClauses()) {\n+      if (node.getCaseValue() == null) {\n+        whens.add((WhenClause) analyze(when, context));\n+      } else {\n+        // Merge case value and condition (compare value) into a single equal condition\n+        whens.add((WhenClause) analyze(\n+            new When(\n+                new Function(\"=\", Arrays.asList(node.getCaseValue(), when.getCondition())),\n+                when.getResult()\n+            ), context));\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2NDE2OQ=="}, "originalCommit": {"oid": "0e25a2308b21bf001509229939056f2781ab65bf"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1907, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}