{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5ODMzNTIy", "number": 750, "title": "Added following string functions: regex, substr, substring, ltrim, rtrim, trim, upper, lower, concat, concat_ws, length, strcmp", "bodyText": "Issue #, if available:\n#710\nDescription of changes:\nAdded implementation unit testing, manual IT, and doc updates for the following string functions:\n\nregex\nsubstr\nsubstring\nltrim\nrtrim\ntrim\nupper\nlower\nconcat\nconcat_ws\nlength\nstrcmp\n\nThe following functions have limitations from the specification:\n\ntrim Does not support LEADING/TRAILING/BOTH/FROM commands, only supports string space character trimming\nsubstr/substring Does not support FROM/TO commands, only comma separated values\nconcat/concat_ws Does not support variable arguments being specified, only two strings to concatenate\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-09-19T23:13:17Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750", "merged": true, "mergeCommit": {"oid": "15bc2379977916d25b5e2f9a42635cac0e86fc59"}, "closed": true, "closedAt": "2020-09-24T20:17:05Z", "author": {"login": "lyndonb-bq"}, "timelineItems": {"totalCount": 96, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsMSTQAH2gAyNDg5ODMzNTIyOmZiMmVkOTEyYzhiZmU1MGFiZWQ4ZmJhMTgyZjIxMjU5MDUyMjBjYjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMGtqdAFqTQ5NTkwMzkyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fb2ed912c8bfe50abed8fba182f2125905220cb4", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/fb2ed912c8bfe50abed8fba182f2125905220cb4", "committedDate": "2020-06-17T16:17:36Z", "message": "Bug fix, support long type for aggregation (#522)\n\n* Bug fix, support long type for aggregation\r\n\r\n* change to datetime to JDBC format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "254f2e0a854ba2c05aca159a9f7ff9af9867c22c", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/254f2e0a854ba2c05aca159a9f7ff9af9867c22c", "committedDate": "2020-06-24T00:23:50Z", "message": "Opendistro Release 1.9.0 (#532)\n\n* prepare odfe 1.9\r\n\r\n* Fix all ES 7.8 compile and build errors\r\n\r\n* Revert changes as Lombok is working now\r\n\r\n* Update CustomExternalTestCluster.java\r\n\r\n* Fix license headers check\r\n\r\n* Use splitFieldsByMetadata to separate fields when calling SearchHit constructor\r\n\r\n* More fixes for ODFE 1.9\r\n\r\n* Remove todo statement\r\n\r\n* Add ODFE 1.9.0 release notes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33c6d3e37691e40c19d7d5892318e7ad23a82def", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/33c6d3e37691e40c19d7d5892318e7ad23a82def", "committedDate": "2020-07-06T16:50:33Z", "message": "Rename release notes to use 4 digit versions (#547)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09132da8a214d685d30aefb9faffd32b89a222a5", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/09132da8a214d685d30aefb9faffd32b89a222a5", "committedDate": "2020-07-09T16:27:43Z", "message": "Revert changes ahead of develop branch in master (#551)\n\n* Revert \"Rename release notes to use 4 digit versions (#547)\"\r\n\r\nThis reverts commit 33c6d3e37691e40c19d7d5892318e7ad23a82def.\r\n\r\n* Revert \"Opendistro Release 1.9.0 (#532)\"\r\n\r\nThis reverts commit 254f2e0a854ba2c05aca159a9f7ff9af9867c22c.\r\n\r\n* Revert \"Bug fix, support long type for aggregation (#522)\"\r\n\r\nThis reverts commit fb2ed912c8bfe50abed8fba182f2125905220cb4."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "893cd18fe5ce1fc7d3016c76567ce6e5ca834182", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/893cd18fe5ce1fc7d3016c76567ce6e5ca834182", "committedDate": "2020-07-09T17:08:41Z", "message": "Merge develop branch to master (#553)\n\nMerge develop to master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "923c96d39feb0aab2aab2929abfb5d8edea71e91", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/923c96d39feb0aab2aab2929abfb5d8edea71e91", "committedDate": "2020-07-09T19:35:16Z", "message": "Merge all SQL repos and adjust workflows (#549) (#554)\n\n* merge all sql repos\r\n\r\n* fix test and build workflows\r\n\r\n* fix workbench and odbc path\r\n\r\n* fix workbench and odbc path\r\n\r\n* restructure workbench dir and fix workflows\r\n\r\n* fix workbench workflow\r\n\r\n* fix workbench workflow\r\n\r\n* fix workbench workflow\r\n\r\n* fix workbench workflow\r\n\r\n* fix workbench workflow\r\n\r\n* revert workbench directory structure\r\n\r\n* fix workbench workflow\r\n\r\n* fix workbench workflow\r\n\r\n* fix workbench workflow\r\n\r\n* fix workbench workflow\r\n\r\n* update workbench workflow for release\r\n\r\n* Delete .github/ in sql-workbench directory\r\n\r\n* Add cypress to sql-workbench\r\n\r\n* Sync latest ODBC commits\r\n\r\n* Sync latest workbench commits (will add cypress in separate PR)\r\n\r\n* Add ignored ODBC libs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b33a2ff54f288c1a2bd07911062ec5943e3fe00", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/4b33a2ff54f288c1a2bd07911062ec5943e3fe00", "committedDate": "2020-07-13T15:35:27Z", "message": "add date and time support (#560)\n\n* add date and time support\r\n\r\n* update doc\r\n\r\n* update doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af742934c419158a61dc187d7e99f348a6202126", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/af742934c419158a61dc187d7e99f348a6202126", "committedDate": "2020-07-13T16:48:30Z", "message": "Revert \"add date and time support (#560)\" (#567)\n\nThis reverts commit 4b33a2ff54f288c1a2bd07911062ec5943e3fe00."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baac103889cdff761e60b272c7c2c265420e0b5b", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/baac103889cdff761e60b272c7c2c265420e0b5b", "committedDate": "2020-07-29T21:00:24Z", "message": "resolve conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35e37a3f5f0c00ce98a5e5893b106a4282a392e7", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/35e37a3f5f0c00ce98a5e5893b106a4282a392e7", "committedDate": "2020-07-29T21:19:11Z", "message": "Merge develop to master for ODFE 1.9.0.1 release (#633)\n\nMerge develop to master for ODFE 1.9.0.1 release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed659413b35425715bd243682117599fc9a9b9f", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/0ed659413b35425715bd243682117599fc9a9b9f", "committedDate": "2020-07-29T23:26:29Z", "message": "Merge fixes for github release actions from develop to master (#638)\n\nMerge fixes for github release actions from develop to master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4981e369a96283bf7159499ee9d8b9414de2150", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e4981e369a96283bf7159499ee9d8b9414de2150", "committedDate": "2020-07-30T00:06:33Z", "message": "Fix odbc win32 release workflow for master (#642)\n\nFix odbc win32 release workflow for master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c11125d752fdd5554608de170a3688dcd4ad544c", "author": {"user": {"login": "jordanw-bq", "name": "Jordan Wilson"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c11125d752fdd5554608de170a3688dcd4ad544c", "committedDate": "2020-07-31T21:00:52Z", "message": "add error details for all server communication errors (#645)\n\n- add null check to avoid crashing if details not initialized"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34b979e8beb19ff3c3d4b870597a967667a7eeac", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/34b979e8beb19ff3c3d4b870597a967667a7eeac", "committedDate": "2020-08-04T21:41:47Z", "message": "Revert \"add error details for all server communication errors (#645)\" (#653)\n\nThis reverts commit c11125d752fdd5554608de170a3688dcd4ad544c."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ab1bc8f051c674b963b22b04979791256caf119", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5ab1bc8f051c674b963b22b04979791256caf119", "committedDate": "2020-08-20T17:27:57Z", "message": "Merge pull request #698 from opendistro-for-elasticsearch/develop\n\nMerge develop branch into master to cut odfe1.10 release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8735723beea05a1a235e2907fa6d068baaeee57f", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8735723beea05a1a235e2907fa6d068baaeee57f", "committedDate": "2020-08-20T19:34:27Z", "message": "Merge develop branch into master for od1.10 release (#701)\n\nMerge develop branch into master for od1.10 release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "332ee9c4304de39e0292f6cb6f604d0a7f877fce", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/332ee9c4304de39e0292f6cb6f604d0a7f877fce", "committedDate": "2020-08-20T21:18:45Z", "message": "Merge branch 'develop' of github.com:opendistro-for-elasticsearch/sql"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2939081a1927f8886cd9c16cb03430b6a6352c6e", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2939081a1927f8886cd9c16cb03430b6a6352c6e", "committedDate": "2020-08-20T22:32:12Z", "message": "Merge workflow fix to master for od1.10 release \uff08#704\uff09\n\nMerge workflow fix to master for od1.10 release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e82a917e2492d3774581405e3d9b38555bc9fda", "author": {"user": {"login": "gaiksaya", "name": "Sayali Gaikawad"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9e82a917e2492d3774581405e3d9b38555bc9fda", "committedDate": "2020-09-04T21:32:39Z", "message": "Fix download link in package description (#729)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c6e059f380b6e145012d084f936c3492bfc27c", "author": {"user": {"login": "joshuali925", "name": "Joshua"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/89c6e059f380b6e145012d084f936c3492bfc27c", "committedDate": "2020-09-08T21:26:06Z", "message": "Merge develop to master for ODFE 1.10.1.0 release (#733)\n\nMerge develop to master for ODFE 1.10.1.0 release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "625a178df9d8cb45e21f7694c1a0cda3634633c3", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/625a178df9d8cb45e21f7694c1a0cda3634633c3", "committedDate": "2020-09-19T05:36:04Z", "message": "[1] Initial commit, checking if server build passes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "715e0c17cee1973b0b61f7bf5ea5218d4dd315cb", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/715e0c17cee1973b0b61f7bf5ea5218d4dd315cb", "committedDate": "2020-09-19T05:37:44Z", "message": "[1] Commiting expression documentation with REGEXP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30e676815318da258c278c8c0a50afda947d91ab", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/30e676815318da258c278c8c0a50afda947d91ab", "committedDate": "2020-09-19T05:47:11Z", "message": "[1] Failure with REGEXP doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b52b2bc4feacd8b8419562e881b2629a3d0da1f", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6b52b2bc4feacd8b8419562e881b2629a3d0da1f", "committedDate": "2020-09-19T06:08:29Z", "message": "[1] Moved testing for regexp to binary predicates."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baae0fc3af18a1078378f2632ee6c952aa5e551e", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/baae0fc3af18a1078378f2632ee6c952aa5e551e", "committedDate": "2020-09-19T06:14:08Z", "message": "[1] Updating parser for REGEX"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38a2bb953ec7306f8c83308baf11501a44e16755", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/38a2bb953ec7306f8c83308baf11501a44e16755", "committedDate": "2020-09-19T06:18:32Z", "message": "[1] Parser update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da44ff9585e5a144f6ed0e3211c47d5646633a88", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/da44ff9585e5a144f6ed0e3211c47d5646633a88", "committedDate": "2020-09-19T06:37:58Z", "message": "[1] Making REGEXP like LIKE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04dcacb22e153f163f7a32fcee34d20c194dc4c0", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/04dcacb22e153f163f7a32fcee34d20c194dc4c0", "committedDate": "2020-09-19T06:42:46Z", "message": "[1] Reverting change to legacy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "029122330b26db1bc702d00c04fff8ac9f513a28", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/029122330b26db1bc702d00c04fff8ac9f513a28", "committedDate": "2020-09-19T07:10:17Z", "message": "[1] Checking if same without NOT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd93eaa4c8c26b170856a34a3e5a0a067857a305", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/bd93eaa4c8c26b170856a34a3e5a0a067857a305", "committedDate": "2020-09-19T07:13:48Z", "message": "[1] testing adding to Ast Expr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f246c0f6faf2927365dd7924677b774c47790ed", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/0f246c0f6faf2927365dd7924677b774c47790ed", "committedDate": "2020-09-19T07:23:19Z", "message": "[1] Switching REGEX over to Integer."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bae1c3ae52a0f8f57fd76f2400a59c08222e645", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/4bae1c3ae52a0f8f57fd76f2400a59c08222e645", "committedDate": "2020-09-19T07:23:52Z", "message": "[1] Reversion test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e88f420c747198730535f99d29a856dba18c214", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6e88f420c747198730535f99d29a856dba18c214", "committedDate": "2020-09-19T07:24:05Z", "message": "[1] Add back test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dde4c5d918fa4d66fef946def74f9c0a70e67f0", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/1dde4c5d918fa4d66fef946def74f9c0a70e67f0", "committedDate": "2020-09-19T07:34:52Z", "message": "[1] Fixing spacing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a9475d61c692877f0c0e763dc457b10d4bea83b", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/4a9475d61c692877f0c0e763dc457b10d4bea83b", "committedDate": "2020-09-19T07:37:27Z", "message": "[1] Regexp builder test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50dbd1a42af355a61142c977b58633158e719fc0", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/50dbd1a42af355a61142c977b58633158e719fc0", "committedDate": "2020-09-19T07:43:29Z", "message": "-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "437361e960652156d967250361a18c4c9dce9ec1", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/437361e960652156d967250361a18c4c9dce9ec1", "committedDate": "2020-09-19T07:44:02Z", "message": "-1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "944a8d9d2ebf4d082e74ea958dceb2494cdddaeb", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/944a8d9d2ebf4d082e74ea958dceb2494cdddaeb", "committedDate": "2020-09-19T07:46:48Z", "message": "[1] trying with semicolon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "300f25ce05dd7b7a601743209925f5f372033826", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/300f25ce05dd7b7a601743209925f5f372033826", "committedDate": "2020-09-19T07:53:23Z", "message": "[1] Found the missing link >_<"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7028500bd1f82552b44d572fc6097d9922ab6714", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7028500bd1f82552b44d572fc6097d9922ab6714", "committedDate": "2020-09-19T08:01:12Z", "message": "[1] Functions documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c84b12b91f7619d207aad72ed205548f4ea53c27", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c84b12b91f7619d207aad72ed205548f4ea53c27", "committedDate": "2020-09-19T08:13:50Z", "message": "[1] Fixing documentation mistake."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "077127bb78cfbd12283de6c737fc1a45609cf2a7", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/077127bb78cfbd12283de6c737fc1a45609cf2a7", "committedDate": "2020-09-19T08:24:18Z", "message": "[1] Retesting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dff4ff1366f41b1cd1986ec01c12628bf8b80ea", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8dff4ff1366f41b1cd1986ec01c12628bf8b80ea", "committedDate": "2020-09-19T08:34:37Z", "message": "[1] Trying to debug python"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "accdc63fea7320d5da8899dab473667100c91621", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/accdc63fea7320d5da8899dab473667100c91621", "committedDate": "2020-09-19T08:36:23Z", "message": "[1] more python debug info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "336488385b34774403e8cc96a73c5aa5dcea08f2", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/336488385b34774403e8cc96a73c5aa5dcea08f2", "committedDate": "2020-09-19T08:47:15Z", "message": "[1] Trying again."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "989bcfa9840126b8e41b4fb6ee1776e7ce435ce8", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/989bcfa9840126b8e41b4fb6ee1776e7ce435ce8", "committedDate": "2020-09-19T08:59:18Z", "message": "[1] MOre py inof"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b1fab0989ef2e7e2d0fea1bcb3eb99c951df75e", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/0b1fab0989ef2e7e2d0fea1bcb3eb99c951df75e", "committedDate": "2020-09-19T09:07:08Z", "message": "[1] Fixed except"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f02b69502e13820c735f05aa2e946feed4c54eba", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f02b69502e13820c735f05aa2e946feed4c54eba", "committedDate": "2020-09-19T09:51:23Z", "message": "[1] Simplified concat and concat_ws"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "876fc117d95569a141dbf1ad6a93a6c201d4f74d", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/876fc117d95569a141dbf1ad6a93a6c201d4f74d", "committedDate": "2020-09-19T10:00:35Z", "message": "[1] Added missing stuff to paraser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7274aac9c764f712db50d245cec0336f0a429836", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7274aac9c764f712db50d245cec0336f0a429836", "committedDate": "2020-09-19T17:43:53Z", "message": "[1] Fixed some functions and removed some unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c962ae8aae228f3e0005f63566736b2cafbeedb", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7c962ae8aae228f3e0005f63566736b2cafbeedb", "committedDate": "2020-09-19T18:26:12Z", "message": "[1] Fixed STRCMP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12368752b43ffb0357616534212fba474b1004f2", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/12368752b43ffb0357616534212fba474b1004f2", "committedDate": "2020-09-19T18:29:52Z", "message": "[1] Trying to fix aliasing issue with substring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd9dd325dc2c9651c671a9d5a698f2e7d50f5543", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/dd9dd325dc2c9651c671a9d5a698f2e7d50f5543", "committedDate": "2020-09-19T18:47:09Z", "message": "[1] Fixed stringcompare and substring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8238e421a6d0f5feb27204a4e1a0ee3f1c879f2a", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8238e421a6d0f5feb27204a4e1a0ee3f1c879f2a", "committedDate": "2020-09-19T18:49:06Z", "message": "[1] REmoving unused imorts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f1d7b2a0e5331117d7557719693d2de44efc036", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3f1d7b2a0e5331117d7557719693d2de44efc036", "committedDate": "2020-09-19T18:52:25Z", "message": "[1] Fixed documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97d524d5b97b3d79d6ff034382252eacde2375dd", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/97d524d5b97b3d79d6ff034382252eacde2375dd", "committedDate": "2020-09-19T18:59:45Z", "message": "[1] REGEXP not supported by sqllite so removing these for now."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28600d36c5f0ce784aef66b509c2869076d10da3", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/28600d36c5f0ce784aef66b509c2869076d10da3", "committedDate": "2020-09-19T20:44:15Z", "message": "[1] Removed auto IT and added manual."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dceb32e999391754a6163aeab13d542b2907ad4c", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/dceb32e999391754a6163aeab13d542b2907ad4c", "committedDate": "2020-09-19T21:17:14Z", "message": "[1] Fixed spacing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "571f25b80f37a359152a06a810fa3fbcba57f7fe", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/571f25b80f37a359152a06a810fa3fbcba57f7fe", "committedDate": "2020-09-19T21:27:36Z", "message": "[1] Fixed type definitions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e369eb7d659a4cbe14912748cecc1eddbf7bebb", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8e369eb7d659a4cbe14912748cecc1eddbf7bebb", "committedDate": "2020-09-19T21:42:10Z", "message": "[1] Fixed integer values and ltrim"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c19e0845a4f8ff78759f3fcb09deae85a7d2cf28", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c19e0845a4f8ff78759f3fcb09deae85a7d2cf28", "committedDate": "2020-09-19T21:51:30Z", "message": "[1] COrrecting ltrim again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cf9cacc9a41b549a935b7f425d7214e10b03482", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9cf9cacc9a41b549a935b7f425d7214e10b03482", "committedDate": "2020-09-19T22:42:20Z", "message": "[1] Changed patterns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58553ed89b6755f56de970161dc26eebaf9d878b", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/58553ed89b6755f56de970161dc26eebaf9d878b", "committedDate": "2020-09-19T22:44:41Z", "message": "[1] Fixed some minor issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d2ee9738b2349b72f86ba5c146a897532c9091f", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9d2ee9738b2349b72f86ba5c146a897532c9091f", "committedDate": "2020-09-19T22:47:48Z", "message": "[1] reverting change i didnt make"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyODI4ODY1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#pullrequestreview-492828865", "createdAt": "2020-09-21T17:24:07Z", "commit": {"oid": "9d2ee9738b2349b72f86ba5c146a897532c9091f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoyNDowN1rOHVbE8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoyNDowN1rOHVbE8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyNTc3Ng==", "bodyText": "same with substring?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#discussion_r492225776", "createdAt": "2020-09-21T17:24:07Z", "author": {"login": "penghuo"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/text/TextFunction.java", "diffHunk": "@@ -0,0 +1,235 @@\n+/*\n+ *\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.expression.text;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.INTEGER;\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.STRING;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.define;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.impl;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.nullMissingHandling;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprIntegerValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprStringValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.BuiltinFunctionName;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.BuiltinFunctionRepository;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionResolver;\n+\n+import lombok.experimental.UtilityClass;\n+\n+\n+/**\n+ * The definition of text functions.\n+ * 1) have the clear interface for function define.\n+ * 2) the implementation should rely on ExprValue.\n+ */\n+@UtilityClass\n+public class TextFunction {\n+  /**\n+   * Register String Functions.\n+   *\n+   * @param repository {@link BuiltinFunctionRepository}.\n+   */\n+  public void register(BuiltinFunctionRepository repository) {\n+    repository.register(substr());\n+    repository.register(substring());\n+    repository.register(ltrim());\n+    repository.register(rtrim());\n+    repository.register(trim());\n+    repository.register(lower());\n+    repository.register(upper());\n+    repository.register(concat());\n+    repository.register(concat_ws());\n+    repository.register(length());\n+    repository.register(strcmp());\n+  }\n+\n+  /**\n+   * Gets substring starting at given point, for optional given length.\n+   * Form of this function using keywords instead of comma delimited variables is not supported.\n+   * Supports following signatures:\n+   * (STRING, INTEGER)/(STRING, INTEGER, INTEGER) -> STRING\n+   */\n+  private FunctionResolver substring() {\n+    return define(BuiltinFunctionName.SUBSTRING.getName(),\n+            impl(nullMissingHandling(TextFunction::exprSubstrStart),\n+                    STRING, STRING, INTEGER),\n+            impl(nullMissingHandling(TextFunction::exprSubstrStartLength),\n+                    STRING, STRING, INTEGER, INTEGER));\n+  }\n+\n+  /**\n+   * Gets substring starting at given point, for optional given length.\n+   * Form of this function using keywords instead of comma delimited variables is not supported.\n+   * Supports following signatures:\n+   * (STRING, INTEGER)/(STRING, INTEGER, INTEGER) -> STRING\n+   */\n+  private FunctionResolver substr() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d2ee9738b2349b72f86ba5c146a897532c9091f"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyODMwODI1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#pullrequestreview-492830825", "createdAt": "2020-09-21T17:26:46Z", "commit": {"oid": "9d2ee9738b2349b72f86ba5c146a897532c9091f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoyNjo0NlrOHVbLHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoyNjo0NlrOHVbLHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyNzM1OA==", "bodyText": "minor, add EMPTY_STRING?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#discussion_r492227358", "createdAt": "2020-09-21T17:26:46Z", "author": {"login": "penghuo"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/text/TextFunction.java", "diffHunk": "@@ -0,0 +1,235 @@\n+/*\n+ *\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.expression.text;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.INTEGER;\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.STRING;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.define;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.impl;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.nullMissingHandling;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprIntegerValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprStringValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.BuiltinFunctionName;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.BuiltinFunctionRepository;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionResolver;\n+\n+import lombok.experimental.UtilityClass;\n+\n+\n+/**\n+ * The definition of text functions.\n+ * 1) have the clear interface for function define.\n+ * 2) the implementation should rely on ExprValue.\n+ */\n+@UtilityClass\n+public class TextFunction {\n+  /**\n+   * Register String Functions.\n+   *\n+   * @param repository {@link BuiltinFunctionRepository}.\n+   */\n+  public void register(BuiltinFunctionRepository repository) {\n+    repository.register(substr());\n+    repository.register(substring());\n+    repository.register(ltrim());\n+    repository.register(rtrim());\n+    repository.register(trim());\n+    repository.register(lower());\n+    repository.register(upper());\n+    repository.register(concat());\n+    repository.register(concat_ws());\n+    repository.register(length());\n+    repository.register(strcmp());\n+  }\n+\n+  /**\n+   * Gets substring starting at given point, for optional given length.\n+   * Form of this function using keywords instead of comma delimited variables is not supported.\n+   * Supports following signatures:\n+   * (STRING, INTEGER)/(STRING, INTEGER, INTEGER) -> STRING\n+   */\n+  private FunctionResolver substring() {\n+    return define(BuiltinFunctionName.SUBSTRING.getName(),\n+            impl(nullMissingHandling(TextFunction::exprSubstrStart),\n+                    STRING, STRING, INTEGER),\n+            impl(nullMissingHandling(TextFunction::exprSubstrStartLength),\n+                    STRING, STRING, INTEGER, INTEGER));\n+  }\n+\n+  /**\n+   * Gets substring starting at given point, for optional given length.\n+   * Form of this function using keywords instead of comma delimited variables is not supported.\n+   * Supports following signatures:\n+   * (STRING, INTEGER)/(STRING, INTEGER, INTEGER) -> STRING\n+   */\n+  private FunctionResolver substr() {\n+    return define(BuiltinFunctionName.SUBSTR.getName(),\n+      impl(nullMissingHandling(TextFunction::exprSubstrStart),\n+        STRING, STRING, INTEGER),\n+      impl(nullMissingHandling(TextFunction::exprSubstrStartLength),\n+        STRING, STRING, INTEGER, INTEGER));\n+  }\n+\n+  /**\n+   * Removes leading whitespace from string.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver ltrim() {\n+    return define(BuiltinFunctionName.LTRIM.getName(),\n+            impl(nullMissingHandling((v) -> new ExprStringValue(v.stringValue().stripLeading())),\n+                    STRING, STRING));\n+  }\n+\n+  /**\n+   * Removes trailing whitespace from string.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver rtrim() {\n+    return define(BuiltinFunctionName.RTRIM.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue(v.stringValue().stripTrailing())),\n+                STRING, STRING));\n+  }\n+\n+  /**\n+   * Removes leading and trailing whitespace from string.\n+   * Has option to specify a String to trim instead of whitespace but this is not yet supported.\n+   * Supporting String specification requires finding keywords inside TRIM command.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver trim() {\n+    return define(BuiltinFunctionName.TRIM.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue(v.stringValue().trim())),\n+            STRING, STRING));\n+  }\n+\n+  /**\n+   * Converts String to lowercase.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver lower() {\n+    return define(BuiltinFunctionName.LOWER.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue((v.stringValue().toLowerCase()))),\n+            STRING, STRING)\n+    );\n+  }\n+\n+  /**\n+   * Converts String to uppercase.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver upper() {\n+    return define(BuiltinFunctionName.UPPER.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue((v.stringValue().toUpperCase()))),\n+            STRING, STRING)\n+    );\n+  }\n+\n+  /**\n+   * TODO: https://github.com/opendistro-for-elasticsearch/sql/issues/710\n+   *  Extend to accept variable argument amounts.\n+   * Concatenates a list of Strings.\n+   * Supports following signatures:\n+   * (STRING, STRING) -> STRING\n+   */\n+  private FunctionResolver concat() {\n+    return define(BuiltinFunctionName.CONCAT.getName(),\n+        impl(nullMissingHandling((str1, str2) ->\n+            new ExprStringValue(str1.stringValue() + str2.stringValue())), STRING, STRING, STRING));\n+  }\n+\n+  /**\n+   * TODO: https://github.com/opendistro-for-elasticsearch/sql/issues/710\n+   *  Extend to accept variable argument amounts.\n+   * Concatenates a list of Strings with a separator string.\n+   * Supports following signatures:\n+   * (STRING, STRING, STRING) -> STRING\n+   */\n+  private FunctionResolver concat_ws() {\n+    return define(BuiltinFunctionName.CONCAT_WS.getName(),\n+        impl(nullMissingHandling((sep, str1, str2) ->\n+            new ExprStringValue(str1.stringValue() + sep.stringValue() + str2.stringValue())),\n+                STRING, STRING, STRING, STRING));\n+  }\n+\n+  /**\n+   * Calculates length of String in bytes.\n+   * Supports following signatures:\n+   * STRING -> INTEGER\n+   */\n+  private FunctionResolver length() {\n+    return define(BuiltinFunctionName.LENGTH.getName(),\n+        impl(nullMissingHandling((str) ->\n+            new ExprIntegerValue(str.stringValue().getBytes().length)), INTEGER, STRING));\n+  }\n+\n+  /**\n+   * Does String comparison of two Strings and returns Integer value.\n+   * Supports following signatures:\n+   * (STRING, STRING) -> INTEGER\n+   */\n+  private FunctionResolver strcmp() {\n+    return define(BuiltinFunctionName.STRCMP.getName(),\n+        impl(nullMissingHandling((str1, str2) ->\n+            new ExprIntegerValue(Integer.compare(\n+                str1.stringValue().compareTo(str2.stringValue()), 0))),\n+            INTEGER, STRING, STRING));\n+  }\n+\n+  private static ExprValue exprSubstrStart(ExprValue exprValue, ExprValue start) {\n+    int startIdx = start.integerValue();\n+    if (startIdx == 0) {\n+      return new ExprStringValue(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d2ee9738b2349b72f86ba5c146a897532c9091f"}, "originalPosition": 203}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyODMyNzc0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#pullrequestreview-492832774", "createdAt": "2020-09-21T17:29:23Z", "commit": {"oid": "9d2ee9738b2349b72f86ba5c146a897532c9091f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoyOToyM1rOHVbRYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoyOToyM1rOHVbRYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyODk2MA==", "bodyText": "considering merge whith exprSubstrStart", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#discussion_r492228960", "createdAt": "2020-09-21T17:29:23Z", "author": {"login": "penghuo"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/text/TextFunction.java", "diffHunk": "@@ -0,0 +1,235 @@\n+/*\n+ *\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.expression.text;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.INTEGER;\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.STRING;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.define;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.impl;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.nullMissingHandling;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprIntegerValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprStringValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.BuiltinFunctionName;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.BuiltinFunctionRepository;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionResolver;\n+\n+import lombok.experimental.UtilityClass;\n+\n+\n+/**\n+ * The definition of text functions.\n+ * 1) have the clear interface for function define.\n+ * 2) the implementation should rely on ExprValue.\n+ */\n+@UtilityClass\n+public class TextFunction {\n+  /**\n+   * Register String Functions.\n+   *\n+   * @param repository {@link BuiltinFunctionRepository}.\n+   */\n+  public void register(BuiltinFunctionRepository repository) {\n+    repository.register(substr());\n+    repository.register(substring());\n+    repository.register(ltrim());\n+    repository.register(rtrim());\n+    repository.register(trim());\n+    repository.register(lower());\n+    repository.register(upper());\n+    repository.register(concat());\n+    repository.register(concat_ws());\n+    repository.register(length());\n+    repository.register(strcmp());\n+  }\n+\n+  /**\n+   * Gets substring starting at given point, for optional given length.\n+   * Form of this function using keywords instead of comma delimited variables is not supported.\n+   * Supports following signatures:\n+   * (STRING, INTEGER)/(STRING, INTEGER, INTEGER) -> STRING\n+   */\n+  private FunctionResolver substring() {\n+    return define(BuiltinFunctionName.SUBSTRING.getName(),\n+            impl(nullMissingHandling(TextFunction::exprSubstrStart),\n+                    STRING, STRING, INTEGER),\n+            impl(nullMissingHandling(TextFunction::exprSubstrStartLength),\n+                    STRING, STRING, INTEGER, INTEGER));\n+  }\n+\n+  /**\n+   * Gets substring starting at given point, for optional given length.\n+   * Form of this function using keywords instead of comma delimited variables is not supported.\n+   * Supports following signatures:\n+   * (STRING, INTEGER)/(STRING, INTEGER, INTEGER) -> STRING\n+   */\n+  private FunctionResolver substr() {\n+    return define(BuiltinFunctionName.SUBSTR.getName(),\n+      impl(nullMissingHandling(TextFunction::exprSubstrStart),\n+        STRING, STRING, INTEGER),\n+      impl(nullMissingHandling(TextFunction::exprSubstrStartLength),\n+        STRING, STRING, INTEGER, INTEGER));\n+  }\n+\n+  /**\n+   * Removes leading whitespace from string.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver ltrim() {\n+    return define(BuiltinFunctionName.LTRIM.getName(),\n+            impl(nullMissingHandling((v) -> new ExprStringValue(v.stringValue().stripLeading())),\n+                    STRING, STRING));\n+  }\n+\n+  /**\n+   * Removes trailing whitespace from string.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver rtrim() {\n+    return define(BuiltinFunctionName.RTRIM.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue(v.stringValue().stripTrailing())),\n+                STRING, STRING));\n+  }\n+\n+  /**\n+   * Removes leading and trailing whitespace from string.\n+   * Has option to specify a String to trim instead of whitespace but this is not yet supported.\n+   * Supporting String specification requires finding keywords inside TRIM command.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver trim() {\n+    return define(BuiltinFunctionName.TRIM.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue(v.stringValue().trim())),\n+            STRING, STRING));\n+  }\n+\n+  /**\n+   * Converts String to lowercase.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver lower() {\n+    return define(BuiltinFunctionName.LOWER.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue((v.stringValue().toLowerCase()))),\n+            STRING, STRING)\n+    );\n+  }\n+\n+  /**\n+   * Converts String to uppercase.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver upper() {\n+    return define(BuiltinFunctionName.UPPER.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue((v.stringValue().toUpperCase()))),\n+            STRING, STRING)\n+    );\n+  }\n+\n+  /**\n+   * TODO: https://github.com/opendistro-for-elasticsearch/sql/issues/710\n+   *  Extend to accept variable argument amounts.\n+   * Concatenates a list of Strings.\n+   * Supports following signatures:\n+   * (STRING, STRING) -> STRING\n+   */\n+  private FunctionResolver concat() {\n+    return define(BuiltinFunctionName.CONCAT.getName(),\n+        impl(nullMissingHandling((str1, str2) ->\n+            new ExprStringValue(str1.stringValue() + str2.stringValue())), STRING, STRING, STRING));\n+  }\n+\n+  /**\n+   * TODO: https://github.com/opendistro-for-elasticsearch/sql/issues/710\n+   *  Extend to accept variable argument amounts.\n+   * Concatenates a list of Strings with a separator string.\n+   * Supports following signatures:\n+   * (STRING, STRING, STRING) -> STRING\n+   */\n+  private FunctionResolver concat_ws() {\n+    return define(BuiltinFunctionName.CONCAT_WS.getName(),\n+        impl(nullMissingHandling((sep, str1, str2) ->\n+            new ExprStringValue(str1.stringValue() + sep.stringValue() + str2.stringValue())),\n+                STRING, STRING, STRING, STRING));\n+  }\n+\n+  /**\n+   * Calculates length of String in bytes.\n+   * Supports following signatures:\n+   * STRING -> INTEGER\n+   */\n+  private FunctionResolver length() {\n+    return define(BuiltinFunctionName.LENGTH.getName(),\n+        impl(nullMissingHandling((str) ->\n+            new ExprIntegerValue(str.stringValue().getBytes().length)), INTEGER, STRING));\n+  }\n+\n+  /**\n+   * Does String comparison of two Strings and returns Integer value.\n+   * Supports following signatures:\n+   * (STRING, STRING) -> INTEGER\n+   */\n+  private FunctionResolver strcmp() {\n+    return define(BuiltinFunctionName.STRCMP.getName(),\n+        impl(nullMissingHandling((str1, str2) ->\n+            new ExprIntegerValue(Integer.compare(\n+                str1.stringValue().compareTo(str2.stringValue()), 0))),\n+            INTEGER, STRING, STRING));\n+  }\n+\n+  private static ExprValue exprSubstrStart(ExprValue exprValue, ExprValue start) {\n+    int startIdx = start.integerValue();\n+    if (startIdx == 0) {\n+      return new ExprStringValue(\"\");\n+    }\n+    String str = exprValue.stringValue();\n+    startIdx = (startIdx > 0) ? (startIdx - 1) : (str.length() + startIdx);\n+    if (startIdx > str.length()) {\n+      return new ExprStringValue(\"\");\n+    }\n+\n+    return new ExprStringValue(str.substring(startIdx));\n+  }\n+\n+  private static ExprValue exprSubstrStartLength(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d2ee9738b2349b72f86ba5c146a897532c9091f"}, "originalPosition": 214}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyODQwOTI3", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#pullrequestreview-492840927", "createdAt": "2020-09-21T17:40:15Z", "commit": {"oid": "9d2ee9738b2349b72f86ba5c146a897532c9091f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzo0MDoxNVrOHVbrSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzo0MDoxNVrOHVbrSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIzNTU5Mw==", "bodyText": "duplicate with substrTest", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#discussion_r492235593", "createdAt": "2020-09-21T17:40:15Z", "author": {"login": "penghuo"}, "path": "core/src/test/java/com/amazon/opendistroforelasticsearch/sql/expression/text/TextFunctionTest.java", "diffHunk": "@@ -0,0 +1,347 @@\n+/*\n+ *\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.expression.text;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.data.model.ExprValueUtils.missingValue;\n+import static com.amazon.opendistroforelasticsearch.sql.data.model.ExprValueUtils.nullValue;\n+import static com.amazon.opendistroforelasticsearch.sql.data.model.ExprValueUtils.stringValue;\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.INTEGER;\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.STRING;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.when;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprStringValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.expression.DSL;\n+import com.amazon.opendistroforelasticsearch.sql.expression.Expression;\n+import com.amazon.opendistroforelasticsearch.sql.expression.ExpressionTestBase;\n+import com.amazon.opendistroforelasticsearch.sql.expression.FunctionExpression;\n+import com.amazon.opendistroforelasticsearch.sql.expression.env.Environment;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class TextFunctionTest extends ExpressionTestBase {\n+  @Mock\n+  Environment<Expression, ExprValue> env;\n+\n+  @Mock\n+  Expression nullRef;\n+\n+  @Mock\n+  Expression missingRef;\n+\n+\n+  private static List<SubstringInfo> SUBSTRING_STRINGS = ImmutableList.of(\n+      new SubstringInfo(\"\", 1, 1, \"\"),\n+      new SubstringInfo(\"Quadratically\", 5, null, \"ratically\"),\n+      new SubstringInfo(\"foobarbar\", 4, null, \"barbar\"),\n+      new SubstringInfo(\"Quadratically\", 5, 6, \"ratica\"),\n+      new SubstringInfo(\"Quadratically\", 5, 600, \"ratically\"),\n+      new SubstringInfo(\"Quadratically\", 500, 1, \"\"),\n+      new SubstringInfo(\"Quadratically\", 500, null, \"\"),\n+      new SubstringInfo(\"Sakila\", -3, null, \"ila\"),\n+      new SubstringInfo(\"Sakila\", -5, 3, \"aki\"),\n+      new SubstringInfo(\"Sakila\", -4, 2, \"ki\"),\n+      new SubstringInfo(\"Quadratically\", 0, null, \"\"),\n+      new SubstringInfo(\"Sakila\", 0, 2, \"\"),\n+      new SubstringInfo(\"Sakila\", 2, 0, \"\"),\n+      new SubstringInfo(\"Sakila\", 0, 0, \"\"));\n+  private static List<String> UPPER_LOWER_STRINGS = ImmutableList.of(\n+      \"test\", \" test\", \"test \", \" test \", \"TesT\", \"TEST\", \" TEST\", \"TEST \", \" TEST \", \" \", \"\");\n+  private static List<StringPatternPair> STRING_PATTERN_PAIRS = ImmutableList.of(\n+      new StringPatternPair(\"Michael!\", \"Michael!\"),\n+      new StringPatternPair(\"hello\", \"world\"),\n+      new StringPatternPair(\"world\", \"hello\"));\n+  private static List<String> TRIM_STRINGS = ImmutableList.of(\n+      \" test\", \"     test\", \"test     \", \"test\", \"     test    \", \"\", \" \");\n+  private static List<List<String>> CONCAT_STRING_LISTS = ImmutableList.of(\n+      ImmutableList.of(\"hello\", \"world\"),\n+      ImmutableList.of(\"123\", \"5325\"));\n+\n+  @AllArgsConstructor\n+  @Getter\n+  static class StringPatternPair {\n+    private final String str;\n+    private final String patt;\n+\n+    int strCmpTest() {\n+      return Integer.compare(str.compareTo(patt), 0);\n+    }\n+  }\n+\n+  @AllArgsConstructor\n+  @Getter\n+  static class SubstringInfo {\n+    String expr;\n+    Integer start;\n+    Integer len;\n+    String res;\n+  }\n+\n+  @BeforeEach\n+  public void setup() {\n+    when(nullRef.valueOf(env)).thenReturn(nullValue());\n+    when(missingRef.valueOf(env)).thenReturn(missingValue());\n+  }\n+\n+  @Test\n+  public void substr() {\n+    SUBSTRING_STRINGS.forEach(this::substrTest);\n+\n+    when(nullRef.type()).thenReturn(STRING);\n+    when(missingRef.type()).thenReturn(STRING);\n+    assertEquals(missingValue(), eval(dsl.substr(missingRef, DSL.literal(1))));\n+    assertEquals(nullValue(), eval(dsl.substr(nullRef, DSL.literal(1))));\n+\n+    when(nullRef.type()).thenReturn(INTEGER);\n+    when(missingRef.type()).thenReturn(INTEGER);\n+    assertEquals(missingValue(), eval(dsl.substr(DSL.literal(\"hello\"), missingRef)));\n+    assertEquals(nullValue(), eval(dsl.substr(DSL.literal(\"hello\"), nullRef)));\n+  }\n+\n+  void substrTest(SubstringInfo strInfo) {\n+    FunctionExpression expr;\n+    if (strInfo.getLen() == null) {\n+      expr = dsl.substr(DSL.literal(strInfo.getExpr()), DSL.literal(strInfo.getStart()));\n+    } else {\n+      expr = dsl.substr(DSL.literal(strInfo.getExpr()),\n+          DSL.literal(strInfo.getStart()),\n+          DSL.literal(strInfo.getLen()));\n+    }\n+    assertEquals(STRING, expr.type());\n+    assertEquals(strInfo.getRes(), eval(expr).stringValue());\n+  }\n+\n+  void substringTest(SubstringInfo strInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d2ee9738b2349b72f86ba5c146a897532c9091f"}, "originalPosition": 142}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdcd554ed3ef983497d64a6ce7737ae60fe15137", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/fdcd554ed3ef983497d64a6ce7737ae60fe15137", "committedDate": "2020-09-22T18:22:39Z", "message": "[1] Condensed logic\n[2] Added EMPTY_STRING\n[3] Removed unused function resolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99532e6aa6e0dea4acfb9e8f2d26d03f1b171a6e", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/99532e6aa6e0dea4acfb9e8f2d26d03f1b171a6e", "committedDate": "2020-09-22T18:23:35Z", "message": "[1] Removed SUBSTRING FunctionName."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "334509b640b656a72a5b6b314dbf5b113829bd48", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/334509b640b656a72a5b6b314dbf5b113829bd48", "committedDate": "2020-09-22T18:30:32Z", "message": "[1] Reverted failure issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3cef5b8dea76e8a6e43d784f689a151641a5579", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d3cef5b8dea76e8a6e43d784f689a151641a5579", "committedDate": "2020-09-22T19:28:04Z", "message": "[1] Combined substring and substr test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "539fa2a0db6bd35c08eb39d231b721b9fe32066a", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/539fa2a0db6bd35c08eb39d231b721b9fe32066a", "committedDate": "2020-09-22T19:44:12Z", "message": "[1] Added ppl test and edited caps in textfunctiontest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc244277fbfc732992c07a0a407657b4767a505c", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/fc244277fbfc732992c07a0a407657b4767a505c", "committedDate": "2020-09-22T20:05:48Z", "message": "[1] Testing without source"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5e4d15da936e1b0fca702b92b1c2f88390d8437", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e5e4d15da936e1b0fca702b92b1c2f88390d8437", "committedDate": "2020-09-22T20:06:43Z", "message": "[1] Correcting format of string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fd259daab22878565d186e907390f97b4ce98ca", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7fd259daab22878565d186e907390f97b4ce98ca", "committedDate": "2020-09-22T20:34:05Z", "message": "[1] Testing new queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67088268342c0618bd0d630d058cbf25c45f9c76", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/67088268342c0618bd0d630d058cbf25c45f9c76", "committedDate": "2020-09-22T20:46:01Z", "message": "[1] Adding resource and fixed tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e51aa81924970a5899dbc4424fa1d5f835cf50c8", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e51aa81924970a5899dbc4424fa1d5f835cf50c8", "committedDate": "2020-09-22T21:14:15Z", "message": "[1] Added maapping and adjusted tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cba5aaea5147a5db4ced6b4c086d7ffe9bba46b0", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/cba5aaea5147a5db4ced6b4c086d7ffe9bba46b0", "committedDate": "2020-09-22T21:27:21Z", "message": "[1] minor corrections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85a24e3cc9f6e82702e98de4fd0dd2f083e19c4b", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/85a24e3cc9f6e82702e98de4fd0dd2f083e19c4b", "committedDate": "2020-09-22T21:29:24Z", "message": "[1] Additional debug info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "018da57e0cc7f7f0abd8af61bbec041cbf304264", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/018da57e0cc7f7f0abd8af61bbec041cbf304264", "committedDate": "2020-09-22T21:42:27Z", "message": "[1] Removing unsuspported ppl functions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24066a9e29fbdbd9203182c38eb76e85a72b6493", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/24066a9e29fbdbd9203182c38eb76e85a72b6493", "committedDate": "2020-09-22T21:43:42Z", "message": "[1] Added back unsupported"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10f143d3f57e9c39e3ec67541154ac82c832b491", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/10f143d3f57e9c39e3ec67541154ac82c832b491", "committedDate": "2020-09-22T21:55:35Z", "message": "[1] Checking regex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b918badf13efb9b680533a07a4d39c8641dd0a34", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b918badf13efb9b680533a07a4d39c8641dd0a34", "committedDate": "2020-09-22T22:01:22Z", "message": "[1] Removing printout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fa954c4c9584c7554f78f0c21171ccf5733610b", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3fa954c4c9584c7554f78f0c21171ccf5733610b", "committedDate": "2020-09-23T00:57:16Z", "message": "[1] Trying to fix commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ceb7359b771a0bf8252621703566cb34ba9059e", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/0ceb7359b771a0bf8252621703566cb34ba9059e", "committedDate": "2020-09-23T01:16:16Z", "message": "Revert \"[1] Trying to fix commit\"\n\nThis reverts commit 3fa954c4c9584c7554f78f0c21171ccf5733610b."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b03c6d67617b2acb800e9d4633f54da38a8b83bb", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b03c6d67617b2acb800e9d4633f54da38a8b83bb", "committedDate": "2020-09-23T01:20:29Z", "message": "[1] Pulling develop to fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e879273f3fe4933b40808c8db7ee97940398a7b", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3e879273f3fe4933b40808c8db7ee97940398a7b", "committedDate": "2020-09-23T01:21:51Z", "message": "[1] Adding rest of commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c67ee84b28b720af40f514e4e1935d50a606753", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8c67ee84b28b720af40f514e4e1935d50a606753", "committedDate": "2020-09-23T01:23:12Z", "message": "[1] Adding workflow files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7342fb97f0f1ae5c9ba1dc5d3920a2218e3c6034", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7342fb97f0f1ae5c9ba1dc5d3920a2218e3c6034", "committedDate": "2020-09-23T01:33:44Z", "message": "[1] fixed docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTc5MjY5", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#pullrequestreview-493979269", "createdAt": "2020-09-23T02:06:24Z", "commit": {"oid": "7342fb97f0f1ae5c9ba1dc5d3920a2218e3c6034"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODA1NTU0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#pullrequestreview-494805554", "createdAt": "2020-09-23T15:49:40Z", "commit": {"oid": "7342fb97f0f1ae5c9ba1dc5d3920a2218e3c6034"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTo0OTo0MVrOHW1L6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTo0OTo0MVrOHW1L6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcwMjEyMQ==", "bodyText": "the length=0 is misunderstanding, in Java SDK, the definition like below\n    public String substring(int beginIndex) {\n        return substring(beginIndex, length());\n    }", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#discussion_r493702121", "createdAt": "2020-09-23T15:49:41Z", "author": {"login": "penghuo"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/text/TextFunction.java", "diffHunk": "@@ -0,0 +1,231 @@\n+/*\n+ *\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.expression.text;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.INTEGER;\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.STRING;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.define;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.impl;\n+import static com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionDSL.nullMissingHandling;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprIntegerValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprStringValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.BuiltinFunctionName;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.BuiltinFunctionRepository;\n+import com.amazon.opendistroforelasticsearch.sql.expression.function.FunctionResolver;\n+\n+import lombok.experimental.UtilityClass;\n+\n+\n+/**\n+ * The definition of text functions.\n+ * 1) have the clear interface for function define.\n+ * 2) the implementation should rely on ExprValue.\n+ */\n+@UtilityClass\n+public class TextFunction {\n+  private static String EMPTY_STRING = \"\";\n+\n+  /**\n+   * Register String Functions.\n+   *\n+   * @param repository {@link BuiltinFunctionRepository}.\n+   */\n+  public void register(BuiltinFunctionRepository repository) {\n+    repository.register(substr());\n+    repository.register(substring());\n+    repository.register(ltrim());\n+    repository.register(rtrim());\n+    repository.register(trim());\n+    repository.register(lower());\n+    repository.register(upper());\n+    repository.register(concat());\n+    repository.register(concat_ws());\n+    repository.register(length());\n+    repository.register(strcmp());\n+  }\n+\n+  /**\n+   * Gets substring starting at given point, for optional given length.\n+   * Form of this function using keywords instead of comma delimited variables is not supported.\n+   * Supports following signatures:\n+   * (STRING, INTEGER)/(STRING, INTEGER, INTEGER) -> STRING\n+   */\n+  private FunctionResolver substring() {\n+    return define(BuiltinFunctionName.SUBSTRING.getName(),\n+            impl(nullMissingHandling(TextFunction::exprSubstrStart),\n+                    STRING, STRING, INTEGER),\n+            impl(nullMissingHandling(TextFunction::exprSubstrStartLength),\n+                    STRING, STRING, INTEGER, INTEGER));\n+  }\n+\n+  private FunctionResolver substr() {\n+    return define(BuiltinFunctionName.SUBSTR.getName(),\n+      impl(nullMissingHandling(TextFunction::exprSubstrStart),\n+        STRING, STRING, INTEGER),\n+      impl(nullMissingHandling(TextFunction::exprSubstrStartLength),\n+        STRING, STRING, INTEGER, INTEGER));\n+  }\n+\n+  /**\n+   * Removes leading whitespace from string.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver ltrim() {\n+    return define(BuiltinFunctionName.LTRIM.getName(),\n+            impl(nullMissingHandling((v) -> new ExprStringValue(v.stringValue().stripLeading())),\n+                    STRING, STRING));\n+  }\n+\n+  /**\n+   * Removes trailing whitespace from string.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver rtrim() {\n+    return define(BuiltinFunctionName.RTRIM.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue(v.stringValue().stripTrailing())),\n+                STRING, STRING));\n+  }\n+\n+  /**\n+   * Removes leading and trailing whitespace from string.\n+   * Has option to specify a String to trim instead of whitespace but this is not yet supported.\n+   * Supporting String specification requires finding keywords inside TRIM command.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver trim() {\n+    return define(BuiltinFunctionName.TRIM.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue(v.stringValue().trim())),\n+            STRING, STRING));\n+  }\n+\n+  /**\n+   * Converts String to lowercase.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver lower() {\n+    return define(BuiltinFunctionName.LOWER.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue((v.stringValue().toLowerCase()))),\n+            STRING, STRING)\n+    );\n+  }\n+\n+  /**\n+   * Converts String to uppercase.\n+   * Supports following signatures:\n+   * STRING -> STRING\n+   */\n+  private FunctionResolver upper() {\n+    return define(BuiltinFunctionName.UPPER.getName(),\n+        impl(nullMissingHandling((v) -> new ExprStringValue((v.stringValue().toUpperCase()))),\n+            STRING, STRING)\n+    );\n+  }\n+\n+  /**\n+   * TODO: https://github.com/opendistro-for-elasticsearch/sql/issues/710\n+   *  Extend to accept variable argument amounts.\n+   * Concatenates a list of Strings.\n+   * Supports following signatures:\n+   * (STRING, STRING) -> STRING\n+   */\n+  private FunctionResolver concat() {\n+    return define(BuiltinFunctionName.CONCAT.getName(),\n+        impl(nullMissingHandling((str1, str2) ->\n+            new ExprStringValue(str1.stringValue() + str2.stringValue())), STRING, STRING, STRING));\n+  }\n+\n+  /**\n+   * TODO: https://github.com/opendistro-for-elasticsearch/sql/issues/710\n+   *  Extend to accept variable argument amounts.\n+   * Concatenates a list of Strings with a separator string.\n+   * Supports following signatures:\n+   * (STRING, STRING, STRING) -> STRING\n+   */\n+  private FunctionResolver concat_ws() {\n+    return define(BuiltinFunctionName.CONCAT_WS.getName(),\n+        impl(nullMissingHandling((sep, str1, str2) ->\n+            new ExprStringValue(str1.stringValue() + sep.stringValue() + str2.stringValue())),\n+                STRING, STRING, STRING, STRING));\n+  }\n+\n+  /**\n+   * Calculates length of String in bytes.\n+   * Supports following signatures:\n+   * STRING -> INTEGER\n+   */\n+  private FunctionResolver length() {\n+    return define(BuiltinFunctionName.LENGTH.getName(),\n+        impl(nullMissingHandling((str) ->\n+            new ExprIntegerValue(str.stringValue().getBytes().length)), INTEGER, STRING));\n+  }\n+\n+  /**\n+   * Does String comparison of two Strings and returns Integer value.\n+   * Supports following signatures:\n+   * (STRING, STRING) -> INTEGER\n+   */\n+  private FunctionResolver strcmp() {\n+    return define(BuiltinFunctionName.STRCMP.getName(),\n+        impl(nullMissingHandling((str1, str2) ->\n+            new ExprIntegerValue(Integer.compare(\n+                str1.stringValue().compareTo(str2.stringValue()), 0))),\n+            INTEGER, STRING, STRING));\n+  }\n+\n+  private static ExprValue exprSubstrStart(ExprValue exprValue, ExprValue start) {\n+    int startIdx = start.integerValue();\n+    if (startIdx == 0) {\n+      return new ExprStringValue(EMPTY_STRING);\n+    }\n+    String str = exprValue.stringValue();\n+    return exprSubStr(str, startIdx, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7342fb97f0f1ae5c9ba1dc5d3920a2218e3c6034"}, "originalPosition": 202}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d85c2583749d6d8cf31cb513beca11688a019323", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d85c2583749d6d8cf31cb513beca11688a019323", "committedDate": "2020-09-23T16:07:43Z", "message": "[1] Updated based on PR comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dfd7a675ca1c1f871de7871c3f467b235fa8713", "author": {"user": {"login": "lyndonb-bq", "name": "Lyndon Bauto"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8dfd7a675ca1c1f871de7871c3f467b235fa8713", "committedDate": "2020-09-23T16:21:40Z", "message": "[1] Fixed code so tests pass"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1ODc0MDU5", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#pullrequestreview-495874059", "createdAt": "2020-09-24T19:07:49Z", "commit": {"oid": "8dfd7a675ca1c1f871de7871c3f467b235fa8713"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1OTAzOTIw", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/750#pullrequestreview-495903920", "createdAt": "2020-09-24T19:53:38Z", "commit": {"oid": "8dfd7a675ca1c1f871de7871c3f467b235fa8713"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 651, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}