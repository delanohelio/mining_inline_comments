{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNTcxNTE0", "number": 340, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzoxOToxMlrODXSzjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwMDoyMTowMlrODXTPZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzUxOTUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/visitor/TypeChecker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzoxOToxMlrOFciZPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNzowNzozM1rOFc-AHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2Nzk2Ng==", "bodyText": "David's PR reminds me that some type in convertedDataType doesn't have corresponding type in ESDateType, such as DATETIME and INT. Could you verify if it's an issue or not? I guess UNKNOWN is returned in this case. It is fine for type checking but it may be not what you expect.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/340#discussion_r365467966", "createdAt": "2020-01-10T23:19:12Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/visitor/TypeChecker.java", "diffHunk": "@@ -173,6 +173,11 @@ public Type visitNull() {\n         return UNKNOWN;\n     }\n \n+    @Override\n+    public Type visitConvertedType(String text) {\n+        return ESDataType.typeOf(text);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21de61827f4237100bebf11596aa6e4d6e17429d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkyMDI4Nw==", "bodyText": "Sure, I will add the default type for UNKNOWN use cases when applying the return type.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/340#discussion_r365920287", "createdAt": "2020-01-13T17:07:33Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/visitor/TypeChecker.java", "diffHunk": "@@ -173,6 +173,11 @@ public Type visitNull() {\n         return UNKNOWN;\n     }\n \n+    @Override\n+    public Type visitConvertedType(String text) {\n+        return ESDataType.typeOf(text);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2Nzk2Ng=="}, "originalCommit": {"oid": "21de61827f4237100bebf11596aa6e4d6e17429d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzU5MDc2OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/types/GenericTypeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwMDoyMTowMlrOFcjE_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNzoxMzoxNlrOFc-K6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3OTE2NA==", "bodyText": "is there a need for test cases going the other way around (e.g assertEquals(LONG, LOG.construct(singletonList(DOUBLE))) ?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/340#discussion_r365479164", "createdAt": "2020-01-11T00:21:02Z", "author": {"login": "davidcui1225"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/types/GenericTypeTest.java", "diffHunk": "@@ -34,17 +35,17 @@\n \n     @Test\n     public void passNumberArgToLogShouldReturnNumber() {\n-        assertEquals(NUMBER, LOG.construct(singletonList(NUMBER)));\n+        assertEquals(DOUBLE, LOG.construct(singletonList(NUMBER)));\n     }\n \n     @Test\n     public void passIntegerArgToLogShouldReturnInteger() {\n-        assertEquals(INTEGER, LOG.construct(singletonList(INTEGER)));\n+        assertEquals(DOUBLE, LOG.construct(singletonList(INTEGER)));\n     }\n \n     @Test\n     public void passLongArgToLogShouldReturnLong() {\n-        assertEquals(LONG, LOG.construct(singletonList(LONG)));\n+        assertEquals(DOUBLE, LOG.construct(singletonList(LONG)));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21de61827f4237100bebf11596aa6e4d6e17429d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkyMzA0OQ==", "bodyText": "Done. Change the test case name to passLongArgToLogShouldReturnDouble.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/340#discussion_r365923049", "createdAt": "2020-01-13T17:13:16Z", "author": {"login": "penghuo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/types/GenericTypeTest.java", "diffHunk": "@@ -34,17 +35,17 @@\n \n     @Test\n     public void passNumberArgToLogShouldReturnNumber() {\n-        assertEquals(NUMBER, LOG.construct(singletonList(NUMBER)));\n+        assertEquals(DOUBLE, LOG.construct(singletonList(NUMBER)));\n     }\n \n     @Test\n     public void passIntegerArgToLogShouldReturnInteger() {\n-        assertEquals(INTEGER, LOG.construct(singletonList(INTEGER)));\n+        assertEquals(DOUBLE, LOG.construct(singletonList(INTEGER)));\n     }\n \n     @Test\n     public void passLongArgToLogShouldReturnLong() {\n-        assertEquals(LONG, LOG.construct(singletonList(LONG)));\n+        assertEquals(DOUBLE, LOG.construct(singletonList(LONG)));\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3OTE2NA=="}, "originalCommit": {"oid": "21de61827f4237100bebf11596aa6e4d6e17429d"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2148, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}