{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NzMzNTM1", "number": 635, "title": "Add comparsion operator for SQL", "bodyText": "Description of changes:*\n\nAdd Comparsion operator support for SQL.\nhttps://github.com/penghuo/sql/blob/pr-operator-enhancement/docs/user/dql/expressions.rst#comparison-operators\nRefactor the BinaryPredicateOperator and UnaryPredicateOperator.\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-07-29T22:02:23Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/635", "merged": true, "mergeCommit": {"oid": "ac098c05c6ce3fb86f3833cb4b99273ae343edf4"}, "closed": true, "closedAt": "2020-07-31T15:50:15Z", "author": {"login": "penghuo"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5yN8dgH2gAyNDU4NzMzNTM1OmM2ZmIzMzZmYjliNzZkZTdhNTJjNDAyZmZjNWEwYjEwYjc2ZjUzNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6UK5zAFqTQ1OTE2OTUzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c6fb336fb9b76de7a52c402ffc5a0b10b76f5348", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c6fb336fb9b76de7a52c402ffc5a0b10b76f5348", "committedDate": "2020-07-29T21:50:15Z", "message": "Add comparsion operator for SQL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5608ddbe84d7861c9c365c5a66c46cdd4458dff", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c5608ddbe84d7861c9c365c5a66c46cdd4458dff", "committedDate": "2020-07-29T21:59:44Z", "message": "Merge branch 'develop' into pr-operator-enhancement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjQ3NjE4", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/635#pullrequestreview-458647618", "createdAt": "2020-07-30T18:20:16Z", "commit": {"oid": "c5608ddbe84d7861c9c365c5a66c46cdd4458dff"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODoyMDoxNlrOG5uoOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODoyODoxNlrOG5u5Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4NTk3Ng==", "bodyText": "Duplicate?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/635#discussion_r463185976", "createdAt": "2020-07-30T18:20:16Z", "author": {"login": "dai-chen"}, "path": "docs/user/index.rst", "diffHunk": "@@ -22,6 +22,8 @@ Open Distro for Elasticsearch SQL enables you to extract insights out of Elastic\n   - `Identifiers <general/identifiers.rst>`_\n   - `Data Types <general/datatype.rst>`_\n \n+  - `Data Types <general/datatype.rst>`_", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5608ddbe84d7861c9c365c5a66c46cdd4458dff"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4NjgxNg==", "bodyText": "np: should be :: here and below?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/635#discussion_r463186816", "createdAt": "2020-07-30T18:21:54Z", "author": {"login": "dai-chen"}, "path": "docs/user/dql/expressions.rst", "diffHunk": "@@ -92,6 +92,83 @@ Here is an example for different type of arithmetic expressions::\n     | 3       | 2           | 2           |\n     +---------+-------------+-------------+\n \n+Comparison Operators\n+==================================\n+\n+Description\n+-----------\n+\n+Comparison operators are used to compare values. The MISSING and NULL value comparison has following the rule. MISSING value only equal to MISSING value and less than all the other values. NULL value equals to NULL value, large than MISSING value, but less than all the other values.\n+\n+Operators\n+`````````\n+\n++----------------+--------------------------------+\n+| name           | description                    |\n++----------------+--------------------------------+\n+| >              | Greater than operator          |\n++----------------+--------------------------------+\n+| >=             | Greater than or equal operator |\n++----------------+--------------------------------+\n+| <              | Less than operator             |\n++----------------+--------------------------------+\n+| !=             | Not equal operator             |\n++----------------+--------------------------------+\n+| <=             | Less than or equal operator    |\n++----------------+--------------------------------+\n+| =              | Equal operator                 |\n++----------------+--------------------------------+\n+| LIKE           | Simple pattern matching        |\n++----------------+--------------------------------+\n+| IS NULL        | NULL value test                |\n++----------------+--------------------------------+\n+| IS NOT NULL    | NOT NULL value test            |\n++----------------+--------------------------------+\n+| IS MISSING     | MISSING value test             |\n++----------------+--------------------------------+\n+| IS NOT MISSING | NOT MISSING value test         |\n++----------------+--------------------------------+\n+\n+\n+Basic Comparison Operator\n+-------------------------\n+\n+Here is an example for different type of comparison operators::::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5608ddbe84d7861c9c365c5a66c46cdd4458dff"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MDM3MA==", "bodyText": "So 1 < NULL returns FALSE now?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/635#discussion_r463190370", "createdAt": "2020-07-30T18:28:16Z", "author": {"login": "dai-chen"}, "path": "core/src/test/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/predicate/BinaryPredicateOperatorTest.java", "diffHunk": "@@ -458,46 +458,46 @@ public void test_less_null() {\n     FunctionExpression less = dsl.less(DSL.literal(1),\n         DSL.ref(INT_TYPE_NULL_VALUE_FIELD, INTEGER));\n     assertEquals(BOOLEAN, less.type());\n-    assertEquals(LITERAL_NULL, less.valueOf(valueEnv()));\n+    assertEquals(LITERAL_FALSE, less.valueOf(valueEnv()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5608ddbe84d7861c9c365c5a66c46cdd4458dff"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1c9d031f914f402583dde9dcda69e8dc91de58b", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a1c9d031f914f402583dde9dcda69e8dc91de58b", "committedDate": "2020-07-30T21:00:02Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f3615bb3e2f88fb1c4ec794035ff327c4cf43b9", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2f3615bb3e2f88fb1c4ec794035ff327c4cf43b9", "committedDate": "2020-07-30T23:29:08Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODM0MTEw", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/635#pullrequestreview-458834110", "createdAt": "2020-07-30T23:43:48Z", "commit": {"oid": "2f3615bb3e2f88fb1c4ec794035ff327c4cf43b9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f17208387be564868c998e1f48010024de29ca46", "author": {"user": {"login": "penghuo", "name": "Peng Huo"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f17208387be564868c998e1f48010024de29ca46", "committedDate": "2020-07-31T00:48:53Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MTY5NTM3", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/635#pullrequestreview-459169537", "createdAt": "2020-07-31T13:23:42Z", "commit": {"oid": "f17208387be564868c998e1f48010024de29ca46"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 604, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}