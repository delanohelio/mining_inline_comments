{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzc4MzAy", "number": 345, "title": "Syntax and semantic exceptions handling for unsupported features", "bodyText": "Issue #, if available:\n\n#320\n\nDescription of changes:\nAdded an extra filter in parser to stop the queries with unsupported features going down to the ES engine, the behaviors are throwing SqlFeatureNotImplementedException and sent proper error messages to the users.\n\n\nSample data: kibana_sample_data_flights\n\n\nNested function example:\n\n\nPOST _opendistro/_sql\n{\n  \"query\": \"select abs(max(AvgTicketPrice)) from kibana_sample_data_flights\"\n}\n\n/** Response: */\n{\n  \"error\": {\n    \"reason\": \"There was internal problem at backend\",\n    \"details\": \"Nested function calls with aggregation argument like [abs(max(AvgTicketPrice))] are not supported yet\",\n    \"type\": \"SqlFeatureNotImplementedException\"\n  },\n  \"status\": 503\n}\n\n\nNested aggregate examples:\n\n/** Function with aggregation argument example: */\nPOST _opendistro/_sql\n{\n  \"query\": \"select abs(max(age)) from accounts\"\n}\n\n/** Response: */\n{\n  \"error\": {\n    \"reason\": \"There was internal problem at backend\",\n    \"details\": \"Nested function calls with aggregation argument like [abs(max(age))] are not supported yet\",\n    \"type\": \"SqlFeatureNotImplementedException\"\n  },\n  \"status\": 503\n}\n\n/** Aggregate with function aggregator example: */\nPOST _opendistro/_sql\n{\n  \"query\": \"select max(abs(AvgTicketPrice)) from kibana_sample_data_flights\"\n}\n\n/** Response */\n{\n  \"error\": {\n    \"reason\": \"There was internal problem at backend\",\n    \"details\": \"Aggregation calls with function aggregator like [max(abs(AvgTicketPrice))] are not supported yet\",\n    \"type\": \"SqlFeatureNotImplementedException\"\n  },\n  \"status\": 503\n}\n\n\nUnsupported feature example:\n\nPOST _opendistro/_sql\n{\n  \"query\": \"select AvgTicketPrice DIV DistanceMiles from kibana_sample_data_flights\"\n}\n\n/** Response: */\n{\n  \"error\": {\n    \"reason\": \"There was internal problem at backend\",\n    \"details\": \"Operator [DIV] is not supported yet\",\n    \"type\": \"SqlFeatureNotImplementedException\"\n  },\n  \"status\": 503\n}\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-01-13T23:52:23Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345", "merged": true, "mergeCommit": {"oid": "77efb0b666003881d5d264234c63539e6a558fb4"}, "closed": true, "closedAt": "2020-01-16T20:00:42Z", "author": {"login": "chloe-zh"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb40cs1AH2gAyMzYyMzc4MzAyOmE4MDY5MDA4MDkxYThhNWMxYzA2MTNkNmQ2YTBkOWU0NjQ2YjJhYzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6-vQYAFqTM0NDEzNTQ4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a8069008091a8a5c1c0613d6d6a0d9e4646b2ac5", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a8069008091a8a5c1c0613d6d6a0d9e4646b2ac5", "committedDate": "2020-01-10T01:41:06Z", "message": "Added a filter in semantic layer for unsupported features: nested functions, aggregations with function aggregators, functions with aggregation arguments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0901a325eb551ea37991f0fe2e6e1d061cc2e8c7", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/0901a325eb551ea37991f0fe2e6e1d061cc2e8c7", "committedDate": "2020-01-13T19:19:38Z", "message": "Excluded the special esfunctions that support nested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b91ec765aefa9e81e79094cd577dd7a66b997ccc", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b91ec765aefa9e81e79094cd577dd7a66b997ccc", "committedDate": "2020-01-13T22:12:39Z", "message": "Added unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2206e776bdf836d2f839ce81ea3a31b6e900553", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d2206e776bdf836d2f839ce81ea3a31b6e900553", "committedDate": "2020-01-13T23:00:53Z", "message": "Added integ tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15a17600336b870393da1f6edc17f697eaa805b3", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/15a17600336b870393da1f6edc17f697eaa805b3", "committedDate": "2020-01-13T23:34:16Z", "message": "Merge remote-tracking branch 'origin' into parser-exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c", "committedDate": "2020-01-14T00:18:20Z", "message": "Updated"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjI4Mjk2", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-342228296", "createdAt": "2020-01-14T00:29:42Z", "commit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDoyOTo0MlrOFdI-pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDoyOTo0MlrOFdI-pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEwMDEzNA==", "bodyText": "I'm not sure I completely understand the explanation from the comment- are you saying that these tests throw the SqlFeatureNotImplementedException too quickly currently, which is why so many of them are set to @Ignore?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r366100134", "createdAt": "2020-01-14T00:29:42Z", "author": {"login": "davidcui1225"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/SemanticAnalyzerScalarFunctionTest.java", "diffHunk": "@@ -95,6 +96,7 @@ public void logFunctionCallWithUnknownFieldShouldPass() {\n         validate(\"SELECT LOG(new_field) FROM semantics\");\n     }\n \n+    @Ignore /** nested functions are blocked by throwing SqlFeatureNotImplementedException yet before implemented */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNTg0Njc1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-342584675", "createdAt": "2020-01-14T14:45:52Z", "commit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDo0NTo1MlrOFdZ9Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDo0NTo1MlrOFdZ9Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3ODI3OA==", "bodyText": "Could you add the exception expectation?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r366378278", "createdAt": "2020-01-14T14:45:52Z", "author": {"login": "penghuo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/SemanticAnalyzerOperatorTest.java", "diffHunk": "@@ -55,9 +55,9 @@ public void compareSubstringFunctionCallEqualsToNumberShouldFail() {\n     }\n \n     @Test\n-    public void compareLogAndAbsFunctionCallWithIntegerSmallerThanStringShouldFail() {\n+    public void compareLogFunctionCallWithIntegerSmallerThanStringShouldFail() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNTg1MjU1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-342585255", "createdAt": "2020-01-14T14:46:36Z", "commit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDo0NjozNlrOFdZ-sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDo0NjozNlrOFdZ-sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3ODY3Mg==", "bodyText": "Why ignore the test cases? Should we add the exception assert?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r366378672", "createdAt": "2020-01-14T14:46:36Z", "author": {"login": "penghuo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/SemanticAnalyzerScalarFunctionTest.java", "diffHunk": "@@ -104,21 +106,25 @@ public void substringWithLogFunctionCallWithUnknownFieldShouldPass() {\n                 );\n     }\n \n+    @Ignore /** nested functions are blocked by throwing SqlFeatureNotImplementedException yet before implemented */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNTg1OTY4", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-342585968", "createdAt": "2020-01-14T14:47:31Z", "commit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDo0NzozMVrOFdaArw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDo0NzozMVrOFdaArw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3OTE4Mw==", "bodyText": "Could you also add the exception message assert?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r366379183", "createdAt": "2020-01-14T14:47:31Z", "author": {"login": "penghuo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/visitor/AntlrSqlParseTreeVisitorTest.java", "diffHunk": "@@ -74,6 +74,42 @@ public void selectStarShouldReturnEmptyProductAsQueryVisitingResult() {\n         Assert.assertTrue(result.isCompatible(new Product(emptyList())));\n     }\n \n+    @Test(expected = SqlFeatureNotImplementedException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNTk0NzU1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-342594755", "createdAt": "2020-01-14T14:58:27Z", "commit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDo1ODoyOFrOFdabtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNDo1ODoyOFrOFdabtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM4NjEwMw==", "bodyText": "COUNT?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r366386103", "createdAt": "2020-01-14T14:58:28Z", "author": {"login": "penghuo"}, "path": "src/main/antlr/OpenDistroSqlParser.g4", "diffHunk": "@@ -324,20 +336,29 @@ aggregateWindowedFunction\n     | COUNT '(' aggregator=DISTINCT functionArgs ')'\n     ;\n \n+functionAsAggregatorFunction\n+    : (AVG | MAX | MIN | SUM)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNjEyNTcy", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-342612572", "createdAt": "2020-01-14T15:21:08Z", "commit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNToyMTowOFrOFdbPvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNToyMTowOFrOFdbPvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5OTQyMQ==", "bodyText": "why remove the functionCall from args?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r366399421", "createdAt": "2020-01-14T15:21:08Z", "author": {"login": "penghuo"}, "path": "src/main/antlr/OpenDistroSqlParser.g4", "diffHunk": "@@ -324,20 +336,29 @@ aggregateWindowedFunction\n     | COUNT '(' aggregator=DISTINCT functionArgs ')'\n     ;\n \n+functionAsAggregatorFunction\n+    : (AVG | MAX | MIN | SUM)\n+      '(' aggregator=(ALL | DISTINCT)? functionCall ')'\n+    ;\n+\n scalarFunctionName\n     : functionNameBase\n     ;\n \n functionArgs\n-    : (constant | fullColumnName | functionCall | expression)\n+    : (constant | fullColumnName | expression)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb49dbf1f3b9b0ef7b006113a3f10343bd8018c"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "febce1d84efe33dd28e6c45f95eaff2e6c8ce1e8", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/febce1d84efe33dd28e6c45f95eaff2e6c8ce1e8", "committedDate": "2020-01-14T18:41:44Z", "message": "Added COUNT in function-nested aggregates; added error msg assertions to the tests; corrected explanation for tests to ignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyODQ5OTAz", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-342849903", "createdAt": "2020-01-14T21:27:45Z", "commit": {"oid": "febce1d84efe33dd28e6c45f95eaff2e6c8ce1e8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyNzo0NVrOFdmVjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMTozNDoyOVrOFdmgrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU4MTEzMw==", "bodyText": "As my understanding, the changes are temporary and may be reverted later. Could you comment it out rather than remove it and put new rules you added together (probably better with comments explaining why)? Just in case someone else would make change on top of yours and hard to track only by commit history.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r366581133", "createdAt": "2020-01-14T21:27:45Z", "author": {"login": "dai-chen"}, "path": "src/main/antlr/OpenDistroSqlParser.g4", "diffHunk": "@@ -324,20 +336,30 @@ aggregateWindowedFunction\n     | COUNT '(' aggregator=DISTINCT functionArgs ')'\n     ;\n \n+functionAsAggregatorFunction\n+    : (AVG | MAX | MIN | SUM)\n+      '(' aggregator=(ALL | DISTINCT)? functionCall ')'\n+    | COUNT '(' aggregator=(ALL | DISTINCT)? functionCall ')'\n+    ;\n+\n scalarFunctionName\n     : functionNameBase\n     ;\n \n functionArgs\n-    : (constant | fullColumnName | functionCall | expression)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "febce1d84efe33dd28e6c45f95eaff2e6c8ce1e8"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU4Mzk4MA==", "bodyText": "Same suggestion for the new code you're adding here: could you move them to another class, ex. UnsupportedFunction?\nBtw, for another option, could you explore the possibility of intercepting and checking what you're interested in an implementation class of GenericSqlParseTreeVisitor without touching grammar file? I think at least it's doable for unsupported function and operator which can help you minimize the changes.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r366583980", "createdAt": "2020-01-14T21:34:29Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/antlr/visitor/AntlrSqlParseTreeVisitor.java", "diffHunk": "@@ -217,11 +231,37 @@ public T visitUdfFunctionCall(UdfFunctionCallContext ctx) {\n         return reduce(func, ctx.functionArgs());\n     }\n \n-    // This check should be able to accomplish in grammar\n+    /**\n+     * The scalar function calls are separated into (a)typical function calls; (b)nested function calls with functions\n+     * as arguments, like abs(log(...)); (c)aggregations with functions as aggregators, like max(abs(....)).\n+     * Currently, we do not support nested functions or nested aggregations, aka (b) and (c).\n+     * However, for the special EsFunctions included in the [supportedNestedFunctions] set, we have supported them in\n+     * nested function calls and aggregations (b&c). Besides, the math constants included in the [mathConstants] set\n+     * are regraded as scalar functions, but they are working well in the painless script.\n+     *\n+     * Thus, the types of functions to throw exceptions:\n+     * (I)case (b) except that the arguments are from the [mathConstants] set;\n+     * (II) case (b) except that the arguments are from the [supportedNestedFunctions] set;\n+     * (III) case (c) except that the aggregators are from thet [supportedNestedFunctions] set.\n+     */\n     @Override\n     public T visitScalarFunctionCall(ScalarFunctionCallContext ctx) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "febce1d84efe33dd28e6c45f95eaff2e6c8ce1e8"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a00a97e1340be43698d9f30cada3846ea185394", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5a00a97e1340be43698d9f30cada3846ea185394", "committedDate": "2020-01-15T05:02:23Z", "message": "Update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTkyOTE2", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-343592916", "createdAt": "2020-01-15T23:35:21Z", "commit": {"oid": "5a00a97e1340be43698d9f30cada3846ea185394"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzozNToyMlrOFeJ2JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMzo0ODowMlrOFeKDkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2MjkxNw==", "bodyText": "I think you can put the comment into reason field, ex.@Ignore(\"Test set ...\")", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r367162917", "createdAt": "2020-01-15T23:35:22Z", "author": {"login": "dai-chen"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/antlr/semantic/SemanticAnalyzerScalarFunctionTest.java", "diffHunk": "@@ -95,6 +96,7 @@ public void logFunctionCallWithUnknownFieldShouldPass() {\n         validate(\"SELECT LOG(new_field) FROM semantics\");\n     }\n \n+    @Ignore /** Test set to ignore due to nested functions not supported and blocked by throwing SqlFeatureNotImplementedException */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a00a97e1340be43698d9f30cada3846ea185394"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE2NjM1NQ==", "bodyText": "Thanks for the changes! And we can make it better. Sorry I didn't make it clear at first.\nclass AntlrSqlParseTreeVisitor {\n    public T visitScalarFunctionCall(ScalarFunctionCallContext ctx) {\n        xxx.verify(ctx);\n        T func = visit(ctx.scalarFunctionName());\n        return reduce(func, ctx.functionArgs());\n    }\n\n    public T visitMathOperator(MathOperatorContext ctx) {\n        xxx.verify(ctx);\n        return super.visitMathOperator(ctx);\n    }\n    ...\n}\n\nclass XXX { // Need a good name for this abstraction (semantics that we don't support for now).\n    private static final Set<String> mathConstants, unsupportedFunctions ...\n\n    public void verify(ScalarFunctionCallContext ctx) {\n        ...\n    }\n\n    public void verify(MathOperatorContext ctx) {\n        if (unsupportedOperators.contains(StringUtils.toLower(ctx.getText())))\n            throw new SqlFeatureNotImplementedException(...);\n    }\n\n   ...\n}", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#discussion_r367166355", "createdAt": "2020-01-15T23:48:02Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/antlr/visitor/AntlrSqlParseTreeVisitor.java", "diffHunk": "@@ -217,11 +231,37 @@ public T visitUdfFunctionCall(UdfFunctionCallContext ctx) {\n         return reduce(func, ctx.functionArgs());\n     }\n \n-    // This check should be able to accomplish in grammar\n+    /**\n+     * The scalar function calls are separated into (a)typical function calls; (b)nested function calls with functions\n+     * as arguments, like abs(log(...)); (c)aggregations with functions as aggregators, like max(abs(....)).\n+     * Currently, we do not support nested functions or nested aggregations, aka (b) and (c).\n+     * However, for the special EsFunctions included in the [supportedNestedFunctions] set, we have supported them in\n+     * nested function calls and aggregations (b&c). Besides, the math constants included in the [mathConstants] set\n+     * are regraded as scalar functions, but they are working well in the painless script.\n+     *\n+     * Thus, the types of functions to throw exceptions:\n+     * (I)case (b) except that the arguments are from the [mathConstants] set;\n+     * (II) case (b) except that the arguments are from the [supportedNestedFunctions] set;\n+     * (III) case (c) except that the aggregators are from thet [supportedNestedFunctions] set.\n+     */\n     @Override\n     public T visitScalarFunctionCall(ScalarFunctionCallContext ctx) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU4Mzk4MA=="}, "originalCommit": {"oid": "febce1d84efe33dd28e6c45f95eaff2e6c8ce1e8"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261753d795ca8ad0be78f03bcac6961230d6a82c", "author": {"user": null}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/261753d795ca8ad0be78f03bcac6961230d6a82c", "committedDate": "2020-01-16T07:05:46Z", "message": "Update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MTEwMDA1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-344110005", "createdAt": "2020-01-16T18:04:53Z", "commit": {"oid": "261753d795ca8ad0be78f03bcac6961230d6a82c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MTM1NDg5", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/345#pullrequestreview-344135489", "createdAt": "2020-01-16T18:48:16Z", "commit": {"oid": "261753d795ca8ad0be78f03bcac6961230d6a82c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 732, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}