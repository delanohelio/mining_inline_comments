{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNDk3MTU0", "number": 536, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODo1NjoyMVrOEKPFqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODo1NjoyMVrOEKPFqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTY4NDI3OnYy", "diffSide": "RIGHT", "path": "integ-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/correctness/runner/resultset/Row.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODo1NjoyMVrOGrKSyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNToyNjoyOFrOGrqwLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxMDYwMQ==", "bodyText": "Shall we also include missing values in compareTo?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/536#discussion_r447910601", "createdAt": "2020-06-30T18:56:21Z", "author": {"login": "chloe-zh"}, "path": "integ-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/correctness/runner/resultset/Row.java", "diffHunk": "@@ -56,4 +57,32 @@ private Object roundFloatNum(Object value) {\n     return value;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public int compareTo(Row other) {\n+    List<Object> thisObjects = new ArrayList<>(values);\n+    List<Object> otherObjects = new ArrayList<>(other.values);\n+\n+    for (int i = 0; i < thisObjects.size(); i++) {\n+      Object thisObject = thisObjects.get(i);\n+      Object otherObject = otherObjects.get(i);\n+\n+      /*\n+       * Only one is null, otherwise (both null or non-null) go ahead.\n+       * Always consider NULL is greater which means NULL comes last in ASC and first in DESC\n+       */\n+      if (thisObject == null ^ otherObject == null) {\n+        return thisObject == null ? 1 : -1;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15f972d332b13ccdbd23823495158579f25fd08a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ0MjQxMw==", "bodyText": "Shall we also include missing values in compareTo?\n\n\nShall we also include missing values in compareTo?\n\nSure, the object here is what we get from JSON response. So I think no matter missing value absent or present as ex.\"MISSING\", it will be taken care by the if below. Let me know if any case I miss. Thanks.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/536#discussion_r448442413", "createdAt": "2020-07-01T15:26:28Z", "author": {"login": "dai-chen"}, "path": "integ-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/correctness/runner/resultset/Row.java", "diffHunk": "@@ -56,4 +57,32 @@ private Object roundFloatNum(Object value) {\n     return value;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public int compareTo(Row other) {\n+    List<Object> thisObjects = new ArrayList<>(values);\n+    List<Object> otherObjects = new ArrayList<>(other.values);\n+\n+    for (int i = 0; i < thisObjects.size(); i++) {\n+      Object thisObject = thisObjects.get(i);\n+      Object otherObject = otherObjects.get(i);\n+\n+      /*\n+       * Only one is null, otherwise (both null or non-null) go ahead.\n+       * Always consider NULL is greater which means NULL comes last in ASC and first in DESC\n+       */\n+      if (thisObject == null ^ otherObject == null) {\n+        return thisObject == null ? 1 : -1;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxMDYwMQ=="}, "originalCommit": {"oid": "15f972d332b13ccdbd23823495158579f25fd08a"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2122, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}