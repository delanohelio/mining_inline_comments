{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1ODMwMDYw", "number": 550, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDoxNzo0NlrOEMo-tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDoxNzo0NlrOEMo-tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjg5NzgxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/type/WideningTypeRule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDoxNzo0NlrOGu3wbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjowMToxOVrOGu6tPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwMTE5Nw==", "bodyText": "Unfinished comment \"distance(FLOAT, INTEGER) =\" ?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/550#discussion_r451801197", "createdAt": "2020-07-08T20:17:46Z", "author": {"login": "dai-chen"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/type/WideningTypeRule.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ *\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.data.type;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.UNKNOWN;\n+\n+import com.amazon.opendistroforelasticsearch.sql.exception.ExpressionEvaluationException;\n+import lombok.experimental.UtilityClass;\n+\n+/**\n+ * The definition of widening type rule for expression value.\n+ * ExprType     Widens to data types\n+ * INTEGER      LONG, FLOAT, DOUBLE\n+ * LONG         FLOAT, DOUBLE\n+ * FLOAT        DOUBLE\n+ * DOUBLE       DOUBLE\n+ * STRING       STRING\n+ * BOOLEAN      BOOLEAN\n+ * ARRAY        ARRAY\n+ * STRUCT       STRUCT\n+ */\n+@UtilityClass\n+public class WideningTypeRule {\n+  public static final int IMPOSSIBLE_WIDENING = Integer.MAX_VALUE;\n+  public static final int TYPE_EQUAL = 0;\n+\n+  /**\n+   * The widening distance is calculated from the leaf to root.\n+   * e.g. distance(INTEGER, FLOAT) = 2, but distance(FLOAT, INTEGER) =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d217881440c5b4257083e5e9c14fdf99b042573b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0OTUzMw==", "bodyText": "done.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/550#discussion_r451849533", "createdAt": "2020-07-08T22:01:19Z", "author": {"login": "penghuo"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/type/WideningTypeRule.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ *\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.data.type;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType.UNKNOWN;\n+\n+import com.amazon.opendistroforelasticsearch.sql.exception.ExpressionEvaluationException;\n+import lombok.experimental.UtilityClass;\n+\n+/**\n+ * The definition of widening type rule for expression value.\n+ * ExprType     Widens to data types\n+ * INTEGER      LONG, FLOAT, DOUBLE\n+ * LONG         FLOAT, DOUBLE\n+ * FLOAT        DOUBLE\n+ * DOUBLE       DOUBLE\n+ * STRING       STRING\n+ * BOOLEAN      BOOLEAN\n+ * ARRAY        ARRAY\n+ * STRUCT       STRUCT\n+ */\n+@UtilityClass\n+public class WideningTypeRule {\n+  public static final int IMPOSSIBLE_WIDENING = Integer.MAX_VALUE;\n+  public static final int TYPE_EQUAL = 0;\n+\n+  /**\n+   * The widening distance is calculated from the leaf to root.\n+   * e.g. distance(INTEGER, FLOAT) = 2, but distance(FLOAT, INTEGER) =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwMTE5Nw=="}, "originalCommit": {"oid": "d217881440c5b4257083e5e9c14fdf99b042573b"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2129, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}