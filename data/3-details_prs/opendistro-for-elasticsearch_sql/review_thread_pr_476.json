{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwOTA5MzA1", "number": 476, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODoxODoxMFrOD-Vhhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODoxODoxMFrOD-Vhhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjkwOTUxOnYy", "diffSide": "RIGHT", "path": "protocol/src/main/java/com/amazon/opendistroforelasticsearch/sql/protocol/response/QueryResponse.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODoxODoxMFrOGYYJXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoyMjo1MlrOGYceWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxNDYyMA==", "bodyText": "it is possible the ExprValue has missing value, in this case, the type value may missing.\ne.g. [{\"name\": \"susan\"}, {\"name\": \"bob\", \"age\":30}].\nit may required the type info from the planner?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/476#discussion_r428214620", "createdAt": "2020-05-20T18:18:10Z", "author": {"login": "penghuo"}, "path": "protocol/src/main/java/com/amazon/opendistroforelasticsearch/sql/protocol/response/QueryResponse.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.protocol.response;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValueUtils;\n+import lombok.RequiredArgsConstructor;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/**\n+ * Query response that encapsulates query results and isolate {@link ExprValue} related from formatter implementation.\n+ */\n+@RequiredArgsConstructor\n+public class QueryResponse implements Iterable<Object[]> {\n+\n+    /**\n+     * Results which are collection of expression\n+     */\n+    private final Collection<ExprValue> exprValues;\n+\n+\n+    /**\n+     * @return  size of results\n+     */\n+    public int size() {\n+        return exprValues.size();\n+    }\n+\n+    /**\n+     * Parse column name from results\n+     * @return  mapping from column names to its expression type\n+     */\n+    public Map<String, String> columnNameTypes() {\n+        if (exprValues.isEmpty()) {\n+            return Collections.emptyMap();\n+        }\n+\n+        Map<String, ExprValue> tupleValue = getFirstTupleValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e457537f0845baefc6c20428cbeec149de91d1a"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4NDY1Nw==", "bodyText": "let's add Todo here.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/476#discussion_r428284657", "createdAt": "2020-05-20T20:21:02Z", "author": {"login": "penghuo"}, "path": "protocol/src/main/java/com/amazon/opendistroforelasticsearch/sql/protocol/response/QueryResponse.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.protocol.response;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValueUtils;\n+import lombok.RequiredArgsConstructor;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/**\n+ * Query response that encapsulates query results and isolate {@link ExprValue} related from formatter implementation.\n+ */\n+@RequiredArgsConstructor\n+public class QueryResponse implements Iterable<Object[]> {\n+\n+    /**\n+     * Results which are collection of expression\n+     */\n+    private final Collection<ExprValue> exprValues;\n+\n+\n+    /**\n+     * @return  size of results\n+     */\n+    public int size() {\n+        return exprValues.size();\n+    }\n+\n+    /**\n+     * Parse column name from results\n+     * @return  mapping from column names to its expression type\n+     */\n+    public Map<String, String> columnNameTypes() {\n+        if (exprValues.isEmpty()) {\n+            return Collections.emptyMap();\n+        }\n+\n+        Map<String, ExprValue> tupleValue = getFirstTupleValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxNDYyMA=="}, "originalCommit": {"oid": "3e457537f0845baefc6c20428cbeec149de91d1a"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4NTUyOQ==", "bodyText": "Sure, I'm adding comment and a disabled UT. Thanks!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/476#discussion_r428285529", "createdAt": "2020-05-20T20:22:52Z", "author": {"login": "dai-chen"}, "path": "protocol/src/main/java/com/amazon/opendistroforelasticsearch/sql/protocol/response/QueryResponse.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ *    Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *    You may not use this file except in compliance with the License.\n+ *    A copy of the License is located at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    or in the \"license\" file accompanying this file. This file is distributed\n+ *    on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *    express or implied. See the License for the specific language governing\n+ *    permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.protocol.response;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValueUtils;\n+import lombok.RequiredArgsConstructor;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/**\n+ * Query response that encapsulates query results and isolate {@link ExprValue} related from formatter implementation.\n+ */\n+@RequiredArgsConstructor\n+public class QueryResponse implements Iterable<Object[]> {\n+\n+    /**\n+     * Results which are collection of expression\n+     */\n+    private final Collection<ExprValue> exprValues;\n+\n+\n+    /**\n+     * @return  size of results\n+     */\n+    public int size() {\n+        return exprValues.size();\n+    }\n+\n+    /**\n+     * Parse column name from results\n+     * @return  mapping from column names to its expression type\n+     */\n+    public Map<String, String> columnNameTypes() {\n+        if (exprValues.isEmpty()) {\n+            return Collections.emptyMap();\n+        }\n+\n+        Map<String, ExprValue> tupleValue = getFirstTupleValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxNDYyMA=="}, "originalCommit": {"oid": "3e457537f0845baefc6c20428cbeec149de91d1a"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2081, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}