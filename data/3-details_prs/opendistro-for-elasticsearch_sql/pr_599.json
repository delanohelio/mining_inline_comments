{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNzgzMDUy", "number": 599, "title": "Support trigonometric functions acos, asin, atan, atan2, cos, cot, degrees, radians, sin, tan", "bodyText": "Issue #, if available:\nDescription of changes:\n\n\nACOS\nUsage: acos(x) calculate the arc cosine of x. Returns NULL if x is not in the range -1 to 1.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nASIN\nUsage: asin(x) calculate the arc sine of x. Returns NULL if x is not in the range -1 to 1.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nATAN\nUsage:  atan(x) calculates the arc tangent of x. atan(y, x) calculates the arc tangent of y / x, except that the signs of both arguments are used to determine the quadrant of the result.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nATAN2\nUsage: atan2(y, x) calculates the arc tangent of y / x, except that the signs of both arguments are used to determine the quadrant of the result.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nCOS\nUsage: cos(x) calculate the cosine of x, where x is given in radians.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nCOT\nUsage: cot(x) calculate the cotangent of x.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nDEGREES\nUsage: degrees(x) converts x from radians to degrees.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nRADIANS\nUsage: radians(x) converts x from degrees to radians.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nSIN\nUsage: sin(x) calculate the sine of x, where x is given in radians.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nTAN\nUsage: tan(x) calculate the tangent of x, where x is given in radians.\nArgument type: INTEGER/LONG/FLOAT/DOUBLE\nReturn type: DOUBLE\n\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-07-20T19:55:09Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/599", "merged": true, "mergeCommit": {"oid": "49883b9b1a66eae3d40cf56b53f70a619b5f34d8"}, "closed": true, "closedAt": "2020-07-22T17:46:15Z", "author": {"login": "chloe-zh"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc19j2TAH2gAyNDUzNzgzMDUyOmFjMjY3YjM5NmU0YzFlMzM2MjhmMGM5YjI0NzBlZDJiOGE5YmRjZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3eMxQgH2gAyNDUzNzgzMDUyOjk3YmQzZWM3MDgwOGYxZDlhMGQ5YTJkMThhYmZmMGE2ZWY0YzNjOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ac267b396e4c1e33628f0c9b2470ed2b8a9bdcea", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ac267b396e4c1e33628f0c9b2470ed2b8a9bdcea", "committedDate": "2020-07-18T00:47:26Z", "message": "support trigonometric functions acos, asin, atan, atan2, cos, cot, degrees, radians, sin, tan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61e60b6964728783bd5f875a0fbfe4dddb1a5722", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/61e60b6964728783bd5f875a0fbfe4dddb1a5722", "committedDate": "2020-07-20T19:36:35Z", "message": "Merge branch 'develop' into math4\n\n# Conflicts:\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/DSL.java\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/arthmetic/MathematicalFunction.java\n#\tcore/src/test/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/arthmetic/MathematicalFunctionTest.java\n#\tppl/src/main/antlr/OpenDistroPPLParser.g4\n#\tsql/src/main/antlr/OpenDistroSQLParser.g4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d32a734f0ee9e9a87b04312fdae160f5c637f9a", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9d32a734f0ee9e9a87b04312fdae160f5c637f9a", "committedDate": "2020-07-20T20:53:03Z", "message": "updated doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "004de1e799a9e9b4170da63190146f261231a11b", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/004de1e799a9e9b4170da63190146f261231a11b", "committedDate": "2020-07-21T17:16:20Z", "message": "added sql comparison test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac98ce0826543136b9739051e0ba04f637e4b6bb", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ac98ce0826543136b9739051e0ba04f637e4b6bb", "committedDate": "2020-07-21T17:47:37Z", "message": "added integ test cases in ppl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODExNjIy", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/599#pullrequestreview-452811622", "createdAt": "2020-07-21T20:39:34Z", "commit": {"oid": "ac98ce0826543136b9739051e0ba04f637e4b6bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDozOTozNVrOG1I7Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDozOTozNVrOG1I7Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3MzkzOQ==", "bodyText": "Could you document this special case?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/599#discussion_r458373939", "createdAt": "2020-07-21T20:39:35Z", "author": {"login": "dai-chen"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/arthmetic/MathematicalFunction.java", "diffHunk": "@@ -429,6 +439,154 @@ private static FunctionResolver truncate() {\n             .build());\n   }\n \n+  /**\n+   * Definition of acos(x) function.\n+   * Calculates the arc cosine of x, that is, the value whose cosine is x.\n+   * Returns NULL if x is not in the range -1 to 1.\n+   * The supported signature of acos function is\n+   * INTEGER/LONG/FLOAT/DOUBLE -> DOUBLE\n+   */\n+  private static FunctionResolver acos() {\n+    FunctionName functionName = BuiltinFunctionName.ACOS.getName();\n+    return new FunctionResolver(\n+        functionName,\n+        singleArgumentFunction(functionName, v -> v < -1 || v > 1 ? null : Math.acos(v)));\n+  }\n+\n+  /**\n+   * Definition of asin(x) function.\n+   * Calculates the arc sine of x, that is, the value whose sine is x.\n+   * Returns NULL if x is not in the range -1 to 1.\n+   * The supported signature of asin function is\n+   * INTEGER/LONG/FLOAT/DOUBLE -> DOUBLE\n+   */\n+  private static FunctionResolver asin() {\n+    FunctionName functionName = BuiltinFunctionName.ASIN.getName();\n+    return new FunctionResolver(\n+        functionName,\n+        singleArgumentFunction(functionName, v -> v < -1 || v > 1 ? null : Math.asin(v)));\n+  }\n+\n+  /**\n+   * Definition of atan(x) and atan(y, x) function.\n+   * atan(x) calculates the arc tangent of x, that is, the value whose tangent is x.\n+   * atan(y, x) calculates the arc tangent of y / x, except that the signs of both arguments\n+   * are used to determine the quadrant of the result.\n+   * The supported signature of atan function is\n+   * (x: INTEGER/LONG/FLOAT/DOUBLE, y: INTEGER/LONG/FLOAT/DOUBLE) -> DOUBLE\n+   */\n+  private static FunctionResolver atan() {\n+    FunctionName functionName = BuiltinFunctionName.ATAN.getName();\n+    return new FunctionResolver(functionName,\n+        new ImmutableMap.Builder<FunctionSignature, FunctionBuilder>()\n+            .put(\n+                new FunctionSignature(functionName, Arrays.asList(ExprCoreType.DOUBLE)),\n+                unaryOperator(\n+                    functionName, Math::atan, ExprValueUtils::getDoubleValue, ExprCoreType.DOUBLE))\n+            .put(\n+                new FunctionSignature(\n+                    functionName, Arrays.asList(ExprCoreType.DOUBLE, ExprCoreType.DOUBLE)),\n+                doubleArgFunc(functionName,\n+                    Math::atan2, ExprValueUtils::getDoubleValue, ExprValueUtils::getDoubleValue,\n+                    ExprCoreType.DOUBLE))\n+            .build());\n+  }\n+\n+  /**\n+   * Definition of atan2(y, x) function.\n+   * Calculates the arc tangent of y / x, except that the signs of both arguments\n+   * are used to determine the quadrant of the result.\n+   * The supported signature of atan2 function is\n+   * (x: INTEGER/LONG/FLOAT/DOUBLE, y: INTEGER/LONG/FLOAT/DOUBLE) -> DOUBLE\n+   */\n+  private static FunctionResolver atan2() {\n+    FunctionName functionName = BuiltinFunctionName.ATAN2.getName();\n+    return new FunctionResolver(functionName,\n+        new ImmutableMap.Builder<FunctionSignature, FunctionBuilder>()\n+            .put(\n+                new FunctionSignature(\n+                    functionName, Arrays.asList(ExprCoreType.DOUBLE, ExprCoreType.DOUBLE)),\n+                doubleArgFunc(functionName,\n+                    Math::atan2, ExprValueUtils::getDoubleValue, ExprValueUtils::getDoubleValue,\n+                    ExprCoreType.DOUBLE))\n+            .build());\n+  }\n+\n+  /**\n+   * Definition of cos(x) function.\n+   * Calculates the cosine of X, where X is given in radians\n+   * The supported signature of cos function is\n+   * INTEGER/LONG/FLOAT/DOUBLE -> DOUBLE\n+   */\n+  private static FunctionResolver cos() {\n+    FunctionName functionName = BuiltinFunctionName.COS.getName();\n+    return new FunctionResolver(functionName, singleArgumentFunction(functionName, Math::cos));\n+  }\n+\n+  /**\n+   * Definition of cot(x) function.\n+   * Calculates the cotangent of x\n+   * The supported signature of cot function is\n+   * INTEGER/LONG/FLOAT/DOUBLE -> DOUBLE\n+   */\n+  private static FunctionResolver cot() {\n+    FunctionName functionName = BuiltinFunctionName.COT.getName();\n+    return new FunctionResolver(\n+        functionName,\n+        singleArgumentFunction(functionName, v -> {\n+          if (v == 0) {\n+            throw new ArithmeticException(String.format(\"Out of range value for cot(%s)\", v));\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac98ce0826543136b9739051e0ba04f637e4b6bb"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e65b9946148a70b96711db98963f5e221a6233e", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/6e65b9946148a70b96711db98963f5e221a6233e", "committedDate": "2020-07-21T20:53:48Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDI0MjM4", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/599#pullrequestreview-453424238", "createdAt": "2020-07-22T15:19:54Z", "commit": {"oid": "6e65b9946148a70b96711db98963f5e221a6233e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDQ3OTAy", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/599#pullrequestreview-453447902", "createdAt": "2020-07-22T15:45:34Z", "commit": {"oid": "6e65b9946148a70b96711db98963f5e221a6233e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97bd3ec70808f1d9a0d9a2d18abff0a6ef4c3c96", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/97bd3ec70808f1d9a0d9a2d18abff0a6ef4c3c96", "committedDate": "2020-07-22T17:23:01Z", "message": "Merge remote-tracking branch 'upstream/develop' into math4\n\n# Conflicts:\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/arthmetic/MathematicalFunction.java\n#\tcore/src/test/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/arthmetic/MathematicalFunctionTest.java\n#\tinteg-test/src/test/java/com/amazon/opendistroforelasticsearch/sql/ppl/MathematicalFunctionIT.java\n#\tinteg-test/src/test/resources/correctness/expressions/functions.txt\n#\tppl/src/main/antlr/OpenDistroPPLParser.g4\n#\tsql/src/main/antlr/OpenDistroSQLParser.g4"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 594, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}