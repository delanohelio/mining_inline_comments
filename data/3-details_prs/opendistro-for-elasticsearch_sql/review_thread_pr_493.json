{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNTQ3NDk1", "number": 493, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxODo0M1rOEALPww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjo1MjozMVrOEAMFBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE5NzE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AvgAggregator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxODo0M1rOGbSu2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDo1MjozOFrOGbcs4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MTY0MQ==", "bodyText": "Is this meant for JavaDoc on CountAggregator ?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r431271641", "createdAt": "2020-05-27T16:18:43Z", "author": {"login": "dai-chen"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AvgAggregator.java", "diffHunk": "@@ -29,7 +29,7 @@\n import static com.amazon.opendistroforelasticsearch.sql.utils.ExpressionUtils.format;\n \n /**\n- * The average aggregator aggregate the value evaluated by the expression.\n+ * The count aggregator aggregate the value evaluated by the expression.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbab1ad7de9b2ec084f7cdf8192566ced5f4f28"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzNDk3OQ==", "bodyText": "done.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r431434979", "createdAt": "2020-05-27T20:52:38Z", "author": {"login": "penghuo"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AvgAggregator.java", "diffHunk": "@@ -29,7 +29,7 @@\n import static com.amazon.opendistroforelasticsearch.sql.utils.ExpressionUtils.format;\n \n /**\n- * The average aggregator aggregate the value evaluated by the expression.\n+ * The count aggregator aggregate the value evaluated by the expression.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MTY0MQ=="}, "originalCommit": {"oid": "8bbab1ad7de9b2ec084f7cdf8192566ced5f4f28"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjMzMzQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AggregatorFunction.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjo1MjozMVrOGbUIog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODozNToyNlrOGcBrbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI5NDYyNg==", "bodyText": "Np: since the only difference is input type, this can be simplified into a for loop on input type array.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r431294626", "createdAt": "2020-05-27T16:52:31Z", "author": {"login": "dai-chen"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AggregatorFunction.java", "diffHunk": "@@ -54,6 +55,31 @@ private static FunctionResolver avg() {\n         );\n     }\n \n+    private static FunctionResolver count() {\n+        FunctionName functionName = BuiltinFunctionName.COUNT.getName();\n+        return new FunctionResolver(\n+            functionName,\n+            new ImmutableMap.Builder<FunctionSignature, FunctionBuilder>()\n+                .put(new FunctionSignature(functionName, Collections.singletonList(ExprType.INTEGER)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbab1ad7de9b2ec084f7cdf8192566ced5f4f28"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzNTQ1Nw==", "bodyText": "totally agree, let's fix the bug firstly, then think how we could better define built in funciton.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r431435457", "createdAt": "2020-05-27T20:53:30Z", "author": {"login": "penghuo"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AggregatorFunction.java", "diffHunk": "@@ -54,6 +55,31 @@ private static FunctionResolver avg() {\n         );\n     }\n \n+    private static FunctionResolver count() {\n+        FunctionName functionName = BuiltinFunctionName.COUNT.getName();\n+        return new FunctionResolver(\n+            functionName,\n+            new ImmutableMap.Builder<FunctionSignature, FunctionBuilder>()\n+                .put(new FunctionSignature(functionName, Collections.singletonList(ExprType.INTEGER)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI5NDYyNg=="}, "originalCommit": {"oid": "8bbab1ad7de9b2ec084f7cdf8192566ced5f4f28"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA0MDgxNQ==", "bodyText": "Sounds good!", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/493#discussion_r432040815", "createdAt": "2020-05-28T18:35:26Z", "author": {"login": "dai-chen"}, "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AggregatorFunction.java", "diffHunk": "@@ -54,6 +55,31 @@ private static FunctionResolver avg() {\n         );\n     }\n \n+    private static FunctionResolver count() {\n+        FunctionName functionName = BuiltinFunctionName.COUNT.getName();\n+        return new FunctionResolver(\n+            functionName,\n+            new ImmutableMap.Builder<FunctionSignature, FunctionBuilder>()\n+                .put(new FunctionSignature(functionName, Collections.singletonList(ExprType.INTEGER)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI5NDYyNg=="}, "originalCommit": {"oid": "8bbab1ad7de9b2ec084f7cdf8192566ced5f4f28"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2096, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}