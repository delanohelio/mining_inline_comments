{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMjI3MTk4", "number": 419, "title": "Anonymize sensitive data in queries exposed to RestSqlAction logs", "bodyText": "Issue #, if available:\n\n#97 RestSqlAction logs raw SQL queries during normal execution flow\n\nDescription of changes:\n\nCreated a rewriting sensitive data rule\nCreated a sensitive data anonymizer\nChanged the log message for the incoming request to a request with sensitive data gone\nAdded UT\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-04-09T06:04:24Z", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419", "merged": true, "mergeCommit": {"oid": "45fa29c1a45bc7a97e881e6cd554926723f039f6"}, "closed": true, "closedAt": "2020-04-10T03:13:48Z", "author": {"login": "chloe-zh"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVtcbKAH2gAyNDAxMjI3MTk4OjE4ZWZiNDVjMjZhNGFmMWRjOTdkNzA5MDE0MmQxMTQwOWZlOGFmNjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWIRMNAFqTM5MTI0NjY0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "18efb45c26a4af1dc97d7090142d11409fe8af66", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/18efb45c26a4af1dc97d7090142d11409fe8af66", "committedDate": "2020-04-08T19:55:16Z", "message": "remove sensitive data from queries for logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b984b56467d32727a5d7d5f3f1fdbba50cfa73cc", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b984b56467d32727a5d7d5f3f1fdbba50cfa73cc", "committedDate": "2020-04-09T04:23:15Z", "message": "Added rule to mask sensitive data from es logs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec574310856fcce61efe3cbe911310a2dd0dbbb2", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ec574310856fcce61efe3cbe911310a2dd0dbbb2", "committedDate": "2020-04-09T04:47:35Z", "message": "Merge branch 'master' into sensitive-log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a651357dcb86bb4777c1c99728bb7aa7f2c2e320", "committedDate": "2020-04-09T05:55:49Z", "message": "Added unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODE4MTEy", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-390818112", "createdAt": "2020-04-09T13:59:04Z", "commit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo1OTowNVrOGDZ_Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo1OTowNVrOGDZ_Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIyNDcwNg==", "bodyText": "np:\nfor -> to\ninfo -> information\nsql -> SQL\nSame elsewhere.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406224706", "createdAt": "2020-04-09T13:59:05Z", "author": {"login": "abbashus"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/utils/QueryDataMask.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ *\n+ *  * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *  * You may not use this file except in compliance with the License.\n+ *  * A copy of the License is located at\n+ *  *\n+ *  *    http://www.apache.org/licenses/LICENSE-2.0\n+ *  *\n+ *  * or in the \"license\" file accompanying this file. This file is distributed\n+ *  * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  * express or implied. See the License for the specific language governing\n+ *  * permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.utils;\n+\n+import com.alibaba.druid.sql.ast.expr.SQLQueryExpr;\n+import com.amazon.opendistroforelasticsearch.sql.rewriter.identifier.RemoveSensitiveDataRule;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.utils.Util.toSqlExpr;\n+\n+/**\n+ * Utility class for mask sensitive info in incoming sql queries", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODQ3MjEx", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-390847211", "createdAt": "2020-04-09T14:31:19Z", "commit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDozMToxOVrOGDbYUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDozMToxOVrOGDbYUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI0NzUwNg==", "bodyText": "Consider using\nprivate static final Logger LOG = LogManager.getLogger(SqlRequest.class);\n\n...\n\nLOG.error(\"Caught an exception when masking sensitive data \",  e)\n\n\nLet the stack trace be logged for faster debugging, instead of Exception name.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406247506", "createdAt": "2020-04-09T14:31:19Z", "author": {"login": "abbashus"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/request/SqlRequest.java", "diffHunk": "@@ -105,4 +107,15 @@ public BoolQueryBuilder checkAndAddFilter(BoolQueryBuilder boolQuery) throws Sql\n         }\n         return boolQuery;\n     }\n+\n+    public String removeSensitiveData() {\n+        String query = \"\";\n+        try {\n+            query = QueryDataMask.maskData(this.sql);\n+        } catch (Exception e) {\n+            LogManager.getLogger().error(\"Caught an exception when removing sensitive data: \"\n+                    + e.getClass().getSimpleName());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODYzNTk1", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-390863595", "createdAt": "2020-04-09T14:48:55Z", "commit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDo0ODo1NlrOGDcKnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDo0ODo1NlrOGDcKnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI2MDM4MA==", "bodyText": "Does this only works for simple queries?\nCan you add tests for nested, subquery, join and union/minus queries as well for better coverage.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406260380", "createdAt": "2020-04-09T14:48:56Z", "author": {"login": "abbashus"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/unittest/utils/QueryDataMaskTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ *\n+ *  * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *  * You may not use this file except in compliance with the License.\n+ *  * A copy of the License is located at\n+ *  *\n+ *  *    http://www.apache.org/licenses/LICENSE-2.0\n+ *  *\n+ *  * or in the \"license\" file accompanying this file. This file is distributed\n+ *  * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  * express or implied. See the License for the specific language governing\n+ *  * permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.unittest.utils;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.QueryDataMask;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class QueryDataMaskTest {\n+\n+    @Test\n+    public void selectQueriesShouldMaskSensitiveDataWithStars() {\n+        String maskedQuery = QueryDataMask.maskData(\"SELECT age FROM accounts\");\n+        String expectedQuery = \"SELECT *** FROM ***\";\n+        Assert.assertEquals(maskedQuery, expectedQuery);\n+    }\n+\n+    @Test\n+    public void selectQueriesShouldMaskAllSensitiveData() {\n+        String query = \"SELECT ABS(balance), lastname FROM accounts WHERE age > 30\";\n+        String maskedQuery = QueryDataMask.maskData(query);\n+        Assert.assertEquals(maskedQuery, \"SELECT ABS(***), *** FROM *** WHERE *** > 30\");\n+    }\n+\n+    @Test\n+    public void selectQueriesWithQuotedIdentifiersShouldMaskSensitiveData() {\n+        String maskedQuery = QueryDataMask.maskData(\"SELECT `age` FROM accounts\");\n+        String expectedQuery = \"SELECT *** FROM ***\";\n+        Assert.assertEquals(maskedQuery, expectedQuery);\n+    }\n+\n+    @Test\n+    public void selectQueriesWithQuotedIdentifiersWithSpacesShouldMaskSensitiveData() {\n+        String maskedQuery = QueryDataMask.maskData(\"SELECT `a   g e` FROM accounts\");\n+        String expectedQuery = \"SELECT *** FROM ***\";\n+        Assert.assertEquals(maskedQuery, expectedQuery);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODgxNzg3", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-390881787", "createdAt": "2020-04-09T15:09:05Z", "commit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTowOTowNlrOGDdDzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTowOTowNlrOGDdDzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI3NTAyMQ==", "bodyText": "Question, what is definition sensitive data? age or 30?\nIMO, the value is more sensitive than field. e.g. password = '123456', it more make sense to mask the value like password = 'xxx'", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406275021", "createdAt": "2020-04-09T15:09:06Z", "author": {"login": "penghuo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/unittest/utils/QueryDataMaskTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ *\n+ *  * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *  * You may not use this file except in compliance with the License.\n+ *  * A copy of the License is located at\n+ *  *\n+ *  *    http://www.apache.org/licenses/LICENSE-2.0\n+ *  *\n+ *  * or in the \"license\" file accompanying this file. This file is distributed\n+ *  * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  * express or implied. See the License for the specific language governing\n+ *  * permissions and limitations under the License.\n+ *\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.unittest.utils;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.QueryDataMask;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class QueryDataMaskTest {\n+\n+    @Test\n+    public void selectQueriesShouldMaskSensitiveDataWithStars() {\n+        String maskedQuery = QueryDataMask.maskData(\"SELECT age FROM accounts\");\n+        String expectedQuery = \"SELECT *** FROM ***\";\n+        Assert.assertEquals(maskedQuery, expectedQuery);\n+    }\n+\n+    @Test\n+    public void selectQueriesShouldMaskAllSensitiveData() {\n+        String query = \"SELECT ABS(balance), lastname FROM accounts WHERE age > 30\";\n+        String maskedQuery = QueryDataMask.maskData(query);\n+        Assert.assertEquals(maskedQuery, \"SELECT ABS(***), *** FROM *** WHERE *** > 30\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODk1MDI0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-390895024", "createdAt": "2020-04-09T15:24:30Z", "commit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNDozMFrOGDdsfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNDozMFrOGDdsfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI4NTQzOQ==", "bodyText": "add UT", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406285439", "createdAt": "2020-04-09T15:24:30Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/utils/StringUtils.java", "diffHunk": "@@ -126,6 +126,11 @@ public static boolean isNumeric(String text) {\n         return Doubles.tryParse(text) != null;\n     }\n \n+    public static String getFirstWord(String sql) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODk4Mzkx", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-390898391", "createdAt": "2020-04-09T15:27:36Z", "commit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNzozNlrOGDd2CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNzozNlrOGDd2CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI4Nzg4MA==", "bodyText": "why adding a method on SqlRequest? could we use QueryDataMask.mask(sqlRequest.sql) instead.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406287880", "createdAt": "2020-04-09T15:27:36Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/plugin/RestSqlAction.java", "diffHunk": "@@ -112,7 +112,8 @@ protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient cli\n             }\n \n             final SqlRequest sqlRequest = SqlRequestFactory.getSqlRequest(request);\n-            LOG.info(\"[{}] Incoming request {}: {}\", LogUtils.getRequestId(), request.uri(), sqlRequest.getSql());\n+            LOG.info(\"[{}] Incoming request {}: {}\", LogUtils.getRequestId(), request.uri(),\n+                    sqlRequest.removeSensitiveData());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a651357dcb86bb4777c1c99728bb7aa7f2c2e320"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfc6b9093ee0b96f0ed55f6cda28dc672ae6c38a", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/cfc6b9093ee0b96f0ed55f6cda28dc672ae6c38a", "committedDate": "2020-04-09T19:27:06Z", "message": "Added antlr files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ead3b80ab5d2879f71248eeb5bce776b35b19876", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ead3b80ab5d2879f71248eeb5bce776b35b19876", "committedDate": "2020-04-09T19:29:36Z", "message": "addressed comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDc0ODI4", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-391074828", "createdAt": "2020-04-09T19:33:17Z", "commit": {"oid": "ead3b80ab5d2879f71248eeb5bce776b35b19876"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTozMzoxN1rOGDmiug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTozMzoxN1rOGDmiug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQzMDM5NA==", "bodyText": "np: getIdentifierSet  -> getDataSet ?", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406430394", "createdAt": "2020-04-09T19:33:17Z", "author": {"login": "abbashus"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/rewriter/identifier/RemoveSensitiveDataRule.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.rewriter.identifier;\n+\n+import com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr;\n+import com.alibaba.druid.sql.ast.expr.SQLQueryExpr;\n+import com.alibaba.druid.sql.dialect.mysql.visitor.MySqlASTVisitorAdapter;\n+import com.amazon.opendistroforelasticsearch.sql.rewriter.RewriteRule;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class RemoveSensitiveDataRule extends MySqlASTVisitorAdapter implements RewriteRule<SQLQueryExpr> {\n+\n+    private Set<String> dataSet = new HashSet<>();\n+\n+    @Override\n+    public boolean visit(SQLIdentifierExpr identifierExpr) {\n+        dataSet.add(identifierExpr.getName());\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean match(SQLQueryExpr expr) {\n+        return true;\n+    }\n+\n+    @Override\n+    public void rewrite(SQLQueryExpr expr) {\n+        expr.accept(this);\n+    }\n+\n+    public Set<String> getIdentifierSet() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead3b80ab5d2879f71248eeb5bce776b35b19876"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTI5NjMx", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-391129631", "createdAt": "2020-04-09T21:01:43Z", "commit": {"oid": "ead3b80ab5d2879f71248eeb5bce776b35b19876"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMTowMTo0M1rOGDpRdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMToxMTo1MlrOGDpkug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3NTEyNQ==", "bodyText": "As Peng commented, I think you can either move all mask logic here or just call maskData() outside along with getSql().", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406475125", "createdAt": "2020-04-09T21:01:43Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/request/SqlRequest.java", "diffHunk": "@@ -105,4 +109,14 @@ public BoolQueryBuilder checkAndAddFilter(BoolQueryBuilder boolQuery) throws Sql\n         }\n         return boolQuery;\n     }\n+\n+    public String removeSensitiveData() {\n+        String query = \"\";\n+        try {\n+            query = QueryDataMask.maskData(this.sql);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead3b80ab5d2879f71248eeb5bce776b35b19876"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3NzU3Nw==", "bodyText": "Because values (literals) in query is more sensitive, you may need to rewrite methods like visit(SQLNumberExpr x), visit(SQLCharExpr x) etc. We can add a few UTs to cover common literals such as string, numerical, bool, datetime etc.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406477577", "createdAt": "2020-04-09T21:06:46Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/rewriter/identifier/RemoveSensitiveDataRule.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.rewriter.identifier;\n+\n+import com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr;\n+import com.alibaba.druid.sql.ast.expr.SQLQueryExpr;\n+import com.alibaba.druid.sql.dialect.mysql.visitor.MySqlASTVisitorAdapter;\n+import com.amazon.opendistroforelasticsearch.sql.rewriter.RewriteRule;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class RemoveSensitiveDataRule extends MySqlASTVisitorAdapter implements RewriteRule<SQLQueryExpr> {\n+\n+    private Set<String> dataSet = new HashSet<>();\n+\n+    @Override\n+    public boolean visit(SQLIdentifierExpr identifierExpr) {\n+        dataSet.add(identifierExpr.getName());\n+        return true;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead3b80ab5d2879f71248eeb5bce776b35b19876"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ4MDA1OA==", "bodyText": "I think you can move all logic in this class into RemoveSensitiveDataRule except rebuilding. (rename it to MaskSensitiveDataRule?) Then you just need a util method for rebuilding AST (after applied our masking rule) to a query string.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406480058", "createdAt": "2020-04-09T21:11:52Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/utils/QueryDataMask.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.utils;\n+\n+import com.alibaba.druid.sql.ast.expr.SQLQueryExpr;\n+import com.amazon.opendistroforelasticsearch.sql.rewriter.identifier.RemoveSensitiveDataRule;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import static com.amazon.opendistroforelasticsearch.sql.utils.Util.toSqlExpr;\n+\n+/**\n+ * Utility class to mask sensitive information in incoming SQL queries\n+ */\n+public class QueryDataMask {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead3b80ab5d2879f71248eeb5bce776b35b19876"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a53da11416b7c853f42b966b98b7f7dc23fda343", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a53da11416b7c853f42b966b98b7f7dc23fda343", "committedDate": "2020-04-09T23:09:51Z", "message": "Applied API in SQLUtils to rebuild query string from AST; replace data masks with anonymous words"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a702386844c6d48feab30c6c9ba0af85e8ec77bf", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a702386844c6d48feab30c6c9ba0af85e8ec77bf", "committedDate": "2020-04-09T23:24:28Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4b3c20fa73e32a47a8c55261c77ce164ef36660", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b4b3c20fa73e32a47a8c55261c77ce164ef36660", "committedDate": "2020-04-09T23:30:22Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "548b0127fc3990a8e44df4ed12dc93b06b0c0694", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/548b0127fc3990a8e44df4ed12dc93b06b0c0694", "committedDate": "2020-04-09T23:31:26Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37d461537f3b01be48435476a6ea620e16ec6816", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/37d461537f3b01be48435476a6ea620e16ec6816", "committedDate": "2020-04-09T23:39:10Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTk3NzI3", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-391197727", "createdAt": "2020-04-09T23:44:38Z", "commit": {"oid": "37d461537f3b01be48435476a6ea620e16ec6816"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMzo0NDozOFrOGDs6Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMzo0NDozOFrOGDs6Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzNDc0Ng==", "bodyText": "unnecessary change", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406534746", "createdAt": "2020-04-09T23:44:38Z", "author": {"login": "penghuo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/request/SqlRequest.java", "diffHunk": "@@ -37,7 +37,6 @@\n     String sql;\n     JSONObject jsonContent;\n \n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d461537f3b01be48435476a6ea620e16ec6816"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMjAwNDY0", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-391200464", "createdAt": "2020-04-09T23:54:12Z", "commit": {"oid": "37d461537f3b01be48435476a6ea620e16ec6816"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMzo1NDoxM1rOGDtEVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMzo1NDoxM1rOGDtEVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzNzMwMw==", "bodyText": "Curious what will be the output in log4j, does it output multiple line for the same query?\nIf so, I would suggest to remove the newline to make it in same line. Because usually, we process the log data by using line based tools and group the data with request id. e.g., grep requestId=xxx which will return all the log corresponding to specific request.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406537303", "createdAt": "2020-04-09T23:54:13Z", "author": {"login": "penghuo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/sql/unittest/utils/QueryDataAnonymizerTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.unittest.utils;\n+\n+import com.amazon.opendistroforelasticsearch.sql.utils.QueryDataAnonymizer;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class QueryDataAnonymizerTest {\n+\n+    @Test\n+    public void queriesShouldHaveAnonymousFieldAndIndex() {\n+        String query = \"SELECT ABS(balance) FROM accounts WHERE age > 30 GROUP BY ABS(balance)\";\n+        String expectedQuery = \"(\\n\" +\n+                \"\\tSELECT ABS(identifier)\\n\" +\n+                \"\\tFROM table\\n\" +\n+                \"\\tWHERE identifier > number\\n\" +\n+                \"\\tGROUP BY ABS(identifier)\\n\" +\n+                \"\\t)\";\n+        Assert.assertEquals(expectedQuery, QueryDataAnonymizer.anonymizeData(query));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d461537f3b01be48435476a6ea620e16ec6816"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cc1dfb5763395bc0518e7944fadef93272da9ba", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8cc1dfb5763395bc0518e7944fadef93272da9ba", "committedDate": "2020-04-09T23:54:22Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMjAxMDcz", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-391201073", "createdAt": "2020-04-09T23:56:23Z", "commit": {"oid": "37d461537f3b01be48435476a6ea620e16ec6816"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMzo1NjoyM1rOGDtGVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMzo1NjoyM1rOGDtGVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzNzgxNQ==", "bodyText": "Please add some doc here.", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#discussion_r406537815", "createdAt": "2020-04-09T23:56:23Z", "author": {"login": "dai-chen"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/sql/rewriter/identifier/AnonymizeSensitiveDataRule.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.rewriter.identifier;\n+\n+import com.alibaba.druid.sql.ast.expr.SQLBooleanExpr;\n+import com.alibaba.druid.sql.ast.expr.SQLCharExpr;\n+import com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr;\n+import com.alibaba.druid.sql.ast.expr.SQLIntegerExpr;\n+import com.alibaba.druid.sql.ast.expr.SQLNumberExpr;\n+import com.alibaba.druid.sql.ast.expr.SQLQueryExpr;\n+import com.alibaba.druid.sql.ast.statement.SQLExprTableSource;\n+import com.alibaba.druid.sql.dialect.mysql.visitor.MySqlASTVisitorAdapter;\n+import com.amazon.opendistroforelasticsearch.sql.rewriter.RewriteRule;\n+\n+public class AnonymizeSensitiveDataRule extends MySqlASTVisitorAdapter implements RewriteRule<SQLQueryExpr> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d461537f3b01be48435476a6ea620e16ec6816"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3610740195e377c500d5fc8ff53a2e21b46aa79", "author": {"user": {"login": "chloe-zh", "name": "Chloe"}}, "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f3610740195e377c500d5fc8ff53a2e21b46aa79", "committedDate": "2020-04-10T00:24:08Z", "message": "Inlined log message; added doc for new rule"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMjQ2NjQx", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/419#pullrequestreview-391246641", "createdAt": "2020-04-10T03:10:26Z", "commit": {"oid": "f3610740195e377c500d5fc8ff53a2e21b46aa79"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 777, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}