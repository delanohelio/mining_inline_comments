{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNjY3Nzc5", "number": 10779, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMzo1NDo1MVrOEs2wFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMzo1NDo1MVrOEs2wFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDY5ODQ0OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/pageobjects/InstructorCourseStudentDetailsViewPage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMzo1NDo1MVrOHgUfoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMzo1NDo1MVrOHgUfoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1MjI1Nw==", "bodyText": "While this works, is there a better reader-friendly way to indicate what this means? e.g. asserting that the text content is \"Not Specified\", while slightly more prone to change, is closer to being a black box and also more reader-friendly.", "url": "https://github.com/TEAMMATES/teammates/pull/10779#discussion_r503652257", "createdAt": "2020-10-13T03:54:51Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/pageobjects/InstructorCourseStudentDetailsViewPage.java", "diffHunk": "@@ -0,0 +1,99 @@\n+package teammates.e2e.pageobjects;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.datatransfer.attributes.StudentProfileAttributes;\n+\n+/**\n+ * Represents the instructor course student details view page of the website.\n+ */\n+public class InstructorCourseStudentDetailsViewPage extends AppPage {\n+    @FindBy (id = \"student-name\")\n+    private WebElement studentName;\n+\n+    @FindBy (id = \"short-name\")\n+    private WebElement studentShortName;\n+\n+    @FindBy (id = \"gender\")\n+    private WebElement studentGender;\n+\n+    @FindBy (id = \"personal-email\")\n+    private WebElement studentPersonalEmail;\n+\n+    @FindBy (id = \"institution\")\n+    private WebElement studentInstitution;\n+\n+    @FindBy (id = \"nationality\")\n+    private WebElement studentNationality;\n+\n+    @FindBy (id = \"course-id\")\n+    private WebElement courseId;\n+\n+    @FindBy (id = \"section-name\")\n+    private WebElement studentSectionName;\n+\n+    @FindBy (id = \"team-name\")\n+    private WebElement studentTeamName;\n+\n+    @FindBy (id = \"email\")\n+    private WebElement studentOfficialEmail;\n+\n+    @FindBy (id = \"comments\")\n+    private WebElement studentComments;\n+\n+    @FindBy (id = \"more-info\")\n+    private WebElement moreInformation;\n+\n+    public InstructorCourseStudentDetailsViewPage(Browser browser) {\n+        super(browser);\n+    }\n+\n+    @Override\n+    protected boolean containsExpectedPageContents() {\n+        return getPageSource().contains(\"Enrollment Details\");\n+    }\n+\n+    public void verifyStudentDetails(StudentProfileAttributes studentProfile, StudentAttributes student) {\n+        verifyDetail(student.getName(), studentName);\n+\n+        StudentProfileAttributes profileToTest = studentProfile;\n+        if (studentProfile == null) {\n+            profileToTest = StudentProfileAttributes.builder(student.getGoogleId()).build();\n+        }\n+        verifyDetail(profileToTest.getShortName(), studentShortName);\n+        verifyStudentGender(profileToTest.getGender());\n+        verifyDetail(profileToTest.getEmail(), studentPersonalEmail);\n+        verifyDetail(profileToTest.getInstitute(), studentInstitution);\n+        verifyDetail(profileToTest.getNationality(), studentNationality);\n+\n+        verifyDetail(student.getCourse(), courseId);\n+        verifyDetail(student.getSection(), studentSectionName);\n+        verifyDetail(student.getTeam(), studentTeamName);\n+        verifyDetail(student.getEmail(), studentOfficialEmail);\n+        verifyDetail(student.getComments(), studentComments);\n+\n+        verifyDetail(profileToTest.getMoreInfo(), moreInformation);\n+    }\n+\n+    private void verifyDetail(String expected, WebElement detailField) {\n+        if (expected.isEmpty()) {\n+            assertTrue(isElementPresent(By.id(\"not-specified\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f6242c1b0e29f47cfefdbac5c1bdbd714d7cfe"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3394, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}