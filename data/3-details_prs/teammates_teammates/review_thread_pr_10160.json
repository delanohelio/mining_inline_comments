{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MDkxNDY1", "number": 10160, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxNzozNlrOECF4LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDo0NTo0OVrOECue6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjI4OTA4OnYy", "diffSide": "RIGHT", "path": "src/web/types/sort-properties.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxNzozNlrOGeVc4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxNzozNlrOGeVc4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2MTkyMA==", "bodyText": "You might want to prefix the properties", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r434461920", "createdAt": "2020-06-03T10:17:36Z", "author": {"login": "xpdavid"}, "path": "src/web/types/sort-properties.ts", "diffHunk": "@@ -121,6 +121,26 @@ export enum SortBy {\n      * Name of the recipient of the feedback response.\n      */\n     RECIPIENT_NAME,\n+\n+    /**\n+     * Average score of the numerical scale question.\n+     */\n+    AVERAGE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e70ef9e5d86400e8b97dfbded3d59aebec0c5ca"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjI5MTM0OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxODoyMFrOGeVeZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxODoyMFrOGeVeZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2MjMwOA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r434462308", "createdAt": "2020-06-03T10:18:20Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "diffHunk": "@@ -1,11 +1,21 @@\n-import { Component, OnChanges, OnInit } from '@angular/core';\n+import { Component, Input, OnChanges, OnInit } from '@angular/core';\n import {\n   FeedbackNumericalScaleQuestionDetails,\n   FeedbackNumericalScaleResponseDetails,\n } from '../../../../types/api-output';\n import { DEFAULT_NUMSCALE_QUESTION_DETAILS } from '../../../../types/default-question-structs';\n+import { SortBy, SortOrder } from '../../../../types/sort-properties';\n import { QuestionStatistics } from './question-statistics';\n \n+interface NumericalScaleStatsRowModel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e70ef9e5d86400e8b97dfbded3d59aebec0c5ca"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjI5MzE1OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxODo1NVrOGeVfqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxODo1NVrOGeVfqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2MjYzNQ==", "bodyText": "Why you need it to be @Input?", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r434462635", "createdAt": "2020-06-03T10:18:55Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "diffHunk": "@@ -18,8 +28,21 @@ export class NumScaleQuestionStatisticsComponent\n     extends QuestionStatistics<FeedbackNumericalScaleQuestionDetails, FeedbackNumericalScaleResponseDetails>\n     implements OnInit, OnChanges {\n \n+  // enum\n+  SortBy: typeof SortBy = SortBy;\n+  SortOrder: typeof SortOrder = SortOrder;\n+\n+  @Input()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e70ef9e5d86400e8b97dfbded3d59aebec0c5ca"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjI5Mzc5OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxOTowN1rOGeVgFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxOTowN1rOGeVgFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2Mjc0MQ==", "bodyText": "Consider using TableComparatorService", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r434462741", "createdAt": "2020-06-03T10:19:07Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "diffHunk": "@@ -32,6 +55,49 @@ export class NumScaleQuestionStatisticsComponent\n     this.calculateStatistics();\n   }\n \n+  sortNumericalScaleStatsRowModel(by: SortBy): void {\n+    this.teamToRecipientToScoresSortBy = by;\n+    this.teamToRecipientToScoresSortOrder =\n+      (this.teamToRecipientToScoresSortOrder === SortOrder.DESC) ? SortOrder.ASC : SortOrder.DESC;\n+\n+    this.numericalScaleStatsRowModel.sort(this.sortStatsRowBy(by, this.teamToRecipientToScoresSortOrder));\n+  }\n+\n+  sortStatsRowBy(by: SortBy, order: SortOrder):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e70ef9e5d86400e8b97dfbded3d59aebec0c5ca"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTc3OTIyOnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.html", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjo0MDoyOVrOGe3x_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNzoxNTo0OVrOGe4xoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyNDM4Mw==", "bodyText": "Do you think that we can have some sort of component like SortableTable that gets rid of the need for all these boilerplate code?", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r435024383", "createdAt": "2020-06-04T06:40:29Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.html", "diffHunk": "@@ -11,23 +11,53 @@\n       <table class=\"table table-bordered striped margin-0\">\n         <thead>\n         <tr>\n-          <td>Team</td>\n-          <td>Recipient</td>\n-          <td><span ngbTooltip=\"Average of the visible responses\">Average</span></td>\n-          <td><span ngbTooltip=\"Maximum of the visible responses\">Max</span></td>\n-          <td><span ngbTooltip=\"Minimum of the visible responses\">Min</span></td>\n-          <td><span ngbTooltip=\"Average of the visible responses excluding recipient's own response to himself/herself\">Average excluding self response</span></td>\n+          <th class=\"sortable-header\" (click)=\"sortNumericalScaleStatsRowModel(SortBy.TEAM_NAME)\">\n+              Team\n+              <span *ngIf=\"teamToRecipientToScoresSortBy !== SortBy.TEAM_NAME\"><i class=\"fas fa-sort\"></i></span>\n+              <span *ngIf=\"teamToRecipientToScoresSortBy === SortBy.TEAM_NAME && teamToRecipientToScoresSortOrder === SortOrder.DESC\"><i class=\"fas fa-sort-down\"></i></span>\n+              <span *ngIf=\"teamToRecipientToScoresSortBy === SortBy.TEAM_NAME && teamToRecipientToScoresSortOrder === SortOrder.ASC\"><i class=\"fas fa-sort-up\"></i></span>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e70ef9e5d86400e8b97dfbded3d59aebec0c5ca"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyNjExNg==", "bodyText": "Good idea. It worth to try and it is tricky to design it generically.", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r435026116", "createdAt": "2020-06-04T06:44:41Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.html", "diffHunk": "@@ -11,23 +11,53 @@\n       <table class=\"table table-bordered striped margin-0\">\n         <thead>\n         <tr>\n-          <td>Team</td>\n-          <td>Recipient</td>\n-          <td><span ngbTooltip=\"Average of the visible responses\">Average</span></td>\n-          <td><span ngbTooltip=\"Maximum of the visible responses\">Max</span></td>\n-          <td><span ngbTooltip=\"Minimum of the visible responses\">Min</span></td>\n-          <td><span ngbTooltip=\"Average of the visible responses excluding recipient's own response to himself/herself\">Average excluding self response</span></td>\n+          <th class=\"sortable-header\" (click)=\"sortNumericalScaleStatsRowModel(SortBy.TEAM_NAME)\">\n+              Team\n+              <span *ngIf=\"teamToRecipientToScoresSortBy !== SortBy.TEAM_NAME\"><i class=\"fas fa-sort\"></i></span>\n+              <span *ngIf=\"teamToRecipientToScoresSortBy === SortBy.TEAM_NAME && teamToRecipientToScoresSortOrder === SortOrder.DESC\"><i class=\"fas fa-sort-down\"></i></span>\n+              <span *ngIf=\"teamToRecipientToScoresSortBy === SortBy.TEAM_NAME && teamToRecipientToScoresSortOrder === SortOrder.ASC\"><i class=\"fas fa-sort-up\"></i></span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyNDM4Mw=="}, "originalCommit": {"oid": "2e70ef9e5d86400e8b97dfbded3d59aebec0c5ca"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0MDY3Mw==", "bodyText": "Will try to do this for my MCQ table implementation.", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r435040673", "createdAt": "2020-06-04T07:15:49Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.html", "diffHunk": "@@ -11,23 +11,53 @@\n       <table class=\"table table-bordered striped margin-0\">\n         <thead>\n         <tr>\n-          <td>Team</td>\n-          <td>Recipient</td>\n-          <td><span ngbTooltip=\"Average of the visible responses\">Average</span></td>\n-          <td><span ngbTooltip=\"Maximum of the visible responses\">Max</span></td>\n-          <td><span ngbTooltip=\"Minimum of the visible responses\">Min</span></td>\n-          <td><span ngbTooltip=\"Average of the visible responses excluding recipient's own response to himself/herself\">Average excluding self response</span></td>\n+          <th class=\"sortable-header\" (click)=\"sortNumericalScaleStatsRowModel(SortBy.TEAM_NAME)\">\n+              Team\n+              <span *ngIf=\"teamToRecipientToScoresSortBy !== SortBy.TEAM_NAME\"><i class=\"fas fa-sort\"></i></span>\n+              <span *ngIf=\"teamToRecipientToScoresSortBy === SortBy.TEAM_NAME && teamToRecipientToScoresSortOrder === SortOrder.DESC\"><i class=\"fas fa-sort-down\"></i></span>\n+              <span *ngIf=\"teamToRecipientToScoresSortBy === SortBy.TEAM_NAME && teamToRecipientToScoresSortOrder === SortOrder.ASC\"><i class=\"fas fa-sort-up\"></i></span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyNDM4Mw=="}, "originalCommit": {"oid": "2e70ef9e5d86400e8b97dfbded3d59aebec0c5ca"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjkzNTI4OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDo0MzozNlrOGfXF7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDo0MzozNlrOGfXF7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzNzM4OA==", "bodyText": "The @Input here is for?", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r435537388", "createdAt": "2020-06-04T20:43:36Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "diffHunk": "@@ -18,9 +29,21 @@ export class NumScaleQuestionStatisticsComponent\n     extends QuestionStatistics<FeedbackNumericalScaleQuestionDetails, FeedbackNumericalScaleResponseDetails>\n     implements OnInit, OnChanges {\n \n+  // enum\n+  SortBy: typeof SortBy = SortBy;\n+  SortOrder: typeof SortOrder = SortOrder;\n+\n+  teamToRecipientToScoresSortBy: SortBy = SortBy.NONE;\n+\n+  @Input()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81c01c6c3d0cbcf9a6c3d1169295788a9395f56a"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjk0MTg1OnYy", "diffSide": "RIGHT", "path": "src/web/services/table-comparator.service.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDo0NTo1MFrOGfXKMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDozMToyM1rOGfcqIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzODQ4Mg==", "bodyText": "My indentation is actually suggest you to use compare in the service. The comparison logic here is essentially the same as compareNaturally.", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r435538482", "createdAt": "2020-06-04T20:45:50Z", "author": {"login": "xpdavid"}, "path": "src/web/services/table-comparator.service.ts", "diffHunk": "@@ -11,6 +11,27 @@ export class TableComparatorService {\n \n   constructor() { }\n \n+  /**\n+   * Compares two numbers naturally depending on order given.\n+   */\n+  compareAsNumber(order: SortOrder, numA: number, numB: number): number {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81c01c6c3d0cbcf9a6c3d1169295788a9395f56a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyODU3OA==", "bodyText": "Initially thought comparing number as string might give unintended behaviour. Did not realise it is handled by option in .localeCompare().\nUpdated.", "url": "https://github.com/TEAMMATES/teammates/pull/10160#discussion_r435628578", "createdAt": "2020-06-05T00:31:23Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/services/table-comparator.service.ts", "diffHunk": "@@ -11,6 +11,27 @@ export class TableComparatorService {\n \n   constructor() { }\n \n+  /**\n+   * Compares two numbers naturally depending on order given.\n+   */\n+  compareAsNumber(order: SortOrder, numA: number, numB: number): number {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzODQ4Mg=="}, "originalCommit": {"oid": "81c01c6c3d0cbcf9a6c3d1169295788a9395f56a"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3781, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}