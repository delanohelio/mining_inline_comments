{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2ODcwMTgy", "number": 10471, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDowMDo0NFrOESve4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0ODo0OFrOES8TJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDg3Nzc3OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/redirect-banner/redirect-banner.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDowMDo0NFrOG4FoCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDowMDo0NFrOG4FoCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ2NTYwOA==", "bodyText": "Don't need this. It is reasonable to assume that environment.supportEmail will always be set.", "url": "https://github.com/TEAMMATES/teammates/pull/10471#discussion_r461465608", "createdAt": "2020-07-28T10:00:44Z", "author": {"login": "wkurniawan07"}, "path": "src/web/app/components/redirect-banner/redirect-banner.component.ts", "diffHunk": "@@ -0,0 +1,26 @@\n+import { Component } from '@angular/core';\n+import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n+import { environment } from '../../../environments/environment';\n+\n+/**\n+ * Version redirect banner.\n+ */\n+@Component({\n+  selector: 'tm-redirect-banner',\n+  templateUrl: './redirect-banner.component.html',\n+  styleUrls: ['./redirect-banner.component.scss'],\n+})\n+export class RedirectBannerComponent {\n+\n+  redirectUrl: SafeResourceUrl | null;\n+  supportEmail: SafeResourceUrl | null;\n+\n+  constructor(private sanitizer: DomSanitizer) {\n+    this.redirectUrl = environment.redirectUrl\n+        ? this.sanitizer.bypassSecurityTrustResourceUrl(environment.redirectUrl)\n+        : null;\n+    this.supportEmail = environment.supportEmail", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa4f509df1f7633443cc0739bfdf0ca911f584be"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDg4MDA4OnYy", "diffSide": "RIGHT", "path": "src/web/environments/config.template.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDowMToyNlrOG4FpXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDowMToyNlrOG4FpXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ2NTk1MQ==", "bodyText": "A config point should not be dependent of this kind of specific component name.", "url": "https://github.com/TEAMMATES/teammates/pull/10471#discussion_r461465951", "createdAt": "2020-07-28T10:01:26Z", "author": {"login": "wkurniawan07"}, "path": "src/web/environments/config.template.ts", "diffHunk": "@@ -23,4 +23,9 @@ export const config: any = {\n    * e.g. \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\" is a site key for test environments.\n    */\n   captchaSiteKey: '',\n+\n+  /**\n+   * This is the URL address that will show in the {@link RedirectBannerComponent}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa4f509df1f7633443cc0739bfdf0ca911f584be"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjk3NTQ0OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/redirect-banner/redirect-banner.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0ODowNlrOG4Z3Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0ODowNlrOG4Z3Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5NzE1NA==", "bodyText": "Why not just make supportEmail a string and put mailto into the HTML template? That way you don't need this entire line. There are plenty of examples of this kind of code throughout.", "url": "https://github.com/TEAMMATES/teammates/pull/10471#discussion_r461797154", "createdAt": "2020-07-28T18:48:06Z", "author": {"login": "wkurniawan07"}, "path": "src/web/app/components/redirect-banner/redirect-banner.component.ts", "diffHunk": "@@ -0,0 +1,24 @@\n+import { Component } from '@angular/core';\n+import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n+import { environment } from '../../../environments/environment';\n+\n+/**\n+ * Version redirect banner.\n+ */\n+@Component({\n+  selector: 'tm-redirect-banner',\n+  templateUrl: './redirect-banner.component.html',\n+  styleUrls: ['./redirect-banner.component.scss'],\n+})\n+export class RedirectBannerComponent {\n+\n+  redirectUrl: SafeResourceUrl | null;\n+  supportEmail: SafeResourceUrl | null;\n+\n+  constructor(private sanitizer: DomSanitizer) {\n+    this.redirectUrl = environment.redirectUrl\n+        ? this.sanitizer.bypassSecurityTrustResourceUrl(environment.redirectUrl)\n+        : null;\n+    this.supportEmail = this.sanitizer.bypassSecurityTrustResourceUrl(`mailto:${environment.supportEmail}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "847fbe84c1db0f0df57eba2a52107ea91b30bf5e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjk3NzY2OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/redirect-banner/redirect-banner.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODo0ODo0OFrOG4Z4mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODoyMzo0OVrOG4t7Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5NzUyOA==", "bodyText": "Actually why do we even need this bypassSecurityTrustResourceUrl?", "url": "https://github.com/TEAMMATES/teammates/pull/10471#discussion_r461797528", "createdAt": "2020-07-28T18:48:48Z", "author": {"login": "wkurniawan07"}, "path": "src/web/app/components/redirect-banner/redirect-banner.component.ts", "diffHunk": "@@ -0,0 +1,24 @@\n+import { Component } from '@angular/core';\n+import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n+import { environment } from '../../../environments/environment';\n+\n+/**\n+ * Version redirect banner.\n+ */\n+@Component({\n+  selector: 'tm-redirect-banner',\n+  templateUrl: './redirect-banner.component.html',\n+  styleUrls: ['./redirect-banner.component.scss'],\n+})\n+export class RedirectBannerComponent {\n+\n+  redirectUrl: SafeResourceUrl | null;\n+  supportEmail: SafeResourceUrl | null;\n+\n+  constructor(private sanitizer: DomSanitizer) {\n+    this.redirectUrl = environment.redirectUrl\n+        ? this.sanitizer.bypassSecurityTrustResourceUrl(environment.redirectUrl)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "847fbe84c1db0f0df57eba2a52107ea91b30bf5e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExODU2MA==", "bodyText": "I have no idea either. I'm just following the example of the accountRequestFormUrl\n\n  \n    \n      teammates/src/web/app/pages-static/request-page/request-page.component.ts\n    \n    \n        Lines 18 to 20\n      in\n      e2eb385\n    \n    \n    \n    \n\n        \n          \n           this.accountRequestFormUrl = environment.accountRequestFormUrl \n        \n\n        \n          \n               ? this.sanitizer.bypassSecurityTrustResourceUrl(environment.accountRequestFormUrl) \n        \n\n        \n          \n               : null; \n        \n    \n  \n\n\nI really don't think it's necessary since we're not producing javascript (See: https://angular.io/api/platform-browser/DomSanitizer) but figured it was better to be consistent.", "url": "https://github.com/TEAMMATES/teammates/pull/10471#discussion_r462118560", "createdAt": "2020-07-29T08:11:55Z", "author": {"login": "madanalogy"}, "path": "src/web/app/components/redirect-banner/redirect-banner.component.ts", "diffHunk": "@@ -0,0 +1,24 @@\n+import { Component } from '@angular/core';\n+import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n+import { environment } from '../../../environments/environment';\n+\n+/**\n+ * Version redirect banner.\n+ */\n+@Component({\n+  selector: 'tm-redirect-banner',\n+  templateUrl: './redirect-banner.component.html',\n+  styleUrls: ['./redirect-banner.component.scss'],\n+})\n+export class RedirectBannerComponent {\n+\n+  redirectUrl: SafeResourceUrl | null;\n+  supportEmail: SafeResourceUrl | null;\n+\n+  constructor(private sanitizer: DomSanitizer) {\n+    this.redirectUrl = environment.redirectUrl\n+        ? this.sanitizer.bypassSecurityTrustResourceUrl(environment.redirectUrl)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5NzUyOA=="}, "originalCommit": {"oid": "847fbe84c1db0f0df57eba2a52107ea91b30bf5e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEyNTg3NA==", "bodyText": "That URL is used to load an iframe, so it's a legitimate security concern if not bypassed. It's not the case here.", "url": "https://github.com/TEAMMATES/teammates/pull/10471#discussion_r462125874", "createdAt": "2020-07-29T08:23:49Z", "author": {"login": "wkurniawan07"}, "path": "src/web/app/components/redirect-banner/redirect-banner.component.ts", "diffHunk": "@@ -0,0 +1,24 @@\n+import { Component } from '@angular/core';\n+import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n+import { environment } from '../../../environments/environment';\n+\n+/**\n+ * Version redirect banner.\n+ */\n+@Component({\n+  selector: 'tm-redirect-banner',\n+  templateUrl: './redirect-banner.component.html',\n+  styleUrls: ['./redirect-banner.component.scss'],\n+})\n+export class RedirectBannerComponent {\n+\n+  redirectUrl: SafeResourceUrl | null;\n+  supportEmail: SafeResourceUrl | null;\n+\n+  constructor(private sanitizer: DomSanitizer) {\n+    this.redirectUrl = environment.redirectUrl\n+        ? this.sanitizer.bypassSecurityTrustResourceUrl(environment.redirectUrl)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5NzUyOA=="}, "originalCommit": {"oid": "847fbe84c1db0f0df57eba2a52107ea91b30bf5e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3702, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}