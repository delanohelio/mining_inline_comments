{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NzAyNTQz", "number": 9925, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMTozNzo1NFrODada2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoyMDo0MlrODcpc8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDcxNTc2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-base-page.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMTozNzo1NFrOFhbKVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwNDoyMDoyNVrOFhyXiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5MjM0Mw==", "bodyText": "Is there a reason why this is done using encodeURIComponent instead of this.navigationService.navigateByURLWithParamEncoding?", "url": "https://github.com/TEAMMATES/teammates/pull/9925#discussion_r370592343", "createdAt": "2020-01-24T11:37:54Z", "author": {"login": "joanneong"}, "path": "src/web/app/pages-instructor/instructor-session-base-page.component.ts", "diffHunk": "@@ -201,16 +205,19 @@ export abstract class InstructorSessionBasePageComponent {\n    * Submits the feedback session as instructor.\n    */\n   submitSessionAsInstructor(model: SessionsTableRowModel): void {\n-    this.router.navigateByUrl('/web/instructor/sessions/submission'\n-        + `?courseid=${model.feedbackSession.courseId}&fsname=${model.feedbackSession.feedbackSessionName}`);\n+    this.navigationService.navigateByURLWithParamEncoding(\n+        this.router,\n+        '/web/instructor/sessions/submission',\n+        { courseid: model.feedbackSession.courseId, fsname: model.feedbackSession.feedbackSessionName });\n   }\n \n   /**\n    * Views the result of a feedback session.\n    */\n   viewSessionResult(model: SessionsTableRowModel): void {\n     this.router.navigateByUrl('/web/instructor/sessions/result'\n-        + `?courseid=${model.feedbackSession.courseId}&fsname=${model.feedbackSession.feedbackSessionName}`);\n+        + `?courseid=${model.feedbackSession.courseId}`\n+        + `&fsname=${encodeURIComponent(model.feedbackSession.feedbackSessionName)}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74f969ff7067c08a0793bf68fd6dbf53775c1325"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3MjU1Mw==", "bodyText": "Hmm yes forgot to remove this sorry \ud83d\ude28", "url": "https://github.com/TEAMMATES/teammates/pull/9925#discussion_r370972553", "createdAt": "2020-01-26T04:20:25Z", "author": {"login": "hcwong"}, "path": "src/web/app/pages-instructor/instructor-session-base-page.component.ts", "diffHunk": "@@ -201,16 +205,19 @@ export abstract class InstructorSessionBasePageComponent {\n    * Submits the feedback session as instructor.\n    */\n   submitSessionAsInstructor(model: SessionsTableRowModel): void {\n-    this.router.navigateByUrl('/web/instructor/sessions/submission'\n-        + `?courseid=${model.feedbackSession.courseId}&fsname=${model.feedbackSession.feedbackSessionName}`);\n+    this.navigationService.navigateByURLWithParamEncoding(\n+        this.router,\n+        '/web/instructor/sessions/submission',\n+        { courseid: model.feedbackSession.courseId, fsname: model.feedbackSession.feedbackSessionName });\n   }\n \n   /**\n    * Views the result of a feedback session.\n    */\n   viewSessionResult(model: SessionsTableRowModel): void {\n     this.router.navigateByUrl('/web/instructor/sessions/result'\n-        + `?courseid=${model.feedbackSession.courseId}&fsname=${model.feedbackSession.feedbackSessionName}`);\n+        + `?courseid=${model.feedbackSession.courseId}`\n+        + `&fsname=${encodeURIComponent(model.feedbackSession.feedbackSessionName)}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5MjM0Mw=="}, "originalCommit": {"oid": "74f969ff7067c08a0793bf68fd6dbf53775c1325"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDcyNDgzOnYy", "diffSide": "RIGHT", "path": "src/web/services/navigation.service.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMTo0MTo1OFrOFhbPwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMTo0MTo1OFrOFhbPwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5MzczMA==", "bodyText": "Small grammatical error: should be an encoded param string rather than a encoded param string.", "url": "https://github.com/TEAMMATES/teammates/pull/9925#discussion_r370593730", "createdAt": "2020-01-24T11:41:58Z", "author": {"login": "joanneong"}, "path": "src/web/services/navigation.service.spec.ts", "diffHunk": "@@ -14,4 +14,9 @@ describe('NavigationService', () => {\n     const service: NavigationService = TestBed.get(NavigationService);\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return a encoded param string upon calling encodeParams', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74f969ff7067c08a0793bf68fd6dbf53775c1325"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzY1ODc1OnYy", "diffSide": "RIGHT", "path": "src/web/services/navigation.service.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDoyMDo0MlrOFky7hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODoyMjowNlrOFlLX4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNzQ5Mg==", "bodyText": "WithParamEncoding should not be part of the name, as it kind of suggests that \"param encoding\" is some kind of isolated case. The fact is, param encoding should be expected especially when any kind of user input is involved.\nWould suggest to combine this with the previous method and set {} to be the default value for params.", "url": "https://github.com/TEAMMATES/teammates/pull/9925#discussion_r374127492", "createdAt": "2020-02-03T14:20:42Z", "author": {"login": "wkurniawan07"}, "path": "src/web/services/navigation.service.ts", "diffHunk": "@@ -53,4 +74,11 @@ export class NavigationService {\n     }\n     window.open(url.toString());\n   }\n+\n+  /**\n+   * Opens a new browser window with URL Param encoding\n+   */\n+  openNewWindowWithParamEncoding(urlWithoutParams: string, params: {[key: string]: string}): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e08b58c1df6a69adab2f49444f83418b22e6d5f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUyMjQ3Nw==", "bodyText": "Should the same apply to navigateWithSuccessMessage?", "url": "https://github.com/TEAMMATES/teammates/pull/9925#discussion_r374522477", "createdAt": "2020-02-04T08:07:26Z", "author": {"login": "hcwong"}, "path": "src/web/services/navigation.service.ts", "diffHunk": "@@ -53,4 +74,11 @@ export class NavigationService {\n     }\n     window.open(url.toString());\n   }\n+\n+  /**\n+   * Opens a new browser window with URL Param encoding\n+   */\n+  openNewWindowWithParamEncoding(urlWithoutParams: string, params: {[key: string]: string}): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNzQ5Mg=="}, "originalCommit": {"oid": "3e08b58c1df6a69adab2f49444f83418b22e6d5f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUyNzk3MQ==", "bodyText": "If possible.", "url": "https://github.com/TEAMMATES/teammates/pull/9925#discussion_r374527971", "createdAt": "2020-02-04T08:22:06Z", "author": {"login": "wkurniawan07"}, "path": "src/web/services/navigation.service.ts", "diffHunk": "@@ -53,4 +74,11 @@ export class NavigationService {\n     }\n     window.open(url.toString());\n   }\n+\n+  /**\n+   * Opens a new browser window with URL Param encoding\n+   */\n+  openNewWindowWithParamEncoding(urlWithoutParams: string, params: {[key: string]: string}): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNzQ5Mg=="}, "originalCommit": {"oid": "3e08b58c1df6a69adab2f49444f83418b22e6d5f"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4023, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}