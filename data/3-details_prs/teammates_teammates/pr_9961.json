{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1OTYzODgw", "number": 9961, "title": "[#9382] Enable downloading of feedback session results as CSV", "bodyText": "Part of #9382\nOutline of Solution\n\nMigrate from InstructorFeedbackResultsDownloadAction to GetSessionResultsAsCsvAction\nMigrate from InstructorFeedbackResultsDownloadActionTest to GetSessionResultsAsCsvActionTest\nAdd basic test cases for GetSessionResultsActionTest\nImplement equals() and hashCode() for SessionResultsData for testing\nAdd downloadSessionResultsEvent on Instructor Home Page and Instructor Sessions Page", "createdAt": "2020-02-17T06:34:00Z", "url": "https://github.com/TEAMMATES/teammates/pull/9961", "merged": true, "mergeCommit": {"oid": "cb7a01a88a91f96a515ffda4fea7df8e16622227"}, "closed": true, "closedAt": "2020-04-01T08:58:32Z", "author": {"login": "niqiukun"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFHWr0gH2gAyMzc1OTYzODgwOmU4YzI0MDNiMDI0NDYyMjY3MzllYzlkMzg0OGE1YTIzMTkzODBkNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTTocggBqjMxODY4Mzc0NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e8c2403b02446226739ec9d3848a5a2319380d59", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/e8c2403b02446226739ec9d3848a5a2319380d59", "committedDate": "2020-02-17T06:29:49Z", "message": "Enable downloading of feedback session results as csv"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "027d7f3b1859c8c86c090935ba9dd1152a1cf44e", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/027d7f3b1859c8c86c090935ba9dd1152a1cf44e", "committedDate": "2020-02-23T06:48:44Z", "message": "Create runtime wrapper for ExceedingRangeException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8b44ab557dbf1e1ef609f298f89bac0f979f842", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f8b44ab557dbf1e1ef609f298f89bac0f979f842", "committedDate": "2020-02-27T15:25:25Z", "message": "Add GetSessionResultsAction Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db82b9d884aa9e07646f42928f4c42117ff68fa4", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/db82b9d884aa9e07646f42928f4c42117ff68fa4", "committedDate": "2020-02-27T15:27:47Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32f0d5e7458578010604d925fedc7957c5d2c71e", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/32f0d5e7458578010604d925fedc7957c5d2c71e", "committedDate": "2020-02-28T09:01:19Z", "message": "Merge branch 'master' into download-session-result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d5ee678747758fe9faaac743f8761643787d485", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7d5ee678747758fe9faaac743f8761643787d485", "committedDate": "2020-02-28T09:38:54Z", "message": "Add tests for GetSessionResultsAsCsvAction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "024786b08dce8728186736b2d0efaf52d37547d2", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/024786b08dce8728186736b2d0efaf52d37547d2", "committedDate": "2020-02-28T10:29:08Z", "message": "Enable downloading session results from instructor home page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd80d858998530dd0d4de1189160a96d551efe11", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/dd80d858998530dd0d4de1189160a96d551efe11", "committedDate": "2020-02-29T16:14:57Z", "message": "Migrate tests from InstructorFeedbackResultsDownloadActionTest to GetSessionResultsAsCsvActionTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/daeb3878b89fc879e37dd9d711d9405fc88d1050", "committedDate": "2020-02-29T16:39:03Z", "message": "Fix for PMD checks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDUxOTA1", "url": "https://github.com/TEAMMATES/teammates/pull/9961#pullrequestreview-372451905", "createdAt": "2020-03-11T03:14:32Z", "commit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzoxNDozMlrOF0n8Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzo0MTozOVrOF0oS7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyNDY0Mw==", "bodyText": "I honestly feel SectionDetail.containsSectionDetail should return true/false instead. You are not even using the value it returns here.", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r390724643", "createdAt": "2020-03-11T03:14:32Z", "author": {"login": "rrtheonlyone"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAsCsvAction.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package teammates.ui.webapi.action;\n+\n+import teammates.common.datatransfer.SectionDetail;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityDoesNotExistException;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.exception.ExceedingRangeException;\n+import teammates.common.exception.InvalidHttpParameterException;\n+import teammates.common.exception.RequestExceedingRangeException;\n+import teammates.common.util.Const;\n+\n+/**\n+ * Gets feedback session results in csv.\n+ */\n+public class GetSessionResultsAsCsvAction extends Action {\n+\n+    @Override\n+    protected AuthType getMinAuthLevel() {\n+        return AuthType.PUBLIC;\n+    }\n+\n+    @Override\n+    public void checkSpecificAccessControl() {\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n+\n+        FeedbackSessionAttributes fs = logic.getFeedbackSession(feedbackSessionName, courseId);\n+\n+        if (fs == null) {\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session is not found\"));\n+        }\n+\n+        InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n+        gateKeeper.verifyAccessible(instructor, fs);\n+    }\n+\n+    @Override\n+    public ActionResult execute() {\n+        String section = getRequestParamValue(Const.ParamsNames.SECTION_NAME);\n+        String sectionDetailValue = getRequestParamValue(Const.ParamsNames.SECTION_NAME_DETAIL);\n+        SectionDetail sectionDetail = SectionDetail.NOT_APPLICABLE;\n+        if (section != null && sectionDetailValue != null && !sectionDetailValue.isEmpty()) {\n+            if (SectionDetail.containsSectionDetail(sectionDetailValue) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyNDc1Nw==", "bodyText": "what is this supposed to be? Is it a placeholder of some kind for later?", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r390724757", "createdAt": "2020-03-11T03:15:07Z", "author": {"login": "rrtheonlyone"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAsCsvAction.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package teammates.ui.webapi.action;\n+\n+import teammates.common.datatransfer.SectionDetail;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityDoesNotExistException;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.exception.ExceedingRangeException;\n+import teammates.common.exception.InvalidHttpParameterException;\n+import teammates.common.exception.RequestExceedingRangeException;\n+import teammates.common.util.Const;\n+\n+/**\n+ * Gets feedback session results in csv.\n+ */\n+public class GetSessionResultsAsCsvAction extends Action {\n+\n+    @Override\n+    protected AuthType getMinAuthLevel() {\n+        return AuthType.PUBLIC;\n+    }\n+\n+    @Override\n+    public void checkSpecificAccessControl() {\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n+\n+        FeedbackSessionAttributes fs = logic.getFeedbackSession(feedbackSessionName, courseId);\n+\n+        if (fs == null) {\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session is not found\"));\n+        }\n+\n+        InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n+        gateKeeper.verifyAccessible(instructor, fs);\n+    }\n+\n+    @Override\n+    public ActionResult execute() {\n+        String section = getRequestParamValue(Const.ParamsNames.SECTION_NAME);\n+        String sectionDetailValue = getRequestParamValue(Const.ParamsNames.SECTION_NAME_DETAIL);\n+        SectionDetail sectionDetail = SectionDetail.NOT_APPLICABLE;\n+        if (section != null && sectionDetailValue != null && !sectionDetailValue.isEmpty()) {\n+            if (SectionDetail.containsSectionDetail(sectionDetailValue) == null) {\n+                throw new InvalidHttpParameterException(\"Section detail is invalid.\");\n+            }\n+            sectionDetail = SectionDetail.valueOf(sectionDetailValue);\n+        }\n+\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n+        String questionId = getRequestParamValue(Const.ParamsNames.FEEDBACK_QUESTION_ID);\n+        boolean isMissingResponsesShown = getBooleanRequestParamValue(\n+                Const.ParamsNames.FEEDBACK_RESULTS_INDICATE_MISSING_RESPONSES);\n+        boolean isStatsShown = getBooleanRequestParamValue(Const.ParamsNames.FEEDBACK_RESULTS_SHOWSTATS);\n+        String simulateExcessDataForTesting = getRequestParamValue(\"simulateExcessDataForTesting\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyNTYwNA==", "bodyText": "I feel \"All\".equals(section) is a little hacky and hardcoded - any way to make it cleaner?", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r390725604", "createdAt": "2020-03-11T03:18:58Z", "author": {"login": "rrtheonlyone"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAsCsvAction.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package teammates.ui.webapi.action;\n+\n+import teammates.common.datatransfer.SectionDetail;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityDoesNotExistException;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.exception.ExceedingRangeException;\n+import teammates.common.exception.InvalidHttpParameterException;\n+import teammates.common.exception.RequestExceedingRangeException;\n+import teammates.common.util.Const;\n+\n+/**\n+ * Gets feedback session results in csv.\n+ */\n+public class GetSessionResultsAsCsvAction extends Action {\n+\n+    @Override\n+    protected AuthType getMinAuthLevel() {\n+        return AuthType.PUBLIC;\n+    }\n+\n+    @Override\n+    public void checkSpecificAccessControl() {\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n+\n+        FeedbackSessionAttributes fs = logic.getFeedbackSession(feedbackSessionName, courseId);\n+\n+        if (fs == null) {\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session is not found\"));\n+        }\n+\n+        InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n+        gateKeeper.verifyAccessible(instructor, fs);\n+    }\n+\n+    @Override\n+    public ActionResult execute() {\n+        String section = getRequestParamValue(Const.ParamsNames.SECTION_NAME);\n+        String sectionDetailValue = getRequestParamValue(Const.ParamsNames.SECTION_NAME_DETAIL);\n+        SectionDetail sectionDetail = SectionDetail.NOT_APPLICABLE;\n+        if (section != null && sectionDetailValue != null && !sectionDetailValue.isEmpty()) {\n+            if (SectionDetail.containsSectionDetail(sectionDetailValue) == null) {\n+                throw new InvalidHttpParameterException(\"Section detail is invalid.\");\n+            }\n+            sectionDetail = SectionDetail.valueOf(sectionDetailValue);\n+        }\n+\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n+        String questionId = getRequestParamValue(Const.ParamsNames.FEEDBACK_QUESTION_ID);\n+        boolean isMissingResponsesShown = getBooleanRequestParamValue(\n+                Const.ParamsNames.FEEDBACK_RESULTS_INDICATE_MISSING_RESPONSES);\n+        boolean isStatsShown = getBooleanRequestParamValue(Const.ParamsNames.FEEDBACK_RESULTS_SHOWSTATS);\n+        String simulateExcessDataForTesting = getRequestParamValue(\"simulateExcessDataForTesting\");\n+\n+        String fileContent = \"\";\n+\n+        InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n+\n+        try {\n+            if (\"true\".equals(simulateExcessDataForTesting)) {\n+                throw new ExceedingRangeException(\"This session has more responses than that can be downloaded at one go.\");\n+            }\n+\n+            if (section == null || \"All\".equals(section)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyNTk2Mg==", "bodyText": "function is a little messy - any way you can group your params that you read in from the API?\ne.g. something like\n//read in section details\n-- all section related fields --\n\n//read in course metadata\n\n//read in options for csv", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r390725962", "createdAt": "2020-03-11T03:20:19Z", "author": {"login": "rrtheonlyone"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAsCsvAction.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package teammates.ui.webapi.action;\n+\n+import teammates.common.datatransfer.SectionDetail;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityDoesNotExistException;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.exception.ExceedingRangeException;\n+import teammates.common.exception.InvalidHttpParameterException;\n+import teammates.common.exception.RequestExceedingRangeException;\n+import teammates.common.util.Const;\n+\n+/**\n+ * Gets feedback session results in csv.\n+ */\n+public class GetSessionResultsAsCsvAction extends Action {\n+\n+    @Override\n+    protected AuthType getMinAuthLevel() {\n+        return AuthType.PUBLIC;\n+    }\n+\n+    @Override\n+    public void checkSpecificAccessControl() {\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n+\n+        FeedbackSessionAttributes fs = logic.getFeedbackSession(feedbackSessionName, courseId);\n+\n+        if (fs == null) {\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session is not found\"));\n+        }\n+\n+        InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n+        gateKeeper.verifyAccessible(instructor, fs);\n+    }\n+\n+    @Override\n+    public ActionResult execute() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyNjA4Nw==", "bodyText": "is this a related change?", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r390726087", "createdAt": "2020-03-11T03:20:52Z", "author": {"login": "rrtheonlyone"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -25,6 +25,10 @@ protected AuthType getMinAuthLevel() {\n \n     @Override\n     public void checkSpecificAccessControl() {\n+        if (userInfo.isAdmin) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyOTE2Mw==", "bodyText": "For this, what about a test for:\n\ntypical case with section name \"All\"? (the if case above)\ntypical case with stats shown?", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r390729163", "createdAt": "2020-03-11T03:35:38Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/test/cases/webapi/GetSessionResultsAsCsvActionTest.java", "diffHunk": "@@ -0,0 +1,377 @@\n+package teammates.test.cases.webapi;\n+\n+import org.apache.http.HttpStatus;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.exception.NullHttpParameterException;\n+import teammates.common.exception.RequestExceedingRangeException;\n+import teammates.common.util.Const;\n+import teammates.test.driver.CsvChecker;\n+import teammates.ui.webapi.action.CsvResult;\n+import teammates.ui.webapi.action.GetSessionResultsAsCsvAction;\n+\n+/**\n+ * SUT: {@link GetSessionResultsAsCsvAction}.\n+ */\n+public class GetSessionResultsAsCsvActionTest extends BaseActionTest<GetSessionResultsAsCsvAction> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczMDExNw==", "bodyText": "for the frontend, is this the only place from which an instructor can download results? (the sessions table?)\nThe API has support for more params - but they are not used anywhere at the moment. Like missing responses / stats is true by default and there is no section name / detail.", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r390730117", "createdAt": "2020-03-11T03:39:59Z", "author": {"login": "rrtheonlyone"}, "path": "src/web/app/pages-instructor/instructor-session-base-page.component.ts", "diffHunk": "@@ -221,6 +222,29 @@ export abstract class InstructorSessionBasePageComponent {\n         { courseid: model.feedbackSession.courseId, fsname: model.feedbackSession.feedbackSessionName });\n   }\n \n+  /**\n+   * Downloads the result of a feedback session in csv.\n+   */\n+  downloadSessionResult(model: SessionsTableRowModel): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczMDQ3Ng==", "bodyText": "Is this test related to your PR?", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r390730476", "createdAt": "2020-03-11T03:41:39Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/test/cases/webapi/GetSessionResultsActionTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+package teammates.test.cases.webapi;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daeb3878b89fc879e37dd9d711d9405fc88d1050"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bee5d0c077488b3e3afba190ff0a48d1d385c8fe", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/bee5d0c077488b3e3afba190ff0a48d1d385c8fe", "committedDate": "2020-03-11T04:27:24Z", "message": "Change return type of containsSectionDetail and group params"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60e26129ebc2d2e872fb298f83b742282995b332", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/60e26129ebc2d2e872fb298f83b742282995b332", "committedDate": "2020-03-11T04:28:28Z", "message": "Remove hardcoded value of `section == \"All\"`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d56ebcaf14953f9d7ae170d90366dd967600f1d", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/3d56ebcaf14953f9d7ae170d90366dd967600f1d", "committedDate": "2020-03-11T05:20:46Z", "message": "Add test cases for statistics hidden and shown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f58afc10db919ec3ce296add62a9db703a693dc2", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f58afc10db919ec3ce296add62a9db703a693dc2", "committedDate": "2020-03-11T05:29:38Z", "message": "Merge branch 'master' into download-session-result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "058520a829bb3296e2652353f2b081b0999361e0", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/058520a829bb3296e2652353f2b081b0999361e0", "committedDate": "2020-03-11T05:47:11Z", "message": "Move http request to feedback sessions service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8767316a72304976799c93953c306010741e7df1", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8767316a72304976799c93953c306010741e7df1", "committedDate": "2020-03-11T10:01:12Z", "message": "Use custom data bundle for GetSessionResultsAsCsvActionTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d4653384caa2bfcbf8a2c5e5cb8bb56e108d718", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5d4653384caa2bfcbf8a2c5e5cb8bb56e108d718", "committedDate": "2020-03-11T07:47:00Z", "message": "Revert \"Add test cases for statistics hidden and shown\"\n\nThis reverts commit 3d56ebcaf14953f9d7ae170d90366dd967600f1d."}, "afterCommit": {"oid": "8767316a72304976799c93953c306010741e7df1", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8767316a72304976799c93953c306010741e7df1", "committedDate": "2020-03-11T10:01:12Z", "message": "Use custom data bundle for GetSessionResultsAsCsvActionTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad69b46e6db731757547488aef53234346161255", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ad69b46e6db731757547488aef53234346161255", "committedDate": "2020-03-13T02:41:26Z", "message": "Remove unnecessary data from custom data bundle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fa2bc690a4d894c8418bb79166eb16bfa56d3ea", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7fa2bc690a4d894c8418bb79166eb16bfa56d3ea", "committedDate": "2020-03-13T03:03:21Z", "message": "Further reduce custom bundle size by using typical bundle for other tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd2d41c45c0ac79a77219ad4972d846ea26094c2", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/fd2d41c45c0ac79a77219ad4972d846ea26094c2", "committedDate": "2020-03-16T04:34:16Z", "message": "Merge branch 'master' into download-session-result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e596403cfec91c650f9e00bacb7255549b5602c0", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/e596403cfec91c650f9e00bacb7255549b5602c0", "committedDate": "2020-03-16T05:03:04Z", "message": "Add missing type param for csv download"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MzE1ODI1", "url": "https://github.com/TEAMMATES/teammates/pull/9961#pullrequestreview-378315825", "createdAt": "2020-03-20T09:02:12Z", "commit": {"oid": "e596403cfec91c650f9e00bacb7255549b5602c0"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTowMjoxMlrOF5L1pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTowNDozMVrOF5L52Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwNzExMA==", "bodyText": "I am still not entirely convinced by this. I feel that the excess data error should come from the logic layer (and not passed in from the client).\nWhy is it part of our API params?", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r395507110", "createdAt": "2020-03-20T09:02:12Z", "author": {"login": "rrtheonlyone"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAsCsvAction.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package teammates.ui.webapi.action;\n+\n+import teammates.common.datatransfer.SectionDetail;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityDoesNotExistException;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.exception.ExceedingRangeException;\n+import teammates.common.exception.InvalidHttpParameterException;\n+import teammates.common.exception.RequestExceedingRangeException;\n+import teammates.common.util.Const;\n+\n+/**\n+ * Gets feedback session results in csv.\n+ */\n+public class GetSessionResultsAsCsvAction extends Action {\n+\n+    @Override\n+    protected AuthType getMinAuthLevel() {\n+        return AuthType.PUBLIC;\n+    }\n+\n+    @Override\n+    public void checkSpecificAccessControl() {\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n+\n+        FeedbackSessionAttributes fs = logic.getFeedbackSession(feedbackSessionName, courseId);\n+\n+        if (fs == null) {\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session is not found\"));\n+        }\n+\n+        InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n+        gateKeeper.verifyAccessible(instructor, fs);\n+    }\n+\n+    @Override\n+    public ActionResult execute() {\n+        // read in session details\n+        String section = getRequestParamValue(Const.ParamsNames.SECTION_NAME);\n+        String sectionDetailValue = getRequestParamValue(Const.ParamsNames.SECTION_NAME_DETAIL);\n+        SectionDetail sectionDetail = SectionDetail.NOT_APPLICABLE;\n+        if (section != null && sectionDetailValue != null && !sectionDetailValue.isEmpty()) {\n+            if (!SectionDetail.containsSectionDetail(sectionDetailValue)) {\n+                throw new InvalidHttpParameterException(\"Section detail is invalid.\");\n+            }\n+            sectionDetail = SectionDetail.valueOf(sectionDetailValue);\n+        }\n+\n+        // read in other session-related info\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n+        String questionId = getRequestParamValue(Const.ParamsNames.FEEDBACK_QUESTION_ID);\n+\n+        // read in optional params for csv generation\n+        boolean isMissingResponsesShown = getBooleanRequestParamValue(\n+                Const.ParamsNames.FEEDBACK_RESULTS_INDICATE_MISSING_RESPONSES);\n+        boolean isStatsShown = getBooleanRequestParamValue(Const.ParamsNames.FEEDBACK_RESULTS_SHOWSTATS);\n+\n+        // read in params for testing\n+        String simulateExcessDataForTesting = getRequestParamValue(\"simulateExcessDataForTesting\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e596403cfec91c650f9e00bacb7255549b5602c0"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwNzc0Mg==", "bodyText": "Where are the tests for student's accessing their results?", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r395507742", "createdAt": "2020-03-20T09:03:33Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/test/cases/webapi/GetSessionResultsActionTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+package teammates.test.cases.webapi;\n+\n+import org.apache.http.HttpStatus;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.exception.UnauthorizedAccessException;\n+import teammates.common.util.Const;\n+import teammates.ui.webapi.action.GetSessionResultsAction;\n+import teammates.ui.webapi.action.JsonResult;\n+import teammates.ui.webapi.output.SessionResultsData;\n+import teammates.ui.webapi.request.Intent;\n+\n+/**\n+ * SUT: {@link GetSessionResultsAction}.\n+ */\n+public class GetSessionResultsActionTest extends BaseActionTest<GetSessionResultsAction> {\n+\n+    @Override\n+    protected String getActionUri() {\n+        return Const.ResourceURIs.RESULT;\n+    }\n+\n+    @Override\n+    protected String getRequestMethod() {\n+        return GET;\n+    }\n+\n+    @Override\n+    @Test\n+    protected void testExecute() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e596403cfec91c650f9e00bacb7255549b5602c0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwODE4NQ==", "bodyText": "I see what you are doing here and it works! Although its a little different from how our other tests work.. maybe @xpdavid can help improve this.", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r395508185", "createdAt": "2020-03-20T09:04:31Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/test/cases/webapi/GetSessionResultsAsCsvActionTest.java", "diffHunk": "@@ -0,0 +1,409 @@\n+package teammates.test.cases.webapi;\n+\n+import org.apache.http.HttpStatus;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.DataBundle;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.exception.NullHttpParameterException;\n+import teammates.common.exception.RequestExceedingRangeException;\n+import teammates.common.util.Const;\n+import teammates.test.driver.CsvChecker;\n+import teammates.ui.webapi.action.CsvResult;\n+import teammates.ui.webapi.action.GetSessionResultsAsCsvAction;\n+\n+/**\n+ * SUT: {@link GetSessionResultsAsCsvAction}.\n+ */\n+public class GetSessionResultsAsCsvActionTest extends BaseActionTest<GetSessionResultsAsCsvAction> {\n+\n+    private DataBundle dataBundle;\n+\n+    @Override\n+    protected String getActionUri() {\n+        return Const.ResourceURIs.RESULT_CSV;\n+    }\n+\n+    @Override\n+    protected String getRequestMethod() {\n+        return GET;\n+    }\n+\n+    private void loadCustomBundle() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e596403cfec91c650f9e00bacb7255549b5602c0"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b90f83eb673f1c384a110094267f97c720c618d2", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/b90f83eb673f1c384a110094267f97c720c618d2", "committedDate": "2020-03-22T08:08:36Z", "message": "Add student test cases for GetSessionResultsActionTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07775c59bcf887d649bac5b13e9ca5d56aba8c4a", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/07775c59bcf887d649bac5b13e9ca5d56aba8c4a", "committedDate": "2020-03-23T04:45:46Z", "message": "Merge branch 'master' into download-session-result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "144866190df0686070e80d5d5cf341c64c180d4f", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/144866190df0686070e80d5d5cf341c64c180d4f", "committedDate": "2020-03-29T10:23:32Z", "message": "Merge branch 'master' into download-session-result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "040b2758855f1f1e730a223f920ec2751ba234b4", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/040b2758855f1f1e730a223f920ec2751ba234b4", "committedDate": "2020-03-30T02:38:17Z", "message": "Remove param for `ExceedingRangeException` testing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5d0a95a10b3eb37001f176476233e8ecf62f5ba", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/b5d0a95a10b3eb37001f176476233e8ecf62f5ba", "committedDate": "2020-03-30T02:21:27Z", "message": "Remove param for `ExceedingRangeException` testing"}, "afterCommit": {"oid": "040b2758855f1f1e730a223f920ec2751ba234b4", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/040b2758855f1f1e730a223f920ec2751ba234b4", "committedDate": "2020-03-30T02:38:17Z", "message": "Remove param for `ExceedingRangeException` testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e74274580577afc8abe6472ac78281fa66bdb45", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9e74274580577afc8abe6472ac78281fa66bdb45", "committedDate": "2020-03-30T09:02:28Z", "message": "Merge branch 'master' into download-session-result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7e14fd7d6acaba00d0ee6ab492a4ca55246bc2a", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/e7e14fd7d6acaba00d0ee6ab492a4ca55246bc2a", "committedDate": "2020-03-30T11:02:44Z", "message": "Merge branch 'master' into download-session-result"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzQwMTg4", "url": "https://github.com/TEAMMATES/teammates/pull/9961#pullrequestreview-385340188", "createdAt": "2020-04-01T07:49:24Z", "commit": {"oid": "e7e14fd7d6acaba00d0ee6ab492a4ca55246bc2a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzo0OToyNFrOF-0sNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzo0OToyNFrOF-0sNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxOTMxOQ==", "bodyText": "Is this method added just for the sake of testing?\nIf yes, please convert it to helper method in the test file or you are responsible to write a comprehensive test for it (which I think it is not necessary).", "url": "https://github.com/TEAMMATES/teammates/pull/9961#discussion_r401419319", "createdAt": "2020-04-01T07:49:24Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/output/SessionResultsData.java", "diffHunk": "@@ -77,6 +78,30 @@ public SessionResultsData(FeedbackSessionResultsBundle bundle, StudentAttributes\n         return questions;\n     }\n \n+    @Override\n+    public boolean equals(Object obj) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7e14fd7d6acaba00d0ee6ab492a4ca55246bc2a"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e1b4f31b3eeaa7e6d88d3b8ddedb6631fdf42b1", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/6e1b4f31b3eeaa7e6d88d3b8ddedb6631fdf42b1", "committedDate": "2020-04-01T08:42:48Z", "message": "Move helper methods to test and change accessibility of inner classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9fa45a4a0b0d717be1ba6a8c3d8ba54ca928c883", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9fa45a4a0b0d717be1ba6a8c3d8ba54ca928c883", "committedDate": "2020-04-01T08:20:43Z", "message": "Move helper methods to test and change accessibility of inner classes"}, "afterCommit": {"oid": "6e1b4f31b3eeaa7e6d88d3b8ddedb6631fdf42b1", "author": {"user": {"login": "niqiukun", "name": "Ni Tianzhen"}}, "url": "https://github.com/TEAMMATES/teammates/commit/6e1b4f31b3eeaa7e6d88d3b8ddedb6631fdf42b1", "committedDate": "2020-04-01T08:42:48Z", "message": "Move helper methods to test and change accessibility of inner classes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4435, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}