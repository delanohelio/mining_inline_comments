{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODY1NDIy", "number": 10301, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxODo1Njo1NVrOENn63g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzo0NTowNVrOENrD7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzIwOTkwOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxODo1Njo1NVrOGwWWmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxODo1Njo1NVrOGwWWmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MTA2NQ==", "bodyText": "I don't think this will work as the two variable refer to the same object.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.feedbackSessionModelBeforeEditing = this.sessionEditFormModel;\n          \n          \n            \n                    this.feedbackSessionModelBeforeEditing = this.getSessionEditFormModel(feedbackSession);\n          \n      \n    \n    \n  \n\nEdit: Will work as the event emitter always emit a new object :P But let's not depends on the implicit setting.", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453351065", "createdAt": "2020-07-12T18:56:55Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -209,6 +212,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n       })\n       .subscribe((feedbackSession: FeedbackSession) => {\n         this.sessionEditFormModel = this.getSessionEditFormModel(feedbackSession);\n+        this.feedbackSessionModelBeforeEditing = this.sessionEditFormModel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e32a30ad37cebe14d00c233dc95843ab626ae5a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzcxOTk3OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/session-edit-form/session-edit-form.component.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzo0MTo1NVrOGwaesQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTo0MjoyNFrOGxMPmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODY3Mw==", "bodyText": "We should inform #10293 to include the model in the standardization also.", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453418673", "createdAt": "2020-07-13T03:41:55Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/session-edit-form/session-edit-form.component.html", "diffHunk": "@@ -36,6 +36,22 @@ <h5 class=\"text-md-right\">Or: </h5>\n       <div class=\"col-12 text-center text-md-right session-form-buttons\">\n         <button type=\"button\" class=\"btn btn-primary\" (click)=\"triggerModelChange('isEditable', true)\" *ngIf=\"formMode == SessionEditFormMode.EDIT && !model.isEditable\"><i class=\"fas fa-pencil-alt\"></i> Edit</button>\n         <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitFormHandler()\" [disabled]=\"model.isSaving\" *ngIf=\"model.isEditable\"><i class=\"fas fa-check\"></i> Save <tm-ajax-loading *ngIf=\"model.isSaving\"></tm-ajax-loading></button>\n+        <button type=\"button\" class=\"btn btn-primary\" ngbTooltip=\"Discard changes to the feedback session\" (click)=\"cancelHandler(sessionDiscardModal)\" *ngIf=\"model.isEditable\"><i class=\"fas fa-ban\"></i> Cancel </button>\n+        <ng-template #sessionDiscardModal let-modal>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIzNDAwOQ==", "bodyText": "@ccyccyccy fyi", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r454234009", "createdAt": "2020-07-14T09:42:24Z", "author": {"login": "madanalogy"}, "path": "src/web/app/components/session-edit-form/session-edit-form.component.html", "diffHunk": "@@ -36,6 +36,22 @@ <h5 class=\"text-md-right\">Or: </h5>\n       <div class=\"col-12 text-center text-md-right session-form-buttons\">\n         <button type=\"button\" class=\"btn btn-primary\" (click)=\"triggerModelChange('isEditable', true)\" *ngIf=\"formMode == SessionEditFormMode.EDIT && !model.isEditable\"><i class=\"fas fa-pencil-alt\"></i> Edit</button>\n         <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitFormHandler()\" [disabled]=\"model.isSaving\" *ngIf=\"model.isEditable\"><i class=\"fas fa-check\"></i> Save <tm-ajax-loading *ngIf=\"model.isSaving\"></tm-ajax-loading></button>\n+        <button type=\"button\" class=\"btn btn-primary\" ngbTooltip=\"Discard changes to the feedback session\" (click)=\"cancelHandler(sessionDiscardModal)\" *ngIf=\"model.isEditable\"><i class=\"fas fa-ban\"></i> Cancel </button>\n+        <ng-template #sessionDiscardModal let-modal>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODY3Mw=="}, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzcyMjY5OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzo0NDowNlrOGwagdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxNzo1NlrOGwtSFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTEyNQ==", "bodyText": "Same problem here (they refer to the same thing).", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453419125", "createdAt": "2020-07-13T03:44:06Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -115,6 +115,9 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     hasEmailSettingsPanelExpanded: false,\n   };\n \n+  // to get the original session model on discard changes\n+  feedbackSessionModelBeforeEditing: SessionEditFormModel = this.sessionEditFormModel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU0MzQ0MA==", "bodyText": "This is just the declaration? I figured this was better than copy pasting a duplicate of the skeleton", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453543440", "createdAt": "2020-07-13T10:11:33Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -115,6 +115,9 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     hasEmailSettingsPanelExpanded: false,\n   };\n \n+  // to get the original session model on discard changes\n+  feedbackSessionModelBeforeEditing: SessionEditFormModel = this.sessionEditFormModel;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTEyNQ=="}, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyNjc0Mw==", "bodyText": "Nope. It is the initial value for the component (although they will be overwritten later).", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453726743", "createdAt": "2020-07-13T15:17:56Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -115,6 +115,9 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     hasEmailSettingsPanelExpanded: false,\n   };\n \n+  // to get the original session model on discard changes\n+  feedbackSessionModelBeforeEditing: SessionEditFormModel = this.sessionEditFormModel;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTEyNQ=="}, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzcyMzc2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzo0NDozOFrOGwahDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxODoyMFrOGwtTYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTI3Ng==", "bodyText": "And here", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453419276", "createdAt": "2020-07-13T03:44:38Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -333,6 +337,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n    */\n   editExistingSessionHandler(): void {\n     this.sessionEditFormModel.isSaving = true;\n+    this.feedbackSessionModelBeforeEditing = this.sessionEditFormModel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU0NTE0MA==", "bodyText": "feedbackSession is not available here, maybe I could use JSON.parse(JSON.stringify(Object)) for deep copy?", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453545140", "createdAt": "2020-07-13T10:14:47Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -333,6 +337,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n    */\n   editExistingSessionHandler(): void {\n     this.sessionEditFormModel.isSaving = true;\n+    this.feedbackSessionModelBeforeEditing = this.sessionEditFormModel;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTI3Ng=="}, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyNzA3NA==", "bodyText": "Yes. We can should standardize the behavior of deep copy later.", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453727074", "createdAt": "2020-07-13T15:18:20Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -333,6 +337,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n    */\n   editExistingSessionHandler(): void {\n     this.sessionEditFormModel.isSaving = true;\n+    this.feedbackSessionModelBeforeEditing = this.sessionEditFormModel;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTI3Ng=="}, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzcyNDYwOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzo0NTowNVrOGwahfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMDoxNToyM1rOGwiOQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTM5MA==", "bodyText": "And here.", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453419390", "createdAt": "2020-07-13T03:45:05Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -382,6 +387,13 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     });\n   }\n \n+  /**\n+   * Handles canceling existing session event without saving changes.\n+   */\n+  cancelEditingSessionHandler(): void {\n+    this.sessionEditFormModel = this.feedbackSessionModelBeforeEditing;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU0NTUzNw==", "bodyText": "Same question regarding how to go about implementing the deep copy", "url": "https://github.com/TEAMMATES/teammates/pull/10301#discussion_r453545537", "createdAt": "2020-07-13T10:15:23Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -382,6 +387,13 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     });\n   }\n \n+  /**\n+   * Handles canceling existing session event without saving changes.\n+   */\n+  cancelEditingSessionHandler(): void {\n+    this.sessionEditFormModel = this.feedbackSessionModelBeforeEditing;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTM5MA=="}, "originalCommit": {"oid": "7b9c0f0f45da21ead38ca17f0f4cfff8a116a3fb"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3616, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}