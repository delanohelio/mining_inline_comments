{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMDA1ODQ2", "number": 10323, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo1NDoxOFrOEPpFsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTowODoxM1rOEP3Oxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODM3Mjk3OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo1NDoxOFrOGzdzkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo1NDoxOFrOGzdzkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxODg5OQ==", "bodyText": "I think we need to explain the workaround a bit as this violate our design in frontend where we want to minimize the unnecessary communication.", "url": "https://github.com/TEAMMATES/teammates/pull/10323#discussion_r456618899", "createdAt": "2020-07-17T18:54:18Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -538,24 +538,21 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n           this.feedbackQuestionModels.set(updatedQuestion.feedbackQuestionId, updatedQuestion);\n           this.loadResponseStatusForQuestion(this.questionEditFormModels[index]);\n \n-          // shift question if needed\n+          // reload questions in new order if needed\n           if (originalQuestionNumber !== updatedQuestion.questionNumber) {\n-            // move question form\n-            this.moveQuestionForm(\n-                originalQuestionNumber - 1, updatedQuestion.questionNumber - 1);\n-            this.normalizeQuestionNumberInQuestionForms();\n+            this.reloadQuestionForms();\n           }\n \n           this.statusMessageService.showSuccessToast('The changes to the question have been updated.');\n         }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); });\n   }\n \n   /**\n-   * Moves question edit form from the original position to the new position.\n+   * Reloads feedback questions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a8b5de6c3234b9ddbf7dcecbe54ea69092861d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDY4OTk5OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTowODoxM1rOGzwLTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTozMzoyNVrOGzwV4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxOTg4Ng==", "bodyText": "This will make all modals previously collapsed to be expanded. Only those which are previously expanded should be re-expanded.", "url": "https://github.com/TEAMMATES/teammates/pull/10323#discussion_r456919886", "createdAt": "2020-07-19T15:08:13Z", "author": {"login": "wkurniawan07"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -556,6 +557,15 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n   private moveQuestionForm(originalPosition: number, newPosition: number): void {\n     this.questionEditFormModels.splice(newPosition, 0,\n         this.questionEditFormModels.splice(originalPosition, 1)[0]);\n+\n+    // all expanded questions that were moved upwards must be re-expanded to reload rich text editor\n+    const start: number = Math.min(originalPosition, newPosition);\n+    const movedExpandedQuestions: QuestionEditFormModel[] = this.questionEditFormModels\n+      .slice(start, newPosition + 1)\n+      .filter((model: QuestionEditFormModel) => !model.isCollapsed);\n+    movedExpandedQuestions.forEach((model: QuestionEditFormModel) => model.isCollapsed = true);\n+    this.changeDetectorRef.detectChanges();\n+    movedExpandedQuestions.forEach((model: QuestionEditFormModel) => model.isCollapsed = false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "170f86db36689694f7133576b165158dfea0e6d6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyMDgyMA==", "bodyText": "@wkurniawan07  I have filtered to only those that are not collapsed so those that are originally collapsed will not be affected. (line 565)", "url": "https://github.com/TEAMMATES/teammates/pull/10323#discussion_r456920820", "createdAt": "2020-07-19T15:16:51Z", "author": {"login": "jtankw3"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -556,6 +557,15 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n   private moveQuestionForm(originalPosition: number, newPosition: number): void {\n     this.questionEditFormModels.splice(newPosition, 0,\n         this.questionEditFormModels.splice(originalPosition, 1)[0]);\n+\n+    // all expanded questions that were moved upwards must be re-expanded to reload rich text editor\n+    const start: number = Math.min(originalPosition, newPosition);\n+    const movedExpandedQuestions: QuestionEditFormModel[] = this.questionEditFormModels\n+      .slice(start, newPosition + 1)\n+      .filter((model: QuestionEditFormModel) => !model.isCollapsed);\n+    movedExpandedQuestions.forEach((model: QuestionEditFormModel) => model.isCollapsed = true);\n+    this.changeDetectorRef.detectChanges();\n+    movedExpandedQuestions.forEach((model: QuestionEditFormModel) => model.isCollapsed = false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxOTg4Ng=="}, "originalCommit": {"oid": "170f86db36689694f7133576b165158dfea0e6d6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyMjU5Mw==", "bodyText": "Ah right, I missed that.", "url": "https://github.com/TEAMMATES/teammates/pull/10323#discussion_r456922593", "createdAt": "2020-07-19T15:33:25Z", "author": {"login": "wkurniawan07"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -556,6 +557,15 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n   private moveQuestionForm(originalPosition: number, newPosition: number): void {\n     this.questionEditFormModels.splice(newPosition, 0,\n         this.questionEditFormModels.splice(originalPosition, 1)[0]);\n+\n+    // all expanded questions that were moved upwards must be re-expanded to reload rich text editor\n+    const start: number = Math.min(originalPosition, newPosition);\n+    const movedExpandedQuestions: QuestionEditFormModel[] = this.questionEditFormModels\n+      .slice(start, newPosition + 1)\n+      .filter((model: QuestionEditFormModel) => !model.isCollapsed);\n+    movedExpandedQuestions.forEach((model: QuestionEditFormModel) => model.isCollapsed = true);\n+    this.changeDetectorRef.detectChanges();\n+    movedExpandedQuestions.forEach((model: QuestionEditFormModel) => model.isCollapsed = false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxOTg4Ng=="}, "originalCommit": {"oid": "170f86db36689694f7133576b165158dfea0e6d6"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3653, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}