{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTQ3OTI2", "number": 10158, "title": "[#10146] Result Page: Add indicates missing response features", "bodyText": "Fixes #10146\n\n\n\nThe PR also fixes several bugs of missing responses feature in V6 where the giver recipient pairs are not complete.\nFor example, missing responses for anonymous student will be shown:\n\nCommit Organization\n\nThe first two commits are just refactor work and are explained in the commit message\nThe third commit enables the generation of missing responses in the backend. Here is the procedure (computation heavy):\n\nWe generate all giver-recipient pairs for questions\nRemove pairs that have real corresponding responses\nBuild missing responses and ship them in the allResponses field of SessionResultData. Missing responses are indicated by a new field in ResponseOutput called isMissingResponse.\n\n\nThe last commit displays the missing responses in the frontend.\n\nThere is one potential performance concern where the missing responses are generated in the backend without using boolean variable (reflected as HTTP params) to control the generation.\nThere are several reasons there:\n\nThe generation of missing responses are purely computational works and the performance is only related to how big the course is.\nWe don't need to resend the same result API request just to retrieve the missing responses and thus result in more clean code in the frontend\nDon't do Premature Optimization. The check box is checked by default when the page is loaded so the generation will always be run anyway.", "createdAt": "2020-06-03T04:01:56Z", "url": "https://github.com/TEAMMATES/teammates/pull/10158", "merged": true, "mergeCommit": {"oid": "33af5218bf8c93041ce0328c9de8754855dc2c17"}, "closed": true, "closedAt": "2020-06-05T02:22:21Z", "author": {"login": "xpdavid"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnhrpOABqjM0MDAzNTAzNzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoI6_yAFqTQyNDk1MDYxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5300f254b9289a8a75154b4e066dc4cf4e70093b", "author": {"user": {"login": "xpdavid", "name": "Xiao Pu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5300f254b9289a8a75154b4e066dc4cf4e70093b", "committedDate": "2020-06-03T04:00:28Z", "message": "display missing responses in the frontend"}, "afterCommit": {"oid": "0796adefa39468c16f1039cdb19ad29911ca64d6", "author": {"user": {"login": "xpdavid", "name": "Xiao Pu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/0796adefa39468c16f1039cdb19ad29911ca64d6", "committedDate": "2020-06-03T04:22:49Z", "message": "display missing responses in the frontend"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNDcxMjI1", "url": "https://github.com/TEAMMATES/teammates/pull/10158#pullrequestreview-423471225", "createdAt": "2020-06-03T11:45:57Z", "commit": {"oid": "0796adefa39468c16f1039cdb19ad29911ca64d6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTo0NTo1N1rOGeYJDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTo0ODo1N1rOGeYO5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUwNTk5Ng==", "bodyText": "MapMap -> Map", "url": "https://github.com/TEAMMATES/teammates/pull/10158#discussion_r434505996", "createdAt": "2020-06-03T11:45:57Z", "author": {"login": "wkurniawan07"}, "path": "src/test/java/teammates/test/cases/datatransfer/SessionResultsBundleTest.java", "diffHunk": "@@ -23,7 +23,7 @@\n public class SessionResultsBundleTest extends BaseTestCase {\n \n     @Test\n-    public void testGetResponseCommentsMap() {\n+    public void testGetQuestionResponseMapMap() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0796adefa39468c16f1039cdb19ad29911ca64d6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUwNjY0MQ==", "bodyText": "58 = 10 (total response) + 48 (total missing). It's not easy to justify where 10 and 48 come from, but 58 should not be left as a magic number.", "url": "https://github.com/TEAMMATES/teammates/pull/10158#discussion_r434506641", "createdAt": "2020-06-03T11:47:20Z", "author": {"login": "wkurniawan07"}, "path": "src/test/java/teammates/test/cases/logic/FeedbackSessionsLogicTest.java", "diffHunk": "@@ -2019,7 +2037,7 @@ public void testGetSessionResultsForUser_instructorAllQuestions_shouldGenerateCo\n                 getResponseId(\"qn5.resp1\", responseBundle) + \"={false,true}\",\n                 getResponseId(\"qn6.resp1\", responseBundle) + \"={true,true}\");\n         AssertHelper.assertContains(expectedStrings, mapString);\n-        assertEquals(10, bundle.getResponseVisibilityTable().size());\n+        assertEquals(58, bundle.getResponseVisibilityTable().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0796adefa39468c16f1039cdb19ad29911ca64d6"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUwNjcyNg==", "bodyText": "Similarly here for 43 = 7 + 36.", "url": "https://github.com/TEAMMATES/teammates/pull/10158#discussion_r434506726", "createdAt": "2020-06-03T11:47:29Z", "author": {"login": "wkurniawan07"}, "path": "src/test/java/teammates/test/cases/logic/FeedbackSessionsLogicTest.java", "diffHunk": "@@ -2061,7 +2086,7 @@ public void testGetSessionResultsForUser_instructorAllQuestionsSpecificSection_s\n                 getResponseId(\"qn2.resp3\", responseBundle) + \"={false,false}\",\n                 getResponseId(\"qn2.resp1\", responseBundle) + \"={false,false}\");\n         AssertHelper.assertContains(expectedStrings, mapString);\n-        assertEquals(7, bundle.getResponseVisibilityTable().size());\n+        assertEquals(43, bundle.getResponseVisibilityTable().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0796adefa39468c16f1039cdb19ad29911ca64d6"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUwNzQ5NQ==", "bodyText": "Is it possible/not too troublesome to generate the response details object based on the question type?", "url": "https://github.com/TEAMMATES/teammates/pull/10158#discussion_r434507495", "createdAt": "2020-06-03T11:48:57Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/logic/core/FeedbackSessionsLogic.java", "diffHunk": "@@ -1623,6 +1632,92 @@ private void addCommentVisibilityToTable(\n         commentVisibilityTable.put(frc.getId(), commentVisibility);\n     }\n \n+    /**\n+     * Builds viewable missing responses for the session for instructor.\n+     *\n+     * @param instructor the instructor\n+     * @param responseVisibilityTable the visibility table which will be updated with the visibility of missing responses\n+     * @param feedbackSession the feedback sessions\n+     * @param relatedQuestionsMap the relevant questions\n+     * @param existingResponses existing responses\n+     * @param courseRoster the course roster\n+     * @param section if not null, will only build missing responses for the section\n+     * @return a list of missing responses for the session.\n+     */\n+    private List<FeedbackResponseAttributes> buildMissingResponses(\n+            InstructorAttributes instructor,\n+            Map<String, boolean[]> responseVisibilityTable,\n+            FeedbackSessionAttributes feedbackSession, Map<String, FeedbackQuestionAttributes> relatedQuestionsMap,\n+            List<FeedbackResponseAttributes> existingResponses, CourseRoster courseRoster, @Nullable String section) {\n+\n+        // first get all possible giver recipient pairs\n+        Map<String, Map<String, Set<String>>> completeGiverRecipientMap =\n+                fqLogic.buildCompleteGiverRecipientMap(feedbackSession, relatedQuestionsMap.values(), courseRoster);\n+\n+        // remove the existing responses in those pairs\n+        for (FeedbackResponseAttributes existingResponse : existingResponses) {\n+            Map<String, Set<String>> currGiverRecipientMap =\n+                    completeGiverRecipientMap.get(existingResponse.getFeedbackQuestionId());\n+            if (!currGiverRecipientMap.containsKey(existingResponse.getGiver())) {\n+                continue;\n+            }\n+            currGiverRecipientMap.get(existingResponse.getGiver()).remove(existingResponse.getRecipient());\n+        }\n+\n+        List<FeedbackResponseAttributes> missingResponses = new ArrayList<>();\n+        // build dummy responses\n+        for (Map.Entry<String, Map<String, Set<String>>> currGiverRecipientMapEntry\n+                : completeGiverRecipientMap.entrySet()) {\n+            FeedbackQuestionAttributes correspondingQuestion =\n+                    relatedQuestionsMap.get(currGiverRecipientMapEntry.getKey());\n+            String questionId = correspondingQuestion.getId();\n+\n+            for (Map.Entry<String, Set<String>> giverRecipientEntry\n+                    : currGiverRecipientMapEntry.getValue().entrySet()) {\n+                // giver\n+                String giverIdentifier = giverRecipientEntry.getKey();\n+                CourseRoster.ParticipantInfo giverInfo = courseRoster.getInfoForIdentifier(giverIdentifier);\n+\n+                for (String recipientIdentifier : giverRecipientEntry.getValue()) {\n+                    // recipient\n+                    CourseRoster.ParticipantInfo recipientInfo = courseRoster.getInfoForIdentifier(recipientIdentifier);\n+\n+                    // skip responses not in current section\n+                    if (section != null\n+                            && !giverInfo.getSectionName().equals(section)\n+                                    && !recipientInfo.getSectionName().equals(section)) {\n+                        continue;\n+                    }\n+\n+                    FeedbackResponseAttributes missingResponse =\n+                            FeedbackResponseAttributes.builder(questionId, giverIdentifier, recipientIdentifier)\n+                                    .withCourseId(feedbackSession.getCourseId())\n+                                    .withFeedbackSessionName(feedbackSession.getFeedbackSessionName())\n+                                    .withGiverSection(giverInfo.getSectionName())\n+                                    .withRecipientSection(recipientInfo.getSectionName())\n+                                    .withResponseDetails(new FeedbackTextResponseDetails(\n+                                                    Const.INSTRUCTOR_FEEDBACK_RESULTS_MISSING_RESPONSE))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0796adefa39468c16f1039cdb19ad29911ca64d6"}, "originalPosition": 93}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bbe8440ad5cb58892e2c52fe9a3fc5091b4e7cc", "author": {"user": {"login": "xpdavid", "name": "Xiao Pu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/1bbe8440ad5cb58892e2c52fe9a3fc5091b4e7cc", "committedDate": "2020-06-04T20:49:32Z", "message": "optimize get recipient logic to utilize course roster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07125804cfc5493f777d8a3fb412b8d4560fa609", "author": {"user": {"login": "xpdavid", "name": "Xiao Pu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/07125804cfc5493f777d8a3fb412b8d4560fa609", "committedDate": "2020-06-04T20:49:32Z", "message": "rename base component for instructor related page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92fbc678cd3c1959c93ef9ee3fc24811b0570e89", "author": {"user": {"login": "xpdavid", "name": "Xiao Pu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/92fbc678cd3c1959c93ef9ee3fc24811b0570e89", "committedDate": "2020-06-04T20:49:32Z", "message": "generate missing responses in the backend"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79bb1d3c60b2bfc93f66f3e8fb34f9b9cc658bdf", "author": {"user": {"login": "xpdavid", "name": "Xiao Pu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/79bb1d3c60b2bfc93f66f3e8fb34f9b9cc658bdf", "committedDate": "2020-06-04T21:08:19Z", "message": "display missing responses in the frontend"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0796adefa39468c16f1039cdb19ad29911ca64d6", "author": {"user": {"login": "xpdavid", "name": "Xiao Pu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/0796adefa39468c16f1039cdb19ad29911ca64d6", "committedDate": "2020-06-03T04:22:49Z", "message": "display missing responses in the frontend"}, "afterCommit": {"oid": "79bb1d3c60b2bfc93f66f3e8fb34f9b9cc658bdf", "author": {"user": {"login": "xpdavid", "name": "Xiao Pu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/79bb1d3c60b2bfc93f66f3e8fb34f9b9cc658bdf", "committedDate": "2020-06-04T21:08:19Z", "message": "display missing responses in the frontend"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTUwNjE1", "url": "https://github.com/TEAMMATES/teammates/pull/10158#pullrequestreview-424950615", "createdAt": "2020-06-05T02:06:44Z", "commit": {"oid": "79bb1d3c60b2bfc93f66f3e8fb34f9b9cc658bdf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4336, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}