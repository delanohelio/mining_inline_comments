{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1OTAyOTEz", "number": 10707, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwNDoyNToyOVrOEi1cmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNDoyNzoxNFrOEi4Q5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTYyNzE0OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseJoinConfirmationPageE2ETest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwNDoyNToyOVrOHQ5YFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwNDoyNToyOVrOHQ5YFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ3OTMxOA==", "bodyText": "This should also be WebPageURIs#JOIN_PAGE. The only difference is the entity doing the join.", "url": "https://github.com/TEAMMATES/teammates/pull/10707#discussion_r487479318", "createdAt": "2020-09-13T04:25:29Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseJoinConfirmationPageE2ETest.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package teammates.e2e.cases.e2e;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.common.util.StringHelper;\n+import teammates.e2e.pageobjects.AppPage;\n+import teammates.e2e.pageobjects.CourseJoinConfirmationPage;\n+import teammates.e2e.pageobjects.ErrorReportingModal;\n+import teammates.e2e.pageobjects.InstructorHomePage;\n+\n+/**\n+ * SUT: {@link Const.LegacyURIs#INSTRUCTOR_COURSE_JOIN}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85cee6be448b7707aa780c9f56e7f4108cb94622"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDA0MjQ1OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/BaseTestCaseWithBackDoorApiAccess.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxMzozNDoyN1rOHQ8fOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QyMzoyNDo0MlrOHRAL9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzMDI5Ng==", "bodyText": "At this stage, we shouldn't have dependency on StringHelper.encrypt because this method has dependency to the encryption key set in the application. We need to either:\n\nSet up another encryption method that is configured via test.properties used by E2E tests. (not preferred)\nModify the API layer such that all keys that are returned are already encrypted. I am of the belief this is already the case for non-admin user-facing endpoints.", "url": "https://github.com/TEAMMATES/teammates/pull/10707#discussion_r487530296", "createdAt": "2020-09-13T13:34:27Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/BaseTestCaseWithBackDoorApiAccess.java", "diffHunk": "@@ -191,7 +192,7 @@ public InstructorAttributes run() {\n     }\n \n     protected String getKeyForInstructor(String courseId, String instructorEmail) {\n-        return null; // BackDoor.getEncryptedKeyForInstructor(courseId, instructorEmail);\n+        return StringHelper.encrypt(getInstructor(courseId, instructorEmail).getKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85cee6be448b7707aa780c9f56e7f4108cb94622"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0MzUxOA==", "bodyText": "Changed to encrypting in GetInstructorsAction and GetStudentAction instead.", "url": "https://github.com/TEAMMATES/teammates/pull/10707#discussion_r487543518", "createdAt": "2020-09-13T15:32:34Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/BaseTestCaseWithBackDoorApiAccess.java", "diffHunk": "@@ -191,7 +192,7 @@ public InstructorAttributes run() {\n     }\n \n     protected String getKeyForInstructor(String courseId, String instructorEmail) {\n-        return null; // BackDoor.getEncryptedKeyForInstructor(courseId, instructorEmail);\n+        return StringHelper.encrypt(getInstructor(courseId, instructorEmail).getKey());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzMDI5Ng=="}, "originalCommit": {"oid": "85cee6be448b7707aa780c9f56e7f4108cb94622"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU1NTU3NQ==", "bodyText": "@wkurniawan07 it seems that I have used StringHelper.encrypt to get student keys in other E2E tests. Should I change them all in another PR before/after merging this one?", "url": "https://github.com/TEAMMATES/teammates/pull/10707#discussion_r487555575", "createdAt": "2020-09-13T17:31:37Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/BaseTestCaseWithBackDoorApiAccess.java", "diffHunk": "@@ -191,7 +192,7 @@ public InstructorAttributes run() {\n     }\n \n     protected String getKeyForInstructor(String courseId, String instructorEmail) {\n-        return null; // BackDoor.getEncryptedKeyForInstructor(courseId, instructorEmail);\n+        return StringHelper.encrypt(getInstructor(courseId, instructorEmail).getKey());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzMDI5Ng=="}, "originalCommit": {"oid": "85cee6be448b7707aa780c9f56e7f4108cb94622"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU5MDkwMw==", "bodyText": "It's ok to change them here", "url": "https://github.com/TEAMMATES/teammates/pull/10707#discussion_r487590903", "createdAt": "2020-09-13T23:24:42Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/BaseTestCaseWithBackDoorApiAccess.java", "diffHunk": "@@ -191,7 +192,7 @@ public InstructorAttributes run() {\n     }\n \n     protected String getKeyForInstructor(String courseId, String instructorEmail) {\n-        return null; // BackDoor.getEncryptedKeyForInstructor(courseId, instructorEmail);\n+        return StringHelper.encrypt(getInstructor(courseId, instructorEmail).getKey());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzMDI5Ng=="}, "originalCommit": {"oid": "85cee6be448b7707aa780c9f56e7f4108cb94622"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDA4MDA2OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/pageobjects/CourseJoinConfirmationPage.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNDoxNzo1NVrOHQ8yIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNTozMjo1NFrOHQ9TEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzNTEzNg==", "bodyText": "This is not something specific to the course join page, though", "url": "https://github.com/TEAMMATES/teammates/pull/10707#discussion_r487535136", "createdAt": "2020-09-13T14:17:55Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/pageobjects/CourseJoinConfirmationPage.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package teammates.e2e.pageobjects;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+/**\n+ * Page Object Model for the course join confirmation page.\n+ */\n+public class CourseJoinConfirmationPage extends AppPage {\n+    @FindBy(id = \"btn-confirm\")\n+    private WebElement confirmButton;\n+\n+    public CourseJoinConfirmationPage(Browser browser) {\n+        super(browser);\n+    }\n+\n+    @Override\n+    public boolean containsExpectedPageContents() {\n+        if (isElementPresent(By.className(\"modal-content\"))) {\n+            return waitForElementPresence(By.tagName(\"h2\")).getText().contains(\"Uh oh! Something went wrong.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85cee6be448b7707aa780c9f56e7f4108cb94622"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0MzU3MA==", "bodyText": "Removed.", "url": "https://github.com/TEAMMATES/teammates/pull/10707#discussion_r487543570", "createdAt": "2020-09-13T15:32:54Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/pageobjects/CourseJoinConfirmationPage.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package teammates.e2e.pageobjects;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+/**\n+ * Page Object Model for the course join confirmation page.\n+ */\n+public class CourseJoinConfirmationPage extends AppPage {\n+    @FindBy(id = \"btn-confirm\")\n+    private WebElement confirmButton;\n+\n+    public CourseJoinConfirmationPage(Browser browser) {\n+        super(browser);\n+    }\n+\n+    @Override\n+    public boolean containsExpectedPageContents() {\n+        if (isElementPresent(By.className(\"modal-content\"))) {\n+            return waitForElementPresence(By.tagName(\"h2\")).getText().contains(\"Uh oh! Something went wrong.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzNTEzNg=="}, "originalCommit": {"oid": "85cee6be448b7707aa780c9f56e7f4108cb94622"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDA4ODcwOnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseJoinConfirmationPageE2ETest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNDoyNzoxNFrOHQ82YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNTozMzo0MlrOHQ9TYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzNjIyNA==", "bodyText": "I'm aware that this is from previous UI test, but is this necessary? I don't think cookies are carried over to browsers initialized by Selenium.", "url": "https://github.com/TEAMMATES/teammates/pull/10707#discussion_r487536224", "createdAt": "2020-09-13T14:27:14Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseJoinConfirmationPageE2ETest.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package teammates.e2e.cases.e2e;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.common.util.StringHelper;\n+import teammates.e2e.pageobjects.AppPage;\n+import teammates.e2e.pageobjects.CourseJoinConfirmationPage;\n+import teammates.e2e.pageobjects.ErrorReportingModal;\n+import teammates.e2e.pageobjects.InstructorHomePage;\n+\n+/**\n+ * SUT: {@link Const.LegacyURIs#INSTRUCTOR_COURSE_JOIN}.\n+ */\n+public class InstructorCourseJoinConfirmationPageE2ETest extends BaseE2ETestCase {\n+    InstructorAttributes newInstructor;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorCourseJoinConfirmationPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+\n+        newInstructor = testData.instructors.get(\"ICJConfirmationE2eT.instr.CS1101\");\n+        newInstructor.googleId = \"ICJConfirmationE2eT.instr2\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        browser.driver.manage().deleteAllCookies();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85cee6be448b7707aa780c9f56e7f4108cb94622"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU0MzY0OQ==", "bodyText": "I think it may be needed for testing with staging server as user info is copied from tester's browser.", "url": "https://github.com/TEAMMATES/teammates/pull/10707#discussion_r487543649", "createdAt": "2020-09-13T15:33:42Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorCourseJoinConfirmationPageE2ETest.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package teammates.e2e.cases.e2e;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.common.util.StringHelper;\n+import teammates.e2e.pageobjects.AppPage;\n+import teammates.e2e.pageobjects.CourseJoinConfirmationPage;\n+import teammates.e2e.pageobjects.ErrorReportingModal;\n+import teammates.e2e.pageobjects.InstructorHomePage;\n+\n+/**\n+ * SUT: {@link Const.LegacyURIs#INSTRUCTOR_COURSE_JOIN}.\n+ */\n+public class InstructorCourseJoinConfirmationPageE2ETest extends BaseE2ETestCase {\n+    InstructorAttributes newInstructor;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorCourseJoinConfirmationPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+\n+        newInstructor = testData.instructors.get(\"ICJConfirmationE2eT.instr.CS1101\");\n+        newInstructor.googleId = \"ICJConfirmationE2eT.instr2\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        browser.driver.manage().deleteAllCookies();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzNjIyNA=="}, "originalCommit": {"oid": "85cee6be448b7707aa780c9f56e7f4108cb94622"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3559, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}