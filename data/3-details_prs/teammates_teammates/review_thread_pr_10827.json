{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNzc5NDUx", "number": 10827, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMzo0NDozOVrOE2TGWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMjo0NjowNFrOE2-8Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzcxNDgwOnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/AdminSearchPageE2ETest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMzo0NDozOVrOHvDBxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMzo0NDozOVrOHvDBxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA5NDcyNA==", "bodyText": "The logic is not right here for two reasons:\n\nProduction server is not the cause for emails failing to send\nTestProperties does not affect the production system logic in that the value of INCLUDE_EMAIL_VERIFICATION is not going to affect whether emails are sent or not", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519094724", "createdAt": "2020-11-07T03:44:39Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/AdminSearchPageE2ETest.java", "diffHunk": "@@ -237,8 +238,13 @@ private void verifyLinkExpansionButtons(StudentAttributes student, InstructorAtt\n     }\n \n     private void verifyRegenerateStudentCourseLinks(WebElement studentRow, String originalJoinLink) {\n-        searchPage.verifyStatusMessage(\"Student's links for this course have been successfully regenerated,\"\n-                + \" and the email has been sent.\");\n+        if (TestProperties.isDevServer() || TestProperties.INCLUDE_EMAIL_VERIFICATION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDI3OTY3OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMzowNDo0M1rOHvH98Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMzowNDo0M1rOHvH98Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTY2NQ==", "bodyText": "TestProperties.isDevServer() is actually another hard requirement. So the condition here should be either it is a dev server or it is explicitly requested to not verify emails.", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519175665", "createdAt": "2020-11-07T13:04:43Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java", "diffHunk": "@@ -189,7 +190,7 @@ protected void verifyDownloadedFile(String expectedFileName, List<String> expect\n      * Email used must be an authentic gmail account.\n      */\n     protected void verifyEmailSent(String email, String subject) {\n-        if (TestProperties.isDevServer()) {\n+        if (!TestProperties.INCLUDE_EMAIL_VERIFICATION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDI4MDA3OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMzowNTowMVrOHvH-HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjozODo1M1rOHvYmmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTcwOQ==", "bodyText": "What is this for?", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519175709", "createdAt": "2020-11-07T13:05:01Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java", "diffHunk": "@@ -105,7 +105,9 @@ protected static AppUrl createUrl(String relativeUrl) {\n         // To log in, log in manually to teammates in your browser before running e2e tests.\n         // Refer to teammates.e2e.pageobjects.Browser for more information.\n         if (!TestProperties.isDevServer()) {\n-            // skip login and navigate to the desired page.\n+            // skip login and start at admin home page\n+            AppPage.getNewPageInstance(browser, createUrl(Const.WebPageURIs.ADMIN_HOME_PAGE), AdminHomePage.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0ODIxNw==", "bodyText": "I was getting unauthorized access message if I tried to access a page without going to the admin home page first, but I think its something to do with the login cookie. After accessing the link a few times manually the message does not appear anymore.\nRemoved it.", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519448217", "createdAt": "2020-11-08T16:38:53Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java", "diffHunk": "@@ -105,7 +105,9 @@ protected static AppUrl createUrl(String relativeUrl) {\n         // To log in, log in manually to teammates in your browser before running e2e tests.\n         // Refer to teammates.e2e.pageobjects.Browser for more information.\n         if (!TestProperties.isDevServer()) {\n-            // skip login and navigate to the desired page.\n+            // skip login and start at admin home page\n+            AppPage.getNewPageInstance(browser, createUrl(Const.WebPageURIs.ADMIN_HOME_PAGE), AdminHomePage.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTcwOQ=="}, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDI4MDk4OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/InstructorFeedbackSessionsPageE2ETest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMzowNjoxOFrOHvH-hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMzowNjoxOFrOHvH-hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3NTgxNQ==", "bodyText": "Unrelated change?", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519175815", "createdAt": "2020-11-07T13:06:18Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/InstructorFeedbackSessionsPageE2ETest.java", "diffHunk": "@@ -42,6 +42,7 @@ protected void prepareTestData() {\n         testData = loadDataBundle(\"/InstructorFeedbackSessionsPageE2ETest.json\");\n         studentToEmail = testData.students.get(\"charlie.tmms@IFSess.CS1101\");\n         studentToEmail.email = TestProperties.TEST_EMAIL;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDg1MDI3OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/util/TestProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowMTowNlrOHvMM3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowMTowNlrOHvMM3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0NTAyMA==", "bodyText": "This should not be necessary once #10694 is merged", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519245020", "createdAt": "2020-11-08T02:01:06Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/util/TestProperties.java", "diffHunk": "@@ -74,6 +80,7 @@\n \n             TEAMMATES_URL = UrlExtension.trimTrailingSlash(prop.getProperty(\"test.app.url\"));\n \n+            TEST_ADMIN_ID = prop.getProperty(\"test.admin.id\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDg1MTEyOnYy", "diffSide": "RIGHT", "path": "src/e2e/resources/test.template.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowMjoyNFrOHvMNNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowMjoyNFrOHvMNNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0NTExMA==", "bodyText": "This should be changed to @gmail.tmt. Similarly for the travis and travis-chrome ones (although they won't affect anything).", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519245110", "createdAt": "2020-11-08T02:02:24Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/resources/test.template.properties", "diffHunk": "@@ -70,7 +70,19 @@ test.timeout=15\n test.persistence.timeout=16\n \n ###############################################################################\n+# The Google account of a user that has 'admin access' to the application.\n+# This is the account used to login when testing against staging server.\n+# It is also used as the main user whenever login is required for testing.\n+\n+test.admin.id=yourGoogleId\n+\n # The email address below will receive some emails from the production server,\n # which will be programmatically checked as part of E2E tests.\n \n test.email=alice.tmms@example.tmt", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDg1MTgxOnYy", "diffSide": "RIGHT", "path": "src/e2e/resources/data/AdminAccountsPageE2ETest.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowMzo1OFrOHvMNfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowMzo1OFrOHvMNfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0NTE4Mw==", "bodyText": "The reason the test passes in the dev server but not in staging is because very likely in staging the admin is also an instructor. It is because of the wrongly configured logic here:\n\n  \n    \n      teammates/src/main/java/teammates/ui/webapi/DeleteInstructorAction.java\n    \n    \n        Lines 57 to 58\n      in\n      dda027e\n    \n    \n    \n    \n\n        \n          \n           // Deleting last instructor from the course is not allowed if you're not the admin \n        \n\n        \n          \n           if (userInfo.isInstructor && !hasAlternativeInstructor(courseId, instructor.email)) {", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519245183", "createdAt": "2020-11-08T02:03:58Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/resources/data/AdminAccountsPageE2ETest.json", "diffHunk": "@@ -1,5 +1,12 @@\n {\n   \"accounts\": {\n+    \"AAccounts.instr\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDg1MjU5OnYy", "diffSide": "LEFT", "path": "src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowNTowMlrOHvMN1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowNTowMlrOHvMN1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0NTI2OQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519245269", "createdAt": "2020-11-08T02:05:02Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java", "diffHunk": "@@ -205,7 +206,6 @@ protected void verifyEmailSent(String email, String subject) {\n                 ThreadHelper.waitFor(1000);\n                 actual = emailAccount.isEmailWithSubjectPresent(subject);\n             }\n-            emailAccount.markAllUnreadEmailAsRead();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDg1MjY3OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowNTowOFrOHvMN3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwMjowNTowOFrOHvMN3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0NTI3OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519245278", "createdAt": "2020-11-08T02:05:08Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "diffHunk": "@@ -114,6 +114,7 @@ public boolean isEmailWithSubjectPresent(String subject)\n             MimeMessage email = convertFromMessageToMimeMessage(message);\n \n             if (email.getSubject().equals(subject)) {\n+                markMessageAsRead(messageStub);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3decf3b0be12d4b182776914c2cce6467091c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjM4MDQzOnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMTowNDozNVrOHvaWng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMTowNDozNVrOHvaWng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ3Njg5NA==", "bodyText": "Let's keep the SLAP principle: extract out email.getSubject().equals(subject) to a variable as well.", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519476894", "createdAt": "2020-11-08T21:04:35Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "diffHunk": "@@ -100,20 +101,23 @@ public String getRegistrationKeyFromUnreadEmails(String courseName, String cours\n     }\n \n     /**\n-     * Returns true if unread mail contains mail with the specified subject.\n+     * Returns true if unread mail that arrived in the past minute contains mail with the specified subject.\n      */\n-    public boolean isEmailWithSubjectPresent(String subject)\n+    public boolean isRecentEmailWithSubjectPresent(String subject, String senderName)\n             throws IOException, MessagingException {\n \n-        List<Message> messageStubs = getListOfUnreadEmailOfUser();\n+        List<Message> messageStubs = getListOfUnreadEmailFromSender(10L, senderName);\n \n         for (Message messageStub : messageStubs) {\n             Message message = service.users().messages().get(username, messageStub.getId()).setFormat(\"raw\")\n                     .execute();\n \n             MimeMessage email = convertFromMessageToMimeMessage(message);\n+            boolean isSentWithinLastMin =\n+                    message.getInternalDate() > System.currentTimeMillis() - TimeUnit.MINUTES.toMillis(1);\n \n-            if (email.getSubject().equals(subject)) {\n+            if (email.getSubject().equals(subject) && isSentWithinLastMin) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceeeaff1147f33a024eea6632ad56c6f72308378"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjM4MTY1OnYy", "diffSide": "LEFT", "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMTowNTozMFrOHvaXKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMTowNTozMFrOHvaXKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ3NzAzMg==", "bodyText": "This method (getListOfUnreadEmailOfUser) should not be useful anymore now? The other call sites are markAllUnreadEmailAsRead (no longer used, can remove), getRegistrationKeyFromUnreadEmails (no longer used, can remove), getUserAuthenticated (should be changed to a more efficient method).", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519477032", "createdAt": "2020-11-08T21:05:30Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "diffHunk": "@@ -100,20 +101,23 @@ public String getRegistrationKeyFromUnreadEmails(String courseName, String cours\n     }\n \n     /**\n-     * Returns true if unread mail contains mail with the specified subject.\n+     * Returns true if unread mail that arrived in the past minute contains mail with the specified subject.\n      */\n-    public boolean isEmailWithSubjectPresent(String subject)\n+    public boolean isRecentEmailWithSubjectPresent(String subject, String senderName)\n             throws IOException, MessagingException {\n \n-        List<Message> messageStubs = getListOfUnreadEmailOfUser();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceeeaff1147f33a024eea6632ad56c6f72308378"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjM4MTc1OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMTowNTo0NFrOHvaXNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMTowNTo0NFrOHvaXNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ3NzA0Nw==", "bodyText": "Use the primitive long instead of Long?", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519477047", "createdAt": "2020-11-08T21:05:44Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "diffHunk": "@@ -140,6 +144,18 @@ public void markAllUnreadEmailAsRead() throws IOException {\n         return messageStubs == null ? new ArrayList<>() : messageStubs;\n     }\n \n+    /**\n+     * Returns a list of up to maxResults number of unread emails from the sender.\n+     * Returns an empty list if there is no unread email from sender.\n+     */\n+    private List<Message> getListOfUnreadEmailFromSender(Long maxResults, String senderName) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceeeaff1147f33a024eea6632ad56c6f72308378"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjM4NDMzOnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMTowODozOFrOHvaYdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMTowODozOFrOHvaYdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ3NzM2Ng==", "bodyText": "TEAMMATES Admin is not hardcoded; it's one of the values inbuild.properties. That means the value needs to be obtained from test.properties.\nAlso, checking by sender email should be more foolproof, i.e. there is less likelihood of other emails we're not interested in having the same sender address than having the same sender name.", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r519477366", "createdAt": "2020-11-08T21:08:38Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/BaseE2ETestCase.java", "diffHunk": "@@ -199,13 +221,12 @@ protected void verifyEmailSent(String email, String subject) {\n         try {\n             emailAccount.getUserAuthenticated();\n             int retryLimit = 5;\n-            boolean actual = emailAccount.isEmailWithSubjectPresent(subject);\n+            boolean actual = emailAccount.isRecentEmailWithSubjectPresent(subject, \"TEAMMATES Admin\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceeeaff1147f33a024eea6632ad56c6f72308378"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDg5ODA2OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMjo0NjowNFrOHwEnzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMjo0NjowNFrOHwEnzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE2OTQyMQ==", "bodyText": "You should be able to use getListOfUnreadEmailFromSender here", "url": "https://github.com/TEAMMATES/teammates/pull/10827#discussion_r520169421", "createdAt": "2020-11-09T22:46:04Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/util/EmailAccount.java", "diffHunk": "@@ -47,10 +43,12 @@ public void getUserAuthenticated() throws IOException {\n         // assume user is authenticated before\n         service = new GmailServiceMaker(username).makeGmailService();\n \n-        while (true) {\n+        int retryLimit = 5;\n+        while (retryLimit > 0) {\n             try {\n+                retryLimit--;\n                 // touch one API endpoint to check authentication\n-                getListOfUnreadEmailOfUser();\n+                service.users().messages().list(username).setMaxResults(1L).execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "995d6384e361edd90b5c38ec629ec5d0889b6197"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3432, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}