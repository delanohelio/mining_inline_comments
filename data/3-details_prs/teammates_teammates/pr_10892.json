{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjEzNTE4", "number": 10892, "title": "[#10891] Numerical Scale Question: Improve Validation ", "bodyText": "Fixes #10891\nPart of #1501\nImprove validation check for numerical scale question by using BigDecimal", "createdAt": "2020-12-22T16:02:49Z", "url": "https://github.com/TEAMMATES/teammates/pull/10892", "merged": true, "mergeCommit": {"oid": "df75cf865e490669fecb528b067361df760f786e"}, "closed": true, "closedAt": "2020-12-24T12:11:52Z", "author": {"login": "rrtheonlyone"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdotgusgFqTU1NzIyMzIwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdpSmcqgFqTU1ODQ3NTYzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MjIzMjA4", "url": "https://github.com/TEAMMATES/teammates/pull/10892#pullrequestreview-557223208", "createdAt": "2020-12-22T16:54:56Z", "commit": {"oid": "6b851c0ebf8842d51d23d9c4e82428d688903597"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNjo1NDo1NlrOIKB7tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNjo1NTozMFrOIKB89A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM4ODM0MA==", "bodyText": "The logic is wrong here. The remainder should be taken over answer - minScale, not simply answer. This logic will return no error with setting of minscale = 6, maxscale = 10, step = 0.7, answer = 7, while it should have returned error as the nearest answers are 6.7 and 7.4.", "url": "https://github.com/TEAMMATES/teammates/pull/10892#discussion_r547388340", "createdAt": "2020-12-22T16:54:56Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackNumericalScaleQuestionDetails.java", "diffHunk": "@@ -60,15 +58,16 @@ private static double convertTo5dp(double num) {\n             }\n \n             // when the answer is within range but not one of the possible values\n-            double interval = details.getAnswer() - minScale;\n-            double remainder = convertTo5dp(interval - Math.floor(interval / step) * step);\n-            boolean isAnswerNotAPossibleValueWithinRange = remainder != 0.0 && !isAnswerOutOfRange;\n+            BigDecimal answer = BigDecimal.valueOf(details.getAnswer());\n+            BigDecimal stepBd = BigDecimal.valueOf(step);\n+            BigDecimal remainder = answer.remainder(stepBd);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b851c0ebf8842d51d23d9c4e82428d688903597"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM4ODY2MA==", "bodyText": "Use assertEquals instead?", "url": "https://github.com/TEAMMATES/teammates/pull/10892#discussion_r547388660", "createdAt": "2020-12-22T16:55:30Z", "author": {"login": "wkurniawan07"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackNumericalScaleQuestionDetailsTest.java", "diffHunk": "@@ -21,4 +25,122 @@ public void testIsFeedbackParticipantCommentsOnResponsesAllowed_shouldReturnFals\n         assertFalse(feedbackQuestionDetails.isFeedbackParticipantCommentsOnResponsesAllowed());\n     }\n \n+    @Test\n+    public void tesValidateResponseDetails() {\n+        FeedbackNumericalScaleQuestionDetails numScaleQuestion = new FeedbackNumericalScaleQuestionDetails();\n+        numScaleQuestion.setStep(0.1);\n+\n+        ______TS(\"Test Val=1.2 and Step=0.1 does no trigger error\");\n+        FeedbackNumericalScaleResponseDetails resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.2);\n+        List<String> errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertTrue(errors.isEmpty());\n+\n+        ______TS(\"Test Val=1.22 and Step=0.1 triggers error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.22);\n+        errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertTrue(errors.size() == 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b851c0ebf8842d51d23d9c4e82428d688903597"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae7b1b233692f0575f27c083aff83d6e051351cd", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ae7b1b233692f0575f27c083aff83d6e051351cd", "committedDate": "2020-12-23T01:22:25Z", "message": "Update assertTrue to assertEquals"}, "afterCommit": {"oid": "a4b64d84fd3c13df768da1e8dbe5de57f10a5cb4", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a4b64d84fd3c13df768da1e8dbe5de57f10a5cb4", "committedDate": "2020-12-23T06:52:49Z", "message": "Update assertTrue to assertEquals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20bed6266994a9e6731bcc0bfb402edab62ea8bb", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/20bed6266994a9e6731bcc0bfb402edab62ea8bb", "committedDate": "2020-12-23T06:54:02Z", "message": "Add failing test for numerical scale"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bae168eccd54d4b2393183c786e79c3a41421776", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/bae168eccd54d4b2393183c786e79c3a41421776", "committedDate": "2020-12-23T06:54:02Z", "message": "Fix failing test: make sure precision is accounted for when doing step validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4da742870fd13500baba1d52a2759c2b29381fee", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/4da742870fd13500baba1d52a2759c2b29381fee", "committedDate": "2020-12-23T06:54:02Z", "message": "Add failing test: validation does not take into account minimum value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e6754cca32c4239e55baf9868c61a40cffa74f9", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7e6754cca32c4239e55baf9868c61a40cffa74f9", "committedDate": "2020-12-23T06:54:02Z", "message": "Fix failing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb860e22962671a3d85ed6720df9b336655bdc6e", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/eb860e22962671a3d85ed6720df9b336655bdc6e", "committedDate": "2020-12-23T06:54:02Z", "message": "Update assertTrue to assertEquals"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4b64d84fd3c13df768da1e8dbe5de57f10a5cb4", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a4b64d84fd3c13df768da1e8dbe5de57f10a5cb4", "committedDate": "2020-12-23T06:52:49Z", "message": "Update assertTrue to assertEquals"}, "afterCommit": {"oid": "eb860e22962671a3d85ed6720df9b336655bdc6e", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/eb860e22962671a3d85ed6720df9b336655bdc6e", "committedDate": "2020-12-23T06:54:02Z", "message": "Update assertTrue to assertEquals"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MjkxNjUy", "url": "https://github.com/TEAMMATES/teammates/pull/10892#pullrequestreview-558291652", "createdAt": "2020-12-24T01:12:20Z", "commit": {"oid": "eb860e22962671a3d85ed6720df9b336655bdc6e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMToxMjoyMFrOIK78tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMToxMzo1NlrOIK796Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzODg3MA==", "bodyText": "Your test description says 1.33333 but the answer here is 1.333, I'm assuming the description is the correct one?", "url": "https://github.com/TEAMMATES/teammates/pull/10892#discussion_r548338870", "createdAt": "2020-12-24T01:12:20Z", "author": {"login": "madanalogy"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackNumericalScaleQuestionDetailsTest.java", "diffHunk": "@@ -21,4 +25,122 @@ public void testIsFeedbackParticipantCommentsOnResponsesAllowed_shouldReturnFals\n         assertFalse(feedbackQuestionDetails.isFeedbackParticipantCommentsOnResponsesAllowed());\n     }\n \n+    @Test\n+    public void tesValidateResponseDetails() {\n+        FeedbackNumericalScaleQuestionDetails numScaleQuestion = new FeedbackNumericalScaleQuestionDetails();\n+        numScaleQuestion.setStep(0.1);\n+\n+        ______TS(\"Test Val=1.2 and Step=0.1 does no trigger error\");\n+        FeedbackNumericalScaleResponseDetails resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.2);\n+        List<String> errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertTrue(errors.isEmpty());\n+\n+        ______TS(\"Test Val=1.22 and Step=0.1 triggers error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.22);\n+        errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertEquals(1, errors.size());\n+        assertEquals(\"Please enter a valid value. The two nearest valid values are 1.2 and 1.3.\", errors.get(0));\n+\n+        ______TS(\"Test Val=1.333 and Step=0.1 triggers error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.333);\n+        errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertEquals(1, errors.size());\n+        assertEquals(\"Please enter a valid value. The two nearest valid values are 1.3 and 1.4.\", errors.get(0));\n+\n+        ______TS(\"Test Val=2 and Step=0.1 does not trigger error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(2);\n+        errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertTrue(errors.isEmpty());\n+\n+        numScaleQuestion.setStep(0.00001);\n+\n+        ______TS(\"Test Val=1.33333 and Step=0.00001 does not trigger error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.333);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb860e22962671a3d85ed6720df9b336655bdc6e"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzOTE3Nw==", "bodyText": "All the tests below reference Step=1 but you set it to 0.7 here, just to confirm that this was intentional to trigger an error right?", "url": "https://github.com/TEAMMATES/teammates/pull/10892#discussion_r548339177", "createdAt": "2020-12-24T01:13:56Z", "author": {"login": "madanalogy"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackNumericalScaleQuestionDetailsTest.java", "diffHunk": "@@ -21,4 +25,122 @@ public void testIsFeedbackParticipantCommentsOnResponsesAllowed_shouldReturnFals\n         assertFalse(feedbackQuestionDetails.isFeedbackParticipantCommentsOnResponsesAllowed());\n     }\n \n+    @Test\n+    public void tesValidateResponseDetails() {\n+        FeedbackNumericalScaleQuestionDetails numScaleQuestion = new FeedbackNumericalScaleQuestionDetails();\n+        numScaleQuestion.setStep(0.1);\n+\n+        ______TS(\"Test Val=1.2 and Step=0.1 does no trigger error\");\n+        FeedbackNumericalScaleResponseDetails resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.2);\n+        List<String> errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertTrue(errors.isEmpty());\n+\n+        ______TS(\"Test Val=1.22 and Step=0.1 triggers error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.22);\n+        errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertEquals(1, errors.size());\n+        assertEquals(\"Please enter a valid value. The two nearest valid values are 1.2 and 1.3.\", errors.get(0));\n+\n+        ______TS(\"Test Val=1.333 and Step=0.1 triggers error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.333);\n+        errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertEquals(1, errors.size());\n+        assertEquals(\"Please enter a valid value. The two nearest valid values are 1.3 and 1.4.\", errors.get(0));\n+\n+        ______TS(\"Test Val=2 and Step=0.1 does not trigger error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(2);\n+        errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertTrue(errors.isEmpty());\n+\n+        numScaleQuestion.setStep(0.00001);\n+\n+        ______TS(\"Test Val=1.33333 and Step=0.00001 does not trigger error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.333);\n+        errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertTrue(errors.isEmpty());\n+\n+        ______TS(\"Test Val=1.333333 and Step=0.00001 triggers error\");\n+        resp = new FeedbackNumericalScaleResponseDetails();\n+        resp.setAnswer(1.333333);\n+        errors = numScaleQuestion.validateResponsesDetails(Arrays.asList(resp), 1);\n+        assertEquals(1, errors.size());\n+        assertEquals(\"Please enter a valid value. The two nearest valid values are 1.33333 and 1.33334.\",\n+                errors.get(0));\n+\n+        numScaleQuestion.setStep(0.7);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb860e22962671a3d85ed6720df9b336655bdc6e"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6fcd6ec528ffe227bcef4c9c4e9f1565781f343", "author": {"user": {"login": "rrtheonlyone", "name": "Rahul Rajesh"}}, "url": "https://github.com/TEAMMATES/teammates/commit/e6fcd6ec528ffe227bcef4c9c4e9f1565781f343", "committedDate": "2020-12-24T01:35:53Z", "message": "Maintain test consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4Mjk3NDA3", "url": "https://github.com/TEAMMATES/teammates/pull/10892#pullrequestreview-558297407", "createdAt": "2020-12-24T01:40:39Z", "commit": {"oid": "e6fcd6ec528ffe227bcef4c9c4e9f1565781f343"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4NDc1NjM1", "url": "https://github.com/TEAMMATES/teammates/pull/10892#pullrequestreview-558475635", "createdAt": "2020-12-24T11:42:11Z", "commit": {"oid": "e6fcd6ec528ffe227bcef4c9c4e9f1565781f343"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMTo0MjoxMlrOILGENw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMTo0MjoxMlrOILGENw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUwNDYzMQ==", "bodyText": "Previous variable names represent what they mean better, although admittedly a bit on the verbose side", "url": "https://github.com/TEAMMATES/teammates/pull/10892#discussion_r548504631", "createdAt": "2020-12-24T11:42:12Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackNumericalScaleQuestionDetails.java", "diffHunk": "@@ -60,15 +58,17 @@ private static double convertTo5dp(double num) {\n             }\n \n             // when the answer is within range but not one of the possible values\n-            double interval = details.getAnswer() - minScale;\n-            double remainder = convertTo5dp(interval - Math.floor(interval / step) * step);\n-            boolean isAnswerNotAPossibleValueWithinRange = remainder != 0.0 && !isAnswerOutOfRange;\n+            BigDecimal minval = BigDecimal.valueOf(this.minScale);\n+            BigDecimal answer = BigDecimal.valueOf(details.getAnswer());\n+            BigDecimal stepBd = BigDecimal.valueOf(step);\n+            BigDecimal remainder = answer.subtract(minval).remainder(stepBd);\n+            boolean isAnsMultipleOfStep = remainder.compareTo(BigDecimal.ZERO) == 0;\n+            if (!isAnsMultipleOfStep && !isAnswerOutOfRange) {\n+                double posValSmall = answer.subtract(remainder).setScale(5, RoundingMode.HALF_UP).doubleValue();\n+                double posValBig = answer.subtract(remainder).add(stepBd).setScale(5, RoundingMode.HALF_UP).doubleValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6fcd6ec528ffe227bcef4c9c4e9f1565781f343"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4182, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}