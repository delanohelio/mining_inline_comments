{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNzIwMjMw", "number": 10115, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMTozNzo0MVrOD_eWYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo1NToyMlrOD_8eeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODg0MTMwOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMTozNzo0MVrOGaKB5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo0MzoyN1rOGa6LKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4MDQ4Ng==", "bodyText": "Let's make the request sent from the root page.", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430080486", "createdAt": "2020-05-25T21:37:41Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +77,52 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ca064110126d3a62cc39dfdadf3b0374aad7991"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0Mzg0MQ==", "bodyText": "I should have said InstructorSessionResultPageComponent (root page)", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430643841", "createdAt": "2020-05-26T19:09:28Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +77,52 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4MDQ4Ng=="}, "originalCommit": {"oid": "5ca064110126d3a62cc39dfdadf3b0374aad7991"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg2OTI4OQ==", "bodyText": "All REST requests are moved to the root page.", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430869289", "createdAt": "2020-05-27T05:43:27Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +77,52 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4MDQ4Ng=="}, "originalCommit": {"oid": "5ca064110126d3a62cc39dfdadf3b0374aad7991"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODg0NDQ5OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMTo0MDozN1rOGaKDuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMTo0MDozN1rOGaKDuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4MDk1NQ==", "bodyText": "If we sent the request at the root page, can we reuse noResponseStudents and don't send the request again?\n\n  \n    \n      teammates/src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.ts\n    \n    \n        Lines 192 to 213\n      in\n      55bc314\n    \n    \n    \n    \n\n        \n          \n           // load no response students \n        \n\n        \n          \n           this.studentService.getStudentsFromCourse({ \n        \n\n        \n          \n             courseId: queryParams.courseid, \n        \n\n        \n          \n           }).subscribe((allStudents: Students) => { \n        \n\n        \n          \n             const students: Student[] = allStudents.students; \n        \n\n        \n          \n            \n        \n\n        \n          \n             this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({ \n        \n\n        \n          \n               courseId: queryParams.courseid, \n        \n\n        \n          \n               feedbackSessionName: queryParams.fsname, \n        \n\n        \n          \n             }) \n        \n\n        \n          \n                 .subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) => { \n        \n\n        \n          \n                   // TODO team is missing \n        \n\n        \n          \n                   this.noResponseStudents = students.filter((student: Student) => \n        \n\n        \n          \n                                               !feedbackSessionSubmittedGiverSet.giverIdentifiers.includes(student.email)); \n        \n\n        \n          \n                 }, (resp: ErrorMessageOutput) => { \n        \n\n        \n          \n                   this.statusMessageService.showErrorMessage(resp.error.message); \n        \n\n        \n          \n                 }); \n        \n\n        \n          \n            \n        \n\n        \n          \n             this.isNoResponsePanelLoaded = true; \n        \n\n        \n          \n           }, (resp: ErrorMessageOutput) => { \n        \n\n        \n          \n             this.statusMessageService.showErrorMessage(resp.error.message); \n        \n\n        \n          \n           });", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430080955", "createdAt": "2020-05-25T21:40:37Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +77,52 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {\n+    event.stopPropagation();\n+\n+    const courseId: string = this.session.courseId;\n+    const feedbackSessionName: string = this.session.feedbackSessionName;\n+\n+    const modalRef: NgbModalRef = this.modalService.open(SendRemindersToStudentModalComponent);\n+    modalRef.componentInstance.courseId = courseId;\n+    modalRef.componentInstance.feedbackSessionName = feedbackSessionName;\n+\n+    forkJoin(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ca064110126d3a62cc39dfdadf3b0374aad7991"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mzc3NDU0OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo1NDowNlrOGa6X-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjozMzozNFrOGa7OOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MjU2OQ==", "bodyText": "I suppose only those who do not answer the session should be selected?", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430872569", "createdAt": "2020-05-27T05:54:06Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +69,34 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {\n+    event.stopPropagation();\n+\n+    const courseId: string = this.session.courseId;\n+    const feedbackSessionName: string = this.session.feedbackSessionName;\n+\n+    const giverEmails: string[] = this.noResponseStudents.map((student: Student) => student.email);\n+    const giverSet: Set<string> = new Set(giverEmails);\n+\n+    const modalRef: NgbModalRef = this.modalService.open(SendRemindersToStudentModalComponent);\n+    modalRef.componentInstance.courseId = courseId;\n+    modalRef.componentInstance.feedbackSessionName = feedbackSessionName;\n+    modalRef.componentInstance.studentListInfoTableRowModels\n+      = this.allStudents.map((student: Student) => ({\n+        email: student.email,\n+        name: student.name,\n+        teamName: student.teamName,\n+        sectionName: student.sectionName,\n+\n+        hasSubmittedSession: !giverSet.has(student.email),\n+        isSelected: true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89615eba3c62b00dc69bb5792abae20497a598e4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MzE3OA==", "bodyText": "Apology for the misleading hint :P", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430873178", "createdAt": "2020-05-27T05:55:54Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +69,34 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {\n+    event.stopPropagation();\n+\n+    const courseId: string = this.session.courseId;\n+    const feedbackSessionName: string = this.session.feedbackSessionName;\n+\n+    const giverEmails: string[] = this.noResponseStudents.map((student: Student) => student.email);\n+    const giverSet: Set<string> = new Set(giverEmails);\n+\n+    const modalRef: NgbModalRef = this.modalService.open(SendRemindersToStudentModalComponent);\n+    modalRef.componentInstance.courseId = courseId;\n+    modalRef.componentInstance.feedbackSessionName = feedbackSessionName;\n+    modalRef.componentInstance.studentListInfoTableRowModels\n+      = this.allStudents.map((student: Student) => ({\n+        email: student.email,\n+        name: student.name,\n+        teamName: student.teamName,\n+        sectionName: student.sectionName,\n+\n+        hasSubmittedSession: !giverSet.has(student.email),\n+        isSelected: true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MjU2OQ=="}, "originalCommit": {"oid": "89615eba3c62b00dc69bb5792abae20497a598e4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg4MjU2OQ==", "bodyText": "Alright, in that case select all respondents at the top is not selected by default. Only those with Submitted? status as No will be selected by default. Is it the intended behaviour?", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430882569", "createdAt": "2020-05-27T06:23:00Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +69,34 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {\n+    event.stopPropagation();\n+\n+    const courseId: string = this.session.courseId;\n+    const feedbackSessionName: string = this.session.feedbackSessionName;\n+\n+    const giverEmails: string[] = this.noResponseStudents.map((student: Student) => student.email);\n+    const giverSet: Set<string> = new Set(giverEmails);\n+\n+    const modalRef: NgbModalRef = this.modalService.open(SendRemindersToStudentModalComponent);\n+    modalRef.componentInstance.courseId = courseId;\n+    modalRef.componentInstance.feedbackSessionName = feedbackSessionName;\n+    modalRef.componentInstance.studentListInfoTableRowModels\n+      = this.allStudents.map((student: Student) => ({\n+        email: student.email,\n+        name: student.name,\n+        teamName: student.teamName,\n+        sectionName: student.sectionName,\n+\n+        hasSubmittedSession: !giverSet.has(student.email),\n+        isSelected: true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MjU2OQ=="}, "originalCommit": {"oid": "89615eba3c62b00dc69bb5792abae20497a598e4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg4NjQ1Nw==", "bodyText": "Yup. By clicking button, you just want to send reminder to all nonResponseStudents.", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430886457", "createdAt": "2020-05-27T06:33:34Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +69,34 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {\n+    event.stopPropagation();\n+\n+    const courseId: string = this.session.courseId;\n+    const feedbackSessionName: string = this.session.feedbackSessionName;\n+\n+    const giverEmails: string[] = this.noResponseStudents.map((student: Student) => student.email);\n+    const giverSet: Set<string> = new Set(giverEmails);\n+\n+    const modalRef: NgbModalRef = this.modalService.open(SendRemindersToStudentModalComponent);\n+    modalRef.componentInstance.courseId = courseId;\n+    modalRef.componentInstance.feedbackSessionName = feedbackSessionName;\n+    modalRef.componentInstance.studentListInfoTableRowModels\n+      = this.allStudents.map((student: Student) => ({\n+        email: student.email,\n+        name: student.name,\n+        teamName: student.teamName,\n+        sectionName: student.sectionName,\n+\n+        hasSubmittedSession: !giverSet.has(student.email),\n+        isSelected: true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MjU2OQ=="}, "originalCommit": {"oid": "89615eba3c62b00dc69bb5792abae20497a598e4"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mzc3NTM0OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo1NDozNVrOGa6YhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo1NDozNVrOGa6YhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MjcwOQ==", "bodyText": "nonResponseStudentEmails?", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430872709", "createdAt": "2020-05-27T05:54:35Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +69,34 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {\n+    event.stopPropagation();\n+\n+    const courseId: string = this.session.courseId;\n+    const feedbackSessionName: string = this.session.feedbackSessionName;\n+\n+    const giverEmails: string[] = this.noResponseStudents.map((student: Student) => student.email);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89615eba3c62b00dc69bb5792abae20497a598e4"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mzc3NTg4OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo1NDo0NlrOGa6Y0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo1NDo0NlrOGa6Y0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3Mjc4NA==", "bodyText": "nonResponseStudentEmailSet?", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430872784", "createdAt": "2020-05-27T05:54:46Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -57,6 +69,34 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n     }\n   }\n \n+  openSendReminderModal(event: any): void {\n+    event.stopPropagation();\n+\n+    const courseId: string = this.session.courseId;\n+    const feedbackSessionName: string = this.session.feedbackSessionName;\n+\n+    const giverEmails: string[] = this.noResponseStudents.map((student: Student) => student.email);\n+    const giverSet: Set<string> = new Set(giverEmails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89615eba3c62b00dc69bb5792abae20497a598e4"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mzc3NzIyOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo1NToyMlrOGa6ZkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo1NToyMlrOGa6ZkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3Mjk3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Output() studentsToRemindData: EventEmitter<StudentListInfoTableRowModel[]> = new EventEmitter();\n          \n          \n            \n              @Output() studentsToRemindEvent: EventEmitter<StudentListInfoTableRowModel[]> = new EventEmitter();", "url": "https://github.com/TEAMMATES/teammates/pull/10115#discussion_r430872977", "createdAt": "2020-05-27T05:55:22Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-no-response-panel.component.ts", "diffHunk": "@@ -38,7 +46,11 @@ export class InstructorSessionNoResponsePanelComponent implements OnInit, OnChan\n   isTabExpanded: boolean = false;\n \n   noResponseStudentsInSection: Student[] = [];\n-  constructor() { }\n+\n+  @Output() studentsToRemindData: EventEmitter<StudentListInfoTableRowModel[]> = new EventEmitter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89615eba3c62b00dc69bb5792abae20497a598e4"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3997, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}