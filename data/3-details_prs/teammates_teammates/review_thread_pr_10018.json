{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMzQ3OTE2", "number": 10018, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNjozMzozMVrODzMFbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDozMjoxOFrODz-9Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDAxOTY2OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/e2e/AdminSearchPageE2ETest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNjozMzozMVrOGHogqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwOToxMDoyNlrOGHpdnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1NjkzNg==", "bodyText": "Can we use empty string instead of undefined? Why the undefined is there in the first place?", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410656936", "createdAt": "2020-04-18T06:33:31Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/AdminSearchPageE2ETest.java", "diffHunk": "@@ -177,17 +178,17 @@ private void verifyInstructorRowContent(InstructorAttributes instructor, Account\n     }\n \n     private String getExpectedInstructorHomePageLink(InstructorAttributes instructor) {\n-        return instructor.isRegistered() ? createUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE)\n-                .withUserId(instructor.googleId)\n-                .toAbsoluteString()\n-                : \"\";\n+        String googleId = instructor.isRegistered() ? instructor.googleId : \"undefined\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MjU0Mw==", "bodyText": "Yep, we can, we can even remove the param if its value its an empty string, which I use another function in link.service.ts to fix", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410672543", "createdAt": "2020-04-18T09:10:26Z", "author": {"login": "hcwong"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/AdminSearchPageE2ETest.java", "diffHunk": "@@ -177,17 +178,17 @@ private void verifyInstructorRowContent(InstructorAttributes instructor, Account\n     }\n \n     private String getExpectedInstructorHomePageLink(InstructorAttributes instructor) {\n-        return instructor.isRegistered() ? createUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE)\n-                .withUserId(instructor.googleId)\n-                .toAbsoluteString()\n-                : \"\";\n+        String googleId = instructor.isRegistered() ? instructor.googleId : \"undefined\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1NjkzNg=="}, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDAxOTg0OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/e2e/AdminSearchPageE2ETest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNjozMzozOVrOGHogug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwOToxMToyM1rOGHpd_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1Njk1NA==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410656954", "createdAt": "2020-04-18T06:33:39Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/AdminSearchPageE2ETest.java", "diffHunk": "@@ -177,17 +178,17 @@ private void verifyInstructorRowContent(InstructorAttributes instructor, Account\n     }\n \n     private String getExpectedInstructorHomePageLink(InstructorAttributes instructor) {\n-        return instructor.isRegistered() ? createUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE)\n-                .withUserId(instructor.googleId)\n-                .toAbsoluteString()\n-                : \"\";\n+        String googleId = instructor.isRegistered() ? instructor.googleId : \"undefined\";\n+        return createUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE)\n+                .withUserId(googleId)\n+                .toAbsoluteString();\n     }\n \n     private String getExpectedInstructorManageAccountLink(InstructorAttributes instructor) {\n-        return instructor.isRegistered() ? createUrl(Const.WebPageURIs.ADMIN_ACCOUNTS_PAGE)\n-                .withInstructorId(instructor.googleId)\n-                .toAbsoluteString()\n-                : \"\";\n+        String googleId = instructor.isRegistered() ? instructor.googleId : \"undefined\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MjYzNg==", "bodyText": "Yep, I just didn't add a destructuring default value, so adding a default value prevents the stringified form of undefined from appearing, fixed", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410672636", "createdAt": "2020-04-18T09:11:23Z", "author": {"login": "hcwong"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/AdminSearchPageE2ETest.java", "diffHunk": "@@ -177,17 +178,17 @@ private void verifyInstructorRowContent(InstructorAttributes instructor, Account\n     }\n \n     private String getExpectedInstructorHomePageLink(InstructorAttributes instructor) {\n-        return instructor.isRegistered() ? createUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE)\n-                .withUserId(instructor.googleId)\n-                .toAbsoluteString()\n-                : \"\";\n+        String googleId = instructor.isRegistered() ? instructor.googleId : \"undefined\";\n+        return createUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE)\n+                .withUserId(googleId)\n+                .toAbsoluteString();\n     }\n \n     private String getExpectedInstructorManageAccountLink(InstructorAttributes instructor) {\n-        return instructor.isRegistered() ? createUrl(Const.WebPageURIs.ADMIN_ACCOUNTS_PAGE)\n-                .withInstructorId(instructor.googleId)\n-                .toAbsoluteString()\n-                : \"\";\n+        String googleId = instructor.isRegistered() ? instructor.googleId : \"undefined\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1Njk1NA=="}, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDAyMDczOnYy", "diffSide": "LEFT", "path": "src/test/java/teammates/test/cases/webapi/GetCourseActionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNjozNDozNFrOGHohIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwOToxMTo0OVrOGHpeIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1NzA1OA==", "bodyText": "So it should be change to verifyAccessibleForAdmin?", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410657058", "createdAt": "2020-04-18T06:34:34Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/GetCourseActionTest.java", "diffHunk": "@@ -178,7 +178,6 @@ protected void testAccessControl_testStudentAccess_shouldPass() {\n         verifyInaccessibleWithoutLogin(submissionParams);\n         verifyInaccessibleForUnregisteredUsers(submissionParams);\n         verifyInaccessibleForInstructors(submissionParams);\n-        verifyInaccessibleForAdmin(submissionParams);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MjY3NQ==", "bodyText": "Yea, should have done this welp thanks, fixed!", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410672675", "createdAt": "2020-04-18T09:11:49Z", "author": {"login": "hcwong"}, "path": "src/test/java/teammates/test/cases/webapi/GetCourseActionTest.java", "diffHunk": "@@ -178,7 +178,6 @@ protected void testAccessControl_testStudentAccess_shouldPass() {\n         verifyInaccessibleWithoutLogin(submissionParams);\n         verifyInaccessibleForUnregisteredUsers(submissionParams);\n         verifyInaccessibleForInstructors(submissionParams);\n-        verifyInaccessibleForAdmin(submissionParams);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1NzA1OA=="}, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDAyMDgyOnYy", "diffSide": "LEFT", "path": "src/test/java/teammates/test/cases/webapi/GetFeedbackSessionsActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNjozNDo0MFrOGHohLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNjozNDo0MFrOGHohLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1NzA2OA==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410657068", "createdAt": "2020-04-18T06:34:40Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/GetFeedbackSessionsActionTest.java", "diffHunk": "@@ -269,11 +269,6 @@ protected void testAccessControl() throws Exception {\n         loginAsStudentInstructor(instructor1OfCourse1.googleId);\n         verifyCanAccess(courseParam);\n \n-        String[] adminEntityParam = {\n-                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.ADMIN,\n-        };\n-\n-        verifyInaccessibleForAdmin(adminEntityParam);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDAyMDg1OnYy", "diffSide": "LEFT", "path": "src/test/java/teammates/test/cases/webapi/GetInstructorPrivilegeActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNjozNDo0NVrOGHohMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNjozNDo0NVrOGHohMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1NzA3Mw==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410657073", "createdAt": "2020-04-18T06:34:45Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/GetInstructorPrivilegeActionTest.java", "diffHunk": "@@ -410,7 +410,6 @@ protected void testAccessControl() throws Exception {\n         verifyInaccessibleWithoutLogin(submissionParams);\n         verifyInaccessibleForUnregisteredUsers(submissionParams);\n         verifyInaccessibleForStudents(submissionParams);\n-        verifyInaccessibleForAdmin(submissionParams);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDAyMzA5OnYy", "diffSide": "RIGHT", "path": "src/web/services/search.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNjozNzozM1rOGHoiXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwOTowOTo0NlrOGHpdXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1NzM3Mw==", "bodyText": "The alignment is not correct?", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410657373", "createdAt": "2020-04-18T06:37:33Z", "author": {"login": "xpdavid"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -359,19 +362,21 @@ export class SearchService {\n     const distinctCourseIds: string[] = Object.keys(distinctInstructorsMap);\n     const instructorsArray: Instructors[] = Object.values(distinctInstructorsMap);\n     return forkJoin(\n-      of(distinctCourseIds),\n-      forkJoin(instructorsArray.map((instructors: Instructors) => {\n-        return forkJoin(\n-          instructors.instructors.map(\n-            (instructor: Instructor) => this.instructorService.loadInstructorPrivilege(\n-              {\n-                courseId: instructor.courseId,\n-                instructorId: instructor.googleId,\n-              },\n-            ),\n-          ),\n-        );\n-      })),\n+      instructorsArray.length === 0\n+        ? of([])\n+        : of(distinctCourseIds),\n+          forkJoin(instructorsArray.map((instructors: Instructors) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MjQ3OA==", "bodyText": "\ud83d\udc40 sorry mistakenly committed this code, this should not be there, removed it thanks", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r410672478", "createdAt": "2020-04-18T09:09:46Z", "author": {"login": "hcwong"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -359,19 +362,21 @@ export class SearchService {\n     const distinctCourseIds: string[] = Object.keys(distinctInstructorsMap);\n     const instructorsArray: Instructors[] = Object.values(distinctInstructorsMap);\n     return forkJoin(\n-      of(distinctCourseIds),\n-      forkJoin(instructorsArray.map((instructors: Instructors) => {\n-        return forkJoin(\n-          instructors.instructors.map(\n-            (instructor: Instructor) => this.instructorService.loadInstructorPrivilege(\n-              {\n-                courseId: instructor.courseId,\n-                instructorId: instructor.googleId,\n-              },\n-            ),\n-          ),\n-        );\n-      })),\n+      instructorsArray.length === 0\n+        ? of([])\n+        : of(distinctCourseIds),\n+          forkJoin(instructorsArray.map((instructors: Instructors) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY1NzM3Mw=="}, "originalCommit": {"oid": "2d4afeb284c10cdbb04fd6bcd4d4b6854ae211e8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODM0NjMzOnYy", "diffSide": "RIGHT", "path": "src/web/services/navigation.service.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoyODo1MlrOGItMcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMToxMTo1OFrOGIuEeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MjI1Nw==", "bodyText": "What if we want to pass an argument with an empty string?\nI don't think we have the case but we should not hide the removing logic in src/web/services/navigation.service.ts. I think if you don't want the empty string, it should not be passed into the service in the first place.\nThe empty string and undefined value is too different case.\nIs there any engineering difficulties that make you do this?", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r411782257", "createdAt": "2020-04-21T00:28:52Z", "author": {"login": "xpdavid"}, "path": "src/web/services/navigation.service.ts", "diffHunk": "@@ -24,6 +24,17 @@ export class NavigationService {\n       .join('&')}`;\n   }\n \n+  /**\n+   * Removes params keys whose values are the empty string\n+   */\n+  filterEmptyParams(params: {[key: string]: string}): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20a6aa51c90ce430a70c07884eefc8cf1a22fc85"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc5MDk0NA==", "bodyText": "Hey Xiao Pu, this was created in order to replicate the current behaviour in AppUrl.java, which removes empty params when generating the links.  I thought that I should change it to match the current format. Let me know if I can change the format.\nThis function is also not called on encodeParams by default, so the case of passing empty string is still allowed\nI could move this logic back to link.service to make it clear that it's a link issue. What do you think?", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r411790944", "createdAt": "2020-04-21T00:54:59Z", "author": {"login": "hcwong"}, "path": "src/web/services/navigation.service.ts", "diffHunk": "@@ -24,6 +24,17 @@ export class NavigationService {\n       .join('&')}`;\n   }\n \n+  /**\n+   * Removes params keys whose values are the empty string\n+   */\n+  filterEmptyParams(params: {[key: string]: string}): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MjI1Nw=="}, "originalCommit": {"oid": "20a6aa51c90ce430a70c07884eefc8cf1a22fc85"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc5MTgyNw==", "bodyText": "I think link.service is better.", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r411791827", "createdAt": "2020-04-21T00:57:49Z", "author": {"login": "xpdavid"}, "path": "src/web/services/navigation.service.ts", "diffHunk": "@@ -24,6 +24,17 @@ export class NavigationService {\n       .join('&')}`;\n   }\n \n+  /**\n+   * Removes params keys whose values are the empty string\n+   */\n+  filterEmptyParams(params: {[key: string]: string}): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MjI1Nw=="}, "originalCommit": {"oid": "20a6aa51c90ce430a70c07884eefc8cf1a22fc85"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc5NjYwMg==", "bodyText": "Cool, fixed!", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r411796602", "createdAt": "2020-04-21T01:11:58Z", "author": {"login": "hcwong"}, "path": "src/web/services/navigation.service.ts", "diffHunk": "@@ -24,6 +24,17 @@ export class NavigationService {\n       .join('&')}`;\n   }\n \n+  /**\n+   * Removes params keys whose values are the empty string\n+   */\n+  filterEmptyParams(params: {[key: string]: string}): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MjI1Nw=="}, "originalCommit": {"oid": "20a6aa51c90ce430a70c07884eefc8cf1a22fc85"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODM1NDEyOnYy", "diffSide": "RIGHT", "path": "src/web/services/instructor.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDozMjowOFrOGItQmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDo0Nzo0OFrOGItkrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MzMyMw==", "bodyText": "The change is for?\nThe url param should all be in lower case?", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r411783323", "createdAt": "2020-04-21T00:32:08Z", "author": {"login": "xpdavid"}, "path": "src/web/services/instructor.service.ts", "diffHunk": "@@ -122,11 +122,11 @@ export class InstructorService {\n     }\n \n     if (queryParams.instructorRole) {\n-      paramMap.sectionname = queryParams.instructorRole;\n+      paramMap.instructorrole = queryParams.instructorRole;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20a6aa51c90ce430a70c07884eefc8cf1a22fc85"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4ODQ2Mw==", "bodyText": "This change is a typo in the current code.\nThe line above already (lines 120-122) handles the sectionname case\n if (queryParams.sectionName) {\n      paramMap.sectionname = queryParams.sectionName;\n }", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r411788463", "createdAt": "2020-04-21T00:47:48Z", "author": {"login": "hcwong"}, "path": "src/web/services/instructor.service.ts", "diffHunk": "@@ -122,11 +122,11 @@ export class InstructorService {\n     }\n \n     if (queryParams.instructorRole) {\n-      paramMap.sectionname = queryParams.instructorRole;\n+      paramMap.instructorrole = queryParams.instructorRole;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MzMyMw=="}, "originalCommit": {"oid": "20a6aa51c90ce430a70c07884eefc8cf1a22fc85"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODM1NDQ2OnYy", "diffSide": "RIGHT", "path": "src/web/services/instructor.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDozMjoxOFrOGItQzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDo0OTozN1rOGItnMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MzM3NQ==", "bodyText": "Same here?", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r411783375", "createdAt": "2020-04-21T00:32:18Z", "author": {"login": "xpdavid"}, "path": "src/web/services/instructor.service.ts", "diffHunk": "@@ -122,11 +122,11 @@ export class InstructorService {\n     }\n \n     if (queryParams.instructorRole) {\n-      paramMap.sectionname = queryParams.instructorRole;\n+      paramMap.instructorrole = queryParams.instructorRole;\n     }\n \n     if (queryParams.instructorEmail) {\n-      paramMap.instructorEmail = queryParams.instructorEmail;\n+      paramMap.instructoremail = queryParams.instructorEmail;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20a6aa51c90ce430a70c07884eefc8cf1a22fc85"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4OTEwNg==", "bodyText": "This change is also due to a typo in the current code.\nBackend expects the param name Const.ParamNames.INSTRUCTOR_EMAIL to be the lower case instructoremail", "url": "https://github.com/TEAMMATES/teammates/pull/10018#discussion_r411789106", "createdAt": "2020-04-21T00:49:37Z", "author": {"login": "hcwong"}, "path": "src/web/services/instructor.service.ts", "diffHunk": "@@ -122,11 +122,11 @@ export class InstructorService {\n     }\n \n     if (queryParams.instructorRole) {\n-      paramMap.sectionname = queryParams.instructorRole;\n+      paramMap.instructorrole = queryParams.instructorRole;\n     }\n \n     if (queryParams.instructorEmail) {\n-      paramMap.instructorEmail = queryParams.instructorEmail;\n+      paramMap.instructoremail = queryParams.instructorEmail;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MzM3NQ=="}, "originalCommit": {"oid": "20a6aa51c90ce430a70c07884eefc8cf1a22fc85"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3944, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}