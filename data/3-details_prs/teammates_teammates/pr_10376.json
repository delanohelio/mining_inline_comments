{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0MjMzNDMw", "number": 10376, "title": "[#10213] Improve error handling", "bodyText": "Fixes #10213, Part of #9356\nGoing through the error handling, there are mainly 3 ways that it is handled in increasing level of severity\n\nToast error messages (Already exists)\nRetry a load (Newly added)\n\nShowing a error report form to user (Exists. Added in a few more places)\n\n\nOutline of Solution\n\nAdded a new loading-retry component that shows a button with some error message\nAdded the component to all pages on load so it will display if there are errors in loading data. The retry is not added to buttons which causes some request to the backend. Users can just click the button again if the action fails. The toasts handle these errors.\nAdded the popup of the error report form when the data fails to load for some number of times(2 or 3) at these places\n\nPublishing/Unpublishing session results\nLoading of feedbacks session results\nLoading of submit feedback session", "createdAt": "2020-07-21T07:47:24Z", "url": "https://github.com/TEAMMATES/teammates/pull/10376", "merged": true, "mergeCommit": {"oid": "55c6a36ec2ee99c4f8e3bb9ed674847c03d0c895"}, "closed": true, "closedAt": "2020-07-27T07:37:46Z", "author": {"login": "t-cheepeng"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3BNyggH2gAyNDU0MjMzNDMwOjNiYjgzZWU4ODZiYzc0MmJjZTQ3NzA2NDliZDdmYWI1OTVkZjY5YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc48QGkAH2gAyNDU0MjMzNDMwOjQyYjk4Zjg3ZWMyMDU4NTBjYzNiNWY0YjU0NDQyNWNjOWI4MDFmODI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3bb83ee886bc742bce4770649bd7fab595df69ae", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/3bb83ee886bc742bce4770649bd7fab595df69ae", "committedDate": "2020-07-21T07:36:53Z", "message": "Add retry component to instructor home page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f9b59fb116d8d51b4133827d31a4cb705e3f682", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5f9b59fb116d8d51b4133827d31a4cb705e3f682", "committedDate": "2020-07-21T07:36:56Z", "message": "Add retry to instructor course related pages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea81fe91c789b3b7e997bd06a5c8412082c25875", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ea81fe91c789b3b7e997bd06a5c8412082c25875", "committedDate": "2020-07-21T07:36:56Z", "message": "Add retry to instructor session related pages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a364d7aa47f413cb2628c6884f83f81a01a27ff", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/0a364d7aa47f413cb2628c6884f83f81a01a27ff", "committedDate": "2020-07-21T07:36:57Z", "message": "Add retry to instructor student related pages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff8d268f4bbc159e827577586bc13166803c8bd0", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ff8d268f4bbc159e827577586bc13166803c8bd0", "committedDate": "2020-07-21T07:36:57Z", "message": "Add retry to student pages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMjY4NDE1", "url": "https://github.com/TEAMMATES/teammates/pull/10376#pullrequestreview-452268415", "createdAt": "2020-07-21T09:08:23Z", "commit": {"oid": "3bb83ee886bc742bce4770649bd7fab595df69ae"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwOTowODoyM1rOG0vEnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwOToxNjozNVrOG0vXXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1MDM2NA==", "bodyText": "Maybe we could extract this into a const in the types folder. Same with all other retry attempt numbers for more centralised management. Right now it just feels like a magic number to me.", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r457950364", "createdAt": "2020-07-21T09:08:23Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-session-base-page.component.ts", "diffHunk": "@@ -28,13 +30,17 @@ import { ErrorMessageOutput } from '../error-message-output';\n  */\n export abstract class InstructorSessionBasePageComponent {\n \n+  // Number of times publish/unpublish session is allowed to error before it is a reportable error\n+  private publishUnpublishRetryAttempts: number = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bb83ee886bc742bce4770649bd7fab595df69ae"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1MjM2NA==", "bodyText": "What do you mean by team is missing sorry? Is there any particular reason this todo shouldn't be resolved in this PR?", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r457952364", "createdAt": "2020-07-21T09:11:46Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.ts", "diffHunk": "@@ -127,101 +133,112 @@ export class InstructorSessionResultPageComponent extends InstructorCommentsComp\n   ngOnInit(): void {\n     this.route.queryParams.subscribe((queryParams: any) => {\n       this.isFeedbackSessionLoading = true;\n-      this.feedbackSessionsService.getFeedbackSession({\n-        courseId: queryParams.courseid,\n-        feedbackSessionName: queryParams.fsname,\n-        intent: Intent.INSTRUCTOR_RESULT,\n-      }).subscribe((feedbackSession: FeedbackSession) => {\n-        const TIME_FORMAT: string = 'ddd, DD MMM, YYYY, hh:mm A zz';\n-        this.session = feedbackSession;\n-        this.formattedSessionOpeningTime = this.timezoneService\n-            .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);\n-        this.formattedSessionClosingTime = this.timezoneService\n-            .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);\n-        if (this.session.resultVisibleFromTimestamp) {\n-          this.formattedResultVisibleFromTime = this.timezoneService\n-              .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);\n-        }\n-        this.isFeedbackSessionLoading = false;\n-\n-        // load section tabs\n-        this.courseService.getCourseSectionNames(queryParams.courseid)\n-            .subscribe((courseSectionNames: CourseSectionNames) => {\n-              for (const sectionName of courseSectionNames.sectionNames) {\n-                this.sectionsModel.None = {\n-                  questions: [],\n-                  hasPopulated: false,\n-                  isTabExpanded: false,\n-                };\n-                this.sectionsModel[sectionName] = {\n-                  questions: [],\n-                  hasPopulated: false,\n-                  isTabExpanded: false,\n-                };\n-              }\n-              this.isSectionsLoaded = true;\n-            }, (resp: ErrorMessageOutput) => {\n-              this.statusMessageService.showErrorToast(resp.error.message);\n-            });\n-\n-        // load question tabs\n-        this.feedbackQuestionsService.getFeedbackQuestions({\n-          courseId: queryParams.courseid,\n-          feedbackSessionName: queryParams.fsname,\n-          intent: Intent.INSTRUCTOR_RESULT,\n-        }).subscribe((feedbackQuestions: FeedbackQuestions) => {\n-          for (const question of feedbackQuestions.questions) {\n-            this.questionsModel[question.feedbackQuestionId] = {\n-              question,\n-              responses: [],\n-              statistics: '',\n-              hasPopulated: false,\n-              isTabExpanded: false,\n-            };\n-          }\n-          this.isQuestionsLoaded = true;\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorToast(resp.error.message);\n-        });\n-\n-        // load all students in course\n-        this.studentService.getStudentsFromCourse({\n-          courseId: queryParams.courseid,\n-        }).subscribe((allStudents: Students) => {\n-          this.allStudentsInCourse = allStudents.students;\n-\n-          // load no response students\n-          this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({\n-            courseId: queryParams.courseid,\n-            feedbackSessionName: queryParams.fsname,\n-          }).subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) => {\n-            // TODO team is missing\n-            this.noResponseStudents = this.allStudentsInCourse.filter((student: Student) =>\n-                                        !feedbackSessionSubmittedGiverSet.giverIdentifiers.includes(student.email));\n+      this.courseId = queryParams.courseid;\n+      this.fsName = queryParams.fsname;\n+      this.loadFeedbackSessionResults(this.courseId, this.fsName);\n+    });\n+  }\n+\n+  loadFeedbackSessionResults(courseId: string, feedbackSessionName: string): void {\n+    this.feedbackSessionsService.getFeedbackSession({\n+      courseId,\n+      feedbackSessionName,\n+      intent: Intent.INSTRUCTOR_RESULT,\n+    }).subscribe((feedbackSession: FeedbackSession) => {\n+      const TIME_FORMAT: string = 'ddd, DD MMM, YYYY, hh:mm A zz';\n+      this.session = feedbackSession;\n+      this.formattedSessionOpeningTime = this.timezoneService\n+          .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);\n+      this.formattedSessionClosingTime = this.timezoneService\n+          .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);\n+      if (this.session.resultVisibleFromTimestamp) {\n+        this.formattedResultVisibleFromTime = this.timezoneService\n+            .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);\n+      }\n+      this.isFeedbackSessionLoading = false;\n+\n+      // load section tabs\n+      this.courseService.getCourseSectionNames(courseId)\n+          .subscribe((courseSectionNames: CourseSectionNames) => {\n+            for (const sectionName of courseSectionNames.sectionNames) {\n+              this.sectionsModel.None = {\n+                questions: [],\n+                hasPopulated: false,\n+                isTabExpanded: false,\n+              };\n+              this.sectionsModel[sectionName] = {\n+                questions: [],\n+                hasPopulated: false,\n+                isTabExpanded: false,\n+              };\n+            }\n+            this.isSectionsLoaded = true;\n           }, (resp: ErrorMessageOutput) => {\n+            this.hasSectionsLoadingFailed = true;\n             this.statusMessageService.showErrorToast(resp.error.message);\n           });\n \n-          this.isNoResponsePanelLoaded = true;\n-\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorToast(resp.error.message);\n-        });\n+      // load question tabs\n+      this.feedbackQuestionsService.getFeedbackQuestions({\n+        courseId,\n+        feedbackSessionName,\n+        intent: Intent.INSTRUCTOR_RESULT,\n+      }).subscribe((feedbackQuestions: FeedbackQuestions) => {\n+        for (const question of feedbackQuestions.questions) {\n+          this.questionsModel[question.feedbackQuestionId] = {\n+            question,\n+            responses: [],\n+            statistics: '',\n+            hasPopulated: false,\n+            isTabExpanded: false,\n+          };\n+        }\n+        this.isQuestionsLoaded = true;\n+      }, (resp: ErrorMessageOutput) => {\n+        this.hasQuestionsLoadingFailed = true;\n+        this.statusMessageService.showErrorToast(resp.error.message);\n+      });\n \n-        // load current instructor name\n-        this.instructorService.getInstructor({\n-          courseId: queryParams.courseid,\n-          intent: Intent.FULL_DETAIL,\n-        }).subscribe((instructor: Instructor) => {\n-          this.currInstructorName = instructor.name;\n-        });\n+      // load all students in course\n+      this.studentService.getStudentsFromCourse({\n+        courseId,\n+      }).subscribe((allStudents: Students) => {\n+        this.allStudentsInCourse = allStudents.students;\n+        this.loadNoResponseStudents(courseId, feedbackSessionName);\n       }, (resp: ErrorMessageOutput) => {\n-        this.isFeedbackSessionLoading = false;\n         this.statusMessageService.showErrorToast(resp.error.message);\n       });\n+\n+      // load current instructor name\n+      this.instructorService.getInstructor({\n+        courseId,\n+        intent: Intent.FULL_DETAIL,\n+      }).subscribe((instructor: Instructor) => {\n+        this.currInstructorName = instructor.name;\n+      });\n+    }, (resp: ErrorMessageOutput) => {\n+      this.isFeedbackSessionLoading = false;\n+      this.hasFeedbackSessionLoadingFailed = true;\n+      this.statusMessageService.showErrorToast(resp.error.message);\n     });\n   }\n \n+  loadNoResponseStudents(courseId: string, feedbackSessionName: string): void {\n+    // load no response students\n+    this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({\n+      courseId,\n+      feedbackSessionName,\n+    }).subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) => {\n+      // TODO team is missing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea81fe91c789b3b7e997bd06a5c8412082c25875"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1NTE2Ng==", "bodyText": "Similar comment regarding magic number here", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r457955166", "createdAt": "2020-07-21T09:16:35Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -100,6 +101,8 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n   moderatedQuestionId: string = '';\n \n   isFeedbackSessionQuestionsLoading: boolean = false;\n+  hasFeedbackSessionQuestionsLoadingFailed: boolean = false;\n+  retryAttempts: number = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff8d268f4bbc159e827577586bc13166803c8bd0"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb675180a60ac11c02c8b979cfb15ac886e9d001", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/fb675180a60ac11c02c8b979cfb15ac886e9d001", "committedDate": "2020-07-21T09:53:28Z", "message": "Extract out retry attempts to separate file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMzA1MTUw", "url": "https://github.com/TEAMMATES/teammates/pull/10376#pullrequestreview-452305150", "createdAt": "2020-07-21T09:57:17Z", "commit": {"oid": "fb675180a60ac11c02c8b979cfb15ac886e9d001"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTY5MzMx", "url": "https://github.com/TEAMMATES/teammates/pull/10376#pullrequestreview-452969331", "createdAt": "2020-07-22T03:27:20Z", "commit": {"oid": "3bb83ee886bc742bce4770649bd7fab595df69ae"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzoyNzoyMFrOG1RWKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo0OTo0OFrOG1RsAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMTkxNQ==", "bodyText": "I don't think we should create any new retry method. this.loadCourses(); would already has the responsibility of setting this.hasCoursesLoaded and this.hasCoursesLoadingFailed to false.", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458511915", "createdAt": "2020-07-22T03:27:20Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.ts", "diffHunk": "@@ -386,4 +395,22 @@ export class InstructorHomePageComponent extends InstructorSessionModalPageCompo\n   downloadSessionResultEventHandler(tabIndex: number, rowIndex: number): void {\n     this.downloadSessionResult(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);\n   }\n+\n+  /**\n+   * Retries loading all the courses\n+   */\n+  retryLoadingCourses(): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bb83ee886bc742bce4770649bd7fab595df69ae"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMjAwNA==", "bodyText": "Similar here and in other places also. What do you think?", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458512004", "createdAt": "2020-07-22T03:27:39Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.ts", "diffHunk": "@@ -386,4 +395,22 @@ export class InstructorHomePageComponent extends InstructorSessionModalPageCompo\n   downloadSessionResultEventHandler(tabIndex: number, rowIndex: number): void {\n     this.downloadSessionResult(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);\n   }\n+\n+  /**\n+   * Retries loading all the courses\n+   */\n+  retryLoadingCourses(): void {\n+    this.hasCoursesLoadingFailed = false;\n+    this.hasCoursesLoaded = false;\n+    this.loadCourses();\n+  }\n+\n+  /**\n+   * Retries loading a feedback session from a course\n+   */\n+  retryLoadingSession(index: number): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bb83ee886bc742bce4770649bd7fab595df69ae"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMzI3Nw==", "bodyText": "The variable should be set inside loadFeedbackSessionResults I think", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458513277", "createdAt": "2020-07-22T03:32:31Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.ts", "diffHunk": "@@ -127,101 +133,112 @@ export class InstructorSessionResultPageComponent extends InstructorCommentsComp\n   ngOnInit(): void {\n     this.route.queryParams.subscribe((queryParams: any) => {\n       this.isFeedbackSessionLoading = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea81fe91c789b3b7e997bd06a5c8412082c25875"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNjUzNw==", "bodyText": "Missing feature (I believe it is also missing in V6). If the question for a team, the no response panel will not count for that even the team a student belongs has responses.", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458516537", "createdAt": "2020-07-22T03:46:00Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.ts", "diffHunk": "@@ -127,101 +133,112 @@ export class InstructorSessionResultPageComponent extends InstructorCommentsComp\n   ngOnInit(): void {\n     this.route.queryParams.subscribe((queryParams: any) => {\n       this.isFeedbackSessionLoading = true;\n-      this.feedbackSessionsService.getFeedbackSession({\n-        courseId: queryParams.courseid,\n-        feedbackSessionName: queryParams.fsname,\n-        intent: Intent.INSTRUCTOR_RESULT,\n-      }).subscribe((feedbackSession: FeedbackSession) => {\n-        const TIME_FORMAT: string = 'ddd, DD MMM, YYYY, hh:mm A zz';\n-        this.session = feedbackSession;\n-        this.formattedSessionOpeningTime = this.timezoneService\n-            .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);\n-        this.formattedSessionClosingTime = this.timezoneService\n-            .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);\n-        if (this.session.resultVisibleFromTimestamp) {\n-          this.formattedResultVisibleFromTime = this.timezoneService\n-              .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);\n-        }\n-        this.isFeedbackSessionLoading = false;\n-\n-        // load section tabs\n-        this.courseService.getCourseSectionNames(queryParams.courseid)\n-            .subscribe((courseSectionNames: CourseSectionNames) => {\n-              for (const sectionName of courseSectionNames.sectionNames) {\n-                this.sectionsModel.None = {\n-                  questions: [],\n-                  hasPopulated: false,\n-                  isTabExpanded: false,\n-                };\n-                this.sectionsModel[sectionName] = {\n-                  questions: [],\n-                  hasPopulated: false,\n-                  isTabExpanded: false,\n-                };\n-              }\n-              this.isSectionsLoaded = true;\n-            }, (resp: ErrorMessageOutput) => {\n-              this.statusMessageService.showErrorToast(resp.error.message);\n-            });\n-\n-        // load question tabs\n-        this.feedbackQuestionsService.getFeedbackQuestions({\n-          courseId: queryParams.courseid,\n-          feedbackSessionName: queryParams.fsname,\n-          intent: Intent.INSTRUCTOR_RESULT,\n-        }).subscribe((feedbackQuestions: FeedbackQuestions) => {\n-          for (const question of feedbackQuestions.questions) {\n-            this.questionsModel[question.feedbackQuestionId] = {\n-              question,\n-              responses: [],\n-              statistics: '',\n-              hasPopulated: false,\n-              isTabExpanded: false,\n-            };\n-          }\n-          this.isQuestionsLoaded = true;\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorToast(resp.error.message);\n-        });\n-\n-        // load all students in course\n-        this.studentService.getStudentsFromCourse({\n-          courseId: queryParams.courseid,\n-        }).subscribe((allStudents: Students) => {\n-          this.allStudentsInCourse = allStudents.students;\n-\n-          // load no response students\n-          this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({\n-            courseId: queryParams.courseid,\n-            feedbackSessionName: queryParams.fsname,\n-          }).subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) => {\n-            // TODO team is missing\n-            this.noResponseStudents = this.allStudentsInCourse.filter((student: Student) =>\n-                                        !feedbackSessionSubmittedGiverSet.giverIdentifiers.includes(student.email));\n+      this.courseId = queryParams.courseid;\n+      this.fsName = queryParams.fsname;\n+      this.loadFeedbackSessionResults(this.courseId, this.fsName);\n+    });\n+  }\n+\n+  loadFeedbackSessionResults(courseId: string, feedbackSessionName: string): void {\n+    this.feedbackSessionsService.getFeedbackSession({\n+      courseId,\n+      feedbackSessionName,\n+      intent: Intent.INSTRUCTOR_RESULT,\n+    }).subscribe((feedbackSession: FeedbackSession) => {\n+      const TIME_FORMAT: string = 'ddd, DD MMM, YYYY, hh:mm A zz';\n+      this.session = feedbackSession;\n+      this.formattedSessionOpeningTime = this.timezoneService\n+          .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);\n+      this.formattedSessionClosingTime = this.timezoneService\n+          .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);\n+      if (this.session.resultVisibleFromTimestamp) {\n+        this.formattedResultVisibleFromTime = this.timezoneService\n+            .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);\n+      }\n+      this.isFeedbackSessionLoading = false;\n+\n+      // load section tabs\n+      this.courseService.getCourseSectionNames(courseId)\n+          .subscribe((courseSectionNames: CourseSectionNames) => {\n+            for (const sectionName of courseSectionNames.sectionNames) {\n+              this.sectionsModel.None = {\n+                questions: [],\n+                hasPopulated: false,\n+                isTabExpanded: false,\n+              };\n+              this.sectionsModel[sectionName] = {\n+                questions: [],\n+                hasPopulated: false,\n+                isTabExpanded: false,\n+              };\n+            }\n+            this.isSectionsLoaded = true;\n           }, (resp: ErrorMessageOutput) => {\n+            this.hasSectionsLoadingFailed = true;\n             this.statusMessageService.showErrorToast(resp.error.message);\n           });\n \n-          this.isNoResponsePanelLoaded = true;\n-\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorToast(resp.error.message);\n-        });\n+      // load question tabs\n+      this.feedbackQuestionsService.getFeedbackQuestions({\n+        courseId,\n+        feedbackSessionName,\n+        intent: Intent.INSTRUCTOR_RESULT,\n+      }).subscribe((feedbackQuestions: FeedbackQuestions) => {\n+        for (const question of feedbackQuestions.questions) {\n+          this.questionsModel[question.feedbackQuestionId] = {\n+            question,\n+            responses: [],\n+            statistics: '',\n+            hasPopulated: false,\n+            isTabExpanded: false,\n+          };\n+        }\n+        this.isQuestionsLoaded = true;\n+      }, (resp: ErrorMessageOutput) => {\n+        this.hasQuestionsLoadingFailed = true;\n+        this.statusMessageService.showErrorToast(resp.error.message);\n+      });\n \n-        // load current instructor name\n-        this.instructorService.getInstructor({\n-          courseId: queryParams.courseid,\n-          intent: Intent.FULL_DETAIL,\n-        }).subscribe((instructor: Instructor) => {\n-          this.currInstructorName = instructor.name;\n-        });\n+      // load all students in course\n+      this.studentService.getStudentsFromCourse({\n+        courseId,\n+      }).subscribe((allStudents: Students) => {\n+        this.allStudentsInCourse = allStudents.students;\n+        this.loadNoResponseStudents(courseId, feedbackSessionName);\n       }, (resp: ErrorMessageOutput) => {\n-        this.isFeedbackSessionLoading = false;\n         this.statusMessageService.showErrorToast(resp.error.message);\n       });\n+\n+      // load current instructor name\n+      this.instructorService.getInstructor({\n+        courseId,\n+        intent: Intent.FULL_DETAIL,\n+      }).subscribe((instructor: Instructor) => {\n+        this.currInstructorName = instructor.name;\n+      });\n+    }, (resp: ErrorMessageOutput) => {\n+      this.isFeedbackSessionLoading = false;\n+      this.hasFeedbackSessionLoadingFailed = true;\n+      this.statusMessageService.showErrorToast(resp.error.message);\n     });\n   }\n \n+  loadNoResponseStudents(courseId: string, feedbackSessionName: string): void {\n+    // load no response students\n+    this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({\n+      courseId,\n+      feedbackSessionName,\n+    }).subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) => {\n+      // TODO team is missing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1MjM2NA=="}, "originalCommit": {"oid": "ea81fe91c789b3b7e997bd06a5c8412082c25875"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNzEzMg==", "bodyText": "Again, I think it is loadCandidatesCourse's responsibility to set hasCourseLoadingFailed and courseCandidates at the begining.", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458517132", "createdAt": "2020-07-22T03:48:21Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.ts", "diffHunk": "@@ -604,6 +615,23 @@ export class InstructorSessionsPageComponent extends InstructorSessionModalPageC\n       }, (resp: ErrorMessageOutput) => {\n         this.statusMessageService.showErrorToast(resp.error.message);\n       });\n-    }, () => {});\n+    });\n+  }\n+\n+  /**\n+   * Attempts to load all data again.\n+   */\n+  retryLoadingAllData(): void {\n+    this.hasFeedbackSessionLoadingFailed = false;\n+    this.hasCourseLoadingFailed = false;\n+    this.loadCandidatesCourse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea81fe91c789b3b7e997bd06a5c8412082c25875"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNzUwNA==", "bodyText": "Any specific reason to promote courseId to class attribute?", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458517504", "createdAt": "2020-07-22T03:49:48Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-student-details-page/instructor-course-student-details-page.component.ts", "diffHunk": "@@ -22,8 +22,13 @@ export class InstructorCourseStudentDetailsPageComponent implements OnInit {\n   studentProfile?: StudentProfile;\n   photoUrl: string = '';\n \n+  courseId: string = '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a364d7aa47f413cb2628c6884f83f81a01a27ff"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5da496812c695183dfa2b7ba20abd1a22a379b3", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a5da496812c695183dfa2b7ba20abd1a22a379b3", "committedDate": "2020-07-22T04:36:26Z", "message": "Shift loading variable to appropriate place"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1facf2c5e0663731d0e795acddbf0b1af1221358", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/1facf2c5e0663731d0e795acddbf0b1af1221358", "committedDate": "2020-07-23T04:42:42Z", "message": "Merge branch 'master' into improve-error-handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c379f2bd06ae4e3ebac2f4088df5bcb893252cec", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/c379f2bd06ae4e3ebac2f4088df5bcb893252cec", "committedDate": "2020-07-23T09:42:10Z", "message": "Remove retry method and set fail variable in load"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d1773a6b639ef17d8c17dcb9df78a0815b6ccf0", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/0d1773a6b639ef17d8c17dcb9df78a0815b6ccf0", "committedDate": "2020-07-23T09:42:58Z", "message": "Remove loading bar from instructor home page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1968b0e5d2762b4398334b3abfecf24c1b4cb979", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/1968b0e5d2762b4398334b3abfecf24c1b4cb979", "committedDate": "2020-07-23T11:03:13Z", "message": "Change access modifier in course details page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f661fc44270ce1ece8a4b95050009ba9ef34873", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2f661fc44270ce1ece8a4b95050009ba9ef34873", "committedDate": "2020-07-27T03:50:41Z", "message": "Merge branch 'master' into improve-error-handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NDczNTg5", "url": "https://github.com/TEAMMATES/teammates/pull/10376#pullrequestreview-455473589", "createdAt": "2020-07-27T05:06:23Z", "commit": {"oid": "2f661fc44270ce1ece8a4b95050009ba9ef34873"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNTowNjoyM1rOG3TxmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNToxMzowN1rOG3T3nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0ODg1Ng==", "bodyText": "Consistent naming?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              hasFailedLoadingStudents: boolean = false;\n          \n          \n            \n              hasLoadingStudentsFailed: boolean = false;", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r460648856", "createdAt": "2020-07-27T05:06:23Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "diffHunk": "@@ -68,6 +68,7 @@ export class InstructorCourseEnrollPageComponent implements OnInit {\n \n   existingStudentsHOT: string = 'existingStudentsHOT';\n   isExistingStudentsPresent: boolean = true;\n+  hasFailedLoadingStudents: boolean = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f661fc44270ce1ece8a4b95050009ba9ef34873"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MDM5OQ==", "bodyText": "Can we be consistent on this?\nUse DEFAULT_NUMBER_OF_RETRY_ATTEMPTS ?", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r460650399", "createdAt": "2020-07-27T05:13:07Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-session/session-result-page/session-result-page.component.ts", "diffHunk": "@@ -54,6 +56,8 @@ export class SessionResultPageComponent implements OnInit {\n   regKey: string = '';\n \n   isFeedbackSessionResultsLoading: boolean = false;\n+  hasFeedbackSessionResultsLoadingFailed: boolean = false;\n+  retryAttempts: number = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f661fc44270ce1ece8a4b95050009ba9ef34873"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42d85b90edf8e19fd05c85c79ef093eae9be1ba4", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/42d85b90edf8e19fd05c85c79ef093eae9be1ba4", "committedDate": "2020-07-27T06:57:11Z", "message": "Change variable name and use constant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42b98f87ec205850cc3b5f4b544425cc9b801f82", "author": {"user": {"login": "t-cheepeng", "name": "t-cheepeng"}}, "url": "https://github.com/TEAMMATES/teammates/commit/42b98f87ec205850cc3b5f4b544425cc9b801f82", "committedDate": "2020-07-27T06:57:44Z", "message": "Merge branch 'master' into improve-error-handling"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4303, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}