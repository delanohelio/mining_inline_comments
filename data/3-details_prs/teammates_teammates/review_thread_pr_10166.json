{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MjE0ODkx", "number": 10166, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDozOTowNVrOEC0KSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0OToyOVrOEDEA6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzg3MjA4OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/mcq-question-statistics.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDozOTowNVrOGfgJvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNToyNjo1NFrOGfg1mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY4NTgyMw==", "bodyText": "Should this be in the TableComparatorService?", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435685823", "createdAt": "2020-06-05T04:39:05Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/components/question-types/question-statistics/mcq-question-statistics.component.ts", "diffHunk": "@@ -124,4 +132,31 @@ export class McqQuestionStatisticsComponent\n     }\n   }\n \n+  private sortChoices = (item1: string, item2: string): number => {\n+    return this.tableComparatorService.compareLexicographically(item1, item2, SortOrder.ASC);\n+  }\n+\n+  private sortNumbers(item1: number, item2: number): number {\n+    return item1 - item2;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea2285f2b1d92b39d1122d184c32a7af2cecaa13"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY5NzA1MA==", "bodyText": "You can take a look at my PR #10155 for the use of TableComparatorService . Basically all comparison should be delegated to this.tableComparatorService.compare().", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435697050", "createdAt": "2020-06-05T05:26:54Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/app/components/question-types/question-statistics/mcq-question-statistics.component.ts", "diffHunk": "@@ -124,4 +132,31 @@ export class McqQuestionStatisticsComponent\n     }\n   }\n \n+  private sortChoices = (item1: string, item2: string): number => {\n+    return this.tableComparatorService.compareLexicographically(item1, item2, SortOrder.ASC);\n+  }\n+\n+  private sortNumbers(item1: number, item2: number): number {\n+    return item1 - item2;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY4NTgyMw=="}, "originalCommit": {"oid": "ea2285f2b1d92b39d1122d184c32a7af2cecaa13"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzg4MzA4OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDo0NzowOVrOGfgQpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDo0NzowOVrOGfgQpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY4NzU5MA==", "bodyText": "Not sure if we can use typescript to enforce that the types of items in the columns and rows arrays are properly aligned. Searched around for quite a bit and couldn't find any solutions.", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435687590", "createdAt": "2020-06-05T04:47:09Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "diffHunk": "@@ -0,0 +1,78 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { SortOrder } from '../../../types/sort-properties';\n+\n+/**\n+ * Column data for sortable table\n+ */\n+export interface ColumnData<T> {\n+  header: string;\n+  headerToolTip?: string;\n+  sortBy?(item1: T, item2: T): number; // Don't provide this field if you don't want this column to be sortable\n+}\n+\n+/**\n+ * Displays a sortable table, sorting by clicking on the header\n+ * Optional sorting function to be inputted provided for each column\n+ * Columns and rows provided must be aligned\n+ */\n+@Component({\n+  selector: 'tm-sortable-table',\n+  templateUrl: './sortable-table.component.html',\n+  styleUrls: ['./sortable-table.component.scss'],\n+})\n+export class SortableTableComponent implements OnInit {\n+\n+  @Input()\n+  columns: ColumnData<any>[] = [];\n+\n+  @Input()\n+  rows: any[][] = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30ea6ee7de23fd7afe7d69fc5b735de3c585426d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzk0Njk1OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/mcq-question-statistics.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNToyOTozMVrOGfg35A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNToyOTozMVrOGfg35A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY5NzYzNg==", "bodyText": "You should use this.tableComparatorService.compare(), declare the respective enum in src/web/types/sort-properties.ts for switch case in the function.", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435697636", "createdAt": "2020-06-05T05:29:31Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/app/components/question-types/question-statistics/mcq-question-statistics.component.ts", "diffHunk": "@@ -124,4 +132,31 @@ export class McqQuestionStatisticsComponent\n     }\n   }\n \n+  private sortChoices = (item1: string, item2: string): number => {\n+    return this.tableComparatorService.compareLexicographically(item1, item2, SortOrder.ASC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d06e91ee94d3459521e87c23d9a1931d5a28a1"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDAyMDk0OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoxMToyOVrOGfhkow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjozMjo1NVrOGfh_yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcwOTA5MQ==", "bodyText": "I think it would be better to name as headerData? Else it might be misinterpreted as data for the whole column.", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435709091", "createdAt": "2020-06-05T06:11:29Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "diffHunk": "@@ -0,0 +1,78 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { SortOrder } from '../../../types/sort-properties';\n+\n+/**\n+ * Column data for sortable table\n+ */\n+export interface ColumnData<T> {\n+  header: string;\n+  headerToolTip?: string;\n+  sortBy?(item1: T, item2: T): number; // Don't provide this field if you don't want this column to be sortable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d06e91ee94d3459521e87c23d9a1931d5a28a1"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxMDE0OA==", "bodyText": "But the sorting option is for the whole column though.\nOr it can be something like columnMetadata?", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435710148", "createdAt": "2020-06-05T06:15:02Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "diffHunk": "@@ -0,0 +1,78 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { SortOrder } from '../../../types/sort-properties';\n+\n+/**\n+ * Column data for sortable table\n+ */\n+export interface ColumnData<T> {\n+  header: string;\n+  headerToolTip?: string;\n+  sortBy?(item1: T, item2: T): number; // Don't provide this field if you don't want this column to be sortable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcwOTA5MQ=="}, "originalCommit": {"oid": "a8d06e91ee94d3459521e87c23d9a1931d5a28a1"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxMjI3Mw==", "bodyText": "I felt sortBy here should be the enum type SortBy?\nIt should then be passed into tableComparatorService.comapre(), which will handle the comparison logic.", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435712273", "createdAt": "2020-06-05T06:21:45Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "diffHunk": "@@ -0,0 +1,78 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { SortOrder } from '../../../types/sort-properties';\n+\n+/**\n+ * Column data for sortable table\n+ */\n+export interface ColumnData<T> {\n+  header: string;\n+  headerToolTip?: string;\n+  sortBy?(item1: T, item2: T): number; // Don't provide this field if you don't want this column to be sortable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcwOTA5MQ=="}, "originalCommit": {"oid": "a8d06e91ee94d3459521e87c23d9a1931d5a28a1"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxNjA0Mg==", "bodyText": "Was in the process of changing it. Seems like we had the same idea :)", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435716042", "createdAt": "2020-06-05T06:32:55Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "diffHunk": "@@ -0,0 +1,78 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { SortOrder } from '../../../types/sort-properties';\n+\n+/**\n+ * Column data for sortable table\n+ */\n+export interface ColumnData<T> {\n+  header: string;\n+  headerToolTip?: string;\n+  sortBy?(item1: T, item2: T): number; // Don't provide this field if you don't want this column to be sortable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcwOTA5MQ=="}, "originalCommit": {"oid": "a8d06e91ee94d3459521e87c23d9a1931d5a28a1"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDQzNzQ2OnYy", "diffSide": "RIGHT", "path": "src/web/types/sort-properties.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo0MToxMFrOGflo1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1MjoyNVrOGfmBLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc3NTcwMg==", "bodyText": "We should follow the enum convention to have all letters capitalised.", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435775702", "createdAt": "2020-06-05T08:41:10Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/types/sort-properties.ts", "diffHunk": "@@ -141,6 +141,31 @@ export enum SortBy {\n      * Average score (exclude self-review) of the numerical scale question.\n      */\n     NUMERICAL_SCALE_AVERAGE_EXCLUDE_SELF,\n+\n+    /**\n+     * Option text\n+     */\n+    MCQ_Choice,\n+\n+    /**\n+     * Weight assigned to the option\n+     */\n+    MCQ_Weight,\n+\n+    /**\n+     * Number of selection of that option\n+     */\n+    MCQ_Response_Count,\n+\n+    /**\n+     * Percentage of selection of that option\n+     */\n+    MCQ_Percentage,\n+\n+    /**\n+     * Weighted percentage of selection of that option\n+     */\n+    MCQ_Weighted_Percentage,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2a8441deaca0843a232f8930356d124edc63d77"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4MTkzMg==", "bodyText": "Oops will change.", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435781932", "createdAt": "2020-06-05T08:52:25Z", "author": {"login": "ccyccyccy"}, "path": "src/web/types/sort-properties.ts", "diffHunk": "@@ -141,6 +141,31 @@ export enum SortBy {\n      * Average score (exclude self-review) of the numerical scale question.\n      */\n     NUMERICAL_SCALE_AVERAGE_EXCLUDE_SELF,\n+\n+    /**\n+     * Option text\n+     */\n+    MCQ_Choice,\n+\n+    /**\n+     * Weight assigned to the option\n+     */\n+    MCQ_Weight,\n+\n+    /**\n+     * Number of selection of that option\n+     */\n+    MCQ_Response_Count,\n+\n+    /**\n+     * Percentage of selection of that option\n+     */\n+    MCQ_Percentage,\n+\n+    /**\n+     * Weighted percentage of selection of that option\n+     */\n+    MCQ_Weighted_Percentage,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc3NTcwMg=="}, "originalCommit": {"oid": "a2a8441deaca0843a232f8930356d124edc63d77"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDQ0NjYxOnYy", "diffSide": "RIGHT", "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo0NDowNVrOGfluxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1MzoxNlrOGfmDEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc3NzIyMw==", "bodyText": "To be consistent with other files, we put enum declaration at the top of class.", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435777223", "createdAt": "2020-06-05T08:44:05Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "diffHunk": "@@ -0,0 +1,79 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { TableComparatorService } from '../../../services/table-comparator.service';\n+import { SortBy, SortOrder } from '../../../types/sort-properties';\n+\n+/**\n+ * Column data for sortable table\n+ */\n+export interface ColumnData {\n+  header: string;\n+  headerToolTip?: string;\n+  sortBy?: SortBy; // Don't provide this field if you don't want this column to be sortable\n+}\n+\n+/**\n+ * Displays a sortable table, sorting by clicking on the header\n+ * Optional sortBy option provided for each column\n+ * Columns and rows provided must be aligned\n+ */\n+@Component({\n+  selector: 'tm-sortable-table',\n+  templateUrl: './sortable-table.component.html',\n+  styleUrls: ['./sortable-table.component.scss'],\n+})\n+export class SortableTableComponent implements OnInit {\n+\n+  @Input()\n+  columns: ColumnData[] = [];\n+\n+  @Input()\n+  rows: any[][] = [];\n+\n+  columnToSortBy: string = '';\n+  sortOrder: SortOrder = SortOrder.ASC;\n+  tableRows: any[][] = [];\n+\n+  // enum\n+  SortOrder: typeof SortOrder = SortOrder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2a8441deaca0843a232f8930356d124edc63d77"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4MjQxOA==", "bodyText": "Actually there's some inconsistencies between files for this. But majority put it at the top, so I'll make this change as well.", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r435782418", "createdAt": "2020-06-05T08:53:16Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "diffHunk": "@@ -0,0 +1,79 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { TableComparatorService } from '../../../services/table-comparator.service';\n+import { SortBy, SortOrder } from '../../../types/sort-properties';\n+\n+/**\n+ * Column data for sortable table\n+ */\n+export interface ColumnData {\n+  header: string;\n+  headerToolTip?: string;\n+  sortBy?: SortBy; // Don't provide this field if you don't want this column to be sortable\n+}\n+\n+/**\n+ * Displays a sortable table, sorting by clicking on the header\n+ * Optional sortBy option provided for each column\n+ * Columns and rows provided must be aligned\n+ */\n+@Component({\n+  selector: 'tm-sortable-table',\n+  templateUrl: './sortable-table.component.html',\n+  styleUrls: ['./sortable-table.component.scss'],\n+})\n+export class SortableTableComponent implements OnInit {\n+\n+  @Input()\n+  columns: ColumnData[] = [];\n+\n+  @Input()\n+  rows: any[][] = [];\n+\n+  columnToSortBy: string = '';\n+  sortOrder: SortOrder = SortOrder.ASC;\n+  tableRows: any[][] = [];\n+\n+  // enum\n+  SortOrder: typeof SortOrder = SortOrder;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc3NzIyMw=="}, "originalCommit": {"oid": "a2a8441deaca0843a232f8930356d124edc63d77"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjQ2OTUyOnYy", "diffSide": "RIGHT", "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0OToyOVrOGf5sqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjo1MDoyMlrOGgBa6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwNDM2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              sortBy?: SortBy; // Don't provide this field if you don't want this column to be sortable\n          \n          \n            \n              sortBy?: SortBy; // optional if the column is not sortable\n          \n      \n    \n    \n  \n\nI would say comment like this is better :P", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r436104360", "createdAt": "2020-06-05T18:49:29Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "diffHunk": "@@ -0,0 +1,79 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { TableComparatorService } from '../../../services/table-comparator.service';\n+import { SortBy, SortOrder } from '../../../types/sort-properties';\n+\n+/**\n+ * Column data for sortable table\n+ */\n+export interface ColumnData {\n+  header: string;\n+  headerToolTip?: string;\n+  sortBy?: SortBy; // Don't provide this field if you don't want this column to be sortable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a885c9b6e62f94b380c0cf52b38ec4c11a45d037"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDg5MQ==", "bodyText": "Yep much more concise", "url": "https://github.com/TEAMMATES/teammates/pull/10166#discussion_r436230891", "createdAt": "2020-06-06T02:50:22Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/components/sortable-table/sortable-table.component.ts", "diffHunk": "@@ -0,0 +1,79 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { TableComparatorService } from '../../../services/table-comparator.service';\n+import { SortBy, SortOrder } from '../../../types/sort-properties';\n+\n+/**\n+ * Column data for sortable table\n+ */\n+export interface ColumnData {\n+  header: string;\n+  headerToolTip?: string;\n+  sortBy?: SortBy; // Don't provide this field if you don't want this column to be sortable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwNDM2MA=="}, "originalCommit": {"oid": "a885c9b6e62f94b380c0cf52b38ec4c11a45d037"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3789, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}