{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MDY3MjY4", "number": 10653, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNzo0MDo0NVrOEd_aKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMTo1ODoxNFrOEgweuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODgzMDUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/storage/api/FeedbackSessionsDb.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNzo0MDo0NVrOHJc4tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMjo1MzowMVrOHJofFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MjUwMw==", "bodyText": "This violates our policy on DB layer though https://github.com/TEAMMATES/teammates/blob/master/docs/design.md#policies-2", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479672503", "createdAt": "2020-08-29T17:40:45Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/storage/api/FeedbackSessionsDb.java", "diffHunk": "@@ -80,7 +81,15 @@ public FeedbackSessionAttributes getFeedbackSession(String courseId, String feed\n \n         if (feedbackSession != null && feedbackSession.isSessionDeleted()) {\n             log.info(\"Trying to access soft-deleted session: \" + feedbackSessionName + \"/\" + courseId);\n-            return null;\n+        }\n+        if (feedbackSession == null || feedbackSession.isSessionDeleted()) {\n+            String errorMessage = \"\";\n+            if (feedbackSession == null) {\n+                errorMessage = \"Session not found.\";\n+            } else {\n+                errorMessage = \"Session is deleted.\";\n+            }\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(errorMessage));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5559d607994696d4752e060c977526aa62bb4882"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMDEzOA==", "bodyText": "There are two very dangerous things done here:\n\nAssuming that feedback session not found is not desirable. DB layer has no concern with such.\nThrowing unchecked exception in DB layer.", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479700138", "createdAt": "2020-08-29T23:27:01Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/storage/api/FeedbackSessionsDb.java", "diffHunk": "@@ -80,7 +81,15 @@ public FeedbackSessionAttributes getFeedbackSession(String courseId, String feed\n \n         if (feedbackSession != null && feedbackSession.isSessionDeleted()) {\n             log.info(\"Trying to access soft-deleted session: \" + feedbackSessionName + \"/\" + courseId);\n-            return null;\n+        }\n+        if (feedbackSession == null || feedbackSession.isSessionDeleted()) {\n+            String errorMessage = \"\";\n+            if (feedbackSession == null) {\n+                errorMessage = \"Session not found.\";\n+            } else {\n+                errorMessage = \"Session is deleted.\";\n+            }\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(errorMessage));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MjUwMw=="}, "originalCommit": {"oid": "5559d607994696d4752e060c977526aa62bb4882"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg2MjU0OQ==", "bodyText": "The problem was that this issues is quite prevalent. There is almost never a null check for logic.getFeedbackSession() in the access control of feedback session actions. I've moved the check to checkSpecificAccessControl", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479862549", "createdAt": "2020-08-31T02:53:01Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/storage/api/FeedbackSessionsDb.java", "diffHunk": "@@ -80,7 +81,15 @@ public FeedbackSessionAttributes getFeedbackSession(String courseId, String feed\n \n         if (feedbackSession != null && feedbackSession.isSessionDeleted()) {\n             log.info(\"Trying to access soft-deleted session: \" + feedbackSessionName + \"/\" + courseId);\n-            return null;\n+        }\n+        if (feedbackSession == null || feedbackSession.isSessionDeleted()) {\n+            String errorMessage = \"\";\n+            if (feedbackSession == null) {\n+                errorMessage = \"Session not found.\";\n+            } else {\n+                errorMessage = \"Session is deleted.\";\n+            }\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(errorMessage));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MjUwMw=="}, "originalCommit": {"oid": "5559d607994696d4752e060c977526aa62bb4882"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDQyODIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMzozMToxMFrOHJo8ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMToxODowMVrOHJ0ycg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3MDA1Mg==", "bodyText": "This entire PR screams \"DRY\". You should abstract this entire method (get feedback session, throw EntityNotFoundException if not found) into the parent Action class.\nWhile you're at it, see if you can also employ the same method for course, instructor, and/or student objects.", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479870052", "createdAt": "2020-08-31T03:31:10Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java", "diffHunk": "@@ -30,6 +32,10 @@ public void checkSpecificAccessControl() {\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n         FeedbackSessionAttributes feedbackSession = logic.getFeedbackSession(feedbackSessionName, courseId);\n \n+        if (feedbackSession == null) {\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session not found\"));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc5dcabfac1135839382ad0d55a691aecc185b4f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkzMTI3NQ==", "bodyText": "That's going to take a while. What if I just move the validation to the logic layer? i.e. throw exception if not found at logic.getFeedbackSession()", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479931275", "createdAt": "2020-08-31T06:53:20Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java", "diffHunk": "@@ -30,6 +32,10 @@ public void checkSpecificAccessControl() {\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n         FeedbackSessionAttributes feedbackSession = logic.getFeedbackSession(feedbackSessionName, courseId);\n \n+        if (feedbackSession == null) {\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session not found\"));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3MDA1Mg=="}, "originalCommit": {"oid": "cc5dcabfac1135839382ad0d55a691aecc185b4f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA2NDExNA==", "bodyText": "Logic has no business with throwing that kind of exception\nEven if it does, logic layer must not throw any runtime exception", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r480064114", "createdAt": "2020-08-31T11:18:01Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java", "diffHunk": "@@ -30,6 +32,10 @@ public void checkSpecificAccessControl() {\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n         FeedbackSessionAttributes feedbackSession = logic.getFeedbackSession(feedbackSessionName, courseId);\n \n+        if (feedbackSession == null) {\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session not found\"));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3MDA1Mg=="}, "originalCommit": {"oid": "cc5dcabfac1135839382ad0d55a691aecc185b4f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzgzOTg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/Action.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMTo1NjozOFrOHNuCAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMTo1NjozOFrOHNuCAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE0NzcxMw==", "bodyText": "Just getFeedbackSession doesn't immediately tell that it's going to throw some exception if the value is null. Name it something like getNonNullFeedbackSession?", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r484147713", "createdAt": "2020-09-07T01:56:38Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/Action.java", "diffHunk": "@@ -190,6 +193,14 @@ protected String getRequestBody() {\n         return requestBody;\n     }\n \n+    protected FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1696c1b92cbcaae2668616ba44196474f6923864"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzg0MTcyOnYy", "diffSide": "LEFT", "path": "src/main/java/teammates/ui/webapi/action/PublishFeedbackSessionAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMTo1ODowNlrOHNuDIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMTo1ODowNlrOHNuDIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE0ODAwMg==", "bodyText": "Unnecessary line move", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r484148002", "createdAt": "2020-09-07T01:58:06Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/PublishFeedbackSessionAction.java", "diffHunk": "@@ -24,10 +24,10 @@ public void checkSpecificAccessControl() {\n         String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n \n+        FeedbackSessionAttributes feedbackSession = getFeedbackSession(feedbackSessionName, courseId);\n         InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n-        FeedbackSessionAttributes session = logic.getFeedbackSession(feedbackSessionName, courseId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1696c1b92cbcaae2668616ba44196474f6923864"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzg0MTg0OnYy", "diffSide": "LEFT", "path": "src/main/java/teammates/ui/webapi/action/UnpublishFeedbackSessionAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMTo1ODoxNFrOHNuDNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMTo1ODoxNFrOHNuDNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE0ODAyMw==", "bodyText": "Similarly here", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r484148023", "createdAt": "2020-09-07T01:58:14Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/UnpublishFeedbackSessionAction.java", "diffHunk": "@@ -24,10 +24,10 @@ public void checkSpecificAccessControl() {\n         String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n \n+        FeedbackSessionAttributes feedbackSession = getFeedbackSession(feedbackSessionName, courseId);\n         InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n-        FeedbackSessionAttributes session = logic.getFeedbackSession(feedbackSessionName, courseId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1696c1b92cbcaae2668616ba44196474f6923864"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3507, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}