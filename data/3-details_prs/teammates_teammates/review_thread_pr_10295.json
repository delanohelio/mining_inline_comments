{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MzIxNzQw", "number": 10295, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzozOTo1M1rOENrA5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNTozNjoxNVrOEOiHVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzcxNjg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetInstructorsAction.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzozOTo1M1rOGwadBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDowNjoyOFrOGwayuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODI0Nw==", "bodyText": "After much debugging I've isolated the problem with the e2e tests to the addition of this line. Whenever verifyPresentInDatastore is called in a test case for instructors, the BackDoor will attempt to execute a GET request on the /instructors endpoint. This will now however always throw a NPE because userInfo.getId() is null. Any advice to help resolve this would be appreciated @wkurniawan07 @xpdavid @jtankw3", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453418247", "createdAt": "2020-07-13T03:39:53Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/ui/webapi/action/GetInstructorsAction.java", "diffHunk": "@@ -76,7 +77,18 @@ public ActionResult execute() {\n             });\n         } else if (intentStr.equals(Intent.FULL_DETAIL.toString())) {\n             // get all instructors of a course without information hiding\n-            data = new InstructorsData(instructorsOfCourse);\n+            // adds googleId if caller is course co-owner or admin\n+            if (userInfo.isAdmin || logic.getInstructorForGoogleId(courseId, userInfo.getId()).getRole().equals(\n+                    Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c01a963e339de47bb195bfceedef71681f4f00"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDI4MQ==", "bodyText": "We can add userInfo != null first?", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453420281", "createdAt": "2020-07-13T03:49:19Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetInstructorsAction.java", "diffHunk": "@@ -76,7 +77,18 @@ public ActionResult execute() {\n             });\n         } else if (intentStr.equals(Intent.FULL_DETAIL.toString())) {\n             // get all instructors of a course without information hiding\n-            data = new InstructorsData(instructorsOfCourse);\n+            // adds googleId if caller is course co-owner or admin\n+            if (userInfo.isAdmin || logic.getInstructorForGoogleId(courseId, userInfo.getId()).getRole().equals(\n+                    Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODI0Nw=="}, "originalCommit": {"oid": "11c01a963e339de47bb195bfceedef71681f4f00"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzI5MQ==", "bodyText": "I was hoping against that because the getMinAuthLevel is already defined as LOGGED_IN. There appears to be another issue as well with UpdateInstructorAction. I'm working with @jtankw3 to help resolve it", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453423291", "createdAt": "2020-07-13T04:04:23Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/ui/webapi/action/GetInstructorsAction.java", "diffHunk": "@@ -76,7 +77,18 @@ public ActionResult execute() {\n             });\n         } else if (intentStr.equals(Intent.FULL_DETAIL.toString())) {\n             // get all instructors of a course without information hiding\n-            data = new InstructorsData(instructorsOfCourse);\n+            // adds googleId if caller is course co-owner or admin\n+            if (userInfo.isAdmin || logic.getInstructorForGoogleId(courseId, userInfo.getId()).getRole().equals(\n+                    Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODI0Nw=="}, "originalCommit": {"oid": "11c01a963e339de47bb195bfceedef71681f4f00"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzgwMA==", "bodyText": "By design, the execute() method should not care about access control (this is the complete seperation of access control we want to achieve in V7) so we are not breaking any promise.", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453423800", "createdAt": "2020-07-13T04:06:28Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetInstructorsAction.java", "diffHunk": "@@ -76,7 +77,18 @@ public ActionResult execute() {\n             });\n         } else if (intentStr.equals(Intent.FULL_DETAIL.toString())) {\n             // get all instructors of a course without information hiding\n-            data = new InstructorsData(instructorsOfCourse);\n+            // adds googleId if caller is course co-owner or admin\n+            if (userInfo.isAdmin || logic.getInstructorForGoogleId(courseId, userInfo.getId()).getRole().equals(\n+                    Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODI0Nw=="}, "originalCommit": {"oid": "11c01a963e339de47bb195bfceedef71681f4f00"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTI5MDc2OnYy", "diffSide": "LEFT", "path": "src/main/java/teammates/ui/webapi/action/GetInstructorAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzozODo0OFrOGwo9Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzozODo0OFrOGwo9Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1NTgzNQ==", "bodyText": "The previous implementation is DRY, this one is not. Should only add some line of code to populate Google ID when necessary, e.g.\nif (instructorAttributes == null) {\n    return new JsonResult(\"Instructor could not be found for this course\", HttpStatus.SC_NOT_FOUND);\n}\n\nInstructorData instructorData = new InstructorData(instructorAttributes);\nif (intent == Intent.FULL_DETAIL) {\n    instructorData.setGoogleId(instructorAttributes.googleId);\n}\n\nreturn new JsonResult(instructorData);", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453655835", "createdAt": "2020-07-13T13:38:48Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/GetInstructorAction.java", "diffHunk": "@@ -51,24 +51,32 @@ public ActionResult execute() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n \n         InstructorAttributes instructorAttributes;\n+        InstructorData instructorData;\n         String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n \n         switch (intent) {\n         case INSTRUCTOR_SUBMISSION:\n             instructorAttributes = getInstructorOfCourseFromRequest(courseId);\n+            if (instructorAttributes == null) {\n+                return new JsonResult(\"Instructor could not be found for this course\",\n+                        HttpStatus.SC_NOT_FOUND);\n+            }\n+            instructorData = new InstructorData(instructorAttributes);\n             break;\n         case FULL_DETAIL:\n             instructorAttributes = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (instructorAttributes == null) {\n+                return new JsonResult(\"Instructor could not be found for this course\",\n+                        HttpStatus.SC_NOT_FOUND);\n+            }\n+            instructorData = new InstructorData(instructorAttributes);\n+            instructorData.setGoogleId(instructorAttributes.googleId);\n             break;\n         default:\n             throw new InvalidHttpParameterException(\"Unknown intent \" + intent);\n         }\n \n-        if (instructorAttributes == null) {\n-            return new JsonResult(\"Instructor could not be found for this course\", HttpStatus.SC_NOT_FOUND);\n-        }\n-\n-        return new JsonResult(new InstructorData(instructorAttributes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e98290d4447d22918c757ec5a92bef786eca26"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTMwMTM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/UpdateInstructorAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0MTowOFrOGwpDiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0MTowOFrOGwpDiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1NzQ4MA==", "bodyText": "This might actually count as Google ID leaking, but I guess someone who has the privilege of updating instructor has no harm of knowing the Google ID.", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453657480", "createdAt": "2020-07-13T13:41:08Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/UpdateInstructorAction.java", "diffHunk": "@@ -69,7 +69,9 @@ public ActionResult execute() {\n                                 .withRole(instructorToEdit.role)\n                                 .build());\n             }\n-            return new JsonResult(new InstructorData(updatedInstructor));\n+            InstructorData newInstructorData = new InstructorData(updatedInstructor);\n+            newInstructorData.setGoogleId(updatedInstructor.getGoogleId());\n+            return new JsonResult(newInstructorData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e98290d4447d22918c757ec5a92bef786eca26"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTMwMjY4OnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/test/cases/webapi/SearchInstructorsActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0MToyNlrOGwpESg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0MToyNlrOGwpESg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1NzY3NA==", "bodyText": "All the changes in this file are unrelated", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453657674", "createdAt": "2020-07-13T13:41:26Z", "author": {"login": "wkurniawan07"}, "path": "src/test/java/teammates/test/cases/webapi/SearchInstructorsActionTest.java", "diffHunk": "@@ -52,9 +52,7 @@ protected void testExecute_searchCourseId_shouldSucceed() {\n         JsonResult result = getJsonResult(action);\n         InstructorsData response = (InstructorsData) result.getOutput();\n         assertTrue(response.getInstructors().stream()\n-                .filter(i -> i.getName().equals(acc.getName()))\n-                .findAny()\n-                .isPresent());\n+                .anyMatch(i -> i.getName().equals(acc.getName())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e98290d4447d22918c757ec5a92bef786eca26"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTMxMDAwOnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/util/BackDoor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0Mjo1OVrOGwpIgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0Mjo1OVrOGwpIgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1ODc1Mg==", "bodyText": "Do we still need this USER_ID parameter, now that you are guaranteed to be admin if using the backdoor method?", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453658752", "createdAt": "2020-07-13T13:42:59Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/util/BackDoor.java", "diffHunk": "@@ -333,9 +333,10 @@ public static CourseAttributes getArchivedCourse(String instructorId, String cou\n     /**\n      * Gets instructor data from the datastore.\n      */\n-    public static InstructorData getInstructorData(String courseId, String email) {\n+    public static InstructorData getInstructorData(String courseId, String instructorId, String email) {\n         Map<String, String[]> params = new HashMap<>();\n         params.put(Const.ParamsNames.COURSE_ID, new String[] { courseId });\n+        params.put(Const.ParamsNames.USER_ID, new String[] { instructorId });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e98290d4447d22918c757ec5a92bef786eca26"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTMxMjQ0OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/Action.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0MzozMFrOGwpJ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0MzozMFrOGwpJ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1OTExNQ==", "bodyText": "We might need to be able to customize this, but it is for another time.", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453659115", "createdAt": "2020-07-13T13:43:30Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/Action.java", "diffHunk": "@@ -98,6 +98,9 @@ private void initAuthInfo() {\n         if (Config.BACKDOOR_KEY.equals(req.getHeader(\"Backdoor-Key\"))) {\n             authType = AuthType.ALL_ACCESS;\n             userInfo = new UserInfo(getRequestParamValue(Const.ParamsNames.USER_ID));\n+            userInfo.isAdmin = true;\n+            userInfo.isStudent = true;\n+            userInfo.isInstructor = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e98290d4447d22918c757ec5a92bef786eca26"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTMxNzU2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-edit-page/instructor-course-edit-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0NDozN1rOGwpNHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0NDozN1rOGwpNHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1OTkzMw==", "bodyText": "Check the front-end also. If the googleId is not available, the whole row should not be shown (instead of showing empty input box).", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453659933", "createdAt": "2020-07-13T13:44:37Z", "author": {"login": "wkurniawan07"}, "path": "src/web/app/pages-instructor/instructor-course-edit-page/instructor-course-edit-page.component.ts", "diffHunk": "@@ -285,7 +285,7 @@ export class InstructorCourseEditPageComponent implements OnInit {\n      * typed as such to accomodate for a use case in SearchService.\n      */\n     return {\n-      googleId: i.googleId,\n+      googleId: i.googleId ? i.googleId : '',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e98290d4447d22918c757ec5a92bef786eca26"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTMxOTIyOnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/test/cases/webapi/GetInstructorActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0NDo1OFrOGwpOJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0NDo1OFrOGwpOJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY2MDE5OA==", "bodyText": "Registration key should be asserted as null also", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453660198", "createdAt": "2020-07-13T13:44:58Z", "author": {"login": "wkurniawan07"}, "path": "src/test/java/teammates/test/cases/webapi/GetInstructorActionTest.java", "diffHunk": "@@ -59,6 +59,7 @@ protected void testExecute() throws Exception {\n         assertEquals(HttpStatus.SC_OK, actionOutput.getStatusCode());\n         InstructorData response = (InstructorData) actionOutput.getOutput();\n         assertEquals(instructor1OfCourse1.name, response.getName());\n+        assertNull(response.getGoogleId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e98290d4447d22918c757ec5a92bef786eca26"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTMyMjUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/SearchInstructorsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0NTo0MVrOGwpQJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzo0NTo0MVrOGwpQJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY2MDcxMA==", "bodyText": "Only admins can search instructors, and we have no reason to hide anything from admin. This line can be removed.", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r453660710", "createdAt": "2020-07-13T13:45:41Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/SearchInstructorsAction.java", "diffHunk": "@@ -49,7 +49,8 @@ public ActionResult execute() {\n             InstructorData instructorData = new InstructorData(instructor);\n             instructorData.addAdditionalInformationForAdminSearch(\n                     StringHelper.encrypt(instructor.getKey()),\n-                    getInstituteFromGoogleId(instructor.getGoogleId()));\n+                    getInstituteFromGoogleId(instructor.getGoogleId()),\n+                    instructor.getGoogleId());\n             instructorData.hideInformationForSearch();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e98290d4447d22918c757ec5a92bef786eca26"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjc0MTY2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-edit-page/instructor-edit-panel/instructor-edit-panel.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNTozNDo0M1rOGxu8Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNTozNDo0M1rOGxu8Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgwMjQ5NQ==", "bodyText": "teammates/src/web/app/pages-instructor/instructor-course-edit-page/instructor-edit-panel/instructor-edit-panel.component.html\n    \n    \n        Lines 40 to 50\n      in\n      1df7a07\n    \n    \n    \n    \n\n        \n          \n           <div class=\"form-row form-group\" *ngIf=\"editMode == EditMode.EDIT\"> \n        \n\n        \n          \n             <label class=\"col-sm-3 control-label\"> \n        \n\n        \n          \n               Google ID: \n        \n\n        \n          \n             </label> \n        \n\n        \n          \n             <div class=\"col-sm-9\" *ngIf=\"instructor.joinState == JoinState.JOINED\"> \n        \n\n        \n          \n               <input id=\"google-id-instructor-{{ instructorIndex + 1 }}\" class=\"form-control\" maxlength=\"254\" tabindex=\"3\" [ngModel]=\"instructor.googleId\" disabled> \n        \n\n        \n          \n             </div> \n        \n\n        \n          \n             <span class=\"text-warning\" *ngIf=\"instructor.joinState == JoinState.NOT_JOINED\"> \n        \n\n        \n          \n               Not available. Instructor is yet to join this course. \n        \n\n        \n          \n             </span> \n        \n\n        \n          \n           </div> \n        \n    \n  \n\n\nNeed to modify the front-end slightly. This row should be visible only if the user has canmodifyinstructor permission.", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r454802495", "createdAt": "2020-07-15T05:34:43Z", "author": {"login": "wkurniawan07"}, "path": "src/web/app/pages-instructor/instructor-course-edit-page/instructor-edit-panel/instructor-edit-panel.component.ts", "diffHunk": "@@ -8,7 +8,7 @@ import {\n  * Model for edit instructor panel.\n  */\n export interface InstructorEditPanel {\n-  googleId: string;\n+  googleId?: string;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d37b62c4f67d6a9f2b6f2307ad8691a90961861"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjc0NDUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetInstructorsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNTozNjoxNVrOGxu99w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNTozNjoxNVrOGxu99w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgwMjkzNQ==", "bodyText": "I have checked the access control logic again. It is not necessarily only co-owner can see the Google ID, but rather anyone who has canmodifyinstructor permission.", "url": "https://github.com/TEAMMATES/teammates/pull/10295#discussion_r454802935", "createdAt": "2020-07-15T05:36:15Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/GetInstructorsAction.java", "diffHunk": "@@ -76,7 +77,18 @@ public ActionResult execute() {\n             });\n         } else if (intentStr.equals(Intent.FULL_DETAIL.toString())) {\n             // get all instructors of a course without information hiding\n-            data = new InstructorsData(instructorsOfCourse);\n+            // adds googleId if caller is course co-owner or admin\n+            if (userInfo.isAdmin || logic.getInstructorForGoogleId(courseId, userInfo.getId()).getRole().equals(\n+                    Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d37b62c4f67d6a9f2b6f2307ad8691a90961861"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3612, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}