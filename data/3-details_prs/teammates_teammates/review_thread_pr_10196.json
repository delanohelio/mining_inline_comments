{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDg2OTA1", "number": 10196, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1Mzo1NlrOEGEWZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1MDozOVrOEG77jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzk4MTgzOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1Mzo1NlrOGko8ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1Mzo1NlrOGko8ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3Mjc0MA==", "bodyText": "I think you somehow want to write a common method for stats calculation because the stats calculation code is duplicated in loadStudents.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441072740", "createdAt": "2020-06-16T18:53:56Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "diffHunk": "@@ -327,11 +328,19 @@ export class InstructorCourseDetailsPageComponent implements OnInit {\n     this.courseService.removeStudentFromCourse(this.courseDetails.course.courseId, studentEmail).subscribe(() => {\n       this.statusMessageService\n           .showSuccessMessage(`Student is successfully deleted from course \"${this.courseDetails.course.courseId}\"`);\n+      const teams: Set<string> = new Set();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b047b11a4203c3dcc9e3c4d42d9db3af5cdbf7c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzk4Nzg0OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1NTo1MFrOGkpAQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1NTo1MFrOGkpAQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MzcyOQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441073729", "createdAt": "2020-06-16T18:55:50Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "diffHunk": "@@ -122,11 +122,16 @@ export class InstructorCourseEnrollPageComponent implements OnInit {\n     }, (resp: ErrorMessageOutput) => {\n       this.statusMessage.pop(); // removes any existing error status message\n       this.statusMessageService.showErrorMessage(resp.error.message);\n+    }, () => {\n+      this.studentService.getStudentsFromCourse({ courseId: this.courseid }).subscribe((resp: Students) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b047b11a4203c3dcc9e3c4d42d9db3af5cdbf7c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzk5MDk2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1Njo0N1rOGkpCTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1Njo0N1rOGkpCTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3NDI1NA==", "bodyText": "Same here. Duplicated code in loadStudents()", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441074254", "createdAt": "2020-06-16T18:56:47Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "diffHunk": "@@ -158,11 +158,19 @@ export class InstructorStudentListPageComponent implements OnInit {\n     this.courseService.removeStudentFromCourse(courseTab.course.courseId, studentEmail).subscribe(() => {\n       this.statusMessageService\n           .showSuccessMessage(`Student is successfully deleted from course \"${courseTab.course.courseId}\"`);\n+      const teams: Set<string> = new Set();\n       courseTab.studentListSectionDataList.forEach(\n           (section: StudentListSectionData) => {\n             section.students = section.students.filter(\n                 (student: StudentListStudentData) => student.email !== studentEmail);\n+            section.students.forEach((student: StudentListStudentData) => teams.add(student.team));\n           });\n+\n+      courseTab.studentListSectionDataList =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b047b11a4203c3dcc9e3c4d42d9db3af5cdbf7c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODAyMTA2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/student-list/student-list.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTowNTo1NVrOGkpV9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTowNTo1NVrOGkpV9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3OTI4NA==", "bodyText": "Personally, I don't like to touch the low-level change detection in Angular as this is prone to errors. Even this is done before, it is still necessary to have one StudentListSectionData outside and one FlatStudentListData inside?\nIn other word, can we just construct FlatStudentListData (actually we should call it as StudentListRowModel) outside?", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441079284", "createdAt": "2020-06-16T19:05:55Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/student-list/student-list.component.ts", "diffHunk": "@@ -71,19 +79,46 @@ export class StudentListComponent implements OnInit, DoCheck {\n               private tableComparatorService: TableComparatorService,\n               private ngbModal: NgbModal,\n               private differs: IterableDiffers) {\n-    this._differ = this.differs.find(this.sections).create();\n+    this.sectionDataDiffer = this.differs.find(this.sections).create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b047b11a4203c3dcc9e3c4d42d9db3af5cdbf7c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjM4NTM4OnYy", "diffSide": "RIGHT", "path": "src/web/services/statistics-calculator.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToyOTo1MVrOGlUVtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTo0OToyNFrOGlU9yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzczMw==", "bodyText": "I think you can put the method into StudentsService or CourseService.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441783733", "createdAt": "2020-06-17T19:29:51Z", "author": {"login": "xpdavid"}, "path": "src/web/services/statistics-calculator.service.ts", "diffHunk": "@@ -0,0 +1,39 @@\n+import { Injectable } from '@angular/core';\n+import { StudentListRowModel } from '../app/pages-instructor/student-list/student-list.component';\n+\n+/**\n+ * The statistics of a course\n+ */\n+export interface CourseStatistics {\n+  numOfSections: number;\n+  numOfTeams: number;\n+  numOfStudents: number;\n+}\n+\n+/**\n+ * Handles the calculation of statistics\n+ */\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class StatisticsCalculatorService {\n+\n+  constructor() { }\n+\n+  /**\n+   * Calculates the statistics for a course from a list of students in the course\n+   */\n+  calculateCourseStatistics(studentList: StudentListRowModel[]): CourseStatistics {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5Mzk5Mw==", "bodyText": "In addition, let's not couple the model data and the business logic (services) together. Can we take Student[] as arguments?", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441793993", "createdAt": "2020-06-17T19:49:24Z", "author": {"login": "xpdavid"}, "path": "src/web/services/statistics-calculator.service.ts", "diffHunk": "@@ -0,0 +1,39 @@\n+import { Injectable } from '@angular/core';\n+import { StudentListRowModel } from '../app/pages-instructor/student-list/student-list.component';\n+\n+/**\n+ * The statistics of a course\n+ */\n+export interface CourseStatistics {\n+  numOfSections: number;\n+  numOfTeams: number;\n+  numOfStudents: number;\n+}\n+\n+/**\n+ * Handles the calculation of statistics\n+ */\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class StatisticsCalculatorService {\n+\n+  constructor() { }\n+\n+  /**\n+   * Calculates the statistics for a course from a list of students in the course\n+   */\n+  calculateCourseStatistics(studentList: StudentListRowModel[]): CourseStatistics {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzczMw=="}, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjM5MDU1OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/student-list/student-list.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozMTozMFrOGlUZFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozMTozMFrOGlUZFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NDU5OA==", "bodyText": "Let's take this chance and put the component into src/web/app/components", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441784598", "createdAt": "2020-06-17T19:31:30Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/student-list/student-list.component.ts", "diffHunk": "@@ -39,21 +38,16 @@ interface FlatStudentListData {\n   templateUrl: './student-list.component.html',\n   styleUrls: ['./student-list.component.scss'],\n })\n-export class StudentListComponent implements OnInit, DoCheck {\n+export class StudentListComponent implements OnInit {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjM5ODMzOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozMzo0NlrOGlUd9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozMzo0NlrOGlUd9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NTg0Nw==", "bodyText": "The privilege is loaded per section so you don't want to apply the privilege to all students (i.e., you need to apply the privilege to student in the sectionName).", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441785847", "createdAt": "2020-06-17T19:33:46Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "diffHunk": "@@ -101,51 +97,42 @@ export class InstructorStudentListPageComponent implements OnInit {\n             return acc;\n           }, {});\n \n-          const teams: StudentIndexedData = students.students.reduce((acc: StudentIndexedData, x: Student) => {\n-            const term: string = x.teamName;\n-            (acc[term] = acc[term] || []).push(x);\n-            return acc;\n-          }, {});\n-\n-          courseTab.stats = {\n-            numOfStudents: students.students.length,\n-            numOfSections: Object.keys(sections).length,\n-            numOfTeams: Object.keys(teams).length,\n-          };\n-\n           Object.keys(sections).forEach((key: string) => {\n             const studentsInSection: Student[] = sections[key];\n \n-            const data: StudentListStudentData[] = [];\n+            const studentList: StudentListRowModel[] = [];\n             studentsInSection.forEach((student: Student) => {\n-              const studentData: StudentListStudentData = {\n-                name : student.name,\n-                status : student.joinState,\n-                email : student.email,\n-                team : student.teamName,\n+              const studentData: StudentListRowModel = {\n+                name: student.name,\n+                status: student.joinState,\n+                email: student.email,\n+                team: student.teamName,\n+                sectionName: key,\n+                isAllowedToModifyStudent: false,\n+                isAllowedToViewStudentInSection: false,\n               };\n-              data.push(studentData);\n+              studentList.push(studentData);\n             });\n \n-            this.loadPrivilege(courseTab, key, data);\n+            this.loadPrivilege(courseTab, key, studentList);\n           });\n         }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorMessage(resp.error.message); });\n   }\n \n   /**\n    * Loads privilege of an instructor for a specified course and section.\n    */\n-  loadPrivilege(courseTab: CourseTab, sectionName: string, students: StudentListStudentData[]): void {\n+  loadPrivilege(courseTab: CourseTab, sectionName: string, students: StudentListRowModel[]): void {\n     this.instructorService.loadInstructorPrivilege({ sectionName, courseId: courseTab.course.courseId })\n         .subscribe((instructorPrivilege: InstructorPrivilege) => {\n-          const sectionData: StudentListSectionData = {\n-            sectionName,\n-            students,\n-            isAllowedToViewStudentInSection : instructorPrivilege.canViewStudentInSections,\n-            isAllowedToModifyStudent : instructorPrivilege.canModifyStudent,\n-          };\n-\n-          courseTab.studentListSectionDataList.push(sectionData);\n+          students.forEach((student: StudentListRowModel) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjQxMjg1OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozODoxMVrOGlUm8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozODoxMVrOGlUm8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4ODE0Nw==", "bodyText": "Many redundant calculations are going here (though it will provide correct result eventually). I think the correct way to do it is to construct StudentListRowModel when all students are loaded. After that, we can begin to load privilege for each section.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441788147", "createdAt": "2020-06-17T19:38:11Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "diffHunk": "@@ -101,51 +97,42 @@ export class InstructorStudentListPageComponent implements OnInit {\n             return acc;\n           }, {});\n \n-          const teams: StudentIndexedData = students.students.reduce((acc: StudentIndexedData, x: Student) => {\n-            const term: string = x.teamName;\n-            (acc[term] = acc[term] || []).push(x);\n-            return acc;\n-          }, {});\n-\n-          courseTab.stats = {\n-            numOfStudents: students.students.length,\n-            numOfSections: Object.keys(sections).length,\n-            numOfTeams: Object.keys(teams).length,\n-          };\n-\n           Object.keys(sections).forEach((key: string) => {\n             const studentsInSection: Student[] = sections[key];\n \n-            const data: StudentListStudentData[] = [];\n+            const studentList: StudentListRowModel[] = [];\n             studentsInSection.forEach((student: Student) => {\n-              const studentData: StudentListStudentData = {\n-                name : student.name,\n-                status : student.joinState,\n-                email : student.email,\n-                team : student.teamName,\n+              const studentData: StudentListRowModel = {\n+                name: student.name,\n+                status: student.joinState,\n+                email: student.email,\n+                team: student.teamName,\n+                sectionName: key,\n+                isAllowedToModifyStudent: false,\n+                isAllowedToViewStudentInSection: false,\n               };\n-              data.push(studentData);\n+              studentList.push(studentData);\n             });\n \n-            this.loadPrivilege(courseTab, key, data);\n+            this.loadPrivilege(courseTab, key, studentList);\n           });\n         }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorMessage(resp.error.message); });\n   }\n \n   /**\n    * Loads privilege of an instructor for a specified course and section.\n    */\n-  loadPrivilege(courseTab: CourseTab, sectionName: string, students: StudentListStudentData[]): void {\n+  loadPrivilege(courseTab: CourseTab, sectionName: string, students: StudentListRowModel[]): void {\n     this.instructorService.loadInstructorPrivilege({ sectionName, courseId: courseTab.course.courseId })\n         .subscribe((instructorPrivilege: InstructorPrivilege) => {\n-          const sectionData: StudentListSectionData = {\n-            sectionName,\n-            students,\n-            isAllowedToViewStudentInSection : instructorPrivilege.canViewStudentInSections,\n-            isAllowedToModifyStudent : instructorPrivilege.canModifyStudent,\n-          };\n-\n-          courseTab.studentListSectionDataList.push(sectionData);\n+          students.forEach((student: StudentListRowModel) => {\n+            student.isAllowedToViewStudentInSection = instructorPrivilege.canViewStudentInSections;\n+            student.isAllowedToModifyStudent = instructorPrivilege.canModifyStudent;\n+          });\n+\n+          courseTab.studentList.push(...students);\n+          courseTab.stats =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjQzMTg2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-search-page/instructor-search-page.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTo0NDoyNFrOGlUzJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjo1MTozN1rOGld0Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5MTI3MQ==", "bodyText": "It looks like we should also change the search service also. Let's leave it to another PR. Please raise an issue afterward or continue do it afterward :P.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441791271", "createdAt": "2020-06-17T19:44:24Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-search-page/instructor-search-page.component.ts", "diffHunk": "@@ -70,18 +64,47 @@ export class InstructorSearchPageComponent implements OnInit {\n         .pipe(finalize(() => this.loadingBarService.hideLoadingBar()))\n         .subscribe((resp: [InstructorSearchResult, InstructorSearchResult]) => {\n           this.commentTables = resp[0].searchCommentsTables;\n-          this.studentTables = resp[1].searchStudentsTables;\n+          const searchStudentsTable: SearchStudentsTable[] = resp[1].searchStudentsTables;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzODk3MA==", "bodyText": "Okay! Will raise and issue and work on it after this PR", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441938970", "createdAt": "2020-06-18T02:51:37Z", "author": {"login": "t-cheepeng"}, "path": "src/web/app/pages-instructor/instructor-search-page/instructor-search-page.component.ts", "diffHunk": "@@ -70,18 +64,47 @@ export class InstructorSearchPageComponent implements OnInit {\n         .pipe(finalize(() => this.loadingBarService.hideLoadingBar()))\n         .subscribe((resp: [InstructorSearchResult, InstructorSearchResult]) => {\n           this.commentTables = resp[0].searchCommentsTables;\n-          this.studentTables = resp[1].searchStudentsTables;\n+          const searchStudentsTable: SearchStudentsTable[] = resp[1].searchStudentsTables;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5MTI3MQ=="}, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjQzNTM2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-search-page/instructor-search-page.component.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTo0NTozMVrOGlU1UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTo0NTozMVrOGlU1UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5MTgyNA==", "bodyText": "The section name should be 'Tutorial Group 1' for all?", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441791824", "createdAt": "2020-06-17T19:45:31Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-search-page/instructor-search-page.component.spec.ts", "diffHunk": "@@ -44,44 +44,48 @@ describe('InstructorSearchPageComponent', () => {\n   });\n \n   it('should snap with a student table', () => {\n-    component.studentTables = [\n+    component.studentsListRowTables = [\n       {\n-        courseId: 'test.tes-demo',\n-        sections: [\n+        courseId: 'test-exa.demo',\n+        students: [\n           {\n-            sectionName: 'Tutorial Group 1',\n+            name: 'tester',\n+            team: '1',\n+            email: 'tester@tester.com',\n+            status: JoinState.JOINED,\n+            sectionName: '1',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjQzODgwOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTo0NjozOFrOGlU3jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTo0NjozOFrOGlU3jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5MjM5Ng==", "bodyText": "Same here. The privilege is not loaded correctly for each section.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441792396", "createdAt": "2020-06-17T19:46:38Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "diffHunk": "@@ -157,19 +148,18 @@ export class InstructorCourseDetailsPageComponent implements OnInit {\n   /**\n    * Loads privilege of an instructor for a specified course and section.\n    */\n-  private loadPrivilege(courseid: string, sectionName: string, students: StudentListStudentData[]): void {\n+  private loadPrivilege(courseid: string, sectionName: string, students: StudentListRowModel[]): void {\n     this.instructorService.loadInstructorPrivilege({\n       sectionName,\n       courseId: courseid,\n     }).subscribe((instructorPrivilege: InstructorPrivilege) => {\n-      const sectionData: StudentListSectionData = {\n-        sectionName,\n-        students,\n-        isAllowedToViewStudentInSection : instructorPrivilege.canViewStudentInSections,\n-        isAllowedToModifyStudent : instructorPrivilege.canModifyStudent,\n-      };\n-\n-      this.sections.push(sectionData);\n+      students.forEach((student: StudentListRowModel) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjQzOTgwOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTo0Njo1OFrOGlU4JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTo0Njo1OFrOGlU4JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5MjU0OA==", "bodyText": "Same here. The stats calculation should be not here.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441792548", "createdAt": "2020-06-17T19:46:58Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "diffHunk": "@@ -157,19 +148,18 @@ export class InstructorCourseDetailsPageComponent implements OnInit {\n   /**\n    * Loads privilege of an instructor for a specified course and section.\n    */\n-  private loadPrivilege(courseid: string, sectionName: string, students: StudentListStudentData[]): void {\n+  private loadPrivilege(courseid: string, sectionName: string, students: StudentListRowModel[]): void {\n     this.instructorService.loadInstructorPrivilege({\n       sectionName,\n       courseId: courseid,\n     }).subscribe((instructorPrivilege: InstructorPrivilege) => {\n-      const sectionData: StudentListSectionData = {\n-        sectionName,\n-        students,\n-        isAllowedToViewStudentInSection : instructorPrivilege.canViewStudentInSections,\n-        isAllowedToModifyStudent : instructorPrivilege.canModifyStudent,\n-      };\n-\n-      this.sections.push(sectionData);\n+      students.forEach((student: StudentListRowModel) => {\n+        student.isAllowedToViewStudentInSection = instructorPrivilege.canViewStudentInSections;\n+        student.isAllowedToModifyStudent = instructorPrivilege.canModifyStudent;\n+      });\n+\n+      this.students.push(...students);\n+      this.courseDetails.stats = this.statisticsCalculatorService.calculateCourseStatistics(this.students);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a04dbbb995b3c8166d7c326c707a6c314b04c"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzYzMDk3OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNTo0ODo1NFrOGlgcRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzowNzoxMFrOGliRew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk4MjAyMw==", "bodyText": "Why we discard the old method? loadStudents again will cause another unnecessary API request.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441982023", "createdAt": "2020-06-18T05:48:54Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "diffHunk": "@@ -158,11 +148,7 @@ export class InstructorStudentListPageComponent implements OnInit {\n     this.courseService.removeStudentFromCourse(courseTab.course.courseId, studentEmail).subscribe(() => {\n       this.statusMessageService\n           .showSuccessMessage(`Student is successfully deleted from course \"${courseTab.course.courseId}\"`);\n-      courseTab.studentListSectionDataList.forEach(\n-          (section: StudentListSectionData) => {\n-            section.students = section.students.filter(\n-                (student: StudentListStudentData) => student.email !== studentEmail);\n-          });\n+      this.loadStudents(courseTab);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441d94e59be7ee1be9eb306e20c919a63b7fc337"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxMjAyNw==", "bodyText": "Now we changed calculateCourseStatistics to accept Student[]. But the components only store the model. So we store an additional Student[] variable in these components? or would constructing the Student[] from the StudentListRowModel[] each time a delete event happens be a better choice?", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r442012027", "createdAt": "2020-06-18T07:07:10Z", "author": {"login": "t-cheepeng"}, "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "diffHunk": "@@ -158,11 +148,7 @@ export class InstructorStudentListPageComponent implements OnInit {\n     this.courseService.removeStudentFromCourse(courseTab.course.courseId, studentEmail).subscribe(() => {\n       this.statusMessageService\n           .showSuccessMessage(`Student is successfully deleted from course \"${courseTab.course.courseId}\"`);\n-      courseTab.studentListSectionDataList.forEach(\n-          (section: StudentListSectionData) => {\n-            section.students = section.students.filter(\n-                (student: StudentListStudentData) => student.email !== studentEmail);\n-          });\n+      this.loadStudents(courseTab);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk4MjAyMw=="}, "originalCommit": {"oid": "441d94e59be7ee1be9eb306e20c919a63b7fc337"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzYzNzI3OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNTo1MTo1OVrOGlggHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNTo1MTo1OVrOGlggHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk4MzAwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      courseTab.stats = this.courseService.calculateCourseStatistics(studentsInCourse);\n          \n          \n            \n                      courseTab.stats = this.courseService.calculateCourseStatistics(students.students);\n          \n      \n    \n    \n  \n\nThere is no need to create another studentsInCourse.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441983004", "createdAt": "2020-06-18T05:51:59Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "diffHunk": "@@ -95,57 +89,53 @@ export class InstructorStudentListPageComponent implements OnInit {\n   loadStudents(courseTab: CourseTab): void {\n     this.studentService.getStudentsFromCourse({ courseId: courseTab.course.courseId })\n         .subscribe((students: Students) => {\n+          courseTab.studentList = [];\n           const sections: StudentIndexedData = students.students.reduce((acc: StudentIndexedData, x: Student) => {\n             const term: string = x.sectionName;\n             (acc[term] = acc[term] || []).push(x);\n             return acc;\n           }, {});\n \n-          const teams: StudentIndexedData = students.students.reduce((acc: StudentIndexedData, x: Student) => {\n-            const term: string = x.teamName;\n-            (acc[term] = acc[term] || []).push(x);\n-            return acc;\n-          }, {});\n-\n-          courseTab.stats = {\n-            numOfStudents: students.students.length,\n-            numOfSections: Object.keys(sections).length,\n-            numOfTeams: Object.keys(teams).length,\n-          };\n-\n+          const studentsInCourse: Student[] = [];\n           Object.keys(sections).forEach((key: string) => {\n             const studentsInSection: Student[] = sections[key];\n+            studentsInCourse.push(...studentsInSection);\n \n-            const data: StudentListStudentData[] = [];\n+            const studentList: StudentListRowModel[] = [];\n             studentsInSection.forEach((student: Student) => {\n-              const studentData: StudentListStudentData = {\n-                name : student.name,\n-                status : student.joinState,\n-                email : student.email,\n-                team : student.teamName,\n+              const studentData: StudentListRowModel = {\n+                name: student.name,\n+                status: student.joinState,\n+                email: student.email,\n+                team: student.teamName,\n+                sectionName: key,\n+                isAllowedToModifyStudent: false,\n+                isAllowedToViewStudentInSection: false,\n               };\n-              data.push(studentData);\n+              studentList.push(studentData);\n             });\n \n-            this.loadPrivilege(courseTab, key, data);\n+            this.loadPrivilege(courseTab, key, studentList);\n           });\n+\n+          courseTab.stats = this.courseService.calculateCourseStatistics(studentsInCourse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441d94e59be7ee1be9eb306e20c919a63b7fc337"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzY3OTg3OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjoxMjoyNVrOGlg6Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjoxMjoyNVrOGlg6Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk4OTY2Mg==", "bodyText": "There is a cleaner way of writing this by using map.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441989662", "createdAt": "2020-06-18T06:12:25Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts", "diffHunk": "@@ -95,57 +89,53 @@ export class InstructorStudentListPageComponent implements OnInit {\n   loadStudents(courseTab: CourseTab): void {\n     this.studentService.getStudentsFromCourse({ courseId: courseTab.course.courseId })\n         .subscribe((students: Students) => {\n+          courseTab.studentList = [];\n           const sections: StudentIndexedData = students.students.reduce((acc: StudentIndexedData, x: Student) => {\n             const term: string = x.sectionName;\n             (acc[term] = acc[term] || []).push(x);\n             return acc;\n           }, {});\n \n-          const teams: StudentIndexedData = students.students.reduce((acc: StudentIndexedData, x: Student) => {\n-            const term: string = x.teamName;\n-            (acc[term] = acc[term] || []).push(x);\n-            return acc;\n-          }, {});\n-\n-          courseTab.stats = {\n-            numOfStudents: students.students.length,\n-            numOfSections: Object.keys(sections).length,\n-            numOfTeams: Object.keys(teams).length,\n-          };\n-\n+          const studentsInCourse: Student[] = [];\n           Object.keys(sections).forEach((key: string) => {\n             const studentsInSection: Student[] = sections[key];\n+            studentsInCourse.push(...studentsInSection);\n \n-            const data: StudentListStudentData[] = [];\n+            const studentList: StudentListRowModel[] = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441d94e59be7ee1be9eb306e20c919a63b7fc337"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzY4NDgzOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjoxNDo1M1rOGlg9Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjoxNDo1M1rOGlg9Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5MDQ5MQ==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441990491", "createdAt": "2020-06-18T06:14:53Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "diffHunk": "@@ -327,11 +319,7 @@ export class InstructorCourseDetailsPageComponent implements OnInit {\n     this.courseService.removeStudentFromCourse(this.courseDetails.course.courseId, studentEmail).subscribe(() => {\n       this.statusMessageService\n           .showSuccessMessage(`Student is successfully deleted from course \"${this.courseDetails.course.courseId}\"`);\n-      this.sections.forEach(\n-        (section: StudentListSectionData) => {\n-          section.students = section.students.filter(\n-            (student: StudentListStudentData) => student.email !== studentEmail);\n-        });\n+      this.loadStudents(this.courseDetails.course.courseId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441d94e59be7ee1be9eb306e20c919a63b7fc337"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzY4NzM0OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjoxNTo1M1rOGlg-yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjoxNTo1M1rOGlg-yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5MDg1Nw==", "bodyText": "If we delete all student, we can actually just clear the list (by setting to [])", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441990857", "createdAt": "2020-06-18T06:15:53Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts", "diffHunk": "@@ -195,7 +187,7 @@ export class InstructorCourseDetailsPageComponent implements OnInit {\n   deleteAllStudentsFromCourse(courseId: string): void {\n     this.studentService.deleteAllStudentsFromCourse({ courseId })\n       .subscribe((resp: MessageOutput) => {\n-        this.loadCourseDetails(courseId);\n+        this.loadStudents(this.courseDetails.course.courseId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441d94e59be7ee1be9eb306e20c919a63b7fc337"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzY5MjIxOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-search-page/student-result-table/student-result-table.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjoxODowNFrOGlhBww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjo0NjozOFrOGlhtEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5MTYxOQ==", "bodyText": "Let's make sure that StudentListSectionData is only used in the search service.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r441991619", "createdAt": "2020-06-18T06:18:04Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-search-page/student-result-table/student-result-table.component.ts", "diffHunk": "@@ -1,5 +1,22 @@\n import { Component, Input, OnInit } from '@angular/core';\n-import { SearchStudentsTable } from '../instructor-search-page.component';\n+import { StudentListSectionData } from '../../../components/student-list/student-list-section-data';\n+import { StudentListRowModel } from '../../../components/student-list/student-list.component';\n+\n+/**\n+ * Search result for a list of sections containing students of a course\n+ */\n+export interface SearchStudentsTable {\n+  courseId: string;\n+  sections: StudentListSectionData[];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441d94e59be7ee1be9eb306e20c919a63b7fc337"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAwMjcwNw==", "bodyText": "It is used once in InstructorSearchPageComponent because the search service currently returns StudentListSectionData and it is flattened in the component. Is that okay?", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r442002707", "createdAt": "2020-06-18T06:46:38Z", "author": {"login": "t-cheepeng"}, "path": "src/web/app/pages-instructor/instructor-search-page/student-result-table/student-result-table.component.ts", "diffHunk": "@@ -1,5 +1,22 @@\n import { Component, Input, OnInit } from '@angular/core';\n-import { SearchStudentsTable } from '../instructor-search-page.component';\n+import { StudentListSectionData } from '../../../components/student-list/student-list-section-data';\n+import { StudentListRowModel } from '../../../components/student-list/student-list.component';\n+\n+/**\n+ * Search result for a list of sections containing students of a course\n+ */\n+export interface SearchStudentsTable {\n+  courseId: string;\n+  sections: StudentListSectionData[];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5MTYxOQ=="}, "originalCommit": {"oid": "441d94e59be7ee1be9eb306e20c919a63b7fc337"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzA4ODEzOnYy", "diffSide": "RIGHT", "path": "src/web/app/components/student-list/student-list.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1MDozOVrOGmCqAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1MDozOVrOGmCqAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjU5NA==", "bodyText": "For your question:\nI think you can actually define a new field: student: Student here (and delete other student related fields). Store the model in the corresponding page. When stats is calculated, use the student field to construct a list of student.", "url": "https://github.com/TEAMMATES/teammates/pull/10196#discussion_r442542594", "createdAt": "2020-06-18T22:50:39Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/student-list/student-list.component.ts", "diffHunk": "@@ -11,16 +15,11 @@ import { JoinState, MessageOutput } from '../../../types/api-output';\n import { SortBy, SortOrder } from '../../../types/sort-properties';\n import { ErrorMessageOutput } from '../../error-message-output';\n import { JoinStatePipe } from './join-state.pipe';\n-import {\n-  StudentListSectionData,\n-  StudentListStudentData,\n-} from './student-list-section-data';\n \n /**\n- * Flattened data which contains details about a student and their section.\n- * The data is flattened to allow sorting of the table.\n+ * Model of row of student data containing details about a student and their section.\n  */\n-interface FlatStudentListData {\n+export interface StudentListRowModel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441d94e59be7ee1be9eb306e20c919a63b7fc337"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3815, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}