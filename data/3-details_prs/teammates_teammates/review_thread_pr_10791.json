{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NDA5Mjgz", "number": 10791, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjozMTo0NlrOFErmDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjozMTo0NlrOFErmDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDUyODc2OnYy", "diffSide": "RIGHT", "path": "src/web/app/public-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjozMTo0NlrOIE2hGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjozMTo0NlrOIE2hGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk1ODQyNA==", "bodyText": "I believe we can do away with the ternary operations here.\nconst courseId: string = queryParams.courseid;\nconst regKey: string = queryParams.key;\nconst studentEmail: string = queryParams.studentemail;\nif (courseId && regKey && studentEmail) {\n  this.studentService.getStudent(courseId, studentEmail, regKey).subscribe((student: Student) => {\n      this.institute = student.institute || \"\";\n  });\n}", "url": "https://github.com/TEAMMATES/teammates/pull/10791#discussion_r541958424", "createdAt": "2020-12-13T16:31:46Z", "author": {"login": "rrtheonlyone"}, "path": "src/web/app/public-page.component.ts", "diffHunk": "@@ -2,24 +2,40 @@ import { Component } from '@angular/core';\n import { ActivatedRoute } from '@angular/router';\n import { environment } from '../environments/environment';\n import { AuthService } from '../services/auth.service';\n+import { StudentService } from '../services/student.service';\n+import { Student } from '../types/api-output';\n \n /**\n  * Component for publicly available pages.\n  */\n @Component({\n   selector: 'tm-public-page',\n-  template: '<tm-page [isValidUser]=\"true\" [hideAuthInfo]=\"true\"></tm-page>',\n+  template: '<tm-page [isValidUser]=\"true\" [hideAuthInfo]=\"true\" [institute]=\"institute\"></tm-page>',\n })\n export class PublicPageComponent {\n+  institute: string = '';\n \n   constructor(private route: ActivatedRoute,\n-              private authService: AuthService) {\n+              private authService: AuthService,\n+              private studentService: StudentService) {\n     if (environment.maintenance) {\n       return;\n     }\n     this.route.queryParams.subscribe((queryParams: any) => {\n       this.authService.getAuthUser(queryParams.user).subscribe(() => {\n-        // No need to do anything; this is necessary to get CSRF token\n+        // No need to do anything with result; this is necessary to get CSRF token\n+\n+        // Loads institute for student session submission and result\n+        const courseId: string = queryParams.courseid ? queryParams.courseid : '';\n+        const regKey: string = queryParams.key ? queryParams.key : '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2477112e8a6b8e99aca26fd3b445f7b54a6d6f60"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3405, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}