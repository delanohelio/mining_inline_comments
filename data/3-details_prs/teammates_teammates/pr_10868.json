{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NTExMDQ3", "number": 10868, "title": "[#1501] Add unit tests for FeedbackRankQuestionDetails and FeedbackTextResponseDetails classes", "bodyText": "Fixes #1501", "createdAt": "2020-12-11T05:00:11Z", "url": "https://github.com/TEAMMATES/teammates/pull/10868", "merged": true, "mergeCommit": {"oid": "993ade3ec2b4d143e09ff844f498e07497db59a7"}, "closed": true, "closedAt": "2020-12-22T04:36:10Z", "author": {"login": "daongochieu2810"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlAn6tAH2gAyNTM2NTExMDQ3OjAxMzJjMzI0MWFkNjIyMWMxZWJjZmYyNzg4MzczN2Q1ZTNlZDFkOTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoVkywAFqTU1NjM2MjQxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0132c3241ad6221c1ebcff27883737d5e3ed1d97", "author": {"user": {"login": "daongochieu2810", "name": "dao ngoc hieu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/0132c3241ad6221c1ebcff27883737d5e3ed1d97", "committedDate": "2020-12-11T04:56:02Z", "message": "Add unit tests for Feedback*QuestionDetails classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b", "author": {"user": {"login": "daongochieu2810", "name": "dao ngoc hieu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/385f85f81958c8f01fee86738f01e8ad2c99589b", "committedDate": "2020-12-11T13:30:00Z", "message": "Fix CI errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNDA0MjY2", "url": "https://github.com/TEAMMATES/teammates/pull/10868#pullrequestreview-551404266", "createdAt": "2020-12-14T14:13:32Z", "commit": {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDoxMzozM1rOIFSXBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDozMzo1M1rOIFTVmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxNDU5OA==", "bodyText": "This test is not really doing anything right? We already test that a valid value is set in the above test. (same for the other one below)", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542414598", "createdAt": "2020-12-14T14:13:33Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackRankQuestionDetails}.\n+ */\n+public class FeedbackRankQuestionDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateMinOptionsToBeRanked_sameValidValues_shouldReturnTrue() {\n+        int testValue = 100;\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setMinOptionsToBeRanked(testValue);\n+        assertEquals(feedbackRankQuestionDetails.minOptionsToBeRanked, testValue);\n+    }\n+\n+    @Test\n+    public void testValidateMinOptionsToBeRanked_differentValidValues_shouldReturnTrue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyMzA1Ng==", "bodyText": "add a test for setting/getting duplicates too + you could also test the the default value is Integer.MIN_VALUE", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542423056", "createdAt": "2020-12-14T14:24:55Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackRankQuestionDetails}.\n+ */\n+public class FeedbackRankQuestionDetailsTest extends BaseTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyNjEwNg==", "bodyText": "again this isnt doing much", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542426106", "createdAt": "2020-12-14T14:28:25Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateResponseAnswer_sameValues_shouldReturnTrue() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");\n+    }\n+\n+    @Test\n+    public void testValidateResponseAnswer_differentValues_shouldReturnFalse() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyNzM0OA==", "bodyText": "you can assert is null here instead of forcing an NPE", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542427348", "createdAt": "2020-12-14T14:29:29Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateResponseAnswer_sameValues_shouldReturnTrue() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");\n+    }\n+\n+    @Test\n+    public void testValidateResponseAnswer_differentValues_shouldReturnFalse() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertNotEquals(feedbackTextResponseDetails.getAnswer(), \"World Hello\");\n+    }\n+\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testValidateAttributesOfAnswer_nullValue_shouldThrowException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyODI0NQ==", "bodyText": "I think this can be removed - seems like a duplicate of earlier test", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542428245", "createdAt": "2020-12-14T14:30:38Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateResponseAnswer_sameValues_shouldReturnTrue() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");\n+    }\n+\n+    @Test\n+    public void testValidateResponseAnswer_differentValues_shouldReturnFalse() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertNotEquals(feedbackTextResponseDetails.getAnswer(), \"World Hello\");\n+    }\n+\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testValidateAttributesOfAnswer_nullValue_shouldThrowException() {\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(null);\n+        feedbackTextResponseDetails.getAnswer().length();\n+    }\n+\n+    @Test\n+    public void testValidateAttributesOfAnswer_validValue_shouldThrowException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMDYxOQ==", "bodyText": "I think we can test setAnswer and also the default constructor (that sets answer to empty string)", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542430619", "createdAt": "2020-12-14T14:33:53Z", "author": {"login": "rrtheonlyone"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c50f3cf52e1f4988cd28ffc9429c2dfb0e3c4eb", "author": {"user": {"login": "daongochieu2810", "name": "dao ngoc hieu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8c50f3cf52e1f4988cd28ffc9429c2dfb0e3c4eb", "committedDate": "2020-12-14T17:30:42Z", "message": "Fixed as suggested"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMDUxMDY1", "url": "https://github.com/TEAMMATES/teammates/pull/10868#pullrequestreview-552051065", "createdAt": "2020-12-15T02:09:00Z", "commit": {"oid": "8c50f3cf52e1f4988cd28ffc9429c2dfb0e3c4eb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMjowOTowMVrOIF1fqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMjo0MjoyNlrOIF2POg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk5MDI1MA==", "bodyText": "These checks aren't necessary, they make the code more complex (uncertainty in what you're testing) and are already covered by the above equal tests.", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542990250", "createdAt": "2020-12-15T02:09:01Z", "author": {"login": "ChooJeremy"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackRankQuestionDetails}.\n+ */\n+public class FeedbackRankQuestionDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateMinOptionsToBeRanked_sameValidValues_shouldReturnTrue() {\n+        int testValue = 100;\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setMinOptionsToBeRanked(testValue);\n+        assertEquals(feedbackRankQuestionDetails.minOptionsToBeRanked, testValue);\n+    }\n+\n+    @Test\n+    public void testValidateMaxOptionsToBeRanked_sameValidValues_shouldReturnTrue() {\n+        int testValue = 100;\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setMaxOptionsToBeRanked(testValue);\n+        assertEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, testValue);\n+    }\n+\n+    @Test\n+    public void testValidateMaxOptionsToBeRanked_differentValidValues_shouldReturnTrue() {\n+        int testValue = 100;\n+        int testDiffValue = 101;\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setMaxOptionsToBeRanked(testValue);\n+        assertNotEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, testDiffValue);\n+    }\n+\n+    @Test\n+    public void testValidateDuplicatesAllowed_validValues_shouldReturnTrue() {\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setAreDuplicatesAllowed(true);\n+        assertEquals(feedbackRankQuestionDetails.areDuplicatesAllowed, true);\n+\n+        feedbackRankQuestionDetails.setAreDuplicatesAllowed(false);\n+        assertEquals(feedbackRankQuestionDetails.areDuplicatesAllowed, false);\n+\n+        feedbackRankQuestionDetails.setAreDuplicatesAllowed(true);\n+        assertNotEquals(feedbackRankQuestionDetails.areDuplicatesAllowed, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c50f3cf52e1f4988cd28ffc9429c2dfb0e3c4eb"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk5MDYwOQ==", "bodyText": "I think your naming of the test function should change here as well?", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542990609", "createdAt": "2020-12-15T02:09:54Z", "author": {"login": "ChooJeremy"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateResponseAnswer_sameValues_shouldReturnTrue() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");\n+    }\n+\n+    @Test\n+    public void testValidateResponseAnswer_differentValues_shouldReturnFalse() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertNotEquals(feedbackTextResponseDetails.getAnswer(), \"World Hello\");\n+    }\n+\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testValidateAttributesOfAnswer_nullValue_shouldThrowException() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyNzM0OA=="}, "originalCommit": {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAwMjQyNg==", "bodyText": "To be clearer for what you're testing (the function setAnswer), you should test that the initial value isn't testValue i.e.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(feedbackTextResponseDetails.getAnswerString(),\n          \n          \n            \n                    assertNotEquals(feedbackTextResponseDetails.getAnswerString(), SanitizationHelper.sanitizeForRichText(testValue));", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r543002426", "createdAt": "2020-12-15T02:42:26Z", "author": {"login": "ChooJeremy"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateResponseAnswer_sameValues_shouldReturnTrue() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");\n+    }\n+\n+    @Test\n+    public void testValidateAttributesOfAnswer_nullValue_shouldThrowException() {\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(null);\n+        assertNull(feedbackTextResponseDetails.getAnswer());\n+    }\n+\n+    @Test\n+    public void testValidateSanitizedAnswerString_nullValues_shouldReturnTrue() {\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(null);\n+        assertEquals(feedbackTextResponseDetails.getAnswerString(),\n+                SanitizationHelper.sanitizeForRichText(feedbackTextResponseDetails.getAnswer()));\n+    }\n+\n+    @Test\n+    public void testValidateSanitizedAnswerString_validValues_shouldReturnTrue() {\n+        String testValue = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testValue);\n+        assertEquals(feedbackTextResponseDetails.getAnswerString(),\n+                SanitizationHelper.sanitizeForRichText(feedbackTextResponseDetails.getAnswer()));\n+    }\n+\n+    @Test\n+    public void testValidateSetAnswer_sameValues_shouldReturnTrue() {\n+        String testValue = \"Hello World\";\n+        String emptyString = \"\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails();\n+        assertEquals(feedbackTextResponseDetails.getAnswerString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c50f3cf52e1f4988cd28ffc9429c2dfb0e3c4eb"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5f98c68b839fa9f12cbb5c8e7e9873272b716a7", "author": {"user": {"login": "daongochieu2810", "name": "dao ngoc hieu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/b5f98c68b839fa9f12cbb5c8e7e9873272b716a7", "committedDate": "2020-12-15T13:12:07Z", "message": "Fixed as suggested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e86dee969bf7f7886ad8c99ff9688648f6e59385", "author": {"user": {"login": "daongochieu2810", "name": "dao ngoc hieu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/e86dee969bf7f7886ad8c99ff9688648f6e59385", "committedDate": "2020-12-15T13:20:31Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMjY0Njg3", "url": "https://github.com/TEAMMATES/teammates/pull/10868#pullrequestreview-553264687", "createdAt": "2020-12-16T01:36:23Z", "commit": {"oid": "e86dee969bf7f7886ad8c99ff9688648f6e59385"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTozNjoyM1rOIGnrfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTozODo0OFrOIGnu4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxMjQ3OA==", "bodyText": "This change seems unrelated?\nLet's try to avoid changes in files that don't impact your PR.", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r543812478", "createdAt": "2020-12-16T01:36:23Z", "author": {"login": "ChooJeremy"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetails.java", "diffHunk": "@@ -3,7 +3,6 @@\n import teammates.common.util.SanitizationHelper;\n \n public class FeedbackTextResponseDetails extends FeedbackResponseDetails {\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86dee969bf7f7886ad8c99ff9688648f6e59385"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxMzM0NQ==", "bodyText": "Sorry if I wasn't clear enough. We do want to test that a change has occured, just not test an Equals and a NotEquals of a boolean in the same state.\nSomething along the lines of:\n\nCreate new object\nTest that duplicates are allowed is not true\nSet duplicates allowed to true\nTest that duplicates are allowed is now true.\n\nWe can do the same for max options as well.", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r543813345", "createdAt": "2020-12-16T01:38:48Z", "author": {"login": "ChooJeremy"}, "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java", "diffHunk": "@@ -25,28 +25,10 @@ public void testValidateMaxOptionsToBeRanked_sameValidValues_shouldReturnTrue()\n     }\n \n     @Test\n-    public void testValidateMaxOptionsToBeRanked_differentValidValues_shouldReturnTrue() {\n-        int testValue = 100;\n-        int testDiffValue = 101;\n-        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n-        feedbackRankQuestionDetails.setMaxOptionsToBeRanked(testValue);\n-        assertNotEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, testDiffValue);\n-    }\n-\n-    @Test\n-    public void testValidateDuplicatesAllowed_validValues_shouldReturnTrue() {\n+    public void testValidateDuplicatesAllowed_isAllowed_shouldReturnTrue() {\n         FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n         feedbackRankQuestionDetails.setAreDuplicatesAllowed(true);\n         assertEquals(feedbackRankQuestionDetails.areDuplicatesAllowed, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86dee969bf7f7886ad8c99ff9688648f6e59385"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd7ecf54890417f31f461dee4a0ff3b4e4531f48", "author": {"user": {"login": "daongochieu2810", "name": "dao ngoc hieu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/bd7ecf54890417f31f461dee4a0ff3b4e4531f48", "committedDate": "2020-12-16T14:31:51Z", "message": "Change as requested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9392b4320ed53f805248891ff47b038feacace3b", "author": {"user": {"login": "daongochieu2810", "name": "dao ngoc hieu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9392b4320ed53f805248891ff47b038feacace3b", "committedDate": "2020-12-19T19:02:53Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTg1MTQz", "url": "https://github.com/TEAMMATES/teammates/pull/10868#pullrequestreview-555985143", "createdAt": "2020-12-20T04:17:25Z", "commit": {"oid": "9392b4320ed53f805248891ff47b038feacace3b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5b34b56ba5550d0ec717dfaa2719dd4c7c36dfc", "author": {"user": {"login": "daongochieu2810", "name": "dao ngoc hieu"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f5b34b56ba5550d0ec717dfaa2719dd4c7c36dfc", "committedDate": "2020-12-20T06:32:33Z", "message": "Fix lint errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Mjg1ODc4", "url": "https://github.com/TEAMMATES/teammates/pull/10868#pullrequestreview-556285878", "createdAt": "2020-12-21T10:40:44Z", "commit": {"oid": "f5b34b56ba5550d0ec717dfaa2719dd4c7c36dfc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MzYyNDE4", "url": "https://github.com/TEAMMATES/teammates/pull/10868#pullrequestreview-556362418", "createdAt": "2020-12-21T13:02:24Z", "commit": {"oid": "f5b34b56ba5550d0ec717dfaa2719dd4c7c36dfc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4220, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}