{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTI2NTYy", "number": 10061, "title": "[#9382] Add unit test for GetCourseSectionNamesAction", "bodyText": "Part of #9382 , #10039\nOutline of Solution\nAdded JUnit test for GetCourseSectionNamesAction, which is used to get the section name of a course.\nThe new test file is placed under src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java.", "createdAt": "2020-05-15T11:06:42Z", "url": "https://github.com/TEAMMATES/teammates/pull/10061", "merged": true, "mergeCommit": {"oid": "97f810233f9209b09b8f4ffe9fc74060448caa1f"}, "closed": true, "closedAt": "2020-05-20T00:14:29Z", "author": {"login": "Derek-Hardy"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchf9m-AH2gAyNDE4NTI2NTYyOmJjMDBiNjhmNzM1MGI0YmZmNjdjOTFlYWZkMmEwYzc4NWJiNTM4YzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci9Vi7gH2gAyNDE4NTI2NTYyOjU3NWJhNjY4ZDE5Y2E5MWJiMDk4NTg4MjgwN2FiNmExZmYyMjJiMWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bc00b68f7350b4bff67c91eafd2a0c785bb538c4", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/bc00b68f7350b4bff67c91eafd2a0c785bb538c4", "committedDate": "2020-05-15T10:59:56Z", "message": "added unit test for GetCourseSectionNamesAction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNTkwMzEy", "url": "https://github.com/TEAMMATES/teammates/pull/10061#pullrequestreview-412590312", "createdAt": "2020-05-15T12:10:23Z", "commit": {"oid": "bc00b68f7350b4bff67c91eafd2a0c785bb538c4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjoxMDoyM1rOGWCNiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjoxMDoyM1rOGWCNiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc1ODA5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected void testExecute_nonexistCourse_shouldFail() throws Exception {\n          \n          \n            \n                protected void testExecute_nonExistCourse_shouldFail() throws Exception {", "url": "https://github.com/TEAMMATES/teammates/pull/10061#discussion_r425758091", "createdAt": "2020-05-15T12:10:23Z", "author": {"login": "madanalogy"}, "path": "src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package teammates.test.cases.webapi;\n+\n+import java.util.List;\n+\n+import org.apache.http.HttpStatus;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityDoesNotExistException;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.util.Const;\n+import teammates.ui.webapi.action.GetCourseSectionNamesAction;\n+import teammates.ui.webapi.action.JsonResult;\n+import teammates.ui.webapi.output.CourseSectionNamesData;\n+\n+/**\n+ * SUT: {@link GetCourseSectionNamesAction}.\n+ */\n+public class GetCourseSectionNamesActionTest extends BaseActionTest<GetCourseSectionNamesAction> {\n+\n+    @Override\n+    protected String getActionUri() {\n+        return Const.ResourceURIs.COURSE_SECTIONS;\n+    }\n+\n+    @Override\n+    protected String getRequestMethod() {\n+        return GET;\n+    }\n+\n+    @Test\n+    @Override\n+    protected void testExecute() throws Exception {\n+        //See test cases below\n+    }\n+\n+    @Test\n+    protected void testExecute_typicalUsage_shouldPass() throws Exception {\n+        InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n+        List<String> expectedSectionNames = logic.getSectionNamesForCourse(instructor1OfCourse1.getCourseId());\n+\n+        loginAsInstructor(instructor1OfCourse1.googleId);\n+\n+        ______TS(\"typical success case for instructor\");\n+\n+        String[] params = {\n+                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.getCourseId(),\n+        };\n+        GetCourseSectionNamesAction getCourseSectionNamesAction = getAction(params);\n+        JsonResult response = getJsonResult(getCourseSectionNamesAction);\n+\n+        assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+\n+        CourseSectionNamesData courseSectionNamesData = (CourseSectionNamesData) response.getOutput();\n+        assertEquals(expectedSectionNames, courseSectionNamesData.getSectionNames());\n+    }\n+\n+    @Test\n+    protected void testExecute_nonexistCourse_shouldFail() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc00b68f7350b4bff67c91eafd2a0c785bb538c4"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f25911210f0e10bcdf5b5b2bde8bda9ede8c72", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/47f25911210f0e10bcdf5b5b2bde8bda9ede8c72", "committedDate": "2020-05-16T01:57:36Z", "message": "corrected method naming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDM4ODEy", "url": "https://github.com/TEAMMATES/teammates/pull/10061#pullrequestreview-413038812", "createdAt": "2020-05-16T02:20:54Z", "commit": {"oid": "47f25911210f0e10bcdf5b5b2bde8bda9ede8c72"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTI2MDU3", "url": "https://github.com/TEAMMATES/teammates/pull/10061#pullrequestreview-413126057", "createdAt": "2020-05-17T04:27:23Z", "commit": {"oid": "47f25911210f0e10bcdf5b5b2bde8bda9ede8c72"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNDoyNzoyM1rOGWeJ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNDoyNzoyM1rOGWeJ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxNTkwMg==", "bodyText": "Shouldn't we add other verifications like verifyInaccessibleWithoutLogin?\nYou can check examples in other test cases.", "url": "https://github.com/TEAMMATES/teammates/pull/10061#discussion_r426215902", "createdAt": "2020-05-17T04:27:23Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package teammates.test.cases.webapi;\n+\n+import java.util.List;\n+\n+import org.apache.http.HttpStatus;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityDoesNotExistException;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.util.Const;\n+import teammates.ui.webapi.action.GetCourseSectionNamesAction;\n+import teammates.ui.webapi.action.JsonResult;\n+import teammates.ui.webapi.output.CourseSectionNamesData;\n+\n+/**\n+ * SUT: {@link GetCourseSectionNamesAction}.\n+ */\n+public class GetCourseSectionNamesActionTest extends BaseActionTest<GetCourseSectionNamesAction> {\n+\n+    @Override\n+    protected String getActionUri() {\n+        return Const.ResourceURIs.COURSE_SECTIONS;\n+    }\n+\n+    @Override\n+    protected String getRequestMethod() {\n+        return GET;\n+    }\n+\n+    @Test\n+    @Override\n+    protected void testExecute() throws Exception {\n+        //See test cases below\n+    }\n+\n+    @Test\n+    protected void testExecute_typicalUsage_shouldPass() throws Exception {\n+        InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n+        List<String> expectedSectionNames = logic.getSectionNamesForCourse(instructor1OfCourse1.getCourseId());\n+\n+        loginAsInstructor(instructor1OfCourse1.googleId);\n+\n+        ______TS(\"typical success case for instructor\");\n+\n+        String[] params = {\n+                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.getCourseId(),\n+        };\n+        GetCourseSectionNamesAction getCourseSectionNamesAction = getAction(params);\n+        JsonResult response = getJsonResult(getCourseSectionNamesAction);\n+\n+        assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+\n+        CourseSectionNamesData courseSectionNamesData = (CourseSectionNamesData) response.getOutput();\n+        assertEquals(expectedSectionNames, courseSectionNamesData.getSectionNames());\n+    }\n+\n+    @Test\n+    protected void testExecute_nonExistCourse_shouldFail() throws Exception {\n+        InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n+        loginAsInstructor(instructor1OfCourse1.googleId);\n+\n+        ______TS(\"failed case for non-existent course\");\n+\n+        String[] params = {\n+                Const.ParamsNames.COURSE_ID, \"dummy-course\",\n+        };\n+        assertThrows(EntityDoesNotExistException.class, () -> logic.getSectionNamesForCourse(\"dummy-course\"));\n+\n+        GetCourseSectionNamesAction getCourseSectionNamesAction = getAction(params);\n+        assertThrows(EntityNotFoundException.class, () -> getJsonResult(getCourseSectionNamesAction));\n+    }\n+\n+    @Test\n+    @Override\n+    protected void testAccessControl() throws Exception {\n+        InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n+\n+        String[] submissionParams = new String[] {\n+                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.getCourseId(),\n+                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,\n+        };\n+\n+        verifyOnlyInstructorsOfTheSameCourseCanAccess(submissionParams);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47f25911210f0e10bcdf5b5b2bde8bda9ede8c72"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90f29ccb93dd99290f84156ba957dd51c099d973", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/90f29ccb93dd99290f84156ba957dd51c099d973", "committedDate": "2020-05-18T03:20:30Z", "message": "updated testAccessControl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a13b5419b97d4436c75aecfbce22835f3bf6887", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/3a13b5419b97d4436c75aecfbce22835f3bf6887", "committedDate": "2020-05-18T04:22:13Z", "message": "fixed indentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjQ4OTU1", "url": "https://github.com/TEAMMATES/teammates/pull/10061#pullrequestreview-414648955", "createdAt": "2020-05-19T17:03:02Z", "commit": {"oid": "3a13b5419b97d4436c75aecfbce22835f3bf6887"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "575ba668d19ca91bb0985882807ab6a1ff222b1c", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/575ba668d19ca91bb0985882807ab6a1ff222b1c", "committedDate": "2020-05-19T23:47:15Z", "message": "Merge branch 'master' into get-course-section-name-action"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4400, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}