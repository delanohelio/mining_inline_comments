{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDczNzUy", "number": 10030, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNTo0OTowOVrOD6sAMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMzoxMDoxN1rOD_FxrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODY0OTQ3OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNTo0OTowOVrOGSqROw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNjoyNjowOVrOGSrb-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMDA5MQ==", "bodyText": "Was this indentation really necessary?", "url": "https://github.com/TEAMMATES/teammates/pull/10030#discussion_r422220091", "createdAt": "2020-05-08T15:49:09Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "diffHunk": "@@ -99,35 +108,37 @@ export class StudentCourseDetailsPageComponent implements OnInit {\n    * @param teamName: team of current student\n    */\n   loadTeammates(courseId: string, teamName: string): void {\n+    this.teammateProfiles = [];\n     this.studentService.getStudentsFromCourseAndTeam(courseId, teamName)\n-        .subscribe((students: Students) => {\n-          students.students.forEach((student: Student) => {\n-            // filter away current user\n-            if (student.email === this.student.email) {\n-              return;\n-            }\n-\n-            this.studentProfileService.getStudentProfile(student.email, courseId)\n-                  .subscribe((studentProfile: StudentProfile) => {\n-                    const newPhotoUrl: string =\n-                      `${environment.backendUrl}/webapi/student/profilePic`\n-                      + `?courseid=${courseId}&studentemail=${student.email}`;\n-\n-                    const newTeammateProfile: StudentProfileWithPicture = {\n-                      studentProfile: {\n-                        ...studentProfile,\n-                        email: student.email,\n-                        shortName: student.name,\n-                      },\n-                      photoUrl : newPhotoUrl,\n-                    };\n-\n-                    this.teammateProfiles.push(newTeammateProfile);\n-                  });\n-          });\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorMessage(resp.error.message);\n+      .subscribe((students: Students) => {\n+        students.students.forEach((student: Student) => {\n+          // filter away current user\n+          if (student.email === this.student.email) {\n+            return;\n+          }\n+\n+          this.studentProfileService.getStudentProfile(student.email, courseId)\n+                .subscribe((studentProfile: StudentProfile) => {\n+                  const newPhotoUrl: string =\n+                    `${environment.backendUrl}/webapi/student/profilePic`\n+                    + `?courseid=${courseId}&studentemail=${student.email}`;\n+\n+                  const newTeammateProfile: StudentProfileWithPicture = {\n+                    studentProfile: {\n+                      ...studentProfile,\n+                      email: student.email,\n+                      shortName: student.name,\n+                    },\n+                    photoUrl : newPhotoUrl,\n+                  };\n+\n+                  this.teammateProfiles.push(newTeammateProfile);\n+                });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4409b60e3b1c1dfb3db1a99647061b010cca214"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIzOTIyNw==", "bodyText": "I think that lines 121 to 136 could be positioned 2 spaces back! However, I am not the author of this method, I have just added a few lines of code in order to sort teammatesProfiles[]", "url": "https://github.com/TEAMMATES/teammates/pull/10030#discussion_r422239227", "createdAt": "2020-05-08T16:26:09Z", "author": {"login": "AdamPanag"}, "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "diffHunk": "@@ -99,35 +108,37 @@ export class StudentCourseDetailsPageComponent implements OnInit {\n    * @param teamName: team of current student\n    */\n   loadTeammates(courseId: string, teamName: string): void {\n+    this.teammateProfiles = [];\n     this.studentService.getStudentsFromCourseAndTeam(courseId, teamName)\n-        .subscribe((students: Students) => {\n-          students.students.forEach((student: Student) => {\n-            // filter away current user\n-            if (student.email === this.student.email) {\n-              return;\n-            }\n-\n-            this.studentProfileService.getStudentProfile(student.email, courseId)\n-                  .subscribe((studentProfile: StudentProfile) => {\n-                    const newPhotoUrl: string =\n-                      `${environment.backendUrl}/webapi/student/profilePic`\n-                      + `?courseid=${courseId}&studentemail=${student.email}`;\n-\n-                    const newTeammateProfile: StudentProfileWithPicture = {\n-                      studentProfile: {\n-                        ...studentProfile,\n-                        email: student.email,\n-                        shortName: student.name,\n-                      },\n-                      photoUrl : newPhotoUrl,\n-                    };\n-\n-                    this.teammateProfiles.push(newTeammateProfile);\n-                  });\n-          });\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorMessage(resp.error.message);\n+      .subscribe((students: Students) => {\n+        students.students.forEach((student: Student) => {\n+          // filter away current user\n+          if (student.email === this.student.email) {\n+            return;\n+          }\n+\n+          this.studentProfileService.getStudentProfile(student.email, courseId)\n+                .subscribe((studentProfile: StudentProfile) => {\n+                  const newPhotoUrl: string =\n+                    `${environment.backendUrl}/webapi/student/profilePic`\n+                    + `?courseid=${courseId}&studentemail=${student.email}`;\n+\n+                  const newTeammateProfile: StudentProfileWithPicture = {\n+                    studentProfile: {\n+                      ...studentProfile,\n+                      email: student.email,\n+                      shortName: student.name,\n+                    },\n+                    photoUrl : newPhotoUrl,\n+                  };\n+\n+                  this.teammateProfiles.push(newTeammateProfile);\n+                });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMDA5MQ=="}, "originalCommit": {"oid": "a4409b60e3b1c1dfb3db1a99647061b010cca214"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODY1Nzg2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNTo1MToyN1rOGSqWNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNjoyMDo0N1rOGSrRow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMTM2Nw==", "bodyText": "Could consider renaming by with sortOption for clarity, along with the rest of its uses in this file", "url": "https://github.com/TEAMMATES/teammates/pull/10030#discussion_r422221367", "createdAt": "2020-05-08T15:51:27Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "diffHunk": "@@ -149,4 +160,62 @@ export class StudentCourseDetailsPageComponent implements OnInit {\n   setDefaultPic(teammateProfile: StudentProfileWithPicture): void {\n     teammateProfile.photoUrl = '/assets/images/profile_picture_default.png';\n   }\n+\n+  /**\n+   * Checks the option selected to sort teammates.\n+   * @param by: option for sorting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4409b60e3b1c1dfb3db1a99647061b010cca214"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIzNjU3OQ==", "bodyText": "Of course, thank you for the comment!", "url": "https://github.com/TEAMMATES/teammates/pull/10030#discussion_r422236579", "createdAt": "2020-05-08T16:20:47Z", "author": {"login": "AdamPanag"}, "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "diffHunk": "@@ -149,4 +160,62 @@ export class StudentCourseDetailsPageComponent implements OnInit {\n   setDefaultPic(teammateProfile: StudentProfileWithPicture): void {\n     teammateProfile.photoUrl = '/assets/images/profile_picture_default.png';\n   }\n+\n+  /**\n+   * Checks the option selected to sort teammates.\n+   * @param by: option for sorting", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyMTM2Nw=="}, "originalCommit": {"oid": "a4409b60e3b1c1dfb3db1a99647061b010cca214"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzgwMzQ2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMjo0Njo1MVrOGX5bPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMDo1OToxMVrOGZjf7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxMTI5Mw==", "bodyText": "I think this is the wrong place to add the sort method if you want the page to be sorted when it is loaded. However, to make it work, it will be a little bit complicated.\nI accept the solution that we can just set teammateProfilesSortBy to SortBy.None and don't sort it when the page is loaded (i.e. remove this line).\nLet me know if you want to take challenge to make it sorted when the page is loaded.", "url": "https://github.com/TEAMMATES/teammates/pull/10030#discussion_r427711293", "createdAt": "2020-05-20T02:46:51Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "diffHunk": "@@ -99,35 +108,37 @@ export class StudentCourseDetailsPageComponent implements OnInit {\n    * @param teamName: team of current student\n    */\n   loadTeammates(courseId: string, teamName: string): void {\n+    this.teammateProfiles = [];\n     this.studentService.getStudentsFromCourseAndTeam(courseId, teamName)\n-        .subscribe((students: Students) => {\n-          students.students.forEach((student: Student) => {\n-            // filter away current user\n-            if (student.email === this.student.email) {\n-              return;\n-            }\n-\n-            this.studentProfileService.getStudentProfile(student.email, courseId)\n-                  .subscribe((studentProfile: StudentProfile) => {\n-                    const newPhotoUrl: string =\n-                      `${environment.backendUrl}/webapi/student/profilePic`\n-                      + `?courseid=${courseId}&studentemail=${student.email}`;\n-\n-                    const newTeammateProfile: StudentProfileWithPicture = {\n-                      studentProfile: {\n-                        ...studentProfile,\n-                        email: student.email,\n-                        shortName: student.name,\n-                      },\n-                      photoUrl : newPhotoUrl,\n-                    };\n-\n-                    this.teammateProfiles.push(newTeammateProfile);\n-                  });\n-          });\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorMessage(resp.error.message);\n+      .subscribe((students: Students) => {\n+        students.students.forEach((student: Student) => {\n+          // filter away current user\n+          if (student.email === this.student.email) {\n+            return;\n+          }\n+\n+          this.studentProfileService.getStudentProfile(student.email, courseId)\n+                .subscribe((studentProfile: StudentProfile) => {\n+                  const newPhotoUrl: string =\n+                    `${environment.backendUrl}/webapi/student/profilePic`\n+                    + `?courseid=${courseId}&studentemail=${student.email}`;\n+\n+                  const newTeammateProfile: StudentProfileWithPicture = {\n+                    studentProfile: {\n+                      ...studentProfile,\n+                      email: student.email,\n+                      shortName: student.name,\n+                    },\n+                    photoUrl : newPhotoUrl,\n+                  };\n+\n+                  this.teammateProfiles.push(newTeammateProfile);\n+                });\n         });\n+        this.sortTeammatesBy(this.teammateProfilesSortBy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82a9a795627f732a3fe28a0535edf7119420900d"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ0OTE5OQ==", "bodyText": "@xpdavid Thank you for the review! Unfortunately,  I don't have the time to devote and make it sorted, with the right way, when the page is loaded. So, I will set it to SortBy.None soon.", "url": "https://github.com/TEAMMATES/teammates/pull/10030#discussion_r429449199", "createdAt": "2020-05-22T20:59:11Z", "author": {"login": "AdamPanag"}, "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "diffHunk": "@@ -99,35 +108,37 @@ export class StudentCourseDetailsPageComponent implements OnInit {\n    * @param teamName: team of current student\n    */\n   loadTeammates(courseId: string, teamName: string): void {\n+    this.teammateProfiles = [];\n     this.studentService.getStudentsFromCourseAndTeam(courseId, teamName)\n-        .subscribe((students: Students) => {\n-          students.students.forEach((student: Student) => {\n-            // filter away current user\n-            if (student.email === this.student.email) {\n-              return;\n-            }\n-\n-            this.studentProfileService.getStudentProfile(student.email, courseId)\n-                  .subscribe((studentProfile: StudentProfile) => {\n-                    const newPhotoUrl: string =\n-                      `${environment.backendUrl}/webapi/student/profilePic`\n-                      + `?courseid=${courseId}&studentemail=${student.email}`;\n-\n-                    const newTeammateProfile: StudentProfileWithPicture = {\n-                      studentProfile: {\n-                        ...studentProfile,\n-                        email: student.email,\n-                        shortName: student.name,\n-                      },\n-                      photoUrl : newPhotoUrl,\n-                    };\n-\n-                    this.teammateProfiles.push(newTeammateProfile);\n-                  });\n-          });\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorMessage(resp.error.message);\n+      .subscribe((students: Students) => {\n+        students.students.forEach((student: Student) => {\n+          // filter away current user\n+          if (student.email === this.student.email) {\n+            return;\n+          }\n+\n+          this.studentProfileService.getStudentProfile(student.email, courseId)\n+                .subscribe((studentProfile: StudentProfile) => {\n+                  const newPhotoUrl: string =\n+                    `${environment.backendUrl}/webapi/student/profilePic`\n+                    + `?courseid=${courseId}&studentemail=${student.email}`;\n+\n+                  const newTeammateProfile: StudentProfileWithPicture = {\n+                    studentProfile: {\n+                      ...studentProfile,\n+                      email: student.email,\n+                      shortName: student.name,\n+                    },\n+                    photoUrl : newPhotoUrl,\n+                  };\n+\n+                  this.teammateProfiles.push(newTeammateProfile);\n+                });\n         });\n+        this.sortTeammatesBy(this.teammateProfilesSortBy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxMTI5Mw=="}, "originalCommit": {"oid": "82a9a795627f732a3fe28a0535edf7119420900d"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDgxNTE2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMzoxMDoxN1rOGZltzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMzoxODo1N1rOGZly-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4NTUxOQ==", "bodyText": "The variable is for?", "url": "https://github.com/TEAMMATES/teammates/pull/10030#discussion_r429485519", "createdAt": "2020-05-22T23:10:17Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "diffHunk": "@@ -51,7 +57,10 @@ export class StudentCourseDetailsPageComponent implements OnInit {\n   instructorDetails: Instructor[] = [];\n   teammateProfiles: StudentProfileWithPicture[] = [];\n \n-  constructor(private route: ActivatedRoute,\n+  hasTeammateProfilesLoaded: boolean = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3360f73e31dfa6948c4b03e8405098c66b88d3a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4Njg0MA==", "bodyText": "Sorry, I forgot to delete this", "url": "https://github.com/TEAMMATES/teammates/pull/10030#discussion_r429486840", "createdAt": "2020-05-22T23:18:57Z", "author": {"login": "AdamPanag"}, "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts", "diffHunk": "@@ -51,7 +57,10 @@ export class StudentCourseDetailsPageComponent implements OnInit {\n   instructorDetails: Instructor[] = [];\n   teammateProfiles: StudentProfileWithPicture[] = [];\n \n-  constructor(private route: ActivatedRoute,\n+  hasTeammateProfilesLoaded: boolean = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4NTUxOQ=="}, "originalCommit": {"oid": "c3360f73e31dfa6948c4b03e8405098c66b88d3a"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3948, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}