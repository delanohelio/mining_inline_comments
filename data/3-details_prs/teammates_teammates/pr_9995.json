{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMTE5MDU1", "number": 9995, "title": "[#9946] Migration to new RESTful search endpoints - Instructor search service", "bodyText": "Part of #9946.\nOutline of Solution\nThis PR:\n\nImplements the new instructor search service\nMigrates the instructor search page/component to use the new service\nRemoves options to search for feedback sessions (only visual changes, this feature is currently already disabled in the backend)", "createdAt": "2020-03-24T16:52:05Z", "url": "https://github.com/TEAMMATES/teammates/pull/9995", "merged": true, "mergeCommit": {"oid": "e311529371a4cf273fc6e4d700e86c8f800e1920"}, "closed": true, "closedAt": "2020-04-11T04:50:22Z", "author": {"login": "dvrylc"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcURPJhAFqTM4NzY3OTg4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWd0P-ABqjMyMjM2Mzc0Njk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Njc5ODg2", "url": "https://github.com/TEAMMATES/teammates/pull/9995#pullrequestreview-387679886", "createdAt": "2020-04-04T08:27:10Z", "commit": {"oid": "75ca702e3b475eeb7de42e79c85c73d85c400b3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwODoyNzoxMFrOGAwMQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwODoyNzoxMFrOGAwMQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0Mjc1Mg==", "bodyText": "Might want to change this part to make it deterministic.", "url": "https://github.com/TEAMMATES/teammates/pull/9995#discussion_r403442752", "createdAt": "2020-04-04T08:27:10Z", "author": {"login": "hcwong"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -0,0 +1,103 @@\n+import { Injectable } from '@angular/core';\n+import { Observable } from 'rxjs';\n+import { map } from 'rxjs/operators';\n+import { SearchStudentsTable } from '../app/pages-instructor/instructor-search-page/instructor-search-page.component';\n+import { ResourceEndpoints } from '../types/api-endpoints';\n+import { InstructorPrivilege, Student, Students } from '../types/api-output';\n+import { HttpRequestService } from './http-request.service';\n+\n+/**\n+ * Handles the logic for search.\n+ */\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SearchService {\n+  constructor(private httpRequestService: HttpRequestService) {}\n+\n+  searchInstructor(searchKey: string): Observable<InstructorSearchResult> {\n+    return this.getStudents(searchKey).pipe(\n+      map((studentsRes: Students): SearchStudentsTable[] =>\n+        this.getCoursesWithSections(studentsRes),\n+      ),\n+      map(\n+        (coursesWithSections: SearchStudentsTable[]): InstructorSearchResult =>\n+          this.getPrivileges(coursesWithSections),\n+      ),\n+    );\n+  }\n+\n+  getStudents(searchKey: string): Observable<Students> {\n+    const paramMap: { [key: string]: string } = {\n+      searchkey: searchKey,\n+    };\n+    return this.httpRequestService.get('/search/students', paramMap);\n+  }\n+\n+  getCoursesWithSections(studentsRes: Students): SearchStudentsTable[] {\n+    const { students }: { students: Student[] } = studentsRes;\n+\n+    const distinctCourses: string[] = Array.from(\n+      new Set(students.map((s: Student) => s.courseId)),\n+    );\n+    const coursesWithSections: SearchStudentsTable[] = distinctCourses.map(\n+      (courseId: string) => ({\n+        courseId,\n+        sections: Array.from(\n+          new Set(\n+            students\n+              .filter((s: Student) => s.courseId === courseId)\n+              .map((s: Student) => s.sectionName),\n+          ),\n+        ).map((sectionName: string) => ({\n+          sectionName,\n+          isAllowedToViewStudentInSection: false,\n+          isAllowedToModifyStudent: false,\n+          students: students\n+            .filter(\n+              (s: Student) =>\n+                s.courseId === courseId && s.sectionName === sectionName,\n+            )\n+            .map((s: Student) => ({\n+              name: s.name,\n+              email: s.email,\n+              status: s.joinState,\n+              team: s.teamName,\n+            })),\n+        })),\n+      }),\n+    );\n+\n+    return coursesWithSections;\n+  }\n+\n+  getPrivileges(\n+    coursesWithSections: SearchStudentsTable[],\n+  ): InstructorSearchResult {\n+    for (const course of coursesWithSections) {\n+      for (const section of course.sections) {\n+        this.httpRequestService\n+          .get(ResourceEndpoints.INSTRUCTOR_PRIVILEGE, {\n+            courseid: course.courseId,\n+            sectionname: section.sectionName,\n+          })\n+          .subscribe((res: InstructorPrivilege): void => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75ca702e3b475eeb7de42e79c85c73d85c400b3c"}, "originalPosition": 84}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75ca702e3b475eeb7de42e79c85c73d85c400b3c", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/75ca702e3b475eeb7de42e79c85c73d85c400b3c", "committedDate": "2020-03-24T16:41:42Z", "message": "Add tests for instructor search service"}, "afterCommit": {"oid": "b696f35b20b8868a2658c0125a75618090ffa550", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/b696f35b20b8868a2658c0125a75618090ffa550", "committedDate": "2020-04-04T18:15:14Z", "message": "Update tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzgyNTkz", "url": "https://github.com/TEAMMATES/teammates/pull/9995#pullrequestreview-387782593", "createdAt": "2020-04-05T05:27:24Z", "commit": {"oid": "b696f35b20b8868a2658c0125a75618090ffa550"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNToyNzoyNFrOGA87cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNToyNzoyNFrOGA87cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1MTQ0Mg==", "bodyText": "Idk, could this be done so that we can remove the reduce part?\n  // Gets an array of Observable<InstructorPrivilege>[] via flattening\n  const instructorPrivilegesArray = courseWithSections\n    .flatMap((course: SearchStudentsTable) => \n      course.sections.map((section: StudentListSectionData)\n        => this.insructorService.loadInstructorPrivilege({...});\n  return forkJoin(instructorPrivilegesArray)", "url": "https://github.com/TEAMMATES/teammates/pull/9995#discussion_r403651442", "createdAt": "2020-04-05T05:27:24Z", "author": {"login": "hcwong"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -0,0 +1,127 @@\n+import { Injectable } from '@angular/core';\n+import { forkJoin, Observable, of } from 'rxjs';\n+import { map, mergeMap } from 'rxjs/operators';\n+import { SearchStudentsTable } from '../app/pages-instructor/instructor-search-page/instructor-search-page.component';\n+import { StudentListSectionData } from '../app/pages-instructor/student-list/student-list-section-data';\n+import { ResourceEndpoints } from '../types/api-endpoints';\n+import { InstructorPrivilege, Student, Students } from '../types/api-output';\n+import { HttpRequestService } from './http-request.service';\n+\n+/**\n+ * Handles the logic for search.\n+ */\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SearchService {\n+  constructor(private httpRequestService: HttpRequestService) {}\n+\n+  searchInstructor(searchKey: string): Observable<InstructorSearchResult> {\n+    return this.getStudents(searchKey).pipe(\n+      map((studentsRes: Students) => this.getCoursesWithSections(studentsRes)),\n+      mergeMap((coursesWithSections: SearchStudentsTable[]) =>\n+        forkJoin([\n+          of(coursesWithSections),\n+          this.getPrivileges(coursesWithSections),\n+        ]),\n+      ),\n+      map((res: [SearchStudentsTable[], InstructorPrivilege[]]) => this.combinePrivileges(res)),\n+    );\n+  }\n+\n+  getStudents(searchKey: string): Observable<Students> {\n+    const paramMap: { [key: string]: string } = {\n+      searchkey: searchKey,\n+    };\n+    return this.httpRequestService.get('/search/students', paramMap);\n+  }\n+\n+  getCoursesWithSections(studentsRes: Students): SearchStudentsTable[] {\n+    const { students }: { students: Student[] } = studentsRes;\n+\n+    const distinctCourses: string[] = Array.from(\n+      new Set(students.map((s: Student) => s.courseId)),\n+    );\n+    const coursesWithSections: SearchStudentsTable[] = distinctCourses.map(\n+      (courseId: string) => ({\n+        courseId,\n+        sections: Array.from(\n+          new Set(\n+            students\n+              .filter((s: Student) => s.courseId === courseId)\n+              .map((s: Student) => s.sectionName),\n+          ),\n+        ).map((sectionName: string) => ({\n+          sectionName,\n+          isAllowedToViewStudentInSection: false,\n+          isAllowedToModifyStudent: false,\n+          students: students\n+            .filter(\n+              (s: Student) =>\n+                s.courseId === courseId && s.sectionName === sectionName,\n+            )\n+            .map((s: Student) => ({\n+              name: s.name,\n+              email: s.email,\n+              status: s.joinState,\n+              team: s.teamName,\n+            })),\n+        })),\n+      }),\n+    );\n+\n+    return coursesWithSections;\n+  }\n+\n+  getPrivileges(\n+    coursesWithSections: SearchStudentsTable[],\n+  ): Observable<InstructorPrivilege[]> {\n+    return forkJoin(\n+      coursesWithSections.map((course: SearchStudentsTable) => {\n+        return course.sections.map((section: StudentListSectionData) => {\n+          return this.httpRequestService.get(\n+            ResourceEndpoints.INSTRUCTOR_PRIVILEGE,\n+            {\n+              courseid: course.courseId,\n+              sectionname: section.sectionName,\n+            },\n+          );\n+        });\n+      }).reduce(\n+        (acc: Observable<InstructorPrivilege>[], val: Observable<InstructorPrivilege>[]) =>\n+        acc.concat(val),\n+        [],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b696f35b20b8868a2658c0125a75618090ffa550"}, "originalPosition": 93}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "404ecf5fde9c635ad21caf599cc4aab34062f884", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/404ecf5fde9c635ad21caf599cc4aab34062f884", "committedDate": "2020-04-05T08:36:34Z", "message": "Use instructor service instead of direct request"}, "afterCommit": {"oid": "5773547c1f3e19cb12d8b59bfb37201977f631b0", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5773547c1f3e19cb12d8b59bfb37201977f631b0", "committedDate": "2020-04-05T09:57:25Z", "message": "Use instructor service instead of direct request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5773547c1f3e19cb12d8b59bfb37201977f631b0", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5773547c1f3e19cb12d8b59bfb37201977f631b0", "committedDate": "2020-04-05T09:57:25Z", "message": "Use instructor service instead of direct request"}, "afterCommit": {"oid": "cdfcadda10a0c9b374662042729100bda52063bf", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/cdfcadda10a0c9b374662042729100bda52063bf", "committedDate": "2020-04-08T08:05:21Z", "message": "Use instructor service instead of direct request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNDkxNTgy", "url": "https://github.com/TEAMMATES/teammates/pull/9995#pullrequestreview-391491582", "createdAt": "2020-04-10T15:05:48Z", "commit": {"oid": "cdfcadda10a0c9b374662042729100bda52063bf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49d455e1ffe2f4adf6c5ba0e52b3815ef8512a93", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/49d455e1ffe2f4adf6c5ba0e52b3815ef8512a93", "committedDate": "2020-04-11T03:51:47Z", "message": "Implement instructor search service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f4cf312e3e19abfa439eaf9dc506d56c7e3549e", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5f4cf312e3e19abfa439eaf9dc506d56c7e3549e", "committedDate": "2020-04-11T03:51:47Z", "message": "Add tests for instructor search service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c30dc01df3143b23ced13cf5550bcd7883ce4b4", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7c30dc01df3143b23ced13cf5550bcd7883ce4b4", "committedDate": "2020-04-11T03:51:47Z", "message": "Make privilege fetching deterministic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ccbc3a20f9ff768d1857cc2322808ec2ddeeb3a", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/0ccbc3a20f9ff768d1857cc2322808ec2ddeeb3a", "committedDate": "2020-04-11T03:51:48Z", "message": "Update tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d5207ca0f858f0b52af74a19bd7db921f1992d5", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2d5207ca0f858f0b52af74a19bd7db921f1992d5", "committedDate": "2020-04-11T03:51:48Z", "message": "Use instructor service instead of direct request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cdfcadda10a0c9b374662042729100bda52063bf", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/cdfcadda10a0c9b374662042729100bda52063bf", "committedDate": "2020-04-08T08:05:21Z", "message": "Use instructor service instead of direct request"}, "afterCommit": {"oid": "2d5207ca0f858f0b52af74a19bd7db921f1992d5", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2d5207ca0f858f0b52af74a19bd7db921f1992d5", "committedDate": "2020-04-11T03:51:48Z", "message": "Use instructor service instead of direct request"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4385, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}