{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MDc5ODMx", "number": 10231, "title": "[#9993] Add Access Control Tests for Actions from API Endpoints", "bodyText": "Resolves #9993, Closes #9994, Closes #9999\nConsolidated test cases from #9994 & #9999 adjusted for recent changes. Credits to @nusjzx for original test case design.", "createdAt": "2020-06-24T09:27:27Z", "url": "https://github.com/TEAMMATES/teammates/pull/10231", "merged": true, "mergeCommit": {"oid": "5aecda4eafb3648fca65e3569d2d573b33fbe75b"}, "closed": true, "closedAt": "2020-06-29T07:22:01Z", "author": {"login": "madanalogy"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuW9NZAFqTQzNjQ4ODE0OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcv7OWqAH2gAyNDM5MDc5ODMxOmM1YzM3NzM3MTAzNjJlNzI3NTIxNjI3ZWYyZmFmYzZkOTRlNTE1NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NDg4MTQ4", "url": "https://github.com/TEAMMATES/teammates/pull/10231#pullrequestreview-436488148", "createdAt": "2020-06-24T09:41:33Z", "commit": {"oid": "3f3a2c6ef2a8ea4b35bbde3187626476baf2fef8"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo0MTozNFrOGoKx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo1MDowOVrOGoLFfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3Mjg1Ng==", "bodyText": "I think here can be more consistent with style by just using if as guarding clause.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r444772856", "createdAt": "2020-06-24T09:41:34Z", "author": {"login": "Derek-Hardy"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,10 +38,17 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n-            gateKeeper.verifyAccessible(instructor, fs);\n+            if (userInfo == null) {\n+                throw new UnauthorizedAccessException(\"Instructor account is required to access this resource\");\n+            } else {\n+                InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n+                gateKeeper.verifyAccessible(instructor, fs);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3a2c6ef2a8ea4b35bbde3187626476baf2fef8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3Nzc2Mg==", "bodyText": "Maybe can have one arg on the same line as method name?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r444777762", "createdAt": "2020-06-24T09:50:01Z", "author": {"login": "Derek-Hardy"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -305,6 +335,16 @@ protected void verifyInaccessibleForSpecificInstructor(InstructorAttributes inst\n         verifyCannotAccess(params);\n     }\n \n+    protected void verifyAccessibleForAdminToMasqueradeAsInstructor(\n+            InstructorAttributes instructor, String[] submissionParams) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3a2c6ef2a8ea4b35bbde3187626476baf2fef8"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3Nzg1NQ==", "bodyText": "Like here", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r444777855", "createdAt": "2020-06-24T09:50:09Z", "author": {"login": "Derek-Hardy"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -218,6 +239,15 @@ protected void verifyOnlyInstructorsOfTheSameCourseCanAccess(String[] submission\n         verifyAccessibleForAdminToMasqueradeAsInstructor(submissionParams);\n     }\n \n+    protected void verifyOnlyInstructorsOfTheSameCourseWithCorrectCoursePrivilegeCanAccess(String privilege,\n+                                                                                           String[] submissionParams) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3a2c6ef2a8ea4b35bbde3187626476baf2fef8"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f3a2c6ef2a8ea4b35bbde3187626476baf2fef8", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/3f3a2c6ef2a8ea4b35bbde3187626476baf2fef8", "committedDate": "2020-06-24T09:38:39Z", "message": "Add newline to end of FeedbackResponseCommentCRUDTest.json"}, "afterCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/806f9963e32143a47564ec68bec4f90b6ac9d98d", "committedDate": "2020-06-25T03:09:23Z", "message": "Add Session Results & Submission Tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTQzNzA3", "url": "https://github.com/TEAMMATES/teammates/pull/10231#pullrequestreview-437143707", "createdAt": "2020-06-25T03:28:17Z", "commit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTUzNDQ3", "url": "https://github.com/TEAMMATES/teammates/pull/10231#pullrequestreview-437153447", "createdAt": "2020-06-25T04:06:53Z", "commit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowNjo1M1rOGoqqCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDoxMzo0OFrOGoqwFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTExNA==", "bodyText": "The check can be (and should be) inside getStudentOfCourseFromRequest to save the duplicated code.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445295114", "createdAt": "2020-06-25T04:06:53Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/DeleteFeedbackResponseCommentAction.java", "diffHunk": "@@ -36,6 +38,9 @@ public void checkSpecificAccessControl() {\n \n         switch (intent) {\n         case STUDENT_SUBMISSION:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTE1MQ==", "bodyText": "Same here.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445295151", "createdAt": "2020-06-25T04:07:03Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/DeleteFeedbackResponseCommentAction.java", "diffHunk": "@@ -49,6 +54,9 @@ public void checkSpecificAccessControl() {\n                             ? student.getTeam() : student.getEmail());\n             break;\n         case INSTRUCTOR_SUBMISSION:\n+            if (userInfo == null || !userInfo.isInstructor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTU4OQ==", "bodyText": "Shouldn't we use gateKeeper.verifyLoggedInUserPrivileges(); for any null check for userInfo?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445295589", "createdAt": "2020-06-25T04:08:59Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -28,16 +30,25 @@ public void checkSpecificAccessControl() {\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {\n+                throw new UnauthorizedAccessException(\"Instructor or Student account is required to access this resource.\");\n+            }\n             StudentAttributes studentAttributes = getStudentOfCourseFromRequest(courseId);\n             checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);\n             break;\n         case FULL_DETAIL:\n+            if (userInfo == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTc3NA==", "bodyText": "What is this submissionParams for?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445295774", "createdAt": "2020-06-25T04:09:44Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +180,23 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void updateInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,\n+                                                            String privilege, String[] sections, String[] submissionParams) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NjA2Nw==", "bodyText": "We should just throw the exception instead of keep it silent? Same for other places.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445296067", "createdAt": "2020-06-25T04:11:06Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +180,23 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void updateInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,\n+                                                            String privilege, String[] sections, String[] submissionParams) {\n+        InstructorPrivileges instructorPrivileges = new InstructorPrivileges();\n+\n+        for (String section : sections) {\n+            instructorPrivileges.updatePrivilege(section, privilege, true);\n+        }\n+\n+        try {\n+            logic.updateInstructor(\n+                    InstructorAttributes.updateOptionsWithEmailBuilder(instructor.getCourseId(), instructor.email)\n+                            .withPrivileges(instructorPrivileges).build());\n+        } catch (Exception e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NjY2Mg==", "bodyText": "As the we are setting the privilege to true, it is better to name the method as grantPrivilege instead of updatePrivilge.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445296662", "createdAt": "2020-06-25T04:13:48Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +180,23 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void updateInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3ODA3MTk1", "url": "https://github.com/TEAMMATES/teammates/pull/10231#pullrequestreview-437807195", "createdAt": "2020-06-25T19:47:16Z", "commit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0NzoxNlrOGpJYpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDowMTowMFrOGpJ0Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5ODU2Ng==", "bodyText": "The error message is not correct as instructor can call the method to access moderated/preview person.\nActually, I think it is not the method's responsibility to verify the login privilege here. As long as the pre-condition for getStudentOfCourseFromRequest is fulfilled, it should executed.\ni.e.\n\nThe login check should be only verified at orElseGet\nOther login privilege check should be in checkAccessControlForStudentFeedbackSubmission (e.g., to verify it is logged in when access as preview person)", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445798566", "createdAt": "2020-06-25T19:47:16Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java", "diffHunk": "@@ -48,6 +48,9 @@ protected void verifyInstructorCanSeeQuestionIfInModeration(FeedbackQuestionAttr\n      * Gets the student involved in the submission process.\n      */\n     protected StudentAttributes getStudentOfCourseFromRequest(String courseId) {\n+        if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {\n+            throw new UnauthorizedAccessException(\"Student account is required to access this resource.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5ODg5MQ==", "bodyText": "So you can delete the check?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445798891", "createdAt": "2020-06-25T19:47:57Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackQuestionRecipientsAction.java", "diffHunk": "@@ -40,11 +42,17 @@ public void checkSpecificAccessControl() {\n                 logic.getFeedbackSession(feedbackQuestion.getFeedbackSessionName(), feedbackQuestion.getCourseId());\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5ODk1NQ==", "bodyText": "Same here?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445798955", "createdAt": "2020-06-25T19:48:03Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackQuestionRecipientsAction.java", "diffHunk": "@@ -40,11 +42,17 @@ public void checkSpecificAccessControl() {\n                 logic.getFeedbackSession(feedbackQuestion.getFeedbackSessionName(), feedbackQuestion.getCourseId());\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {\n+                throw new UnauthorizedAccessException(\"Instructor or Student account is required to access this resource.\");\n+            }\n             gateKeeper.verifyAnswerableForStudent(feedbackQuestion);\n             StudentAttributes studentAttributes = getStudentOfCourseFromRequest(feedbackSession.getCourseId());\n             checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);\n             break;\n         case INSTRUCTOR_SUBMISSION:\n+            if (userInfo == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTQzMg==", "bodyText": "Same here.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445799432", "createdAt": "2020-06-25T19:49:03Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -28,16 +30,22 @@ public void checkSpecificAccessControl() {\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTU5NA==", "bodyText": "break?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445799594", "createdAt": "2020-06-25T19:49:20Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -28,16 +30,22 @@ public void checkSpecificAccessControl() {\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {\n+                throw new UnauthorizedAccessException(\"Instructor or Student account is required to access this resource.\");\n+            }\n             StudentAttributes studentAttributes = getStudentOfCourseFromRequest(courseId);\n             checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);\n             break;\n         case FULL_DETAIL:\n+            gateKeeper.verifyLoggedInUserPrivileges();\n             gateKeeper.verifyAccessible(\n                     logic.getInstructorForGoogleId(courseId, userInfo.getId()),\n                     feedbackSession);\n             break;\n         case INSTRUCTOR_SUBMISSION:\n+            break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTc0OQ==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445799749", "createdAt": "2020-06-25T19:49:39Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTgwNQ==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445799805", "createdAt": "2020-06-25T19:49:46Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {\n+                throw new UnauthorizedAccessException(\"Instructor account is required to access this resource\");\n+            }\n+            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n             gateKeeper.verifyAccessible(instructor, fs);\n             break;\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwMDE5Mw==", "bodyText": "I think only is not necessary\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected void grantInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,\n          \n          \n            \n                protected void grantInstructorWithSectionPrivilege(InstructorAttributes instructor,", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445800193", "createdAt": "2020-06-25T19:50:29Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +181,22 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void grantInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwMTU1MQ==", "bodyText": "I think @Derek-Hardy has brought this up for the indentation. However, it is not ideal to put one param \"up\" for very long method.\nSee https://oss-generic.github.io/process/codingStandards/CodingStandard-Java.html", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445801551", "createdAt": "2020-06-25T19:53:08Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +181,22 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void grantInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwMDE5Mw=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwNTU3OA==", "bodyText": "Same reason here.\n\nActually, I think it is not the method's responsibility to verify the instructor privilege here. As long as the pre-condition for getInstructorOfCourseFromRequest is fulfilled, it should executed.\n\n\nThe login check should be only verified at L110 (where you delete the old code)\nThe caller method should verify that the entity is instructor (I think already is as checkAccessControlForInstructorFeedbackSubmission).", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445805578", "createdAt": "2020-06-25T20:01:00Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java", "diffHunk": "@@ -99,6 +102,9 @@ protected void checkAccessControlForStudentFeedbackSubmission(\n      * Gets the instructor involved in the submission process.\n      */\n     protected InstructorAttributes getInstructorOfCourseFromRequest(String courseId) {\n+        if (userInfo == null || !userInfo.isInstructor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef5a8bf6170f1e6815e98bc9f9a82b902730e25f", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ef5a8bf6170f1e6815e98bc9f9a82b902730e25f", "committedDate": "2020-06-29T05:23:21Z", "message": "Set up base access control modifications"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e9aa2ba024637a242c6fb8d282726d0433683ce", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9e9aa2ba024637a242c6fb8d282726d0433683ce", "committedDate": "2020-06-29T05:24:47Z", "message": "Add Instructor CRUD Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65e96782f8e27ffbeec420a0ad4395cdf35be68a", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/65e96782f8e27ffbeec420a0ad4395cdf35be68a", "committedDate": "2020-06-29T05:26:31Z", "message": "Add Student CRUD Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "819f3752c37d57da4d79f1758c2ccdb881e61e85", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/819f3752c37d57da4d79f1758c2ccdb881e61e85", "committedDate": "2020-06-29T05:27:02Z", "message": "Add Course CRUD Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe0ae2db3cee5fd956029aa5574c57f6b2c84611", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/fe0ae2db3cee5fd956029aa5574c57f6b2c84611", "committedDate": "2020-06-29T05:28:29Z", "message": "Add FeedbackSession CRUD Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80bbf7d571824186950c0e5fa4d971c697e309ed", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/80bbf7d571824186950c0e5fa4d971c697e309ed", "committedDate": "2020-06-29T05:29:37Z", "message": "Add FeedbackQuestion CRUD Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd0a17cfe955cd5f275f7d04f2cbcee1325dcbd0", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/bd0a17cfe955cd5f275f7d04f2cbcee1325dcbd0", "committedDate": "2020-06-29T05:30:53Z", "message": "Add FeedbackResponse CRUD Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d481254b9bf77f2354587fdfc8ef615f77230e31", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d481254b9bf77f2354587fdfc8ef615f77230e31", "committedDate": "2020-06-29T05:31:43Z", "message": "Add Session Results & Submission Tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/b785f3c6f503e731430ea4f0863eb0d39cfed9b4", "committedDate": "2020-06-25T07:05:23Z", "message": "Refactor exception handling in tests"}, "afterCommit": {"oid": "d481254b9bf77f2354587fdfc8ef615f77230e31", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d481254b9bf77f2354587fdfc8ef615f77230e31", "committedDate": "2020-06-29T05:31:43Z", "message": "Add Session Results & Submission Tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTA4MDAx", "url": "https://github.com/TEAMMATES/teammates/pull/10231#pullrequestreview-438908001", "createdAt": "2020-06-29T06:07:42Z", "commit": {"oid": "d481254b9bf77f2354587fdfc8ef615f77230e31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5c3773710362e727521627ef2fafc6d94e51566", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/c5c3773710362e727521627ef2fafc6d94e51566", "committedDate": "2020-06-29T06:40:36Z", "message": "Merge branch 'master' into 9993-tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4367, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}