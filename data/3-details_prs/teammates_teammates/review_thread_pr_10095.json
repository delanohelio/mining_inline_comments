{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNjkwNjkw", "number": 10095, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNDoxMjozOFrOD-0o0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDoxMjo0N1rOD-5kaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjAwNzIxOnYy", "diffSide": "RIGHT", "path": "src/web/services/course.service.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNDoxMjozOFrOGZKHbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNDo1NzozM1rOGZKqsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzMzMyNw==", "bodyText": "The method should be in the student service right?", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429033327", "createdAt": "2020-05-22T04:12:38Z", "author": {"login": "xpdavid"}, "path": "src/web/services/course.service.ts", "diffHunk": "@@ -254,6 +254,6 @@ export class CourseService {\n     const paramsMap: Record<string, string> = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d9fa47c60474f9a71e962dfa7daad6bbdff114e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA0MjAyNA==", "bodyText": "I just replaced the endpoint, it was already being called from course service, do you want me to move it to student service? It should be fine since the only component using this method already has a dependency on student service", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429042024", "createdAt": "2020-05-22T04:56:02Z", "author": {"login": "madanalogy"}, "path": "src/web/services/course.service.ts", "diffHunk": "@@ -254,6 +254,6 @@ export class CourseService {\n     const paramsMap: Record<string, string> = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzMzMyNw=="}, "originalCommit": {"oid": "4d9fa47c60474f9a71e962dfa7daad6bbdff114e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA0MjM1Mg==", "bodyText": "We have to do that as it is not the responsibility of course service to get students. Remember SRP?", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429042352", "createdAt": "2020-05-22T04:57:33Z", "author": {"login": "xpdavid"}, "path": "src/web/services/course.service.ts", "diffHunk": "@@ -254,6 +254,6 @@ export class CourseService {\n     const paramsMap: Record<string, string> = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzMzMyNw=="}, "originalCommit": {"oid": "4d9fa47c60474f9a71e962dfa7daad6bbdff114e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjUyODM3OnYy", "diffSide": "RIGHT", "path": "src/web/services/student.service.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozMjo1MlrOGZPIcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1OToyOFrOGZRnig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNTUwNA==", "bodyText": "Why not merge with getStudentsFromCourse?", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429115504", "createdAt": "2020-05-22T08:32:52Z", "author": {"login": "xpdavid"}, "path": "src/web/services/student.service.ts", "diffHunk": "@@ -124,4 +127,14 @@ export class StudentService {\n     const responseType: string = 'text';\n     return this.httpRequestService.get(ResourceEndpoints.STUDENTS_CSV, paramsMap, responseType);\n   }\n+\n+  /**\n+   * Returns a list of students enrolled in a course.\n+   */\n+  getStudentsEnrolledInCourse(queryParams: { courseId: string }): Observable<StudentListResults> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2665b58fff2fe72ac521feedcb6ec0683acc3f41"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzkxMg==", "bodyText": "I tried haha, as I mentioned in my comment the StudentListResults is not of Students type because of the difference in the way they refer to \"Teams\" and \"Sections\". I could try to standardise them but that would require extensive code rewrite in a lot of other components, might be worth doing in a separate issue?", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429117912", "createdAt": "2020-05-22T08:37:52Z", "author": {"login": "madanalogy"}, "path": "src/web/services/student.service.ts", "diffHunk": "@@ -124,4 +127,14 @@ export class StudentService {\n     const responseType: string = 'text';\n     return this.httpRequestService.get(ResourceEndpoints.STUDENTS_CSV, paramsMap, responseType);\n   }\n+\n+  /**\n+   * Returns a list of students enrolled in a course.\n+   */\n+  getStudentsEnrolledInCourse(queryParams: { courseId: string }): Observable<StudentListResults> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNTUwNA=="}, "originalCommit": {"oid": "2665b58fff2fe72ac521feedcb6ec0683acc3f41"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyMDk2MA==", "bodyText": "Let's do it in this PR. Even if you do not want to do it in this PR. We still need to address this: #10095 (comment)\nHere is the step:\n\nDelete type StudentListResults\nDelete type StudentAttributes and use Student instead\nFix code that turns to red.\n\nI hope you can see why we want to do this (instead of just creating a mapping from the data returned by API endpoint to the StudentListResults)", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429120960", "createdAt": "2020-05-22T08:44:34Z", "author": {"login": "xpdavid"}, "path": "src/web/services/student.service.ts", "diffHunk": "@@ -124,4 +127,14 @@ export class StudentService {\n     const responseType: string = 'text';\n     return this.httpRequestService.get(ResourceEndpoints.STUDENTS_CSV, paramsMap, responseType);\n   }\n+\n+  /**\n+   * Returns a list of students enrolled in a course.\n+   */\n+  getStudentsEnrolledInCourse(queryParams: { courseId: string }): Observable<StudentListResults> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNTUwNA=="}, "originalCommit": {"oid": "2665b58fff2fe72ac521feedcb6ec0683acc3f41"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1NjIzNA==", "bodyText": "I tried this at first but I encountered problems with the handsontable mapping (elaborated on in #10095 (comment)) but I googled a fix and looks like everything is working, manually verified :)", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429156234", "createdAt": "2020-05-22T09:59:28Z", "author": {"login": "madanalogy"}, "path": "src/web/services/student.service.ts", "diffHunk": "@@ -124,4 +127,14 @@ export class StudentService {\n     const responseType: string = 'text';\n     return this.httpRequestService.get(ResourceEndpoints.STUDENTS_CSV, paramsMap, responseType);\n   }\n+\n+  /**\n+   * Returns a list of students enrolled in a course.\n+   */\n+  getStudentsEnrolledInCourse(queryParams: { courseId: string }): Observable<StudentListResults> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNTUwNA=="}, "originalCommit": {"oid": "2665b58fff2fe72ac521feedcb6ec0683acc3f41"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU0MDMxOnYy", "diffSide": "RIGHT", "path": "src/web/services/student.service.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozNjo0OFrOGZPP5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozNjo0OFrOGZPP5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzQxMg==", "bodyText": "A note, the data type returned by /students from the backend is not of the type StudentListResults.", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429117412", "createdAt": "2020-05-22T08:36:48Z", "author": {"login": "xpdavid"}, "path": "src/web/services/student.service.ts", "diffHunk": "@@ -124,4 +127,14 @@ export class StudentService {\n     const responseType: string = 'text';\n     return this.httpRequestService.get(ResourceEndpoints.STUDENTS_CSV, paramsMap, responseType);\n   }\n+\n+  /**\n+   * Returns a list of students enrolled in a course.\n+   */\n+  getStudentsEnrolledInCourse(queryParams: { courseId: string }): Observable<StudentListResults> {\n+    const paramsMap: Record<string, string> = {\n+      courseid: queryParams.courseId,\n+    };\n+    return this.httpRequestService.get(ResourceEndpoints.STUDENTS, paramsMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2665b58fff2fe72ac521feedcb6ec0683acc3f41"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjgxNTE1OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDoxMjo0N1rOGZR-Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyNDozN1rOGZW75Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2MjAyMw==", "bodyText": "To keep the code simple, I think you can change the colHeaders instead.", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429162023", "createdAt": "2020-05-22T10:12:47Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "diffHunk": "@@ -277,16 +260,24 @@ export class InstructorCourseEnrollPageComponent implements OnInit {\n   /**\n    * Converts returned student list to a suitable format required by Handsontable.\n    */\n-  studentListDataToHandsontableData(studentsData: StudentAttributes[], handsontableColHeader: any[]): string[][] {\n+  studentListDataToHandsontableData(studentsData: Student[], handsontableColHeader: any[]): string[][] {\n     const headers: string[] = handsontableColHeader.map(this.unCapitalizeFirstLetter);\n-    return studentsData.map((student: StudentAttributes) => (headers.map(\n-        (header: string) => (student as any)[header])));\n+    return studentsData.map((student: Student) => (headers.map(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8bda7cb307d86b9b08936528305584182665741"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MzM2NQ==", "bodyText": "I think that might overly complicate it actually, since it will change the name of the table headers displayed to users, which will need more code to handle. I could give it a shot if you really want though just let me know", "url": "https://github.com/TEAMMATES/teammates/pull/10095#discussion_r429243365", "createdAt": "2020-05-22T13:24:37Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "diffHunk": "@@ -277,16 +260,24 @@ export class InstructorCourseEnrollPageComponent implements OnInit {\n   /**\n    * Converts returned student list to a suitable format required by Handsontable.\n    */\n-  studentListDataToHandsontableData(studentsData: StudentAttributes[], handsontableColHeader: any[]): string[][] {\n+  studentListDataToHandsontableData(studentsData: Student[], handsontableColHeader: any[]): string[][] {\n     const headers: string[] = handsontableColHeader.map(this.unCapitalizeFirstLetter);\n-    return studentsData.map((student: StudentAttributes) => (headers.map(\n-        (header: string) => (student as any)[header])));\n+    return studentsData.map((student: Student) => (headers.map(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2MjAyMw=="}, "originalCommit": {"oid": "c8bda7cb307d86b9b08936528305584182665741"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3991, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}