{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNTM2ODE0", "number": 10022, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODoyMDo1NVrOD0HS9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDoyODozMVrOD60OIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTcyMDg1OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/lnp/BaseLNPTestCase.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODoyMDo1NVrOGI5A7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNDowNDoxMVrOGPjdtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NTkxOA==", "bodyText": "Will this cause race condition if multiple LNP is run concurrently?", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r411975918", "createdAt": "2020-04-21T08:20:55Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/BaseLNPTestCase.java", "diffHunk": "@@ -213,14 +277,18 @@ protected void runJmeter(boolean shouldCreateJmxFile) throws IOException {\n         resultCollector.setFilename(resultsFile);\n         testPlan.add(testPlan.getArray()[0], resultCollector);\n \n-        // Run JMeter Test\n+        // Run Jmeter Test\n         jmeter.configure(testPlan);\n         jmeter.run();\n \n-        // TODO: As mentioned in the docs, good to fail the test if there is an Exception, or if the `success` value of\n-        //  requests is `false`. An example of when this occurs is if the JMeter test properties are not set or if `email`\n-        //  is used for logging in instead of `googleid`. Tests should fail if this assertion fails:\n-        //      assertTrue(resultsErrorRate < this.getAcceptableErrorRate());\n+        try {\n+            ReportGenerator reportGenerator = new ReportGenerator(resultsFile, null);\n+            reportGenerator.generate();\n+        } catch (ConfigurationException | GenerationException e) {\n+            log.warning(e.getMessage());\n+        }\n+\n+        renameStatisticsFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk0NDUxNQ==", "bodyText": "Are you referring to the renameStatisticsFile() method?", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r412944515", "createdAt": "2020-04-22T12:38:40Z", "author": {"login": "daekoon"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/BaseLNPTestCase.java", "diffHunk": "@@ -213,14 +277,18 @@ protected void runJmeter(boolean shouldCreateJmxFile) throws IOException {\n         resultCollector.setFilename(resultsFile);\n         testPlan.add(testPlan.getArray()[0], resultCollector);\n \n-        // Run JMeter Test\n+        // Run Jmeter Test\n         jmeter.configure(testPlan);\n         jmeter.run();\n \n-        // TODO: As mentioned in the docs, good to fail the test if there is an Exception, or if the `success` value of\n-        //  requests is `false`. An example of when this occurs is if the JMeter test properties are not set or if `email`\n-        //  is used for logging in instead of `googleid`. Tests should fail if this assertion fails:\n-        //      assertTrue(resultsErrorRate < this.getAcceptableErrorRate());\n+        try {\n+            ReportGenerator reportGenerator = new ReportGenerator(resultsFile, null);\n+            reportGenerator.generate();\n+        } catch (ConfigurationException | GenerationException e) {\n+            log.warning(e.getMessage());\n+        }\n+\n+        renameStatisticsFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NTkxOA=="}, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1OTkyNA==", "bodyText": "As they all output to file call Statistics.json?", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r413259924", "createdAt": "2020-04-22T19:29:15Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/BaseLNPTestCase.java", "diffHunk": "@@ -213,14 +277,18 @@ protected void runJmeter(boolean shouldCreateJmxFile) throws IOException {\n         resultCollector.setFilename(resultsFile);\n         testPlan.add(testPlan.getArray()[0], resultCollector);\n \n-        // Run JMeter Test\n+        // Run Jmeter Test\n         jmeter.configure(testPlan);\n         jmeter.run();\n \n-        // TODO: As mentioned in the docs, good to fail the test if there is an Exception, or if the `success` value of\n-        //  requests is `false`. An example of when this occurs is if the JMeter test properties are not set or if `email`\n-        //  is used for logging in instead of `googleid`. Tests should fail if this assertion fails:\n-        //      assertTrue(resultsErrorRate < this.getAcceptableErrorRate());\n+        try {\n+            ReportGenerator reportGenerator = new ReportGenerator(resultsFile, null);\n+            reportGenerator.generate();\n+        } catch (ConfigurationException | GenerationException e) {\n+            log.warning(e.getMessage());\n+        }\n+\n+        renameStatisticsFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NTkxOA=="}, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY3MDIwOQ==", "bodyText": "I don't think multiple LNP tests should be run concurrently. If that happens, the results won't be accurate since the load on the system is higher than what would be shown in the results.\nThat being said, to be safe, we can still look into whether the default statistics.json file can use a dynamically generated filename instead (probably needs support from the Jmeter API or the .properties config file).", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r413670209", "createdAt": "2020-04-23T09:42:43Z", "author": {"login": "amrut-prabhu"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/BaseLNPTestCase.java", "diffHunk": "@@ -213,14 +277,18 @@ protected void runJmeter(boolean shouldCreateJmxFile) throws IOException {\n         resultCollector.setFilename(resultsFile);\n         testPlan.add(testPlan.getArray()[0], resultCollector);\n \n-        // Run JMeter Test\n+        // Run Jmeter Test\n         jmeter.configure(testPlan);\n         jmeter.run();\n \n-        // TODO: As mentioned in the docs, good to fail the test if there is an Exception, or if the `success` value of\n-        //  requests is `false`. An example of when this occurs is if the JMeter test properties are not set or if `email`\n-        //  is used for logging in instead of `googleid`. Tests should fail if this assertion fails:\n-        //      assertTrue(resultsErrorRate < this.getAcceptableErrorRate());\n+        try {\n+            ReportGenerator reportGenerator = new ReportGenerator(resultsFile, null);\n+            reportGenerator.generate();\n+        } catch (ConfigurationException | GenerationException e) {\n+            log.warning(e.getMessage());\n+        }\n+\n+        renameStatisticsFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NTkxOA=="}, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA4MDc0Mg==", "bodyText": "That being said, to be safe, we can still look into whether the default statistics.json file can use a dynamically generated filename instead (probably needs support from the Jmeter API or the .properties config file).\n\nI think this is the correct why to tackle the problem regardless of whether we want to run it concurrently or not. Tests need to be Independent.", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r414080742", "createdAt": "2020-04-23T19:53:35Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/BaseLNPTestCase.java", "diffHunk": "@@ -213,14 +277,18 @@ protected void runJmeter(boolean shouldCreateJmxFile) throws IOException {\n         resultCollector.setFilename(resultsFile);\n         testPlan.add(testPlan.getArray()[0], resultCollector);\n \n-        // Run JMeter Test\n+        // Run Jmeter Test\n         jmeter.configure(testPlan);\n         jmeter.run();\n \n-        // TODO: As mentioned in the docs, good to fail the test if there is an Exception, or if the `success` value of\n-        //  requests is `false`. An example of when this occurs is if the JMeter test properties are not set or if `email`\n-        //  is used for logging in instead of `googleid`. Tests should fail if this assertion fails:\n-        //      assertTrue(resultsErrorRate < this.getAcceptableErrorRate());\n+        try {\n+            ReportGenerator reportGenerator = new ReportGenerator(resultsFile, null);\n+            reportGenerator.generate();\n+        } catch (ConfigurationException | GenerationException e) {\n+            log.warning(e.getMessage());\n+        }\n+\n+        renameStatisticsFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NTkxOA=="}, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU1MTk5OQ==", "bodyText": "Added timestamps to the temp files generated (and the statistics file) to avoid race conditions when running two tests concurrently, and additional functionality to make the tests remove old results (can be specified)", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r416551999", "createdAt": "2020-04-28T11:54:15Z", "author": {"login": "daekoon"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/BaseLNPTestCase.java", "diffHunk": "@@ -213,14 +277,18 @@ protected void runJmeter(boolean shouldCreateJmxFile) throws IOException {\n         resultCollector.setFilename(resultsFile);\n         testPlan.add(testPlan.getArray()[0], resultCollector);\n \n-        // Run JMeter Test\n+        // Run Jmeter Test\n         jmeter.configure(testPlan);\n         jmeter.run();\n \n-        // TODO: As mentioned in the docs, good to fail the test if there is an Exception, or if the `success` value of\n-        //  requests is `false`. An example of when this occurs is if the JMeter test properties are not set or if `email`\n-        //  is used for logging in instead of `googleid`. Tests should fail if this assertion fails:\n-        //      assertTrue(resultsErrorRate < this.getAcceptableErrorRate());\n+        try {\n+            ReportGenerator reportGenerator = new ReportGenerator(resultsFile, null);\n+            reportGenerator.generate();\n+        } catch (ConfigurationException | GenerationException e) {\n+            log.warning(e.getMessage());\n+        }\n+\n+        renameStatisticsFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NTkxOA=="}, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc2ODA1OA==", "bodyText": "Why we still have static filename here?\nhttps://github.com/TEAMMATES/teammates/pull/10022/files#diff-6509e6ed4f2a3ea02c0d46c61b1ff10fR203", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r417768058", "createdAt": "2020-04-30T05:50:52Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/BaseLNPTestCase.java", "diffHunk": "@@ -213,14 +277,18 @@ protected void runJmeter(boolean shouldCreateJmxFile) throws IOException {\n         resultCollector.setFilename(resultsFile);\n         testPlan.add(testPlan.getArray()[0], resultCollector);\n \n-        // Run JMeter Test\n+        // Run Jmeter Test\n         jmeter.configure(testPlan);\n         jmeter.run();\n \n-        // TODO: As mentioned in the docs, good to fail the test if there is an Exception, or if the `success` value of\n-        //  requests is `false`. An example of when this occurs is if the JMeter test properties are not set or if `email`\n-        //  is used for logging in instead of `googleid`. Tests should fail if this assertion fails:\n-        //      assertTrue(resultsErrorRate < this.getAcceptableErrorRate());\n+        try {\n+            ReportGenerator reportGenerator = new ReportGenerator(resultsFile, null);\n+            reportGenerator.generate();\n+        } catch (ConfigurationException | GenerationException e) {\n+            log.warning(e.getMessage());\n+        }\n+\n+        renameStatisticsFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NTkxOA=="}, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk2Mjg2OA==", "bodyText": "Running the ReportGenerator.generate() makes the ReportGenerator class create an statistics.json file at the predefined path (LNP results folder in this case, predefined in reportgenerator.properties)\nThere seems to be no option to change the name of the statistics file generated from the ReportGenerator. (Checked ReportGenerator class, reportgenerator.properties file, ResultCollector class, ExporterConfiguration class and various API). Which leaves us with the next best option, to rename the generated statistics.json file.\nI believe that the potential race condition caused by this static filename will be minimal. This file only gets generated once the LnP test is done during the report generation (doesn't take long), and then gets immediately renamed, so the duration for which this file is vulnuerable to race condition is minimal.", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r418962868", "createdAt": "2020-05-02T14:04:11Z", "author": {"login": "daekoon"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/BaseLNPTestCase.java", "diffHunk": "@@ -213,14 +277,18 @@ protected void runJmeter(boolean shouldCreateJmxFile) throws IOException {\n         resultCollector.setFilename(resultsFile);\n         testPlan.add(testPlan.getArray()[0], resultCollector);\n \n-        // Run JMeter Test\n+        // Run Jmeter Test\n         jmeter.configure(testPlan);\n         jmeter.run();\n \n-        // TODO: As mentioned in the docs, good to fail the test if there is an Exception, or if the `success` value of\n-        //  requests is `false`. An example of when this occurs is if the JMeter test properties are not set or if `email`\n-        //  is used for logging in instead of `googleid`. Tests should fail if this assertion fails:\n-        //      assertTrue(resultsErrorRate < this.getAcceptableErrorRate());\n+        try {\n+            ReportGenerator reportGenerator = new ReportGenerator(resultsFile, null);\n+            reportGenerator.generate();\n+        } catch (ConfigurationException | GenerationException e) {\n+            log.warning(e.getMessage());\n+        }\n+\n+        renameStatisticsFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NTkxOA=="}, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTcyOTEyOnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/lnp/FeedbackSessionSubmitLNPTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODoyMjozNlrOGI5F-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDowOToxNlrOGNV70w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NzIxMQ==", "bodyText": "I think a better approach is to create a LNPSpecificiation somewhat class to hold the limit and put into the super class of the LNPTest.", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r411977211", "createdAt": "2020-04-21T08:22:36Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/FeedbackSessionSubmitLNPTest.java", "diffHunk": "@@ -252,6 +252,16 @@ protected ListedHashTree getLnpTestPlan() {\n         return testPlan;\n     }\n \n+    @Override\n+    protected double getErrorRateLimit() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY0NDA1MQ==", "bodyText": "Moved logic for specification and result verification to LNPSpecification class.", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r416644051", "createdAt": "2020-04-28T14:09:16Z", "author": {"login": "daekoon"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/FeedbackSessionSubmitLNPTest.java", "diffHunk": "@@ -252,6 +252,16 @@ protected ListedHashTree getLnpTestPlan() {\n         return testPlan;\n     }\n \n+    @Override\n+    protected double getErrorRateLimit() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3NzIxMQ=="}, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTczOTIzOnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/util/LNPResultsStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODoyNDo0M1rOGI5MAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODoyNDo0M1rOGI5MAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk3ODc1NQ==", "bodyText": "Continue from my point, by SRP principle, Statistics should not be responsible to check limit.", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r411978755", "createdAt": "2020-04-21T08:24:43Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/util/LNPResultsStatistics.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package teammates.e2e.util;\n+\n+import org.testng.Reporter;\n+\n+/**\n+ * Represents the L&P test results statistics.\n+ */\n+public class LNPResultsStatistics {\n+\n+    private double errorPct;\n+    private double meanResTime;\n+    private double pct1ResTime; // 90th percentile\n+    private double throughput;\n+    private int errorCount;\n+    private int sampleCount;\n+    private String resultsErrorMessage = \"\";\n+\n+    /**\n+     * Verify the LNP results statistics with the specified threshold.\n+     */\n+    public void verifyLnpTestSuccess(double errorRateLimit, double meanResTimeLimit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac169826603d7401048750e3974056313c806629"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTk5NTg3OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/util/LNPSpecification.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDoyODozMVrOGS3Eng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMzowNDozMVrOGTEFhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQyOTg1NA==", "bodyText": "It would be better to use builder pattern to construct a specification.", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r422429854", "createdAt": "2020-05-09T00:28:31Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/util/LNPSpecification.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package teammates.e2e.util;\n+\n+/**\n+ * Stores the specifications for a LNP test, and verifies whether the results meet the criteria.\n+ */\n+public class LNPSpecification {\n+\n+    private double errorRateLimit;\n+    private double meanResTimeLimit;\n+    private String resultsErrorMessage = \"\";\n+\n+    /**\n+     * Create a specification class with the specified limits.\n+     * @param errorRateLimit Maximum allowable threshold for the percentage of failed requests\n+     *                       (0 to 100) to the test endpoint.\n+     * @param meanResTimeLimit Maximum allowable threshold for the mean response time\n+     *                         (in seconds) for the test endpoint.\n+     */\n+    public LNPSpecification(double errorRateLimit, double meanResTimeLimit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15713d281b214305c969ad748867c36e20c086c6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY0MzA3Ng==", "bodyText": "I've added in a comment regarding this for future reference.", "url": "https://github.com/TEAMMATES/teammates/pull/10022#discussion_r422643076", "createdAt": "2020-05-10T13:04:31Z", "author": {"login": "daekoon"}, "path": "src/e2e/java/teammates/e2e/util/LNPSpecification.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package teammates.e2e.util;\n+\n+/**\n+ * Stores the specifications for a LNP test, and verifies whether the results meet the criteria.\n+ */\n+public class LNPSpecification {\n+\n+    private double errorRateLimit;\n+    private double meanResTimeLimit;\n+    private String resultsErrorMessage = \"\";\n+\n+    /**\n+     * Create a specification class with the specified limits.\n+     * @param errorRateLimit Maximum allowable threshold for the percentage of failed requests\n+     *                       (0 to 100) to the test endpoint.\n+     * @param meanResTimeLimit Maximum allowable threshold for the mean response time\n+     *                         (in seconds) for the test endpoint.\n+     */\n+    public LNPSpecification(double errorRateLimit, double meanResTimeLimit) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQyOTg1NA=="}, "originalCommit": {"oid": "15713d281b214305c969ad748867c36e20c086c6"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3947, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}