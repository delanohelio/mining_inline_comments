{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTkxNzY3", "number": 10282, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMzoyOTo0M1rOEL6ciw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1MDozNlrOEOgQrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTI3MzcxOnYy", "diffSide": "RIGHT", "path": "src/web/services/search.service.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMzoyOTo0M1rOGtt8BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNTo1Njo1MFrOGtwGbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5MTc0OA==", "bodyText": "Although the data has changed shape, we should still have a test for sections to ensure that the number of sections matches.", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r450591748", "createdAt": "2020-07-07T03:29:43Z", "author": {"login": "t-cheepeng"}, "path": "src/web/services/search.service.spec.ts", "diffHunk": "@@ -179,37 +179,26 @@ describe('SearchService', () => {\n     );\n   });\n \n-  it('should parse students into courses with sections correctly', () => {\n+  it('should parse students into courses correctly', () => {\n     const { students }: { students: Student[] } = mockStudents;\n \n     // Number of courses should match\n-    expect(coursesWithSections.length).toEqual(\n+    expect(coursesWithStudents.length).toEqual(\n       Array.from(new Set(students.map((s: Student) => s.courseId))).length,\n     );\n \n-    // Number of sections in a course should match\n+    // Number of students in a course should match\n     expect(\n-      coursesWithSections.filter((t: SearchStudentsTable) => t.courseId === students[0].courseId)[0]\n-        .sections.length,\n+      coursesWithStudents.filter((t: SearchStudentsListRowTable) => t.courseId === students[0].courseId)[0]\n+        .students.length,\n     ).toEqual(\n       Array.from(\n         new Set(\n           students\n-            .filter((s: Student) => s.courseId === students[0].courseId)\n-            .map((s: Student) => s.sectionName),\n+            .filter((s: Student) => s.courseId === students[0].courseId),\n         ),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3601d5cd5f987bfa61ae8258b9e12b003ce0ee46"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYyNzE4MQ==", "bodyText": "Ok, I will fix it soon! Thanks.", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r450627181", "createdAt": "2020-07-07T05:56:50Z", "author": {"login": "edwardkang0925"}, "path": "src/web/services/search.service.spec.ts", "diffHunk": "@@ -179,37 +179,26 @@ describe('SearchService', () => {\n     );\n   });\n \n-  it('should parse students into courses with sections correctly', () => {\n+  it('should parse students into courses correctly', () => {\n     const { students }: { students: Student[] } = mockStudents;\n \n     // Number of courses should match\n-    expect(coursesWithSections.length).toEqual(\n+    expect(coursesWithStudents.length).toEqual(\n       Array.from(new Set(students.map((s: Student) => s.courseId))).length,\n     );\n \n-    // Number of sections in a course should match\n+    // Number of students in a course should match\n     expect(\n-      coursesWithSections.filter((t: SearchStudentsTable) => t.courseId === students[0].courseId)[0]\n-        .sections.length,\n+      coursesWithStudents.filter((t: SearchStudentsListRowTable) => t.courseId === students[0].courseId)[0]\n+        .students.length,\n     ).toEqual(\n       Array.from(\n         new Set(\n           students\n-            .filter((s: Student) => s.courseId === students[0].courseId)\n-            .map((s: Student) => s.sectionName),\n+            .filter((s: Student) => s.courseId === students[0].courseId),\n         ),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5MTc0OA=="}, "originalCommit": {"oid": "3601d5cd5f987bfa61ae8258b9e12b003ce0ee46"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTI3NTAzOnYy", "diffSide": "LEFT", "path": "src/web/services/search.service.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMzozMDoxOFrOGtt8yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMzozMDoxOFrOGtt8yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5MTk0NA==", "bodyText": "Same here. Should rewrite the test to check for number of students in a section instead of removing it", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r450591944", "createdAt": "2020-07-07T03:30:18Z", "author": {"login": "t-cheepeng"}, "path": "src/web/services/search.service.spec.ts", "diffHunk": "@@ -179,37 +179,26 @@ describe('SearchService', () => {\n     );\n   });\n \n-  it('should parse students into courses with sections correctly', () => {\n+  it('should parse students into courses correctly', () => {\n     const { students }: { students: Student[] } = mockStudents;\n \n     // Number of courses should match\n-    expect(coursesWithSections.length).toEqual(\n+    expect(coursesWithStudents.length).toEqual(\n       Array.from(new Set(students.map((s: Student) => s.courseId))).length,\n     );\n \n-    // Number of sections in a course should match\n+    // Number of students in a course should match\n     expect(\n-      coursesWithSections.filter((t: SearchStudentsTable) => t.courseId === students[0].courseId)[0]\n-        .sections.length,\n+      coursesWithStudents.filter((t: SearchStudentsListRowTable) => t.courseId === students[0].courseId)[0]\n+        .students.length,\n     ).toEqual(\n       Array.from(\n         new Set(\n           students\n-            .filter((s: Student) => s.courseId === students[0].courseId)\n-            .map((s: Student) => s.sectionName),\n+            .filter((s: Student) => s.courseId === students[0].courseId),\n         ),\n       ).length,\n     );\n-\n-    // Number of students in a section should match\n-    expect(\n-      coursesWithSections\n-        .filter((t: SearchStudentsTable) => t.courseId === students[0].courseId)[0]\n-        .sections.filter((s: StudentListSectionData) => s.sectionName === students[0].sectionName)[0]\n-        .students.length,\n-    ).toEqual(\n-      students.filter((s: Student) => s.sectionName === students[0].sectionName).length,\n-    );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3601d5cd5f987bfa61ae8258b9e12b003ce0ee46"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjU5NjY2OnYy", "diffSide": "RIGHT", "path": "src/web/services/search.service.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMDoyNToyNVrOGuOVZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzozMzo1NlrOGvbIPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyMjUzNA==", "bodyText": "It is too expensive to load section for every student. Either you want to group them first to load privilege for one section or use some cache variable to keep the privilege already loaded. Maybe @t-cheepeng can help.", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r451122534", "createdAt": "2020-07-07T20:25:25Z", "author": {"login": "xpdavid"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -167,17 +155,17 @@ export class SearchService {\n   }\n \n   getPrivileges(\n-    coursesWithSections: SearchStudentsTable[],\n+    coursesWithStudents: SearchStudentsListRowTable[],\n   ): Observable<InstructorPrivilege[]> {\n-    if (coursesWithSections.length === 0) {\n+    if (coursesWithStudents.length === 0) {\n       return of([]);\n     }\n     return forkJoin(\n-      coursesWithSections.map((course: SearchStudentsTable) => {\n-        return course.sections.map((section: StudentListSectionData) => {\n+      coursesWithStudents.map((course: SearchStudentsListRowTable) => {\n+        return course.students.map((studentModel: StudentListRowModel) => {\n           return this.instructorService.loadInstructorPrivilege({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b1d1fb735bb4b16ff97648b0000c87f193eaae3"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1ODU3NQ==", "bodyText": "I think it would be easier to group the students in the same section together then load the privileges.\n@edwardkang0925 Please take note and try to make the changes for this! If you need any help, please don't hesitate to ask", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r451258575", "createdAt": "2020-07-08T03:17:59Z", "author": {"login": "t-cheepeng"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -167,17 +155,17 @@ export class SearchService {\n   }\n \n   getPrivileges(\n-    coursesWithSections: SearchStudentsTable[],\n+    coursesWithStudents: SearchStudentsListRowTable[],\n   ): Observable<InstructorPrivilege[]> {\n-    if (coursesWithSections.length === 0) {\n+    if (coursesWithStudents.length === 0) {\n       return of([]);\n     }\n     return forkJoin(\n-      coursesWithSections.map((course: SearchStudentsTable) => {\n-        return course.sections.map((section: StudentListSectionData) => {\n+      coursesWithStudents.map((course: SearchStudentsListRowTable) => {\n+        return course.students.map((studentModel: StudentListRowModel) => {\n           return this.instructorService.loadInstructorPrivilege({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyMjUzNA=="}, "originalCommit": {"oid": "2b1d1fb735bb4b16ff97648b0000c87f193eaae3"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwNTg5Ng==", "bodyText": "@t-cheepeng I will work on it and ask question if I get stuck. Thank you!", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r452305896", "createdAt": "2020-07-09T15:31:43Z", "author": {"login": "edwardkang0925"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -167,17 +155,17 @@ export class SearchService {\n   }\n \n   getPrivileges(\n-    coursesWithSections: SearchStudentsTable[],\n+    coursesWithStudents: SearchStudentsListRowTable[],\n   ): Observable<InstructorPrivilege[]> {\n-    if (coursesWithSections.length === 0) {\n+    if (coursesWithStudents.length === 0) {\n       return of([]);\n     }\n     return forkJoin(\n-      coursesWithSections.map((course: SearchStudentsTable) => {\n-        return course.sections.map((section: StudentListSectionData) => {\n+      coursesWithStudents.map((course: SearchStudentsListRowTable) => {\n+        return course.students.map((studentModel: StudentListRowModel) => {\n           return this.instructorService.loadInstructorPrivilege({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyMjUzNA=="}, "originalCommit": {"oid": "2b1d1fb735bb4b16ff97648b0000c87f193eaae3"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4MDczMg==", "bodyText": "@t-cheepeng  I tried to group the students with the same section name, but I couldn't come up with an efficient grouping method, so I used double for-loop to process the data. While doing so, I used a cache variable to keep distinct privileges of each course and assign the cached privileges to each student enrolled in the same course with same section. By doing so, I think I prevented loading duplicated privileges from the back-end. However, I am not confident whether this approach slows down the performance without my acknowledgment. Could you review my modification? Thank you", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r452380732", "createdAt": "2020-07-09T17:33:56Z", "author": {"login": "edwardkang0925"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -167,17 +155,17 @@ export class SearchService {\n   }\n \n   getPrivileges(\n-    coursesWithSections: SearchStudentsTable[],\n+    coursesWithStudents: SearchStudentsListRowTable[],\n   ): Observable<InstructorPrivilege[]> {\n-    if (coursesWithSections.length === 0) {\n+    if (coursesWithStudents.length === 0) {\n       return of([]);\n     }\n     return forkJoin(\n-      coursesWithSections.map((course: SearchStudentsTable) => {\n-        return course.sections.map((section: StudentListSectionData) => {\n+      coursesWithStudents.map((course: SearchStudentsListRowTable) => {\n+        return course.students.map((studentModel: StudentListRowModel) => {\n           return this.instructorService.loadInstructorPrivilege({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyMjUzNA=="}, "originalCommit": {"oid": "2b1d1fb735bb4b16ff97648b0000c87f193eaae3"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzE2ODMwOnYy", "diffSide": "RIGHT", "path": "src/web/services/search.service.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToxNzo1MlrOGvzotw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMzoxNDozMFrOGwaIzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4MjI2Mw==", "bodyText": "@edwardkang0925 Try not to use any[] as the type. You should explicitly state the variable type where possible", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r452782263", "createdAt": "2020-07-10T11:17:52Z", "author": {"login": "t-cheepeng"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -169,47 +157,44 @@ export class SearchService {\n   }\n \n   getPrivileges(\n-    coursesWithSections: SearchStudentsTable[],\n+    coursesWithStudents: SearchStudentsListRowTable[],\n   ): Observable<InstructorPrivilege[]> {\n-    if (coursesWithSections.length === 0) {\n+    if (coursesWithStudents.length === 0) {\n       return of([]);\n     }\n-    return forkJoin(\n-      coursesWithSections.map((course: SearchStudentsTable) => {\n-        return course.sections.map((section: StudentListSectionData) => {\n-          return this.instructorService.loadInstructorPrivilege({\n-            courseId: course.courseId,\n-            sectionName: section.sectionName,\n-          });\n-        });\n-      }).reduce(\n-        (acc: Observable<InstructorPrivilege>[], val: Observable<InstructorPrivilege>[]) =>\n-        acc.concat(val),\n-        [],\n-      ),\n-    );\n+    const privileges: any[] = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12cf274905823a99aec82258bc44e2f0b751af9"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMzOTQzNg==", "bodyText": "Hi, I have reflected your feedback on my new commit. I also have another version that uses chaining method (forEach) rather than the for-loops. I think using forEach is easier to read, but I would like to ask for your opinion.\nIn case you want to see the new version, here is a screenshot of it.\nIf you think this is better, I will push it. Thank you!", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r453339436", "createdAt": "2020-07-12T16:56:16Z", "author": {"login": "edwardkang0925"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -169,47 +157,44 @@ export class SearchService {\n   }\n \n   getPrivileges(\n-    coursesWithSections: SearchStudentsTable[],\n+    coursesWithStudents: SearchStudentsListRowTable[],\n   ): Observable<InstructorPrivilege[]> {\n-    if (coursesWithSections.length === 0) {\n+    if (coursesWithStudents.length === 0) {\n       return of([]);\n     }\n-    return forkJoin(\n-      coursesWithSections.map((course: SearchStudentsTable) => {\n-        return course.sections.map((section: StudentListSectionData) => {\n-          return this.instructorService.loadInstructorPrivilege({\n-            courseId: course.courseId,\n-            sectionName: section.sectionName,\n-          });\n-        });\n-      }).reduce(\n-        (acc: Observable<InstructorPrivilege>[], val: Observable<InstructorPrivilege>[]) =>\n-        acc.concat(val),\n-        [],\n-      ),\n-    );\n+    const privileges: any[] = [];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4MjI2Mw=="}, "originalCommit": {"oid": "c12cf274905823a99aec82258bc44e2f0b751af9"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxMzA2OQ==", "bodyText": "Yes, this version is easier to read. You can go ahead with this version instead", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r453413069", "createdAt": "2020-07-13T03:14:30Z", "author": {"login": "t-cheepeng"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -169,47 +157,44 @@ export class SearchService {\n   }\n \n   getPrivileges(\n-    coursesWithSections: SearchStudentsTable[],\n+    coursesWithStudents: SearchStudentsListRowTable[],\n   ): Observable<InstructorPrivilege[]> {\n-    if (coursesWithSections.length === 0) {\n+    if (coursesWithStudents.length === 0) {\n       return of([]);\n     }\n-    return forkJoin(\n-      coursesWithSections.map((course: SearchStudentsTable) => {\n-        return course.sections.map((section: StudentListSectionData) => {\n-          return this.instructorService.loadInstructorPrivilege({\n-            courseId: course.courseId,\n-            sectionName: section.sectionName,\n-          });\n-        });\n-      }).reduce(\n-        (acc: Observable<InstructorPrivilege>[], val: Observable<InstructorPrivilege>[]) =>\n-        acc.concat(val),\n-        [],\n-      ),\n-    );\n+    const privileges: any[] = [];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4MjI2Mw=="}, "originalCommit": {"oid": "c12cf274905823a99aec82258bc44e2f0b751af9"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzE4NjY4OnYy", "diffSide": "RIGHT", "path": "src/web/services/search.service.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToyNTowMlrOGvzz0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToyNTowMlrOGvzz0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4NTEwNg==", "bodyText": "You can probably use a Record<string, Observable<InstructorPrivilege>> to make things faster. Map from section name to the observable.", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r452785106", "createdAt": "2020-07-10T11:25:02Z", "author": {"login": "t-cheepeng"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -169,47 +157,44 @@ export class SearchService {\n   }\n \n   getPrivileges(\n-    coursesWithSections: SearchStudentsTable[],\n+    coursesWithStudents: SearchStudentsListRowTable[],\n   ): Observable<InstructorPrivilege[]> {\n-    if (coursesWithSections.length === 0) {\n+    if (coursesWithStudents.length === 0) {\n       return of([]);\n     }\n-    return forkJoin(\n-      coursesWithSections.map((course: SearchStudentsTable) => {\n-        return course.sections.map((section: StudentListSectionData) => {\n-          return this.instructorService.loadInstructorPrivilege({\n-            courseId: course.courseId,\n-            sectionName: section.sectionName,\n-          });\n-        });\n-      }).reduce(\n-        (acc: Observable<InstructorPrivilege>[], val: Observable<InstructorPrivilege>[]) =>\n-        acc.concat(val),\n-        [],\n-      ),\n-    );\n+    const privileges: any[] = [];\n+    for (const course of coursesWithStudents) {\n+      const distinctSections: string[] = Array.from(\n+        new Set(course.students.map((studentModel: StudentListRowModel) => studentModel.student.sectionName)));\n+      const instructorPrivileges: Observable<InstructorPrivilege>[] = distinctSections.map((section: string) =>\n+        this.instructorService.loadInstructorPrivilege({ courseId: course.courseId, sectionName: section }));\n+      for (const studentModel of course.students) {\n+        privileges.push(instructorPrivileges[distinctSections.indexOf(studentModel.student.sectionName)]);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12cf274905823a99aec82258bc44e2f0b751af9"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjQ0MDc2OnYy", "diffSide": "RIGHT", "path": "src/web/services/search.service.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1MDozNlrOGxsQ8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1MDozNlrOGxsQ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1ODY0MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/10282#discussion_r454758641", "createdAt": "2020-07-15T02:50:36Z", "author": {"login": "xpdavid"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -169,47 +157,48 @@ export class SearchService {\n   }\n \n   getPrivileges(\n-    coursesWithSections: SearchStudentsTable[],\n+    coursesWithStudents: SearchStudentsListRowTable[],\n   ): Observable<InstructorPrivilege[]> {\n-    if (coursesWithSections.length === 0) {\n+    if (coursesWithStudents.length === 0) {\n       return of([]);\n     }\n-    return forkJoin(\n-      coursesWithSections.map((course: SearchStudentsTable) => {\n-        return course.sections.map((section: StudentListSectionData) => {\n-          return this.instructorService.loadInstructorPrivilege({\n-            courseId: course.courseId,\n-            sectionName: section.sectionName,\n-          });\n-        });\n-      }).reduce(\n-        (acc: Observable<InstructorPrivilege>[], val: Observable<InstructorPrivilege>[]) =>\n-        acc.concat(val),\n-        [],\n-      ),\n-    );\n+    const privileges: Observable<InstructorPrivilege>[] = [];\n+    coursesWithStudents.forEach((course: SearchStudentsListRowTable) => {\n+      const sectionToPrivileges: Record<string, Observable<InstructorPrivilege>> = {};\n+      Array.from(\n+        new Set(course.students.map((studentModel: StudentListRowModel) => studentModel.student.sectionName)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac081a8095791719ea6493e7838beeacd383bf6d"}, "originalPosition": 113}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3590, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}