{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NjY2MTUy", "number": 9990, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMToyNjowNFrODqnP8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMzozMzozMVrODvYj2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDA5ODQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMToyNjowNVrOF6d_pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjozODozOVrOF7NutA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1MzE1OQ==", "bodyText": "Why do we need institute  and courseIdToInstructorGoogleIdMap?\nAgain, we have already violated the principle that StudentData.java should only contains information related to a student. institute is technically yes but definitely not courseIdToInstructorGoogleIdMap/", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r396853159", "createdAt": "2020-03-24T01:26:05Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -19,6 +21,12 @@\n     private String lastName;\n     @Nullable\n     private String comments;\n+    @Nullable\n+    private String key;\n+    @Nullable\n+    private String institute;\n+    @Nullable\n+    private Map<String, String> courseIdToInstructorGoogleIdMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ee3b0f3d99e59890a6442450143a347551188f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE1MjUwNQ==", "bodyText": "Yea my bad, we could just make a call on front end side for all courses. For institute however, I could not find any endpoint through which I could get institute, so i included it here. wdyt?", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r397152505", "createdAt": "2020-03-24T13:30:53Z", "author": {"login": "hcwong"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -19,6 +21,12 @@\n     private String lastName;\n     @Nullable\n     private String comments;\n+    @Nullable\n+    private String key;\n+    @Nullable\n+    private String institute;\n+    @Nullable\n+    private Map<String, String> courseIdToInstructorGoogleIdMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1MzE1OQ=="}, "originalCommit": {"oid": "f4ee3b0f3d99e59890a6442450143a347551188f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQxMjYzNg==", "bodyText": "Why do we need institute? The currently implementation is a bit expensive especially for the for each loop.", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r397412636", "createdAt": "2020-03-24T19:37:51Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -19,6 +21,12 @@\n     private String lastName;\n     @Nullable\n     private String comments;\n+    @Nullable\n+    private String key;\n+    @Nullable\n+    private String institute;\n+    @Nullable\n+    private Map<String, String> courseIdToInstructorGoogleIdMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1MzE1OQ=="}, "originalCommit": {"oid": "f4ee3b0f3d99e59890a6442450143a347551188f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2ODE3OQ==", "bodyText": "I included it to match the current object being returned by the Admin endpoint, which has institute in it", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r397568179", "createdAt": "2020-03-25T02:04:06Z", "author": {"login": "hcwong"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -19,6 +21,12 @@\n     private String lastName;\n     @Nullable\n     private String comments;\n+    @Nullable\n+    private String key;\n+    @Nullable\n+    private String institute;\n+    @Nullable\n+    private Map<String, String> courseIdToInstructorGoogleIdMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1MzE1OQ=="}, "originalCommit": {"oid": "f4ee3b0f3d99e59890a6442450143a347551188f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2OTExNg==", "bodyText": "I think you should not consider \"what the old endpoint will return\". Rather, you should try to answer \"whether I need the data or not\".", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r397569116", "createdAt": "2020-03-25T02:08:07Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -19,6 +21,12 @@\n     private String lastName;\n     @Nullable\n     private String comments;\n+    @Nullable\n+    private String key;\n+    @Nullable\n+    private String institute;\n+    @Nullable\n+    private Map<String, String> courseIdToInstructorGoogleIdMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1MzE1OQ=="}, "originalCommit": {"oid": "f4ee3b0f3d99e59890a6442450143a347551188f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3MzQwNA==", "bodyText": "Cool, that actually makes things easier for the search service \ud83d\ude06", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r397573404", "createdAt": "2020-03-25T02:24:19Z", "author": {"login": "hcwong"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -19,6 +21,12 @@\n     private String lastName;\n     @Nullable\n     private String comments;\n+    @Nullable\n+    private String key;\n+    @Nullable\n+    private String institute;\n+    @Nullable\n+    private Map<String, String> courseIdToInstructorGoogleIdMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1MzE1OQ=="}, "originalCommit": {"oid": "f4ee3b0f3d99e59890a6442450143a347551188f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNTI1Mg==", "bodyText": "Hmm, sorry, will include institute because it is being used on admin-search-page.html, but will cut whatever i can cut from the new endpoint", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r397635252", "createdAt": "2020-03-25T06:38:39Z", "author": {"login": "hcwong"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -19,6 +21,12 @@\n     private String lastName;\n     @Nullable\n     private String comments;\n+    @Nullable\n+    private String key;\n+    @Nullable\n+    private String institute;\n+    @Nullable\n+    private Map<String, String> courseIdToInstructorGoogleIdMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1MzE1OQ=="}, "originalCommit": {"oid": "f4ee3b0f3d99e59890a6442450143a347551188f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODc5MjU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwODo0MDowM1rOF9PwxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDoxMzo0MVrOF9ZDbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NTcwMQ==", "bodyText": "I think we might want to improve this?\nIterating the whole array to find the corresponding element is not really attracting.", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r399765701", "createdAt": "2020-03-29T08:40:03Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -89,6 +106,16 @@ public void setJoinState(JoinState joinState) {\n         this.joinState = joinState;\n     }\n \n+    public void setKey(List<StudentAttributes> studentAttributes) {\n+        this.key = StringHelper.encrypt(studentAttributes.stream()\n+                .filter((StudentAttributes s) -> s.getGoogleId().equals(this.googleId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2583b25cafc9a34b00658e780476f33aa90bdae7"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgwNjg3Ng==", "bodyText": "Hey Xiao Pu,\nI think there were two alternatives I considered when doing this.\nFirst, is to put the key generation inside the constructor. However, this will place the burden of hiding the key on the developer. Since Teammates has many contributors, I opted not to do this as people who use StudentsData in the future may not be aware of this and thus send the key.\nYea, theres a runtime issue, but I think this should be fine as its Java, so it should run faster and because the performance bottleneck is at the frontend side.\nWhat do you think?", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r399806876", "createdAt": "2020-03-29T14:39:20Z", "author": {"login": "hcwong"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -89,6 +106,16 @@ public void setJoinState(JoinState joinState) {\n         this.joinState = joinState;\n     }\n \n+    public void setKey(List<StudentAttributes> studentAttributes) {\n+        this.key = StringHelper.encrypt(studentAttributes.stream()\n+                .filter((StudentAttributes s) -> s.getGoogleId().equals(this.googleId))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NTcwMQ=="}, "originalCommit": {"oid": "2583b25cafc9a34b00658e780476f33aa90bdae7"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0MDk3NQ==", "bodyText": "since Teammates has many contributors, I opted not to do this as people who use StudentsData in the future may not be aware of this and thus send the key.\n\nI don't agree with this as RESTfuL endpoints are enforced by resources. Student is a resource and the only two places till now is search for the resource or get the resource directly.\nDespite this, there is a still a way to do this\nstudentsData = new StudentsData();\nList<StudentData> studentDataList = new ArrayList<>();\nfor (StudentAttributes student : studentAttributesList) {\n    // call constructor\n    // generate key depends on access control\n}\nstudentsData.setStudents(studentDataList)", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r399840975", "createdAt": "2020-03-29T19:20:47Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -89,6 +106,16 @@ public void setJoinState(JoinState joinState) {\n         this.joinState = joinState;\n     }\n \n+    public void setKey(List<StudentAttributes> studentAttributes) {\n+        this.key = StringHelper.encrypt(studentAttributes.stream()\n+                .filter((StudentAttributes s) -> s.getGoogleId().equals(this.googleId))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NTcwMQ=="}, "originalCommit": {"oid": "2583b25cafc9a34b00658e780476f33aa90bdae7"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzkzNA==", "bodyText": "Hey Xiao Pu, that is a fair point about the two places thing. Will change \ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r399917934", "createdAt": "2020-03-30T04:13:41Z", "author": {"login": "hcwong"}, "path": "src/main/java/teammates/ui/webapi/output/StudentData.java", "diffHunk": "@@ -89,6 +106,16 @@ public void setJoinState(JoinState joinState) {\n         this.joinState = joinState;\n     }\n \n+    public void setKey(List<StudentAttributes> studentAttributes) {\n+        this.key = StringHelper.encrypt(studentAttributes.stream()\n+                .filter((StudentAttributes s) -> s.getGoogleId().equals(this.googleId))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NTcwMQ=="}, "originalCommit": {"oid": "2583b25cafc9a34b00658e780476f33aa90bdae7"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDM1MzQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/output/StudentsData.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMzo0OTowN1rOGA8hlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNToxNzo0MFrOGBA2xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NDgyMA==", "bodyText": "Since it doesn't make sense to have a StudentsData object with no students, do you think we can make this constructor take List<StudentData> as an argument? Then we can leave students as final and remove the setter.", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r403644820", "createdAt": "2020-04-05T03:49:07Z", "author": {"login": "dvrylc"}, "path": "src/main/java/teammates/ui/webapi/output/StudentsData.java", "diffHunk": "@@ -10,7 +10,11 @@\n  */\n public class StudentsData extends ApiOutput {\n \n-    private final List<StudentData> students;\n+    private List<StudentData> students;\n+\n+    public StudentsData() {\n+        // Use this constructor if StudentData is to be sent with the key\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf81370198af2d697e8f312333b1a251ae684e6d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxMzYzNg==", "bodyText": "There's an issue of type erasure though (cue 2103 flashbacks), cos the other constructor takes in List<StudentAttributes>. I could make these constructor instantiate an empty List<StudentData> though, just in case", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r403713636", "createdAt": "2020-04-05T15:01:24Z", "author": {"login": "hcwong"}, "path": "src/main/java/teammates/ui/webapi/output/StudentsData.java", "diffHunk": "@@ -10,7 +10,11 @@\n  */\n public class StudentsData extends ApiOutput {\n \n-    private final List<StudentData> students;\n+    private List<StudentData> students;\n+\n+    public StudentsData() {\n+        // Use this constructor if StudentData is to be sent with the key\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NDgyMA=="}, "originalCommit": {"oid": "bf81370198af2d697e8f312333b1a251ae684e6d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTc4MA==", "bodyText": "Oh right I didn't consider that, let's just stick with this but maybe add a comment to explain/warn future devs? An empty list doesn't really solve the problem either \ud83d\ude1e", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r403715780", "createdAt": "2020-04-05T15:17:40Z", "author": {"login": "dvrylc"}, "path": "src/main/java/teammates/ui/webapi/output/StudentsData.java", "diffHunk": "@@ -10,7 +10,11 @@\n  */\n public class StudentsData extends ApiOutput {\n \n-    private final List<StudentData> students;\n+    private List<StudentData> students;\n+\n+    public StudentsData() {\n+        // Use this constructor if StudentData is to be sent with the key\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NDgyMA=="}, "originalCommit": {"oid": "bf81370198af2d697e8f312333b1a251ae684e6d"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDM1OTY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/SearchStudentsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMzo1OTozNVrOGA8kTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMzo1OTozNVrOGA8kTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NTUxNg==", "bodyText": "Instead of creating the StudentsData > setting the students > getting the students > setting the institute data, could we do all the data manipulation (setting key and institute) on the studentDataList first? Then once we have a finalized studentDataList, pass it to the StudentsData constructor as mentioned above.", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r403645516", "createdAt": "2020-04-05T03:59:35Z", "author": {"login": "dvrylc"}, "path": "src/main/java/teammates/ui/webapi/action/SearchStudentsAction.java", "diffHunk": "@@ -39,11 +88,28 @@ public ActionResult execute() {\n             List<InstructorAttributes> instructors = logic.getInstructorsForGoogleId(userInfo.id);\n             students = logic.searchStudents(searchKey, instructors).studentList;\n         }\n-        studentsData = new StudentsData(students);\n+\n+        for (StudentAttributes s : students) {\n+            courseIds.add(s.getCourse());\n+            StudentData studentData = new StudentData(s);\n+            if (userInfo.isAdmin) {\n+                studentData.setKey(StringHelper.encrypt(s.getKey()));\n+            }\n+\n+            studentDataList.add(studentData);\n+        }\n+        StudentsData studentsData = new StudentsData();\n+        studentsData.setStudents(studentDataList);\n+\n+        // Set Institute\n+        populateCourseIdToInstituteMap();\n+        studentsData.getStudents().forEach((StudentData student) -> {\n+            student.setInstitute(courseIdToInstituteMap.get(student.getCourseId()));\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf81370198af2d697e8f312333b1a251ae684e6d"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDExODU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/output/StudentsData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMzozMjoxOFrOGBxpSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMzozMjoxOFrOGBxpSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUxNTE0Ng==", "bodyText": "I think there is no need to mention this.", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r404515146", "createdAt": "2020-04-07T03:32:18Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/output/StudentsData.java", "diffHunk": "@@ -10,7 +11,13 @@\n  */\n public class StudentsData extends ApiOutput {\n \n-    private final List<StudentData> students;\n+    private List<StudentData> students;\n+\n+    public StudentsData() {\n+        // Only use this constructor for the SearchStudentsAction action,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad1dcac1569e7a402b0eef3551a750df313f267a"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDEyMDU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/SearchStudentsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMzozMzozMVrOGBxqag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMzozMzozMVrOGBxqag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUxNTQzNA==", "bodyText": "Please standardized the information hiding as mentioned in #9991", "url": "https://github.com/TEAMMATES/teammates/pull/9990#discussion_r404515434", "createdAt": "2020-04-07T03:33:31Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/SearchStudentsAction.java", "diffHunk": "@@ -39,11 +90,23 @@ public ActionResult execute() {\n             List<InstructorAttributes> instructors = logic.getInstructorsForGoogleId(userInfo.id);\n             students = logic.searchStudents(searchKey, instructors).studentList;\n         }\n-        studentsData = new StudentsData(students);\n+\n+        for (StudentAttributes s : students) {\n+            courseIds.add(s.getCourse());\n+            StudentData studentData = new StudentData(s);\n+            if (userInfo.isAdmin) {\n+                studentData.setKey(StringHelper.encrypt(s.getKey()));\n+            }\n+            studentData.setInstitute(courseIdToInstituteMap.get(s.getCourse()));\n+\n+            studentDataList.add(studentData);\n+        }\n+        StudentsData studentsData = new StudentsData();\n+        studentsData.setStudents(studentDataList);\n \n         // Hide information\n         studentsData.getStudents().forEach(StudentData::hideLastName);\n-        if (!(userInfo.isAdmin)) {\n+        if (userInfo.isInstructor) {\n             studentsData.getStudents().forEach(StudentData::hideInformationForInstructor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad1dcac1569e7a402b0eef3551a750df313f267a"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3914, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}