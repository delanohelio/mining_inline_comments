{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NTA5NDEz", "number": 10796, "title": "[#9536] Migrate parts of instructor search/student list/records page E2E tests", "bodyText": "Part of #9536\nPre-works:\n\nFixed student table in search page: it was not sortable and the delete button did not work. It's surprising that no one noticed them.\nDisplayed course ID as non-editable field in student details edit page; helpful for instructor, will be helpful for tester later on\n\nDoing the E2E tests for the following three pages is certainly interesting because of the number of copy-pastes. (even the first pre-work is done by copy-pasting!)\n\nInstructor search page\n\nTests for searching students which can hit multiple courses\nTests for searching response comments will be done later when we have better idea\nWithin the student table, the test is identical to course details page\n\n\nInstructor student list page\n\nTests for panel expansion, link to enroll students page, and displayed number of students/sections/teams\nWithin the student table, the test is identical to course details page (and now search page!)\n\n\nInstructor course details page, instructor search page, instructor student list page\n\nTests for links to student details page, student details edit page, and records page\n\n\nInstructor student records page\n\nThe top part of the page is almost identical to course student details page, thus the E2E test is also almost identical\nThe bottom part (feedback response-related) will be done later when we have better idea\n\n\n\nNote that although the search page and student records page are not fully migrated yet, the previous UI tests tested them using God mode (prime example on why it erodes testing value!), so keeping them as reference is not helpful. The latter does have some tests on adding/editing/deleting response comment, but we will probably come up with a new way to test this anyway.\nIt certainly leaves a discussion topic here on whether we really need all those near-duplications.", "createdAt": "2020-10-18T17:30:32Z", "url": "https://github.com/TEAMMATES/teammates/pull/10796", "merged": true, "mergeCommit": {"oid": "ebc96272428a4bdaad34b1d154fa15e4eaa982f3"}, "closed": true, "closedAt": "2020-10-21T02:08:22Z", "author": {"login": "wkurniawan07"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTyhnZAH2gAyNTA1NTA5NDEzOmQwNDA4OGZhNDI4NDE4YzhmNTYwOTg5M2I3ZGU0YzNlY2RlMDUyZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUhAf-AH2gAyNTA1NTA5NDEzOmI0YTJjZWY0MzZmZTBkODlhNGE5ODM5MjUzOGRlMGUxZjgzYjA1ZTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d04088fa428418c8f5609893b7de4c3ecde052e1", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d04088fa428418c8f5609893b7de4c3ecde052e1", "committedDate": "2020-10-18T16:53:46Z", "message": "Standardize search code for students and comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c727e213db7cb0e85bb13026d3ad510e9b81d8b", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/0c727e213db7cb0e85bb13026d3ad510e9b81d8b", "committedDate": "2020-10-18T16:53:47Z", "message": "Add missing features (sorting + deleting) for students table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bd8e6c48431bac9027625402a7baab0d8753276", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/0bd8e6c48431bac9027625402a7baab0d8753276", "committedDate": "2020-10-18T16:53:47Z", "message": "Improve student details edit page to display course ID"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0db7d16f4811cee0f108df573770e848fbf8669c", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/0db7d16f4811cee0f108df573770e848fbf8669c", "committedDate": "2020-10-18T16:53:48Z", "message": "Add minimum E2E test for search page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e2ba0f95981499eabf0d5c41d0015615d1bfcc9", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9e2ba0f95981499eabf0d5c41d0015615d1bfcc9", "committedDate": "2020-10-18T16:53:48Z", "message": "Add minimum E2E test for student list page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "844fb4ef5d4e5362593df66c1511f858ef1e4a3e", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/844fb4ef5d4e5362593df66c1511f858ef1e4a3e", "committedDate": "2020-10-18T16:53:48Z", "message": "Add identical test cases for delete student"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a514fddaa2ae1a8de2237dd06db87cd9569ea9a", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5a514fddaa2ae1a8de2237dd06db87cd9569ea9a", "committedDate": "2020-10-18T18:08:33Z", "message": "Add identical test cases for testing links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a2a63253030f83a46bcaf6c200237e2e8aa3bbc", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7a2a63253030f83a46bcaf6c200237e2e8aa3bbc", "committedDate": "2020-10-18T18:08:33Z", "message": "Add test for link to enroll page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "067f684104a3d31a2fdd45927e35c92020b2ea27", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/067f684104a3d31a2fdd45927e35c92020b2ea27", "committedDate": "2020-10-18T18:08:33Z", "message": "Add first round of E2E test for student records page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/41369aa0161804a945e1dbb4d8f1b7f7f98313ee", "committedDate": "2020-10-18T18:08:33Z", "message": "Add TODO for feedback response-related tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eee41def009df86e1e442a3d3f61637525c182e1", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/eee41def009df86e1e442a3d3f61637525c182e1", "committedDate": "2020-10-18T16:53:48Z", "message": "Add TODO for feedback response-related tests"}, "afterCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/41369aa0161804a945e1dbb4d8f1b7f7f98313ee", "committedDate": "2020-10-18T18:08:33Z", "message": "Add TODO for feedback response-related tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNTExNDEz", "url": "https://github.com/TEAMMATES/teammates/pull/10796#pullrequestreview-511511413", "createdAt": "2020-10-19T08:13:09Z", "commit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoxMzoxMFrOHkCp8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODozMjo1NFrOHkDa4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU1NDI4OA==", "bodyText": "Maybe the 4 lines above can be abstracted as something like a searchForStudentsAndComments method in the page object to hide more of the element details in case maybe someday we stop using checkboxes or something.", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507554288", "createdAt": "2020-10-19T08:13:10Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorSearchPageE2ETest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorSearchPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SEARCH_PAGE}.\n+ */\n+public class InstructorSearchPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorSearchPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+        putDocuments(testData);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+\n+        String instructorId = testData.accounts.get(\"instructor1OfCourse1\").googleId;\n+        AppUrl searchPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_SEARCH_PAGE).withUserId(instructorId);\n+\n+        InstructorSearchPage searchPage = loginAdminToPage(searchPageUrl, InstructorSearchPage.class);\n+\n+        ______TS(\"cannot click search button if no checkbox is selected\");\n+\n+        searchPage.clickStudentsCheckbox();\n+        searchPage.verifyCannotClickSearchButton();\n+\n+        ______TS(\"search with no result\");\n+\n+        searchPage.inputSearchContent(\"thiswillnothitanything\");\n+        searchPage.clickStudentsCheckbox();\n+        searchPage.clickCommentsCheckbox();\n+        searchPage.clickSearchButton();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU1NzA0NQ==", "bodyText": "Maybe this method can also be inside the page object as adding the brackets seems like a implementation detail.", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507557045", "createdAt": "2020-10-19T08:17:36Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorSearchPageE2ETest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorSearchPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SEARCH_PAGE}.\n+ */\n+public class InstructorSearchPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorSearchPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+        putDocuments(testData);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+\n+        String instructorId = testData.accounts.get(\"instructor1OfCourse1\").googleId;\n+        AppUrl searchPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_SEARCH_PAGE).withUserId(instructorId);\n+\n+        InstructorSearchPage searchPage = loginAdminToPage(searchPageUrl, InstructorSearchPage.class);\n+\n+        ______TS(\"cannot click search button if no checkbox is selected\");\n+\n+        searchPage.clickStudentsCheckbox();\n+        searchPage.verifyCannotClickSearchButton();\n+\n+        ______TS(\"search with no result\");\n+\n+        searchPage.inputSearchContent(\"thiswillnothitanything\");\n+        searchPage.clickStudentsCheckbox();\n+        searchPage.clickCommentsCheckbox();\n+        searchPage.clickSearchButton();\n+        searchPage.verifyStatusMessage(\"No results found.\");\n+\n+        ______TS(\"search for students\");\n+\n+        searchPage.clickCommentsCheckbox();\n+        searchPage.inputSearchContent(\"student2\");\n+        searchPage.clickSearchButton();\n+\n+        CourseAttributes course1 = testData.courses.get(\"typicalCourse1\");\n+        CourseAttributes course2 = testData.courses.get(\"typicalCourse2\");\n+        String course1Header = createHeaderText(course1);\n+        String course2Header = createHeaderText(course2);\n+\n+        StudentAttributes[] studentsInCourse1 = {\n+                testData.students.get(\"student2.2InCourse1\"),\n+                testData.students.get(\"student2InCourse1\"),\n+        };\n+        StudentAttributes[] studentsInCourse2 = {\n+                testData.students.get(\"student2.2InCourse2\"),\n+                testData.students.get(\"student2InCourse2\"),\n+        };\n+\n+        Map<String, StudentAttributes[]> courseHeaderToStudents = new HashMap<>();\n+        courseHeaderToStudents.put(course1Header, studentsInCourse1);\n+        courseHeaderToStudents.put(course2Header, studentsInCourse2);\n+\n+        searchPage.verifyStudentDetails(courseHeaderToStudents);\n+\n+        ______TS(\"link: view student details page\");\n+\n+        StudentAttributes studentToView = testData.students.get(\"student2.2InCourse1\");\n+        String studentEmail = studentToView.getEmail();\n+\n+        InstructorCourseStudentDetailsViewPage studentDetailsViewPage =\n+                searchPage.clickViewStudent(course1Header, studentEmail);\n+        studentDetailsViewPage.verifyIsCorrectPage(course1.getId(), studentEmail);\n+        studentDetailsViewPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"link: edit student details page\");\n+\n+        InstructorCourseStudentDetailsEditPage studentDetailsEditPage =\n+                searchPage.clickEditStudent(course1Header, studentEmail);\n+        studentDetailsEditPage.verifyIsCorrectPage(course1.getId(), studentEmail);\n+        studentDetailsEditPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"link: view all records page\");\n+\n+        InstructorStudentRecordsPage studentRecordsPage =\n+                searchPage.clickViewAllRecords(course1Header, studentEmail);\n+        studentRecordsPage.verifyIsCorrectPage(course1.getId(), studentToView.getName());\n+        studentRecordsPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"action: delete student\");\n+\n+        StudentAttributes studentToDelete = testData.students.get(\"student2InCourse1\");\n+\n+        searchPage.deleteStudent(course1Header, studentToDelete.getEmail());\n+\n+        StudentAttributes[] studentsAfterDelete = {\n+                testData.students.get(\"student2.2InCourse1\"),\n+        };\n+\n+        searchPage.verifyStudentDetails(course1Header, studentsAfterDelete);\n+        verifyAbsentInDatastore(studentToDelete);\n+\n+        // TODO add tests for search response comments\n+\n+    }\n+\n+    private String createHeaderText(CourseAttributes course) {\n+        return \"[\" + course.getId() + \"]\";\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NTY3OQ==", "bodyText": "Same for this, I feel like the header formatting belongs more in the page object", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507565679", "createdAt": "2020-10-19T08:31:03Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorStudentListPageE2ETest.java", "diffHunk": "@@ -0,0 +1,131 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseEnrollPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorStudentListPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_STUDENT_LIST_PAGE}.\n+ */\n+public class InstructorStudentListPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorStudentListPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+    }\n+\n+    @Test\n+    public void testAll() {\n+\n+        ______TS(\"verify loaded data\");\n+\n+        InstructorAttributes instructor = testData.instructors.get(\"instructorOfCourse1\");\n+        String instructorId = instructor.googleId;\n+\n+        AppUrl listPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_STUDENT_LIST_PAGE).withUserId(instructorId);\n+        InstructorStudentListPage listPage = loginAdminToPage(listPageUrl, InstructorStudentListPage.class);\n+\n+        CourseAttributes course1 = testData.courses.get(\"course1\");\n+        CourseAttributes course2 = testData.courses.get(\"course2\");\n+        CourseAttributes course3 = testData.courses.get(\"course3\");\n+        String course1Header = createHeaderText(course1);\n+        String course2Header = createHeaderText(course2);\n+        String course3Header = createHeaderText(course3);\n+\n+        StudentAttributes[] studentsInCourse1 = {};\n+\n+        // Note: by right, there should not be any student shown here as the instructor does not have sufficient privilege\n+        // However, due to issue #8000, the students will be listed anyway\n+        StudentAttributes[] studentsInCourse2 = {\n+                testData.students.get(\"Student1Course2\"),\n+                testData.students.get(\"Student2Course2\"),\n+                testData.students.get(\"Student3Course2\"),\n+        };\n+\n+        StudentAttributes[] studentsInCourse3 = {\n+                testData.students.get(\"Student1Course3\"),\n+                testData.students.get(\"Student2Course3\"),\n+                testData.students.get(\"Student3Course3\"),\n+                testData.students.get(\"Student4Course3\"),\n+        };\n+\n+        Map<String, StudentAttributes[]> courseHeaderToStudents = new HashMap<>();\n+        courseHeaderToStudents.put(course1Header, studentsInCourse1);\n+        courseHeaderToStudents.put(course2Header, studentsInCourse2);\n+        courseHeaderToStudents.put(course3Header, studentsInCourse3);\n+\n+        // Expand all headers first\n+\n+        for (String header : courseHeaderToStudents.keySet()) {\n+            listPage.clickCourseTabHeader(header);\n+        }\n+\n+        listPage.verifyStudentDetails(courseHeaderToStudents);\n+\n+        ______TS(\"link: enroll page\");\n+\n+        InstructorCourseEnrollPage enrollPage = listPage.clickEnrollStudents(course3Header);\n+        enrollPage.verifyIsCorrectPage(course3.getId());\n+\n+        listPage = loginAdminToPage(listPageUrl, InstructorStudentListPage.class);\n+        listPage.clickCourseTabHeader(course3Header);\n+\n+        ______TS(\"link: view student details page\");\n+\n+        StudentAttributes studentToView = testData.students.get(\"Student1Course3\");\n+        String studentEmail = studentToView.getEmail();\n+\n+        InstructorCourseStudentDetailsViewPage studentDetailsViewPage =\n+                listPage.clickViewStudent(course3Header, studentEmail);\n+        studentDetailsViewPage.verifyIsCorrectPage(course3.getId(), studentEmail);\n+        studentDetailsViewPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"link: edit student details page\");\n+\n+        InstructorCourseStudentDetailsEditPage studentDetailsEditPage =\n+                listPage.clickEditStudent(course3Header, studentEmail);\n+        studentDetailsEditPage.verifyIsCorrectPage(course3.getId(), studentEmail);\n+        studentDetailsEditPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"link: view all records page\");\n+\n+        InstructorStudentRecordsPage studentRecordsPage =\n+                listPage.clickViewAllRecords(course3Header, studentEmail);\n+        studentRecordsPage.verifyIsCorrectPage(course3.getId(), studentToView.getName());\n+        studentRecordsPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"action: delete student\");\n+\n+        StudentAttributes studentToDelete = testData.students.get(\"Student3Course3\");\n+\n+        listPage.deleteStudent(course3Header, studentToDelete.getEmail());\n+\n+        StudentAttributes[] studentsAfterDelete = {\n+                testData.students.get(\"Student1Course3\"),\n+                testData.students.get(\"Student2Course3\"),\n+                testData.students.get(\"Student4Course3\"),\n+        };\n+\n+        listPage.verifyStudentDetails(course3Header, studentsAfterDelete);\n+        verifyAbsentInDatastore(studentToDelete);\n+\n+    }\n+\n+    private String createHeaderText(CourseAttributes course) {\n+        return String.format(\"[%s]: %s\", course.getId(), course.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NjgxNg==", "bodyText": "Should we use a instructor with the appropriate privilege instead?", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507566816", "createdAt": "2020-10-19T08:32:54Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorStudentListPageE2ETest.java", "diffHunk": "@@ -0,0 +1,131 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseEnrollPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorStudentListPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_STUDENT_LIST_PAGE}.\n+ */\n+public class InstructorStudentListPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorStudentListPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+    }\n+\n+    @Test\n+    public void testAll() {\n+\n+        ______TS(\"verify loaded data\");\n+\n+        InstructorAttributes instructor = testData.instructors.get(\"instructorOfCourse1\");\n+        String instructorId = instructor.googleId;\n+\n+        AppUrl listPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_STUDENT_LIST_PAGE).withUserId(instructorId);\n+        InstructorStudentListPage listPage = loginAdminToPage(listPageUrl, InstructorStudentListPage.class);\n+\n+        CourseAttributes course1 = testData.courses.get(\"course1\");\n+        CourseAttributes course2 = testData.courses.get(\"course2\");\n+        CourseAttributes course3 = testData.courses.get(\"course3\");\n+        String course1Header = createHeaderText(course1);\n+        String course2Header = createHeaderText(course2);\n+        String course3Header = createHeaderText(course3);\n+\n+        StudentAttributes[] studentsInCourse1 = {};\n+\n+        // Note: by right, there should not be any student shown here as the instructor does not have sufficient privilege\n+        // However, due to issue #8000, the students will be listed anyway", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb89ff9e03b92b9072198a779447ae78a0f1e580", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/fb89ff9e03b92b9072198a779447ae78a0f1e580", "committedDate": "2020-10-19T10:56:01Z", "message": "Move createHeaderText to page object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e4c873e46994effe05ebd480dcafb0328806c5b", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/1e4c873e46994effe05ebd480dcafb0328806c5b", "committedDate": "2020-10-19T11:07:12Z", "message": "Abstract out search action"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNjcxMzg2", "url": "https://github.com/TEAMMATES/teammates/pull/10796#pullrequestreview-511671386", "createdAt": "2020-10-19T11:40:49Z", "commit": {"oid": "1e4c873e46994effe05ebd480dcafb0328806c5b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4a2cef436fe0d89a4a98392538de0e1f83b05e5", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/b4a2cef436fe0d89a4a98392538de0e1f83b05e5", "committedDate": "2020-10-20T23:03:08Z", "message": "Merge branch 'master' into search-e2e"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4204, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}