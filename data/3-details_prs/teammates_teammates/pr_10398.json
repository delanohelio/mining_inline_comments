{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MDc0MzIw", "number": 10398, "title": "[#10397] Add frontend validation for feedback submission", "bodyText": "Fixes #10397", "createdAt": "2020-07-24T04:53:53Z", "url": "https://github.com/TEAMMATES/teammates/pull/10398", "merged": true, "mergeCommit": {"oid": "af7995bf3f1b15448e2aeab6ac56d10cdcb95cb3"}, "closed": true, "closedAt": "2020-08-21T02:37:43Z", "author": {"login": "madanalogy"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4syyKAH2gAyNDU2MDc0MzIwOmJmNDAyZGQ0ODhhM2ExZWE2NWE0Zjg3ZWY4MDMyMjU5OWRhY2NlNjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdA6-lIgFqTQ3MjA5NTAyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bf402dd488a3a1ea65a4f87ef80322599dacce61", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/bf402dd488a3a1ea65a4f87ef80322599dacce61", "committedDate": "2020-07-26T12:57:08Z", "message": "Add skeleton for frontend validation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5554161a5a79226bd80fad82198ce195f657e56", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d5554161a5a79226bd80fad82198ce195f657e56", "committedDate": "2020-07-24T04:51:20Z", "message": "Add skeleton for frontend validation"}, "afterCommit": {"oid": "bf402dd488a3a1ea65a4f87ef80322599dacce61", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/bf402dd488a3a1ea65a4f87ef80322599dacce61", "committedDate": "2020-07-26T12:57:08Z", "message": "Add skeleton for frontend validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5b82e1081fe78b9912d9df8e9f8776794cf105ac", "committedDate": "2020-07-29T09:17:21Z", "message": "Implement frontend validation per question"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5aa08be30600efef3d11f0579e0b98b2dc031cd", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/c5aa08be30600efef3d11f0579e0b98b2dc031cd", "committedDate": "2020-07-29T03:39:36Z", "message": "Add constraint flow to session submission"}, "afterCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5b82e1081fe78b9912d9df8e9f8776794cf105ac", "committedDate": "2020-07-29T09:17:21Z", "message": "Implement frontend validation per question"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODU0NTYx", "url": "https://github.com/TEAMMATES/teammates/pull/10398#pullrequestreview-458854561", "createdAt": "2020-07-31T00:52:45Z", "commit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMDo1Mjo0NVrOG54mcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMjowNTo1OFrOG55tnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM0OTM2Mg==", "bodyText": "You might also want to disable the submit button", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463349362", "createdAt": "2020-07-31T00:52:45Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -531,7 +533,11 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n \n     this.questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) => {\n       let isQuestionFullyAnswered: boolean = true;\n-\n+      if (!questionSubmissionFormModel.isValid) {\n+        failToSaveQuestions[questionSubmissionFormModel.questionNumber] =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2NjAzNg==", "bodyText": "This will only work when the component is initialized.", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463366036", "createdAt": "2020-07-31T01:59:42Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-constraint/rank-recipients-question-constraint.component.ts", "diffHunk": "@@ -20,17 +22,20 @@ import {\n   templateUrl: './rank-recipients-question-constraint.component.html',\n   styleUrls: ['./rank-recipients-question-constraint.component.scss'],\n })\n-export class RankRecipientsQuestionConstraintComponent implements OnInit {\n+export class RankRecipientsQuestionConstraintComponent extends QuestionConstraintComponent implements OnInit {\n \n   @Input()\n   questionDetails: FeedbackRankRecipientsQuestionDetails = DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS();\n \n   @Input()\n   recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] = [];\n \n-  constructor() { }\n+  constructor() {\n+    super();\n+  }\n \n   ngOnInit(): void {\n+    this.isValidEvent.emit(this.isValid());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2NjIwNg==", "bodyText": "Why can't we do?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              isValidEvent: EventEmitter<Observable<boolean>> = new EventEmitter();\n          \n          \n            \n              isValidEvent: EventEmitter<boolean> = new EventEmitter();", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463366206", "createdAt": "2020-07-31T02:00:26Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-constraint/question-constraint.component.ts", "diffHunk": "@@ -0,0 +1,12 @@\n+import { EventEmitter, Output } from '@angular/core';\n+import { Observable } from 'rxjs';\n+\n+/**\n+ * Base class for constraint components.\n+ */\n+export abstract class QuestionConstraintComponent {\n+  @Output()\n+  isValidEvent: EventEmitter<Observable<boolean>> = new EventEmitter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2NjU4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              abstract isValid(): Observable<boolean>;\n          \n          \n            \n              abstract isValid(): boolean;", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463366586", "createdAt": "2020-07-31T02:01:58Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-constraint/question-constraint.component.ts", "diffHunk": "@@ -0,0 +1,12 @@\n+import { EventEmitter, Output } from '@angular/core';\n+import { Observable } from 'rxjs';\n+\n+/**\n+ * Base class for constraint components.\n+ */\n+export abstract class QuestionConstraintComponent {\n+  @Output()\n+  isValidEvent: EventEmitter<Observable<boolean>> = new EventEmitter();\n+\n+  abstract isValid(): Observable<boolean>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2NjkzMA==", "bodyText": "Try to use setter method here.", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463366930", "createdAt": "2020-07-31T02:03:17Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-constraint/rank-recipients-question-constraint.component.ts", "diffHunk": "@@ -20,17 +22,20 @@ import {\n   templateUrl: './rank-recipients-question-constraint.component.html',\n   styleUrls: ['./rank-recipients-question-constraint.component.scss'],\n })\n-export class RankRecipientsQuestionConstraintComponent implements OnInit {\n+export class RankRecipientsQuestionConstraintComponent extends QuestionConstraintComponent implements OnInit {\n \n   @Input()\n   questionDetails: FeedbackRankRecipientsQuestionDetails = DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS();\n \n   @Input()\n   recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2Njk3Ng==", "bodyText": "The field can go to the parent class.", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463366976", "createdAt": "2020-07-31T02:03:26Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-constraint/rank-recipients-question-constraint.component.ts", "diffHunk": "@@ -20,17 +22,20 @@ import {\n   templateUrl: './rank-recipients-question-constraint.component.html',\n   styleUrls: ['./rank-recipients-question-constraint.component.scss'],\n })\n-export class RankRecipientsQuestionConstraintComponent implements OnInit {\n+export class RankRecipientsQuestionConstraintComponent extends QuestionConstraintComponent implements OnInit {\n \n   @Input()\n   questionDetails: FeedbackRankRecipientsQuestionDetails = DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2NzM4NA==", "bodyText": "with the help of generic class\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            export abstract class QuestionConstraintComponent {\n          \n          \n            \n            export abstract class QuestionConstraintComponent<Q extends FeedbackQuestionDetails> {\n          \n      \n    \n    \n  \n\nAnd therefore the isValid check can be here (The child component will only need care about whether the isValid or not. They don't need to fire event!).", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463367384", "createdAt": "2020-07-31T02:05:05Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-constraint/question-constraint.component.ts", "diffHunk": "@@ -0,0 +1,12 @@\n+import { EventEmitter, Output } from '@angular/core';\n+import { Observable } from 'rxjs';\n+\n+/**\n+ * Base class for constraint components.\n+ */\n+export abstract class QuestionConstraintComponent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2NzU4MQ==", "bodyText": "Why we don't use this. isAllPointsDistributed  and so on?", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463367581", "createdAt": "2020-07-31T02:05:58Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.ts", "diffHunk": "@@ -101,4 +106,74 @@ export class ConstsumRecipientsQuestionConstraintComponent implements OnInit {\n \n     return set.size !== 1;\n   }\n+\n+  /**\n+   * Checks if all points have been distributed.\n+   */\n+  get isAllPointsDistributed(): boolean {\n+    return this.totalAnsweredPoints === this.totalRequiredPoints;\n+  }\n+\n+  /**\n+   * Checks if the points have been insufficiently distributed.\n+   */\n+  get isInsufficientPointsDistributed(): boolean {\n+    return this.totalAnsweredPoints < this.totalRequiredPoints;\n+  }\n+\n+  /**\n+   * Checks if the points have been over allocated.\n+   */\n+  get isPointsOverAllocated(): boolean {\n+    return this.totalAnsweredPoints > this.totalRequiredPoints;\n+  }\n+\n+  /**\n+   * Returns true if the question requires uneven distribution but the points are not unevenly distributed.\n+   */\n+  get isWronglyAllUneven(): boolean {\n+    return this.questionDetails.distributePointsFor === FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY\n+        && !this.isAllPointsUneven;\n+  }\n+\n+  /**\n+   * Returns true if the question requires uneven distribution and the points are unevenly distributed.\n+   */\n+  get isCorrectlyAllUneven(): boolean {\n+    return this.questionDetails.distributePointsFor === FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY\n+        && this.isAllPointsUneven;\n+  }\n+\n+  /**\n+   * Returns true if the question requires some uneven distribution but points are not unevenly distributed for some.\n+   */\n+  get isWronglySomeUneven(): boolean {\n+    return this.questionDetails.distributePointsFor === FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY\n+        && !this.isSomePointsUneven;\n+  }\n+\n+  /**\n+   * Returns true if the question requires some uneven distribution and points are unevenly distributed for some.\n+   */\n+  get isCorrectlySomeUneven(): boolean {\n+    return this.questionDetails.distributePointsFor === FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY\n+        && this.isSomePointsUneven;\n+  }\n+\n+  isValid(): Observable<boolean> {\n+    return new Observable((observer: Subscriber<boolean>) => {\n+      observer.next(\n+          (this.questionDetails.distributePointsFor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODc1NjIx", "url": "https://github.com/TEAMMATES/teammates/pull/10398#pullrequestreview-458875621", "createdAt": "2020-07-31T02:09:20Z", "commit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMjowOToyMFrOG55wqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMjowOToyMFrOG55wqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2ODM2Mg==", "bodyText": "You should use formModelChange to fire event rather than change directly here.", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463368362", "createdAt": "2020-07-31T02:09:20Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-submission-form/question-submission-form.component.ts", "diffHunk": "@@ -136,6 +139,9 @@ export class QuestionSubmissionFormComponent implements OnInit {\n    * Triggers the change of the recipient submission form.\n    */\n   triggerRecipientSubmissionFormChange(index: number, field: string, data: any): void {\n+    this.isQuestionValid.subscribe((isValid: boolean) => {\n+      this.model.isValid = isValid;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTQ2OTU3", "url": "https://github.com/TEAMMATES/teammates/pull/10398#pullrequestreview-459546957", "createdAt": "2020-08-01T03:05:36Z", "commit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzowNTozNlrOG6bBVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzowNjo1MVrOG6bB1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxMzMwMQ==", "bodyText": "To answer your question:\n\nWe don't need to do listen to validation event here. There are better places.\nPlus: This is wrong. You are subscribing the observable multiple times.", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463913301", "createdAt": "2020-08-01T03:05:36Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-submission-form/question-submission-form.component.ts", "diffHunk": "@@ -136,6 +139,9 @@ export class QuestionSubmissionFormComponent implements OnInit {\n    * Triggers the change of the recipient submission form.\n    */\n   triggerRecipientSubmissionFormChange(index: number, field: string, data: any): void {\n+    this.isQuestionValid.subscribe((isValid: boolean) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxMzQzMA==", "bodyText": "And thus, if you use setter method (https://angular.io/guide/component-interaction#intercept-input-property-changes-with-a-setter) here:\nThis is where you should fire the event.", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r463913430", "createdAt": "2020-08-01T03:06:51Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-constraint/rank-recipients-question-constraint.component.ts", "diffHunk": "@@ -20,17 +22,20 @@ import {\n   templateUrl: './rank-recipients-question-constraint.component.html',\n   styleUrls: ['./rank-recipients-question-constraint.component.scss'],\n })\n-export class RankRecipientsQuestionConstraintComponent implements OnInit {\n+export class RankRecipientsQuestionConstraintComponent extends QuestionConstraintComponent implements OnInit {\n \n   @Input()\n   questionDetails: FeedbackRankRecipientsQuestionDetails = DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS();\n \n   @Input()\n   recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] = [];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2NjkzMA=="}, "originalCommit": {"oid": "5b82e1081fe78b9912d9df8e9f8776794cf105ac"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec04de49231b1f653746977f8526780d22f5f3b1", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ec04de49231b1f653746977f8526780d22f5f3b1", "committedDate": "2020-08-08T07:48:31Z", "message": "Refactor constraints validity access"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODQxMTk4", "url": "https://github.com/TEAMMATES/teammates/pull/10398#pullrequestreview-463841198", "createdAt": "2020-08-09T03:54:03Z", "commit": {"oid": "ec04de49231b1f653746977f8526780d22f5f3b1"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTA2OTI3", "url": "https://github.com/TEAMMATES/teammates/pull/10398#pullrequestreview-463906927", "createdAt": "2020-08-09T22:04:59Z", "commit": {"oid": "ec04de49231b1f653746977f8526780d22f5f3b1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQyMjowNTowMFrOG9-Htw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQyMjowNTozMlrOG9-H8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYzNDEwMw==", "bodyText": "Why we need to create a new field and trigger the change indirectly?", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r467634103", "createdAt": "2020-08-09T22:05:00Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-submission-form/question-submission-form.component.ts", "diffHunk": "@@ -93,6 +94,7 @@ export class QuestionSubmissionFormComponent implements OnInit {\n \n   visibilityStateMachine: VisibilityStateMachine;\n   allowedToHaveParticipantComment: boolean = false;\n+  isQuestionValid: boolean = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec04de49231b1f653746977f8526780d22f5f3b1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYzNDE2MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r467634161", "createdAt": "2020-08-09T22:05:32Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-constraint/question-constraint.component.ts", "diffHunk": "@@ -0,0 +1,32 @@\n+import { EventEmitter, Input, Output } from '@angular/core';\n+import { FeedbackQuestionDetails } from '../../../../types/api-output';\n+import { FeedbackResponseRecipientSubmissionFormModel } from '../../question-submission-form/question-submission-form-model';\n+\n+/**\n+ * Base class for constraint components.\n+ */\n+export abstract class QuestionConstraintComponent<Q extends FeedbackQuestionDetails> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec04de49231b1f653746977f8526780d22f5f3b1"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5472345aa41f9a14c9e9693fb9754f4299f12b2", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a5472345aa41f9a14c9e9693fb9754f4299f12b2", "committedDate": "2020-08-16T16:24:25Z", "message": "Merge branch 'master' into 10397-submission-validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d02bc35d2749df929e8d61752e2f3b7508224c9", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7d02bc35d2749df929e8d61752e2f3b7508224c9", "committedDate": "2020-08-17T03:33:24Z", "message": "Refactor isValid to per response"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTgxNzUx", "url": "https://github.com/TEAMMATES/teammates/pull/10398#pullrequestreview-468181751", "createdAt": "2020-08-17T05:59:19Z", "commit": {"oid": "7d02bc35d2749df929e8d61752e2f3b7508224c9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNTo1OToxOVrOHBapog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjowODowNVrOHBazrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI0NzI2Ng==", "bodyText": "The outer this.questionSubmissionForms.forEach will still be executed? Is that intended?", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r471247266", "createdAt": "2020-08-17T05:59:19Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -546,9 +550,13 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n \n     this.questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) => {\n       let isQuestionFullyAnswered: boolean = true;\n-\n       questionSubmissionFormModel.recipientSubmissionForms\n           .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) => {\n+            if (!recipientSubmissionFormModel.isValid) {\n+              failToSaveQuestions[questionSubmissionFormModel.questionNumber] =\n+                  'Invalid responses provided. Please check question constraints.';\n+              return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d02bc35d2749df929e8d61752e2f3b7508224c9"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI0OTgzOQ==", "bodyText": "I think I need to emphasize this again :(\nThis is not the correct way to change the value passed by the parent component. In other word, you do NOT own the model so you should not change it directly. Instead, please use event to emit the changes.\nI think we need pass this knowledge down:\n\nAll these efforts are to make the parent component who own the model to become a single point of truth\n\nThe parent component is free to make any change. It can also ignore the event omit by the child component.\nImage that if child components make the change directly (like in this case and it works), how do you trace the control flow? In other word, you are breaking the contract that the @Input() annotation tells. It should be read-only and input property only.\n(NOT relevant to this but useful to know)If you want to make the change to @Input() property, create a new variable and sync it between the input property when its value changes (see StudentList for example).", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r471249839", "createdAt": "2020-08-17T06:08:05Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-submission-form/question-submission-form.component.ts", "diffHunk": "@@ -197,4 +196,13 @@ export class QuestionSubmissionFormComponent implements OnInit {\n     return this.feedbackResponseService.isFeedbackResponseDetailsEmpty(\n         this.model.questionType, responseDetails);\n   }\n+\n+  /**\n+   * Updates validity of all responses in a question.\n+   */\n+  updateValidity(isValid: boolean): void {\n+    this.model.recipientSubmissionForms.forEach((model: FeedbackResponseRecipientSubmissionFormModel) => {\n+      model.isValid = isValid;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d02bc35d2749df929e8d61752e2f3b7508224c9"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "726f96639227dbb75663d7402a0a2df2738e0599", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/726f96639227dbb75663d7402a0a2df2738e0599", "committedDate": "2020-08-17T07:16:49Z", "message": "Refactor control flow to use emitter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMDcxNjEx", "url": "https://github.com/TEAMMATES/teammates/pull/10398#pullrequestreview-470071611", "createdAt": "2020-08-19T02:12:10Z", "commit": {"oid": "726f96639227dbb75663d7402a0a2df2738e0599"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMjoxMjoxMFrOHCs3gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMjoxMjo1OFrOHCs4Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU5NDMwNA==", "bodyText": "This is shallow copy actually.", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r472594304", "createdAt": "2020-08-19T02:12:10Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-submission-form/question-submission-form.component.ts", "diffHunk": "@@ -197,4 +196,19 @@ export class QuestionSubmissionFormComponent implements OnInit {\n     return this.feedbackResponseService.isFeedbackResponseDetailsEmpty(\n         this.model.questionType, responseDetails);\n   }\n+\n+  /**\n+   * Updates validity of all responses in a question.\n+   */\n+  updateValidity(isValid: boolean): void {\n+    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] =\n+        this.model.recipientSubmissionForms.slice();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726f96639227dbb75663d7402a0a2df2738e0599"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU5NDUwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.model.recipientSubmissionForms.slice();\n          \n          \n            \n                    this.model.recipientSubmissionForms.slice().map((model) => Object.assign({}, model, {isValid}))\n          \n      \n    \n    \n  \n\nThis might be what you want.", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r472594507", "createdAt": "2020-08-19T02:12:58Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-submission-form/question-submission-form.component.ts", "diffHunk": "@@ -197,4 +196,19 @@ export class QuestionSubmissionFormComponent implements OnInit {\n     return this.feedbackResponseService.isFeedbackResponseDetailsEmpty(\n         this.model.questionType, responseDetails);\n   }\n+\n+  /**\n+   * Updates validity of all responses in a question.\n+   */\n+  updateValidity(isValid: boolean): void {\n+    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] =\n+        this.model.recipientSubmissionForms.slice();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726f96639227dbb75663d7402a0a2df2738e0599"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMzA0MTAz", "url": "https://github.com/TEAMMATES/teammates/pull/10398#pullrequestreview-471304103", "createdAt": "2020-08-20T07:12:40Z", "commit": {"oid": "306e1c77afd5463a0301a2a02c34530a832cce56"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNzoxMjo0MFrOHDvHsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNzoxMjo0MFrOHDvHsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY3OTc5NQ==", "bodyText": "So you should remove this line also? It is redundant as L206 already did the job?", "url": "https://github.com/TEAMMATES/teammates/pull/10398#discussion_r473679795", "createdAt": "2020-08-20T07:12:40Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-submission-form/question-submission-form.component.ts", "diffHunk": "@@ -197,4 +196,20 @@ export class QuestionSubmissionFormComponent implements OnInit {\n     return this.feedbackResponseService.isFeedbackResponseDetailsEmpty(\n         this.model.questionType, responseDetails);\n   }\n+\n+  /**\n+   * Updates validity of all responses in a question.\n+   */\n+  updateValidity(isValid: boolean): void {\n+    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] =\n+        this.model.recipientSubmissionForms.slice().map(\n+            (model: FeedbackResponseRecipientSubmissionFormModel) => Object.assign({}, model, { isValid }));\n+    recipientSubmissionForms.forEach((model: FeedbackResponseRecipientSubmissionFormModel) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "306e1c77afd5463a0301a2a02c34530a832cce56"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e9ed3ad09242af2990fdb061e86c581466577c4", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2e9ed3ad09242af2990fdb061e86c581466577c4", "committedDate": "2020-08-20T08:25:35Z", "message": "Use deep copy for recipientSubmissionForms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "306e1c77afd5463a0301a2a02c34530a832cce56", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/306e1c77afd5463a0301a2a02c34530a832cce56", "committedDate": "2020-08-19T05:09:20Z", "message": "Fix lint"}, "afterCommit": {"oid": "2e9ed3ad09242af2990fdb061e86c581466577c4", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2e9ed3ad09242af2990fdb061e86c581466577c4", "committedDate": "2020-08-20T08:25:35Z", "message": "Use deep copy for recipientSubmissionForms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "838947e2875a45a7440193683da79dbb2d9426cc", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/838947e2875a45a7440193683da79dbb2d9426cc", "committedDate": "2020-08-20T15:22:01Z", "message": "Merge branch 'master' into 10397-submission-validation\n\n# Conflicts:\n#\tsrc/web/app/pages-session/session-submission-page/session-submission-page.component.ts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDk1MDIx", "url": "https://github.com/TEAMMATES/teammates/pull/10398#pullrequestreview-472095021", "createdAt": "2020-08-21T02:00:05Z", "commit": {"oid": "838947e2875a45a7440193683da79dbb2d9426cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4310, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}