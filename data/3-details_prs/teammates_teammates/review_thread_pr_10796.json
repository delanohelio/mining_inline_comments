{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NTA5NDEz", "number": 10796, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoxMzoxMFrOEvMiSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODozMjo1NFrOEvNBTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTIzOTEyOnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorSearchPageE2ETest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoxMzoxMFrOHkCp8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoxMzoxMFrOHkCp8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU1NDI4OA==", "bodyText": "Maybe the 4 lines above can be abstracted as something like a searchForStudentsAndComments method in the page object to hide more of the element details in case maybe someday we stop using checkboxes or something.", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507554288", "createdAt": "2020-10-19T08:13:10Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorSearchPageE2ETest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorSearchPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SEARCH_PAGE}.\n+ */\n+public class InstructorSearchPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorSearchPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+        putDocuments(testData);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+\n+        String instructorId = testData.accounts.get(\"instructor1OfCourse1\").googleId;\n+        AppUrl searchPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_SEARCH_PAGE).withUserId(instructorId);\n+\n+        InstructorSearchPage searchPage = loginAdminToPage(searchPageUrl, InstructorSearchPage.class);\n+\n+        ______TS(\"cannot click search button if no checkbox is selected\");\n+\n+        searchPage.clickStudentsCheckbox();\n+        searchPage.verifyCannotClickSearchButton();\n+\n+        ______TS(\"search with no result\");\n+\n+        searchPage.inputSearchContent(\"thiswillnothitanything\");\n+        searchPage.clickStudentsCheckbox();\n+        searchPage.clickCommentsCheckbox();\n+        searchPage.clickSearchButton();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTI1Njg3OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorSearchPageE2ETest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoxNzozNlrOHkC0tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoxNzozNlrOHkC0tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU1NzA0NQ==", "bodyText": "Maybe this method can also be inside the page object as adding the brackets seems like a implementation detail.", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507557045", "createdAt": "2020-10-19T08:17:36Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorSearchPageE2ETest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorSearchPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SEARCH_PAGE}.\n+ */\n+public class InstructorSearchPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorSearchPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+        putDocuments(testData);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+\n+        String instructorId = testData.accounts.get(\"instructor1OfCourse1\").googleId;\n+        AppUrl searchPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_SEARCH_PAGE).withUserId(instructorId);\n+\n+        InstructorSearchPage searchPage = loginAdminToPage(searchPageUrl, InstructorSearchPage.class);\n+\n+        ______TS(\"cannot click search button if no checkbox is selected\");\n+\n+        searchPage.clickStudentsCheckbox();\n+        searchPage.verifyCannotClickSearchButton();\n+\n+        ______TS(\"search with no result\");\n+\n+        searchPage.inputSearchContent(\"thiswillnothitanything\");\n+        searchPage.clickStudentsCheckbox();\n+        searchPage.clickCommentsCheckbox();\n+        searchPage.clickSearchButton();\n+        searchPage.verifyStatusMessage(\"No results found.\");\n+\n+        ______TS(\"search for students\");\n+\n+        searchPage.clickCommentsCheckbox();\n+        searchPage.inputSearchContent(\"student2\");\n+        searchPage.clickSearchButton();\n+\n+        CourseAttributes course1 = testData.courses.get(\"typicalCourse1\");\n+        CourseAttributes course2 = testData.courses.get(\"typicalCourse2\");\n+        String course1Header = createHeaderText(course1);\n+        String course2Header = createHeaderText(course2);\n+\n+        StudentAttributes[] studentsInCourse1 = {\n+                testData.students.get(\"student2.2InCourse1\"),\n+                testData.students.get(\"student2InCourse1\"),\n+        };\n+        StudentAttributes[] studentsInCourse2 = {\n+                testData.students.get(\"student2.2InCourse2\"),\n+                testData.students.get(\"student2InCourse2\"),\n+        };\n+\n+        Map<String, StudentAttributes[]> courseHeaderToStudents = new HashMap<>();\n+        courseHeaderToStudents.put(course1Header, studentsInCourse1);\n+        courseHeaderToStudents.put(course2Header, studentsInCourse2);\n+\n+        searchPage.verifyStudentDetails(courseHeaderToStudents);\n+\n+        ______TS(\"link: view student details page\");\n+\n+        StudentAttributes studentToView = testData.students.get(\"student2.2InCourse1\");\n+        String studentEmail = studentToView.getEmail();\n+\n+        InstructorCourseStudentDetailsViewPage studentDetailsViewPage =\n+                searchPage.clickViewStudent(course1Header, studentEmail);\n+        studentDetailsViewPage.verifyIsCorrectPage(course1.getId(), studentEmail);\n+        studentDetailsViewPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"link: edit student details page\");\n+\n+        InstructorCourseStudentDetailsEditPage studentDetailsEditPage =\n+                searchPage.clickEditStudent(course1Header, studentEmail);\n+        studentDetailsEditPage.verifyIsCorrectPage(course1.getId(), studentEmail);\n+        studentDetailsEditPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"link: view all records page\");\n+\n+        InstructorStudentRecordsPage studentRecordsPage =\n+                searchPage.clickViewAllRecords(course1Header, studentEmail);\n+        studentRecordsPage.verifyIsCorrectPage(course1.getId(), studentToView.getName());\n+        studentRecordsPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"action: delete student\");\n+\n+        StudentAttributes studentToDelete = testData.students.get(\"student2InCourse1\");\n+\n+        searchPage.deleteStudent(course1Header, studentToDelete.getEmail());\n+\n+        StudentAttributes[] studentsAfterDelete = {\n+                testData.students.get(\"student2.2InCourse1\"),\n+        };\n+\n+        searchPage.verifyStudentDetails(course1Header, studentsAfterDelete);\n+        verifyAbsentInDatastore(studentToDelete);\n+\n+        // TODO add tests for search response comments\n+\n+    }\n+\n+    private String createHeaderText(CourseAttributes course) {\n+        return \"[\" + course.getId() + \"]\";\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTMxMTUwOnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorStudentListPageE2ETest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODozMTowM1rOHkDWbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODozMTowM1rOHkDWbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NTY3OQ==", "bodyText": "Same for this, I feel like the header formatting belongs more in the page object", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507565679", "createdAt": "2020-10-19T08:31:03Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorStudentListPageE2ETest.java", "diffHunk": "@@ -0,0 +1,131 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseEnrollPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorStudentListPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_STUDENT_LIST_PAGE}.\n+ */\n+public class InstructorStudentListPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorStudentListPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+    }\n+\n+    @Test\n+    public void testAll() {\n+\n+        ______TS(\"verify loaded data\");\n+\n+        InstructorAttributes instructor = testData.instructors.get(\"instructorOfCourse1\");\n+        String instructorId = instructor.googleId;\n+\n+        AppUrl listPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_STUDENT_LIST_PAGE).withUserId(instructorId);\n+        InstructorStudentListPage listPage = loginAdminToPage(listPageUrl, InstructorStudentListPage.class);\n+\n+        CourseAttributes course1 = testData.courses.get(\"course1\");\n+        CourseAttributes course2 = testData.courses.get(\"course2\");\n+        CourseAttributes course3 = testData.courses.get(\"course3\");\n+        String course1Header = createHeaderText(course1);\n+        String course2Header = createHeaderText(course2);\n+        String course3Header = createHeaderText(course3);\n+\n+        StudentAttributes[] studentsInCourse1 = {};\n+\n+        // Note: by right, there should not be any student shown here as the instructor does not have sufficient privilege\n+        // However, due to issue #8000, the students will be listed anyway\n+        StudentAttributes[] studentsInCourse2 = {\n+                testData.students.get(\"Student1Course2\"),\n+                testData.students.get(\"Student2Course2\"),\n+                testData.students.get(\"Student3Course2\"),\n+        };\n+\n+        StudentAttributes[] studentsInCourse3 = {\n+                testData.students.get(\"Student1Course3\"),\n+                testData.students.get(\"Student2Course3\"),\n+                testData.students.get(\"Student3Course3\"),\n+                testData.students.get(\"Student4Course3\"),\n+        };\n+\n+        Map<String, StudentAttributes[]> courseHeaderToStudents = new HashMap<>();\n+        courseHeaderToStudents.put(course1Header, studentsInCourse1);\n+        courseHeaderToStudents.put(course2Header, studentsInCourse2);\n+        courseHeaderToStudents.put(course3Header, studentsInCourse3);\n+\n+        // Expand all headers first\n+\n+        for (String header : courseHeaderToStudents.keySet()) {\n+            listPage.clickCourseTabHeader(header);\n+        }\n+\n+        listPage.verifyStudentDetails(courseHeaderToStudents);\n+\n+        ______TS(\"link: enroll page\");\n+\n+        InstructorCourseEnrollPage enrollPage = listPage.clickEnrollStudents(course3Header);\n+        enrollPage.verifyIsCorrectPage(course3.getId());\n+\n+        listPage = loginAdminToPage(listPageUrl, InstructorStudentListPage.class);\n+        listPage.clickCourseTabHeader(course3Header);\n+\n+        ______TS(\"link: view student details page\");\n+\n+        StudentAttributes studentToView = testData.students.get(\"Student1Course3\");\n+        String studentEmail = studentToView.getEmail();\n+\n+        InstructorCourseStudentDetailsViewPage studentDetailsViewPage =\n+                listPage.clickViewStudent(course3Header, studentEmail);\n+        studentDetailsViewPage.verifyIsCorrectPage(course3.getId(), studentEmail);\n+        studentDetailsViewPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"link: edit student details page\");\n+\n+        InstructorCourseStudentDetailsEditPage studentDetailsEditPage =\n+                listPage.clickEditStudent(course3Header, studentEmail);\n+        studentDetailsEditPage.verifyIsCorrectPage(course3.getId(), studentEmail);\n+        studentDetailsEditPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"link: view all records page\");\n+\n+        InstructorStudentRecordsPage studentRecordsPage =\n+                listPage.clickViewAllRecords(course3Header, studentEmail);\n+        studentRecordsPage.verifyIsCorrectPage(course3.getId(), studentToView.getName());\n+        studentRecordsPage.closeCurrentWindowAndSwitchToParentWindow();\n+\n+        ______TS(\"action: delete student\");\n+\n+        StudentAttributes studentToDelete = testData.students.get(\"Student3Course3\");\n+\n+        listPage.deleteStudent(course3Header, studentToDelete.getEmail());\n+\n+        StudentAttributes[] studentsAfterDelete = {\n+                testData.students.get(\"Student1Course3\"),\n+                testData.students.get(\"Student2Course3\"),\n+                testData.students.get(\"Student4Course3\"),\n+        };\n+\n+        listPage.verifyStudentDetails(course3Header, studentsAfterDelete);\n+        verifyAbsentInDatastore(studentToDelete);\n+\n+    }\n+\n+    private String createHeaderText(CourseAttributes course) {\n+        return String.format(\"[%s]: %s\", course.getId(), course.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTMxODU1OnYy", "diffSide": "RIGHT", "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorStudentListPageE2ETest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODozMjo1NFrOHkDa4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTo0MDo1N1rOHkKPzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NjgxNg==", "bodyText": "Should we use a instructor with the appropriate privilege instead?", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507566816", "createdAt": "2020-10-19T08:32:54Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorStudentListPageE2ETest.java", "diffHunk": "@@ -0,0 +1,131 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseEnrollPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorStudentListPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_STUDENT_LIST_PAGE}.\n+ */\n+public class InstructorStudentListPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorStudentListPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+    }\n+\n+    @Test\n+    public void testAll() {\n+\n+        ______TS(\"verify loaded data\");\n+\n+        InstructorAttributes instructor = testData.instructors.get(\"instructorOfCourse1\");\n+        String instructorId = instructor.googleId;\n+\n+        AppUrl listPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_STUDENT_LIST_PAGE).withUserId(instructorId);\n+        InstructorStudentListPage listPage = loginAdminToPage(listPageUrl, InstructorStudentListPage.class);\n+\n+        CourseAttributes course1 = testData.courses.get(\"course1\");\n+        CourseAttributes course2 = testData.courses.get(\"course2\");\n+        CourseAttributes course3 = testData.courses.get(\"course3\");\n+        String course1Header = createHeaderText(course1);\n+        String course2Header = createHeaderText(course2);\n+        String course3Header = createHeaderText(course3);\n+\n+        StudentAttributes[] studentsInCourse1 = {};\n+\n+        // Note: by right, there should not be any student shown here as the instructor does not have sufficient privilege\n+        // However, due to issue #8000, the students will be listed anyway", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY2MjM3MQ==", "bodyText": "No; the entire point is to ensure that there should be nothing displayed here.", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507662371", "createdAt": "2020-10-19T11:09:59Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorStudentListPageE2ETest.java", "diffHunk": "@@ -0,0 +1,131 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseEnrollPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorStudentListPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_STUDENT_LIST_PAGE}.\n+ */\n+public class InstructorStudentListPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorStudentListPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+    }\n+\n+    @Test\n+    public void testAll() {\n+\n+        ______TS(\"verify loaded data\");\n+\n+        InstructorAttributes instructor = testData.instructors.get(\"instructorOfCourse1\");\n+        String instructorId = instructor.googleId;\n+\n+        AppUrl listPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_STUDENT_LIST_PAGE).withUserId(instructorId);\n+        InstructorStudentListPage listPage = loginAdminToPage(listPageUrl, InstructorStudentListPage.class);\n+\n+        CourseAttributes course1 = testData.courses.get(\"course1\");\n+        CourseAttributes course2 = testData.courses.get(\"course2\");\n+        CourseAttributes course3 = testData.courses.get(\"course3\");\n+        String course1Header = createHeaderText(course1);\n+        String course2Header = createHeaderText(course2);\n+        String course3Header = createHeaderText(course3);\n+\n+        StudentAttributes[] studentsInCourse1 = {};\n+\n+        // Note: by right, there should not be any student shown here as the instructor does not have sufficient privilege\n+        // However, due to issue #8000, the students will be listed anyway", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NjgxNg=="}, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY3ODY2OQ==", "bodyText": "Oh I see what you mean now.", "url": "https://github.com/TEAMMATES/teammates/pull/10796#discussion_r507678669", "createdAt": "2020-10-19T11:40:57Z", "author": {"login": "jtankw3"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorStudentListPageE2ETest.java", "diffHunk": "@@ -0,0 +1,131 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.e2e.pageobjects.InstructorCourseEnrollPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsEditPage;\n+import teammates.e2e.pageobjects.InstructorCourseStudentDetailsViewPage;\n+import teammates.e2e.pageobjects.InstructorStudentListPage;\n+import teammates.e2e.pageobjects.InstructorStudentRecordsPage;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_STUDENT_LIST_PAGE}.\n+ */\n+public class InstructorStudentListPageE2ETest extends BaseE2ETestCase {\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorStudentListPageE2ETest.json\");\n+        removeAndRestoreDataBundle(testData);\n+    }\n+\n+    @Test\n+    public void testAll() {\n+\n+        ______TS(\"verify loaded data\");\n+\n+        InstructorAttributes instructor = testData.instructors.get(\"instructorOfCourse1\");\n+        String instructorId = instructor.googleId;\n+\n+        AppUrl listPageUrl = createUrl(Const.WebPageURIs.INSTRUCTOR_STUDENT_LIST_PAGE).withUserId(instructorId);\n+        InstructorStudentListPage listPage = loginAdminToPage(listPageUrl, InstructorStudentListPage.class);\n+\n+        CourseAttributes course1 = testData.courses.get(\"course1\");\n+        CourseAttributes course2 = testData.courses.get(\"course2\");\n+        CourseAttributes course3 = testData.courses.get(\"course3\");\n+        String course1Header = createHeaderText(course1);\n+        String course2Header = createHeaderText(course2);\n+        String course3Header = createHeaderText(course3);\n+\n+        StudentAttributes[] studentsInCourse1 = {};\n+\n+        // Note: by right, there should not be any student shown here as the instructor does not have sufficient privilege\n+        // However, due to issue #8000, the students will be listed anyway", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NjgxNg=="}, "originalCommit": {"oid": "41369aa0161804a945e1dbb4d8f1b7f7f98313ee"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3411, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}