{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MzQ0Mzcx", "number": 10767, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMTowNjo1M1rOEraRoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwOToxNzowN1rOE-PnTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTU0NzIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/common/datatransfer/attributes/FeedbackQuestionAttributes.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMTowNjo1M1rOHeKoNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMDo0MDo1MVrOHeYh0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5MzQ2MQ==", "bodyText": "Shouldn't this be specific to TEXT question?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r501393461", "createdAt": "2020-10-08T01:06:53Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/attributes/FeedbackQuestionAttributes.java", "diffHunk": "@@ -31,6 +31,7 @@\n     public List<FeedbackParticipantType> showResponsesTo;\n     public List<FeedbackParticipantType> showGiverNameTo;\n     public List<FeedbackParticipantType> showRecipientNameTo;\n+    public boolean allowRichText;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb35d5b748fc44f24155b31cbc97541fcb556553"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQwOTI1MA==", "bodyText": "Ok. Will localize it to text question only.\n@xpdavid On another note, FeedbackQuestionAttributes is the single entity that handles the question's attributes. From the frontend, this allowRichText field is propagated together with the form model. Regarding your concern, should I really split it in the Backend and handle it separately?\nMy current plan would be to segregate this part into FeedbackTextQuestionDetails, as it is the Text Question specific entity.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r501409250", "createdAt": "2020-10-08T02:13:46Z", "author": {"login": "moziliar"}, "path": "src/main/java/teammates/common/datatransfer/attributes/FeedbackQuestionAttributes.java", "diffHunk": "@@ -31,6 +31,7 @@\n     public List<FeedbackParticipantType> showResponsesTo;\n     public List<FeedbackParticipantType> showGiverNameTo;\n     public List<FeedbackParticipantType> showRecipientNameTo;\n+    public boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5MzQ2MQ=="}, "originalCommit": {"oid": "bb35d5b748fc44f24155b31cbc97541fcb556553"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQxMTIxMA==", "bodyText": "I hope you notice that it does not make sense for other question types (at least rank/rubric etc.)", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r501411210", "createdAt": "2020-10-08T02:22:15Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/attributes/FeedbackQuestionAttributes.java", "diffHunk": "@@ -31,6 +31,7 @@\n     public List<FeedbackParticipantType> showResponsesTo;\n     public List<FeedbackParticipantType> showGiverNameTo;\n     public List<FeedbackParticipantType> showRecipientNameTo;\n+    public boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5MzQ2MQ=="}, "originalCommit": {"oid": "bb35d5b748fc44f24155b31cbc97541fcb556553"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzMjUzMA==", "bodyText": "Yes. It does disturb me a little when I fill in that field for other question type due to typing. Should it be a sidecar attribute for TEXT question alone instead of one baked into the question?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r501432530", "createdAt": "2020-10-08T03:50:31Z", "author": {"login": "moziliar"}, "path": "src/main/java/teammates/common/datatransfer/attributes/FeedbackQuestionAttributes.java", "diffHunk": "@@ -31,6 +31,7 @@\n     public List<FeedbackParticipantType> showResponsesTo;\n     public List<FeedbackParticipantType> showGiverNameTo;\n     public List<FeedbackParticipantType> showRecipientNameTo;\n+    public boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5MzQ2MQ=="}, "originalCommit": {"oid": "bb35d5b748fc44f24155b31cbc97541fcb556553"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzMjg4NQ==", "bodyText": "Regarding your concern, should I really split it in the Backend and handle it separately?\n\nWhat do you mean by handle it separately?\nFrankly speaking, you have to modify FeedbackTextQuestionDetails (i.e. the backend) to get things to work.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r501432885", "createdAt": "2020-10-08T03:52:03Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/attributes/FeedbackQuestionAttributes.java", "diffHunk": "@@ -31,6 +31,7 @@\n     public List<FeedbackParticipantType> showResponsesTo;\n     public List<FeedbackParticipantType> showGiverNameTo;\n     public List<FeedbackParticipantType> showRecipientNameTo;\n+    public boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5MzQ2MQ=="}, "originalCommit": {"oid": "bb35d5b748fc44f24155b31cbc97541fcb556553"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyMTIwMw==", "bodyText": "Yup. I realised and refactored it...\nIt should now be contained within FeedbackTextQuestionDetails", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r501621203", "createdAt": "2020-10-08T10:40:51Z", "author": {"login": "moziliar"}, "path": "src/main/java/teammates/common/datatransfer/attributes/FeedbackQuestionAttributes.java", "diffHunk": "@@ -31,6 +31,7 @@\n     public List<FeedbackParticipantType> showResponsesTo;\n     public List<FeedbackParticipantType> showGiverNameTo;\n     public List<FeedbackParticipantType> showRecipientNameTo;\n+    public boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5MzQ2MQ=="}, "originalCommit": {"oid": "bb35d5b748fc44f24155b31cbc97541fcb556553"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDIwNTg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMToxMToxOVrOHe2o4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMzo0OToxOVrOHfnr4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNDUyOA==", "bodyText": "boolean variable can start with is,should,has,can\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean allowRichText;\n          \n          \n            \n                private boolean shouldAllowRichText;", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502114528", "createdAt": "2020-10-09T01:11:19Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE2MDc0OA==", "bodyText": "I think the more important change needed here is boolean -> Boolean. @xpdavid you should know why.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502160748", "createdAt": "2020-10-09T03:10:39Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNDUyOA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0NTYwOQ==", "bodyText": "@xpdavid\nUnderstand. Will just rename all.\n@wkurniawan07\nWhy is there a need to use Boxed type? Is it coz of the POJO requirement? Will change it regardless.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502245609", "createdAt": "2020-10-09T07:42:53Z", "author": {"login": "moziliar"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNDUyOA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NzIxMw==", "bodyText": "Actual question detail is stored as serialized JSON string in DB. Putting as boolean should be fine as when the string is serialized back, the default constructor is called. So there will be no NPE here.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502847213", "createdAt": "2020-10-11T00:19:44Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNDUyOA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg2NDQ1NQ==", "bodyText": "So it is fine boxed or unboxed? I tend to leave it boxed for consistency then... thanks for the info.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502864455", "createdAt": "2020-10-11T04:38:20Z", "author": {"login": "moziliar"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNDUyOA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg2OTUwNQ==", "bodyText": "Let do it Boxed to explicitly say the field is null for legacy data.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502869505", "createdAt": "2020-10-11T05:51:56Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNDUyOA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkxODExMg==", "bodyText": "Let do it Boxed to explicitly say the field is null for legacy data.\n\nWait so should I tag it Nullable? Hmm then how would the legacy data turn out to be?\nAnywhere else should I turn it into Boxed type? Or just at data layer?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502918112", "createdAt": "2020-10-11T13:49:19Z", "author": {"login": "moziliar"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNDUyOA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDIwOTY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMToxMjoxMFrOHe2rAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwMDoxNTozOVrOHfjVug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNTA3Mg==", "bodyText": "Take a look at how shouldChangesRequireResponseDeletion is called. Do you need cast operation here?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502115072", "createdAt": "2020-10-09T01:12:10Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;\n+\n     public FeedbackTextQuestionDetails() {\n         super(FeedbackQuestionType.TEXT);\n         recommendedLength = null;\n+        allowRichText = true;\n     }\n \n     public FeedbackTextQuestionDetails(String questionText) {\n         super(FeedbackQuestionType.TEXT, questionText);\n         recommendedLength = null;\n+        allowRichText = true;\n     }\n \n     @Override\n     public boolean shouldChangesRequireResponseDeletion(FeedbackQuestionDetails newDetails) {\n-        return false;\n+        assert newDetails instanceof FeedbackTextQuestionDetails;\n+\n+        // delete the existing response upon change from rich text allowed to disallowed\n+        // due to the effort to cleanup of HTML tags from the respondents\n+        return !((FeedbackTextQuestionDetails) newDetails).allowRichText && allowRichText;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MDEyNA==", "bodyText": "teammates/src/main/java/teammates/common/datatransfer/questions/FeedbackContributionQuestionDetails.java\n    \n    \n        Lines 40 to 41\n      in\n      60400d6\n    \n    \n    \n    \n\n        \n          \n           FeedbackContributionQuestionDetails newContribDetails = (FeedbackContributionQuestionDetails) newDetails; \n        \n\n        \n          \n           return newContribDetails.isNotSureAllowed != this.isNotSureAllowed; \n        \n    \n  \n\n\nI refer to the above lines, where there is an explicit casting to get the ContributionQuestionDetails specific attributes. I assumed doing it inline like the above would not raise any eyebrows.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502560124", "createdAt": "2020-10-09T16:59:37Z", "author": {"login": "moziliar"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;\n+\n     public FeedbackTextQuestionDetails() {\n         super(FeedbackQuestionType.TEXT);\n         recommendedLength = null;\n+        allowRichText = true;\n     }\n \n     public FeedbackTextQuestionDetails(String questionText) {\n         super(FeedbackQuestionType.TEXT, questionText);\n         recommendedLength = null;\n+        allowRichText = true;\n     }\n \n     @Override\n     public boolean shouldChangesRequireResponseDeletion(FeedbackQuestionDetails newDetails) {\n-        return false;\n+        assert newDetails instanceof FeedbackTextQuestionDetails;\n+\n+        // delete the existing response upon change from rich text allowed to disallowed\n+        // due to the effort to cleanup of HTML tags from the respondents\n+        return !((FeedbackTextQuestionDetails) newDetails).allowRichText && allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNTA3Mg=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MDU2NQ==", "bodyText": "And that this part needs to be extracted out, as the behaviour changes according to the exact values this attribute holds.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502560565", "createdAt": "2020-10-09T17:00:20Z", "author": {"login": "moziliar"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;\n+\n     public FeedbackTextQuestionDetails() {\n         super(FeedbackQuestionType.TEXT);\n         recommendedLength = null;\n+        allowRichText = true;\n     }\n \n     public FeedbackTextQuestionDetails(String questionText) {\n         super(FeedbackQuestionType.TEXT, questionText);\n         recommendedLength = null;\n+        allowRichText = true;\n     }\n \n     @Override\n     public boolean shouldChangesRequireResponseDeletion(FeedbackQuestionDetails newDetails) {\n-        return false;\n+        assert newDetails instanceof FeedbackTextQuestionDetails;\n+\n+        // delete the existing response upon change from rich text allowed to disallowed\n+        // due to the effort to cleanup of HTML tags from the respondents\n+        return !((FeedbackTextQuestionDetails) newDetails).allowRichText && allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNTA3Mg=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NjkwNg==", "bodyText": "My bad. It's fine then :D", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502846906", "createdAt": "2020-10-11T00:15:39Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private boolean allowRichText;\n+\n     public FeedbackTextQuestionDetails() {\n         super(FeedbackQuestionType.TEXT);\n         recommendedLength = null;\n+        allowRichText = true;\n     }\n \n     public FeedbackTextQuestionDetails(String questionText) {\n         super(FeedbackQuestionType.TEXT, questionText);\n         recommendedLength = null;\n+        allowRichText = true;\n     }\n \n     @Override\n     public boolean shouldChangesRequireResponseDeletion(FeedbackQuestionDetails newDetails) {\n-        return false;\n+        assert newDetails instanceof FeedbackTextQuestionDetails;\n+\n+        // delete the existing response upon change from rich text allowed to disallowed\n+        // due to the effort to cleanup of HTML tags from the respondents\n+        return !((FeedbackTextQuestionDetails) newDetails).allowRichText && allowRichText;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNTA3Mg=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDIyMjkwOnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/common/util/JsonUtilsTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMToxNTo0MVrOHe2yWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwMDoxMzo0N1rOHfjVCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNjk1NQ==", "bodyText": "There are multiple places where you should add the new fields to the test data :D\n\nRecommend to write a script to that\nI should have said this change technically requires data migration. @madanalogy we should create post-issue step for this.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502116955", "createdAt": "2020-10-09T01:15:41Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/common/util/JsonUtilsTest.java", "diffHunk": "@@ -45,6 +45,7 @@ public void testFeedbackQuestionDetailsAdaptor_withComposedQuestionDetails_shoul\n                     + \"  \\\"feedbackSessionName\\\": \\\"testFeedbackSession\\\",\\n\"\n                     + \"  \\\"courseId\\\": \\\"testingCourse\\\",\\n\"\n                     + \"  \\\"questionDetails\\\": {\\n\"\n+                    + \"    \\\"allowRichText\\\": true,\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE1OTE3NQ==", "bodyText": "The change only affects question details for FeedbackText question types right?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502159175", "createdAt": "2020-10-09T03:03:54Z", "author": {"login": "madanalogy"}, "path": "src/test/java/teammates/common/util/JsonUtilsTest.java", "diffHunk": "@@ -45,6 +45,7 @@ public void testFeedbackQuestionDetailsAdaptor_withComposedQuestionDetails_shoul\n                     + \"  \\\"feedbackSessionName\\\": \\\"testFeedbackSession\\\",\\n\"\n                     + \"  \\\"courseId\\\": \\\"testingCourse\\\",\\n\"\n                     + \"  \\\"questionDetails\\\": {\\n\"\n+                    + \"    \\\"allowRichText\\\": true,\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNjk1NQ=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MTA1Mw==", "bodyText": "@xpdavid Do I alter all the tests already? It does not seem to break the existing tests so I probably would have to use IDE lookup to update all.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502561053", "createdAt": "2020-10-09T17:01:20Z", "author": {"login": "moziliar"}, "path": "src/test/java/teammates/common/util/JsonUtilsTest.java", "diffHunk": "@@ -45,6 +45,7 @@ public void testFeedbackQuestionDetailsAdaptor_withComposedQuestionDetails_shoul\n                     + \"  \\\"feedbackSessionName\\\": \\\"testFeedbackSession\\\",\\n\"\n                     + \"  \\\"courseId\\\": \\\"testingCourse\\\",\\n\"\n                     + \"  \\\"questionDetails\\\": {\\n\"\n+                    + \"    \\\"allowRichText\\\": true,\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNjk1NQ=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MTQ0OA==", "bodyText": "@madanalogy Yes. It is part of FeedbackTextQuestionDetails. Totally contained like other attributes.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502561448", "createdAt": "2020-10-09T17:02:02Z", "author": {"login": "moziliar"}, "path": "src/test/java/teammates/common/util/JsonUtilsTest.java", "diffHunk": "@@ -45,6 +45,7 @@ public void testFeedbackQuestionDetailsAdaptor_withComposedQuestionDetails_shoul\n                     + \"  \\\"feedbackSessionName\\\": \\\"testFeedbackSession\\\",\\n\"\n                     + \"  \\\"courseId\\\": \\\"testingCourse\\\",\\n\"\n                     + \"  \\\"questionDetails\\\": {\\n\"\n+                    + \"    \\\"allowRichText\\\": true,\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNjk1NQ=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NjcyOQ==", "bodyText": "Do I alter all the tests already?\n\nNo. See at least typicalDataBundle.json. Or we can edit the test files as post-data migration step (to \"simulate\" the legacy data format) @madanalogy your call :D", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502846729", "createdAt": "2020-10-11T00:13:47Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/common/util/JsonUtilsTest.java", "diffHunk": "@@ -45,6 +45,7 @@ public void testFeedbackQuestionDetailsAdaptor_withComposedQuestionDetails_shoul\n                     + \"  \\\"feedbackSessionName\\\": \\\"testFeedbackSession\\\",\\n\"\n                     + \"  \\\"courseId\\\": \\\"testingCourse\\\",\\n\"\n                     + \"  \\\"questionDetails\\\": {\\n\"\n+                    + \"    \\\"allowRichText\\\": true,\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNjk1NQ=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDIyNzYyOnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-edit-form/question-edit-form.component.html", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMToxNzowNFrOHe21Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMzo1MDoxOFrOHfnsXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNzY3OA==", "bodyText": "Why does styling tm-text-question-edit-details-form need to change the overall structure?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502117678", "createdAt": "2020-10-09T01:17:04Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-edit-form/question-edit-form.component.html", "diffHunk": "@@ -75,16 +75,18 @@\n               </div>\n             </div>\n             <div class=\"padding-15px\">\n-              <tm-text-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.TEXT\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-text-question-edit-details-form>\n-              <tm-contribution-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONTRIB\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-contribution-question-edit-details-form>\n-              <tm-mcq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MCQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-mcq-question-edit-details-form>\n-              <tm-msq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MSQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-msq-question-edit-details-form>\n-              <tm-num-scale-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.NUMSCALE\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-num-scale-question-edit-details-form>\n-              <tm-rank-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-options-question-edit-details-form>\n-              <tm-rank-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-recipients-question-edit-details-form>\n-              <tm-rubric-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RUBRIC\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rubric-question-edit-details-form>\n-              <tm-constsum-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-options-question-edit-details-form>\n-              <tm-constsum-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-recipients-question-edit-details-form>\n+              <div class=\"col-md-10\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzNDU3Mw==", "bodyText": "It is in response to @damithc requirement of aligning the text in the UI. Is it not appropriate if done in this way?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502534573", "createdAt": "2020-10-09T16:11:10Z", "author": {"login": "moziliar"}, "path": "src/web/app/components/question-edit-form/question-edit-form.component.html", "diffHunk": "@@ -75,16 +75,18 @@\n               </div>\n             </div>\n             <div class=\"padding-15px\">\n-              <tm-text-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.TEXT\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-text-question-edit-details-form>\n-              <tm-contribution-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONTRIB\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-contribution-question-edit-details-form>\n-              <tm-mcq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MCQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-mcq-question-edit-details-form>\n-              <tm-msq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MSQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-msq-question-edit-details-form>\n-              <tm-num-scale-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.NUMSCALE\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-num-scale-question-edit-details-form>\n-              <tm-rank-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-options-question-edit-details-form>\n-              <tm-rank-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-recipients-question-edit-details-form>\n-              <tm-rubric-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RUBRIC\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rubric-question-edit-details-form>\n-              <tm-constsum-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-options-question-edit-details-form>\n-              <tm-constsum-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-recipients-question-edit-details-form>\n+              <div class=\"col-md-10\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNzY3OA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NjQyNQ==", "bodyText": "Yes. Ideally the styling changes should only happened in tm-text-question-edit-details-form.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502846425", "createdAt": "2020-10-11T00:09:12Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-edit-form/question-edit-form.component.html", "diffHunk": "@@ -75,16 +75,18 @@\n               </div>\n             </div>\n             <div class=\"padding-15px\">\n-              <tm-text-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.TEXT\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-text-question-edit-details-form>\n-              <tm-contribution-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONTRIB\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-contribution-question-edit-details-form>\n-              <tm-mcq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MCQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-mcq-question-edit-details-form>\n-              <tm-msq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MSQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-msq-question-edit-details-form>\n-              <tm-num-scale-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.NUMSCALE\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-num-scale-question-edit-details-form>\n-              <tm-rank-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-options-question-edit-details-form>\n-              <tm-rank-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-recipients-question-edit-details-form>\n-              <tm-rubric-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RUBRIC\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rubric-question-edit-details-form>\n-              <tm-constsum-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-options-question-edit-details-form>\n-              <tm-constsum-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-recipients-question-edit-details-form>\n+              <div class=\"col-md-10\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNzY3OA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg2NDU4Ng==", "bodyText": "Ok... although it might demand a sub div in all the components. Aligning the components would be more consistent in the case of future change of style? @damithc prof, which way do you prefer? It might require hardcoding the offset in each sub components otherwise.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502864586", "createdAt": "2020-10-11T04:40:32Z", "author": {"login": "moziliar"}, "path": "src/web/app/components/question-edit-form/question-edit-form.component.html", "diffHunk": "@@ -75,16 +75,18 @@\n               </div>\n             </div>\n             <div class=\"padding-15px\">\n-              <tm-text-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.TEXT\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-text-question-edit-details-form>\n-              <tm-contribution-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONTRIB\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-contribution-question-edit-details-form>\n-              <tm-mcq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MCQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-mcq-question-edit-details-form>\n-              <tm-msq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MSQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-msq-question-edit-details-form>\n-              <tm-num-scale-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.NUMSCALE\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-num-scale-question-edit-details-form>\n-              <tm-rank-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-options-question-edit-details-form>\n-              <tm-rank-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-recipients-question-edit-details-form>\n-              <tm-rubric-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RUBRIC\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rubric-question-edit-details-form>\n-              <tm-constsum-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-options-question-edit-details-form>\n-              <tm-constsum-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-recipients-question-edit-details-form>\n+              <div class=\"col-md-10\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNzY3OA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg2OTM3Mg==", "bodyText": "I don't quite get it. The allowPlainText box should only appear for tm-text-question-edit-details-form so technically you can just move the <div> inside the component. The generated HTML structure will be the same.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502869372", "createdAt": "2020-10-11T05:50:22Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-edit-form/question-edit-form.component.html", "diffHunk": "@@ -75,16 +75,18 @@\n               </div>\n             </div>\n             <div class=\"padding-15px\">\n-              <tm-text-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.TEXT\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-text-question-edit-details-form>\n-              <tm-contribution-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONTRIB\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-contribution-question-edit-details-form>\n-              <tm-mcq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MCQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-mcq-question-edit-details-form>\n-              <tm-msq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MSQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-msq-question-edit-details-form>\n-              <tm-num-scale-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.NUMSCALE\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-num-scale-question-edit-details-form>\n-              <tm-rank-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-options-question-edit-details-form>\n-              <tm-rank-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-recipients-question-edit-details-form>\n-              <tm-rubric-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RUBRIC\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rubric-question-edit-details-form>\n-              <tm-constsum-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-options-question-edit-details-form>\n-              <tm-constsum-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-recipients-question-edit-details-form>\n+              <div class=\"col-md-10\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNzY3OA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkxODIzOQ==", "bodyText": "Oh, so we localize the alignment to only tm-text-question-edit-details-form. Will proceed as such.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502918239", "createdAt": "2020-10-11T13:50:18Z", "author": {"login": "moziliar"}, "path": "src/web/app/components/question-edit-form/question-edit-form.component.html", "diffHunk": "@@ -75,16 +75,18 @@\n               </div>\n             </div>\n             <div class=\"padding-15px\">\n-              <tm-text-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.TEXT\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-text-question-edit-details-form>\n-              <tm-contribution-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONTRIB\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-contribution-question-edit-details-form>\n-              <tm-mcq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MCQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-mcq-question-edit-details-form>\n-              <tm-msq-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.MSQ\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-msq-question-edit-details-form>\n-              <tm-num-scale-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.NUMSCALE\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-num-scale-question-edit-details-form>\n-              <tm-rank-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-options-question-edit-details-form>\n-              <tm-rank-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RANK_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rank-recipients-question-edit-details-form>\n-              <tm-rubric-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.RUBRIC\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-rubric-question-edit-details-form>\n-              <tm-constsum-options-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_OPTIONS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-options-question-edit-details-form>\n-              <tm-constsum-recipients-question-edit-details-form *ngIf=\"model.questionType === FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [details]=\"model.questionDetails\" (detailsChange)=\"triggerModelChange('questionDetails', $event)\" [isEditable]=\"model.isEditable\"></tm-constsum-recipients-question-edit-details-form>\n+              <div class=\"col-md-10\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNzY3OA=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDIzMzI2OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-edit-answer-form/text-question-edit-answer-form.component.scss", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMToxODowN1rOHe24Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNDo0MDo1M1rOHfka4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExODQyMw==", "bodyText": "Please avoid using ID for styling. Why don't use class name?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502118423", "createdAt": "2020-10-09T01:18:07Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-edit-answer-form/text-question-edit-answer-form.component.scss", "diffHunk": "@@ -1,3 +1,13 @@\n .margin-top-7px {\n   margin-top: 7px;\n }\n+\n+#plain-text-area {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MTkyOA==", "bodyText": "Ok... Thought it is a specific thing down to id, and that I saw uses of ids nearby (in the HTML file, albeit no CSS that decorates them specifically). Will just make into a class then.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502561928", "createdAt": "2020-10-09T17:03:00Z", "author": {"login": "moziliar"}, "path": "src/web/app/components/question-types/question-edit-answer-form/text-question-edit-answer-form.component.scss", "diffHunk": "@@ -1,3 +1,13 @@\n .margin-top-7px {\n   margin-top: 7px;\n }\n+\n+#plain-text-area {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExODQyMw=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NjQ2OA==", "bodyText": "(in the HTML file, albeit no CSS that decorates them specifically)\n\nLegacy code from V6 :D", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502846468", "createdAt": "2020-10-11T00:09:52Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-edit-answer-form/text-question-edit-answer-form.component.scss", "diffHunk": "@@ -1,3 +1,13 @@\n .margin-top-7px {\n   margin-top: 7px;\n }\n+\n+#plain-text-area {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExODQyMw=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg2NDYwOA==", "bodyText": "Rip... got it. Will just adopt class then:)", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502864608", "createdAt": "2020-10-11T04:40:53Z", "author": {"login": "moziliar"}, "path": "src/web/app/components/question-types/question-edit-answer-form/text-question-edit-answer-form.component.scss", "diffHunk": "@@ -1,3 +1,13 @@\n .margin-top-7px {\n   margin-top: 7px;\n }\n+\n+#plain-text-area {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExODQyMw=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDIzODU2OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMToxOTowNlrOHe27ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjoxMToyN1rOHfQSQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExOTI5MQ==", "bodyText": "You don't need the state right?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502119291", "createdAt": "2020-10-09T01:19:06Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts", "diffHunk": "@@ -14,10 +14,21 @@ import { QuestionEditDetailsFormComponent } from './question-edit-details-form.c\n export class TextQuestionEditDetailsFormComponent extends QuestionEditDetailsFormComponent<FeedbackTextQuestionDetails>\n     implements OnInit {\n \n+  allowRichText: boolean = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzNDcyMA==", "bodyText": "Yup nope... Will remove.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r502534720", "createdAt": "2020-10-09T16:11:27Z", "author": {"login": "moziliar"}, "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts", "diffHunk": "@@ -14,10 +14,21 @@ import { QuestionEditDetailsFormComponent } from './question-edit-details-form.c\n export class TextQuestionEditDetailsFormComponent extends QuestionEditDetailsFormComponent<FeedbackTextQuestionDetails>\n     implements OnInit {\n \n+  allowRichText: boolean = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExOTI5MQ=="}, "originalCommit": {"oid": "41b70c2a35808c93a4d65e5dd70fb51f45bc0f11"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MzYyNjE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjowOTozM1rOHmN_eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjowOTozM1rOHmN_eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzNzE3OA==", "bodyText": "Should use Assumption (search on codebase for example) class as -ea is turned off in GAE.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r509837178", "createdAt": "2020-10-22T02:09:33Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -13,19 +13,27 @@\n     @Nullable\n     private Integer recommendedLength;\n \n+    private Boolean shouldAllowRichText;\n+\n     public FeedbackTextQuestionDetails() {\n         super(FeedbackQuestionType.TEXT);\n         recommendedLength = null;\n+        shouldAllowRichText = true;\n     }\n \n     public FeedbackTextQuestionDetails(String questionText) {\n         super(FeedbackQuestionType.TEXT, questionText);\n         recommendedLength = null;\n+        shouldAllowRichText = true;\n     }\n \n     @Override\n     public boolean shouldChangesRequireResponseDeletion(FeedbackQuestionDetails newDetails) {\n-        return false;\n+        assert newDetails instanceof FeedbackTextQuestionDetails;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fec4f48c8ec09dd5daaf46959719db02b382f030"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MzYzMDQzOnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-edit-form/question-edit-form.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjoxMTozN1rOHmOB1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjoyMzozNFrOHnAODg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzNzc4MA==", "bodyText": "What is this for?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r509837780", "createdAt": "2020-10-22T02:11:37Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-edit-form/question-edit-form.component.ts", "diffHunk": "@@ -371,6 +371,18 @@ export class QuestionEditFormComponent implements OnInit {\n         modalRef.result.then(() => {\n           this.saveExistingQuestionEvent.emit();\n         }, () => {});\n+      // } else if (this.model.questionDetails) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fec4f48c8ec09dd5daaf46959719db02b382f030"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY2MDExMA==", "bodyText": "It was supposed to be a separate modal message to warn user of the consequence of toggling... Will remove entirely.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r510660110", "createdAt": "2020-10-23T06:23:34Z", "author": {"login": "moziliar"}, "path": "src/web/app/components/question-edit-form/question-edit-form.component.ts", "diffHunk": "@@ -371,6 +371,18 @@ export class QuestionEditFormComponent implements OnInit {\n         modalRef.result.then(() => {\n           this.saveExistingQuestionEvent.emit();\n         }, () => {});\n+      // } else if (this.model.questionDetails) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzNzc4MA=="}, "originalCommit": {"oid": "fec4f48c8ec09dd5daaf46959719db02b382f030"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MzYzMjk4OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjoxMzoxMlrOHmODRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjoxMzoxMlrOHmODRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzODE0OA==", "bodyText": "Shouldn't col-* be used with row?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r509838148", "createdAt": "2020-10-22T02:13:12Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.html", "diffHunk": "@@ -1,4 +1,13 @@\n-<div class=\"row\">\n+<div class=\"padding-15px\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fec4f48c8ec09dd5daaf46959719db02b382f030"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MzYzMzU1OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjoxMzo0MVrOHmODog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjoxMzo0MVrOHmODog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzODI0Mg==", "bodyText": "The indentation here does not look quite right.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r509838242", "createdAt": "2020-10-22T02:13:41Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts", "diffHunk": "@@ -14,10 +14,21 @@ import { QuestionEditDetailsFormComponent } from './question-edit-details-form.c\n export class TextQuestionEditDetailsFormComponent extends QuestionEditDetailsFormComponent<FeedbackTextQuestionDetails>\n     implements OnInit {\n \n+  shouldAllowRichText: boolean = true;\n+\n   constructor() {\n     super(DEFAULT_TEXT_QUESTION_DETAILS());\n   }\n \n   ngOnInit(): void {\n   }\n+\n+  /**\n+   * Toggles between plain text editor and rich text editor for the response.\n+   */\n+  toggleRichTextOption(\n+    richTextAllowed: boolean): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fec4f48c8ec09dd5daaf46959719db02b382f030"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MzYzNDc4OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjoxNDozMVrOHmOEcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMjoxNDozMVrOHmOEcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgzODQ0OA==", "bodyText": "You can remove the state as it is tracked with model", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r509838448", "createdAt": "2020-10-22T02:14:31Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts", "diffHunk": "@@ -14,10 +14,21 @@ import { QuestionEditDetailsFormComponent } from './question-edit-details-form.c\n export class TextQuestionEditDetailsFormComponent extends QuestionEditDetailsFormComponent<FeedbackTextQuestionDetails>\n     implements OnInit {\n \n+  shouldAllowRichText: boolean = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fec4f48c8ec09dd5daaf46959719db02b382f030"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDA3OTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzowNzo1N1rOHqGXpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzowNzo1N1rOHqGXpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkwNjU5Ng==", "bodyText": "Minor: I think we should have a test case to check the field is set to true when it get constructed.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r513906596", "createdAt": "2020-10-29T03:07:57Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -6,26 +6,35 @@\n import javax.annotation.Nullable;\n \n import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;\n+import teammates.common.util.Assumption;\n import teammates.common.util.Const;\n \n public class FeedbackTextQuestionDetails extends FeedbackQuestionDetails {\n \n     @Nullable\n     private Integer recommendedLength;\n \n+    private Boolean shouldAllowRichText;\n+\n     public FeedbackTextQuestionDetails() {\n         super(FeedbackQuestionType.TEXT);\n         recommendedLength = null;\n+        shouldAllowRichText = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01cc0e2f4e312012f9fb0033da8062ed2b55c1ac"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDA4NDA3OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzowOTo1MFrOHqGbOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzowOTo1MFrOHqGbOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkwNzUxNA==", "bodyText": "Minor: I think you can inline the method to the HTML template.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r513907514", "createdAt": "2020-10-29T03:09:50Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts", "diffHunk": "@@ -18,6 +18,12 @@ export class TextQuestionEditDetailsFormComponent extends QuestionEditDetailsFor\n     super(DEFAULT_TEXT_QUESTION_DETAILS());\n   }\n \n-  ngOnInit(): void {\n+  ngOnInit(): void {}\n+\n+  /**\n+   * Toggles between plain text editor and rich text editor for the response.\n+   */\n+  toggleRichTextOption(richTextAllowed: boolean): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01cc0e2f4e312012f9fb0033da8062ed2b55c1ac"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNzAyOTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwOToxNzowN1rOH7XRiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwNDoyNDo0NFrOH_p63g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwOTM1NQ==", "bodyText": "Since your variable is a boxed type instead of a primitive, would recommend following the same convention here (i.e. Boolean instead of boolean). Unless you've tried that and it doesn't work?", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r532009355", "createdAt": "2020-11-28T09:17:07Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -59,4 +68,12 @@ public Integer getRecommendedLength() {\n     public void setRecommendedLength(Integer recommendedLength) {\n         this.recommendedLength = recommendedLength;\n     }\n+\n+    public boolean getShouldAllowRichText() {\n+        return shouldAllowRichText;\n+    }\n+\n+    public void setShouldAllowRichText(boolean shouldAllowRichText) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "210b9840990fc29262312af201ffee496d9d62b1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUwOTE1MA==", "bodyText": "So sorry for the late reply too, just ended my semester with some leftover matters taken care of too. I have not tried it, but it must be an oversight from me that this remains as unboxed. Will change it.", "url": "https://github.com/TEAMMATES/teammates/pull/10767#discussion_r536509150", "createdAt": "2020-12-05T04:24:44Z", "author": {"login": "moziliar"}, "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java", "diffHunk": "@@ -59,4 +68,12 @@ public Integer getRecommendedLength() {\n     public void setRecommendedLength(Integer recommendedLength) {\n         this.recommendedLength = recommendedLength;\n     }\n+\n+    public boolean getShouldAllowRichText() {\n+        return shouldAllowRichText;\n+    }\n+\n+    public void setShouldAllowRichText(boolean shouldAllowRichText) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwOTM1NQ=="}, "originalCommit": {"oid": "210b9840990fc29262312af201ffee496d9d62b1"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3385, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}