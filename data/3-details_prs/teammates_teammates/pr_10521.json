{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxODE4NDI0", "number": 10521, "title": "[#9536] Instructor Feedback Sessions Page E2E Test ", "bodyText": "Part of #9536\nOutline of Solution\n\nAdd methods to BaseE2ETestCase to verify downloaded files exist\nAdd methods to BaseE2ETestCase to compare emails sent\nAdd InstructorFeedbackSessionsPage to represent instructor sessions page\nAdd relevant backdoor methods to compare feedback session data in datastore\nAdd InstructorFeedbackSessionsPageE2ETest to test:\n\nverify loaded data\nverify response rate\nadd new session\nadd new copied session\ncopy session\npublish results\nsend reminder email\nresend results link\nunpublish results\ndownload results\nsoft delete session\nrestore session\npermanently delete session\nrestore all session\ndelete all session", "createdAt": "2020-08-02T15:04:28Z", "url": "https://github.com/TEAMMATES/teammates/pull/10521", "merged": true, "mergeCommit": {"oid": "1ebe7a986cca5acaba15405dda9fc8e5ef2ba2dd"}, "closed": true, "closedAt": "2020-08-19T04:42:10Z", "author": {"login": "jtankw3"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6-q-wgH2gAyNDYxODE4NDI0OjlmZTU0YjdjNTFkYjE2NThiN2Q1N2Q3YWYzMmQxNDc4MDM0ZWRhNGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdARfu-gFqTQ3MDAxOTgwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9fe54b7c51db1658b7d57d7af32d1478034eda4e", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9fe54b7c51db1658b7d57d7af32d1478034eda4e", "committedDate": "2020-08-02T14:54:45Z", "message": "Add methods for downloaded file comparison"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0366e032015281de5d92e421f0a8665af76c11e", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/b0366e032015281de5d92e421f0a8665af76c11e", "committedDate": "2020-08-02T14:55:07Z", "message": "Add methods for email comparison"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22e7521c319939a9a868be39706db12c1de3403e", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/22e7521c319939a9a868be39706db12c1de3403e", "committedDate": "2020-08-02T14:56:41Z", "message": "Add backdoor methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed47abd1879b690f0c8c0ad2660019657fa7bdcd", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ed47abd1879b690f0c8c0ad2660019657fa7bdcd", "committedDate": "2020-08-02T14:56:53Z", "message": "Add InstructorFeedbackSessionsE2ETest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "370c5970546cbe8485e11b6b4b9cb1b7adc27612", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/370c5970546cbe8485e11b6b4b9cb1b7adc27612", "committedDate": "2020-08-02T15:04:16Z", "message": "Merge branch 'master' of https://github.com/TEAMMATES/teammates into instructor-sessions-e2e\n\n# Conflicts:\n#\tsrc/web/app/components/session-edit-form/session-edit-form.component.html"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d670163f8fb45e68653ccb761a60801a1af37f3", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/4d670163f8fb45e68653ccb761a60801a1af37f3", "committedDate": "2020-08-02T16:04:50Z", "message": "Fix lint and snapshots"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32d8537bfc454477ec6bc85be9a2feb3851ad906", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/32d8537bfc454477ec6bc85be9a2feb3851ad906", "committedDate": "2020-08-02T17:03:58Z", "message": "Reduce complexity of download comparison"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec18de9ba93385e3437d9b8394166411762af4f0", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ec18de9ba93385e3437d9b8394166411762af4f0", "committedDate": "2020-08-02T17:04:06Z", "message": "Add timeout for page loads"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cb8c689761129350197aead252237cfcaf912b0", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8cb8c689761129350197aead252237cfcaf912b0", "committedDate": "2020-08-11T07:30:50Z", "message": "Merge branch 'master' of https://github.com/TEAMMATES/teammates into instructor-sessions-e2e\n\n# Conflicts:\n#\tsrc/web/app/components/session-edit-form/session-edit-form.component.html\n#\tsrc/web/app/components/sessions-recycle-bin-table/sessions-recycle-bin-table.component.html\n#\tsrc/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.html"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MTM5NTUz", "url": "https://github.com/TEAMMATES/teammates/pull/10521#pullrequestreview-466139553", "createdAt": "2020-08-12T17:47:08Z", "commit": {"oid": "8cb8c689761129350197aead252237cfcaf912b0"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo0NzowOVrOG_r_tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1MDoyOVrOG_sHnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNDI5Mg==", "bodyText": "Is this necessary?", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r469434292", "createdAt": "2020-08-12T17:47:09Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -146,4 +157,45 @@ protected AdminHomePage loginAdmin() {\n         return loginAdminToPage(createUrl(Const.WebPageURIs.ADMIN_HOME_PAGE), AdminHomePage.class);\n     }\n \n+    /**\n+     * Deletes file with fileName from the downloads folder.\n+     */\n+    protected void deleteDownloadsFile(String fileName) {\n+        String filePath = getTestDownloadsFolder() + fileName;\n+        FileHelper.deleteFile(filePath);\n+    }\n+\n+    /**\n+     * Verify file with fileName is in the downloads folder.\n+     */\n+    protected void verifyDownloadedFile(String expectedFileName) {\n+        Path path = Paths.get(getTestDownloadsFolder() + expectedFileName);\n+        assertTrue(Files.exists(path));\n+    }\n+\n+    /**\n+     * Verifies that email with subject is found in the student inbox.\n+     * Student email used must be an authentic gmail account.\n+     */\n+    protected void verifyEmailSent(StudentAttributes student, String subject) {\n+        if (TestProperties.isDevServer()) {\n+            return;\n+        }\n+        EmailAccount email = new EmailAccount(student.getEmail());\n+        try {\n+            email.getUserAuthenticated();\n+            int retryLimit = 5;\n+            boolean actual = email.isEmailWithSubjectPresent(subject);\n+            while (!actual && retryLimit > 0) {\n+                retryLimit--;\n+                ThreadHelper.waitFor(1000);\n+                actual = email.isEmailWithSubjectPresent(subject);\n+            }\n+            email.markAllUnreadEmailAsRead();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb8c689761129350197aead252237cfcaf912b0"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNDYyNA==", "bodyText": "Is it feasible to also check the content (or a subset of) of the file?", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r469434624", "createdAt": "2020-08-12T17:47:38Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -146,4 +157,45 @@ protected AdminHomePage loginAdmin() {\n         return loginAdminToPage(createUrl(Const.WebPageURIs.ADMIN_HOME_PAGE), AdminHomePage.class);\n     }\n \n+    /**\n+     * Deletes file with fileName from the downloads folder.\n+     */\n+    protected void deleteDownloadsFile(String fileName) {\n+        String filePath = getTestDownloadsFolder() + fileName;\n+        FileHelper.deleteFile(filePath);\n+    }\n+\n+    /**\n+     * Verify file with fileName is in the downloads folder.\n+     */\n+    protected void verifyDownloadedFile(String expectedFileName) {\n+        Path path = Paths.get(getTestDownloadsFolder() + expectedFileName);\n+        assertTrue(Files.exists(path));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb8c689761129350197aead252237cfcaf912b0"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNTExMQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r469435111", "createdAt": "2020-08-12T17:48:32Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/pageobjects/Browser.java", "diffHunk": "@@ -58,6 +62,7 @@\n     public Browser() {\n         this.driver = createWebDriver();\n         this.driver.manage().window().maximize();\n+        this.driver.manage().timeouts().pageLoadTimeout(TestProperties.TEST_TIMEOUT * 2, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb8c689761129350197aead252237cfcaf912b0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNjMxNg==", "bodyText": "What are all these waits for?", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r469436316", "createdAt": "2020-08-12T17:50:29Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/pageobjects/InstructorFeedbackSessionsPage.java", "diffHunk": "@@ -0,0 +1,552 @@\n+package teammates.e2e.pageobjects;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.time.Instant;\n+import java.time.ZoneId;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.List;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.Const;\n+import teammates.common.util.ThreadHelper;\n+\n+/**\n+ * Represents the \"Sessions\" page for Instructors.\n+ */\n+public class InstructorFeedbackSessionsPage extends AppPage {\n+\n+    @FindBy(id = \"btn-add-session\")\n+    private WebElement addSessionButton;\n+\n+    @FindBy(id = \"session-type\")\n+    private WebElement sessionTypeDropdown;\n+\n+    @FindBy(id = \"add-course-id\")\n+    private WebElement courseIdDropdown;\n+\n+    @FindBy(id = \"add-session-name\")\n+    private WebElement sessionNameTextBox;\n+\n+    @FindBy(id = \"instructions\")\n+    private WebElement instructionsEditor;\n+\n+    @FindBy(id = \"submission-start-date\")\n+    private WebElement startDateBox;\n+\n+    @FindBy(id = \"submission-start-time\")\n+    private WebElement startTimeDropdown;\n+\n+    @FindBy(id = \"submission-end-date\")\n+    private WebElement endDateBox;\n+\n+    @FindBy(id = \"submission-end-time\")\n+    private WebElement endTimeDropdown;\n+\n+    @FindBy(id = \"grace-period\")\n+    private WebElement gracePeriodDropdown;\n+\n+    @FindBy(id = \"btn-change-visibility\")\n+    private WebElement changeVisibilityButton;\n+\n+    @FindBy(id = \"session-visibility-custom\")\n+    private WebElement customSessionVisibleTimeButton;\n+\n+    @FindBy(id = \"session-visibility-date\")\n+    private WebElement sessionVisibilityDateBox;\n+\n+    @FindBy(id = \"session-visibility-time\")\n+    private WebElement sessionVisibilityTimeDropdown;\n+\n+    @FindBy(id = \"session-visibility-at-open\")\n+    private WebElement openSessionVisibleTimeButton;\n+\n+    @FindBy(id = \"response-visibility-custom\")\n+    private WebElement customResponseVisibleTimeButton;\n+\n+    @FindBy(id = \"response-visibility-date\")\n+    private WebElement responseVisibilityDateBox;\n+\n+    @FindBy(id = \"response-visibility-time\")\n+    private WebElement responseVisibilityTimeDropdown;\n+\n+    @FindBy(id = \"response-visibility-immediately\")\n+    private WebElement immediateResponseVisibleTimeButton;\n+\n+    @FindBy(id = \"response-visibility-manually\")\n+    private WebElement manualResponseVisibleTimeButton;\n+\n+    @FindBy(id = \"btn-change-email\")\n+    private WebElement changeEmailButton;\n+\n+    @FindBy(id = \"email-opening\")\n+    private WebElement openingSessionEmailCheckbox;\n+\n+    @FindBy(id = \"email-closing\")\n+    private WebElement closingSessionEmailCheckbox;\n+\n+    @FindBy(id = \"email-published\")\n+    private WebElement publishedSessionEmailCheckbox;\n+\n+    @FindBy(id = \"btn-create-session\")\n+    private WebElement createSessionButton;\n+\n+    @FindBy(id = \"sessions-table\")\n+    private WebElement sessionsTable;\n+\n+    @FindBy(id = \"deleted-sessions-heading\")\n+    private WebElement deleteTableHeading;\n+\n+    @FindBy(id = \"btn-restore-all\")\n+    private WebElement restoreAllButton;\n+\n+    @FindBy(id = \"btn-delete-all\")\n+    private WebElement deleteAllButton;\n+\n+    @FindBy(id = \"deleted-sessions-table\")\n+    private WebElement deletedSessionsTable;\n+\n+    public InstructorFeedbackSessionsPage(Browser browser) {\n+        super(browser);\n+    }\n+\n+    @Override\n+    protected boolean containsExpectedPageContents() {\n+        return getPageTitle().contains(\"Feedback Sessions\");\n+    }\n+\n+    public void verifySessionsTable(FeedbackSessionAttributes[] sessions) {\n+        String[][] expectedValues = new String[sessions.length][4];\n+        for (int i = 0; i < sessions.length; i++) {\n+            expectedValues[i] = getSessionDetails(sessions[i]);\n+        }\n+        verifyTableBodyValues(sessionsTable, expectedValues);\n+    }\n+\n+    public void verifySessionDetails(FeedbackSessionAttributes session) {\n+        String[] expectedValues = getSessionDetails(session);\n+        int rowId = getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());\n+        verifyTableRowValues(sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId), expectedValues);\n+    }\n+\n+    public void verifySoftDeletedSessionsTable(FeedbackSessionAttributes[] sessions) {\n+        showDeleteTable();\n+        String[][] expectedValues = new String[sessions.length][4];\n+        for (int i = 0; i < sessions.length; i++) {\n+            expectedValues[i] = getSoftDeletedSessionDetails(sessions[i]);\n+        }\n+        verifyTableBodyValues(deletedSessionsTable, expectedValues);\n+    }\n+\n+    public void verifyNumSoftDeleted(int expected) {\n+        assertEquals(getNumSoftDeletedFeedbackSessions(), expected);\n+    }\n+\n+    public void verifyResponseRate(FeedbackSessionAttributes session, String expectedResponseRate) {\n+        int rowId = getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());\n+        assertEquals(expectedResponseRate, getResponseRate(rowId));\n+    }\n+\n+    public void addFeedbackSession(FeedbackSessionAttributes newSession, boolean isUsingTemplate) {\n+        clickAddSessionButton();\n+        waitForElementPresence(By.cssSelector(\"#instructions iframe\"));\n+\n+        if (isUsingTemplate) {\n+            selectDropdownOptionByText(sessionTypeDropdown, \"session using template: team peer evaluation\");\n+        } else {\n+            selectDropdownOptionByText(sessionTypeDropdown, \"session with my own questions\");\n+        }\n+        selectDropdownOptionByText(courseIdDropdown, newSession.getCourseId());\n+        fillTextBox(sessionNameTextBox, newSession.getFeedbackSessionName());\n+        setInstructions(newSession.getInstructions());\n+        setSessionStartDateTime(newSession.getStartTime(), newSession.getTimeZone());\n+        setSessionEndDateTime(newSession.getEndTime(), newSession.getTimeZone());\n+        selectGracePeriod(newSession.getGracePeriodMinutes());\n+        setVisibilitySettings(newSession);\n+        setEmailSettings(newSession);\n+\n+        clickCreateSessionButton();\n+        waitForSessionEditPage();\n+    }\n+\n+    public void addCopyOfSession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,\n+                                 String newSessionName) {\n+        clickAddSessionButton();\n+        click(browser.driver.findElement(By.id(\"btn-copy-session\")));\n+\n+        selectCourseToCopy(copyToCourse.getId());\n+        fillTextBox(browser.driver.findElement(By.id(\"copy-session-name\")), newSessionName);\n+        selectSessionToCopy(sessionToCopy.getCourseId(), sessionToCopy.getFeedbackSessionName());\n+\n+        clickConfirmCopySessionButton();\n+        waitForSessionEditPage();\n+    }\n+\n+    public void copySession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,\n+                            String newSessionName) {\n+        String copyFromCourse = sessionToCopy.getCourseId();\n+        String sessionName = sessionToCopy.getFeedbackSessionName();\n+        WebElement copyFsModal = clickCopyButtonInTable(copyFromCourse, sessionName);\n+\n+        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), newSessionName);\n+        selectCourseToCopyToInModal(copyFsModal, copyToCourse.getId());\n+\n+        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));\n+    }\n+\n+    public void moveToRecycleBin(FeedbackSessionAttributes sessionToDelete) {\n+        int rowId = getFeedbackSessionRowId(sessionToDelete.getCourseId(), sessionToDelete.getFeedbackSessionName());\n+        clickAndConfirm(browser.driver.findElement(By.id(\"btn-soft-delete-\" + rowId)));\n+        ThreadHelper.waitFor(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb8c689761129350197aead252237cfcaf912b0"}, "originalPosition": 207}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4863fd179ecde2f7a5b31b67b30d152655d73d42", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/4863fd179ecde2f7a5b31b67b30d152655d73d42", "committedDate": "2020-08-13T06:15:41Z", "message": "Merge branch 'master' of https://github.com/TEAMMATES/teammates into instructor-sessions-e2e\n\n# Conflicts:\n#\tsrc/e2e/java/teammates/e2e/pageobjects/AppPage.java\n#\tsrc/e2e/java/teammates/e2e/util/BackDoor.java\n#\tsrc/e2e/resources/testng-e2e.xml\n#\tsrc/test/java/teammates/test/cases/BaseTestCaseWithDatastoreAccess.java\n#\tsrc/web/app/components/session-edit-form/session-edit-form.component.html"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8efcef6ac71ebd6158a5e38270c21a4425d15b2e", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8efcef6ac71ebd6158a5e38270c21a4425d15b2e", "committedDate": "2020-08-13T08:14:02Z", "message": "Debug commit"}, "afterCommit": {"oid": "c143bd6a0941de6b7c7d8e51ff654d77eb1f8708", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/c143bd6a0941de6b7c7d8e51ff654d77eb1f8708", "committedDate": "2020-08-13T08:14:41Z", "message": "Debug commit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NzEyMTI1", "url": "https://github.com/TEAMMATES/teammates/pull/10521#pullrequestreview-466712125", "createdAt": "2020-08-13T12:27:32Z", "commit": {"oid": "7e459e2f7c87b79a3d02d5a1d3296c4275c472d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjoyNzozMlrOHAJPjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjoyNzozMlrOHAJPjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxMzQ4NQ==", "bodyText": "This works, but we don't really need to do a full check (otherwise we need to also maintain these test files). Just doing a quick sanity check (file name and maybe a few representative lines) is good enough.", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r469913485", "createdAt": "2020-08-13T12:27:32Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -146,4 +158,50 @@ protected AdminHomePage loginAdmin() {\n         return loginAdminToPage(createUrl(Const.WebPageURIs.ADMIN_HOME_PAGE), AdminHomePage.class);\n     }\n \n+    /**\n+     * Deletes file with fileName from the downloads folder.\n+     */\n+    protected void deleteDownloadsFile(String fileName) {\n+        String filePath = getTestDownloadsFolder() + fileName;\n+        FileHelper.deleteFile(filePath);\n+    }\n+\n+    /**\n+     * Compares file with fileName in the downloads folder with expected file in results folder.\n+     */\n+    protected void verifyDownloadedFileContent(String expectedFileName, String actualFileName) {\n+        try {\n+            String expectedFilePath = getTestResultsFolder() + expectedFileName;\n+            String actualFilePath = getTestDownloadsFolder() + actualFileName;\n+            assertEquals(FileHelper.readFile(expectedFilePath), FileHelper.readFile(actualFilePath));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e459e2f7c87b79a3d02d5a1d3296c4275c472d2"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24310719bf7f9e49bebf5a3c16f2c7fbf44a3903", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/24310719bf7f9e49bebf5a3c16f2c7fbf44a3903", "committedDate": "2020-08-13T14:33:58Z", "message": "Change to using waitUntilAnimationFinish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eafde7ccdd0d624dd2ceef4cce909dad0109cf2", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/1eafde7ccdd0d624dd2ceef4cce909dad0109cf2", "committedDate": "2020-08-13T15:32:32Z", "message": "Add content check for downloaded file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/81e213adbcd8ddb743787888d76ac15e5dc200c6", "committedDate": "2020-08-13T15:32:53Z", "message": "Remove mention of student in verifyEmailSent method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e459e2f7c87b79a3d02d5a1d3296c4275c472d2", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7e459e2f7c87b79a3d02d5a1d3296c4275c472d2", "committedDate": "2020-08-13T11:18:14Z", "message": "test"}, "afterCommit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/81e213adbcd8ddb743787888d76ac15e5dc200c6", "committedDate": "2020-08-13T15:32:53Z", "message": "Remove mention of student in verifyEmailSent method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MzU5ODUy", "url": "https://github.com/TEAMMATES/teammates/pull/10521#pullrequestreview-468359852", "createdAt": "2020-08-17T10:49:38Z", "commit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMDo0OTozOVrOHBj1Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMDo1MTo0NVrOHBj5Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM5NzcxMQ==", "bodyText": "I have seen a lot of this kind of operation, and it's not just on this PR. Is it possible to build some kind of abstraction for them? Or perhaps use the RetryManager class? But don't need to do on this PR.", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r471397711", "createdAt": "2020-08-17T10:49:39Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -146,4 +153,49 @@ protected AdminHomePage loginAdmin() {\n         return loginAdminToPage(createUrl(Const.WebPageURIs.ADMIN_HOME_PAGE), AdminHomePage.class);\n     }\n \n+    /**\n+     * Deletes file with fileName from the downloads folder.\n+     */\n+    protected void deleteDownloadsFile(String fileName) {\n+        String filePath = getTestDownloadsFolder() + fileName;\n+        FileHelper.deleteFile(filePath);\n+    }\n+\n+    /**\n+     * Verifies downloaded file has correct fileName and contains expected content.\n+     */\n+    protected void verifyDownloadedFile(String expectedContent, String expectedFileName) {\n+        try {\n+            String filePath = getTestDownloadsFolder() + expectedFileName;\n+            assertTrue(FileHelper.readFile(filePath).contains(expectedContent));\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    /**\n+     * Verifies that email with subject is found in inbox.\n+     * Email used must be an authentic gmail account.\n+     */\n+    protected void verifyEmailSent(String email, String subject) {\n+        if (TestProperties.isDevServer()) {\n+            return;\n+        }\n+        EmailAccount emailAccount = new EmailAccount(email);\n+        try {\n+            emailAccount.getUserAuthenticated();\n+            int retryLimit = 5;\n+            boolean actual = emailAccount.isEmailWithSubjectPresent(subject);\n+            while (!actual && retryLimit > 0) {\n+                retryLimit--;\n+                ThreadHelper.waitFor(1000);\n+                actual = emailAccount.isEmailWithSubjectPresent(subject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM5ODQ3OQ==", "bodyText": "Maybe use retries here, where the success condition is the existence of downloaded file?", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r471398479", "createdAt": "2020-08-17T10:51:12Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/InstructorFeedbackSessionsPageE2ETest.java", "diffHunk": "@@ -0,0 +1,288 @@\n+package teammates.e2e.cases.e2e;\n+\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.AppUrl;\n+import teammates.common.util.Const;\n+import teammates.common.util.ThreadHelper;\n+import teammates.common.util.TimeHelper;\n+import teammates.e2e.pageobjects.AppPage;\n+import teammates.e2e.pageobjects.InstructorFeedbackSessionsPage;\n+import teammates.e2e.util.TestProperties;\n+\n+/**\n+ * SUT: {@link Const.WebPageURIs#INSTRUCTOR_SESSIONS_PAGE}.\n+ */\n+public class InstructorFeedbackSessionsPageE2ETest extends BaseE2ETestCase {\n+    private InstructorAttributes instructor;\n+    private CourseAttributes course;\n+    private CourseAttributes copiedCourse;\n+    private StudentAttributes studentToEmail;\n+\n+    private FeedbackSessionAttributes openSession;\n+    private FeedbackSessionAttributes closedSession;\n+    private FeedbackSessionAttributes newSession;\n+\n+    private String fileName;\n+\n+    @Override\n+    protected void prepareTestData() {\n+        testData = loadDataBundle(\"/InstructorFeedbackSessionsPageE2ETest.json\");\n+        studentToEmail = testData.students.get(\"charlie.tmms@CFeedbackSessionsE2eT.CS1101\");\n+        if (!TestProperties.isDevServer()) {\n+            studentToEmail.email = TestProperties.TEST_STUDENT1_ACCOUNT;\n+        }\n+        removeAndRestoreDataBundle(testData);\n+\n+        instructor = testData.instructors.get(\"instructor\");\n+        course = testData.courses.get(\"course\");\n+        copiedCourse = testData.courses.get(\"course2\");\n+\n+        openSession = testData.feedbackSessions.get(\"openSession\");\n+        closedSession = testData.feedbackSessions.get(\"closedSession\");\n+        newSession = FeedbackSessionAttributes\n+                .builder(\"New Session\", course.getId())\n+                .withCreatorEmail(instructor.getEmail())\n+                .withStartTime(TimeHelper.parseInstant(\"2035-04-01 9:59 PM +0000\"))\n+                .withEndTime(TimeHelper.parseInstant(\"2035-04-30 8:00 PM +0000\"))\n+                .withSessionVisibleFromTime(Const.TIME_REPRESENTS_FOLLOW_OPENING)\n+                .withResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER)\n+                .withGracePeriod(Duration.ZERO)\n+                .withInstructions(\"<p>Please fill in the new feedback session.</p>\")\n+                .withTimeZone(course.getTimeZone())\n+                .withIsClosingEmailEnabled(true)\n+                .withIsPublishedEmailEnabled(true)\n+                .build();\n+\n+        fileName = \"/\" + openSession.getCourseId() + \"_\" + openSession.getFeedbackSessionName()\n+                + \"_result.csv\";\n+    }\n+\n+    @BeforeClass\n+    public void classSetup() {\n+        deleteDownloadsFile(fileName);\n+    }\n+\n+    @Test\n+    public void allTests() {\n+        AppUrl url = createUrl(Const.WebPageURIs.INSTRUCTOR_SESSIONS_PAGE).withUserId(instructor.googleId);\n+        InstructorFeedbackSessionsPage feedbackSessionsPage = loginAdminToPage(url, InstructorFeedbackSessionsPage.class);\n+\n+        ______TS(\"verify loaded data\");\n+        FeedbackSessionAttributes[] loadedSessions = { openSession, closedSession };\n+        feedbackSessionsPage.sortByCourseId();\n+        feedbackSessionsPage.verifySessionsTable(loadedSessions);\n+\n+        ______TS(\"verify response rate\");\n+        feedbackSessionsPage.verifyResponseRate(closedSession, getExpectedResponseRate(closedSession));\n+        feedbackSessionsPage.verifyResponseRate(openSession, getExpectedResponseRate(openSession));\n+\n+        ______TS(\"add new session\");\n+        FeedbackSessionAttributes[] sessionsForAdded = { closedSession, newSession, openSession };\n+        feedbackSessionsPage.addFeedbackSession(newSession, true);\n+\n+        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been added.\"\n+                + \"Click the \\\"Add New Question\\\" button below to begin adding questions for the feedback session.\");\n+        feedbackSessionsPage = AppPage.getNewPageInstance(browser, url,\n+                InstructorFeedbackSessionsPage.class);\n+        feedbackSessionsPage.waitForPageToLoad();\n+        feedbackSessionsPage.sortBySessionsName();\n+        feedbackSessionsPage.verifySessionsTable(sessionsForAdded);\n+        verifyPresentInDatastore(newSession);\n+\n+        ______TS(\"add new copied session\");\n+        String newName = \"Copied Name\";\n+        FeedbackSessionAttributes copiedSession = openSession.getCopy();\n+        copiedSession.setCourseId(course.getId());\n+        copiedSession.setFeedbackSessionName(newName);\n+        copiedSession.setCreatedTime(Instant.now());\n+        feedbackSessionsPage.addCopyOfSession(openSession, course, newName);\n+\n+        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been copied. \"\n+                        + \"Please modify settings/questions as necessary.\");\n+        feedbackSessionsPage = AppPage.getNewPageInstance(browser, url,\n+                InstructorFeedbackSessionsPage.class);\n+        feedbackSessionsPage.waitForPageToLoad();\n+        feedbackSessionsPage.verifySessionDetails(copiedSession);\n+        verifyPresentInDatastore(copiedSession);\n+\n+        ______TS(\"copy session\");\n+        newName = \"Copied Name 2\";\n+        FeedbackSessionAttributes copiedSession2 = openSession.getCopy();\n+        copiedSession2.setCourseId(course.getId());\n+        copiedSession2.setFeedbackSessionName(newName);\n+        copiedSession2.setCreatedTime(Instant.now());\n+        feedbackSessionsPage.copySession(openSession, course, newName);\n+\n+        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been copied. \"\n+                + \"Please modify settings/questions as necessary.\");\n+        feedbackSessionsPage = AppPage.getNewPageInstance(browser, url,\n+                InstructorFeedbackSessionsPage.class);\n+        feedbackSessionsPage.waitForPageToLoad();\n+        feedbackSessionsPage.verifySessionDetails(copiedSession2);\n+        verifyPresentInDatastore(copiedSession2);\n+\n+        ______TS(\"publish results\");\n+        openSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_NOW);\n+        feedbackSessionsPage.publishSessionResults(openSession);\n+\n+        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been published. \"\n+                + \"Please allow up to 1 hour for all the notification emails to be sent out.\");\n+        feedbackSessionsPage.verifySessionDetails(openSession);\n+        verifySessionPublishedState(openSession, true);\n+        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\"\n+                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \"\n+                + openSession.getFeedbackSessionName() + \"]\");\n+\n+        ______TS(\"send reminder email\");\n+        feedbackSessionsPage.sendReminderEmail(openSession, studentToEmail);\n+\n+        feedbackSessionsPage.verifyStatusMessage(\"Reminder e-mails have been sent out to those students\"\n+                + \" and instructors. Please allow up to 1 hour for all the notification emails to be sent out.\");\n+        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session reminder\"\n+                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \"\n+                + openSession.getFeedbackSessionName() + \"]\");\n+\n+        ______TS(\"resend results link\");\n+        feedbackSessionsPage.resendResultsLink(openSession, studentToEmail);\n+\n+        feedbackSessionsPage.verifyStatusMessage(\"Session published notification emails have been resent\"\n+                + \" to those students and instructors. Please allow up to 1 hour for all the notification emails to be\"\n+                + \" sent out.\");\n+        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results published\"\n+                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \"\n+                + openSession.getFeedbackSessionName() + \"]\");\n+\n+        ______TS(\"unpublish results\");\n+        openSession.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);\n+        feedbackSessionsPage.unpublishSessionResults(openSession);\n+\n+        feedbackSessionsPage.verifyStatusMessage(\"The feedback session has been unpublished.\");\n+        feedbackSessionsPage.verifySessionDetails(openSession);\n+        verifySessionPublishedState(openSession, false);\n+        verifyEmailSent(studentToEmail.getEmail(), \"TEAMMATES: Feedback session results unpublished\"\n+                + \" [Course: \" + copiedCourse.getName() + \"][Feedback Session: \"\n+                + openSession.getFeedbackSessionName() + \"]\");\n+\n+        ______TS(\"download results\");\n+        feedbackSessionsPage.downloadResults(openSession);\n+        ThreadHelper.waitFor(5000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM5ODU3Ng==", "bodyText": "Unrelated change?", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r471398576", "createdAt": "2020-08-17T10:51:27Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/util/BackDoor.java", "diffHunk": "@@ -520,10 +520,10 @@ public static FeedbackSessionAttributes getSoftDeletedSession(String feedbackSes\n \n         FeedbackSessionsData sessionsData = JsonUtils.fromJson(response.responseBody, FeedbackSessionsData.class);\n         FeedbackSessionData feedbackSession = sessionsData.getFeedbackSessions()\n-                        .stream()\n-                        .filter(fs -> fs.getFeedbackSessionName().equals(feedbackSessionName))\n-                        .findFirst()\n-                        .orElse(null);\n+                .stream()\n+                .filter(fs -> fs.getFeedbackSessionName().equals(feedbackSessionName))\n+                .findFirst()\n+                .orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM5ODY5OQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r471398699", "createdAt": "2020-08-17T10:51:45Z", "author": {"login": "wkurniawan07"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -50,8 +52,13 @@ public ActionResult execute() {\n         String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n         FeedbackSessionAttributes feedbackSession = logic.getFeedbackSession(feedbackSessionName, courseId);\n-        Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n \n+        if (feedbackSession == null) {\n+            return new JsonResult(\"No feedback session with name \" + feedbackSessionName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDE5MjI4", "url": "https://github.com/TEAMMATES/teammates/pull/10521#pullrequestreview-468419228", "createdAt": "2020-08-17T12:31:09Z", "commit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjozMTowOVrOHBmwWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjozMTowOVrOHBmwWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ0NTU5Mg==", "bodyText": "Also, just checking one line may not be enough. Let's make expectedContent a list.", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r471445592", "createdAt": "2020-08-17T12:31:09Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/cases/e2e/BaseE2ETestCase.java", "diffHunk": "@@ -146,4 +153,49 @@ protected AdminHomePage loginAdmin() {\n         return loginAdminToPage(createUrl(Const.WebPageURIs.ADMIN_HOME_PAGE), AdminHomePage.class);\n     }\n \n+    /**\n+     * Deletes file with fileName from the downloads folder.\n+     */\n+    protected void deleteDownloadsFile(String fileName) {\n+        String filePath = getTestDownloadsFolder() + fileName;\n+        FileHelper.deleteFile(filePath);\n+    }\n+\n+    /**\n+     * Verifies downloaded file has correct fileName and contains expected content.\n+     */\n+    protected void verifyDownloadedFile(String expectedContent, String expectedFileName) {\n+        try {\n+            String filePath = getTestDownloadsFolder() + expectedFileName;\n+            assertTrue(FileHelper.readFile(filePath).contains(expectedContent));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2516e079cf2dcdc295ba7f5bc683128817448678", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2516e079cf2dcdc295ba7f5bc683128817448678", "committedDate": "2020-08-18T13:13:29Z", "message": "Merge branch 'master' of https://github.com/TEAMMATES/teammates into instructor-sessions-e2e\n\n# Conflicts:\n#\tsrc/web/app/components/sessions-table/__snapshots__/sessions-table.component.spec.ts.snap\n#\tsrc/web/app/components/sessions-table/sessions-table.component.html\n#\tsrc/web/app/pages-instructor/instructor-home-page/__snapshots__/instructor-home-page.component.spec.ts.snap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f81db7e85966360aa8334638feb74aba9043c0c", "author": {"user": {"login": "jtankw3", "name": "Tan Kian Wei Jason"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8f81db7e85966360aa8334638feb74aba9043c0c", "committedDate": "2020-08-18T13:59:35Z", "message": "Improve verifyDownloadedFile method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMDE5ODA5", "url": "https://github.com/TEAMMATES/teammates/pull/10521#pullrequestreview-470019809", "createdAt": "2020-08-19T01:39:48Z", "commit": {"oid": "8f81db7e85966360aa8334638feb74aba9043c0c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMTozOTo0OFrOHCsVNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMTozOTo0OFrOHCsVNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU4NTUyNA==", "bodyText": "This should normally count as unrelated change, but I can close one eye.", "url": "https://github.com/TEAMMATES/teammates/pull/10521#discussion_r472585524", "createdAt": "2020-08-19T01:39:48Z", "author": {"login": "wkurniawan07"}, "path": "src/e2e/java/teammates/e2e/util/BackDoor.java", "diffHunk": "@@ -520,10 +520,10 @@ public static FeedbackSessionAttributes getSoftDeletedSession(String feedbackSes\n \n         FeedbackSessionsData sessionsData = JsonUtils.fromJson(response.responseBody, FeedbackSessionsData.class);\n         FeedbackSessionData feedbackSession = sessionsData.getFeedbackSessions()\n-                        .stream()\n-                        .filter(fs -> fs.getFeedbackSessionName().equals(feedbackSessionName))\n-                        .findFirst()\n-                        .orElse(null);\n+                .stream()\n+                .filter(fs -> fs.getFeedbackSessionName().equals(feedbackSessionName))\n+                .findFirst()\n+                .orElse(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM5ODU3Ng=="}, "originalCommit": {"oid": "81e213adbcd8ddb743787888d76ac15e5dc200c6"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4228, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}