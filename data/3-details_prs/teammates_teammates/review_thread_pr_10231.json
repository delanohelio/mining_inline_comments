{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MDc5ODMx", "number": 10231, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo0MTozNFrOEIS1RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDowMTowMFrOEI566Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTMyNjEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo0MTozNFrOGoKx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo0MTozNFrOGoKx-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3Mjg1Ng==", "bodyText": "I think here can be more consistent with style by just using if as guarding clause.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r444772856", "createdAt": "2020-06-24T09:41:34Z", "author": {"login": "Derek-Hardy"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,10 +38,17 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n-            gateKeeper.verifyAccessible(instructor, fs);\n+            if (userInfo == null) {\n+                throw new UnauthorizedAccessException(\"Instructor account is required to access this resource\");\n+            } else {\n+                InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n+                gateKeeper.verifyAccessible(instructor, fs);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3a2c6ef2a8ea4b35bbde3187626476baf2fef8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTM1NzM3OnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo1MDowMVrOGoLFIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo1MDowMVrOGoLFIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3Nzc2Mg==", "bodyText": "Maybe can have one arg on the same line as method name?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r444777762", "createdAt": "2020-06-24T09:50:01Z", "author": {"login": "Derek-Hardy"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -305,6 +335,16 @@ protected void verifyInaccessibleForSpecificInstructor(InstructorAttributes inst\n         verifyCannotAccess(params);\n     }\n \n+    protected void verifyAccessibleForAdminToMasqueradeAsInstructor(\n+            InstructorAttributes instructor, String[] submissionParams) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3a2c6ef2a8ea4b35bbde3187626476baf2fef8"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTM1ODA1OnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo1MDowOVrOGoLFfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo1MDowOVrOGoLFfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3Nzg1NQ==", "bodyText": "Like here", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r444777855", "createdAt": "2020-06-24T09:50:09Z", "author": {"login": "Derek-Hardy"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -218,6 +239,15 @@ protected void verifyOnlyInstructorsOfTheSameCourseCanAccess(String[] submission\n         verifyAccessibleForAdminToMasqueradeAsInstructor(submissionParams);\n     }\n \n+    protected void verifyOnlyInstructorsOfTheSameCourseWithCorrectCoursePrivilegeCanAccess(String privilege,\n+                                                                                           String[] submissionParams) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3a2c6ef2a8ea4b35bbde3187626476baf2fef8"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDU3ODA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/DeleteFeedbackResponseCommentAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowNjo1M1rOGoqqCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowNjo1M1rOGoqqCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTExNA==", "bodyText": "The check can be (and should be) inside getStudentOfCourseFromRequest to save the duplicated code.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445295114", "createdAt": "2020-06-25T04:06:53Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/DeleteFeedbackResponseCommentAction.java", "diffHunk": "@@ -36,6 +38,9 @@ public void checkSpecificAccessControl() {\n \n         switch (intent) {\n         case STUDENT_SUBMISSION:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDU3ODI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/DeleteFeedbackResponseCommentAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowNzowM1rOGoqqLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowNzowM1rOGoqqLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTE1MQ==", "bodyText": "Same here.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445295151", "createdAt": "2020-06-25T04:07:03Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/DeleteFeedbackResponseCommentAction.java", "diffHunk": "@@ -49,6 +54,9 @@ public void checkSpecificAccessControl() {\n                             ? student.getTeam() : student.getEmail());\n             break;\n         case INSTRUCTOR_SUBMISSION:\n+            if (userInfo == null || !userInfo.isInstructor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDU4MTAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowODo1OVrOGoqr5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowODo1OVrOGoqr5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTU4OQ==", "bodyText": "Shouldn't we use gateKeeper.verifyLoggedInUserPrivileges(); for any null check for userInfo?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445295589", "createdAt": "2020-06-25T04:08:59Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -28,16 +30,25 @@ public void checkSpecificAccessControl() {\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {\n+                throw new UnauthorizedAccessException(\"Instructor or Student account is required to access this resource.\");\n+            }\n             StudentAttributes studentAttributes = getStudentOfCourseFromRequest(courseId);\n             checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);\n             break;\n         case FULL_DETAIL:\n+            if (userInfo == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDU4MjMxOnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowOTo0NFrOGoqsng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowOTo0NFrOGoqsng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTc3NA==", "bodyText": "What is this submissionParams for?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445295774", "createdAt": "2020-06-25T04:09:44Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +180,23 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void updateInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,\n+                                                            String privilege, String[] sections, String[] submissionParams) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDU4NDMxOnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDoxMTowNlrOGoqtww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDoxMTowNlrOGoqtww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NjA2Nw==", "bodyText": "We should just throw the exception instead of keep it silent? Same for other places.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445296067", "createdAt": "2020-06-25T04:11:06Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +180,23 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void updateInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,\n+                                                            String privilege, String[] sections, String[] submissionParams) {\n+        InstructorPrivileges instructorPrivileges = new InstructorPrivileges();\n+\n+        for (String section : sections) {\n+            instructorPrivileges.updatePrivilege(section, privilege, true);\n+        }\n+\n+        try {\n+            logic.updateInstructor(\n+                    InstructorAttributes.updateOptionsWithEmailBuilder(instructor.getCourseId(), instructor.email)\n+                            .withPrivileges(instructorPrivileges).build());\n+        } catch (Exception e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDU4ODEyOnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDoxMzo0OFrOGoqwFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDoxMzo0OFrOGoqwFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NjY2Mg==", "bodyText": "As the we are setting the privilege to true, it is better to name the method as grantPrivilege instead of updatePrivilge.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445296662", "createdAt": "2020-06-25T04:13:48Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +180,23 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void updateInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806f9963e32143a47564ec68bec4f90b6ac9d98d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzY4Njg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0NzoxNlrOGpJYpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0NzoxNlrOGpJYpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5ODU2Ng==", "bodyText": "The error message is not correct as instructor can call the method to access moderated/preview person.\nActually, I think it is not the method's responsibility to verify the login privilege here. As long as the pre-condition for getStudentOfCourseFromRequest is fulfilled, it should executed.\ni.e.\n\nThe login check should be only verified at orElseGet\nOther login privilege check should be in checkAccessControlForStudentFeedbackSubmission (e.g., to verify it is logged in when access as preview person)", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445798566", "createdAt": "2020-06-25T19:47:16Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java", "diffHunk": "@@ -48,6 +48,9 @@ protected void verifyInstructorCanSeeQuestionIfInModeration(FeedbackQuestionAttr\n      * Gets the student involved in the submission process.\n      */\n     protected StudentAttributes getStudentOfCourseFromRequest(String courseId) {\n+        if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {\n+            throw new UnauthorizedAccessException(\"Student account is required to access this resource.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzY4OTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackQuestionRecipientsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0Nzo1N1rOGpJZ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0Nzo1N1rOGpJZ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5ODg5MQ==", "bodyText": "So you can delete the check?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445798891", "createdAt": "2020-06-25T19:47:57Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackQuestionRecipientsAction.java", "diffHunk": "@@ -40,11 +42,17 @@ public void checkSpecificAccessControl() {\n                 logic.getFeedbackSession(feedbackQuestion.getFeedbackSessionName(), feedbackQuestion.getCourseId());\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzY4OTQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackQuestionRecipientsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0ODowM1rOGpJaKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0ODowM1rOGpJaKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5ODk1NQ==", "bodyText": "Same here?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445798955", "createdAt": "2020-06-25T19:48:03Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackQuestionRecipientsAction.java", "diffHunk": "@@ -40,11 +42,17 @@ public void checkSpecificAccessControl() {\n                 logic.getFeedbackSession(feedbackQuestion.getFeedbackSessionName(), feedbackQuestion.getCourseId());\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {\n+                throw new UnauthorizedAccessException(\"Instructor or Student account is required to access this resource.\");\n+            }\n             gateKeeper.verifyAnswerableForStudent(feedbackQuestion);\n             StudentAttributes studentAttributes = getStudentOfCourseFromRequest(feedbackSession.getCourseId());\n             checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);\n             break;\n         case INSTRUCTOR_SUBMISSION:\n+            if (userInfo == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzY5MjMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0OTowM1rOGpJcCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0OTowM1rOGpJcCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTQzMg==", "bodyText": "Same here.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445799432", "createdAt": "2020-06-25T19:49:03Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -28,16 +30,22 @@ public void checkSpecificAccessControl() {\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzY5MzM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0OToyMFrOGpJcqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzo1MDo1OVrOGqD49A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTU5NA==", "bodyText": "break?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445799594", "createdAt": "2020-06-25T19:49:20Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -28,16 +30,22 @@ public void checkSpecificAccessControl() {\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {\n+                throw new UnauthorizedAccessException(\"Instructor or Student account is required to access this resource.\");\n+            }\n             StudentAttributes studentAttributes = getStudentOfCourseFromRequest(courseId);\n             checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);\n             break;\n         case FULL_DETAIL:\n+            gateKeeper.verifyLoggedInUserPrivileges();\n             gateKeeper.verifyAccessible(\n                     logic.getInstructorForGoogleId(courseId, userInfo.getId()),\n                     feedbackSession);\n             break;\n         case INSTRUCTOR_SUBMISSION:\n+            break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NzEwOA==", "bodyText": "I think this was automatically added from my IDE for empty switch block. I'm guessing the original intent is for it to cascade to the next block right?", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r446757108", "createdAt": "2020-06-29T03:50:59Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -28,16 +30,22 @@ public void checkSpecificAccessControl() {\n         switch (intent) {\n         case STUDENT_SUBMISSION:\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {\n+                throw new UnauthorizedAccessException(\"Instructor or Student account is required to access this resource.\");\n+            }\n             StudentAttributes studentAttributes = getStudentOfCourseFromRequest(courseId);\n             checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);\n             break;\n         case FULL_DETAIL:\n+            gateKeeper.verifyLoggedInUserPrivileges();\n             gateKeeper.verifyAccessible(\n                     logic.getInstructorForGoogleId(courseId, userInfo.getId()),\n                     feedbackSession);\n             break;\n         case INSTRUCTOR_SUBMISSION:\n+            break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTU5NA=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzY5NDM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0OTozOVrOGpJdRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNDoxODoxOVrOGqERCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTc0OQ==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445799749", "createdAt": "2020-06-25T19:49:39Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc2MzI3Mg==", "bodyText": "Removing this null check throws a NPE in verifyOnlyInstructorsOfTheSameCourseCanAccess under testAccessControl_instructorAccessHisCourseInstructorResult_shouldPass", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r446763272", "createdAt": "2020-06-29T04:18:19Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTc0OQ=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzY5NDYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0OTo0NlrOGpJdfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNDozNjo0NlrOGqEhHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTgwNQ==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445799805", "createdAt": "2020-06-25T19:49:46Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {\n+                throw new UnauthorizedAccessException(\"Instructor account is required to access this resource\");\n+            }\n+            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n             gateKeeper.verifyAccessible(instructor, fs);\n             break;\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc2MzA4OA==", "bodyText": "Removing this null check throws a NPE in verifyInaccessibleWithoutLogin under testAccessControl_withoutCorrectAuthInfoAccessStudentResult_shouldFail", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r446763088", "createdAt": "2020-06-29T04:17:24Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {\n+                throw new UnauthorizedAccessException(\"Instructor account is required to access this resource\");\n+            }\n+            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n             gateKeeper.verifyAccessible(instructor, fs);\n             break;\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTgwNQ=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc2Mzc3MA==", "bodyText": "Then it's time to figure out which part of code result in the NPE. (Does the NPE cause by accessing userInfo without checking login privilege? If yes, should the method be responsible to check the login privilege?)", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r446763770", "createdAt": "2020-06-29T04:20:41Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {\n+                throw new UnauthorizedAccessException(\"Instructor account is required to access this resource\");\n+            }\n+            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n             gateKeeper.verifyAccessible(instructor, fs);\n             break;\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTgwNQ=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc2NjMxMw==", "bodyText": "The NPE was caused by calling the action's checkSpecificAccessControl from the test case verifyInaccessibleWithoutLogin which specifically logs the user out. Since the action here is generated from the ActionFactory in WebApiServlet (if I'm not mistaken), it's feasible that someone could attempt to manually submit a request to our backend to request for the resource mapped to this action. Currently the server manages this by throwing an NPE since it can't get the userInfo.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r446766313", "createdAt": "2020-06-29T04:32:10Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {\n+                throw new UnauthorizedAccessException(\"Instructor account is required to access this resource\");\n+            }\n+            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n             gateKeeper.verifyAccessible(instructor, fs);\n             break;\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTgwNQ=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc2Njk4OQ==", "bodyText": "Ahh. I see. I thought it is the same code related to feedback submission while it is not.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r446766989", "createdAt": "2020-06-29T04:35:07Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {\n+                throw new UnauthorizedAccessException(\"Instructor account is required to access this resource\");\n+            }\n+            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n             gateKeeper.verifyAccessible(instructor, fs);\n             break;\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTgwNQ=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc2NzM4OA==", "bodyText": "Yeap, the feedback submission has no issues when I remove the extra checks as you pointed out. I'll rectify that first and request for your review afterwards.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r446767388", "createdAt": "2020-06-29T04:36:46Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -37,14 +38,18 @@ public void checkSpecificAccessControl() {\n         Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n         switch (intent) {\n         case INSTRUCTOR_RESULT:\n-            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+            if (userInfo == null || !userInfo.isInstructor) {\n+                throw new UnauthorizedAccessException(\"Instructor account is required to access this resource\");\n+            }\n+            InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.id);\n             gateKeeper.verifyAccessible(instructor, fs);\n             break;\n         case STUDENT_RESULT:\n+            if (userInfo == null && StringHelper.isEmpty(getRequestParamValue(Const.ParamsNames.REGKEY))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTgwNQ=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzY5NzAyOnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo1MDoyOVrOGpJfAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzozMDozNlrOGpSlXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwMDE5Mw==", "bodyText": "I think only is not necessary\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected void grantInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,\n          \n          \n            \n                protected void grantInstructorWithSectionPrivilege(InstructorAttributes instructor,", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445800193", "createdAt": "2020-06-25T19:50:29Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +181,22 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void grantInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwMTU1MQ==", "bodyText": "I think @Derek-Hardy has brought this up for the indentation. However, it is not ideal to put one param \"up\" for very long method.\nSee https://oss-generic.github.io/process/codingStandards/CodingStandard-Java.html", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445801551", "createdAt": "2020-06-25T19:53:08Z", "author": {"login": "xpdavid"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +181,22 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void grantInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwMDE5Mw=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk0OTI3OA==", "bodyText": "A side note: we have moved the coding standard to https://se-education.org/guides/conventions/java/index.html\nNo changes to contents though.", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445949278", "createdAt": "2020-06-26T03:30:36Z", "author": {"login": "damithc"}, "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java", "diffHunk": "@@ -177,6 +181,22 @@ protected void loginAsStudentInstructor(String userId) {\n         assertFalse(user.isAdmin);\n     }\n \n+    protected void grantInstructorWithOnlySectionPrivilege(InstructorAttributes instructor,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwMDE5Mw=="}, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzczMDMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDowMTowMFrOGpJ0Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDowMTowMFrOGpJ0Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwNTU3OA==", "bodyText": "Same reason here.\n\nActually, I think it is not the method's responsibility to verify the instructor privilege here. As long as the pre-condition for getInstructorOfCourseFromRequest is fulfilled, it should executed.\n\n\nThe login check should be only verified at L110 (where you delete the old code)\nThe caller method should verify that the entity is instructor (I think already is as checkAccessControlForInstructorFeedbackSubmission).", "url": "https://github.com/TEAMMATES/teammates/pull/10231#discussion_r445805578", "createdAt": "2020-06-25T20:01:00Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java", "diffHunk": "@@ -99,6 +102,9 @@ protected void checkAccessControlForStudentFeedbackSubmission(\n      * Gets the instructor involved in the submission process.\n      */\n     protected InstructorAttributes getInstructorOfCourseFromRequest(String courseId) {\n+        if (userInfo == null || !userInfo.isInstructor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b785f3c6f503e731430ea4f0863eb0d39cfed9b4"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3873, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}