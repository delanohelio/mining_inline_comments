{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTIxNjAw", "number": 9998, "title": "[#9946] Migration to new RESTful search endpoints - Admin search service", "bodyText": "Fixes #9946\nOutline of Solution\nThis PR enables the search for admin.\nIn a nutshell, it for students, we have to call 4 more endpoints for each student, namely the to get courses, get feedback sessions for that course, get instructors for that course and get instructor privileges for that course and joins them to create the original response object.\nFor instructor, it only calls the course service.\nI've also moved the link generation of the various links for the accounts from the backend. They can be found in the link.service.ts file.\nThis PR is based on top of #9990 and #9991, so there might be some repetitions.", "createdAt": "2020-03-27T02:51:27Z", "url": "https://github.com/TEAMMATES/teammates/pull/9998", "merged": true, "mergeCommit": {"oid": "e01257fdd6870d5b9c569c26e55e33f6ad6a1875"}, "closed": true, "closedAt": "2020-04-12T14:06:08Z", "author": {"login": "hcwong"}, "timelineItems": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSa4kFABqjMxNzU5NjM2NzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcW6rEQgH2gAyMzk0NTIxNjAwOmI5NGJmODFlZTRjNTI0ZTQ5MDkyNjRkZDQyNjQyZjFlNTdmZTdjN2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be52952ef08f5a52421d59aca7621edcf415c886", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/be52952ef08f5a52421d59aca7621edcf415c886", "committedDate": "2020-03-29T13:50:35Z", "message": "Fix linter errors and instructor service bug"}, "afterCommit": {"oid": "f389027229ad5f05eac54f61a0b29ca1e837e05d", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f389027229ad5f05eac54f61a0b29ca1e837e05d", "committedDate": "2020-03-29T14:35:51Z", "message": "Fix linter errors and instructor service bug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTUxNDAw", "url": "https://github.com/TEAMMATES/teammates/pull/9998#pullrequestreview-388551400", "createdAt": "2020-04-06T19:27:24Z", "commit": {"oid": "22efc66a8641c5a510429e6c8a0cea2af6af9b85"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToyNzoyNFrOGBmnRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTozOTo0OFrOGBnCTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzNDQwNw==", "bodyText": "Might be good to put the string literal in const.java since it is used in multiple places", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r404334407", "createdAt": "2020-04-06T19:27:24Z", "author": {"login": "tiuweehan"}, "path": "src/main/java/teammates/ui/webapi/action/SearchInstructorsAction.java", "diffHunk": "@@ -26,13 +28,30 @@ public void checkSpecificAccessControl() {\n         }\n     }\n \n+    private void addAdditionalSearchFields(InstructorsData instructorsData, List<InstructorAttributes> instructors) {\n+        instructorsData.getInstructors()\n+                .forEach((InstructorData instructor) -> {\n+                    if (instructor.getGoogleId() != null) {\n+                        AccountAttributes account = logic.getAccount(instructor.getGoogleId());\n+                        if (account != null) {\n+                            String institute = StringHelper.isEmpty(account.institute) ? \"None\" : account.institute;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22efc66a8641c5a510429e6c8a0cea2af6af9b85"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzNDgwNA==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r404334804", "createdAt": "2020-04-06T19:28:07Z", "author": {"login": "tiuweehan"}, "path": "src/main/java/teammates/ui/webapi/action/SearchStudentsAction.java", "diffHunk": "@@ -26,6 +36,44 @@ public void checkSpecificAccessControl() {\n         }\n     }\n \n+    private void populateCourseIdToInstituteMap() {\n+        for (String courseId : courseIds) {\n+            String instructorForCourseGoogleId = findAvailableInstructorGoogleIdForCourse(courseId);\n+            AccountAttributes account = logic.getAccount(instructorForCourseGoogleId);\n+            if (account == null) {\n+                continue;\n+            }\n+\n+            String institute = StringHelper.isEmpty(account.institute) ? \"None\" : account.institute;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22efc66a8641c5a510429e6c8a0cea2af6af9b85"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzODQ3NQ==", "bodyText": "Probably not necessary but you can assert that the resulting list is not empty", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r404338475", "createdAt": "2020-04-06T19:34:33Z", "author": {"login": "tiuweehan"}, "path": "src/main/java/teammates/ui/webapi/output/InstructorData.java", "diffHunk": "@@ -85,6 +93,25 @@ public void setJoinState(JoinState joinState) {\n         this.joinState = joinState;\n     }\n \n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public void setKey(List<InstructorAttributes> instructorAttributes) {\n+        this.key = StringHelper.encrypt(instructorAttributes.stream()\n+                .filter((InstructorAttributes instructorAttribute)\n+                        -> this.googleId.equals(instructorAttribute.getGoogleId()))\n+                .collect(Collectors.toList()).get(0).getKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22efc66a8641c5a510429e6c8a0cea2af6af9b85"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0MTMyNA==", "bodyText": "The URIs here can be added to java/teammates/ui/webapi/endpoints/ResourceEndpoints in the backend, and imported from api-endpoints.ts after you run generateTypes. This will ensure consistency between frontend and backend.", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r404341324", "createdAt": "2020-04-06T19:39:48Z", "author": {"login": "tiuweehan"}, "path": "src/web/services/link.service.ts", "diffHunk": "@@ -0,0 +1,139 @@\n+import { Injectable } from '@angular/core';\n+\n+import { Instructor, Student } from '../types/api-output';\n+import { environment } from './../environments/environment';\n+import { NavigationService } from './navigation.service';\n+\n+/**\n+ * Handles the logic for generating links on the client.\n+ */\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class LinkService {\n+\n+  URI_PREFIX: string = 'web';\n+  JOIN_PAGE: string = 'join';\n+  STUDENT_HOME_PAGE: string = 'student/home';\n+  INSTRUCTOR_HOME_PAGE: string = 'instuctor/home';\n+  ADMIN_ACCOUNTS_PAGE: string = 'admin/accounts';\n+  INSTRUCTOR_STUDENT_RECORDS_PAGE: string = 'instructor/students/records';\n+  SESSIONS_SUBMISSION_PAGE: string = 'sessions/submission';\n+  SESSIONS_RESULT_PAGE: string = 'sessions/result';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22efc66a8641c5a510429e6c8a0cea2af6af9b85"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22efc66a8641c5a510429e6c8a0cea2af6af9b85", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/22efc66a8641c5a510429e6c8a0cea2af6af9b85", "committedDate": "2020-03-30T10:35:51Z", "message": "Add more tests for link and feedback service"}, "afterCommit": {"oid": "f987d4c4834a3d1b9091dfbef11517a2ca3b40c1", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f987d4c4834a3d1b9091dfbef11517a2ca3b40c1", "committedDate": "2020-04-07T11:54:08Z", "message": "Fix typos"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cadd1cfc1fde4590cfcb688ce27c2fcf244fac3b", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/cadd1cfc1fde4590cfcb688ce27c2fcf244fac3b", "committedDate": "2020-04-07T13:13:56Z", "message": "Fix more rebase issues"}, "afterCommit": {"oid": "5c7279f421fe128710b4944913de17ce13fc280b", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5c7279f421fe128710b4944913de17ce13fc280b", "committedDate": "2020-04-07T13:15:13Z", "message": "Fix Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NDMxMDM3", "url": "https://github.com/TEAMMATES/teammates/pull/9998#pullrequestreview-389431037", "createdAt": "2020-04-07T19:37:53Z", "commit": {"oid": "074208ffbb06b9c41fbe1a69a381aadb323660fd"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTozNzo1M1rOGCTIAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMDowMTowMFrOGCT6og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2MzY4MA==", "bodyText": "You know the file will be auto-sync to the frontend right? Don't you think it is a bit weird for the backend to control what the frontend URL would be?", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r405063680", "createdAt": "2020-04-07T19:37:53Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/endpoints/WebPageEndpoints.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package teammates.ui.webapi.endpoints;\n+\n+import com.fasterxml.jackson.annotation.JsonValue;\n+\n+import teammates.common.util.Const.WebPageURIs;\n+\n+/**\n+ * API endpoints for web pages.\n+ */\n+public enum WebPageEndpoints {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "074208ffbb06b9c41fbe1a69a381aadb323660fd"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3MDA3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              getStudents(searchKey: string): Observable<Students> {\n          \n          \n            \n              searchStudents(searchKey: string): Observable<Students> {", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r405070075", "createdAt": "2020-04-07T19:49:36Z", "author": {"login": "xpdavid"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -0,0 +1,277 @@\n+import { Injectable } from '@angular/core';\n+import { forkJoin, Observable, of } from 'rxjs';\n+import { flatMap, map } from 'rxjs/operators';\n+import { WebPageEndpoints } from '../types/api-endpoints';\n+import {\n+  Course,\n+  FeedbackSessions,\n+  Instructor,\n+  InstructorPermissionRole,\n+  InstructorPrivilege,\n+  Instructors,\n+  Student,\n+  Students,\n+} from '../types/api-output';\n+import { Intent } from '../types/api-request';\n+import { CourseService } from './course.service';\n+import { FeedbackSessionsService } from './feedback-sessions.service';\n+import { HttpRequestService } from './http-request.service';\n+import { InstructorService } from './instructor.service';\n+import { LinkService } from './link.service';\n+\n+/**\n+ * Handles the logic for search.\n+ */\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SearchService {\n+\n+  constructor(\n+    private instructorService: InstructorService,\n+    private httpRequestService: HttpRequestService,\n+    private feedbackSessionService: FeedbackSessionsService,\n+    private courseService: CourseService,\n+    private linkService: LinkService) {\n+  }\n+\n+  searchAdmin(searchKey: string): Observable<AdminSearchResult> {\n+    return forkJoin(\n+      this.getStudents(searchKey).pipe(\n+        map((students: Students) => students.students),\n+        flatMap((studentsArray: Student[]) =>\n+                studentsArray.length !== 0\n+                  ? forkJoin(studentsArray.map((student: Student) => this.createStudentAccountSearchResult(student)))\n+                  // Returning an empty array observable in the event studentsArray is empty\n+                  // else the outer forkJoin will not complete\n+                  : of([])),\n+      ),\n+      this.getInstructors(searchKey).pipe(\n+        map((instructors: Instructors) => instructors.instructors),\n+        flatMap((instructorsArray: Instructor[]) =>\n+                instructorsArray.length !== 0\n+                  ? forkJoin(instructorsArray.map((instructor: Instructor) =>\n+                                                  this.createInstructorAccountSearchResult(instructor)))\n+                  // Returning an empty array observable in the event instructorsArray is empty.\n+                  // else the outer forkjoin will not complete\n+                  : of([])),\n+      ),\n+    ).pipe(\n+      map((resp: [StudentAccountSearchResult[], InstructorAccountSearchResult[]]) => ({\n+        students: resp[0],\n+        instructors: resp[1],\n+      })),\n+    );\n+  }\n+\n+  getStudents(searchKey: string): Observable<Students> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "074208ffbb06b9c41fbe1a69a381aadb323660fd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3MDI3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              getInstructors(searchKey: string): Observable<Instructors> {\n          \n          \n            \n              searchInstructors(searchKey: string): Observable<Instructors> {", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r405070276", "createdAt": "2020-04-07T19:49:55Z", "author": {"login": "xpdavid"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -0,0 +1,277 @@\n+import { Injectable } from '@angular/core';\n+import { forkJoin, Observable, of } from 'rxjs';\n+import { flatMap, map } from 'rxjs/operators';\n+import { WebPageEndpoints } from '../types/api-endpoints';\n+import {\n+  Course,\n+  FeedbackSessions,\n+  Instructor,\n+  InstructorPermissionRole,\n+  InstructorPrivilege,\n+  Instructors,\n+  Student,\n+  Students,\n+} from '../types/api-output';\n+import { Intent } from '../types/api-request';\n+import { CourseService } from './course.service';\n+import { FeedbackSessionsService } from './feedback-sessions.service';\n+import { HttpRequestService } from './http-request.service';\n+import { InstructorService } from './instructor.service';\n+import { LinkService } from './link.service';\n+\n+/**\n+ * Handles the logic for search.\n+ */\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SearchService {\n+\n+  constructor(\n+    private instructorService: InstructorService,\n+    private httpRequestService: HttpRequestService,\n+    private feedbackSessionService: FeedbackSessionsService,\n+    private courseService: CourseService,\n+    private linkService: LinkService) {\n+  }\n+\n+  searchAdmin(searchKey: string): Observable<AdminSearchResult> {\n+    return forkJoin(\n+      this.getStudents(searchKey).pipe(\n+        map((students: Students) => students.students),\n+        flatMap((studentsArray: Student[]) =>\n+                studentsArray.length !== 0\n+                  ? forkJoin(studentsArray.map((student: Student) => this.createStudentAccountSearchResult(student)))\n+                  // Returning an empty array observable in the event studentsArray is empty\n+                  // else the outer forkJoin will not complete\n+                  : of([])),\n+      ),\n+      this.getInstructors(searchKey).pipe(\n+        map((instructors: Instructors) => instructors.instructors),\n+        flatMap((instructorsArray: Instructor[]) =>\n+                instructorsArray.length !== 0\n+                  ? forkJoin(instructorsArray.map((instructor: Instructor) =>\n+                                                  this.createInstructorAccountSearchResult(instructor)))\n+                  // Returning an empty array observable in the event instructorsArray is empty.\n+                  // else the outer forkjoin will not complete\n+                  : of([])),\n+      ),\n+    ).pipe(\n+      map((resp: [StudentAccountSearchResult[], InstructorAccountSearchResult[]]) => ({\n+        students: resp[0],\n+        instructors: resp[1],\n+      })),\n+    );\n+  }\n+\n+  getStudents(searchKey: string): Observable<Students> {\n+    const paramMap: { [key: string]: string } = {\n+      searchkey: searchKey,\n+    };\n+    return this.httpRequestService.get('/search/students', paramMap);\n+  }\n+\n+  getInstructors(searchKey: string): Observable<Instructors> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "074208ffbb06b9c41fbe1a69a381aadb323660fd"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3Mjk5Ng==", "bodyText": "instructorGoogleId -> masqueradeGoolgeId / masqueradeInstructorGoolgeId", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r405072996", "createdAt": "2020-04-07T19:54:42Z", "author": {"login": "xpdavid"}, "path": "src/web/services/link.service.ts", "diffHunk": "@@ -0,0 +1,131 @@\n+import { Injectable } from '@angular/core';\n+\n+import { WebPageEndpoints } from '../types/api-endpoints';\n+import { Instructor, Student } from '../types/api-output';\n+import { environment } from './../environments/environment';\n+import { NavigationService } from './navigation.service';\n+\n+/**\n+ * Handles the logic for generating links on the client.\n+ */\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class LinkService {\n+\n+  constructor(private navigationService: NavigationService) {}\n+\n+  /**\n+   * Generates course join link for student.\n+   */\n+  generateCourseJoinLinkStudent(student: Student): string {\n+    const { frontendUrl }: { frontendUrl: string } = environment;\n+    const { key = '', email: studentemail, courseId: courseid }: Student = student;\n+    const params: {\n+      [key: string]: string,\n+    } = {\n+      key,\n+      studentemail,\n+      courseid,\n+      entitytype: 'student',\n+    };\n+    const encodedParams: string = this.navigationService.encodeParams(params);\n+    return `${frontendUrl}${WebPageEndpoints.JOIN_PAGE}${encodedParams}`;\n+  }\n+\n+  /**\n+   * Generates course join link for instructor.\n+   */\n+  generateCourseJoinLinkInstructor(instructor: Instructor): string {\n+    const { frontendUrl }: { frontendUrl: string } = environment;\n+    const { key = '' }: Instructor = instructor;\n+    const params: {\n+      [key: string]: string,\n+    } = {\n+      key,\n+      entitytype: 'instructor',\n+    };\n+    const encodedParams: string = this.navigationService.encodeParams(params);\n+    return `${frontendUrl}${WebPageEndpoints.JOIN_PAGE}${encodedParams}`;\n+  }\n+\n+  /**\n+   * Generates home page link.\n+   */\n+  generateHomePageLink(googleId: string, homePage: string): string {\n+    const params: {[key: string]: string} = {\n+      user: googleId,\n+    };\n+\n+    const encodedParams: string = this.navigationService.encodeParams(params);\n+    return `${homePage}${encodedParams}`;\n+  }\n+\n+  /**\n+   * Generates manage account link.\n+   */\n+  generateManageAccountLink(googleId: string, accountsPage: string): string {\n+    const params: {\n+      [key: string]: string,\n+    } = {\n+      instructorid: googleId,\n+    };\n+    const encodedParams: string = this.navigationService.encodeParams(params);\n+    return `${accountsPage}${encodedParams}`;\n+  }\n+\n+  /**\n+   * Generates record page link.\n+   * If the instructor id is not valid, return empty string.\n+   */\n+  generateRecordsPageLink(student: Student, instructorGoogleId: string): string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "074208ffbb06b9c41fbe1a69a381aadb323660fd"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3NDE0Ng==", "bodyText": "I don't think this will work. The result is the privilege of courseId for the current user (even if he is the admin) as the instructor of the course.", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r405074146", "createdAt": "2020-04-07T19:56:40Z", "author": {"login": "xpdavid"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -0,0 +1,277 @@\n+import { Injectable } from '@angular/core';\n+import { forkJoin, Observable, of } from 'rxjs';\n+import { flatMap, map } from 'rxjs/operators';\n+import { WebPageEndpoints } from '../types/api-endpoints';\n+import {\n+  Course,\n+  FeedbackSessions,\n+  Instructor,\n+  InstructorPermissionRole,\n+  InstructorPrivilege,\n+  Instructors,\n+  Student,\n+  Students,\n+} from '../types/api-output';\n+import { Intent } from '../types/api-request';\n+import { CourseService } from './course.service';\n+import { FeedbackSessionsService } from './feedback-sessions.service';\n+import { HttpRequestService } from './http-request.service';\n+import { InstructorService } from './instructor.service';\n+import { LinkService } from './link.service';\n+\n+/**\n+ * Handles the logic for search.\n+ */\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SearchService {\n+\n+  constructor(\n+    private instructorService: InstructorService,\n+    private httpRequestService: HttpRequestService,\n+    private feedbackSessionService: FeedbackSessionsService,\n+    private courseService: CourseService,\n+    private linkService: LinkService) {\n+  }\n+\n+  searchAdmin(searchKey: string): Observable<AdminSearchResult> {\n+    return forkJoin(\n+      this.getStudents(searchKey).pipe(\n+        map((students: Students) => students.students),\n+        flatMap((studentsArray: Student[]) =>\n+                studentsArray.length !== 0\n+                  ? forkJoin(studentsArray.map((student: Student) => this.createStudentAccountSearchResult(student)))\n+                  // Returning an empty array observable in the event studentsArray is empty\n+                  // else the outer forkJoin will not complete\n+                  : of([])),\n+      ),\n+      this.getInstructors(searchKey).pipe(\n+        map((instructors: Instructors) => instructors.instructors),\n+        flatMap((instructorsArray: Instructor[]) =>\n+                instructorsArray.length !== 0\n+                  ? forkJoin(instructorsArray.map((instructor: Instructor) =>\n+                                                  this.createInstructorAccountSearchResult(instructor)))\n+                  // Returning an empty array observable in the event instructorsArray is empty.\n+                  // else the outer forkjoin will not complete\n+                  : of([])),\n+      ),\n+    ).pipe(\n+      map((resp: [StudentAccountSearchResult[], InstructorAccountSearchResult[]]) => ({\n+        students: resp[0],\n+        instructors: resp[1],\n+      })),\n+    );\n+  }\n+\n+  getStudents(searchKey: string): Observable<Students> {\n+    const paramMap: { [key: string]: string } = {\n+      searchkey: searchKey,\n+    };\n+    return this.httpRequestService.get('/search/students', paramMap);\n+  }\n+\n+  getInstructors(searchKey: string): Observable<Instructors> {\n+    const paramMap: { [key: string]: string } = {\n+      searchkey: searchKey,\n+    };\n+    return this.httpRequestService.get('/search/instructors', paramMap);\n+  }\n+\n+  createStudentAccountSearchResult(student: Student): Observable<StudentAccountSearchResult> {\n+    const { courseId }: {courseId: string} = student;\n+    return forkJoin(\n+      this.feedbackSessionService.getFeedbackSessionsForStudent(courseId),\n+      this.courseService.getCourseAsStudent(courseId),\n+      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),\n+      this.instructorService.loadInstructorPrivilege({ courseId }),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "074208ffbb06b9c41fbe1a69a381aadb323660fd"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3NDU4Ng==", "bodyText": "I think the logic is a bit wrong. This is to pick a masquerade user so that we can access the record page. I think filter the instructorList is enough.\nI don't understand why instructorPrivilege gets involved here (refer to my previous)", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r405074586", "createdAt": "2020-04-07T19:57:25Z", "author": {"login": "xpdavid"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -0,0 +1,277 @@\n+import { Injectable } from '@angular/core';\n+import { forkJoin, Observable, of } from 'rxjs';\n+import { flatMap, map } from 'rxjs/operators';\n+import { WebPageEndpoints } from '../types/api-endpoints';\n+import {\n+  Course,\n+  FeedbackSessions,\n+  Instructor,\n+  InstructorPermissionRole,\n+  InstructorPrivilege,\n+  Instructors,\n+  Student,\n+  Students,\n+} from '../types/api-output';\n+import { Intent } from '../types/api-request';\n+import { CourseService } from './course.service';\n+import { FeedbackSessionsService } from './feedback-sessions.service';\n+import { HttpRequestService } from './http-request.service';\n+import { InstructorService } from './instructor.service';\n+import { LinkService } from './link.service';\n+\n+/**\n+ * Handles the logic for search.\n+ */\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SearchService {\n+\n+  constructor(\n+    private instructorService: InstructorService,\n+    private httpRequestService: HttpRequestService,\n+    private feedbackSessionService: FeedbackSessionsService,\n+    private courseService: CourseService,\n+    private linkService: LinkService) {\n+  }\n+\n+  searchAdmin(searchKey: string): Observable<AdminSearchResult> {\n+    return forkJoin(\n+      this.getStudents(searchKey).pipe(\n+        map((students: Students) => students.students),\n+        flatMap((studentsArray: Student[]) =>\n+                studentsArray.length !== 0\n+                  ? forkJoin(studentsArray.map((student: Student) => this.createStudentAccountSearchResult(student)))\n+                  // Returning an empty array observable in the event studentsArray is empty\n+                  // else the outer forkJoin will not complete\n+                  : of([])),\n+      ),\n+      this.getInstructors(searchKey).pipe(\n+        map((instructors: Instructors) => instructors.instructors),\n+        flatMap((instructorsArray: Instructor[]) =>\n+                instructorsArray.length !== 0\n+                  ? forkJoin(instructorsArray.map((instructor: Instructor) =>\n+                                                  this.createInstructorAccountSearchResult(instructor)))\n+                  // Returning an empty array observable in the event instructorsArray is empty.\n+                  // else the outer forkjoin will not complete\n+                  : of([])),\n+      ),\n+    ).pipe(\n+      map((resp: [StudentAccountSearchResult[], InstructorAccountSearchResult[]]) => ({\n+        students: resp[0],\n+        instructors: resp[1],\n+      })),\n+    );\n+  }\n+\n+  getStudents(searchKey: string): Observable<Students> {\n+    const paramMap: { [key: string]: string } = {\n+      searchkey: searchKey,\n+    };\n+    return this.httpRequestService.get('/search/students', paramMap);\n+  }\n+\n+  getInstructors(searchKey: string): Observable<Instructors> {\n+    const paramMap: { [key: string]: string } = {\n+      searchkey: searchKey,\n+    };\n+    return this.httpRequestService.get('/search/instructors', paramMap);\n+  }\n+\n+  createStudentAccountSearchResult(student: Student): Observable<StudentAccountSearchResult> {\n+    const { courseId }: {courseId: string} = student;\n+    return forkJoin(\n+      this.feedbackSessionService.getFeedbackSessionsForStudent(courseId),\n+      this.courseService.getCourseAsStudent(courseId),\n+      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),\n+      this.instructorService.loadInstructorPrivilege({ courseId }),\n+    ).pipe(\n+      map((resp: [FeedbackSessions, Course, Instructors, InstructorPrivilege]) => this.joinAdminStudent(resp, student)),\n+    );\n+  }\n+\n+  joinAdminStudent(\n+    resp: [FeedbackSessions, Course, Instructors, InstructorPrivilege], student: Student,\n+  ): StudentAccountSearchResult {\n+    const [feedbackSessions, course, instructors, instructorPrivilege]: [\n+      FeedbackSessions, Course, Instructors, InstructorPrivilege\n+    ] = resp;\n+    let studentResult: StudentAccountSearchResult = {\n+      email: '',\n+      name: '',\n+      comments: '',\n+      team: '',\n+      section: '',\n+      openSessions: {},\n+      notOpenSessions: {},\n+      publishedSessions: {},\n+      courseId: '',\n+      courseName: '',\n+      institute: '',\n+      manageAccountLink: '',\n+      homePageLink: '',\n+      recordsPageLink: '',\n+      courseJoinLink: '',\n+      googleId: '',\n+      showLinks: false,\n+    };\n+    const {\n+      email,\n+      name,\n+      comments = '',\n+      teamName: team,\n+      sectionName: section,\n+      googleId = '',\n+      institute = '',\n+    }: Student = student;\n+    studentResult = { ...studentResult, email, name, comments, team, section, googleId, institute };\n+\n+    const { courseId, courseName }: Course = course;\n+    studentResult = { ...studentResult, courseId, courseName };\n+\n+    let instructorGoogleId: string = '';\n+    // Get instructors with a valid google id.\n+    const instructorsWithGoogleIds: Instructor[] = instructors.instructors\n+      .filter((instructor: Instructor) => instructor.googleId != null);\n+    const isAllowedToModifyInstructor: boolean = instructorPrivilege.canModifyInstructor;\n+\n+    // If allowed to modify instructor for course, just pick the first valid instructor.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "074208ffbb06b9c41fbe1a69a381aadb323660fd"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3NjY0Mg==", "bodyText": "If you have time, consider how many redundant requests you may have send through the request.", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r405076642", "createdAt": "2020-04-07T20:01:00Z", "author": {"login": "xpdavid"}, "path": "src/web/services/search.service.ts", "diffHunk": "@@ -0,0 +1,277 @@\n+import { Injectable } from '@angular/core';\n+import { forkJoin, Observable, of } from 'rxjs';\n+import { flatMap, map } from 'rxjs/operators';\n+import { WebPageEndpoints } from '../types/api-endpoints';\n+import {\n+  Course,\n+  FeedbackSessions,\n+  Instructor,\n+  InstructorPermissionRole,\n+  InstructorPrivilege,\n+  Instructors,\n+  Student,\n+  Students,\n+} from '../types/api-output';\n+import { Intent } from '../types/api-request';\n+import { CourseService } from './course.service';\n+import { FeedbackSessionsService } from './feedback-sessions.service';\n+import { HttpRequestService } from './http-request.service';\n+import { InstructorService } from './instructor.service';\n+import { LinkService } from './link.service';\n+\n+/**\n+ * Handles the logic for search.\n+ */\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class SearchService {\n+\n+  constructor(\n+    private instructorService: InstructorService,\n+    private httpRequestService: HttpRequestService,\n+    private feedbackSessionService: FeedbackSessionsService,\n+    private courseService: CourseService,\n+    private linkService: LinkService) {\n+  }\n+\n+  searchAdmin(searchKey: string): Observable<AdminSearchResult> {\n+    return forkJoin(\n+      this.getStudents(searchKey).pipe(\n+        map((students: Students) => students.students),\n+        flatMap((studentsArray: Student[]) =>\n+                studentsArray.length !== 0\n+                  ? forkJoin(studentsArray.map((student: Student) => this.createStudentAccountSearchResult(student)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "074208ffbb06b9c41fbe1a69a381aadb323660fd"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNDk3OTMz", "url": "https://github.com/TEAMMATES/teammates/pull/9998#pullrequestreview-391497933", "createdAt": "2020-04-10T15:17:56Z", "commit": {"oid": "72655e035295c5ae97080d3e74a9710fd3dc83b2"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNToxNzo1NlrOGD9XLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNToxNzo1NlrOGD9XLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgwNDI3MQ==", "bodyText": "\ud83d\udc4d Nice work.", "url": "https://github.com/TEAMMATES/teammates/pull/9998#discussion_r406804271", "createdAt": "2020-04-10T15:17:56Z", "author": {"login": "xpdavid"}, "path": "src/web/services/link.service.ts", "diffHunk": "@@ -0,0 +1,138 @@\n+import { Injectable } from '@angular/core';\n+\n+import { Instructor, Student } from '../types/api-output';\n+import { environment } from './../environments/environment';\n+import { NavigationService } from './navigation.service';\n+\n+/**\n+ * Handles the logic for generating links on the client.\n+ */\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class LinkService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72655e035295c5ae97080d3e74a9710fd3dc83b2"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe12a03d3a01dc976ab3147a88d2c4ae136b4545", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/fe12a03d3a01dc976ab3147a88d2c4ae136b4545", "committedDate": "2020-04-11T14:14:15Z", "message": "Add institute and key to InstructorData"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee39420ad3b6cedabb692a8eaf922f91118c2a1f", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ee39420ad3b6cedabb692a8eaf922f91118c2a1f", "committedDate": "2020-04-11T14:14:15Z", "message": "Fix comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e3431d190fb9099090ef7ca4f3d0a9b7f71759c", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9e3431d190fb9099090ef7ca4f3d0a9b7f71759c", "committedDate": "2020-04-11T14:14:15Z", "message": "Implement search student endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2de271ead1af745a4cd29f600ec763cfc56cf8f3", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2de271ead1af745a4cd29f600ec763cfc56cf8f3", "committedDate": "2020-04-11T14:14:15Z", "message": "Implement instructors search endpoint (#2)\n\n* Add instructor search endpoint\r\n\r\n* Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d121bb03dca52fd7fc10f52f46bcfcab87e4746", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5d121bb03dca52fd7fc10f52f46bcfcab87e4746", "committedDate": "2020-04-11T14:14:15Z", "message": "Switch from SearchInstructorsData to InstructorsData (#6)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fba0f1536308fb40d630b0e73ddf2401130908d", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8fba0f1536308fb40d630b0e73ddf2401130908d", "committedDate": "2020-04-11T14:14:15Z", "message": "Switch from SearchStudentsData to StudentsData (#7)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f6a5c7c3203516100f7136f8c3f8c05a87c35c9", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7f6a5c7c3203516100f7136f8c3f8c05a87c35c9", "committedDate": "2020-04-11T14:14:15Z", "message": "Allow travis to build search migration branch (#5)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfb2cbc9f4711cd3ea6326009301918ba45c6f69", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/cfb2cbc9f4711cd3ea6326009301918ba45c6f69", "committedDate": "2020-04-11T14:14:15Z", "message": "Implement sessions search endpoint (#3)\n\n* Add sessions search endpoint\r\n\r\n* Add tests\r\n\r\n* Fix lint errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c3f5969f0e675f3d9a64be83cb95d5e41cea3b5", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/5c3f5969f0e675f3d9a64be83cb95d5e41cea3b5", "committedDate": "2020-04-11T14:14:15Z", "message": "Add course endpoint (#8)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f13e7bc2bcbe2bb32c97b3b9015af5b5170f4d5f", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f13e7bc2bcbe2bb32c97b3b9015af5b5170f4d5f", "committedDate": "2020-04-11T14:14:15Z", "message": "Implement Links Endpoint (#4)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd5230f7780caf5a0aafa9e23c593698eb8db6ed", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/cd5230f7780caf5a0aafa9e23c593698eb8db6ed", "committedDate": "2020-04-11T14:14:15Z", "message": "Add googleId  field to StudentData (#9)\n\n* Add googleid to studentdata\r\n\r\n* Add nullable to student data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93b52b6b559cb2bc2b7a6197e402381bfb4ec254", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/93b52b6b559cb2bc2b7a6197e402381bfb4ec254", "committedDate": "2020-04-11T14:14:15Z", "message": "Improve search response classes (#12)\n\n* Improve students endpoint classes\r\n\r\n* Move joinState attribute from common to student\r\n\r\n* Improve instructors endpoint classes\r\n\r\n* Revert \"Add googleId  field to StudentData (#9)\"\r\n\r\nThis reverts commit b5d46cabc092bf3bedc429ae1c771515bf149606.\r\n\r\n* Revert unnecessary InstructorData changes\r\n\r\n* Fix typo\r\n\r\n* Make joinState common\r\n\r\n* Make names sane again\r\n\r\n* Remove unused setters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c057abbf193d69cb34c8b7bdddb21ec2981d919c", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/c057abbf193d69cb34c8b7bdddb21ec2981d919c", "committedDate": "2020-04-11T14:14:15Z", "message": "Standardize search endpoints (#13)\n\n* Improve course endpoint class names\r\n\r\n* Improve links endpoint class names\r\n\r\n* Improve sessions endpoint class names\r\n\r\n* Standardize comments\r\n\r\n* Fix import order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "920c23fa606e5b1279584ec86fe5658681fd228a", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/920c23fa606e5b1279584ec86fe5658681fd228a", "committedDate": "2020-04-11T14:14:15Z", "message": "Revert travis config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8667beea151a0cc8cd6305a496fd8dd3e2222a5f", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8667beea151a0cc8cd6305a496fd8dd3e2222a5f", "committedDate": "2020-04-11T14:14:15Z", "message": "Split PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0f803709fec8c10942b73b7d38872aef29c5dae", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d0f803709fec8c10942b73b7d38872aef29c5dae", "committedDate": "2020-04-11T14:14:15Z", "message": "Revert to existing response classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f15d7a377fa5d2fb656f0fdfa7b6d8995866a377", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f15d7a377fa5d2fb656f0fdfa7b6d8995866a377", "committedDate": "2020-04-11T14:14:15Z", "message": "Allow some attributes to be optional"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d949a8f0687cd11c3c2cb862747c19139aa479af", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d949a8f0687cd11c3c2cb862747c19139aa479af", "committedDate": "2020-04-11T14:14:15Z", "message": "Improve information hiding logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc7b42b15aed582ca595aca74b03c36142456dba", "author": {"user": {"login": "dvrylc", "name": "Daryl Chan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/bc7b42b15aed582ca595aca74b03c36142456dba", "committedDate": "2020-04-11T14:14:15Z", "message": "Improve resource name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ead281077be2320a4ff70e5c10f2a01d8ad63eaa", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ead281077be2320a4ff70e5c10f2a01d8ad63eaa", "committedDate": "2020-04-11T14:14:15Z", "message": "Add key and institute field to students"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bad0f2693826420c003ef861a053258a1a7fdb52", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/bad0f2693826420c003ef861a053258a1a7fdb52", "committedDate": "2020-04-11T14:14:15Z", "message": "Fix rebase issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09b72ec0b0c628b2a241f2024cad18ead18c4233", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/09b72ec0b0c628b2a241f2024cad18ead18c4233", "committedDate": "2020-04-11T14:14:15Z", "message": "Add mapping for courseId to instructorId\n\nCo-authored-by: Daryl Chan <6095637+dvrylc@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60631701e988d38ea94c62590753d053fe1bb197", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/60631701e988d38ea94c62590753d053fe1bb197", "committedDate": "2020-04-11T14:14:15Z", "message": "Fix some comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57f0c97429ab39a235b5cb5690affee16e39a4e0", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/57f0c97429ab39a235b5cb5690affee16e39a4e0", "committedDate": "2020-04-11T14:14:15Z", "message": "Move key generation logic to studentData"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2764b739e5045a11f7b814331469475f7084cfd", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f2764b739e5045a11f7b814331469475f7084cfd", "committedDate": "2020-04-11T14:14:15Z", "message": "Implement search endpoints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55034c138b9f981af03a24abf2629e7adaabe688", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/55034c138b9f981af03a24abf2629e7adaabe688", "committedDate": "2020-04-11T14:15:57Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce3cb881a9d295f6a280888ad723cf7b97020b20", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ce3cb881a9d295f6a280888ad723cf7b97020b20", "committedDate": "2020-04-11T14:20:41Z", "message": "Fix linter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "915aa22377f0095f6fc0480a985178409e647c03", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/915aa22377f0095f6fc0480a985178409e647c03", "committedDate": "2020-04-11T14:21:15Z", "message": "Fix lexical scoping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a68aa28a74bee59dd3d1207b32eb80afcbb2579a", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a68aa28a74bee59dd3d1207b32eb80afcbb2579a", "committedDate": "2020-04-11T14:21:15Z", "message": "Make destructuring better"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0d89a867ad84aa13685ad8258fd19121c232a43", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/e0d89a867ad84aa13685ad8258fd19121c232a43", "committedDate": "2020-04-11T14:23:48Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fdf4cad8e5f3645adcd9e4682a2fa1089764b18", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/1fdf4cad8e5f3645adcd9e4682a2fa1089764b18", "committedDate": "2020-04-11T14:28:31Z", "message": "Add link generation functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc83cdbe44ec0693218850f3696c97bb76f086c0", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/fc83cdbe44ec0693218850f3696c97bb76f086c0", "committedDate": "2020-04-11T14:29:57Z", "message": "Add test for search service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4feb6db5e8e7dd60cf2ef7000a5373e28c1a04d", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a4feb6db5e8e7dd60cf2ef7000a5373e28c1a04d", "committedDate": "2020-04-11T14:30:28Z", "message": "Add more tests for link and feedback service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7b980b366211c6c777b87a25b25da2308bc6fe2", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/e7b980b366211c6c777b87a25b25da2308bc6fe2", "committedDate": "2020-04-11T14:30:28Z", "message": "Fix typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e014d22dbd835e9c4ecd5be6f5e387d55d2df38", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8e014d22dbd835e9c4ecd5be6f5e387d55d2df38", "committedDate": "2020-04-11T14:30:28Z", "message": "Fix rebase errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c64591adfdfd2d91b52d44b6c68b795f24a5fb44", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/c64591adfdfd2d91b52d44b6c68b795f24a5fb44", "committedDate": "2020-04-11T14:31:01Z", "message": "Fix Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b217727b4b769eb7a792362b6a57c914c1b62ef", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/1b217727b4b769eb7a792362b6a57c914c1b62ef", "committedDate": "2020-04-11T14:31:01Z", "message": "delete print code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75078a88d4373db026a273b46d2f65aff8be1d86", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/75078a88d4373db026a273b46d2f65aff8be1d86", "committedDate": "2020-04-11T14:33:05Z", "message": "Fix comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79ac3cf07581359ad262bb388bdb6468361c04aa", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/79ac3cf07581359ad262bb388bdb6468361c04aa", "committedDate": "2020-04-11T14:34:05Z", "message": "remove redundant calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7be1a637b2f285c14a406afa3eb456bbd8f3d940", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7be1a637b2f285c14a406afa3eb456bbd8f3d940", "committedDate": "2020-04-11T14:34:26Z", "message": "Remove navigation links from backend"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7a7bd962db44b8073b26ace98a79365bbc09a23", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d7a7bd962db44b8073b26ace98a79365bbc09a23", "committedDate": "2020-04-11T14:53:02Z", "message": "Fix rebase issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72655e035295c5ae97080d3e74a9710fd3dc83b2", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/72655e035295c5ae97080d3e74a9710fd3dc83b2", "committedDate": "2020-04-10T11:48:35Z", "message": "Remove navigation links from backend"}, "afterCommit": {"oid": "d7a7bd962db44b8073b26ace98a79365bbc09a23", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d7a7bd962db44b8073b26ace98a79365bbc09a23", "committedDate": "2020-04-11T14:53:02Z", "message": "Fix rebase issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab46a217da436f354f5e60b031dfcbf529a62875", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ab46a217da436f354f5e60b031dfcbf529a62875", "committedDate": "2020-04-11T15:18:52Z", "message": "Retrigger travis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b94bf81ee4c524e4909264dd42642f1e57fe7c7b", "author": {"user": {"login": "hcwong", "name": "Joshua Wong"}}, "url": "https://github.com/TEAMMATES/teammates/commit/b94bf81ee4c524e4909264dd42642f1e57fe7c7b", "committedDate": "2020-04-12T13:53:57Z", "message": "Linter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4386, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}