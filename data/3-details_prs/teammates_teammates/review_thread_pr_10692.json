{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNTUwMTk1", "number": 10692, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoxOToxN1rOEhGNJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTo0MDoyNFrOEhY5SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTQwMTM0OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoxOToxN1rOHOOOxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjo0NDoyNFrOHOO2oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3NTI2OA==", "bodyText": "I think the more serious problem here is that you should not use tm-loading-retry to show the loading message.", "url": "https://github.com/TEAMMATES/teammates/pull/10692#discussion_r484675268", "createdAt": "2020-09-08T06:19:17Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.html", "diffHunk": "@@ -1,4 +1,5 @@\n-<tm-loading-retry [shouldShowRetry]=\"!coursePresent\" [message]=\"'Failed to load course'\" (retryEvent)=\"getCourseEnrollPageData(courseId)\">\n+<tm-loading-retry [shouldShowRetry]=\"isLoading\" [message]=\"'Loading course...'\" (retryEvent)=\"getCourseEnrollPageData(courseId)\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abfdb5613247c3bf222ca7fd7cd4c593bab642e2"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY4NTQ3Mw==", "bodyText": "Thanks David, sorry initially I was coming from the angle that we wanted to keep the retry button while loading", "url": "https://github.com/TEAMMATES/teammates/pull/10692#discussion_r484685473", "createdAt": "2020-09-08T06:44:24Z", "author": {"login": "helloImHai"}, "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.html", "diffHunk": "@@ -1,4 +1,5 @@\n-<tm-loading-retry [shouldShowRetry]=\"!coursePresent\" [message]=\"'Failed to load course'\" (retryEvent)=\"getCourseEnrollPageData(courseId)\">\n+<tm-loading-retry [shouldShowRetry]=\"isLoading\" [message]=\"'Loading course...'\" (retryEvent)=\"getCourseEnrollPageData(courseId)\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3NTI2OA=="}, "originalCommit": {"oid": "abfdb5613247c3bf222ca7fd7cd4c593bab642e2"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDQ1MDAzOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTozNjoyOVrOHOrSqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTozNjoyOVrOHOrSqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1MTQwMw==", "bodyText": "I think there is no need to mark it as optional. It can be false at the begining", "url": "https://github.com/TEAMMATES/teammates/pull/10692#discussion_r485151403", "createdAt": "2020-09-08T19:36:29Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "diffHunk": "@@ -37,6 +37,7 @@ export class InstructorCourseEnrollPageComponent implements OnInit {\n   EnrollStatus: typeof EnrollStatus = EnrollStatus;\n   courseId: string = '';\n   coursePresent?: boolean;\n+  isLoading?: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671865611ab2b345b25c97d3b137b01c24f8409b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDQ2MzQ1OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOTo0MDoyNFrOHOrahQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNTowMDoyMFrOHO2vKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1MzQxMw==", "bodyText": "The statement can go to the complete callback (the third argument of .subscribe function) to reduce the redundancy in both success and error case .", "url": "https://github.com/TEAMMATES/teammates/pull/10692#discussion_r485153413", "createdAt": "2020-09-08T19:40:24Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "diffHunk": "@@ -356,8 +357,10 @@ export class InstructorCourseEnrollPageComponent implements OnInit {\n   getCourseEnrollPageData(courseid: string): void {\n     this.existingStudents = [];\n     this.hasLoadingStudentsFailed = false;\n+    this.isLoading = true;\n     this.courseService.hasResponsesForCourse(courseid).subscribe((resp: HasResponses) => {\n       this.coursePresent = true;\n+      this.isLoading = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671865611ab2b345b25c97d3b137b01c24f8409b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzODkyMA==", "bodyText": "Thank you, will do that", "url": "https://github.com/TEAMMATES/teammates/pull/10692#discussion_r485338920", "createdAt": "2020-09-09T05:00:20Z", "author": {"login": "helloImHai"}, "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "diffHunk": "@@ -356,8 +357,10 @@ export class InstructorCourseEnrollPageComponent implements OnInit {\n   getCourseEnrollPageData(courseid: string): void {\n     this.existingStudents = [];\n     this.hasLoadingStudentsFailed = false;\n+    this.isLoading = true;\n     this.courseService.hasResponsesForCourse(courseid).subscribe((resp: HasResponses) => {\n       this.coursePresent = true;\n+      this.isLoading = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE1MzQxMw=="}, "originalCommit": {"oid": "671865611ab2b345b25c97d3b137b01c24f8409b"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3545, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}