{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MzMxMzgx", "number": 10129, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoxMzoxNlrOEAqOoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzozNzoxNVrOEAvqnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTI3MzI4OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoxMzoxNlrOGcFHBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoxMzoxNlrOGcFHBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5NzAyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            interface Session {\n          \n          \n            \n            interface SessionTab {", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432097028", "createdAt": "2020-05-28T20:13:16Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "diffHunk": "@@ -1,14 +1,28 @@\n import { Component, OnInit } from '@angular/core';\n import { ActivatedRoute } from '@angular/router';\n import { environment } from '../../../environments/environment';\n+import { FeedbackSessionsService } from '../../../services/feedback-sessions.service';\n import { StatusMessageService } from '../../../services/status-message.service';\n import { StudentProfileService } from '../../../services/student-profile.service';\n-import { Gender, StudentProfile } from '../../../types/api-output';\n+import { StudentService } from '../../../services/student.service';\n+import {\n+  CommentOutput, FeedbackResponseComment,\n+  FeedbackSession,\n+  FeedbackSessions,\n+  Gender,\n+  QuestionOutput, ResponseOutput,\n+  SessionResults, Student,\n+  StudentProfile,\n+} from '../../../types/api-output';\n+import { Intent } from '../../../types/api-request';\n+import { CommentRowModel } from '../../components/comment-box/comment-row/comment-row.component';\n+import { CommentTableModel } from '../../components/comment-box/comment-table/comment-table.component';\n import { ErrorMessageOutput } from '../../error-message-output';\n \n interface Session {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f77f019c6af642603c3e9f3aebcaea26d93ea3"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTI3OTY1OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoxNToyOVrOGcFLTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoxNToyOVrOGcFLTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5ODEyNQ==", "bodyText": "Let's give a better naming for this.sessions", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432098125", "createdAt": "2020-05-28T20:15:29Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "diffHunk": "@@ -56,10 +75,103 @@ export class InstructorStudentRecordsPageComponent implements OnInit {\n    * Loads the student's records based on the given course ID and email.\n    */\n   loadStudentRecords(): void {\n+    this.studentService.getStudent(this.courseId, this.studentEmail).subscribe((resp: Student) => {\n+      this.studentSection = resp.sectionName;\n+    });\n     this.studentProfileService.getStudentProfile(this.studentEmail, this.courseId).subscribe((resp: StudentProfile) => {\n       this.studentProfile = resp;\n     }, (resp: ErrorMessageOutput) => {\n       this.statusMessageService.showErrorMessage(resp.error.message);\n     });\n   }\n+\n+  /**\n+   * Loads the student's feedback session results based on the given course ID and student name.\n+   */\n+  loadStudentResults(): void {\n+    this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId).subscribe((resp: FeedbackSessions) => {\n+      resp.feedbackSessions.forEach((feedbackSession: FeedbackSession) => {\n+        this.feedbackSessionsService.getFeedbackSessionsResult({\n+          courseId: this.courseId,\n+          feedbackSessionName: feedbackSession.feedbackSessionName,\n+          groupBySection: this.studentSection,\n+          intent: Intent.INSTRUCTOR_RESULT,\n+        }).subscribe((results: SessionResults) => {\n+          results.questions.forEach((q: QuestionOutput) => {\n+            q.allResponses = q.allResponses.filter((response: ResponseOutput) =>\n+                response.recipient === this.studentProfile.name ||\n+                response.giver === this.studentProfile.name);\n+          });\n+          const questions: QuestionOutput[] =\n+              results.questions.filter((q: QuestionOutput) => q.allResponses.length > 0);\n+          this.sessions.push({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f77f019c6af642603c3e9f3aebcaea26d93ea3"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTI4NjAxOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoxNzozNVrOGcFPeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoxNzozNVrOGcFPeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5OTE5Mw==", "bodyText": "Maybe you want to write a comment here?\nSessions in the same course will always have the same timezone?", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432099193", "createdAt": "2020-05-28T20:17:35Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "diffHunk": "@@ -56,10 +75,103 @@ export class InstructorStudentRecordsPageComponent implements OnInit {\n    * Loads the student's records based on the given course ID and email.\n    */\n   loadStudentRecords(): void {\n+    this.studentService.getStudent(this.courseId, this.studentEmail).subscribe((resp: Student) => {\n+      this.studentSection = resp.sectionName;\n+    });\n     this.studentProfileService.getStudentProfile(this.studentEmail, this.courseId).subscribe((resp: StudentProfile) => {\n       this.studentProfile = resp;\n     }, (resp: ErrorMessageOutput) => {\n       this.statusMessageService.showErrorMessage(resp.error.message);\n     });\n   }\n+\n+  /**\n+   * Loads the student's feedback session results based on the given course ID and student name.\n+   */\n+  loadStudentResults(): void {\n+    this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId).subscribe((resp: FeedbackSessions) => {\n+      resp.feedbackSessions.forEach((feedbackSession: FeedbackSession) => {\n+        this.feedbackSessionsService.getFeedbackSessionsResult({\n+          courseId: this.courseId,\n+          feedbackSessionName: feedbackSession.feedbackSessionName,\n+          groupBySection: this.studentSection,\n+          intent: Intent.INSTRUCTOR_RESULT,\n+        }).subscribe((results: SessionResults) => {\n+          results.questions.forEach((q: QuestionOutput) => {\n+            q.allResponses = q.allResponses.filter((response: ResponseOutput) =>\n+                response.recipient === this.studentProfile.name ||\n+                response.giver === this.studentProfile.name);\n+          });\n+          const questions: QuestionOutput[] =\n+              results.questions.filter((q: QuestionOutput) => q.allResponses.length > 0);\n+          this.sessions.push({\n+            questions,\n+            feedbackSession,\n+            isCollapsed: questions.length === 0,\n+          });\n+          results.questions.forEach((qn: QuestionOutput) => this.preprocessComments(qn.allResponses));\n+        });\n+      });\n+    }, (errorMessageOutput: ErrorMessageOutput) => {\n+      this.statusMessageService.showErrorMessage(errorMessageOutput.error.message);\n+    });\n+  }\n+\n+  /**\n+   * Preprocesses the comments from instructor.\n+   *\n+   * <p>The instructor comment will be moved to map {@code instructorCommentTableModel}. The original\n+   * instructor comments associated with the response will be deleted.\n+   */\n+  preprocessComments(responses: ResponseOutput[]): void {\n+    responses.forEach((response: ResponseOutput) => {\n+      this.instructorCommentTableModel[response.responseId] =\n+          this.getCommentTableModel(response.instructorComments);\n+\n+      // clear the original comments for safe as instructorCommentTableModel will become the single point of truth\n+      response.instructorComments = [];\n+    });\n+  }\n+\n+  /**\n+   * Transforms instructor comments to a comment table model.\n+   */\n+  getCommentTableModel(comments: CommentOutput[]): CommentTableModel {\n+    return {\n+      commentRows: comments.map((comment: FeedbackResponseComment) => this.getCommentRowModel(comment)),\n+      newCommentRow: {\n+        commentEditFormModel: {\n+          commentText: '',\n+          isUsingCustomVisibilities: false,\n+          showCommentTo: [],\n+          showGiverNameTo: [],\n+        },\n+\n+        isEditing: false,\n+      },\n+      isAddingNewComment: false,\n+    };\n+  }\n+\n+  /**\n+   * Transforms a comment to a comment row model.\n+   */\n+  getCommentRowModel(comment: CommentOutput): CommentRowModel {\n+    return {\n+      originalComment: comment,\n+      timezone: this.sessions[0] != null ? this.sessions[0].feedbackSession.timeZone : '',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f77f019c6af642603c3e9f3aebcaea26d93ea3"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTI5NTc3OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoyMDo1N1rOGcFVqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMDozNDozNFrOGcLKMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwMDc3OQ==", "bodyText": "Here you will know whether the student is giver or recipient.\nTry to separate them to two groups.", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432100779", "createdAt": "2020-05-28T20:20:57Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "diffHunk": "@@ -56,10 +75,103 @@ export class InstructorStudentRecordsPageComponent implements OnInit {\n    * Loads the student's records based on the given course ID and email.\n    */\n   loadStudentRecords(): void {\n+    this.studentService.getStudent(this.courseId, this.studentEmail).subscribe((resp: Student) => {\n+      this.studentSection = resp.sectionName;\n+    });\n     this.studentProfileService.getStudentProfile(this.studentEmail, this.courseId).subscribe((resp: StudentProfile) => {\n       this.studentProfile = resp;\n     }, (resp: ErrorMessageOutput) => {\n       this.statusMessageService.showErrorMessage(resp.error.message);\n     });\n   }\n+\n+  /**\n+   * Loads the student's feedback session results based on the given course ID and student name.\n+   */\n+  loadStudentResults(): void {\n+    this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId).subscribe((resp: FeedbackSessions) => {\n+      resp.feedbackSessions.forEach((feedbackSession: FeedbackSession) => {\n+        this.feedbackSessionsService.getFeedbackSessionsResult({\n+          courseId: this.courseId,\n+          feedbackSessionName: feedbackSession.feedbackSessionName,\n+          groupBySection: this.studentSection,\n+          intent: Intent.INSTRUCTOR_RESULT,\n+        }).subscribe((results: SessionResults) => {\n+          results.questions.forEach((q: QuestionOutput) => {\n+            q.allResponses = q.allResponses.filter((response: ResponseOutput) =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f77f019c6af642603c3e9f3aebcaea26d93ea3"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5NTc0NQ==", "bodyText": "I did try but I couldn't filter them properly so I reverted to single question set. I'll go back to the two groups and ask for help if I get stuck again :\")", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432195745", "createdAt": "2020-05-29T00:32:44Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "diffHunk": "@@ -56,10 +75,103 @@ export class InstructorStudentRecordsPageComponent implements OnInit {\n    * Loads the student's records based on the given course ID and email.\n    */\n   loadStudentRecords(): void {\n+    this.studentService.getStudent(this.courseId, this.studentEmail).subscribe((resp: Student) => {\n+      this.studentSection = resp.sectionName;\n+    });\n     this.studentProfileService.getStudentProfile(this.studentEmail, this.courseId).subscribe((resp: StudentProfile) => {\n       this.studentProfile = resp;\n     }, (resp: ErrorMessageOutput) => {\n       this.statusMessageService.showErrorMessage(resp.error.message);\n     });\n   }\n+\n+  /**\n+   * Loads the student's feedback session results based on the given course ID and student name.\n+   */\n+  loadStudentResults(): void {\n+    this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId).subscribe((resp: FeedbackSessions) => {\n+      resp.feedbackSessions.forEach((feedbackSession: FeedbackSession) => {\n+        this.feedbackSessionsService.getFeedbackSessionsResult({\n+          courseId: this.courseId,\n+          feedbackSessionName: feedbackSession.feedbackSessionName,\n+          groupBySection: this.studentSection,\n+          intent: Intent.INSTRUCTOR_RESULT,\n+        }).subscribe((results: SessionResults) => {\n+          results.questions.forEach((q: QuestionOutput) => {\n+            q.allResponses = q.allResponses.filter((response: ResponseOutput) =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwMDc3OQ=="}, "originalCommit": {"oid": "02f77f019c6af642603c3e9f3aebcaea26d93ea3"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5NjE0Ng==", "bodyText": "You can just do make copy of results and filter them separately. In addition, please avoid name like q.", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432196146", "createdAt": "2020-05-29T00:34:34Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "diffHunk": "@@ -56,10 +75,103 @@ export class InstructorStudentRecordsPageComponent implements OnInit {\n    * Loads the student's records based on the given course ID and email.\n    */\n   loadStudentRecords(): void {\n+    this.studentService.getStudent(this.courseId, this.studentEmail).subscribe((resp: Student) => {\n+      this.studentSection = resp.sectionName;\n+    });\n     this.studentProfileService.getStudentProfile(this.studentEmail, this.courseId).subscribe((resp: StudentProfile) => {\n       this.studentProfile = resp;\n     }, (resp: ErrorMessageOutput) => {\n       this.statusMessageService.showErrorMessage(resp.error.message);\n     });\n   }\n+\n+  /**\n+   * Loads the student's feedback session results based on the given course ID and student name.\n+   */\n+  loadStudentResults(): void {\n+    this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId).subscribe((resp: FeedbackSessions) => {\n+      resp.feedbackSessions.forEach((feedbackSession: FeedbackSession) => {\n+        this.feedbackSessionsService.getFeedbackSessionsResult({\n+          courseId: this.courseId,\n+          feedbackSessionName: feedbackSession.feedbackSessionName,\n+          groupBySection: this.studentSection,\n+          intent: Intent.INSTRUCTOR_RESULT,\n+        }).subscribe((results: SessionResults) => {\n+          results.questions.forEach((q: QuestionOutput) => {\n+            q.allResponses = q.allResponses.filter((response: ResponseOutput) =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwMDc3OQ=="}, "originalCommit": {"oid": "02f77f019c6af642603c3e9f3aebcaea26d93ea3"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTI5ODA2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoyMTo1MFrOGcFXNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDoyMjoyMlrOGcFYOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwMTE3Mg==", "bodyText": "One responseGivenByStudents will goes to here with isGrq=true.", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432101172", "createdAt": "2020-05-28T20:21:50Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.html", "diffHunk": "@@ -1,13 +1,20 @@\n <h1>{{studentProfile.name}}'s Records<small class=\"text-muted\"> - {{courseId}}</small></h1>\n <tm-student-profile [studentProfile]=\"studentProfile\" [photoUrl]=\"photoUrl\"></tm-student-profile>\n <tm-more-info [studentName]=\"studentProfile.name\" [moreInfoText]=\"studentProfile.moreInfo\"></tm-more-info>\n+<h2>Records in feedback sessions</h2>\n <div *ngFor=\"let session of sessions\" class=\"card card-default mb-4\">\n   <div class=\"card-header font-weight-bold cursor-pointer\" (click)=\"session.isCollapsed = !session.isCollapsed\">\n-    Feedback Session : {{session.name}}\n+    Feedback Session : {{session.feedbackSession.feedbackSessionName}}\n     <span class=\"float-right fas\"\n       [ngClass]=\"{'fa-chevron-up': !session.isCollapsed, 'fa-chevron-down': session.isCollapsed}\"></span>\n   </div>\n   <div class=\"card-body\" [ngbCollapse]=\"session.isCollapsed\">\n-    TODO\n+    <tm-grq-rgq-view-responses *ngIf=\"session.questions.length > 0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f77f019c6af642603c3e9f3aebcaea26d93ea3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwMTQzNA==", "bodyText": "One responseRecievedByStudents will goes to here with isGrq=flase.\nThe rest will work magically.", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432101434", "createdAt": "2020-05-28T20:22:22Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.html", "diffHunk": "@@ -1,13 +1,20 @@\n <h1>{{studentProfile.name}}'s Records<small class=\"text-muted\"> - {{courseId}}</small></h1>\n <tm-student-profile [studentProfile]=\"studentProfile\" [photoUrl]=\"photoUrl\"></tm-student-profile>\n <tm-more-info [studentName]=\"studentProfile.name\" [moreInfoText]=\"studentProfile.moreInfo\"></tm-more-info>\n+<h2>Records in feedback sessions</h2>\n <div *ngFor=\"let session of sessions\" class=\"card card-default mb-4\">\n   <div class=\"card-header font-weight-bold cursor-pointer\" (click)=\"session.isCollapsed = !session.isCollapsed\">\n-    Feedback Session : {{session.name}}\n+    Feedback Session : {{session.feedbackSession.feedbackSessionName}}\n     <span class=\"float-right fas\"\n       [ngClass]=\"{'fa-chevron-up': !session.isCollapsed, 'fa-chevron-down': session.isCollapsed}\"></span>\n   </div>\n   <div class=\"card-body\" [ngbCollapse]=\"session.isCollapsed\">\n-    TODO\n+    <tm-grq-rgq-view-responses *ngIf=\"session.questions.length > 0\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwMTE3Mg=="}, "originalCommit": {"oid": "02f77f019c6af642603c3e9f3aebcaea26d93ea3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjE1NTUxOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzozMDozNFrOGcNo4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzozMDozNFrOGcNo4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIzNjc2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <div *ngIf=\"session.responsesGivenByStudent.length <= 0\">\n          \n          \n            \n                <div *ngIf=\"session.responsesGivenByStudent.length === 0\">", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432236768", "createdAt": "2020-05-29T03:30:34Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.html", "diffHunk": "@@ -1,13 +1,28 @@\n <h1>{{studentProfile.name}}'s Records<small class=\"text-muted\"> - {{courseId}}</small></h1>\n <tm-student-profile [studentProfile]=\"studentProfile\" [photoUrl]=\"photoUrl\"></tm-student-profile>\n <tm-more-info [studentName]=\"studentProfile.name\" [moreInfoText]=\"studentProfile.moreInfo\"></tm-more-info>\n-<div *ngFor=\"let session of sessions\" class=\"card card-default mb-4\">\n+<h2>Records in feedback sessions</h2>\n+<div *ngFor=\"let session of sessionTabs\" class=\"card card-default mb-4\">\n   <div class=\"card-header font-weight-bold cursor-pointer\" (click)=\"session.isCollapsed = !session.isCollapsed\">\n-    Feedback Session : {{session.name}}\n+    Feedback Session : {{session.feedbackSession.feedbackSessionName}}\n     <span class=\"float-right fas\"\n       [ngClass]=\"{'fa-chevron-up': !session.isCollapsed, 'fa-chevron-down': session.isCollapsed}\"></span>\n   </div>\n   <div class=\"card-body\" [ngbCollapse]=\"session.isCollapsed\">\n-    TODO\n+    <tm-grq-rgq-view-responses *ngIf=\"session.responsesReceivedByStudent.length > 0\"\n+                               [responses]=\"session.responsesReceivedByStudent\" [groupByTeam]=\"false\" [section]=\"\" [sectionType]=\"\"\n+                               [isGrq]=\"false\" [instructorCommentTableModel]=\"instructorCommentTableModel\"\n+    ></tm-grq-rgq-view-responses>\n+    <div *ngIf=\"session.responsesReceivedByStudent.length <= 0\">\n+      No feedback responses for {{studentProfile.name}} ({{studentSection}}) in {{session.feedbackSession.feedbackSessionName}} found.\n+    </div>\n+    <br/>\n+    <tm-grq-rgq-view-responses *ngIf=\"session.responsesGivenByStudent.length > 0\"\n+                               [responses]=\"session.responsesGivenByStudent\" [groupByTeam]=\"false\" [section]=\"\" [sectionType]=\"\"\n+                               [isGrq]=\"true\" [instructorCommentTableModel]=\"instructorCommentTableModel\"\n+    ></tm-grq-rgq-view-responses>\n+    <div *ngIf=\"session.responsesGivenByStudent.length <= 0\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86801a02440d2ffc2056b412b3a10395df2f63d0"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjE1ODQyOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzozMjo1MlrOGcNqyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzozMjo1MlrOGcNqyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIzNzI1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <div *ngIf=\"session.responsesReceivedByStudent.length <= 0\">\n          \n          \n            \n                <div *ngIf=\"session.responsesReceivedByStudent.length === 0\">", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432237259", "createdAt": "2020-05-29T03:32:52Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.html", "diffHunk": "@@ -1,13 +1,28 @@\n <h1>{{studentProfile.name}}'s Records<small class=\"text-muted\"> - {{courseId}}</small></h1>\n <tm-student-profile [studentProfile]=\"studentProfile\" [photoUrl]=\"photoUrl\"></tm-student-profile>\n <tm-more-info [studentName]=\"studentProfile.name\" [moreInfoText]=\"studentProfile.moreInfo\"></tm-more-info>\n-<div *ngFor=\"let session of sessions\" class=\"card card-default mb-4\">\n+<h2>Records in feedback sessions</h2>\n+<div *ngFor=\"let session of sessionTabs\" class=\"card card-default mb-4\">\n   <div class=\"card-header font-weight-bold cursor-pointer\" (click)=\"session.isCollapsed = !session.isCollapsed\">\n-    Feedback Session : {{session.name}}\n+    Feedback Session : {{session.feedbackSession.feedbackSessionName}}\n     <span class=\"float-right fas\"\n       [ngClass]=\"{'fa-chevron-up': !session.isCollapsed, 'fa-chevron-down': session.isCollapsed}\"></span>\n   </div>\n   <div class=\"card-body\" [ngbCollapse]=\"session.isCollapsed\">\n-    TODO\n+    <tm-grq-rgq-view-responses *ngIf=\"session.responsesReceivedByStudent.length > 0\"\n+                               [responses]=\"session.responsesReceivedByStudent\" [groupByTeam]=\"false\" [section]=\"\" [sectionType]=\"\"\n+                               [isGrq]=\"false\" [instructorCommentTableModel]=\"instructorCommentTableModel\"\n+    ></tm-grq-rgq-view-responses>\n+    <div *ngIf=\"session.responsesReceivedByStudent.length <= 0\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86801a02440d2ffc2056b412b3a10395df2f63d0"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjE1OTUzOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzozMzozOFrOGcNrcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzozMzozOFrOGcNrcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIzNzQyNQ==", "bodyText": "There is no need to mention this I think.", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432237425", "createdAt": "2020-05-29T03:33:38Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "diffHunk": "@@ -56,10 +76,117 @@ export class InstructorStudentRecordsPageComponent implements OnInit {\n    * Loads the student's records based on the given course ID and email.\n    */\n   loadStudentRecords(): void {\n+    this.studentService.getStudent(this.courseId, this.studentEmail).subscribe((resp: Student) => {\n+      this.studentSection = resp.sectionName;\n+    });\n     this.studentProfileService.getStudentProfile(this.studentEmail, this.courseId).subscribe((resp: StudentProfile) => {\n       this.studentProfile = resp;\n     }, (resp: ErrorMessageOutput) => {\n       this.statusMessageService.showErrorMessage(resp.error.message);\n     });\n   }\n+\n+  /**\n+   * Loads the student's feedback session results based on the given course ID and student name.\n+   */\n+  loadStudentResults(): void {\n+    this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId).subscribe((resp: FeedbackSessions) => {\n+      resp.feedbackSessions.forEach((feedbackSession: FeedbackSession) => {\n+        this.feedbackSessionsService.getFeedbackSessionsResult({\n+          courseId: this.courseId,\n+          feedbackSessionName: feedbackSession.feedbackSessionName,\n+          groupBySection: this.studentSection,\n+          intent: Intent.INSTRUCTOR_RESULT,\n+        }).subscribe((results: SessionResults) => {\n+\n+          // Rather than subscribe to the Observable, we simply grab the input so that we can filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86801a02440d2ffc2056b412b3a10395df2f63d0"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjE2NDEyOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzozNzoxNlrOGcNuJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzozNzoxNlrOGcNuJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIzODExNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // Rather than subscribe to the Observable, we simply grab the input so that we can filter", "url": "https://github.com/TEAMMATES/teammates/pull/10129#discussion_r432238117", "createdAt": "2020-05-29T03:37:16Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts", "diffHunk": "@@ -56,10 +76,117 @@ export class InstructorStudentRecordsPageComponent implements OnInit {\n    * Loads the student's records based on the given course ID and email.\n    */\n   loadStudentRecords(): void {\n+    this.studentService.getStudent(this.courseId, this.studentEmail).subscribe((resp: Student) => {\n+      this.studentSection = resp.sectionName;\n+    });\n     this.studentProfileService.getStudentProfile(this.studentEmail, this.courseId).subscribe((resp: StudentProfile) => {\n       this.studentProfile = resp;\n     }, (resp: ErrorMessageOutput) => {\n       this.statusMessageService.showErrorMessage(resp.error.message);\n     });\n   }\n+\n+  /**\n+   * Loads the student's feedback session results based on the given course ID and student name.\n+   */\n+  loadStudentResults(): void {\n+    this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId).subscribe((resp: FeedbackSessions) => {\n+      resp.feedbackSessions.forEach((feedbackSession: FeedbackSession) => {\n+        this.feedbackSessionsService.getFeedbackSessionsResult({\n+          courseId: this.courseId,\n+          feedbackSessionName: feedbackSession.feedbackSessionName,\n+          groupBySection: this.studentSection,\n+          intent: Intent.INSTRUCTOR_RESULT,\n+        }).subscribe((results: SessionResults) => {\n+\n+          // Rather than subscribe to the Observable, we simply grab the input so that we can filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86801a02440d2ffc2056b412b3a10395df2f63d0"}, "originalPosition": 94}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3728, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}