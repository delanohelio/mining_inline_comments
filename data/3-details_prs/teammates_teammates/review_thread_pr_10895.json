{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NjMyNjI2", "number": 10895, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xN1QxNTo0Mjo0NVrOFPw7wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzozNjoyNFrOFc4F1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMDc0Njg5OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xN1QxNTo0Mjo0NVrOIVSyBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xN1QxNTo0Mjo0NVrOIVSyBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTE5ODcyNw==", "bodyText": "we can add more test cases here:\n\nteam rank not calculated depending on recipient type\ncheck team vs team excluding self is correct", "url": "https://github.com/TEAMMATES/teammates/pull/10895#discussion_r559198727", "createdAt": "2021-01-17T15:42:45Z", "author": {"login": "rrtheonlyone"}, "path": "src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.spec.ts", "diffHunk": "@@ -24,4 +33,21 @@ describe('RankRecipientsQuestionStatisticsComponent', () => {\n   it('should create', () => {\n     expect(component).toBeTruthy();\n   });\n+\n+  it('should rank correctly within team', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fdaeecfe3bcb6cc5edcfd4ed9565cf4fd4d26c0"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMDc2ODk4OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/question-statistics-calculation/rank-recipients-question-statistics-calculation.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xN1QxNjowNDo0OVrOIVS89Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xN1QxNjowNDo0OVrOIVS89Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTIwMTUyNQ==", "bodyText": "the naming here is a little confusing - we are referring to recipient but the variable names all somehow say option.\nI think we might be able to streamline this entire statistic calculation with a combination of map, filter and reduce (in a functional manner without for loops).  However, this I leave it up to you: as long as it's readable I am okay.", "url": "https://github.com/TEAMMATES/teammates/pull/10895#discussion_r559201525", "createdAt": "2021-01-17T16:04:49Z", "author": {"login": "rrtheonlyone"}, "path": "src/web/app/components/question-types/question-statistics/question-statistics-calculation/rank-recipients-question-statistics-calculation.ts", "diffHunk": "@@ -57,13 +66,26 @@ export class RankRecipientsQuestionStatisticsCalculation\n       if (!this.emailToName[identifier]) {\n         this.emailToName[identifier] = response.recipient;\n       }\n+\n+      optionsPerTeam[response.recipientTeam] = optionsPerTeam[response.recipientTeam] || [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fdaeecfe3bcb6cc5edcfd4ed9565cf4fd4d26c0"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY1ODIxMjQxOnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.spec.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzoyMzoyOFrOIpGGHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzoyMzoyOFrOIpGGHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTk2MjM5OQ==", "bodyText": "Shouldn't this be indented? But okay not a big deal since the lint check passes", "url": "https://github.com/TEAMMATES/teammates/pull/10895#discussion_r579962399", "createdAt": "2021-02-22T03:23:28Z", "author": {"login": "madanalogy"}, "path": "src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.spec.ts", "diffHunk": "@@ -1,8 +1,17 @@\n import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n-\n+import { FeedbackParticipantType, FeedbackRankRecipientsResponseDetails } from '../../../../types/api-output';\n import { SortableTableModule } from '../../sortable-table/sortable-table.module';\n+import { Response } from './question-statistics';\n import { RankRecipientsQuestionStatisticsComponent } from './rank-recipients-question-statistics.component';\n \n+/**\n+ * Loads data for testing.\n+ */\n+const loadTestData: (filename: string) => Response<FeedbackRankRecipientsResponseDetails>[] =\n+(filename: string): Response<FeedbackRankRecipientsResponseDetails>[] => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "321239aa61b1e82975ac22374eb1b05fabe60e79"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY1ODIxNzQwOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-section.component.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzoyNjoxMVrOIpGIqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzoyNjoxMVrOIpGIqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTk2MzA1MA==", "bodyText": "Brackets not needed", "url": "https://github.com/TEAMMATES/teammates/pull/10895#discussion_r579963050", "createdAt": "2021-02-22T03:26:11Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-section.component.html", "diffHunk": "@@ -658,6 +658,9 @@ <h4 *ngIf=\"displaySubsection(0, 10)\">Setting Up Questions</h4>\n       <li>\n         <b>Overall rank</b>: the recipient's rank relative to other recipients, as computed by TEAMMATES.\n       </li>\n+      <li>\n+        <b>Team rank</b>: the recipient's rank relative to other recipients within their own team only. (Applicable only if students rank their teammates)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "321239aa61b1e82975ac22374eb1b05fabe60e79"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY1ODIzMDExOnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.spec.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzozMzo0NFrOIpGPlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQxMToyMjozMlrOIpS-6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTk2NDgyMA==", "bodyText": "Any particular reason why test data is stored in a separate file? I'm not entirely against the approach don't get me wrong, just that our frontend tests so far all have their data embedded in the spec.ts file so I'm wondering if you had any particular reason for the extraction of data.\nI can understand the extraction if the same data is being used by other test components but this doesn't seem to be the case. Would be better for now to just have the data as a constant variable as in other frontend tests for consistency (e.g. instructor-home-page.component.spec.ts)", "url": "https://github.com/TEAMMATES/teammates/pull/10895#discussion_r579964820", "createdAt": "2021-02-22T03:33:44Z", "author": {"login": "madanalogy"}, "path": "src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.spec.ts", "diffHunk": "@@ -1,8 +1,17 @@\n import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n-\n+import { FeedbackParticipantType, FeedbackRankRecipientsResponseDetails } from '../../../../types/api-output';\n import { SortableTableModule } from '../../sortable-table/sortable-table.module';\n+import { Response } from './question-statistics';\n import { RankRecipientsQuestionStatisticsComponent } from './rank-recipients-question-statistics.component';\n \n+/**\n+ * Loads data for testing.\n+ */\n+const loadTestData: (filename: string) => Response<FeedbackRankRecipientsResponseDetails>[] =\n+(filename: string): Response<FeedbackRankRecipientsResponseDetails>[] => {\n+  return require(`./test-data/${filename}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "321239aa61b1e82975ac22374eb1b05fabe60e79"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDE3MjE2Ng==", "bodyText": "Just felt that the code looked bad cosmetically with sample data and decided to put it in a JSON. Reverted", "url": "https://github.com/TEAMMATES/teammates/pull/10895#discussion_r580172166", "createdAt": "2021-02-22T11:20:05Z", "author": {"login": "AdithyaNarayan"}, "path": "src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.spec.ts", "diffHunk": "@@ -1,8 +1,17 @@\n import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n-\n+import { FeedbackParticipantType, FeedbackRankRecipientsResponseDetails } from '../../../../types/api-output';\n import { SortableTableModule } from '../../sortable-table/sortable-table.module';\n+import { Response } from './question-statistics';\n import { RankRecipientsQuestionStatisticsComponent } from './rank-recipients-question-statistics.component';\n \n+/**\n+ * Loads data for testing.\n+ */\n+const loadTestData: (filename: string) => Response<FeedbackRankRecipientsResponseDetails>[] =\n+(filename: string): Response<FeedbackRankRecipientsResponseDetails>[] => {\n+  return require(`./test-data/${filename}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTk2NDgyMA=="}, "originalCommit": {"oid": "321239aa61b1e82975ac22374eb1b05fabe60e79"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDE3MzU0NQ==", "bodyText": "You could consider putting up an issue for this actually, I remember it was something I wanted to raise but didn't have the time to. That is to say, refactor frontend test data into a dedicated resource folder for reusability instead of having it nested within the spec.ts files. We can have a community discussion about this, and if the idea is adopted start taking the approach as an epic/task.", "url": "https://github.com/TEAMMATES/teammates/pull/10895#discussion_r580173545", "createdAt": "2021-02-22T11:22:32Z", "author": {"login": "madanalogy"}, "path": "src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.spec.ts", "diffHunk": "@@ -1,8 +1,17 @@\n import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n-\n+import { FeedbackParticipantType, FeedbackRankRecipientsResponseDetails } from '../../../../types/api-output';\n import { SortableTableModule } from '../../sortable-table/sortable-table.module';\n+import { Response } from './question-statistics';\n import { RankRecipientsQuestionStatisticsComponent } from './rank-recipients-question-statistics.component';\n \n+/**\n+ * Loads data for testing.\n+ */\n+const loadTestData: (filename: string) => Response<FeedbackRankRecipientsResponseDetails>[] =\n+(filename: string): Response<FeedbackRankRecipientsResponseDetails>[] => {\n+  return require(`./test-data/${filename}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTk2NDgyMA=="}, "originalCommit": {"oid": "321239aa61b1e82975ac22374eb1b05fabe60e79"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY1ODIzMzk1OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-section.component.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzozNjowM1rOIpGRqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzozNjowM1rOIpGRqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTk2NTM1NA==", "bodyText": "Typo in the sentence, I'm assuming the period at the end of \"team\" was unintended", "url": "https://github.com/TEAMMATES/teammates/pull/10895#discussion_r579965354", "createdAt": "2021-02-22T03:36:03Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-section.component.html", "diffHunk": "@@ -672,6 +675,12 @@ <h4 *ngIf=\"displaySubsection(0, 10)\">Setting Up Questions</h4>\n           The <b>Overall Rank</b> ranks the average rank each recipient receives.\n           For example, if recipient A received the ranks <code>(1, 2)</code> and recipient B received the ranks <code>(2, 4, 6)</code>, then recipient A and recipient B's average ranks are 1.5 and 4 respectively. By ranking these two averages, recipient A and B will get an <b>Overall Rank</b> of 1 and 2 respectively.\n         </li>\n+        <li>\n+          The <b>Team Rank</b> works in a similar way to <b>Overall Rank</b> as it uses the average rank received to calculate the rank within the team. to the average rank each recipient receives. However, the average rank of the members are only compared to their own team members.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "321239aa61b1e82975ac22374eb1b05fabe60e79"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY1ODIzNDQ0OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-section.component.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzozNjoyNFrOIpGR7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwMzozNjoyNFrOIpGR7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTk2NTQyMg==", "bodyText": "Unnecessary starting And, can be removed", "url": "https://github.com/TEAMMATES/teammates/pull/10895#discussion_r579965422", "createdAt": "2021-02-22T03:36:24Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-section.component.html", "diffHunk": "@@ -672,6 +675,12 @@ <h4 *ngIf=\"displaySubsection(0, 10)\">Setting Up Questions</h4>\n           The <b>Overall Rank</b> ranks the average rank each recipient receives.\n           For example, if recipient A received the ranks <code>(1, 2)</code> and recipient B received the ranks <code>(2, 4, 6)</code>, then recipient A and recipient B's average ranks are 1.5 and 4 respectively. By ranking these two averages, recipient A and B will get an <b>Overall Rank</b> of 1 and 2 respectively.\n         </li>\n+        <li>\n+          The <b>Team Rank</b> works in a similar way to <b>Overall Rank</b> as it uses the average rank received to calculate the rank within the team. to the average rank each recipient receives. However, the average rank of the members are only compared to their own team members.\n+          For example, if recipient A (who is a part of team X) received the ranks <code>(1, 2)</code> and recipient B (who is a part of team X) received the ranks <code>(2, 4, 6)</code>, then recipient A and recipient B's average ranks are 1.5 and 4 respectively. By ranking these two averages, recipient A and B will get a <b>Team Rank</b> of 1 and 2 respectively.\n+          And if recipient C (who is a part of team Y) received the ranks <code>(1, 1)</code> and recipient D (who is a part of team Y) received the ranks <code>(1, 2)</code>, then recipient C and recipient D's average ranks are 1 and 1.5 respectively. By ranking these two averages, recipient C and D will get a <b>Team Rank</b> of 1 and 2 respectively.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "321239aa61b1e82975ac22374eb1b05fabe60e79"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3358, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}