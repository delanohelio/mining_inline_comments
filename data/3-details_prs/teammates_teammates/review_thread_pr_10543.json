{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTg1MDkx", "number": 10543, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoxOTo0MVrOEU5W7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNDoxNjo1NlrOEVQFZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQ2NzM0OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoxOTo0MVrOG7WHKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoxOTo0MVrOG7WHKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4MTQ1MQ==", "bodyText": "Just a minor thing:\nWould isFeedbackSessionLoading be a better name? When i did the indicators, the variable naming for loading i adopted was isSomethingLoading since the directive is tmIsLoading", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r464881451", "createdAt": "2020-08-04T08:19:41Z", "author": {"login": "t-cheepeng"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -251,65 +254,66 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n       key: this.regKey,\n       moderatedPerson: this.moderatedPerson,\n       previewAs: this.previewAsPerson,\n-    }).subscribe((feedbackSession: FeedbackSession) => {\n-      this.feedbackSessionInstructions = feedbackSession.instructions;\n-      this.formattedSessionOpeningTime = this.timezoneService\n+    }).pipe(finalize(() => this.hasFeedbackSessionLoaded = true))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9363f8165b32227af986d880f6c1691ae007aa3e"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzE4NDU1OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNDoxMjo1OVrOG75fUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDo0NjozOVrOG8NEVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTA3Mw==", "bodyText": "Why isCopyingQuestion is set only when there is error message?", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465461073", "createdAt": "2020-08-05T04:12:59Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -887,6 +888,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) => {\n       questionToCopyCandidates.push(...questionToCopyCandidate);\n     }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); }, () => {\n+      this.isCopyingQuestion = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwMzU3OA==", "bodyText": "It's not the error callback, it's in the complete callback. See https://angular.io/guide/observables#defining-observers", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465503578", "createdAt": "2020-08-05T06:34:19Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -887,6 +888,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) => {\n       questionToCopyCandidates.push(...questionToCopyCandidate);\n     }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); }, () => {\n+      this.isCopyingQuestion = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTA3Mw=="}, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY0Njc4Nw==", "bodyText": "I don't think complete will be called after error? https://stackoverflow.com/questions/33783967/rxjs-observable-doesnt-complete-when-an-error-occurs\nThink finalize is better.", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465646787", "createdAt": "2020-08-05T11:06:20Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -887,6 +888,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) => {\n       questionToCopyCandidates.push(...questionToCopyCandidate);\n     }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); }, () => {\n+      this.isCopyingQuestion = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTA3Mw=="}, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyNDM5MA==", "bodyText": "But then we run into the problem you raised previously about there being additional loading before the modal pops up. That loading is the copying within the subscription and finalise is called at the end of the pipe instead of at the end of the subscription operation.\nEDIT: I was wrong about the behaviour of finalize described earlier sorry. It's just that there is no other operation before the modal is opened on complete so I moved the boolean toggling there. I am unable to replicate the additional delay.\nYou're also right though that complete won't be called on error, so I'll put in the toggle into the error block as well.", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465724390", "createdAt": "2020-08-05T13:25:52Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -887,6 +888,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) => {\n       questionToCopyCandidates.push(...questionToCopyCandidate);\n     }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); }, () => {\n+      this.isCopyingQuestion = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTA3Mw=="}, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc4MTg0Nw==", "bodyText": "The additional loading I mentioned was due to the fetching of the intents. Your old implementation works, just that you need to put the finalize after flatMap. See https://stackoverflow.com/questions/54567073/finalize-with-flatmap-in-angular.", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465781847", "createdAt": "2020-08-05T14:46:39Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -887,6 +888,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) => {\n       questionToCopyCandidates.push(...questionToCopyCandidate);\n     }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); }, () => {\n+      this.isCopyingQuestion = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTA3Mw=="}, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzE4OTQ1OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNDoxNjowN1rOG75iIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjowMjo0NlrOG8cMeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTc5Mg==", "bodyText": "You should set isFeedbackSessionQuestionResponsesLoading to true somewhere?", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465461792", "createdAt": "2020-08-05T04:16:07Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -391,6 +396,7 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n             responseId: '',\n           });\n         });\n+        this.isFeedbackSessionQuestionResponsesLoading = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNDU2MQ==", "bodyText": "It's initialised as true", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465504561", "createdAt": "2020-08-05T06:36:55Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -391,6 +396,7 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n             responseId: '',\n           });\n         });\n+        this.isFeedbackSessionQuestionResponsesLoading = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTc5Mg=="}, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyOTY4OQ==", "bodyText": "We should not depends on the initial values of component. true need to set properly when the loading actually begins.", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r466029689", "createdAt": "2020-08-05T22:02:46Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -391,6 +396,7 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n             responseId: '',\n           });\n         });\n+        this.isFeedbackSessionQuestionResponsesLoading = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTc5Mg=="}, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzE5MDM2OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNDoxNjozOVrOG75inA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjozNTo1NlrOG78HqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTkxNg==", "bodyText": "Why it is set when the length is zero?", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465461916", "createdAt": "2020-08-05T04:16:39Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -320,6 +324,7 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n       previewAs: this.previewAsPerson,\n     }).pipe(finalize(() => this.isFeedbackSessionQuestionsLoading = false))\n         .subscribe((response: FeedbackQuestionsResponse) => {\n+          if (response.questions.length === 0) { this.isFeedbackSessionQuestionResponsesLoading = false; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNDE2OA==", "bodyText": "Because then this.loadFeedbackQuestionRecipientsForQuestion() is never called", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465504168", "createdAt": "2020-08-05T06:35:56Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -320,6 +324,7 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n       previewAs: this.previewAsPerson,\n     }).pipe(finalize(() => this.isFeedbackSessionQuestionsLoading = false))\n         .subscribe((response: FeedbackQuestionsResponse) => {\n+          if (response.questions.length === 0) { this.isFeedbackSessionQuestionResponsesLoading = false; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTkxNg=="}, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzE5MDc4OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNDoxNjo1NlrOG75i2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNDoxNjo1NlrOG75i2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTk3Nw==", "bodyText": "Why isCopyingQuestion is set only when there is error message?", "url": "https://github.com/TEAMMATES/teammates/pull/10543#discussion_r465461977", "createdAt": "2020-08-05T04:16:56Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -887,6 +888,7 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n     ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) => {\n       questionToCopyCandidates.push(...questionToCopyCandidate);\n     }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); }, () => {\n+      this.isCopyingQuestion = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33f2a1071d9d16cb7e9d2385979c7d209c4bfe6b"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3462, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}