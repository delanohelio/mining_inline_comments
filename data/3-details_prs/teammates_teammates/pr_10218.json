{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NjI5NDY4", "number": 10218, "title": "[#10176] Fix authentication-related problems from UAT", "bodyText": "Part of #10176\nThis fixes the following:\n\nv7 does not prompt user when logged in and accessing a link meant for another user (i.e. A & B both in course, logged in as A, accessing email link meant for B). V6 prompts user to associate session with a google account.\nUsing regkey alone in incognito mode allows direct access to feedback submission in v7, but doing the same prompts for login in v6.\nNo error handling for non google account logged in student when accessing results from link (server error, no option for resolution) v6 prompts you to login via google\nAccessing link will always show results based on logged in google account regardless of email shown in link -> if I access my link from a friend's laptop or device, I will see his results as if I were accessing his link; v6 prompts user to associate session with a google account\nJoin course: Does not work properly when user is not logged in to a google account. Error page shown with no prompt for login available. v6 immediately redirects to login page\n\nThe root cause for almost all the problems are the same: a fatally wrong assumption that just because a regkey is given, a link is public. The condition is true only if the regkey has not been claimed by a Google ID.", "createdAt": "2020-06-22T01:08:33Z", "url": "https://github.com/TEAMMATES/teammates/pull/10218", "merged": true, "mergeCommit": {"oid": "0d7dff6514e2a01acf9b76c896b03df373a6ba23"}, "closed": true, "closedAt": "2020-06-23T01:31:44Z", "author": {"login": "wkurniawan07"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctnxMJAFqTQzNDU2MTg4MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABct61jqAH2gAyNDM3NjI5NDY4OjJhYjczMTU0NmQ2ZjUzMWRhZDU1NTQ5NGI0YWU0N2VlZTUyNmMyN2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NTYxODgx", "url": "https://github.com/TEAMMATES/teammates/pull/10218#pullrequestreview-434561881", "createdAt": "2020-06-22T01:56:06Z", "commit": {"oid": "59c055bb7139d598da030e683943e98a1b9bc745"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMTo1NjowNlrOGmv6tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMjo0OToyN1rOGmwgYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI4NDE0OA==", "bodyText": "The url param should be in lowercase?", "url": "https://github.com/TEAMMATES/teammates/pull/10218#discussion_r443284148", "createdAt": "2020-06-22T01:56:06Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetAuthInfoAction.java", "diffHunk": "@@ -32,17 +32,26 @@ public void checkSpecificAccessControl() {\n     @Override\n     public ActionResult execute() {\n         String frontendUrl = getRequestParamValue(\"frontendUrl\");\n+        String nextUrl = getRequestParamValue(\"nextUrl\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59c055bb7139d598da030e683943e98a1b9bc745"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5MDYxOA==", "bodyText": "I am wondering why navigationService is not used?\nIn addition, we can be more specific: Instead of remove what is in the URL, we construct the URL more explicitly. In this case, I think we only need courseid and fsname", "url": "https://github.com/TEAMMATES/teammates/pull/10218#discussion_r443290618", "createdAt": "2020-06-22T02:32:12Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -143,13 +150,48 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n         this.isSubmissionFormsDisabled = true;\n       }\n \n-      if (this.regKey) {\n-        // public page using regKey, fetch CSRF token\n-        this.authService.getAuthUser().subscribe(() => {}, () => {});\n-      }\n-\n-      this.loadPersonName();\n-      this.loadFeedbackSession();\n+      const nextUrl: string = `${window.location.pathname}${window.location.search}`;\n+      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) => {\n+        const isPreviewOrModeration: boolean = !!(auth.user && (this.moderatedPerson || this.previewAsPerson));\n+        if (this.regKey && !isPreviewOrModeration) {\n+          this.authService.getAuthRegkeyValidity(this.regKey, this.intent).subscribe((resp: RegkeyValidity) => {\n+            if (resp.isValid) {\n+              if (auth.user) {\n+                // The logged in user matches the registration key; redirect to the logged in URL\n+\n+                const loggedInUrl: string = window.location.href.replace('/web/sessions', '/web/student/sessions')\n+                    .replace(/key=[A-Z0-9]+(&?)/, '$1');\n+                window.location.href = loggedInUrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfccd7b51b3623281ec2f69190b43cbd49fa261a"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5MzEzMA==", "bodyText": "Might result in NPE when the regkey is not valid", "url": "https://github.com/TEAMMATES/teammates/pull/10218#discussion_r443293130", "createdAt": "2020-06-22T02:46:05Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetRegkeyValidityAction.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package teammates.ui.webapi.action;\n+\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.util.Const;\n+import teammates.common.util.StringHelper;\n+import teammates.ui.webapi.output.RegkeyValidityData;\n+import teammates.ui.webapi.request.Intent;\n+\n+/**\n+ * Action: checks whether the provided registration key is valid for the logged in user.\n+ *\n+ * <p>This does not log in or log out the user.\n+ */\n+public class GetRegkeyValidityAction extends Action {\n+\n+    @Override\n+    public AuthType getMinAuthLevel() {\n+        return AuthType.PUBLIC;\n+    }\n+\n+    @Override\n+    public void checkSpecificAccessControl() {\n+        // Regkey information is available to everyone\n+    }\n+\n+    @Override\n+    public ActionResult execute() {\n+        Intent intent = Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));\n+        String regkey = getNonNullRequestParamValue(Const.ParamsNames.REGKEY);\n+\n+        boolean isValid = true;\n+        boolean isLoggedIn = userInfo != null;\n+\n+        if (intent == Intent.STUDENT_SUBMISSION || intent == Intent.STUDENT_RESULT) {\n+            StudentAttributes student = logic.getStudentForRegistrationKey(regkey);\n+\n+            if (!StringHelper.isEmpty(student.googleId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aae37bdda50ed8c247c7742b14ad7eb58d984b2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5Mzc5Mw==", "bodyText": "Is this field used in the frontend?", "url": "https://github.com/TEAMMATES/teammates/pull/10218#discussion_r443293793", "createdAt": "2020-06-22T02:49:27Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/output/RegkeyValidityData.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package teammates.ui.webapi.output;\n+\n+/**\n+ * The API output format to represent if the registration key is valid for the logged in user (or lack thereof).\n+ */\n+public class RegkeyValidityData extends ApiOutput {\n+    private final boolean isValid;\n+    private final boolean isLoggedIn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aae37bdda50ed8c247c7742b14ad7eb58d984b2"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODE4OTAy", "url": "https://github.com/TEAMMATES/teammates/pull/10218#pullrequestreview-434818902", "createdAt": "2020-06-22T11:02:37Z", "commit": {"oid": "3aae37bdda50ed8c247c7742b14ad7eb58d984b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMTowMjozOFrOGm764A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMTowMjozOFrOGm764A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4MDgwMA==", "bodyText": "Actually just curious what's stopping them from manually navigating to /web/student/sessions? Is there a separate auth check on that page? I tried to explore the code base but couldn't figure out how page navigation and authentication works in Angular :\")", "url": "https://github.com/TEAMMATES/teammates/pull/10218#discussion_r443480800", "createdAt": "2020-06-22T11:02:38Z", "author": {"login": "madanalogy"}, "path": "src/web/app/pages-session/session-result-page/session-result-page.component.ts", "diffHunk": "@@ -43,41 +48,113 @@ export class SessionResultPageComponent implements OnInit {\n   questions: QuestionOutput[] = [];\n   formattedSessionOpeningTime: string = '';\n   formattedSessionClosingTime: string = '';\n+  personName: string = '';\n+  courseId: string = '';\n+  feedbackSessionName: string = '';\n+  regKey: string = '';\n \n-  constructor(private feedbackSessionsService: FeedbackSessionsService, private route: ActivatedRoute,\n-      private timezoneService: TimezoneService, private statusMessageService: StatusMessageService) {\n+  private backendUrl: string = environment.backendUrl;\n+\n+  constructor(private feedbackSessionsService: FeedbackSessionsService,\n+              private route: ActivatedRoute,\n+              private router: Router,\n+              private timezoneService: TimezoneService,\n+              private navigationService: NavigationService,\n+              private authService: AuthService,\n+              private studentService: StudentService,\n+              private statusMessageService: StatusMessageService) {\n     this.timezoneService.getTzVersion(); // import timezone service to load timezone data\n   }\n \n   ngOnInit(): void {\n     this.route.queryParams.subscribe((queryParams: any) => {\n-      const { courseid: courseId, fsname: feedbackSessionName }: Record<string, string> = queryParams;\n-      this.feedbackSessionsService.getFeedbackSession({\n-        courseId,\n-        feedbackSessionName,\n+      this.courseId = queryParams.courseid;\n+      this.feedbackSessionName = queryParams.fsname;\n+      this.regKey = queryParams.key || '';\n+\n+      const nextUrl: string = `${window.location.pathname}${window.location.search}`;\n+      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) => {\n+        if (this.regKey) {\n+          const intent: Intent = Intent.STUDENT_RESULT;\n+          this.authService.getAuthRegkeyValidity(this.regKey, intent).subscribe((resp: RegkeyValidity) => {\n+            if (resp.isValid) {\n+              if (auth.user) {\n+                // The logged in user matches the registration key; redirect to the logged in URL\n+\n+                const loggedInUrl: string = window.location.href.replace('/web/sessions', '/web/student/sessions')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aae37bdda50ed8c247c7742b14ad7eb58d984b2"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3aae37bdda50ed8c247c7742b14ad7eb58d984b2", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/3aae37bdda50ed8c247c7742b14ad7eb58d984b2", "committedDate": "2020-06-22T00:46:06Z", "message": "Add redirect to login page for course join"}, "afterCommit": {"oid": "2e413a3fd8fe13e0f593bbd1ddc72f2173bb62f5", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2e413a3fd8fe13e0f593bbd1ddc72f2173bb62f5", "committedDate": "2020-06-22T11:40:08Z", "message": "Add redirect to login page for course join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "049934abc32a310ea92faebaeddea830145046ee", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/049934abc32a310ea92faebaeddea830145046ee", "committedDate": "2020-06-22T22:21:47Z", "message": "Fix submission and result URL in admin search page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd120d04cb53ce5b3181672b1bd205ac7e00ff63", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/cd120d04cb53ce5b3181672b1bd205ac7e00ff63", "committedDate": "2020-06-22T22:21:49Z", "message": "Allow passing nextUrl to auth API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e413a3fd8fe13e0f593bbd1ddc72f2173bb62f5", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2e413a3fd8fe13e0f593bbd1ddc72f2173bb62f5", "committedDate": "2020-06-22T11:40:08Z", "message": "Add redirect to login page for course join"}, "afterCommit": {"oid": "04c69ad4ef08f3d638cad11ea6a7e0efc07fd0ba", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/04c69ad4ef08f3d638cad11ea6a7e0efc07fd0ba", "committedDate": "2020-06-22T22:21:49Z", "message": "Add redirect to login page for course join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1026d3da40fcfd2d73ecc60ae36556973170d0b", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/c1026d3da40fcfd2d73ecc60ae36556973170d0b", "committedDate": "2020-06-22T22:42:13Z", "message": "Add endpoint to check regkey validity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "456c9aeb2c1dc33fcff864bca8c4e76bc44c387b", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/456c9aeb2c1dc33fcff864bca8c4e76bc44c387b", "committedDate": "2020-06-22T22:42:13Z", "message": "Add auth flow for student submission page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7f6001b8b8926841285b17ad6c654ac412ab492", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d7f6001b8b8926841285b17ad6c654ac412ab492", "committedDate": "2020-06-22T22:42:13Z", "message": "Add auth flow for student session results page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c6e4eaf3880d654a9aa8cdd82a1d7078ca5c36c", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/4c6e4eaf3880d654a9aa8cdd82a1d7078ca5c36c", "committedDate": "2020-06-22T22:42:13Z", "message": "Add redirect to login page for course join"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04c69ad4ef08f3d638cad11ea6a7e0efc07fd0ba", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/04c69ad4ef08f3d638cad11ea6a7e0efc07fd0ba", "committedDate": "2020-06-22T22:21:49Z", "message": "Add redirect to login page for course join"}, "afterCommit": {"oid": "4c6e4eaf3880d654a9aa8cdd82a1d7078ca5c36c", "author": {"user": {"login": "wkurniawan07", "name": "Wilson Kurniawan"}}, "url": "https://github.com/TEAMMATES/teammates/commit/4c6e4eaf3880d654a9aa8cdd82a1d7078ca5c36c", "committedDate": "2020-06-22T22:42:13Z", "message": "Add redirect to login page for course join"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzY2MDM4", "url": "https://github.com/TEAMMATES/teammates/pull/10218#pullrequestreview-435366038", "createdAt": "2020-06-23T00:48:03Z", "commit": {"oid": "d7f6001b8b8926841285b17ad6c654ac412ab492"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDo0ODowM1rOGnViRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDo0ODowM1rOGnViRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkwMDQ4Ng==", "bodyText": "I'm assuming that with the new auth flow you can't access the results page as an admin? Just confirming, because this guard clause is being fixed in #9994", "url": "https://github.com/TEAMMATES/teammates/pull/10218#discussion_r443900486", "createdAt": "2020-06-23T00:48:03Z", "author": {"login": "madanalogy"}, "path": "src/main/java/teammates/ui/webapi/action/GetSessionResultsAction.java", "diffHunk": "@@ -25,10 +25,6 @@ protected AuthType getMinAuthLevel() {\n \n     @Override\n     public void checkSpecificAccessControl() {\n-        if (userInfo.isAdmin) {\n-            return;\n-        }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7f6001b8b8926841285b17ad6c654ac412ab492"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzY4MTg1", "url": "https://github.com/TEAMMATES/teammates/pull/10218#pullrequestreview-435368185", "createdAt": "2020-06-23T00:55:16Z", "commit": {"oid": "4c6e4eaf3880d654a9aa8cdd82a1d7078ca5c36c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzY4ODEx", "url": "https://github.com/TEAMMATES/teammates/pull/10218#pullrequestreview-435368811", "createdAt": "2020-06-23T00:57:37Z", "commit": {"oid": "4c6e4eaf3880d654a9aa8cdd82a1d7078ca5c36c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ab731546d6f531dad555494b4ae47eee526c27c", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2ab731546d6f531dad555494b4ae47eee526c27c", "committedDate": "2020-06-23T01:05:40Z", "message": "Merge branch 'master' into uat-fixes-auth"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4359, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}