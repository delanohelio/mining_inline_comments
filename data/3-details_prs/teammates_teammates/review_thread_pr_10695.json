{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwODc5ODEw", "number": 10695, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTozNjowNVrOEj2mog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo1OToyNFrOEzFp4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDMwMjQyOnYy", "diffSide": "LEFT", "path": "src/main/java/teammates/ui/webapi/output/SessionResultsData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTozNjowNVrOHSc41A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwOTo0Njo1NVrOHcAslA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEwOTcxNg==", "bodyText": "This might need some reviews as it might leak information", "url": "https://github.com/TEAMMATES/teammates/pull/10695#discussion_r489109716", "createdAt": "2020-09-16T01:36:05Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/output/SessionResultsData.java", "diffHunk": "@@ -144,15 +147,14 @@ private static ResponseOutput buildSingleResponseForStudent(\n         } else {\n             // we don't want student to figure out who is who by using the hash\n             recipientName = removeAnonymousHash(getRecipientNameOfResponse(response, bundle).getName());\n+            recipientTeam = bundle.getRoster().getInfoForIdentifier(response.getRecipient()).getTeamName();\n         }\n \n         // process comments\n         List<FeedbackResponseCommentAttributes> feedbackResponseComments =\n                 bundle.getResponseCommentsMap().getOrDefault(response.getId(), Collections.emptyList());\n         Queue<CommentOutput> comments = buildComments(feedbackResponseComments, bundle);\n \n-        // Student does not need to know the teams for giver and/or recipient\n-        // unless the student him/herself is the giver and/or recipient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68322e88937c14153d3976503031fc4dbb868c9c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMzU4OA==", "bodyText": "Added a check that the recipient is not anonymous before adding the team name. Thus, there should not be any leaks as if the recipient is not anonymous there should not be any problem with knowing his team.", "url": "https://github.com/TEAMMATES/teammates/pull/10695#discussion_r499133588", "createdAt": "2020-10-03T09:46:55Z", "author": {"login": "jtankw3"}, "path": "src/main/java/teammates/ui/webapi/output/SessionResultsData.java", "diffHunk": "@@ -144,15 +147,14 @@ private static ResponseOutput buildSingleResponseForStudent(\n         } else {\n             // we don't want student to figure out who is who by using the hash\n             recipientName = removeAnonymousHash(getRecipientNameOfResponse(response, bundle).getName());\n+            recipientTeam = bundle.getRoster().getInfoForIdentifier(response.getRecipient()).getTeamName();\n         }\n \n         // process comments\n         List<FeedbackResponseCommentAttributes> feedbackResponseComments =\n                 bundle.getResponseCommentsMap().getOrDefault(response.getId(), Collections.emptyList());\n         Queue<CommentOutput> comments = buildComments(feedbackResponseComments, bundle);\n \n-        // Student does not need to know the teams for giver and/or recipient\n-        // unless the student him/herself is the giver and/or recipient", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEwOTcxNg=="}, "originalCommit": {"oid": "68322e88937c14153d3976503031fc4dbb868c9c"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDMxMTA2OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTo0MToxM1rOHSc-CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTo0MToxM1rOHSc-CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExMTA0OA==", "bodyText": "I don't think the filtering should happen here as the statistics component's responsibility is just display stats based on provided responses. It essentially should not do the filtering.", "url": "https://github.com/TEAMMATES/teammates/pull/10695#discussion_r489111048", "createdAt": "2020-09-16T01:41:13Z", "author": {"login": "xpdavid"}, "path": "src/web/app/components/question-types/question-statistics/num-scale-question-statistics.component.ts", "diffHunk": "@@ -48,6 +48,9 @@ export class NumScaleQuestionStatisticsComponent extends NumScaleQuestionStatist\n     this.rowsData = [];\n     for (const team of Object.keys(this.teamToRecipientToScores)) {\n       for (const recipient of Object.keys(this.teamToRecipientToScores[team])) {\n+        if (this.isStudent && recipient !== 'You') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68322e88937c14153d3976503031fc4dbb868c9c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDMxMjM3OnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-session/session-result-page/session-result-page.component.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTo0MTo1MFrOHSc-xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwOTo0NzoxNlrOHcAsqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExMTIzNg==", "bodyText": "At least the filtering should happen here.", "url": "https://github.com/TEAMMATES/teammates/pull/10695#discussion_r489111236", "createdAt": "2020-09-16T01:41:50Z", "author": {"login": "xpdavid"}, "path": "src/web/app/pages-session/session-result-page/session-result-page.component.html", "diffHunk": "@@ -41,7 +41,7 @@ <h1>\n       <div class=\"card-body\">\n         <tm-question-text-with-info [questionNumber]=\"question.feedbackQuestion.questionNumber\" [questionDetails]=\"question.feedbackQuestion.questionDetails\" class=\"question-text\"></tm-question-text-with-info>\n         <tm-single-statistics [question]=\"question.feedbackQuestion.questionDetails\"\n-                              [responses]=\"question.responsesToSelf\"\n+                              [responses]=\"question.allResponses\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68322e88937c14153d3976503031fc4dbb868c9c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMzYwOA==", "bodyText": "Shifted the filtering into single-statistics", "url": "https://github.com/TEAMMATES/teammates/pull/10695#discussion_r499133608", "createdAt": "2020-10-03T09:47:16Z", "author": {"login": "jtankw3"}, "path": "src/web/app/pages-session/session-result-page/session-result-page.component.html", "diffHunk": "@@ -41,7 +41,7 @@ <h1>\n       <div class=\"card-body\">\n         <tm-question-text-with-info [questionNumber]=\"question.feedbackQuestion.questionNumber\" [questionDetails]=\"question.feedbackQuestion.questionDetails\" class=\"question-text\"></tm-question-text-with-info>\n         <tm-single-statistics [question]=\"question.feedbackQuestion.questionDetails\"\n-                              [responses]=\"question.responsesToSelf\"\n+                              [responses]=\"question.allResponses\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExMTIzNg=="}, "originalCommit": {"oid": "68322e88937c14153d3976503031fc4dbb868c9c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDA1NDczOnYy", "diffSide": "RIGHT", "path": "src/main/java/teammates/ui/output/SessionResultsData.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjo1OToyNFrOHqGHbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzo1NDo0MVrOHqyq_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkwMjQ0Nw==", "bodyText": "Let me just confirm @damithc\nIs is ok to show team name when the name of student is visible?", "url": "https://github.com/TEAMMATES/teammates/pull/10695#discussion_r513902447", "createdAt": "2020-10-29T02:59:24Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/output/SessionResultsData.java", "diffHunk": "@@ -144,15 +146,16 @@ private static ResponseOutput buildSingleResponseForStudent(\n         } else {\n             // we don't want student to figure out who is who by using the hash\n             recipientName = removeAnonymousHash(getRecipientNameOfResponse(response, bundle).getName());\n+            if (!recipientName.contains(Const.DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "989998cfe023952ddb6910f839d99e6c22e6350f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkwODkxNg==", "bodyText": "Yes,  I think so. If  the student name is known, no point hiding the team name as a student can only belong to one team and the instructor know which team that is.", "url": "https://github.com/TEAMMATES/teammates/pull/10695#discussion_r513908916", "createdAt": "2020-10-29T03:13:05Z", "author": {"login": "damithc"}, "path": "src/main/java/teammates/ui/output/SessionResultsData.java", "diffHunk": "@@ -144,15 +146,16 @@ private static ResponseOutput buildSingleResponseForStudent(\n         } else {\n             // we don't want student to figure out who is who by using the hash\n             recipientName = removeAnonymousHash(getRecipientNameOfResponse(response, bundle).getName());\n+            if (!recipientName.contains(Const.DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkwMjQ0Nw=="}, "originalCommit": {"oid": "989998cfe023952ddb6910f839d99e6c22e6350f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEwNzgzOA==", "bodyText": "@xpdavid Should I proceed to merge?", "url": "https://github.com/TEAMMATES/teammates/pull/10695#discussion_r514107838", "createdAt": "2020-10-29T09:14:02Z", "author": {"login": "jtankw3"}, "path": "src/main/java/teammates/ui/output/SessionResultsData.java", "diffHunk": "@@ -144,15 +146,16 @@ private static ResponseOutput buildSingleResponseForStudent(\n         } else {\n             // we don't want student to figure out who is who by using the hash\n             recipientName = removeAnonymousHash(getRecipientNameOfResponse(response, bundle).getName());\n+            if (!recipientName.contains(Const.DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkwMjQ0Nw=="}, "originalCommit": {"oid": "989998cfe023952ddb6910f839d99e6c22e6350f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYzMjQ0Nw==", "bodyText": "Sure \ud83d\udc4d", "url": "https://github.com/TEAMMATES/teammates/pull/10695#discussion_r514632447", "createdAt": "2020-10-29T23:54:41Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/output/SessionResultsData.java", "diffHunk": "@@ -144,15 +146,16 @@ private static ResponseOutput buildSingleResponseForStudent(\n         } else {\n             // we don't want student to figure out who is who by using the hash\n             recipientName = removeAnonymousHash(getRecipientNameOfResponse(response, bundle).getName());\n+            if (!recipientName.contains(Const.DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkwMjQ0Nw=="}, "originalCommit": {"oid": "989998cfe023952ddb6910f839d99e6c22e6350f"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3548, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}