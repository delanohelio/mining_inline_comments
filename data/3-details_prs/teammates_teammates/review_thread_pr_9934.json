{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Mzg0Mjcx", "number": 9934, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMjo0NDo1OVrODccfEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMjo0NDo1OVrODccfEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTUzNDI2OnYy", "diffSide": "RIGHT", "path": "src/test/java/teammates/test/cases/webapi/RestoreFeedbackSessionActionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMjo0NDo1OVrOFkf2rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMjo0NDo1OVrOFkf2rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxNDk1Nw==", "bodyText": "It could be a good practice to separate verifying output and verifying model by an empty line, or add comment, but it's fine to me and just a suggestion", "url": "https://github.com/TEAMMATES/teammates/pull/9934#discussion_r373814957", "createdAt": "2020-02-02T02:44:59Z", "author": {"login": "Adoby7"}, "path": "src/test/java/teammates/test/cases/webapi/RestoreFeedbackSessionActionTest.java", "diffHunk": "@@ -23,13 +30,69 @@ protected String getRequestMethod() {\n     @Test\n     @Override\n     protected void testExecute() throws Exception {\n-        // TODO\n+        InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n+        FeedbackSessionAttributes firstFeedbackSession = typicalBundle.feedbackSessions.get(\"session1InCourse1\");\n+\n+        String instructorId = instructor1OfCourse1.googleId;\n+        String courseId = instructor1OfCourse1.courseId;\n+        String feedbackSessionName = firstFeedbackSession.getFeedbackSessionName();\n+\n+        loginAsInstructor(instructorId);\n+\n+        String[] submissionParams = new String[] {\n+                Const.ParamsNames.COURSE_ID, courseId,\n+                Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName,\n+        };\n+\n+        ______TS(\"Not found in recycle bin\");\n+\n+        RestoreFeedbackSessionAction notFoundAction = getAction(submissionParams);\n+        EntityNotFoundException notFoundException = assertThrows(EntityNotFoundException.class, () -> {\n+            getJsonResult(notFoundAction);\n+        });\n+\n+        assertEquals(\"Feedback session is not in recycle bin\", notFoundException.getMessage());\n+\n+        ______TS(\"Typical case, restore a deleted feedback session from recycle bin\");\n+\n+        logic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);\n+\n+        RestoreFeedbackSessionAction action = getAction(submissionParams);\n+        JsonResult result = getJsonResult(action);\n+        FeedbackSessionData feedbackSessionMessage = (FeedbackSessionData) result.getOutput();\n+\n+        assertEquals(HttpStatus.SC_OK, result.getStatusCode());\n+        assertEquals(courseId, feedbackSessionMessage.getCourseId());\n+        assertEquals(feedbackSessionName, feedbackSessionMessage.getFeedbackSessionName());\n+        assertFalse(logic.getFeedbackSession(feedbackSessionName, courseId).isSessionDeleted());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b6e4a10668d1dd8b8853212191ba11cb85d3142"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4042, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}