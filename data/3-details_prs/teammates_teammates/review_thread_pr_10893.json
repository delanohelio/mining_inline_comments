{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1Mjc5ODUw", "number": 10893, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwNTowOToyOVrOFP2mqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwNTowOToyOVrOFP2mqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMTY3NTkzOnYy", "diffSide": "RIGHT", "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwNTowOToyOVrOIVaLxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yM1QxNDoxOTo0MVrOJytRYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMyMDAwNg==", "bodyText": "Why not use .pipe(finalize(...)). That way, you only need to set the isCopying in one place. See the other places with the loading spinner", "url": "https://github.com/TEAMMATES/teammates/pull/10893#discussion_r559320006", "createdAt": "2021-01-18T05:09:29Z", "author": {"login": "t-cheepeng"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -263,7 +265,9 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n             this.showCopyStatusMessage();\n           });\n         }\n-      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); });\n+        this.sessionEditFormModel.isCopying = false;\n+      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); })\n+      .catch(() => this.sessionEditFormModel.isCopying = false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87806891330337179fb83ce2d10a25561a4e0a60"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTcxNjkxOQ==", "bodyText": "I tried to use .pipe(finalize(...)) but I cannot find a place to use it. Property 'pipe' does not exist on type 'Promise' or 'Subscription'.", "url": "https://github.com/TEAMMATES/teammates/pull/10893#discussion_r559716919", "createdAt": "2021-01-18T17:33:41Z", "author": {"login": "hhdqirui"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -263,7 +265,9 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n             this.showCopyStatusMessage();\n           });\n         }\n-      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); });\n+        this.sessionEditFormModel.isCopying = false;\n+      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); })\n+      .catch(() => this.sessionEditFormModel.isCopying = false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMyMDAwNg=="}, "originalCommit": {"oid": "87806891330337179fb83ce2d10a25561a4e0a60"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjQ3MjQ5Mw==", "bodyText": "The Promise's equivalence of finalize is .finally(). You can try .finally(() => this.sessionEditFormModel.isCopying = false), instead of repeating the same code in 3 places.", "url": "https://github.com/TEAMMATES/teammates/pull/10893#discussion_r642472493", "createdAt": "2021-05-31T13:01:34Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -263,7 +265,9 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n             this.showCopyStatusMessage();\n           });\n         }\n-      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); });\n+        this.sessionEditFormModel.isCopying = false;\n+      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); })\n+      .catch(() => this.sessionEditFormModel.isCopying = false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMyMDAwNg=="}, "originalCommit": {"oid": "87806891330337179fb83ce2d10a25561a4e0a60"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1Njg5Njc4OQ==", "bodyText": "I tried using finally and remove the repeated code, but doing so will make the spinner to stop prematurely while the backend is still copying.\nmodalRef.result.then((result: CopySessionModalResult) => {\n        this.failedToCopySessions = {};\n        const requestList: Observable<FeedbackSession>[] = this.createSessionCopyRequestsFromModal(\n            result, this.courseId, this.feedbackSessionName);\n        if (requestList.length === 1) {\n          requestList[0].subscribe((createdSession: FeedbackSession) => {\n            if (Object.keys(this.failedToCopySessions).length === 0) {\n              this.navigationService.navigateWithSuccessMessage(this.router,\n                  '/web/instructor/sessions/edit',\n                  'The feedback session has been copied. Please modify settings/questions as necessary.',\n                  { courseid: createdSession.courseId, fsname: createdSession.feedbackSessionName });\n            } else {\n              this.statusMessageService.showErrorToast(this.getCopyErrorMessage());\n            }\n          }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); });\n        }\n        if (requestList.length > 1) {\n          forkJoin(requestList)\n           .subscribe(() => {\n             this.showCopyStatusMessage();\n           });\n        }\n      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); })\n      .finally(() => this.sessionEditFormModel.isCopying = false);\n\nThe result of such changes looks like this", "url": "https://github.com/TEAMMATES/teammates/pull/10893#discussion_r656896789", "createdAt": "2021-06-23T08:55:27Z", "author": {"login": "hhdqirui"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -263,7 +265,9 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n             this.showCopyStatusMessage();\n           });\n         }\n-      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); });\n+        this.sessionEditFormModel.isCopying = false;\n+      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); })\n+      .catch(() => this.sessionEditFormModel.isCopying = false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMyMDAwNg=="}, "originalCommit": {"oid": "87806891330337179fb83ce2d10a25561a4e0a60"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzE1MDMwNQ==", "bodyText": "Yeah I don't think there's an easy way to do it all in one place for now, since the modal closes before the request returns.", "url": "https://github.com/TEAMMATES/teammates/pull/10893#discussion_r657150305", "createdAt": "2021-06-23T14:19:41Z", "author": {"login": "ccyccyccy"}, "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts", "diffHunk": "@@ -263,7 +265,9 @@ export class InstructorSessionEditPageComponent extends InstructorSessionBasePag\n             this.showCopyStatusMessage();\n           });\n         }\n-      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); });\n+        this.sessionEditFormModel.isCopying = false;\n+      }, (resp: ErrorMessageOutput) => { this.statusMessageService.showErrorToast(resp.error.message); })\n+      .catch(() => this.sessionEditFormModel.isCopying = false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMyMDAwNg=="}, "originalCommit": {"oid": "87806891330337179fb83ce2d10a25561a4e0a60"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3355, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}