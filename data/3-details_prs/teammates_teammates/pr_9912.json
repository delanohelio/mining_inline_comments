{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNDM4ODg5", "number": 9912, "title": "[#4854] Add Instructor Institution Validation", "bodyText": "Resolves #4854\nOutline of Solution\n\nGenerate a HMAC for institute using secret key\nAppend HMAC signature to URL when generating join link\nVerify signature in join link against signature generated from institute in join link", "createdAt": "2020-01-14T04:33:14Z", "url": "https://github.com/TEAMMATES/teammates/pull/9912", "merged": true, "mergeCommit": {"oid": "dcac5dad2da0654e013a52959992170b41e385ba"}, "closed": true, "closedAt": "2020-03-23T04:53:47Z", "author": {"login": "madanalogy"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6Jp6sAFqTM0MjI5MTUwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQW75GAFqTM3OTEzMTkzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjkxNTA3", "url": "https://github.com/TEAMMATES/teammates/pull/9912#pullrequestreview-342291507", "createdAt": "2020-01-14T04:57:25Z", "commit": {"oid": "d4eda6d4aa23c5d85080308036f654403a212fab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo1NzoyNVrOFdMMbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo1NzoyNVrOFdMMbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MjgxNQ==", "bodyText": "There are two problems here:\n\ngetAccount accepts googleId rather than email\nIf instructor does not have account stored in the database (e.g. it is the first time he/she use TEAMMATES), account will be null. In this case, they can still modify the institute name and bypass the check.", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r366152815", "createdAt": "2020-01-14T04:57:25Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/logic/core/AccountsLogic.java", "diffHunk": "@@ -162,6 +164,16 @@ public InstructorAttributes joinCourseForInstructor(String encryptedKey, String\n         return instructor;\n     }\n \n+    private void validateInstructorInstitute (InstructorAttributes instructor, String institute)\n+            throws InvalidParametersException {\n+        assert instructor != null : \"Should have been checked in validateInstructorJoinRequest() method.\";\n+        AccountAttributes account = getAccount(instructor.email);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4eda6d4aa23c5d85080308036f654403a212fab"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8188c96b00c141a727620ed9f4057450bd24e6db", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8188c96b00c141a727620ed9f4057450bd24e6db", "committedDate": "2020-01-14T13:56:45Z", "message": "Create account when generating join link"}, "afterCommit": {"oid": "b68b46b84dfe455c087c995d2415d60083174006", "author": {"user": {"login": "nusjzx", "name": null}}, "url": "https://github.com/TEAMMATES/teammates/commit/b68b46b84dfe455c087c995d2415d60083174006", "committedDate": "2020-03-08T06:43:28Z", "message": "[#9646] Add lnp test for instructor session result page (#9973)\n\n* Add JMeter utility elements for instructor session result lnp test\r\n\r\n* Add instructor session result lnp test\r\n\r\nCo-authored-by: Xiao Pu <xp.xiaopu@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e915de648747c96831029c287a98cdb80a4d0129", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/e915de648747c96831029c287a98cdb80a4d0129", "committedDate": "2020-03-15T09:46:11Z", "message": "Initial Implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f22f6fa5166e03c4c3d7af443ee5259891bdd9a3", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f22f6fa5166e03c4c3d7af443ee5259891bdd9a3", "committedDate": "2020-03-15T17:50:39Z", "message": "Move implementation to logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0cabd52315bdfdc020516d30622d5af91f6541f", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f0cabd52315bdfdc020516d30622d5af91f6541f", "committedDate": "2020-03-16T05:06:22Z", "message": "Add signature tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "decb2e0a0e7489a0d49a80cecbbe017025b79dbf", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/decb2e0a0e7489a0d49a80cecbbe017025b79dbf", "committedDate": "2020-03-16T05:08:32Z", "message": "Merge branch 'master' into 4854-validate-instructor-institution"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1OTY0OTQ2", "url": "https://github.com/TEAMMATES/teammates/pull/9912#pullrequestreview-375964946", "createdAt": "2020-03-17T11:54:19Z", "commit": {"oid": "decb2e0a0e7489a0d49a80cecbbe017025b79dbf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTo1NDoxOVrOF3Y77Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjo0MDo0MlrOF3ab0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNDU1Nw==", "bodyText": "Assumption.assertNotNull(mac)?\nWhile we're at it, let's add the missing one for institute too.", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r393624557", "createdAt": "2020-03-17T11:54:19Z", "author": {"login": "ChooJeremy"}, "path": "src/main/java/teammates/logic/api/Logic.java", "diffHunk": "@@ -361,13 +361,13 @@ public InstructorAttributes updateInstructor(InstructorAttributes.UpdateOptionsW\n      * Preconditions: <br>\n      * * All parameters are non-null.\n      */\n-    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute)\n+    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute, String mac)\n             throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {\n \n         Assumption.assertNotNull(googleId);\n         Assumption.assertNotNull(encryptedKey);\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decb2e0a0e7489a0d49a80cecbbe017025b79dbf"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNzQ3OQ==", "bodyText": "I'm not sure such a variable belongs in StringHelper. Since it's only used twice, let's follow the encrypt and decrypt methods and just use \"HmacSHA1\" instead.", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r393637479", "createdAt": "2020-03-17T12:19:29Z", "author": {"login": "ChooJeremy"}, "path": "src/main/java/teammates/common/util/StringHelper.java", "diffHunk": "@@ -26,6 +28,7 @@\n \n public final class StringHelper {\n     private static final Logger log = Logger.getLogger();\n+    private static final String HMAC_SHA1_ALGORITHM = \"HmacSHA1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decb2e0a0e7489a0d49a80cecbbe017025b79dbf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzODkyMw==", "bodyText": "Nothing wrong here - you throw an Invalid Parameter Exception when the hash doesn't match.", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r393638923", "createdAt": "2020-03-17T12:22:05Z", "author": {"login": "ChooJeremy"}, "path": "src/main/java/teammates/logic/core/AccountsLogic.java", "diffHunk": "@@ -115,8 +116,13 @@ public StudentAttributes joinCourseForStudent(String registrationKey, String goo\n      * Joins the user as an instructor and sets the institute if it is not null.\n      * If the given instructor is null, the instructor is given the institute of an existing instructor of the same course.\n      */\n-    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute)\n+    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute, String mac)\n             throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {\n+\n+        if (institute != null && !StringHelper.isCorrectSignature(institute, mac)) {\n+            throw new InvalidParametersException(\"Institute authentication failed.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decb2e0a0e7489a0d49a80cecbbe017025b79dbf"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY0OTEwNA==", "bodyText": "validateInstructorJoinRequest is probably a more appropriate location to do the check.", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r393649104", "createdAt": "2020-03-17T12:40:42Z", "author": {"login": "ChooJeremy"}, "path": "src/main/java/teammates/logic/core/AccountsLogic.java", "diffHunk": "@@ -115,8 +116,13 @@ public StudentAttributes joinCourseForStudent(String registrationKey, String goo\n      * Joins the user as an instructor and sets the institute if it is not null.\n      * If the given instructor is null, the instructor is given the institute of an existing instructor of the same course.\n      */\n-    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute)\n+    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute, String mac)\n             throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {\n+\n+        if (institute != null && !StringHelper.isCorrectSignature(institute, mac)) {\n+            throw new InvalidParametersException(\"Institute authentication failed.\");\n+        }\n+\n         InstructorAttributes instructor = validateInstructorJoinRequest(encryptedKey, googleId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decb2e0a0e7489a0d49a80cecbbe017025b79dbf"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c73e39174e4c359227dc61f0afdf543da370fc6", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/3c73e39174e4c359227dc61f0afdf543da370fc6", "committedDate": "2020-03-17T14:14:04Z", "message": "Add test cases to AccountsLogicTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1f927137e0dc2c9f581b82e36418edff933354a", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a1f927137e0dc2c9f581b82e36418edff933354a", "committedDate": "2020-03-17T14:14:28Z", "message": "Merge branch 'master' into 4854-validate-instructor-institution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2755839f7615a264e11035e6f485ba0f497e59a1", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/2755839f7615a264e11035e6f485ba0f497e59a1", "committedDate": "2020-03-17T14:16:53Z", "message": "Fixed typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70f0efb2b9b8cd28c03593fb8a5b3b40f5709a68", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/70f0efb2b9b8cd28c03593fb8a5b3b40f5709a68", "committedDate": "2020-03-17T14:31:34Z", "message": "Add GetCourseJoinStatusAction validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NTY2MDUz", "url": "https://github.com/TEAMMATES/teammates/pull/9912#pullrequestreview-376566053", "createdAt": "2020-03-18T05:02:48Z", "commit": {"oid": "70f0efb2b9b8cd28c03593fb8a5b3b40f5709a68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNTowMjo0OFrOF32cjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNTowMjo0OFrOF32cjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwODA0NA==", "bodyText": "Have you done manual testing to ensure that this is displayed correctly?", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r394108044", "createdAt": "2020-03-18T05:02:48Z", "author": {"login": "ChooJeremy"}, "path": "src/main/java/teammates/ui/webapi/action/GetCourseJoinStatusAction.java", "diffHunk": "@@ -49,6 +50,13 @@ private JsonResult getInstructorJoinStatus(String regkey) {\n         if (instructor == null) {\n             return new JsonResult(\"No instructor with given registration key: \" + regkey, HttpStatus.SC_NOT_FOUND);\n         }\n+\n+        String institute = getRequestParamValue(Const.ParamsNames.INSTRUCTOR_INSTITUTION);\n+        String mac = getRequestParamValue(Const.ParamsNames.INSTITUTION_MAC);\n+        if (institute != null && !StringHelper.isCorrectSignature(institute, mac)) {\n+            return new JsonResult(\"Error in URL validation. Please re-check the URL.\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70f0efb2b9b8cd28c03593fb8a5b3b40f5709a68"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NTY2MDg5", "url": "https://github.com/TEAMMATES/teammates/pull/9912#pullrequestreview-376566089", "createdAt": "2020-03-18T05:02:53Z", "commit": {"oid": "70f0efb2b9b8cd28c03593fb8a5b3b40f5709a68"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3208538a5a498327a8f536b0da29d0d41d58150", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/c3208538a5a498327a8f536b0da29d0d41d58150", "committedDate": "2020-03-18T06:41:24Z", "message": "Add front-end validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9b35c075f9060594adc71a21c9a7bb276e10811", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/f9b35c075f9060594adc71a21c9a7bb276e10811", "committedDate": "2020-03-18T06:55:21Z", "message": "Fix lint errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3de04519202f5186b7f44a0291cfb9cb21e51af2", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/3de04519202f5186b7f44a0291cfb9cb21e51af2", "committedDate": "2020-03-18T07:40:29Z", "message": "Merge branch 'master' into 4854-validate-instructor-institution"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NjY4MTE5", "url": "https://github.com/TEAMMATES/teammates/pull/9912#pullrequestreview-376668119", "createdAt": "2020-03-18T08:57:35Z", "commit": {"oid": "3de04519202f5186b7f44a0291cfb9cb21e51af2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODo1NzozNVrOF37ejA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToxNToxNVrOF38Fzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5MDQ3Ng==", "bodyText": "Why not: encryptedKey and googleId are non-null?", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r394190476", "createdAt": "2020-03-18T08:57:35Z", "author": {"login": "ChooJeremy"}, "path": "src/main/java/teammates/logic/api/Logic.java", "diffHunk": "@@ -357,17 +357,15 @@ public InstructorAttributes updateInstructor(InstructorAttributes.UpdateOptionsW\n \n     /**\n      * Make the instructor join the course, i.e. associate the Google ID to the instructor.<br>\n-     * Create an account for the instructor if there is no account exist for him.\n-     * Preconditions: <br>\n-     * * All parameters are non-null.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de04519202f5186b7f44a0291cfb9cb21e51af2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODI2NA==", "bodyText": "You should verify that the account is indeed not in the database.", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r394198264", "createdAt": "2020-03-18T09:11:30Z", "author": {"login": "ChooJeremy"}, "path": "src/test/java/teammates/test/cases/logic/AccountsLogicTest.java", "diffHunk": "@@ -353,24 +354,81 @@ public void testJoinCourseForInstructor() throws Exception {\n         joinedInstructor = instructorsLogic.getInstructorForEmail(instructor.courseId, nonInstrAccount.email);\n         InstructorAttributes[] finalInstructor = new InstructorAttributes[] { joinedInstructor };\n         eaee = assertThrows(EntityAlreadyExistsException.class,\n-                () -> accountsLogic.joinCourseForInstructor(encryptedKey[0], finalInstructor[0].googleId, null));\n+                () -> accountsLogic.joinCourseForInstructor(encryptedKey[0], finalInstructor[0].googleId, null, null));\n         assertEquals(\"Instructor has already joined course\", eaee.getMessage());\n \n         ______TS(\"failure: key belongs to a different user\");\n \n         eaee = assertThrows(EntityAlreadyExistsException.class,\n-                () -> accountsLogic.joinCourseForInstructor(encryptedKey[0], \"otherUserId\", null));\n+                () -> accountsLogic.joinCourseForInstructor(encryptedKey[0], \"otherUserId\", null, null));\n         assertEquals(\"Instructor has already joined course\", eaee.getMessage());\n \n         ______TS(\"failure: invalid key\");\n         String invalidKey = StringHelper.encrypt(\"invalidKey\");\n \n         EntityDoesNotExistException ednee = assertThrows(EntityDoesNotExistException.class,\n-                () -> accountsLogic.joinCourseForInstructor(invalidKey, loggedInGoogleId, null));\n+                () -> accountsLogic.joinCourseForInstructor(invalidKey, loggedInGoogleId, null, null));\n         assertEquals(\"No instructor with given registration key: \" + invalidKey,\n                 ednee.getMessage());\n     }\n \n+    @Test\n+    public void testJoinCourseForInstructor_validInstitute_shouldPass()\n+            throws EntityDoesNotExistException, InvalidParametersException, EntityAlreadyExistsException {\n+        InstructorAttributes instructor = dataBundle.instructors.get(\"instructorNotYetJoinCourse\");\n+        String loggedInGoogleId = \"AccLogicT.instr.id\";\n+        String institute = \"National University of Singapore\";\n+        String[] encryptedKey = new String[] {\n+                instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, instructor.email),\n+        };\n+\n+        ______TS(\"success: instructor with institute joined and new account created\");\n+\n+        accountsLogic.joinCourseForInstructor(encryptedKey[0], loggedInGoogleId,\n+                institute, StringHelper.generateSignature(institute));\n+\n+        InstructorAttributes joinedInstructor =\n+                instructorsLogic.getInstructorForEmail(instructor.courseId, instructor.email);\n+        assertEquals(loggedInGoogleId, joinedInstructor.googleId);\n+\n+        AccountAttributes accountCreated = accountsLogic.getAccount(loggedInGoogleId);\n+        assertNotNull(accountCreated);\n+    }\n+\n+    @Test\n+    public void testJoinCourseForInstructor_invalidInstituteMac_shouldFail() throws EntityDoesNotExistException {\n+        InstructorAttributes instructor = dataBundle.instructors.get(\"instructorNotYetJoinCourse\");\n+        String loggedInGoogleId = \"AccLogicT.instr.id\";\n+        String institute = \"National University of Singapore\";\n+        String[] encryptedKey = new String[] {\n+                instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, instructor.email),\n+        };\n+\n+        ______TS(\"failure: institute signature does not match institute provided\");\n+\n+        InvalidParametersException ipe = assertThrows(InvalidParametersException.class,\n+                () -> accountsLogic.joinCourseForInstructor(\n+                        encryptedKey[0], loggedInGoogleId, institute, StringHelper.generateSignature(\"NUS\")));\n+        assertEquals(\"Institute authentication failed.\", ipe.getMessage());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de04519202f5186b7f44a0291cfb9cb21e51af2"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODUwNw==", "bodyText": "Same here", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r394198507", "createdAt": "2020-03-18T09:11:53Z", "author": {"login": "ChooJeremy"}, "path": "src/test/java/teammates/test/cases/logic/AccountsLogicTest.java", "diffHunk": "@@ -353,24 +354,81 @@ public void testJoinCourseForInstructor() throws Exception {\n         joinedInstructor = instructorsLogic.getInstructorForEmail(instructor.courseId, nonInstrAccount.email);\n         InstructorAttributes[] finalInstructor = new InstructorAttributes[] { joinedInstructor };\n         eaee = assertThrows(EntityAlreadyExistsException.class,\n-                () -> accountsLogic.joinCourseForInstructor(encryptedKey[0], finalInstructor[0].googleId, null));\n+                () -> accountsLogic.joinCourseForInstructor(encryptedKey[0], finalInstructor[0].googleId, null, null));\n         assertEquals(\"Instructor has already joined course\", eaee.getMessage());\n \n         ______TS(\"failure: key belongs to a different user\");\n \n         eaee = assertThrows(EntityAlreadyExistsException.class,\n-                () -> accountsLogic.joinCourseForInstructor(encryptedKey[0], \"otherUserId\", null));\n+                () -> accountsLogic.joinCourseForInstructor(encryptedKey[0], \"otherUserId\", null, null));\n         assertEquals(\"Instructor has already joined course\", eaee.getMessage());\n \n         ______TS(\"failure: invalid key\");\n         String invalidKey = StringHelper.encrypt(\"invalidKey\");\n \n         EntityDoesNotExistException ednee = assertThrows(EntityDoesNotExistException.class,\n-                () -> accountsLogic.joinCourseForInstructor(invalidKey, loggedInGoogleId, null));\n+                () -> accountsLogic.joinCourseForInstructor(invalidKey, loggedInGoogleId, null, null));\n         assertEquals(\"No instructor with given registration key: \" + invalidKey,\n                 ednee.getMessage());\n     }\n \n+    @Test\n+    public void testJoinCourseForInstructor_validInstitute_shouldPass()\n+            throws EntityDoesNotExistException, InvalidParametersException, EntityAlreadyExistsException {\n+        InstructorAttributes instructor = dataBundle.instructors.get(\"instructorNotYetJoinCourse\");\n+        String loggedInGoogleId = \"AccLogicT.instr.id\";\n+        String institute = \"National University of Singapore\";\n+        String[] encryptedKey = new String[] {\n+                instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, instructor.email),\n+        };\n+\n+        ______TS(\"success: instructor with institute joined and new account created\");\n+\n+        accountsLogic.joinCourseForInstructor(encryptedKey[0], loggedInGoogleId,\n+                institute, StringHelper.generateSignature(institute));\n+\n+        InstructorAttributes joinedInstructor =\n+                instructorsLogic.getInstructorForEmail(instructor.courseId, instructor.email);\n+        assertEquals(loggedInGoogleId, joinedInstructor.googleId);\n+\n+        AccountAttributes accountCreated = accountsLogic.getAccount(loggedInGoogleId);\n+        assertNotNull(accountCreated);\n+    }\n+\n+    @Test\n+    public void testJoinCourseForInstructor_invalidInstituteMac_shouldFail() throws EntityDoesNotExistException {\n+        InstructorAttributes instructor = dataBundle.instructors.get(\"instructorNotYetJoinCourse\");\n+        String loggedInGoogleId = \"AccLogicT.instr.id\";\n+        String institute = \"National University of Singapore\";\n+        String[] encryptedKey = new String[] {\n+                instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, instructor.email),\n+        };\n+\n+        ______TS(\"failure: institute signature does not match institute provided\");\n+\n+        InvalidParametersException ipe = assertThrows(InvalidParametersException.class,\n+                () -> accountsLogic.joinCourseForInstructor(\n+                        encryptedKey[0], loggedInGoogleId, institute, StringHelper.generateSignature(\"NUS\")));\n+        assertEquals(\"Institute authentication failed.\", ipe.getMessage());\n+    }\n+\n+    @Test\n+    public void testJoinCourseForInstructor_missingInstituteMac_shouldFail() throws EntityDoesNotExistException {\n+        InstructorAttributes instructor = dataBundle.instructors.get(\"instructorNotYetJoinCourse\");\n+        String loggedInGoogleId = \"AccLogicT.instr.id\";\n+        String institute = \"National University of Singapore\";\n+        String[] encryptedKey = new String[] {\n+                instructorsLogic.getEncryptedKeyForInstructor(instructor.courseId, instructor.email),\n+        };\n+\n+        ______TS(\"failure: institute signature missing\");\n+\n+        InvalidParametersException ipe = assertThrows(InvalidParametersException.class,\n+                () -> accountsLogic.joinCourseForInstructor(\n+                        encryptedKey[0], loggedInGoogleId, institute, null));\n+        assertEquals(\"Institute authentication failed.\", ipe.getMessage());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de04519202f5186b7f44a0291cfb9cb21e51af2"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwMDUyNg==", "bodyText": "In addition to verify determinism, we should verify if it is correct. (i.e. the returned value is indeed the expected hash of a certain String. You can take a look at the encrypt test methods.", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r394200526", "createdAt": "2020-03-18T09:15:15Z", "author": {"login": "ChooJeremy"}, "path": "src/test/java/teammates/test/cases/util/StringHelperTest.java", "diffHunk": "@@ -412,4 +412,13 @@ public void testExtractContentFromQuotedString() {\n         assertEquals(StringHelper.extractContentFromQuotedString(null), null);\n         assertEquals(StringHelper.extractContentFromQuotedString(\"\"), \"\");\n     }\n+\n+    @Test\n+    public void testSignatureGenerationDeterministic() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de04519202f5186b7f44a0291cfb9cb21e51af2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2Njg3NzY2", "url": "https://github.com/TEAMMATES/teammates/pull/9912#pullrequestreview-376687766", "createdAt": "2020-03-18T09:24:50Z", "commit": {"oid": "3de04519202f5186b7f44a0291cfb9cb21e51af2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyNDo1MFrOF38cAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyNDo1MFrOF38cAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwNjIxMQ==", "bodyText": "Why we need to verify MAC for GET action?", "url": "https://github.com/TEAMMATES/teammates/pull/9912#discussion_r394206211", "createdAt": "2020-03-18T09:24:50Z", "author": {"login": "xpdavid"}, "path": "src/main/java/teammates/ui/webapi/action/GetCourseJoinStatusAction.java", "diffHunk": "@@ -49,6 +50,13 @@ private JsonResult getInstructorJoinStatus(String regkey) {\n         if (instructor == null) {\n             return new JsonResult(\"No instructor with given registration key: \" + regkey, HttpStatus.SC_NOT_FOUND);\n         }\n+\n+        String institute = getRequestParamValue(Const.ParamsNames.INSTRUCTOR_INSTITUTION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de04519202f5186b7f44a0291cfb9cb21e51af2"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a09a3a7f648e30f47d5c7a39746a5cb214df53c9", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a09a3a7f648e30f47d5c7a39746a5cb214df53c9", "committedDate": "2020-03-18T12:11:12Z", "message": "Apply suggestions from code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc00a31a2ced267883f505ef94b7ec0a84c651b3", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/cc00a31a2ced267883f505ef94b7ec0a84c651b3", "committedDate": "2020-03-18T12:19:44Z", "message": "Improve error message for missing mac"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NzY5MTIy", "url": "https://github.com/TEAMMATES/teammates/pull/9912#pullrequestreview-377769122", "createdAt": "2020-03-19T14:25:04Z", "commit": {"oid": "cc00a31a2ced267883f505ef94b7ec0a84c651b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5e092ff02187ce1aa4b5d834972302c2b5a6fc7", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a5e092ff02187ce1aa4b5d834972302c2b5a6fc7", "committedDate": "2020-03-20T01:41:18Z", "message": "Merge branch 'master' into 4854-validate-instructor-institution"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTMxOTMz", "url": "https://github.com/TEAMMATES/teammates/pull/9912#pullrequestreview-379131933", "createdAt": "2020-03-23T04:52:12Z", "commit": {"oid": "a5e092ff02187ce1aa4b5d834972302c2b5a6fc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4418, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}