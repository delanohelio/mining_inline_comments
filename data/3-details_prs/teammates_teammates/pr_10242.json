{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNDAxODk0", "number": 10242, "title": "[#10221] Add update student cascade LNP test case", "bodyText": "Part of #10221\nOutline of Solution\nThe updateStudentCascade LNP test case will be addressed in 3 separate ways.\n\nupdateStudentEmailCascade  -- target updateFeedbackResponsesForChangingEmail API endpoint\nupdateStudentSectionCascade  -- target updateFeedbackResponsesForChangingSection API endpoint\nupdateStudentTeamCascade  -- target updateFeedbackResponsesForChangingTeam API endpoint\n\n\ntest the update cascade of information(name, email, section) of a particular student to all involved feedback responses\n\nTest endpoint:\nwebapi/student?courseid=${courseId}&studentid=${studentId}&studentemail=${studentEmail}\n\nTest http payload (by email):\nStudentUpdateRequest studentUpdateRequest = new StudentUpdateRequest(\n        STUDENT_NAME,\n        UPDATE_STUDENT_EMAIL,\n        TEAM_NAME,\n        GIVER_SECTION_NAME,\n        STUDENT_COMMENTS,\n        false\n);\n\nTest http payload (by section name):\nStudentUpdateRequest studentUpdateRequest = new StudentUpdateRequest(\n        STUDENT_NAME,\n        STUDENT_EMAIL,\n        TEAM_NAME,\n        UPDATE_GIVER_SECTION_NAME,,\n        STUDENT_COMMENTS,\n        false\n);\n\nTest http payload (by team):\nStudentUpdateRequest studentUpdateRequest = new StudentUpdateRequest(\n        STUDENT_NAME,\n        STUDENT_EMAIL,\n        UPDATE_TEAM_NAME,\n        GIVER_SECTION_NAME,,\n        STUDENT_COMMENTS,\n        false\n);", "createdAt": "2020-06-26T06:13:11Z", "url": "https://github.com/TEAMMATES/teammates/pull/10242", "merged": true, "mergeCommit": {"oid": "b57145baca4da4bf371a438e5714153e4e8a96b3"}, "closed": true, "closedAt": "2020-07-03T01:29:39Z", "author": {"login": "Derek-Hardy"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuw02VAH2gAyNDQwNDAxODk0OjhhNWQ4NWI0YThlOTNlOTViYmQwY2FjZGVkYzE0OTZhMDhhN2ExMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxImHvgH2gAyNDQwNDAxODk0OjM0MjExNGRiNGViYjMxZTAyMmRhYThiZDNhNGI1MDk2M2ZlNTJiNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a5d85b4a8e93e95bbd0cacdedc1496a08a7a127", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/8a5d85b4a8e93e95bbd0cacdedc1496a08a7a127", "committedDate": "2020-06-25T15:59:46Z", "message": "add update student cascade LNP test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd52ff944c848fcfca5f652a59beab51ff66a90b", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/cd52ff944c848fcfca5f652a59beab51ff66a90b", "committedDate": "2020-06-28T15:22:54Z", "message": "fixed wrong FeedbackResponseAttributes param"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e4beb34cb42767d36b5b6435385225dcc13822e", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/1e4beb34cb42767d36b5b6435385225dcc13822e", "committedDate": "2020-06-29T02:29:26Z", "message": "Merge branch 'master' into lnp-student-update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06493c7be54bf8c14dfa300a157b8661bae89091", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/06493c7be54bf8c14dfa300a157b8661bae89091", "committedDate": "2020-06-29T02:37:41Z", "message": "remove outdated comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d041583badf6a4f7ff25ed912969ab5c1d1e7aab", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/d041583badf6a4f7ff25ed912969ab5c1d1e7aab", "committedDate": "2020-06-29T02:38:43Z", "message": "Merge branch 'lnp-student-update' of https://github.com/Derek-Hardy/teammates into lnp-student-update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODY4Mzc3", "url": "https://github.com/TEAMMATES/teammates/pull/10242#pullrequestreview-438868377", "createdAt": "2020-06-29T03:44:36Z", "commit": {"oid": "d041583badf6a4f7ff25ed912969ab5c1d1e7aab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzo0NDozN1rOGqDzOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzo0NDozN1rOGqDzOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NTY0Mg==", "bodyText": "The lint errors in the CI are for the indentation in 293/4 & 299. You can try running ./gradlew lint locally to catch them :)", "url": "https://github.com/TEAMMATES/teammates/pull/10242#discussion_r446755642", "createdAt": "2020-06-29T03:44:37Z", "author": {"login": "madanalogy"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/StudentUpdateLNPTest.java", "diffHunk": "@@ -0,0 +1,331 @@\n+package teammates.e2e.cases.lnp;\n+\n+import java.io.IOException;\n+import java.time.Instant;\n+import java.time.ZoneId;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.jmeter.protocol.http.control.HeaderManager;\n+import org.apache.jorphan.collections.HashTree;\n+import org.apache.jorphan.collections.ListedHashTree;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.DataBundle;\n+import teammates.common.datatransfer.FeedbackParticipantType;\n+import teammates.common.datatransfer.InstructorPrivileges;\n+import teammates.common.datatransfer.attributes.AccountAttributes;\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.datatransfer.questions.FeedbackQuestionDetails;\n+import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;\n+import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;\n+import teammates.common.util.Const;\n+import teammates.common.util.JsonUtils;\n+import teammates.e2e.util.JMeterElements;\n+import teammates.e2e.util.LNPSpecification;\n+import teammates.e2e.util.LNPTestData;\n+import teammates.ui.webapi.request.StudentUpdateRequest;\n+\n+/**\n+* L&P Test Case for student update cascade API.\n+*/\n+public class StudentUpdateLNPTest extends BaseLNPTestCase {\n+    private static final int NUM_INSTRUCTORS = 1;\n+    private static final int RAMP_UP_PERIOD = NUM_INSTRUCTORS * 2;\n+\n+    private static final int NUMBER_OF_FEEDBACK_RESPONSES = 100;\n+\n+    private static final String INSTRUCTOR_NAME = \"LnPInstructor\";\n+    private static final String INSTRUCTOR_EMAIL = \"tmms.test@gmail.tmt\";\n+\n+    private static final String COURSE_ID = \"TestData.CS101\";\n+    private static final String COURSE_NAME = \"LnPCourse\";\n+    private static final String COURSE_TIME_ZONE = \"UTC\";\n+\n+    private static final String STUDENT_ID = \"LnPStudent.tmms\";\n+    private static final String STUDENT_NAME = \"LnPStudent\";\n+    private static final String STUDENT_EMAIL = \"studentEmail@gmail.tmt\";\n+    private static final String STUDENT_COMMENTS = \"This is test student comment\";\n+\n+    private static final String UPDATE_STUDENT_NAME = \"updateLnPStudent\";\n+    private static final String UPDATE_STUDENT_EMAIL = \"studentEmailUpdate@gmail.tmt\";\n+\n+    private static final String TEAM_NAME = \"Team 1\";\n+    private static final String GIVER_SECTION_NAME = \"Section 1\";\n+    private static final String RECEIVER_SECTION_NAME = \"Section 1\";\n+\n+    private static final String FEEDBACK_SESSION_NAME = \"Test Feedback Session\";\n+    private static final String FEEDBACK_RESPONSE_ID = \"ResponseForQ\";\n+\n+    private static final String QUESTION_ID = \"QuestionTest\";\n+    private static final String QUESTION_TEXT = \"Test Question\";\n+\n+    private static final double ERROR_RATE_LIMIT = 0.01;\n+    private static final double MEAN_RESP_TIME_LIMIT = 10;\n+\n+    @Override\n+    protected LNPTestData getTestData() {\n+        return new LNPTestData() {\n+            @Override\n+            protected Map<String, AccountAttributes> generateAccounts() {\n+                return new HashMap<>();\n+            }\n+\n+            @Override\n+            protected Map<String, CourseAttributes> generateCourses() {\n+                Map<String, CourseAttributes> courses = new HashMap<>();\n+\n+                courses.put(COURSE_NAME, CourseAttributes.builder(COURSE_ID)\n+                        .withName(COURSE_NAME)\n+                        .withTimezone(ZoneId.of(COURSE_TIME_ZONE))\n+                        .build());\n+\n+                return courses;\n+            }\n+\n+            @Override\n+            protected Map<String, InstructorAttributes> generateInstructors() {\n+                Map<String, InstructorAttributes> instructors = new HashMap<>();\n+\n+                instructors.put(INSTRUCTOR_NAME,\n+                        InstructorAttributes.builder(COURSE_ID, INSTRUCTOR_EMAIL)\n+                            .withGoogleId(INSTRUCTOR_NAME)\n+                            .withName(INSTRUCTOR_NAME)\n+                            .withRole(\"Co-owner\")\n+                            .withIsDisplayedToStudents(true)\n+                            .withDisplayedName(\"Co-owner\")\n+                            .withPrivileges(new InstructorPrivileges(\n+                                    Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER))\n+                            .build()\n+                );\n+\n+                return instructors;\n+            }\n+\n+            @Override\n+            protected Map<String, StudentAttributes> generateStudents() {\n+                Map<String, StudentAttributes> students = new LinkedHashMap<>();\n+                StudentAttributes studentAttribute;\n+\n+                studentAttribute = StudentAttributes.builder(COURSE_ID, STUDENT_EMAIL)\n+                        .withGoogleId(STUDENT_ID)\n+                        .withName(STUDENT_NAME)\n+                        .withComment(\"This student's name is \" + STUDENT_NAME)\n+                        .withSectionName(GIVER_SECTION_NAME)\n+                        .withTeamName(TEAM_NAME)\n+                        .build();\n+\n+                students.put(STUDENT_NAME, studentAttribute);\n+\n+                return students;\n+            }\n+\n+            @Override\n+            protected Map<String, FeedbackSessionAttributes> generateFeedbackSessions() {\n+                Map<String, FeedbackSessionAttributes> feedbackSessions = new LinkedHashMap<>();\n+\n+                FeedbackSessionAttributes session = FeedbackSessionAttributes\n+                        .builder(FEEDBACK_SESSION_NAME, COURSE_ID)\n+                        .withCreatorEmail(INSTRUCTOR_EMAIL)\n+                        .withStartTime(Instant.now())\n+                        .withEndTime(Instant.now().plusSeconds(500))\n+                        .withSessionVisibleFromTime(Instant.now())\n+                        .withResultsVisibleFromTime(Instant.now())\n+                        .build();\n+\n+                feedbackSessions.put(FEEDBACK_SESSION_NAME, session);\n+\n+                return feedbackSessions;\n+            }\n+\n+            @Override\n+            protected Map<String, FeedbackQuestionAttributes> generateFeedbackQuestions() {\n+                ArrayList<FeedbackParticipantType> showResponses = new ArrayList<>();\n+                showResponses.add(FeedbackParticipantType.RECEIVER);\n+                showResponses.add(FeedbackParticipantType.INSTRUCTORS);\n+\n+                ArrayList<FeedbackParticipantType> showGiverName = new ArrayList<>();\n+                showGiverName.add(FeedbackParticipantType.INSTRUCTORS);\n+\n+                ArrayList<FeedbackParticipantType> showRecepientName = new ArrayList<>();\n+                showRecepientName.add(FeedbackParticipantType.INSTRUCTORS);\n+\n+                Map<String, FeedbackQuestionAttributes> feedbackQuestions = new LinkedHashMap<>();\n+                FeedbackQuestionDetails details = new FeedbackTextQuestionDetails(QUESTION_TEXT);\n+\n+                feedbackQuestions.put(QUESTION_ID,\n+                        FeedbackQuestionAttributes.builder()\n+                                .withFeedbackSessionName(FEEDBACK_SESSION_NAME)\n+                                .withQuestionDescription(QUESTION_TEXT)\n+                                .withCourseId(COURSE_ID)\n+                                .withQuestionDetails(details)\n+                                .withQuestionNumber(1)\n+                                .withGiverType(FeedbackParticipantType.STUDENTS)\n+                                .withRecipientType(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF)\n+                                .withShowResponsesTo(showResponses)\n+                                .withShowGiverNameTo(showGiverName)\n+                                .withShowRecipientNameTo(showRecepientName)\n+                                .build()\n+                );\n+                return feedbackQuestions;\n+            }\n+\n+            @Override\n+            protected Map<String, FeedbackResponseAttributes> generateFeedbackResponses() {\n+                Map<String, FeedbackResponseAttributes> feedbackResponses = new HashMap<>();\n+\n+                for (int i = 1; i <= NUMBER_OF_FEEDBACK_RESPONSES; i++) {\n+                    String responseText = FEEDBACK_RESPONSE_ID + \" \" + i;\n+                    FeedbackTextResponseDetails details =\n+                            new FeedbackTextResponseDetails(responseText);\n+\n+                    feedbackResponses.put(responseText,\n+                            FeedbackResponseAttributes.builder(QUESTION_ID,\n+                                STUDENT_EMAIL,\n+                                STUDENT_EMAIL)\n+                                .withCourseId(COURSE_ID)\n+                                .withFeedbackSessionName(FEEDBACK_SESSION_NAME)\n+                                .withGiverSection(GIVER_SECTION_NAME)\n+                                .withRecipientSection(RECEIVER_SECTION_NAME)\n+                                .withResponseDetails(details)\n+                                .build());\n+                }\n+\n+                return feedbackResponses;\n+            }\n+\n+            @Override\n+            public List<String> generateCsvHeaders() {\n+                List<String> headers = new ArrayList<>();\n+\n+                headers.add(\"loginId\");\n+                headers.add(\"isAdmin\");\n+                headers.add(\"courseId\");\n+                headers.add(\"studentId\");\n+                headers.add(\"studentEmail\");\n+                headers.add(\"fsname\");\n+                headers.add(\"fqname\");\n+\n+                for (int i = 1; i <= NUMBER_OF_FEEDBACK_RESPONSES; i++) {\n+                    headers.add(\"frname_\" + i);\n+                }\n+\n+                headers.add(\"updateData\");\n+\n+                return headers;\n+            }\n+\n+            @Override\n+            public List<List<String>> generateCsvData() {\n+                DataBundle dataBundle = loadDataBundle(getJsonDataPath());\n+                List<List<String>> csvData = new ArrayList<>();\n+\n+                dataBundle.instructors.forEach((key, instructor) -> {\n+                    List<String> csvRow = new ArrayList<>();\n+\n+                    csvRow.add(instructor.googleId);\n+                    csvRow.add(\"no\");\n+                    csvRow.add(COURSE_ID);\n+                    csvRow.add(STUDENT_ID);\n+                    csvRow.add(STUDENT_EMAIL);\n+                    csvRow.add(FEEDBACK_SESSION_NAME);\n+                    csvRow.add(QUESTION_ID);\n+\n+                    for (int i = 1; i <= NUMBER_OF_FEEDBACK_RESPONSES; i++) {\n+                        csvRow.add(FEEDBACK_RESPONSE_ID + \" \" + i);\n+                    }\n+\n+                    StudentUpdateRequest studentUpdateRequest = new StudentUpdateRequest(\n+                            UPDATE_STUDENT_NAME,\n+                            UPDATE_STUDENT_EMAIL,\n+                            TEAM_NAME,\n+                            GIVER_SECTION_NAME,\n+                            STUDENT_COMMENTS,\n+                            false\n+                    );\n+\n+                    String updateData = sanitizeForCsv(JsonUtils.toJson(studentUpdateRequest));\n+                    csvRow.add(updateData);\n+\n+                    csvData.add(csvRow);\n+                });\n+\n+                return csvData;\n+            }\n+        };\n+    }\n+\n+    private Map<String, String> getRequestHeaders() {\n+        Map<String, String> headers = new HashMap<>();\n+\n+        headers.put(\"X-CSRF-TOKEN\", \"${csrfToken}\");\n+        headers.put(\"Content-Type\", \"application/json\");\n+\n+        return headers;\n+    }\n+\n+    private String getTestEndpoint() {\n+        return Const.ResourceURIs.URI_PREFIX + Const.ResourceURIs.STUDENT\n+            + \"?courseid=${courseId}&studentid=${studentId}&studentemail=${studentEmail}\";\n+    }\n+\n+    @Override\n+    protected ListedHashTree getLnpTestPlan() {\n+        ListedHashTree testPlan = new ListedHashTree(JMeterElements.testPlan());\n+        HashTree threadGroup = testPlan.add(\n+                JMeterElements.threadGroup(NUM_INSTRUCTORS, RAMP_UP_PERIOD, 1));\n+\n+        threadGroup.add(JMeterElements.csvDataSet(getPathToTestDataFile(getCsvConfigPath())));\n+        threadGroup.add(JMeterElements.cookieManager());\n+        threadGroup.add(JMeterElements.defaultSampler());\n+\n+        threadGroup.add(JMeterElements.onceOnlyController())\n+            .add(JMeterElements.loginSampler())\n+            .add(JMeterElements.csrfExtractor(\"csrfToken\"));\n+\n+        // Add HTTP sampler for test endpoint\n+        HeaderManager headerManager = JMeterElements.headerManager(getRequestHeaders());\n+        threadGroup.add(JMeterElements.httpSampler(getTestEndpoint(), PUT, \"${updateData}\"))\n+            .add(headerManager);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d041583badf6a4f7ff25ed912969ab5c1d1e7aab"}, "originalPosition": 299}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d72775f428d292b3175e880c66f6fdbb66a3187", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9d72775f428d292b3175e880c66f6fdbb66a3187", "committedDate": "2020-06-29T15:11:50Z", "message": "fix indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c80baf6a0e746f007d19f3f81739c9d140b224b", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9c80baf6a0e746f007d19f3f81739c9d140b224b", "committedDate": "2020-06-29T15:12:44Z", "message": "Merge branch 'master' into lnp-student-update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjMzMjk3", "url": "https://github.com/TEAMMATES/teammates/pull/10242#pullrequestreview-439633297", "createdAt": "2020-06-30T02:52:31Z", "commit": {"oid": "9c80baf6a0e746f007d19f3f81739c9d140b224b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjQyMTQ2", "url": "https://github.com/TEAMMATES/teammates/pull/10242#pullrequestreview-439642146", "createdAt": "2020-06-30T03:21:47Z", "commit": {"oid": "9c80baf6a0e746f007d19f3f81739c9d140b224b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMzoyMTo0N1rOGqqMmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMzoyMTo0N1rOGqqMmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM4NDcyOQ==", "bodyText": "I think update this field will also cause cascade update. Have u considered this?", "url": "https://github.com/TEAMMATES/teammates/pull/10242#discussion_r447384729", "createdAt": "2020-06-30T03:21:47Z", "author": {"login": "xpdavid"}, "path": "src/e2e/java/teammates/e2e/cases/lnp/StudentUpdateLNPTest.java", "diffHunk": "@@ -0,0 +1,331 @@\n+package teammates.e2e.cases.lnp;\n+\n+import java.io.IOException;\n+import java.time.Instant;\n+import java.time.ZoneId;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.jmeter.protocol.http.control.HeaderManager;\n+import org.apache.jorphan.collections.HashTree;\n+import org.apache.jorphan.collections.ListedHashTree;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.DataBundle;\n+import teammates.common.datatransfer.FeedbackParticipantType;\n+import teammates.common.datatransfer.InstructorPrivileges;\n+import teammates.common.datatransfer.attributes.AccountAttributes;\n+import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.datatransfer.questions.FeedbackQuestionDetails;\n+import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;\n+import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;\n+import teammates.common.util.Const;\n+import teammates.common.util.JsonUtils;\n+import teammates.e2e.util.JMeterElements;\n+import teammates.e2e.util.LNPSpecification;\n+import teammates.e2e.util.LNPTestData;\n+import teammates.ui.webapi.request.StudentUpdateRequest;\n+\n+/**\n+* L&P Test Case for student update cascade API.\n+*/\n+public class StudentUpdateLNPTest extends BaseLNPTestCase {\n+    private static final int NUM_INSTRUCTORS = 1;\n+    private static final int RAMP_UP_PERIOD = NUM_INSTRUCTORS * 2;\n+\n+    private static final int NUMBER_OF_FEEDBACK_RESPONSES = 100;\n+\n+    private static final String INSTRUCTOR_NAME = \"LnPInstructor\";\n+    private static final String INSTRUCTOR_EMAIL = \"tmms.test@gmail.tmt\";\n+\n+    private static final String COURSE_ID = \"TestData.CS101\";\n+    private static final String COURSE_NAME = \"LnPCourse\";\n+    private static final String COURSE_TIME_ZONE = \"UTC\";\n+\n+    private static final String STUDENT_ID = \"LnPStudent.tmms\";\n+    private static final String STUDENT_NAME = \"LnPStudent\";\n+    private static final String STUDENT_EMAIL = \"studentEmail@gmail.tmt\";\n+    private static final String STUDENT_COMMENTS = \"This is test student comment\";\n+\n+    private static final String UPDATE_STUDENT_NAME = \"updateLnPStudent\";\n+    private static final String UPDATE_STUDENT_EMAIL = \"studentEmailUpdate@gmail.tmt\";\n+\n+    private static final String TEAM_NAME = \"Team 1\";\n+    private static final String GIVER_SECTION_NAME = \"Section 1\";\n+    private static final String RECEIVER_SECTION_NAME = \"Section 1\";\n+\n+    private static final String FEEDBACK_SESSION_NAME = \"Test Feedback Session\";\n+    private static final String FEEDBACK_RESPONSE_ID = \"ResponseForQ\";\n+\n+    private static final String QUESTION_ID = \"QuestionTest\";\n+    private static final String QUESTION_TEXT = \"Test Question\";\n+\n+    private static final double ERROR_RATE_LIMIT = 0.01;\n+    private static final double MEAN_RESP_TIME_LIMIT = 10;\n+\n+    @Override\n+    protected LNPTestData getTestData() {\n+        return new LNPTestData() {\n+            @Override\n+            protected Map<String, AccountAttributes> generateAccounts() {\n+                return new HashMap<>();\n+            }\n+\n+            @Override\n+            protected Map<String, CourseAttributes> generateCourses() {\n+                Map<String, CourseAttributes> courses = new HashMap<>();\n+\n+                courses.put(COURSE_NAME, CourseAttributes.builder(COURSE_ID)\n+                        .withName(COURSE_NAME)\n+                        .withTimezone(ZoneId.of(COURSE_TIME_ZONE))\n+                        .build());\n+\n+                return courses;\n+            }\n+\n+            @Override\n+            protected Map<String, InstructorAttributes> generateInstructors() {\n+                Map<String, InstructorAttributes> instructors = new HashMap<>();\n+\n+                instructors.put(INSTRUCTOR_NAME,\n+                        InstructorAttributes.builder(COURSE_ID, INSTRUCTOR_EMAIL)\n+                            .withGoogleId(INSTRUCTOR_NAME)\n+                            .withName(INSTRUCTOR_NAME)\n+                            .withRole(\"Co-owner\")\n+                            .withIsDisplayedToStudents(true)\n+                            .withDisplayedName(\"Co-owner\")\n+                            .withPrivileges(new InstructorPrivileges(\n+                                    Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER))\n+                            .build()\n+                );\n+\n+                return instructors;\n+            }\n+\n+            @Override\n+            protected Map<String, StudentAttributes> generateStudents() {\n+                Map<String, StudentAttributes> students = new LinkedHashMap<>();\n+                StudentAttributes studentAttribute;\n+\n+                studentAttribute = StudentAttributes.builder(COURSE_ID, STUDENT_EMAIL)\n+                        .withGoogleId(STUDENT_ID)\n+                        .withName(STUDENT_NAME)\n+                        .withComment(\"This student's name is \" + STUDENT_NAME)\n+                        .withSectionName(GIVER_SECTION_NAME)\n+                        .withTeamName(TEAM_NAME)\n+                        .build();\n+\n+                students.put(STUDENT_NAME, studentAttribute);\n+\n+                return students;\n+            }\n+\n+            @Override\n+            protected Map<String, FeedbackSessionAttributes> generateFeedbackSessions() {\n+                Map<String, FeedbackSessionAttributes> feedbackSessions = new LinkedHashMap<>();\n+\n+                FeedbackSessionAttributes session = FeedbackSessionAttributes\n+                        .builder(FEEDBACK_SESSION_NAME, COURSE_ID)\n+                        .withCreatorEmail(INSTRUCTOR_EMAIL)\n+                        .withStartTime(Instant.now())\n+                        .withEndTime(Instant.now().plusSeconds(500))\n+                        .withSessionVisibleFromTime(Instant.now())\n+                        .withResultsVisibleFromTime(Instant.now())\n+                        .build();\n+\n+                feedbackSessions.put(FEEDBACK_SESSION_NAME, session);\n+\n+                return feedbackSessions;\n+            }\n+\n+            @Override\n+            protected Map<String, FeedbackQuestionAttributes> generateFeedbackQuestions() {\n+                ArrayList<FeedbackParticipantType> showResponses = new ArrayList<>();\n+                showResponses.add(FeedbackParticipantType.RECEIVER);\n+                showResponses.add(FeedbackParticipantType.INSTRUCTORS);\n+\n+                ArrayList<FeedbackParticipantType> showGiverName = new ArrayList<>();\n+                showGiverName.add(FeedbackParticipantType.INSTRUCTORS);\n+\n+                ArrayList<FeedbackParticipantType> showRecepientName = new ArrayList<>();\n+                showRecepientName.add(FeedbackParticipantType.INSTRUCTORS);\n+\n+                Map<String, FeedbackQuestionAttributes> feedbackQuestions = new LinkedHashMap<>();\n+                FeedbackQuestionDetails details = new FeedbackTextQuestionDetails(QUESTION_TEXT);\n+\n+                feedbackQuestions.put(QUESTION_ID,\n+                        FeedbackQuestionAttributes.builder()\n+                                .withFeedbackSessionName(FEEDBACK_SESSION_NAME)\n+                                .withQuestionDescription(QUESTION_TEXT)\n+                                .withCourseId(COURSE_ID)\n+                                .withQuestionDetails(details)\n+                                .withQuestionNumber(1)\n+                                .withGiverType(FeedbackParticipantType.STUDENTS)\n+                                .withRecipientType(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF)\n+                                .withShowResponsesTo(showResponses)\n+                                .withShowGiverNameTo(showGiverName)\n+                                .withShowRecipientNameTo(showRecepientName)\n+                                .build()\n+                );\n+                return feedbackQuestions;\n+            }\n+\n+            @Override\n+            protected Map<String, FeedbackResponseAttributes> generateFeedbackResponses() {\n+                Map<String, FeedbackResponseAttributes> feedbackResponses = new HashMap<>();\n+\n+                for (int i = 1; i <= NUMBER_OF_FEEDBACK_RESPONSES; i++) {\n+                    String responseText = FEEDBACK_RESPONSE_ID + \" \" + i;\n+                    FeedbackTextResponseDetails details =\n+                            new FeedbackTextResponseDetails(responseText);\n+\n+                    feedbackResponses.put(responseText,\n+                            FeedbackResponseAttributes.builder(QUESTION_ID,\n+                                STUDENT_EMAIL,\n+                                STUDENT_EMAIL)\n+                                .withCourseId(COURSE_ID)\n+                                .withFeedbackSessionName(FEEDBACK_SESSION_NAME)\n+                                .withGiverSection(GIVER_SECTION_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c80baf6a0e746f007d19f3f81739c9d140b224b"}, "originalPosition": 198}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c129ce66143afcff97af3e5f3f91e8f06c18a802", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/c129ce66143afcff97af3e5f3f91e8f06c18a802", "committedDate": "2020-06-30T06:58:38Z", "message": "update coding style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b0be98ee96d8cb64afbf74d203baa1583397d63", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/6b0be98ee96d8cb64afbf74d203baa1583397d63", "committedDate": "2020-06-30T06:59:15Z", "message": "Merge branch 'lnp-student-update' of https://github.com/Derek-Hardy/teammates into lnp-student-update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12c3938af6cb84475f609a778729a862f89413ef", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/12c3938af6cb84475f609a778729a862f89413ef", "committedDate": "2020-06-30T12:48:26Z", "message": "separate student email & section update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "864cb2b86e02c1735dbf03bb01a95a64f072d931", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/864cb2b86e02c1735dbf03bb01a95a64f072d931", "committedDate": "2020-07-01T08:03:11Z", "message": "Merge branch 'master' into lnp-student-update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "835fadc9d7cd6617f061d655dd3d563d8b327fbf", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/835fadc9d7cd6617f061d655dd3d563d8b327fbf", "committedDate": "2020-07-02T02:01:00Z", "message": "fixed wrong question id in FeedbackResponseAttributes builder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a945e71b1912b45f0e1c7a76fdd2140bd4f98026", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/a945e71b1912b45f0e1c7a76fdd2140bd4f98026", "committedDate": "2020-07-02T02:01:44Z", "message": "Merge branch 'lnp-student-update' of https://github.com/Derek-Hardy/teammates into lnp-student-update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a1dd2cc6a82a4955907fabcddc728da9e6fbf66", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/7a1dd2cc6a82a4955907fabcddc728da9e6fbf66", "committedDate": "2020-07-02T02:05:32Z", "message": "correct update to wrong files & delete outdated file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9100b3c26cab7f9da5b1d6024ff0adb4109ed994", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/9100b3c26cab7f9da5b1d6024ff0adb4109ed994", "committedDate": "2020-07-02T02:13:08Z", "message": "add update student by team LNP test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad402c276cc19b14af81618f1847d9e89ef13129", "author": {"user": {"login": "Derek-Hardy", "name": "Derek-Hardy"}}, "url": "https://github.com/TEAMMATES/teammates/commit/ad402c276cc19b14af81618f1847d9e89ef13129", "committedDate": "2020-07-02T02:18:01Z", "message": "update test class doc comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDg3OTIz", "url": "https://github.com/TEAMMATES/teammates/pull/10242#pullrequestreview-442087923", "createdAt": "2020-07-03T00:46:22Z", "commit": {"oid": "ad402c276cc19b14af81618f1847d9e89ef13129"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "342114db4ebb31e022daa8bd3a4b50963fe52b66", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/TEAMMATES/teammates/commit/342114db4ebb31e022daa8bd3a4b50963fe52b66", "committedDate": "2020-07-03T00:49:15Z", "message": "Merge branch 'master' into lnp-student-update"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4370, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}