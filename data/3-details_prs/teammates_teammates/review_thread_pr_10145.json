{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NzU1MTk4", "number": 10145, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODo0MDoyNlrOEBSdzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODozOToxMFrOEBeLcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Nzg2NTcyOnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-responses/gqr-rqg-view-responses/gqr-rqg-view-responses.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODo0MDoyNlrOGdDBbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODo0MDoyNlrOGdDBbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzExMTQwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      const shouldDisplayBasedOnSection: boolean\n          \n          \n            \n                        = this.feedbackResponsesService.isFeedbackResponsesDisplayedOnSection(this.section,\n          \n          \n            \n                            this.sectionType, response);\n          \n          \n            \n                      const shouldDisplayBasedOnSection: boolean = this.feedbackResponsesService\n          \n          \n            \n                        .isFeedbackResponsesDisplayedOnSection(this.section, this.sectionType, response);\n          \n      \n    \n    \n  \n\nMight be worthwhile having this as two lines instead of three, feels cleaner in my opinion", "url": "https://github.com/TEAMMATES/teammates/pull/10145#discussion_r433111405", "createdAt": "2020-06-01T08:40:26Z", "author": {"login": "madanalogy"}, "path": "src/web/app/components/question-responses/gqr-rqg-view-responses/gqr-rqg-view-responses.component.ts", "diffHunk": "@@ -129,32 +130,17 @@ export class GqrRqgViewResponsesComponent extends ResponsesInstructorCommentsBas\n             return false;\n           }\n \n-          let shouldDisplayBasedOnSection: boolean = true;\n-          if (this.section) {\n-            switch (this.sectionType) {\n-              case InstructorSessionResultSectionType.EITHER:\n-                shouldDisplayBasedOnSection =\n-                    response.giverSection === this.section || response.recipientSection === this.section;\n-                break;\n-              case InstructorSessionResultSectionType.GIVER:\n-                shouldDisplayBasedOnSection = response.giverSection === this.section;\n-                break;\n-              case InstructorSessionResultSectionType.EVALUEE:\n-                shouldDisplayBasedOnSection = response.recipientSection === this.section;\n-                break;\n-              case InstructorSessionResultSectionType.BOTH:\n-                shouldDisplayBasedOnSection =\n-                    response.giverSection === this.section && response.recipientSection === this.section;\n-                break;\n-              default:\n-            }\n-          }\n+          const shouldDisplayBasedOnSection: boolean\n+            = this.feedbackResponsesService.isFeedbackResponsesDisplayedOnSection(this.section,\n+                this.sectionType, response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5008ec3d1e884a20b7d5d4145d7456ce99d33e02"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Nzg2ODE0OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-responses/grq-rgq-view-responses/grq-rgq-view-responses.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODo0MToxMFrOGdDCyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODo0MToxMFrOGdDCyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzExMTc1NA==", "bodyText": "Similarly here", "url": "https://github.com/TEAMMATES/teammates/pull/10145#discussion_r433111754", "createdAt": "2020-06-01T08:41:10Z", "author": {"login": "madanalogy"}, "path": "src/web/app/components/question-responses/grq-rgq-view-responses/grq-rgq-view-responses.component.ts", "diffHunk": "@@ -129,32 +130,17 @@ export class GrqRgqViewResponsesComponent extends ResponsesInstructorCommentsBas\n             return false;\n           }\n \n-          let shouldDisplayBasedOnSection: boolean = true;\n-          if (this.section) {\n-            switch (this.sectionType) {\n-              case InstructorSessionResultSectionType.EITHER:\n-                shouldDisplayBasedOnSection =\n-                    response.giverSection === this.section || response.recipientSection === this.section;\n-                break;\n-              case InstructorSessionResultSectionType.GIVER:\n-                shouldDisplayBasedOnSection = response.giverSection === this.section;\n-                break;\n-              case InstructorSessionResultSectionType.EVALUEE:\n-                shouldDisplayBasedOnSection = response.recipientSection === this.section;\n-                break;\n-              case InstructorSessionResultSectionType.BOTH:\n-                shouldDisplayBasedOnSection =\n-                    response.giverSection === this.section && response.recipientSection === this.section;\n-                break;\n-              default:\n-            }\n-          }\n+          const shouldDisplayBasedOnSection: boolean\n+            = this.feedbackResponsesService.isFeedbackResponsesDisplayedOnSection(this.section,\n+                this.sectionType, response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5008ec3d1e884a20b7d5d4145d7456ce99d33e02"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Nzg2OTA2OnYy", "diffSide": "RIGHT", "path": "src/web/app/components/question-responses/per-question-view-responses/per-question-view-responses.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODo0MToyOVrOGdDDUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODo0MToyOVrOGdDDUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzExMTg5MQ==", "bodyText": "Here as well", "url": "https://github.com/TEAMMATES/teammates/pull/10145#discussion_r433111891", "createdAt": "2020-06-01T08:41:29Z", "author": {"login": "madanalogy"}, "path": "src/web/app/components/question-responses/per-question-view-responses/per-question-view-responses.component.ts", "diffHunk": "@@ -80,29 +82,15 @@ export class PerQuestionViewResponsesComponent extends ResponsesInstructorCommen\n       if (response.giverEmail) {\n         this.userToEmail[response.giver] = response.giverEmail;\n       }\n-      if (this.section) {\n-        let shouldDisplayBasedOnSection: boolean = true;\n-        switch (this.sectionType) {\n-          case InstructorSessionResultSectionType.EITHER:\n-            shouldDisplayBasedOnSection =\n-                response.giverSection === this.section || response.recipientSection === this.section;\n-            break;\n-          case InstructorSessionResultSectionType.GIVER:\n-            shouldDisplayBasedOnSection = response.giverSection === this.section;\n-            break;\n-          case InstructorSessionResultSectionType.EVALUEE:\n-            shouldDisplayBasedOnSection = response.recipientSection === this.section;\n-            break;\n-          case InstructorSessionResultSectionType.BOTH:\n-            shouldDisplayBasedOnSection =\n-                response.giverSection === this.section && response.recipientSection === this.section;\n-            break;\n-          default:\n-        }\n-        if (!shouldDisplayBasedOnSection) {\n-          continue;\n-        }\n+\n+      const shouldDisplayBasedOnSection: boolean\n+        = this.feedbackResponsesService.isFeedbackResponsesDisplayedOnSection(this.section,\n+            this.sectionType, response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5008ec3d1e884a20b7d5d4145d7456ce99d33e02"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Nzg3NTY3OnYy", "diffSide": "RIGHT", "path": "src/web/services/feedback-responses.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODo0MzozOVrOGdDHHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo0MzowOFrOGdNFdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzExMjg2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    default:\n          \n      \n    \n    \n  \n\nCould do without the empty default imo, clean the code up a little since you're doing the refactoring haha", "url": "https://github.com/TEAMMATES/teammates/pull/10145#discussion_r433112861", "createdAt": "2020-06-01T08:43:39Z", "author": {"login": "madanalogy"}, "path": "src/web/services/feedback-responses.service.ts", "diffHunk": "@@ -122,6 +126,35 @@ export class FeedbackResponsesService {\n     }\n   }\n \n+  /**\n+   * Determines whether responses should be displayed based on the selected section.\n+   */\n+  isFeedbackResponsesDisplayedOnSection(section: string, sectionType: InstructorSessionResultSectionType,\n+      response: ResponseOutput): boolean {\n+\n+    let isDisplayed: boolean = true;\n+\n+    if (section) {\n+      switch (sectionType) {\n+        case InstructorSessionResultSectionType.EITHER:\n+          isDisplayed = response.giverSection === section || response.recipientSection === section;\n+          break;\n+        case InstructorSessionResultSectionType.GIVER:\n+          isDisplayed = response.giverSection === section;\n+          break;\n+        case InstructorSessionResultSectionType.EVALUEE:\n+          isDisplayed = response.recipientSection === section;\n+          break;\n+        case InstructorSessionResultSectionType.BOTH:\n+          isDisplayed = response.giverSection === section && response.recipientSection === section;\n+          break;\n+        default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5008ec3d1e884a20b7d5d4145d7456ce99d33e02"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3NjI3Nw==", "bodyText": "There are lint restrictions that prevent from doing so.\nERROR: TEAMMATES/teammates/src/web/services/feedback-responses.service.ts:138:7 - Switch statement should include a 'default' case\nERROR: TEAMMATES/teammates/src/web/services/feedback-responses.service.ts:150:11 - Final clause in 'switch' statement should not end with 'break;'.", "url": "https://github.com/TEAMMATES/teammates/pull/10145#discussion_r433276277", "createdAt": "2020-06-01T14:43:08Z", "author": {"login": "Derek-Hardy"}, "path": "src/web/services/feedback-responses.service.ts", "diffHunk": "@@ -122,6 +126,35 @@ export class FeedbackResponsesService {\n     }\n   }\n \n+  /**\n+   * Determines whether responses should be displayed based on the selected section.\n+   */\n+  isFeedbackResponsesDisplayedOnSection(section: string, sectionType: InstructorSessionResultSectionType,\n+      response: ResponseOutput): boolean {\n+\n+    let isDisplayed: boolean = true;\n+\n+    if (section) {\n+      switch (sectionType) {\n+        case InstructorSessionResultSectionType.EITHER:\n+          isDisplayed = response.giverSection === section || response.recipientSection === section;\n+          break;\n+        case InstructorSessionResultSectionType.GIVER:\n+          isDisplayed = response.giverSection === section;\n+          break;\n+        case InstructorSessionResultSectionType.EVALUEE:\n+          isDisplayed = response.recipientSection === section;\n+          break;\n+        case InstructorSessionResultSectionType.BOTH:\n+          isDisplayed = response.giverSection === section && response.recipientSection === section;\n+          break;\n+        default:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzExMjg2MQ=="}, "originalCommit": {"oid": "5008ec3d1e884a20b7d5d4145d7456ce99d33e02"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTc4NDgxOnYy", "diffSide": "RIGHT", "path": "src/web/services/feedback-responses.service.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODozOToxMFrOGdVrtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODozOToxMFrOGdVrtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQxNzE0MQ==", "bodyText": "A more logic way of organizing parameters would be to put response as the first argument.", "url": "https://github.com/TEAMMATES/teammates/pull/10145#discussion_r433417141", "createdAt": "2020-06-01T18:39:10Z", "author": {"login": "xpdavid"}, "path": "src/web/services/feedback-responses.service.ts", "diffHunk": "@@ -122,6 +126,35 @@ export class FeedbackResponsesService {\n     }\n   }\n \n+  /**\n+   * Determines whether responses should be displayed based on the selected section.\n+   */\n+  isFeedbackResponsesDisplayedOnSection(section: string, sectionType: InstructorSessionResultSectionType,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f1609102eb654c67f5164d46016a249612007b4"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3752, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}