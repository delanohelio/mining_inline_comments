{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NDc1OTg1", "number": 4660, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0Nzo1OFrODcLt0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0OTowNVrODcLvDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODc4NjczOnYy", "diffSide": "RIGHT", "path": "api/cas-server-core-api-configuration-model/src/main/java/org/apereo/cas/configuration/model/support/hazelcast/HazelcastClusterProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0Nzo1OFrOFkGKBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDowODoyMlrOFkGsrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MzkyNg==", "bodyText": "Outbound.\nAlso, please document the property to explain meaning and intention both here, and possibly in the docs. (Though in the docs, you can just reference the setting; Javadoc is fine)", "url": "https://github.com/apereo/cas/pull/4660#discussion_r373393926", "createdAt": "2020-01-31T09:47:58Z", "author": {"login": "mmoayyed"}, "path": "api/cas-server-core-api-configuration-model/src/main/java/org/apereo/cas/configuration/model/support/hazelcast/HazelcastClusterProperties.java", "diffHunk": "@@ -90,6 +90,11 @@\n     @RequiredProperty\n     private int port = 5701;\n \n+    /**\n+     * The outbount ports for the Hazelcast configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1a678b845cac001be75ddaa9c77fc8f1c7e5b65"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMjc5OQ==", "bodyText": "you're right", "url": "https://github.com/apereo/cas/pull/4660#discussion_r373402799", "createdAt": "2020-01-31T10:08:22Z", "author": {"login": "leleuj"}, "path": "api/cas-server-core-api-configuration-model/src/main/java/org/apereo/cas/configuration/model/support/hazelcast/HazelcastClusterProperties.java", "diffHunk": "@@ -90,6 +90,11 @@\n     @RequiredProperty\n     private int port = 5701;\n \n+    /**\n+     * The outbount ports for the Hazelcast configuration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MzkyNg=="}, "originalCommit": {"oid": "f1a678b845cac001be75ddaa9c77fc8f1c7e5b65"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODc4ODI1OnYy", "diffSide": "RIGHT", "path": "api/cas-server-core-api-configuration-model/src/main/java/org/apereo/cas/configuration/model/support/hazelcast/HazelcastClusterProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0ODozMFrOFkGK_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDowODoyNVrOFkGsyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5NDE3Mg==", "bodyText": "Assign to an empty array list.", "url": "https://github.com/apereo/cas/pull/4660#discussion_r373394172", "createdAt": "2020-01-31T09:48:30Z", "author": {"login": "mmoayyed"}, "path": "api/cas-server-core-api-configuration-model/src/main/java/org/apereo/cas/configuration/model/support/hazelcast/HazelcastClusterProperties.java", "diffHunk": "@@ -90,6 +90,11 @@\n     @RequiredProperty\n     private int port = 5701;\n \n+    /**\n+     * The outbount ports for the Hazelcast configuration.\n+     */\n+    private List<String> outboundPorts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1a678b845cac001be75ddaa9c77fc8f1c7e5b65"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMjgyNw==", "bodyText": "yes", "url": "https://github.com/apereo/cas/pull/4660#discussion_r373402827", "createdAt": "2020-01-31T10:08:25Z", "author": {"login": "leleuj"}, "path": "api/cas-server-core-api-configuration-model/src/main/java/org/apereo/cas/configuration/model/support/hazelcast/HazelcastClusterProperties.java", "diffHunk": "@@ -90,6 +90,11 @@\n     @RequiredProperty\n     private int port = 5701;\n \n+    /**\n+     * The outbount ports for the Hazelcast configuration.\n+     */\n+    private List<String> outboundPorts;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5NDE3Mg=="}, "originalCommit": {"oid": "f1a678b845cac001be75ddaa9c77fc8f1c7e5b65"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODc4ODgyOnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-hazelcast-core/src/main/java/org/apereo/cas/hz/HazelcastConfigurationFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0ODo0NFrOFkGLXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDowODozMFrOFkGs7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5NDI2OQ==", "bodyText": "Conditional should unnecessary with an empty list above.", "url": "https://github.com/apereo/cas/pull/4660#discussion_r373394269", "createdAt": "2020-01-31T09:48:44Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-hazelcast-core/src/main/java/org/apereo/cas/hz/HazelcastConfigurationFactory.java", "diffHunk": "@@ -126,6 +126,12 @@ public static Config build(final BaseHazelcastProperties hz) {\n             networkConfig.setPublicAddress(cluster.getPublicAddress());\n         }\n \n+        if (!org.springframework.util.CollectionUtils.isEmpty(cluster.getOutboundPorts())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1a678b845cac001be75ddaa9c77fc8f1c7e5b65"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMjg2MQ==", "bodyText": "yes", "url": "https://github.com/apereo/cas/pull/4660#discussion_r373402861", "createdAt": "2020-01-31T10:08:30Z", "author": {"login": "leleuj"}, "path": "support/cas-server-support-hazelcast-core/src/main/java/org/apereo/cas/hz/HazelcastConfigurationFactory.java", "diffHunk": "@@ -126,6 +126,12 @@ public static Config build(final BaseHazelcastProperties hz) {\n             networkConfig.setPublicAddress(cluster.getPublicAddress());\n         }\n \n+        if (!org.springframework.util.CollectionUtils.isEmpty(cluster.getOutboundPorts())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5NDI2OQ=="}, "originalCommit": {"oid": "f1a678b845cac001be75ddaa9c77fc8f1c7e5b65"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODc4OTg4OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-hazelcast-core/src/main/java/org/apereo/cas/hz/HazelcastConfigurationFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0OTowNVrOFkGMAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDowODozNlrOFkGtHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5NDQzMw==", "bodyText": "I suspect you can also use a lambda syntax here instead of the for-loop.", "url": "https://github.com/apereo/cas/pull/4660#discussion_r373394433", "createdAt": "2020-01-31T09:49:05Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-hazelcast-core/src/main/java/org/apereo/cas/hz/HazelcastConfigurationFactory.java", "diffHunk": "@@ -126,6 +126,12 @@ public static Config build(final BaseHazelcastProperties hz) {\n             networkConfig.setPublicAddress(cluster.getPublicAddress());\n         }\n \n+        if (!org.springframework.util.CollectionUtils.isEmpty(cluster.getOutboundPorts())) {\n+            for (val port : cluster.getOutboundPorts()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1a678b845cac001be75ddaa9c77fc8f1c7e5b65"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMjkwOQ==", "bodyText": "and yes", "url": "https://github.com/apereo/cas/pull/4660#discussion_r373402909", "createdAt": "2020-01-31T10:08:36Z", "author": {"login": "leleuj"}, "path": "support/cas-server-support-hazelcast-core/src/main/java/org/apereo/cas/hz/HazelcastConfigurationFactory.java", "diffHunk": "@@ -126,6 +126,12 @@ public static Config build(final BaseHazelcastProperties hz) {\n             networkConfig.setPublicAddress(cluster.getPublicAddress());\n         }\n \n+        if (!org.springframework.util.CollectionUtils.isEmpty(cluster.getOutboundPorts())) {\n+            for (val port : cluster.getOutboundPorts()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5NDQzMw=="}, "originalCommit": {"oid": "f1a678b845cac001be75ddaa9c77fc8f1c7e5b65"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4098, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}