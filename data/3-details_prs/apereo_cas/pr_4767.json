{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzA3ODAx", "number": 4767, "title": "OIDC SLO support", "bodyText": "This pull request is the implementation of the OIDC logout support based on: https://openid.net/specs/openid-connect-backchannel-1_0.html and https://openid.net/specs/openid-connect-frontchannel-1_0.html\nBack and front channel logouts are implemented with the use of the session id (which is the SHA of the TGT id).\nA new OidcSingleLogoutMessageCreator and a new OidcSingleLogoutServiceMessageHandler  are used for that.\nThe DefaultSingleLogoutServiceMessageHandler is updated to only focused on CAS protocol services. SAML protocol services are already handled by a specific SAML message handler. OIDC protocol services are handled by the new OIDC message handler.\nOAuth protocol services are no longer handled by a service handler, they are ignored for logout. This could be discussed and we could maybe consider them as OIDC services.\nThe discovery settings have been updated as well.\nThis has been fully tested with the latest pac4j v4.0.0-SNAPSHOT which now supports OIDC logout (and the spring-webmvc-pac4j v4.0.0-SNAPSHOT implementation): https://github.com/pac4j/spring-webmvc-pac4j-boot-demo/tree/cas_oidc_slo.", "createdAt": "2020-03-23T10:51:20Z", "url": "https://github.com/apereo/cas/pull/4767", "merged": true, "mergeCommit": {"oid": "6d07a8dadf6644e94cd3c9fed2a3f6cd1db20d8b"}, "closed": true, "closedAt": "2020-03-31T04:26:39Z", "author": {"login": "leleuj"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQb6GVAH2gAyMzkyMzA3ODAxOjMzMWVlYTMyZjRjNDQ0NTAyMWEyOWQwMWI5NGYxNWVhZGMyYWI3YWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcS5ULigH2gAyMzkyMzA3ODAxOjFhYzQwMjE1NGRhNjQ4MzUzODI1OGJiYjc2Y2JiNzVmNGM5MzYzOTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/331eea32f4c4445021a29d01b94f15eadc2ab7ac", "committedDate": "2020-03-23T10:39:46Z", "message": "OIDC SLO support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDUyNDAw", "url": "https://github.com/apereo/cas/pull/4767#pullrequestreview-380052400", "createdAt": "2020-03-24T07:27:22Z", "commit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNzoyMlrOF6jp5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzozMTo1MlrOF6jxKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NTg5Mw==", "bodyText": "This should be unnecessary. SingleLogoutServiceMessageHandler are or can be ordered. The default runs last. So if all other handlers fail to support the service, this one should run by default automatically, and there is no need to check for service types as such, because other handlers should be given more priority with a lower order value.\nAlso, comparing types by String will never scale and will be unmaintainable. (This is already missing a service type, for example)", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396945893", "createdAt": "2020-03-24T07:27:22Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-logout-api/src/main/java/org/apereo/cas/logout/slo/DefaultSingleLogoutServiceMessageHandler.java", "diffHunk": "@@ -23,4 +27,21 @@ public DefaultSingleLogoutServiceMessageHandler(final HttpClient httpClient,\n         super(httpClient, logoutMessageBuilder, servicesManager, singleLogoutServiceLogoutUrlBuilder,\n             asynchronous, authenticationRequestServiceSelectionStrategies);\n     }\n+\n+    /**\n+     * The default handler only applies on the CAS protocol services.\n+     * For the SAML and OIDC protocols, specific handlers exist.\n+     * For the OAuth protocol, no logout process is handled.\n+     *\n+     * The check of the service type is made by the class name not to add support-* dependencies.\n+     *\n+     * @param singleLogoutService the single logout service\n+     * @param registeredService   the registered service\n+     * @return whether the handler applies\n+     */\n+    @Override\n+    protected boolean supportsInternal(final WebApplicationService singleLogoutService, final RegisteredService registeredService) {\n+        val name = registeredService.getClass().getSimpleName();\n+        return !\"SamlRegisteredService\".equals(name) && !\"OidcRegisteredService\".equals(name) && !\"OAuthRegisteredService\".equals(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NjIyMg==", "bodyText": "All such settings should be controllable via CAS settings, in scenarios where a deployment would want to forcefully turn off logout.\nFunctionality related to these settings should also turn itself on/off based on the value.", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396946222", "createdAt": "2020-03-24T07:28:04Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/discovery/OidcServerDiscoverySettings.java", "diffHunk": "@@ -119,4 +119,24 @@ public String getIntrospectionEndpoint() {\n     public String getRevocationEndpoint() {\n         return this.serverPrefix.concat('/' + OidcConstants.BASE_OIDC_URL + '/' + OidcConstants.REVOCATION_URL);\n     }\n+\n+    @JsonProperty(\"backchannel_logout_supported\")\n+    public boolean getBackchannelLogoutSupported() {\n+        return true;\n+    }\n+\n+    @JsonProperty(\"backchannel_logout_session_supported\")\n+    public boolean getBackchannelLogoutSessionSupported() {\n+        return true;\n+    }\n+\n+    @JsonProperty(\"frontchannel_logout_supported\")\n+    public boolean getFrontchannelLogoutSupported() {\n+        return true;\n+    }\n+\n+    @JsonProperty(\"frontchannel_logout_session_supported\")\n+    public boolean getFrontchannelLogoutSessionSupported() {\n+        return true;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NjQxMQ==", "bodyText": "Is there a need for an exp claim, and do we also need to account for time skew?", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396946411", "createdAt": "2020-03-24T07:28:33Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/slo/OidcSingleLogoutMessageCreator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package org.apereo.cas.oidc.slo;\n+\n+import org.apereo.cas.logout.slo.SingleLogoutMessage;\n+import org.apereo.cas.logout.slo.SingleLogoutMessageCreator;\n+import org.apereo.cas.logout.slo.SingleLogoutRequest;\n+import org.apereo.cas.oidc.OidcConstants;\n+import org.apereo.cas.services.OidcRegisteredService;\n+import org.apereo.cas.services.RegisteredServiceLogoutType;\n+import org.apereo.cas.support.oauth.web.endpoints.OAuth20ConfigurationContext;\n+import org.apereo.cas.util.DigestUtils;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import lombok.val;\n+import org.apache.commons.lang3.StringUtils;\n+import org.jose4j.jwt.JwtClaims;\n+\n+import java.util.HashMap;\n+import java.util.UUID;\n+\n+/**\n+ * The message creator for the OIDC protocol.\n+ *\n+ * @author Jerome LELEU\n+ * @since 6.2.0\n+ */\n+@Slf4j\n+@RequiredArgsConstructor\n+public class OidcSingleLogoutMessageCreator implements SingleLogoutMessageCreator {\n+\n+    private final OAuth20ConfigurationContext configurationContext;\n+\n+    @Override\n+    public SingleLogoutMessage create(final SingleLogoutRequest request) {\n+        val builder = SingleLogoutMessage.builder();\n+        if (request.getLogoutType() == RegisteredServiceLogoutType.BACK_CHANNEL) {\n+            LOGGER.trace(\"Building logout token for [{}]\", request.getRegisteredService());\n+\n+            val claims = buildJwtClaims(request);\n+            val logoutToken = configurationContext.getIdTokenSigningAndEncryptionService()\n+                    .encode((OidcRegisteredService) request.getRegisteredService(), claims);\n+            return builder.payload(logoutToken).build();\n+        }\n+        return builder.payload(StringUtils.EMPTY).build();\n+    }\n+\n+    protected JwtClaims buildJwtClaims(final SingleLogoutRequest request) {\n+\n+        val oidc = configurationContext.getCasProperties().getAuthn().getOidc();\n+\n+        val claims = new JwtClaims();\n+\n+        claims.setIssuer(oidc.getIssuer());\n+        claims.setSubject(request.getTicketGrantingTicket().getAuthentication().getPrincipal().getId());\n+        claims.setAudience(((OidcRegisteredService) request.getRegisteredService()).getClientId());\n+        claims.setIssuedAtToNow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NjUzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    events.put(\"http://schemas.openid.net/event/backchannel-logout\", new HashMap());\n          \n          \n            \n                    events.put(\"http://schemas.openid.net/event/backchannel-logout\", new HashMap<>());", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396946532", "createdAt": "2020-03-24T07:28:49Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/slo/OidcSingleLogoutMessageCreator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package org.apereo.cas.oidc.slo;\n+\n+import org.apereo.cas.logout.slo.SingleLogoutMessage;\n+import org.apereo.cas.logout.slo.SingleLogoutMessageCreator;\n+import org.apereo.cas.logout.slo.SingleLogoutRequest;\n+import org.apereo.cas.oidc.OidcConstants;\n+import org.apereo.cas.services.OidcRegisteredService;\n+import org.apereo.cas.services.RegisteredServiceLogoutType;\n+import org.apereo.cas.support.oauth.web.endpoints.OAuth20ConfigurationContext;\n+import org.apereo.cas.util.DigestUtils;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import lombok.val;\n+import org.apache.commons.lang3.StringUtils;\n+import org.jose4j.jwt.JwtClaims;\n+\n+import java.util.HashMap;\n+import java.util.UUID;\n+\n+/**\n+ * The message creator for the OIDC protocol.\n+ *\n+ * @author Jerome LELEU\n+ * @since 6.2.0\n+ */\n+@Slf4j\n+@RequiredArgsConstructor\n+public class OidcSingleLogoutMessageCreator implements SingleLogoutMessageCreator {\n+\n+    private final OAuth20ConfigurationContext configurationContext;\n+\n+    @Override\n+    public SingleLogoutMessage create(final SingleLogoutRequest request) {\n+        val builder = SingleLogoutMessage.builder();\n+        if (request.getLogoutType() == RegisteredServiceLogoutType.BACK_CHANNEL) {\n+            LOGGER.trace(\"Building logout token for [{}]\", request.getRegisteredService());\n+\n+            val claims = buildJwtClaims(request);\n+            val logoutToken = configurationContext.getIdTokenSigningAndEncryptionService()\n+                    .encode((OidcRegisteredService) request.getRegisteredService(), claims);\n+            return builder.payload(logoutToken).build();\n+        }\n+        return builder.payload(StringUtils.EMPTY).build();\n+    }\n+\n+    protected JwtClaims buildJwtClaims(final SingleLogoutRequest request) {\n+\n+        val oidc = configurationContext.getCasProperties().getAuthn().getOidc();\n+\n+        val claims = new JwtClaims();\n+\n+        claims.setIssuer(oidc.getIssuer());\n+        claims.setSubject(request.getTicketGrantingTicket().getAuthentication().getPrincipal().getId());\n+        claims.setAudience(((OidcRegisteredService) request.getRegisteredService()).getClientId());\n+        claims.setIssuedAtToNow();\n+        claims.setJwtId(UUID.randomUUID().toString());\n+        val events = new HashMap<String, Object>();\n+        events.put(\"http://schemas.openid.net/event/backchannel-logout\", new HashMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NjY2NA==", "bodyText": "Please add tests.", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396946664", "createdAt": "2020-03-24T07:29:11Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/slo/OidcSingleLogoutMessageCreator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package org.apereo.cas.oidc.slo;\n+\n+import org.apereo.cas.logout.slo.SingleLogoutMessage;\n+import org.apereo.cas.logout.slo.SingleLogoutMessageCreator;\n+import org.apereo.cas.logout.slo.SingleLogoutRequest;\n+import org.apereo.cas.oidc.OidcConstants;\n+import org.apereo.cas.services.OidcRegisteredService;\n+import org.apereo.cas.services.RegisteredServiceLogoutType;\n+import org.apereo.cas.support.oauth.web.endpoints.OAuth20ConfigurationContext;\n+import org.apereo.cas.util.DigestUtils;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import lombok.val;\n+import org.apache.commons.lang3.StringUtils;\n+import org.jose4j.jwt.JwtClaims;\n+\n+import java.util.HashMap;\n+import java.util.UUID;\n+\n+/**\n+ * The message creator for the OIDC protocol.\n+ *\n+ * @author Jerome LELEU\n+ * @since 6.2.0\n+ */\n+@Slf4j\n+@RequiredArgsConstructor\n+public class OidcSingleLogoutMessageCreator implements SingleLogoutMessageCreator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NjcwMQ==", "bodyText": "Please add tests.", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396946701", "createdAt": "2020-03-24T07:29:17Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/slo/OidcSingleLogoutServiceMessageHandler.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package org.apereo.cas.oidc.slo;\n+\n+import org.apereo.cas.authentication.AuthenticationServiceSelectionPlan;\n+import org.apereo.cas.authentication.principal.WebApplicationService;\n+import org.apereo.cas.logout.LogoutHttpMessage;\n+import org.apereo.cas.logout.slo.BaseSingleLogoutServiceMessageHandler;\n+import org.apereo.cas.logout.slo.SingleLogoutMessage;\n+import org.apereo.cas.logout.slo.SingleLogoutMessageCreator;\n+import org.apereo.cas.logout.slo.SingleLogoutRequest;\n+import org.apereo.cas.logout.slo.SingleLogoutServiceLogoutUrlBuilder;\n+import org.apereo.cas.logout.slo.SingleLogoutUrl;\n+import org.apereo.cas.oidc.OidcConstants;\n+import org.apereo.cas.services.OidcRegisteredService;\n+import org.apereo.cas.services.RegisteredService;\n+import org.apereo.cas.services.RegisteredServiceLogoutType;\n+import org.apereo.cas.services.ServicesManager;\n+import org.apereo.cas.ticket.TicketGrantingTicket;\n+import org.apereo.cas.util.CollectionUtils;\n+import org.apereo.cas.util.DigestUtils;\n+import org.apereo.cas.util.HttpUtils;\n+import org.apereo.cas.util.http.HttpClient;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import lombok.val;\n+import org.apache.http.HttpResponse;\n+import org.jose4j.jwt.ReservedClaimNames;\n+import org.pac4j.core.util.CommonHelper;\n+import org.springframework.http.HttpStatus;\n+\n+import java.util.Collection;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The message handler for the OIDC protocol.\n+ *\n+ * @author Jerome LELEU\n+ * @since 6.2.0\n+ */\n+@Slf4j\n+public class OidcSingleLogoutServiceMessageHandler extends BaseSingleLogoutServiceMessageHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NjgyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String CLAIM_SESSIOND_ID = \"sid\";\n          \n          \n            \n                String SLO_SESSIOND_ID = \"sid\";", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396946828", "createdAt": "2020-03-24T07:29:34Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc-core/src/main/java/org/apereo/cas/oidc/OidcConstants.java", "diffHunk": "@@ -51,6 +51,10 @@\n      * The access token hash.\n      */\n     String CLAIM_AT_HASH = \"at_hash\";\n+    /**\n+     * The session identifier claim.\n+     */\n+    String CLAIM_SESSIOND_ID = \"sid\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NzA0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Bean\n          \n          \n            \n                @Bean\n          \n          \n            \n                @ConditionalOnMissingBean(name = \"oidcLogoutExecutionPlanConfigurer\")", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396947042", "createdAt": "2020-03-24T07:30:07Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc/src/main/java/org/apereo/cas/oidc/config/OidcConfiguration.java", "diffHunk": "@@ -757,6 +771,29 @@ public View oidcConfirmView() {\n         return casProtocolViewFactory.getObject().create(applicationContext, \"protocol/oidc/confirm\");\n     }\n \n+    @ConditionalOnMissingBean(name = \"oidcSingleLogoutMessageCreator\")\n+    @Bean\n+    public SingleLogoutMessageCreator oidcSingleLogoutMessageCreator() {\n+        return new OidcSingleLogoutMessageCreator(buildConfigurationContext());\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"oidcSingleLogoutServiceMessageHandler\")\n+    @Bean\n+    public SingleLogoutServiceMessageHandler oidcSingleLogoutServiceMessageHandler() {\n+        return new OidcSingleLogoutServiceMessageHandler(httpClient.getObject(),\n+                oidcSingleLogoutMessageCreator(),\n+                servicesManager.getObject(),\n+                singleLogoutServiceLogoutUrlBuilder.getObject(),\n+                casProperties.getSlo().isAsynchronous(),\n+                authenticationServiceSelectionPlan.getObject(),\n+                casProperties.getAuthn().getOidc().getIssuer());\n+    }\n+\n+    @Bean", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NzEzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Bean\n          \n          \n            \n                @Bean\n          \n          \n            \n                @RefreshScope", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396947130", "createdAt": "2020-03-24T07:30:20Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc/src/main/java/org/apereo/cas/oidc/config/OidcConfiguration.java", "diffHunk": "@@ -757,6 +771,29 @@ public View oidcConfirmView() {\n         return casProtocolViewFactory.getObject().create(applicationContext, \"protocol/oidc/confirm\");\n     }\n \n+    @ConditionalOnMissingBean(name = \"oidcSingleLogoutMessageCreator\")\n+    @Bean\n+    public SingleLogoutMessageCreator oidcSingleLogoutMessageCreator() {\n+        return new OidcSingleLogoutMessageCreator(buildConfigurationContext());\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"oidcSingleLogoutServiceMessageHandler\")\n+    @Bean", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NzE4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Bean\n          \n          \n            \n                @Bean\n          \n          \n            \n                @RefreshScope", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396947187", "createdAt": "2020-03-24T07:30:29Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc/src/main/java/org/apereo/cas/oidc/config/OidcConfiguration.java", "diffHunk": "@@ -757,6 +771,29 @@ public View oidcConfirmView() {\n         return casProtocolViewFactory.getObject().create(applicationContext, \"protocol/oidc/confirm\");\n     }\n \n+    @ConditionalOnMissingBean(name = \"oidcSingleLogoutMessageCreator\")\n+    @Bean", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NzM3Nw==", "bodyText": "You should set an order to this handler runs before the default one if necessary.", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396947377", "createdAt": "2020-03-24T07:30:55Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc/src/main/java/org/apereo/cas/oidc/config/OidcConfiguration.java", "diffHunk": "@@ -757,6 +771,29 @@ public View oidcConfirmView() {\n         return casProtocolViewFactory.getObject().create(applicationContext, \"protocol/oidc/confirm\");\n     }\n \n+    @ConditionalOnMissingBean(name = \"oidcSingleLogoutMessageCreator\")\n+    @Bean\n+    public SingleLogoutMessageCreator oidcSingleLogoutMessageCreator() {\n+        return new OidcSingleLogoutMessageCreator(buildConfigurationContext());\n+    }\n+\n+    @ConditionalOnMissingBean(name = \"oidcSingleLogoutServiceMessageHandler\")\n+    @Bean\n+    public SingleLogoutServiceMessageHandler oidcSingleLogoutServiceMessageHandler() {\n+        return new OidcSingleLogoutServiceMessageHandler(httpClient.getObject(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0Nzc1Mg==", "bodyText": "In general the order of execution is:\n\nProtocol-specific ones, such as SAML2, OIDC, OAUTH, etc\n1.1 Each handler checks for a service type and passes it onto the next, if it doesn't support the type\nDefault runs as a catch-all.", "url": "https://github.com/apereo/cas/pull/4767#discussion_r396947752", "createdAt": "2020-03-24T07:31:52Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-logout-api/src/main/java/org/apereo/cas/logout/slo/DefaultSingleLogoutServiceMessageHandler.java", "diffHunk": "@@ -23,4 +27,21 @@ public DefaultSingleLogoutServiceMessageHandler(final HttpClient httpClient,\n         super(httpClient, logoutMessageBuilder, servicesManager, singleLogoutServiceLogoutUrlBuilder,\n             asynchronous, authenticationRequestServiceSelectionStrategies);\n     }\n+\n+    /**\n+     * The default handler only applies on the CAS protocol services.\n+     * For the SAML and OIDC protocols, specific handlers exist.\n+     * For the OAuth protocol, no logout process is handled.\n+     *\n+     * The check of the service type is made by the class name not to add support-* dependencies.\n+     *\n+     * @param singleLogoutService the single logout service\n+     * @param registeredService   the registered service\n+     * @return whether the handler applies\n+     */\n+    @Override\n+    protected boolean supportsInternal(final WebApplicationService singleLogoutService, final RegisteredService registeredService) {\n+        val name = registeredService.getClass().getSimpleName();\n+        return !\"SamlRegisteredService\".equals(name) && !\"OidcRegisteredService\".equals(name) && !\"OAuthRegisteredService\".equals(name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NTg5Mw=="}, "originalCommit": {"oid": "331eea32f4c4445021a29d01b94f15eadc2ab7ac"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e915166e4371d8d592a5178b20dc047fd46f98bc", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/e915166e4371d8d592a5178b20dc047fd46f98bc", "committedDate": "2020-03-26T11:17:31Z", "message": "Update support/cas-server-support-oidc-core-api/src/main/java/org/apereo/cas/oidc/slo/OidcSingleLogoutMessageCreator.java\n\nCo-Authored-By: Misagh Moayyed <mm1844@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e86e3e9d5b6293263e87f1dc1d18383f92f1db78", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/e86e3e9d5b6293263e87f1dc1d18383f92f1db78", "committedDate": "2020-03-26T11:20:33Z", "message": "Update support/cas-server-support-oidc/src/main/java/org/apereo/cas/oidc/config/OidcConfiguration.java\n\nCo-Authored-By: Misagh Moayyed <mm1844@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "929a8b0d1f59d89db29762de9d3250535833529a", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/929a8b0d1f59d89db29762de9d3250535833529a", "committedDate": "2020-03-26T11:20:41Z", "message": "Update support/cas-server-support-oidc/src/main/java/org/apereo/cas/oidc/config/OidcConfiguration.java\n\nCo-Authored-By: Misagh Moayyed <mm1844@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61cc977a22e1f2398aa402e34a6ce1fe1430f0e9", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/61cc977a22e1f2398aa402e34a6ce1fe1430f0e9", "committedDate": "2020-03-26T11:20:54Z", "message": "Update support/cas-server-support-oidc/src/main/java/org/apereo/cas/oidc/config/OidcConfiguration.java\n\nCo-Authored-By: Misagh Moayyed <mm1844@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52a6466925cfaabdf7e33b4fbc643f024fb15df7", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/52a6466925cfaabdf7e33b4fbc643f024fb15df7", "committedDate": "2020-03-26T11:22:50Z", "message": "Merge branch 'master' of github.com:apereo/cas into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6c4d503e1753276bafc940c214fba14747d4f77", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/f6c4d503e1753276bafc940c214fba14747d4f77", "committedDate": "2020-03-26T12:26:57Z", "message": "order SLO message handlers + OidcLogoutProperties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b3e006a852ddb113989156be763a261d88d1210", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/6b3e006a852ddb113989156be763a261d88d1210", "committedDate": "2020-03-26T14:04:04Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b041369ace732d93f66cc0fca4c3e89d93b76836", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/b041369ace732d93f66cc0fca4c3e89d93b76836", "committedDate": "2020-03-26T15:34:04Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5397b586ccd6db02ca91289f644b8b6ed543e8e1", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/5397b586ccd6db02ca91289f644b8b6ed543e8e1", "committedDate": "2020-03-26T17:21:29Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e3f9c03787b832baf15bb3708fb797e39efadd5", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/7e3f9c03787b832baf15bb3708fb797e39efadd5", "committedDate": "2020-03-26T18:51:29Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58c002e3a5f184832dd9545678a4f61196b24611", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/58c002e3a5f184832dd9545678a4f61196b24611", "committedDate": "2020-03-26T20:21:29Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d637d5b56a173b657250370cd495f995cde3424", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/5d637d5b56a173b657250370cd495f995cde3424", "committedDate": "2020-03-26T21:51:29Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cb66b90c95b5696f2f52562991fc923341cdb44", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/4cb66b90c95b5696f2f52562991fc923341cdb44", "committedDate": "2020-03-26T23:21:29Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8618935790c896c019606c0b33f3b4e5f469660", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/e8618935790c896c019606c0b33f3b4e5f469660", "committedDate": "2020-03-27T00:51:34Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5d370efaf05a0ec7bc2d800fe2c5e2d75e9df6b", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/e5d370efaf05a0ec7bc2d800fe2c5e2d75e9df6b", "committedDate": "2020-03-27T05:21:33Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2adbafa92e5d0ae1f9bd4fd1cd45dbbd716c994e", "author": {"user": {"login": "mmoayyed", "name": "Misagh Moayyed"}}, "url": "https://github.com/apereo/cas/commit/2adbafa92e5d0ae1f9bd4fd1cd45dbbd716c994e", "committedDate": "2020-03-27T07:32:52Z", "message": "Update Configuration-Properties.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19625bdb2ffb442b9d0308cbcf69850c464c9458", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/19625bdb2ffb442b9d0308cbcf69850c464c9458", "committedDate": "2020-03-30T07:18:35Z", "message": "Merge branch 'master' of github.com:apereo/cas into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd0546ce70cf248222835143213be2df089428b1", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/bd0546ce70cf248222835143213be2df089428b1", "committedDate": "2020-03-30T08:46:04Z", "message": "Merge branch 'master' of github.com:apereo/cas into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b730ceeeec64529e6f1894e6364f7c81ae0a760", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/3b730ceeeec64529e6f1894e6364f7c81ae0a760", "committedDate": "2020-03-30T09:39:40Z", "message": "WIP tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d917d7de3d93e65b4359b5d614859c96f267999", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/5d917d7de3d93e65b4359b5d614859c96f267999", "committedDate": "2020-03-30T11:00:22Z", "message": "new OIDC tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "861b8d8e391b0a725c958fd5ccc7710994e46e2c", "author": {"user": {"login": "leleuj", "name": "CAS in the cloud LELEU J\u00e9r\u00f4me"}}, "url": "https://github.com/apereo/cas/commit/861b8d8e391b0a725c958fd5ccc7710994e46e2c", "committedDate": "2020-03-30T12:06:50Z", "message": "fix Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af0f2a87d6d5a7640ace9fa862b82e61e1a57ce7", "author": {"user": {"login": "mmoayyed", "name": "Misagh Moayyed"}}, "url": "https://github.com/apereo/cas/commit/af0f2a87d6d5a7640ace9fa862b82e61e1a57ce7", "committedDate": "2020-03-30T13:14:17Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b42e95ad51288cc210817e3b43d80115234f23fd", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/b42e95ad51288cc210817e3b43d80115234f23fd", "committedDate": "2020-03-30T15:13:53Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94f477b296d364634966257d44ec78e238a4d2d0", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/94f477b296d364634966257d44ec78e238a4d2d0", "committedDate": "2020-03-30T18:13:55Z", "message": "Merge branch 'master' into oidc_slo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f07310813b218907e50afdc4ca9a0919f4131fc8", "author": {"user": {"login": "mmoayyed", "name": "Misagh Moayyed"}}, "url": "https://github.com/apereo/cas/commit/f07310813b218907e50afdc4ca9a0919f4131fc8", "committedDate": "2020-03-30T19:52:50Z", "message": "Update build.gradle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65f11723d2bcc195037d427ae522d244c70464fa", "author": {"user": {"login": "mmoayyed", "name": "Misagh Moayyed"}}, "url": "https://github.com/apereo/cas/commit/65f11723d2bcc195037d427ae522d244c70464fa", "committedDate": "2020-03-30T19:53:28Z", "message": "Update build.gradle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ac402154da6483538258bbb76cbb75f4c936394", "author": {"user": {"login": "apereocas-bot", "name": null}}, "url": "https://github.com/apereo/cas/commit/1ac402154da6483538258bbb76cbb75f4c936394", "committedDate": "2020-03-31T02:03:21Z", "message": "Merge branch 'master' into oidc_slo"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3645, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}