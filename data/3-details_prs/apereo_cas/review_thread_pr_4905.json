{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4OTQ4MjA2", "number": 4905, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NDoxOVrOEOkP7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NToxM1rOEOkRGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzA5NDIxOnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-oidc-core/src/main/java/org/apereo/cas/oidc/claims/OidcAddressScopeAttributeReleasePolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NDoxOVrOGxyO6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NDoxOVrOGxyO6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1NjQyNw==", "bodyText": "Since we are now making this public (and the ones below),\n\nYou should likely add a bit of Javadoc here. (Checkstyle is probably mad at this line already)\nIt would make better sense to me to rename these as ALLOWED_CLAIMS to stick with the accepted jargon though there is the getter below that cannot be changed. So, your call.", "url": "https://github.com/apereo/cas/pull/4905#discussion_r454856427", "createdAt": "2020-07-15T07:44:19Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oidc-core/src/main/java/org/apereo/cas/oidc/claims/OidcAddressScopeAttributeReleasePolicy.java", "diffHunk": "@@ -17,11 +15,11 @@\n public class OidcAddressScopeAttributeReleasePolicy extends BaseOidcScopeAttributeReleasePolicy {\n     private static final long serialVersionUID = 1532960981124784595L;\n \n-    private List<String> allowedAttributes = Stream.of(\"address\").collect(Collectors.toList());\n+    public static final List<String> ALLOWED_ATTRIBUTES = List.of(\"address\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2016e4a869bc8a57d00fc23a2eea2c058df92588"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzA5NzIwOnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-syncope-authentication/src/main/java/org/apereo/cas/syncope/authentication/SyncopeAuthenticationHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NToxM1rOGxyQzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzo0NToxM1rOGxyQzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg1NjkwOA==", "bodyText": "This is all excellent. For all new lines, you should additionally modify the related test for the handler to make sure these are covered.", "url": "https://github.com/apereo/cas/pull/4905#discussion_r454856908", "createdAt": "2020-07-15T07:45:13Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-syncope-authentication/src/main/java/org/apereo/cas/syncope/authentication/SyncopeAuthenticationHandler.java", "diffHunk": "@@ -124,14 +117,24 @@ public SyncopeAuthenticationHandler(final String name,\n \n         if (user.has(\"relationships\")) {\n             user.get(\"relationships\").forEach(r -> attributes.put(\n-                \"syncopeUserRelationships\" + r.get(\"type\").asText(),\n-                List.of(r.get(\"otherEndName\").asText())));\n+                    \"syncopeUserRelationships\" + r.get(\"type\").asText(),\n+                    List.of(r.get(\"otherEndName\").asText())));\n         }\n \n         if (user.has(\"plainAttrs\")) {\n             user.get(\"plainAttrs\").forEach(a -> attributes.put(\n-                \"syncopeUserAttr\" + a.get(\"schema\").asText(),\n-                MAPPER.convertValue(a.get(\"values\"), ArrayList.class)));\n+                    \"syncopeUserAttr_\" + a.get(\"schema\").asText(),\n+                    MAPPER.convertValue(a.get(\"values\"), ArrayList.class)));\n+        }\n+        if (user.has(\"derAttrs\")) {\n+            user.get(\"derAttrs\").forEach(a -> attributes.put(\n+                    \"syncopeUserAttr_\" + a.get(\"schema\").asText(),\n+                    MAPPER.convertValue(a.get(\"values\"), ArrayList.class)));\n+        }\n+        if (user.has(\"virAttrs\")) {\n+            user.get(\"virAttrs\").forEach(a -> attributes.put(\n+                    \"syncopeUserAttr_\" + a.get(\"schema\").asText(),\n+                    MAPPER.convertValue(a.get(\"values\"), ArrayList.class)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2016e4a869bc8a57d00fc23a2eea2c058df92588"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4011, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}