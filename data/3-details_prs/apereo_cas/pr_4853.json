{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NzkyNjI5", "number": 4853, "title": "Fix ldap connection pool shut down - phase 2", "bodyText": "Now comes phase 2. These are the \"dirty beasts\" of the old patch.\nAfter I reviewed the old patch, I realized that I can simply convert the ConnectionFactory into a class property and make the bean disposable. Somehow I was behaving like a robot that simply close the connection reflectively as I see new connection factory in the old patch.", "createdAt": "2020-05-14T07:01:22Z", "url": "https://github.com/apereo/cas/pull/4853", "merged": true, "mergeCommit": {"oid": "bc462e627f4ad72e64d91a1c95cb851752cb8116"}, "closed": true, "closedAt": "2020-05-21T07:27:52Z", "author": {"login": "leeyc0"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchICb2gH2gAyNDE3NzkyNjI5OjdiNTI5ODAyYWQ1MTA5MGJjOGYxODk0ZmQyYmQxZWNlZTQ3YWFiYzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjYhgWgFqTQxNTkzNDk1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7b529802ad51090bc8f1894fd2bd1ecee47aabc3", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/7b529802ad51090bc8f1894fd2bd1ecee47aabc3", "committedDate": "2020-05-14T07:07:29Z", "message": "LdapUserGraphicalAuthenticationRepository convert to DisposableBean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6c007452c7318983fa8706cc23410f8262def97", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/a6c007452c7318983fa8706cc23410f8262def97", "committedDate": "2020-05-14T07:07:29Z", "message": "LdapAcceptableUsagePolicyRepository convert to DisposableBean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb27dc603c6f424705d180a20b2190de0e1519a0", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/bb27dc603c6f424705d180a20b2190de0e1519a0", "committedDate": "2020-05-14T07:07:29Z", "message": "LdapPasswordManagementService convert to DisposableBean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "742aed44ea600f973397b3acd73e81557a32f7dd", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/742aed44ea600f973397b3acd73e81557a32f7dd", "committedDate": "2020-05-14T07:07:29Z", "message": "CasWebSecurityConfigurerAdapter convert to DisposableBean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/146998c17e45a59efb8b311bb01cbd8d953c21bd", "committedDate": "2020-05-14T09:11:44Z", "message": "ldapAttributeRepositories use ListFactoryBean to store objects that need to be disposed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNjUxOTk0", "url": "https://github.com/apereo/cas/pull/4853#pullrequestreview-411651994", "createdAt": "2020-05-14T10:01:22Z", "commit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMDowMToyMlrOGVVFgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMDoxMTozNlrOGVVdrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxODc1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private HashMap<LdapAcceptableUsagePolicyProperties, ConnectionFactory> connectionFactoryList = new HashMap<>();\n          \n          \n            \n                private final Map<String, ConnectionFactory> connectionFactoryList = new ConcurrentHashMap<>();", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425018755", "createdAt": "2020-05-14T10:01:22Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-aup-ldap/src/main/java/org/apereo/cas/aup/LdapAcceptableUsagePolicyRepository.java", "diffHunk": "@@ -30,12 +32,17 @@\n  * @since 4.2\n  */\n @Slf4j\n-public class LdapAcceptableUsagePolicyRepository extends BaseAcceptableUsagePolicyRepository {\n+public class LdapAcceptableUsagePolicyRepository extends BaseAcceptableUsagePolicyRepository implements DisposableBean {\n     private static final long serialVersionUID = 1600024683199961892L;\n \n+    private HashMap<LdapAcceptableUsagePolicyProperties, ConnectionFactory> connectionFactoryList = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxOTE0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    val connectionFactory = connectionFactoryList.get(ldap);\n          \n          \n            \n                    val connectionFactory = connectionFactoryList.get(ldap.getLdapUrl());", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425019140", "createdAt": "2020-05-14T10:02:03Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-aup-ldap/src/main/java/org/apereo/cas/aup/LdapAcceptableUsagePolicyRepository.java", "diffHunk": "@@ -52,7 +59,7 @@ public LdapAcceptableUsagePolicyRepository(final TicketRegistrySupport ticketReg\n             LdapUtils.LDAP_SEARCH_FILTER_DEFAULT_PARAM_NAME,\n             CollectionUtils.wrap(id));\n         LOGGER.debug(\"Constructed LDAP filter [{}]\", filter);\n-        val connectionFactory = LdapUtils.newLdaptiveConnectionFactory(ldap);\n+        val connectionFactory = connectionFactoryList.get(ldap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxOTI4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    connectionFactoryList.forEach((ldap, connectionFactory) -> {\n          \n          \n            \n                        connectionFactory.close();\n          \n          \n            \n                    });\n          \n          \n            \n                    connectionFactoryList.forEach((ldap, connectionFactory) -> \n          \n          \n            \n                        connectionFactory.close();\n          \n          \n            \n                    );", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425019287", "createdAt": "2020-05-14T10:02:17Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-aup-ldap/src/main/java/org/apereo/cas/aup/LdapAcceptableUsagePolicyRepository.java", "diffHunk": "@@ -85,4 +92,11 @@ public boolean submit(final RequestContext requestContext, final Credential cred\n         }\n         return false;\n     }\n+\n+    @Override\n+    public void destroy() {\n+        connectionFactoryList.forEach((ldap, connectionFactory) -> {\n+            connectionFactory.close();\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxOTgxMg==", "bodyText": "Pass the connection factory, remove ctor and use lombok.", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425019812", "createdAt": "2020-05-14T10:03:08Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-gua/src/main/java/org/apereo/cas/gua/impl/LdapUserGraphicalAuthenticationRepository.java", "diffHunk": "@@ -20,12 +21,24 @@\n  * @since 5.1.0\n  */\n @Slf4j\n-@RequiredArgsConstructor\n-public class LdapUserGraphicalAuthenticationRepository implements UserGraphicalAuthenticationRepository {\n+public class LdapUserGraphicalAuthenticationRepository implements UserGraphicalAuthenticationRepository, DisposableBean {\n     private static final long serialVersionUID = 421732017215881244L;\n \n     private final CasConfigurationProperties casProperties;\n \n+    private ConnectionFactory connectionFactory;\n+\n+    public LdapUserGraphicalAuthenticationRepository(final CasConfigurationProperties casProperties) {\n+        this.casProperties = casProperties;\n+        this.connectionFactory = LdapUtils.newLdaptiveConnectionFactory(\n+            casProperties.getAuthn().getGua().getLdap());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxOTkyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ConnectionFactory connectionFactory;\n          \n          \n            \n                private final ConnectionFactory connectionFactory;", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425019929", "createdAt": "2020-05-14T10:03:19Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-gua/src/main/java/org/apereo/cas/gua/impl/LdapUserGraphicalAuthenticationRepository.java", "diffHunk": "@@ -20,12 +21,24 @@\n  * @since 5.1.0\n  */\n @Slf4j\n-@RequiredArgsConstructor\n-public class LdapUserGraphicalAuthenticationRepository implements UserGraphicalAuthenticationRepository {\n+public class LdapUserGraphicalAuthenticationRepository implements UserGraphicalAuthenticationRepository, DisposableBean {\n     private static final long serialVersionUID = 421732017215881244L;\n \n     private final CasConfigurationProperties casProperties;\n \n+    private ConnectionFactory connectionFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMDE0Nw==", "bodyText": "Necessary?", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425020147", "createdAt": "2020-05-14T10:03:41Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-person-directory/src/main/java/org/apereo/cas/config/CasPersonDirectoryConfiguration.java", "diffHunk": "@@ -260,11 +264,31 @@ public void configureAttributeRepositoryPlan(final PersonDirectoryAttributeRepos\n     @Configuration(\"CasPersonDirectoryLdapConfiguration\")\n     public class CasPersonDirectoryLdapConfiguration implements PersonDirectoryAttributeRepositoryPlanConfigurer {\n \n+        @Bean\n+        @RefreshScope", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMDI4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        bean.setSourceList(new ArrayList<>());\n          \n          \n            \n                        bean.setSourceList(new ArrayList<>(0));", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425020280", "createdAt": "2020-05-14T10:03:57Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-person-directory/src/main/java/org/apereo/cas/config/CasPersonDirectoryConfiguration.java", "diffHunk": "@@ -260,11 +264,31 @@ public void configureAttributeRepositoryPlan(final PersonDirectoryAttributeRepos\n     @Configuration(\"CasPersonDirectoryLdapConfiguration\")\n     public class CasPersonDirectoryLdapConfiguration implements PersonDirectoryAttributeRepositoryPlanConfigurer {\n \n+        @Bean\n+        @RefreshScope\n+        public ListFactoryBean personDirectoryAttributeRepositoryPlanConfigurerListConnectionFactoryListBean() {\n+            val bean = new ListFactoryBean() {\n+                @Override\n+                protected void destroyInstance(final List list) {\n+                    list.forEach(dao ->\n+                        ((ConnectionFactory) dao).close()\n+                    );\n+                }\n+            };\n+            bean.setSourceList(new ArrayList<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMTU4NQ==", "bodyText": "This is not a good pattern. Here's what you should do instead:\n\nRemove the PersonDirectoryAttributeRepositoryPlanConfigurer from the class\nCreate a Bean of type PersonDirectoryAttributeRepositoryPlanConfigurer. Mark as conditional.\nInject and qualify personDirectoryAttributeRepositoryPlanConfigurerListConnectionFactoryListBean into that bean.\nRegister the ldap attribute repository into the plan as usual.", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425021585", "createdAt": "2020-05-14T10:06:09Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-person-directory/src/main/java/org/apereo/cas/config/CasPersonDirectoryConfiguration.java", "diffHunk": "@@ -307,7 +333,9 @@ public void configureAttributeRepositoryPlan(final PersonDirectoryAttributeRepos\n \n         @Override\n         public void configureAttributeRepositoryPlan(final PersonDirectoryAttributeRepositoryPlan plan) {\n-            plan.registerAttributeRepositories(ldapAttributeRepositories());\n+            plan.registerAttributeRepositories(ldapAttributeRepositories(\n+                personDirectoryAttributeRepositoryPlanConfigurerListConnectionFactoryListBean()\n+            ));\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMTg0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final HashMap<LdapPasswordManagementProperties, ConnectionFactory> connectionFactoryMap = new HashMap<>();\n          \n          \n            \n                private final Map<String, ConnectionFactory> connectionFactoryMap = new ConcurrentHashMap<>();", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425021845", "createdAt": "2020-05-14T10:06:37Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/pm/LdapPasswordManagementService.java", "diffHunk": "@@ -29,8 +31,9 @@\n  * @since 5.0.0\n  */\n @Slf4j\n-public class LdapPasswordManagementService extends BasePasswordManagementService {\n+public class LdapPasswordManagementService extends BasePasswordManagementService implements DisposableBean {\n     private final List<LdapPasswordManagementProperties> ldapProperties;\n+    private final HashMap<LdapPasswordManagementProperties, ConnectionFactory> connectionFactoryMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMjQ3Mg==", "bodyText": "Pass the connection factory map as a ctor argument; build the map inside the bean", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425022472", "createdAt": "2020-05-14T10:07:37Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/pm/LdapPasswordManagementService.java", "diffHunk": "@@ -39,6 +42,16 @@ public LdapPasswordManagementService(final CipherExecutor<Serializable, String>\n                                          final PasswordHistoryService passwordHistoryService) {\n         super(passwordManagementProperties, cipherExecutor, issuer, passwordHistoryService);\n         this.ldapProperties = passwordManagementProperties.getLdap();\n+        this.ldapProperties.forEach(ldap -> {\n+            this.connectionFactoryMap.put(ldap, LdapUtils.newLdaptiveConnectionFactory(ldap));\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMjU5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.connectionFactoryMap.forEach((ldap, connectionFactory) -> {\n          \n          \n            \n                        connectionFactory.close();\n          \n          \n            \n                    });\n          \n          \n            \n                    this.connectionFactoryMap.forEach((ldap, connectionFactory) -> \n          \n          \n            \n                        connectionFactory.close();\n          \n          \n            \n                    );", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425022598", "createdAt": "2020-05-14T10:07:47Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/pm/LdapPasswordManagementService.java", "diffHunk": "@@ -39,6 +42,16 @@ public LdapPasswordManagementService(final CipherExecutor<Serializable, String>\n                                          final PasswordHistoryService passwordHistoryService) {\n         super(passwordManagementProperties, cipherExecutor, issuer, passwordHistoryService);\n         this.ldapProperties = passwordManagementProperties.getLdap();\n+        this.ldapProperties.forEach(ldap -> {\n+            this.connectionFactoryMap.put(ldap, LdapUtils.newLdaptiveConnectionFactory(ldap));\n+        });\n+    }\n+\n+    @Override\n+    public void destroy() {\n+        this.connectionFactoryMap.forEach((ldap, connectionFactory) -> {\n+            connectionFactory.close();\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMjc2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            val ldapConnectionFactory = this.connectionFactoryMap.get(ldap);\n          \n          \n            \n                            val ldapConnectionFactory = this.connectionFactoryMap.get(ldap.getLdapUrl());", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425022760", "createdAt": "2020-05-14T10:08:05Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/pm/LdapPasswordManagementService.java", "diffHunk": "@@ -75,7 +88,7 @@ public String findUsername(final String email) {\n                     LdapUtils.LDAP_SEARCH_FILTER_DEFAULT_PARAM_NAME,\n                     CollectionUtils.wrap(username));\n                 LOGGER.debug(\"Constructed LDAP filter [{}] to locate security questions\", filter);\n-                val ldapConnectionFactory = LdapUtils.newLdaptiveConnectionFactory(ldap);\n+                val ldapConnectionFactory = this.connectionFactoryMap.get(ldap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMzM5Nw==", "bodyText": "Pass to the ctor as argument; build inside the bean definition during construction time.", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425023397", "createdAt": "2020-05-14T10:09:08Z", "author": {"login": "mmoayyed"}, "path": "webapp/cas-server-webapp-config/src/main/java/org/apereo/cas/web/security/authentication/MonitorEndpointLdapAuthenticationProvider.java", "diffHunk": "@@ -43,10 +43,24 @@\n  * @since 5.1.0\n  */\n @Slf4j\n-@RequiredArgsConstructor\n public class MonitorEndpointLdapAuthenticationProvider implements AuthenticationProvider {\n     private final MonitorProperties.Endpoints.LdapSecurity ldapProperties;\n     private final SecurityProperties securityProperties;\n+    private ConnectionFactory connectionFactory;\n+    private Authenticator authenticator;\n+\n+    public MonitorEndpointLdapAuthenticationProvider(final MonitorProperties.Endpoints.LdapSecurity ldapProperties,\n+                                                     final SecurityProperties securityProperties) {\n+        this.ldapProperties = ldapProperties;\n+        this.securityProperties = securityProperties;\n+        this.connectionFactory = LdapUtils.newLdaptiveConnectionFactory(this.ldapProperties);\n+        this.authenticator = LdapUtils.newLdaptiveAuthenticator(this.ldapProperties);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMzg0Mw==", "bodyText": "Missing @Override?", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425023843", "createdAt": "2020-05-14T10:09:53Z", "author": {"login": "mmoayyed"}, "path": "webapp/cas-server-webapp-config/src/main/java/org/apereo/cas/web/security/authentication/MonitorEndpointLdapAuthenticationProvider.java", "diffHunk": "@@ -43,10 +43,24 @@\n  * @since 5.1.0\n  */\n @Slf4j\n-@RequiredArgsConstructor\n public class MonitorEndpointLdapAuthenticationProvider implements AuthenticationProvider {\n     private final MonitorProperties.Endpoints.LdapSecurity ldapProperties;\n     private final SecurityProperties securityProperties;\n+    private ConnectionFactory connectionFactory;\n+    private Authenticator authenticator;\n+\n+    public MonitorEndpointLdapAuthenticationProvider(final MonitorProperties.Endpoints.LdapSecurity ldapProperties,\n+                                                     final SecurityProperties securityProperties) {\n+        this.ldapProperties = ldapProperties;\n+        this.securityProperties = securityProperties;\n+        this.connectionFactory = LdapUtils.newLdaptiveConnectionFactory(this.ldapProperties);\n+        this.authenticator = LdapUtils.newLdaptiveAuthenticator(this.ldapProperties);\n+    }\n+\n+    public void destroy() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMzk5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ConnectionFactory connectionFactory;\n          \n          \n            \n                private Authenticator authenticator;\n          \n          \n            \n                private final ConnectionFactory connectionFactory;\n          \n          \n            \n                private final Authenticator authenticator;", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425023991", "createdAt": "2020-05-14T10:10:05Z", "author": {"login": "mmoayyed"}, "path": "webapp/cas-server-webapp-config/src/main/java/org/apereo/cas/web/security/authentication/MonitorEndpointLdapAuthenticationProvider.java", "diffHunk": "@@ -43,10 +43,24 @@\n  * @since 5.1.0\n  */\n @Slf4j\n-@RequiredArgsConstructor\n public class MonitorEndpointLdapAuthenticationProvider implements AuthenticationProvider {\n     private final MonitorProperties.Endpoints.LdapSecurity ldapProperties;\n     private final SecurityProperties securityProperties;\n+    private ConnectionFactory connectionFactory;\n+    private Authenticator authenticator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyNDk0MQ==", "bodyText": "Pass the connection factory map as argument; build inside the bean in config class.", "url": "https://github.com/apereo/cas/pull/4853#discussion_r425024941", "createdAt": "2020-05-14T10:11:36Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-aup-ldap/src/main/java/org/apereo/cas/aup/LdapAcceptableUsagePolicyRepository.java", "diffHunk": "@@ -30,12 +32,17 @@\n  * @since 4.2\n  */\n @Slf4j\n-public class LdapAcceptableUsagePolicyRepository extends BaseAcceptableUsagePolicyRepository {\n+public class LdapAcceptableUsagePolicyRepository extends BaseAcceptableUsagePolicyRepository implements DisposableBean {\n     private static final long serialVersionUID = 1600024683199961892L;\n \n+    private HashMap<LdapAcceptableUsagePolicyProperties, ConnectionFactory> connectionFactoryList = new HashMap<>();\n+\n     public LdapAcceptableUsagePolicyRepository(final TicketRegistrySupport ticketRegistrySupport,\n                                                final AcceptableUsagePolicyProperties aupProperties) {\n         super(ticketRegistrySupport, aupProperties);\n+        aupProperties.getLdap().forEach(ldap -> {\n+            connectionFactoryList.put(ldap, LdapUtils.newLdaptiveConnectionFactory(ldap));\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146998c17e45a59efb8b311bb01cbd8d953c21bd"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb436419395abdf2741aa2f494bb0eb2a5ca14b8", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/bb436419395abdf2741aa2f494bb0eb2a5ca14b8", "committedDate": "2020-05-14T14:08:21Z", "message": "misc code fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e007c63ec51b55d019fbba7c9ef9cbba151a5430", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/e007c63ec51b55d019fbba7c9ef9cbba151a5430", "committedDate": "2020-05-14T14:20:53Z", "message": "refactor LDAP Attribute Repository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e9ccd2fe6b3d8f0339093575496e6579b06f8f6", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/0e9ccd2fe6b3d8f0339093575496e6579b06f8f6", "committedDate": "2020-05-14T15:55:24Z", "message": "move ConnectionFactory Object out of the Bean class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cf34340239d921511851b449d2143a837d2b948", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/2cf34340239d921511851b449d2143a837d2b948", "committedDate": "2020-05-15T01:41:58Z", "message": "fix unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "984dbec0bd1e23a25c23e567123136aa86e8c4c4", "author": {"user": {"login": "mmoayyed", "name": "Misagh Moayyed"}}, "url": "https://github.com/apereo/cas/commit/984dbec0bd1e23a25c23e567123136aa86e8c4c4", "committedDate": "2020-05-19T19:21:13Z", "message": "Merge branch 'master' into fix-LdapShutdown-master-phase2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MjYxNTk2", "url": "https://github.com/apereo/cas/pull/4853#pullrequestreview-415261596", "createdAt": "2020-05-20T12:03:20Z", "commit": {"oid": "984dbec0bd1e23a25c23e567123136aa86e8c4c4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjowMzoyMFrOGYIORw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjowNTo1NFrOGYITXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk1MzczNQ==", "bodyText": "Remove Autowired.", "url": "https://github.com/apereo/cas/pull/4853#discussion_r427953735", "createdAt": "2020-05-20T12:03:20Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-person-directory/src/main/java/org/apereo/cas/config/CasPersonDirectoryConfiguration.java", "diffHunk": "@@ -257,23 +260,36 @@ public void configureAttributeRepositoryPlan(final PersonDirectoryAttributeRepos\n     }\n \n     @ConditionalOnProperty(name = \"cas.authn.attribute-repository.ldap[0].ldap-url\")\n-    @Configuration(\"CasPersonDirectoryLdapConfiguration\")\n-    public class CasPersonDirectoryLdapConfiguration implements PersonDirectoryAttributeRepositoryPlanConfigurer {\n+    @Bean\n+    @Autowired", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984dbec0bd1e23a25c23e567123136aa86e8c4c4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk1NDAwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private final ArrayList<ConnectionFactory> connectionFactoryList = new ArrayList<>(0);\n          \n          \n            \n                    private final List<ConnectionFactory> connectionFactoryList = new ArrayList<>(0);", "url": "https://github.com/apereo/cas/pull/4853#discussion_r427954007", "createdAt": "2020-05-20T12:03:53Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-person-directory/src/main/java/org/apereo/cas/config/CasPersonDirectoryConfiguration.java", "diffHunk": "@@ -257,23 +260,36 @@ public void configureAttributeRepositoryPlan(final PersonDirectoryAttributeRepos\n     }\n \n     @ConditionalOnProperty(name = \"cas.authn.attribute-repository.ldap[0].ldap-url\")\n-    @Configuration(\"CasPersonDirectoryLdapConfiguration\")\n-    public class CasPersonDirectoryLdapConfiguration implements PersonDirectoryAttributeRepositoryPlanConfigurer {\n+    @Bean\n+    @Autowired\n+    @RefreshScope\n+    public PersonDirectoryAttributeRepositoryPlanConfigurer ldapAttributeRepositoryPlanConfigurer() {\n+        return new LdapAttributeRepositoryPlanConfigurer();\n+    }\n \n-        @ConditionalOnMissingBean(name = \"ldapAttributeRepositories\")\n-        @Bean\n-        @RefreshScope\n-        public List<IPersonAttributeDao> ldapAttributeRepositories() {\n-            val list = new ArrayList<IPersonAttributeDao>();\n+    private class LdapAttributeRepositoryPlanConfigurer implements PersonDirectoryAttributeRepositoryPlanConfigurer, DisposableBean {\n+        private final ArrayList<ConnectionFactory> connectionFactoryList = new ArrayList<>(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984dbec0bd1e23a25c23e567123136aa86e8c4c4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk1NDA4OA==", "bodyText": "Can this be a static class?", "url": "https://github.com/apereo/cas/pull/4853#discussion_r427954088", "createdAt": "2020-05-20T12:04:03Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-person-directory/src/main/java/org/apereo/cas/config/CasPersonDirectoryConfiguration.java", "diffHunk": "@@ -257,23 +260,36 @@ public void configureAttributeRepositoryPlan(final PersonDirectoryAttributeRepos\n     }\n \n     @ConditionalOnProperty(name = \"cas.authn.attribute-repository.ldap[0].ldap-url\")\n-    @Configuration(\"CasPersonDirectoryLdapConfiguration\")\n-    public class CasPersonDirectoryLdapConfiguration implements PersonDirectoryAttributeRepositoryPlanConfigurer {\n+    @Bean\n+    @Autowired\n+    @RefreshScope\n+    public PersonDirectoryAttributeRepositoryPlanConfigurer ldapAttributeRepositoryPlanConfigurer() {\n+        return new LdapAttributeRepositoryPlanConfigurer();\n+    }\n \n-        @ConditionalOnMissingBean(name = \"ldapAttributeRepositories\")\n-        @Bean\n-        @RefreshScope\n-        public List<IPersonAttributeDao> ldapAttributeRepositories() {\n-            val list = new ArrayList<IPersonAttributeDao>();\n+    private class LdapAttributeRepositoryPlanConfigurer implements PersonDirectoryAttributeRepositoryPlanConfigurer, DisposableBean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984dbec0bd1e23a25c23e567123136aa86e8c4c4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk1NTAzOQ==", "bodyText": "Managing the connection factory should be the responsibility of the LDAP DAO itself. On dispose, you should call the plan for each LDAP DAO to invoke each DAO to destroy/close, and the DAO will know what to do on close. Consider merging with master once where you can take advantage of the DAO#close() ops for LDAP DAOs, and also you'd have the ability to filter attribute repositories by a type predicate.", "url": "https://github.com/apereo/cas/pull/4853#discussion_r427955039", "createdAt": "2020-05-20T12:05:54Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-person-directory/src/main/java/org/apereo/cas/config/CasPersonDirectoryConfiguration.java", "diffHunk": "@@ -257,23 +260,36 @@ public void configureAttributeRepositoryPlan(final PersonDirectoryAttributeRepos\n     }\n \n     @ConditionalOnProperty(name = \"cas.authn.attribute-repository.ldap[0].ldap-url\")\n-    @Configuration(\"CasPersonDirectoryLdapConfiguration\")\n-    public class CasPersonDirectoryLdapConfiguration implements PersonDirectoryAttributeRepositoryPlanConfigurer {\n+    @Bean\n+    @Autowired\n+    @RefreshScope\n+    public PersonDirectoryAttributeRepositoryPlanConfigurer ldapAttributeRepositoryPlanConfigurer() {\n+        return new LdapAttributeRepositoryPlanConfigurer();\n+    }\n \n-        @ConditionalOnMissingBean(name = \"ldapAttributeRepositories\")\n-        @Bean\n-        @RefreshScope\n-        public List<IPersonAttributeDao> ldapAttributeRepositories() {\n-            val list = new ArrayList<IPersonAttributeDao>();\n+    private class LdapAttributeRepositoryPlanConfigurer implements PersonDirectoryAttributeRepositoryPlanConfigurer, DisposableBean {\n+        private final ArrayList<ConnectionFactory> connectionFactoryList = new ArrayList<>(0);\n+\n+        @Override\n+        public void destroy() {\n+            connectionFactoryList.forEach(ConnectionFactory::close);\n+        }\n+\n+        @Override\n+        @SneakyThrows\n+        public void configureAttributeRepositoryPlan(final PersonDirectoryAttributeRepositoryPlan plan) {\n             val attrs = casProperties.getAuthn().getAttributeRepository();\n+\n             attrs.getLdap()\n                 .stream()\n                 .filter(ldap -> StringUtils.isNotBlank(ldap.getBaseDn()) && StringUtils.isNotBlank(ldap.getLdapUrl()))\n                 .forEach(ldap -> {\n                     val ldapDao = new LdaptivePersonAttributeDao();\n                     FunctionUtils.doIfNotNull(ldap.getId(), ldapDao::setId);\n                     LOGGER.debug(\"Configured LDAP attribute source for [{}] and baseDn [{}]\", ldap.getLdapUrl(), ldap.getBaseDn());\n-                    ldapDao.setConnectionFactory(LdapUtils.newLdaptiveConnectionFactory(ldap));\n+                    val connectionFactory = LdapUtils.newLdaptiveConnectionFactory(ldap);\n+                    connectionFactoryList.add(connectionFactory);\n+                    ldapDao.setConnectionFactory(connectionFactory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984dbec0bd1e23a25c23e567123136aa86e8c4c4"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d184ce39ea927d01d5d4096ff063aa606f7c7e0d", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/d184ce39ea927d01d5d4096ff063aa606f7c7e0d", "committedDate": "2020-05-21T01:12:21Z", "message": "Merge branch 'master' of https://github.com/apereo/cas into fix-LdapShutdown-master-phase2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b14b80e515734dad4938c6c80ef3666ea615acd6", "author": {"user": {"login": "leeyc0", "name": null}}, "url": "https://github.com/apereo/cas/commit/b14b80e515734dad4938c6c80ef3666ea615acd6", "committedDate": "2020-05-21T01:20:24Z", "message": "misc code fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1957c33c278db0f68ad67b101c5b1114f7b3fce", "author": {"user": {"login": "mmoayyed", "name": "Misagh Moayyed"}}, "url": "https://github.com/apereo/cas/commit/e1957c33c278db0f68ad67b101c5b1114f7b3fce", "committedDate": "2020-05-21T07:26:19Z", "message": "Merge branch 'master' into fix-LdapShutdown-master-phase2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1OTM0OTUy", "url": "https://github.com/apereo/cas/pull/4853#pullrequestreview-415934952", "createdAt": "2020-05-21T07:27:45Z", "commit": {"oid": "e1957c33c278db0f68ad67b101c5b1114f7b3fce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3594, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}