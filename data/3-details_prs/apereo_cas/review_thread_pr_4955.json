{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDc1OTI5", "number": 4955, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjoxNToxMVrOEqlGDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjoxNToxMVrOEqlGDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMDgzNDA2OnYy", "diffSide": "RIGHT", "path": "core/cas-server-core-services-api/src/main/java/org/apereo/cas/services/AbstractRegisteredService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjoxNToxMVrOHc3S6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjoxNToxMVrOHc3S6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyODEzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(requiredHandlers != null) {\n          \n          \n            \n                    if (requiredHandlers != null) {", "url": "https://github.com/apereo/cas/pull/4955#discussion_r500028137", "createdAt": "2020-10-06T06:15:11Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-services-api/src/main/java/org/apereo/cas/services/AbstractRegisteredService.java", "diffHunk": "@@ -216,11 +216,13 @@ public int compareTo(final RegisteredService other) {\n \n     @Deprecated(since = \"6.2.0\")\n     public void setRequiredHandlers(final Set<String> requiredHandlers) {\n-        LOGGER.debug(\"Assigning a collection of required authentication handlers to a registered service is deprecated. \"\n-            + \"This field is scheduled to be removed in the future. If you need to, consider defining an authentication policy \"\n-            + \"for the registered service instead to specify required authentication handlers [{}]\", requiredHandlers);\n-        initialize();\n-        getAuthenticationPolicy().getRequiredAuthenticationHandlers().addAll(requiredHandlers);\n+        if(requiredHandlers != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1f951e1b30e784e855314b7b6b509b1ccdbbadd"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3985, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}