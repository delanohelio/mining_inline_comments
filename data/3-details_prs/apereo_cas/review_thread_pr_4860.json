{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTE2ODQ1", "number": 4860, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMToyNDo0M1rOD-kDAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjoxNjozOFrOD_NWSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTI4ODk3OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMToyNDo0M1rOGYvVzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMToyNDo0M1rOGYvVzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NDYzNg==", "bodyText": "Small note: exception messages do no work as parameterized messages.", "url": "https://github.com/apereo/cas/pull/4860#discussion_r428594636", "createdAt": "2020-05-21T11:24:43Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "diffHunk": "@@ -50,21 +51,24 @@ protected void destroyInstance(final List list) {\n \n     @ConditionalOnMissingBean(name = \"ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer\")\n     @Bean\n-    @SneakyThrows\n     @Autowired\n     public AuthenticationEventExecutionPlanConfigurer ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer(\n         @Qualifier(\"ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean\")\n         final ListFactoryBean ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean) {\n-        val postProcessorList = ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject();\n         return plan -> {\n-            val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n-            ldap.stream()\n-                .filter(LdapPasswordSynchronizationProperties::isEnabled)\n-                .forEach(instance -> {\n-                    val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n-                    postProcessorList.add(postProcessor);\n-                    plan.registerAuthenticationPostProcessor(postProcessor);\n-                });\n+            try {\n+                val postProcessorList = Objects.requireNonNull(ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject());\n+                val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n+                ldap.stream()\n+                        .filter(LdapPasswordSynchronizationProperties::isEnabled)\n+                        .forEach(instance -> {\n+                            val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n+                            postProcessorList.add(postProcessor);\n+                            plan.registerAuthenticationPostProcessor(postProcessor);\n+                        });\n+            } catch (final Exception e) {\n+                throw new BeanCreationException(\"Error creating ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean: {}\", e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047ef70f0d7957f7296eb797daf93c4e59d3bd1c"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTI4OTM0OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMToyNDo1NVrOGYvWBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMToyNDo1NVrOGYvWBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NDY5NA==", "bodyText": "Tab back 4 spaces.", "url": "https://github.com/apereo/cas/pull/4860#discussion_r428594694", "createdAt": "2020-05-21T11:24:55Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "diffHunk": "@@ -50,21 +51,24 @@ protected void destroyInstance(final List list) {\n \n     @ConditionalOnMissingBean(name = \"ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer\")\n     @Bean\n-    @SneakyThrows\n     @Autowired\n     public AuthenticationEventExecutionPlanConfigurer ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer(\n         @Qualifier(\"ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean\")\n         final ListFactoryBean ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean) {\n-        val postProcessorList = ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject();\n         return plan -> {\n-            val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n-            ldap.stream()\n-                .filter(LdapPasswordSynchronizationProperties::isEnabled)\n-                .forEach(instance -> {\n-                    val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n-                    postProcessorList.add(postProcessor);\n-                    plan.registerAuthenticationPostProcessor(postProcessor);\n-                });\n+            try {\n+                val postProcessorList = Objects.requireNonNull(ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject());\n+                val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n+                ldap.stream()\n+                        .filter(LdapPasswordSynchronizationProperties::isEnabled)\n+                        .forEach(instance -> {\n+                            val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n+                            postProcessorList.add(postProcessor);\n+                            plan.registerAuthenticationPostProcessor(postProcessor);\n+                        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047ef70f0d7957f7296eb797daf93c4e59d3bd1c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTI5MjM3OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMToyNjowNlrOGYvX4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMToyODoxNVrOGYvbaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NTE2OQ==", "bodyText": "Also the exception message is misleading; there is nothing that would indicate the problem might have to do with ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean, if for example, something in the constructor of LdapPasswordSynchronizationAuthenticationPostProcessor goes wrong.", "url": "https://github.com/apereo/cas/pull/4860#discussion_r428595169", "createdAt": "2020-05-21T11:26:06Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "diffHunk": "@@ -50,21 +51,24 @@ protected void destroyInstance(final List list) {\n \n     @ConditionalOnMissingBean(name = \"ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer\")\n     @Bean\n-    @SneakyThrows\n     @Autowired\n     public AuthenticationEventExecutionPlanConfigurer ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer(\n         @Qualifier(\"ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean\")\n         final ListFactoryBean ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean) {\n-        val postProcessorList = ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject();\n         return plan -> {\n-            val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n-            ldap.stream()\n-                .filter(LdapPasswordSynchronizationProperties::isEnabled)\n-                .forEach(instance -> {\n-                    val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n-                    postProcessorList.add(postProcessor);\n-                    plan.registerAuthenticationPostProcessor(postProcessor);\n-                });\n+            try {\n+                val postProcessorList = Objects.requireNonNull(ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject());\n+                val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n+                ldap.stream()\n+                        .filter(LdapPasswordSynchronizationProperties::isEnabled)\n+                        .forEach(instance -> {\n+                            val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n+                            postProcessorList.add(postProcessor);\n+                            plan.registerAuthenticationPostProcessor(postProcessor);\n+                        });\n+            } catch (final Exception e) {\n+                throw new BeanCreationException(\"Error creating ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean: {}\", e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047ef70f0d7957f7296eb797daf93c4e59d3bd1c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NjA3NQ==", "bodyText": "You might want to reference ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer for the time being as the bean whose creation attempt has failed.", "url": "https://github.com/apereo/cas/pull/4860#discussion_r428596075", "createdAt": "2020-05-21T11:28:15Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "diffHunk": "@@ -50,21 +51,24 @@ protected void destroyInstance(final List list) {\n \n     @ConditionalOnMissingBean(name = \"ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer\")\n     @Bean\n-    @SneakyThrows\n     @Autowired\n     public AuthenticationEventExecutionPlanConfigurer ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer(\n         @Qualifier(\"ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean\")\n         final ListFactoryBean ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean) {\n-        val postProcessorList = ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject();\n         return plan -> {\n-            val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n-            ldap.stream()\n-                .filter(LdapPasswordSynchronizationProperties::isEnabled)\n-                .forEach(instance -> {\n-                    val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n-                    postProcessorList.add(postProcessor);\n-                    plan.registerAuthenticationPostProcessor(postProcessor);\n-                });\n+            try {\n+                val postProcessorList = Objects.requireNonNull(ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject());\n+                val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n+                ldap.stream()\n+                        .filter(LdapPasswordSynchronizationProperties::isEnabled)\n+                        .forEach(instance -> {\n+                            val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n+                            postProcessorList.add(postProcessor);\n+                            plan.registerAuthenticationPostProcessor(postProcessor);\n+                        });\n+            } catch (final Exception e) {\n+                throw new BeanCreationException(\"Error creating ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean: {}\", e.getMessage(), e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NTE2OQ=="}, "originalCommit": {"oid": "047ef70f0d7957f7296eb797daf93c4e59d3bd1c"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjA1NTY1OnYy", "diffSide": "RIGHT", "path": "api/cas-server-core-api-configuration-model/src/main/java/org/apereo/cas/configuration/model/core/authentication/passwordsync/PasswordSynchronizationProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjoxNjoxN1rOGZv4hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjoxNjoxN1rOGZv4hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MjEwMA==", "bodyText": "Should be documented in the docs.", "url": "https://github.com/apereo/cas/pull/4860#discussion_r429652100", "createdAt": "2020-05-24T16:16:17Z", "author": {"login": "mmoayyed"}, "path": "api/cas-server-core-api-configuration-model/src/main/java/org/apereo/cas/configuration/model/core/authentication/passwordsync/PasswordSynchronizationProperties.java", "diffHunk": "@@ -23,6 +23,11 @@\n public class PasswordSynchronizationProperties implements Serializable {\n     private static final long serialVersionUID = -3878237508646993100L;\n \n+    /**\n+     * Allow password synchronization to be turned off globally.\n+     */\n+    private boolean enabled = true;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7776e9c6d18412dd68d74273a93d4ea391e18696"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjA1NTc4OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjoxNjozOFrOGZv4lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjoxNjozOFrOGZv4lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MjExNg==", "bodyText": "This should go to the class definition to control all beans.", "url": "https://github.com/apereo/cas/pull/4860#discussion_r429652116", "createdAt": "2020-05-24T16:16:38Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "diffHunk": "@@ -33,8 +35,10 @@\n     @Autowired\n     private CasConfigurationProperties casProperties;\n \n+\n     @Bean\n     @SneakyThrows\n+    @ConditionalOnProperty(prefix = \"cas.authn.password-sync\", name = \"enabled\", havingValue = \"true\", matchIfMissing = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7776e9c6d18412dd68d74273a93d4ea391e18696"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4051, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}