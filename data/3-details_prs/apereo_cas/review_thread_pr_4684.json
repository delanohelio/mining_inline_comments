{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMzc2NDg1", "number": 4684, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNDozMVrODeFtSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNjo1OVrODeFv8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODc3Mzg1OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-pac4j-core-clients/src/main/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNDozMVrOFnD6Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNDozMVrOFnD6Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMjgzNA==", "bodyText": "val clazz = ClassUtils.getClass(DelegatedClientFactory.class.getClassLoader(), className);\nval factory = SAMLMessageStoreFactory.class.cast(clazz.getDeclaredConstructor().newInstance());", "url": "https://github.com/apereo/cas/pull/4684#discussion_r376502834", "createdAt": "2020-02-07T17:04:31Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pac4j-core-clients/src/main/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactory.java", "diffHunk": "@@ -419,6 +421,19 @@ protected void configureSamlClient(final Collection<IndirectClient> properties)\n                 cfg.setWantsAssertionsSigned(saml.isWantsAssertionsSigned());\n                 cfg.setUseNameQualifier(saml.isUseNameQualifier());\n                 cfg.setAttributeConsumingServiceIndex(saml.getAttributeConsumingServiceIndex());\n+                \n+                try{\n+                    cfg.setSamlMessageStoreFactory(SAMLMessageStoreFactory.class.cast(\n+                        Class.forName(saml.getMessageStoreFactory()).getDeclaredConstructor().newInstance()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21c79747888f89460da46f72f7c1920d5d82b4be"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODc3NDkzOnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-pac4j-core-clients/src/main/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNDo1N1rOFnD66g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNDo1N1rOFnD66g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMzAxOA==", "bodyText": "catch (final Exception e)", "url": "https://github.com/apereo/cas/pull/4684#discussion_r376503018", "createdAt": "2020-02-07T17:04:57Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pac4j-core-clients/src/main/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactory.java", "diffHunk": "@@ -419,6 +421,19 @@ protected void configureSamlClient(final Collection<IndirectClient> properties)\n                 cfg.setWantsAssertionsSigned(saml.isWantsAssertionsSigned());\n                 cfg.setUseNameQualifier(saml.isUseNameQualifier());\n                 cfg.setAttributeConsumingServiceIndex(saml.getAttributeConsumingServiceIndex());\n+                \n+                try{\n+                    cfg.setSamlMessageStoreFactory(SAMLMessageStoreFactory.class.cast(\n+                        Class.forName(saml.getMessageStoreFactory()).getDeclaredConstructor().newInstance()));\n+                }catch(ClassNotFoundException ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21c79747888f89460da46f72f7c1920d5d82b4be"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODc3NTk4OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-pac4j-core-clients/src/main/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactory.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNToyM1rOFnD7kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzo1NToyOFrOFnFQSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMzE4NA==", "bodyText": "Use [{}]", "url": "https://github.com/apereo/cas/pull/4684#discussion_r376503184", "createdAt": "2020-02-07T17:05:23Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pac4j-core-clients/src/main/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactory.java", "diffHunk": "@@ -419,6 +421,19 @@ protected void configureSamlClient(final Collection<IndirectClient> properties)\n                 cfg.setWantsAssertionsSigned(saml.isWantsAssertionsSigned());\n                 cfg.setUseNameQualifier(saml.isUseNameQualifier());\n                 cfg.setAttributeConsumingServiceIndex(saml.getAttributeConsumingServiceIndex());\n+                \n+                try{\n+                    cfg.setSamlMessageStoreFactory(SAMLMessageStoreFactory.class.cast(\n+                        Class.forName(saml.getMessageStoreFactory()).getDeclaredConstructor().newInstance()));\n+                }catch(ClassNotFoundException \n+                        | InstantiationException \n+                        | IllegalAccessException \n+                        | NoSuchMethodException \n+                        | InvocationTargetException e){\n+                    LOGGER.error(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21c79747888f89460da46f72f7c1920d5d82b4be"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxOTEzMA==", "bodyText": "Sorry Misagh but I didn't understand.\nWhat do you mean?", "url": "https://github.com/apereo/cas/pull/4684#discussion_r376519130", "createdAt": "2020-02-07T17:41:50Z", "author": {"login": "fmartelli"}, "path": "support/cas-server-support-pac4j-core-clients/src/main/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactory.java", "diffHunk": "@@ -419,6 +421,19 @@ protected void configureSamlClient(final Collection<IndirectClient> properties)\n                 cfg.setWantsAssertionsSigned(saml.isWantsAssertionsSigned());\n                 cfg.setUseNameQualifier(saml.isUseNameQualifier());\n                 cfg.setAttributeConsumingServiceIndex(saml.getAttributeConsumingServiceIndex());\n+                \n+                try{\n+                    cfg.setSamlMessageStoreFactory(SAMLMessageStoreFactory.class.cast(\n+                        Class.forName(saml.getMessageStoreFactory()).getDeclaredConstructor().newInstance()));\n+                }catch(ClassNotFoundException \n+                        | InstantiationException \n+                        | IllegalAccessException \n+                        | NoSuchMethodException \n+                        | InvocationTargetException e){\n+                    LOGGER.error(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMzE4NA=="}, "originalCommit": {"oid": "21c79747888f89460da46f72f7c1920d5d82b4be"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUyMjI4MA==", "bodyText": "He just means to put brackets around the braces so it will be obvious if the saml.getMessageStoreFactory() is null. Output would be ... class [org.xyz.Class]", "url": "https://github.com/apereo/cas/pull/4684#discussion_r376522280", "createdAt": "2020-02-07T17:49:25Z", "author": {"login": "hdeadman"}, "path": "support/cas-server-support-pac4j-core-clients/src/main/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactory.java", "diffHunk": "@@ -419,6 +421,19 @@ protected void configureSamlClient(final Collection<IndirectClient> properties)\n                 cfg.setWantsAssertionsSigned(saml.isWantsAssertionsSigned());\n                 cfg.setUseNameQualifier(saml.isUseNameQualifier());\n                 cfg.setAttributeConsumingServiceIndex(saml.getAttributeConsumingServiceIndex());\n+                \n+                try{\n+                    cfg.setSamlMessageStoreFactory(SAMLMessageStoreFactory.class.cast(\n+                        Class.forName(saml.getMessageStoreFactory()).getDeclaredConstructor().newInstance()));\n+                }catch(ClassNotFoundException \n+                        | InstantiationException \n+                        | IllegalAccessException \n+                        | NoSuchMethodException \n+                        | InvocationTargetException e){\n+                    LOGGER.error(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMzE4NA=="}, "originalCommit": {"oid": "21c79747888f89460da46f72f7c1920d5d82b4be"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUyNDg3NA==", "bodyText": "ah, thank you for clarification", "url": "https://github.com/apereo/cas/pull/4684#discussion_r376524874", "createdAt": "2020-02-07T17:55:28Z", "author": {"login": "fmartelli"}, "path": "support/cas-server-support-pac4j-core-clients/src/main/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactory.java", "diffHunk": "@@ -419,6 +421,19 @@ protected void configureSamlClient(final Collection<IndirectClient> properties)\n                 cfg.setWantsAssertionsSigned(saml.isWantsAssertionsSigned());\n                 cfg.setUseNameQualifier(saml.isUseNameQualifier());\n                 cfg.setAttributeConsumingServiceIndex(saml.getAttributeConsumingServiceIndex());\n+                \n+                try{\n+                    cfg.setSamlMessageStoreFactory(SAMLMessageStoreFactory.class.cast(\n+                        Class.forName(saml.getMessageStoreFactory()).getDeclaredConstructor().newInstance()));\n+                }catch(ClassNotFoundException \n+                        | InstantiationException \n+                        | IllegalAccessException \n+                        | NoSuchMethodException \n+                        | InvocationTargetException e){\n+                    LOGGER.error(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMzE4NA=="}, "originalCommit": {"oid": "21c79747888f89460da46f72f7c1920d5d82b4be"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODc4MDY0OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-pac4j-core-clients/src/test/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactoryTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNjo1OVrOFnD-bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNjo1OVrOFnD-bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMzkxNw==", "bodyText": "HttpSessionStoreFactory.class.getName()\nUse the class itself to get its name, so if it moves or is deleted, we can catch the issue at compile-time.", "url": "https://github.com/apereo/cas/pull/4684#discussion_r376503917", "createdAt": "2020-02-07T17:06:59Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pac4j-core-clients/src/test/java/org/apereo/cas/support/pac4j/authentication/DelegatedClientFactoryTests.java", "diffHunk": "@@ -79,13 +80,18 @@ public void verifyFactoryForSamlClients() throws Exception {\n         saml.setServiceProviderMetadataPath(new File(FileUtils.getTempDirectoryPath(), \"sp.xml\").getCanonicalPath());\n         saml.setServiceProviderEntityId(\"test-entityid\");\n         saml.setForceKeystoreGeneration(true);\n+        saml.setMessageStoreFactory(\"org.pac4j.saml.store.HttpSessionStoreFactory\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21c79747888f89460da46f72f7c1920d5d82b4be"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4105, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}