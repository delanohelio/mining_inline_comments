{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwODMzNTgz", "number": 4673, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNjozMToxMlrODdOUQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNjozMToxMlrODdOUQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTY5ODU2OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/config/LdapPasswordManagementConfiguration.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNjozMToxMlrOFltAig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzoxMToxOFrOFoIU8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3OTA1MA==", "bodyText": "This will not work. The setting is defined as cas.authn.pm.ldap[x].ldapUrl in master.\nTo make things consistent between master and 6.1, I suggest that if an LDAP url is not defined, a new BeanCreationException should be thrown instead, rather than ignoring the configuration silently.", "url": "https://github.com/apereo/cas/pull/4673#discussion_r375079050", "createdAt": "2020-02-05T06:31:12Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/config/LdapPasswordManagementConfiguration.java", "diffHunk": "@@ -21,6 +22,7 @@\n  * @since 5.2.0\n  */\n @Configuration(value = \"ldapPasswordManagementConfiguration\", proxyBeanMethods = false)\n+@ConditionalOnProperty(prefix = \"cas.authn.pm.ldap\", name = \"ldapUrl\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7beed0b14c7db6740ef2cb3f44cd6bcd542fc173"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA4NDYwNg==", "bodyText": "Leaving aside the issue in master, I wanted to remain consistent with what we already have on many classes like:\n@ConditionalOnProperty(prefix = \"cas.acceptableUsagePolicy\", name = \"enabled\", havingValue = \"true\", matchIfMissing = true)\npublic class CasAcceptableUsagePolicyRestConfiguration {\n\n@ConditionalOnProperty(prefix = \"cas.audit\", name = \"enabled\", havingValue = \"true\", matchIfMissing = true)\npublic class CasCoreAuditConfiguration {\n\n@ConditionalOnProperty(prefix = \"cas.events\", name = \"enabled\", havingValue = \"true\", matchIfMissing = true)\npublic class CasCoreEventsConfiguration {\n\n...\nAnd I think it would be better to have the same behavior everywhere. What do you think?", "url": "https://github.com/apereo/cas/pull/4673#discussion_r375084606", "createdAt": "2020-02-05T06:53:41Z", "author": {"login": "leleuj"}, "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/config/LdapPasswordManagementConfiguration.java", "diffHunk": "@@ -21,6 +22,7 @@\n  * @since 5.2.0\n  */\n @Configuration(value = \"ldapPasswordManagementConfiguration\", proxyBeanMethods = false)\n+@ConditionalOnProperty(prefix = \"cas.authn.pm.ldap\", name = \"ldapUrl\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3OTA1MA=="}, "originalCommit": {"oid": "7beed0b14c7db6740ef2cb3f44cd6bcd542fc173"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwMjI3Mw==", "bodyText": "Good point. You're right. To handle this then, it think we need a custom condition with a conditional annotation to loop through the collection of ldaps and skip bean creation if none is defined.", "url": "https://github.com/apereo/cas/pull/4673#discussion_r375102273", "createdAt": "2020-02-05T07:52:43Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/config/LdapPasswordManagementConfiguration.java", "diffHunk": "@@ -21,6 +22,7 @@\n  * @since 5.2.0\n  */\n @Configuration(value = \"ldapPasswordManagementConfiguration\", proxyBeanMethods = false)\n+@ConditionalOnProperty(prefix = \"cas.authn.pm.ldap\", name = \"ldapUrl\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3OTA1MA=="}, "originalCommit": {"oid": "7beed0b14c7db6740ef2cb3f44cd6bcd542fc173"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTExNjYzOQ==", "bodyText": "OK. I'll re-work on that next Tuesday.", "url": "https://github.com/apereo/cas/pull/4673#discussion_r375116639", "createdAt": "2020-02-05T08:31:37Z", "author": {"login": "leleuj"}, "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/config/LdapPasswordManagementConfiguration.java", "diffHunk": "@@ -21,6 +22,7 @@\n  * @since 5.2.0\n  */\n @Configuration(value = \"ldapPasswordManagementConfiguration\", proxyBeanMethods = false)\n+@ConditionalOnProperty(prefix = \"cas.authn.pm.ldap\", name = \"ldapUrl\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3OTA1MA=="}, "originalCommit": {"oid": "7beed0b14c7db6740ef2cb3f44cd6bcd542fc173"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyMzc5NA==", "bodyText": "In fact, after a few tests, I found out a very simple solution to check the whole property name.", "url": "https://github.com/apereo/cas/pull/4673#discussion_r377623794", "createdAt": "2020-02-11T13:11:18Z", "author": {"login": "leleuj"}, "path": "support/cas-server-support-pm-ldap/src/main/java/org/apereo/cas/config/LdapPasswordManagementConfiguration.java", "diffHunk": "@@ -21,6 +22,7 @@\n  * @since 5.2.0\n  */\n @Configuration(value = \"ldapPasswordManagementConfiguration\", proxyBeanMethods = false)\n+@ConditionalOnProperty(prefix = \"cas.authn.pm.ldap\", name = \"ldapUrl\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3OTA1MA=="}, "originalCommit": {"oid": "7beed0b14c7db6740ef2cb3f44cd6bcd542fc173"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4101, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}