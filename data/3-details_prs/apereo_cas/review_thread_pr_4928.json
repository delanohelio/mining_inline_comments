{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5ODgyNjc4", "number": 4928, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0NDoxMlrOEpCYFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMToxMjo0N1rOEqrasg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDY2MDA1OnYy", "diffSide": "RIGHT", "path": "core/cas-server-core-logging-api/src/main/java/org/apereo/cas/logging/ExceptionOnlyFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0NDoxM1rOHaePbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0NDoxM1rOHaePbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyMDQ5NQ==", "bodyText": "Seems like this can be removed, given the default impl in the parent does the same thing, and does avoid a hard-coded name.", "url": "https://github.com/apereo/cas/pull/4928#discussion_r497520495", "createdAt": "2020-09-30T13:44:13Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-logging-api/src/main/java/org/apereo/cas/logging/ExceptionOnlyFilter.java", "diffHunk": "@@ -0,0 +1,136 @@\n+package org.apereo.cas.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.Marker;\n+import org.apache.logging.log4j.core.Filter;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.Logger;\n+import org.apache.logging.log4j.core.config.Node;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.config.plugins.PluginBuilderFactory;\n+import org.apache.logging.log4j.core.filter.AbstractFilter;\n+import org.apache.logging.log4j.message.Message;\n+\n+/**\n+ * Deny any messages without an exception (for stack trace). Neutral on messages with stack trace to allow other filters.\n+ * @author Hal Deadman\n+ * @since 6.3\n+ */\n+@Plugin(name = \"ExceptionOnlyFilter\", category = Node.CATEGORY, elementType = Filter.ELEMENT_TYPE, printObject = true)\n+public class ExceptionOnlyFilter extends AbstractFilter {\n+\n+    protected ExceptionOnlyFilter() {\n+        super(Result.ACCEPT, Result.DENY);\n+    }\n+\n+    @Override\n+    public Result filter(final LogEvent event) {\n+        if (event.getThrown() != null) {\n+            return getOnMatch();\n+        }\n+        return getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final Message msg,\n+                         final Throwable t) {\n+        return t != null ? getOnMatch() : getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final Object msg,\n+                         final Throwable t) {\n+        return t != null ? getOnMatch() : getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg,\n+                         final Object... params) {\n+        if (params != null && params.length > 0 && params[params.length - 1] instanceof Throwable) {\n+            return getOnMatch();\n+        }\n+        return getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg,\n+                         final Object p0) {\n+        return super.filter(logger, level, marker, msg, p0);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1) {\n+        return super.filter(logger, level, marker, msg, p0, p1);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4, p5);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5,\n+                         final Object p6) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4, p5, p6);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5,\n+                         final Object p6, final Object p7) {\n+        return filter(logger, level, marker, msg, new Object[] {p0, p1, p2, p3, p4, p5, p6, p7});\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5,\n+                         final Object p6, final Object p7, final Object p8) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4, p5, p6, p7, p8);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5,\n+                         final Object p6, final Object p7, final Object p8, final Object p9) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"ExceptionOnlyFilter\";\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16245d8c97cd0e76371aad2ca1ee24d052921550"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDY2OTkwOnYy", "diffSide": "RIGHT", "path": "core/cas-server-core-logging-api/src/main/java/org/apereo/cas/logging/ExceptionOnlyFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0NjoxNVrOHaeVhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0NjoxNVrOHaeVhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyMjA1Mg==", "bodyText": "Looks to me like all such methods that do call the super can be removed.\nYou should only override and keep the following, as you do now:\npublic Result filter(LogEvent event) {}\n\npublic Result filter(Logger logger, Level level, Marker marker, Message msg, Throwable t) {  }\n\npublic Result filter(Logger logger, Level level, Marker marker, Object msg, Throwable t) { }\n\npublic Result filter(Logger logger, Level level, Marker marker, String msg, Object... params) { }", "url": "https://github.com/apereo/cas/pull/4928#discussion_r497522052", "createdAt": "2020-09-30T13:46:15Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-logging-api/src/main/java/org/apereo/cas/logging/ExceptionOnlyFilter.java", "diffHunk": "@@ -0,0 +1,136 @@\n+package org.apereo.cas.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.Marker;\n+import org.apache.logging.log4j.core.Filter;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.Logger;\n+import org.apache.logging.log4j.core.config.Node;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.config.plugins.PluginBuilderFactory;\n+import org.apache.logging.log4j.core.filter.AbstractFilter;\n+import org.apache.logging.log4j.message.Message;\n+\n+/**\n+ * Deny any messages without an exception (for stack trace). Neutral on messages with stack trace to allow other filters.\n+ * @author Hal Deadman\n+ * @since 6.3\n+ */\n+@Plugin(name = \"ExceptionOnlyFilter\", category = Node.CATEGORY, elementType = Filter.ELEMENT_TYPE, printObject = true)\n+public class ExceptionOnlyFilter extends AbstractFilter {\n+\n+    protected ExceptionOnlyFilter() {\n+        super(Result.ACCEPT, Result.DENY);\n+    }\n+\n+    @Override\n+    public Result filter(final LogEvent event) {\n+        if (event.getThrown() != null) {\n+            return getOnMatch();\n+        }\n+        return getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final Message msg,\n+                         final Throwable t) {\n+        return t != null ? getOnMatch() : getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final Object msg,\n+                         final Throwable t) {\n+        return t != null ? getOnMatch() : getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg,\n+                         final Object... params) {\n+        if (params != null && params.length > 0 && params[params.length - 1] instanceof Throwable) {\n+            return getOnMatch();\n+        }\n+        return getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16245d8c97cd0e76371aad2ca1ee24d052921550"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDY4ODk3OnYy", "diffSide": "RIGHT", "path": "core/cas-server-core-logging-api/src/test/resources/log4j2-test.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0OTo0MFrOHaegtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMjo0NDo1M1rOHa4sfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyNDkxOA==", "bodyText": "You should also update the default log4j2.xml file that is in the resources module I believe. That would be the file that kicks in, if the overlay does not present its own log4j2 config file in the properties.", "url": "https://github.com/apereo/cas/pull/4928#discussion_r497524918", "createdAt": "2020-09-30T13:49:40Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-logging-api/src/test/resources/log4j2-test.xml", "diffHunk": "@@ -16,6 +16,23 @@\n             </Policies>\n         </RollingFile>\n \n+        <!-- Required by CasLoggerFactoryTests. Filename is linked to the test. -->\n+        <!-- Setting mmediateFlush so test can check contents -->\n+        <RollingFile name=\"stacktracefile\" fileName=\"build/slf4j-exceptions.log\" append=\"true\"\n+                     filePattern=\"build/slf4j-%d{yyyy-MM-dd-HH}-%i.log.gz\" bufferedIO=\"false\" immediateFlush=\"true\">\n+            <PatternLayout pattern=\"%highlight{%d %p [%c] - %m%n}\" />\n+            <Policies>\n+                <OnStartupTriggeringPolicy />\n+                <SizeBasedTriggeringPolicy size=\"10 MB\"/>\n+                <TimeBasedTriggeringPolicy />\n+            </Policies>\n+        </RollingFile>\n+\n+        <CasAppender name=\"CasStackTraceFile\">\n+            <AppenderRef ref=\"stacktracefile\" />\n+            <ExceptionOnlyFilter/>\n+        </CasAppender>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16245d8c97cd0e76371aad2ca1ee24d052921550"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk1MzkxNg==", "bodyText": "That log4j2.xml in resources is already updated with stacktracefile appender that has the ExceptionOnlyFilter. I made the other changes as well.", "url": "https://github.com/apereo/cas/pull/4928#discussion_r497953916", "createdAt": "2020-10-01T02:44:53Z", "author": {"login": "hdeadman"}, "path": "core/cas-server-core-logging-api/src/test/resources/log4j2-test.xml", "diffHunk": "@@ -16,6 +16,23 @@\n             </Policies>\n         </RollingFile>\n \n+        <!-- Required by CasLoggerFactoryTests. Filename is linked to the test. -->\n+        <!-- Setting mmediateFlush so test can check contents -->\n+        <RollingFile name=\"stacktracefile\" fileName=\"build/slf4j-exceptions.log\" append=\"true\"\n+                     filePattern=\"build/slf4j-%d{yyyy-MM-dd-HH}-%i.log.gz\" bufferedIO=\"false\" immediateFlush=\"true\">\n+            <PatternLayout pattern=\"%highlight{%d %p [%c] - %m%n}\" />\n+            <Policies>\n+                <OnStartupTriggeringPolicy />\n+                <SizeBasedTriggeringPolicy size=\"10 MB\"/>\n+                <TimeBasedTriggeringPolicy />\n+            </Policies>\n+        </RollingFile>\n+\n+        <CasAppender name=\"CasStackTraceFile\">\n+            <AppenderRef ref=\"stacktracefile\" />\n+            <ExceptionOnlyFilter/>\n+        </CasAppender>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyNDkxOA=="}, "originalCommit": {"oid": "16245d8c97cd0e76371aad2ca1ee24d052921550"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTY3Nzc0OnYy", "diffSide": "RIGHT", "path": "webapp/cas-server-webapp-resources/src/main/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoxNToxMlrOHc_eSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoxNToxMlrOHc_eSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2MjEyMQ==", "bodyText": "Hi, this lonely b seems to be a typo?", "url": "https://github.com/apereo/cas/pull/4928#discussion_r500162121", "createdAt": "2020-10-06T10:15:12Z", "author": {"login": "pbodnar"}, "path": "webapp/cas-server-webapp-resources/src/main/resources/log4j2.xml", "diffHunk": "@@ -56,69 +88,76 @@\n         <CasAppender name=\"casFile\">\n             <AppenderRef ref=\"file\" />\n         </CasAppender>\n+        <CasAppender name=\"casStackTraceFile\">\n+            <AppenderRef ref=\"stacktracefile\" />\n+            <ExceptionOnlyFilter/>\n+        </CasAppender>\n         <CasAppender name=\"casConsole\">\n             <AppenderRef ref=\"console\" />\n         </CasAppender>\n     </Appenders>\n     <Loggers>\n-        <AsyncLogger name=\"org.apereo.cas\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.services\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.spring\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.services.persondir\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.web.flow\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.web.CasWebApplication\" level=\"${sys:cas.log.level}\" includeLocation=\"true\"/>\n+        <Logger name=\"org.apereo.cas\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.services\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.spring\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.services.persondir\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.web.flow\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.web.CasWebApplication\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"org.apereo.inspektr.audit.support\" additivity=\"true\" level=\"info\" includeLocation=\"true\">\n+        <Logger name=\"org.apereo.inspektr.audit.support\" additivity=\"false\" level=\"info\" includeLocation=\"${sys:log.include.location}\">\n+            <AppenderRef ref=\"casConsole\"/>\n+            <AppenderRef ref=\"casFile\"/>\n             <AppenderRef ref=\"casAudit\"/>\n-        </AsyncLogger>\n+        </Logger>\n \n-        <AsyncLogger name=\"org.springframework.boot\" level=\"${sys:spring.boot.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.context.embedded\" level=\"info\" />\n-        <AsyncLogger name=\"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration\" level=\"${sys:spring.security.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.autoconfigure.security\" level=\"${sys:spring.security.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.devtools\" level=\"debug\" />\n+        <Logger name=\"org.springframework.boot\" level=\"${sys:spring.boot.log.level}\" />\n+        <Logger name=\"org.springframework.boot.context.embedded\" level=\"info\" />\n+        <Logger name=\"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration\" level=\"${sys:spring.security.log.level}\" />\n+        <Logger name=\"org.springframework.boot.autoconfigure.security\" level=\"${sys:spring.security.log.level}\" />\n+        <Logger name=\"org.springframework.boot.devtools\" level=\"debug\" />\n         \n-        <AsyncLogger name=\"org.springframework\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.webflow\" level=\"${sys:spring.webflow.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.aop\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.session\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.scheduling\" level=\"info\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.cloud.vault\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.web.client\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.security\" level=\"${sys:spring.security.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.cloud\" level=\"${sys:spring.cloud.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.amqp\" level=\"error\" />\n-        <AsyncLogger name=\"org.springframework.integration\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.messaging\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.web\" level=\"${sys:spring.web.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.orm.jpa\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.scheduling\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.context.annotation\" level=\"off\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.web.socket\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter\" level=\"trace\" includeLocation=\"true\"/>\n-\n-        <AsyncLogger name=\"com.couchbase\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apache\" level=\"error\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"com.netflix\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.quartz\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.thymeleaf\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.pac4j\" level=\"${sys:pac4j.log.level}\" includeLocation=\"true\"/>\n+        <Logger name=\"org.springframework\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.webflow\" level=\"${sys:spring.webflow.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.aop\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.session\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.scheduling\" level=\"info\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.cloud.vault\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.web.client\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.security\" level=\"${sys:spring.security.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.cloud\" level=\"${sys:spring.cloud.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.amqp\" level=\"error\" />\n+        <Logger name=\"org.springframework.integration\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.messaging\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.web\" level=\"${sys:spring.web.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.orm.jpa\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.scheduling\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.context.annotation\" level=\"off\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.web.socket\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter\" level=\"trace\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"org.opensaml\" level=\"${sys:opensaml.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"PROTOCOL_MESSAGE\" level=\"${sys:opensaml.log.level}\" includeLocation=\"true\" />\n+        <Logger name=\"com.couchbase\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apache\" level=\"error\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"com.netflix\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.quartz\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.thymeleaf\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.pac4j\" level=\"${sys:pac4j.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"net.sf.ehcache\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"net.jradius\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.openid4java\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.ldaptive\" level=\"${sys:ldap.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"com.hazelcast\" level=\"${sys:hazelcast.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.jasig.spring\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.apache.cxf\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.apache.http\" level=\"warn\" includeLocation=\"true\"/>\n+        <Logger name=\"org.opensaml\" level=\"${sys:opensaml.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"PROTOCOL_MESSAGE\" level=\"${sys:opensaml.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n \n-        <AsyncRoot level=\"warn\">\n+        <Logger name=\"net.sf.ehcache\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"net.jradius\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.openid4java\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.ldaptive\" level=\"${sys:ldap.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"com.hazelcast\" level=\"${sys:hazelcast.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.jasig.spring\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.apache.cxf\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.apache.http\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+b", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a31c730f35cf7c9f7fe7f6bf4d4e1d83eca8f03"}, "originalPosition": 182}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTg2OTk0OnYy", "diffSide": "RIGHT", "path": "webapp/cas-server-webapp-resources/src/main/resources/log4j2.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMToxMjo0N1rOHdBVAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMToxMjo0N1rOHdBVAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE5MjUxNQ==", "bodyText": "Hi, I wonder if you also managed to make location info like line numbers (%L in a pattern) printed when async is activated? Because according to the docs, you need to:\n\nset \"includeLocation=true\" in the configuration of all relevant loggers, including the root logger\"\n\nAnd even the Log4j documentation doesn't seem to be quite correct, because according to my experiments, the includeLocation is inherited from the root to children loggers and trying to override the value doesn't have any effect. So in short, specifying includeLocation at individual loggers doesn't make much sense under these circumstances.", "url": "https://github.com/apereo/cas/pull/4928#discussion_r500192515", "createdAt": "2020-10-06T11:12:47Z", "author": {"login": "pbodnar"}, "path": "webapp/cas-server-webapp-resources/src/main/resources/log4j2.xml", "diffHunk": "@@ -56,69 +88,76 @@\n         <CasAppender name=\"casFile\">\n             <AppenderRef ref=\"file\" />\n         </CasAppender>\n+        <CasAppender name=\"casStackTraceFile\">\n+            <AppenderRef ref=\"stacktracefile\" />\n+            <ExceptionOnlyFilter/>\n+        </CasAppender>\n         <CasAppender name=\"casConsole\">\n             <AppenderRef ref=\"console\" />\n         </CasAppender>\n     </Appenders>\n     <Loggers>\n-        <AsyncLogger name=\"org.apereo.cas\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.services\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.spring\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.services.persondir\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.web.flow\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.web.CasWebApplication\" level=\"${sys:cas.log.level}\" includeLocation=\"true\"/>\n+        <Logger name=\"org.apereo.cas\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.services\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.spring\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.services.persondir\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.web.flow\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.web.CasWebApplication\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"org.apereo.inspektr.audit.support\" additivity=\"true\" level=\"info\" includeLocation=\"true\">\n+        <Logger name=\"org.apereo.inspektr.audit.support\" additivity=\"false\" level=\"info\" includeLocation=\"${sys:log.include.location}\">\n+            <AppenderRef ref=\"casConsole\"/>\n+            <AppenderRef ref=\"casFile\"/>\n             <AppenderRef ref=\"casAudit\"/>\n-        </AsyncLogger>\n+        </Logger>\n \n-        <AsyncLogger name=\"org.springframework.boot\" level=\"${sys:spring.boot.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.context.embedded\" level=\"info\" />\n-        <AsyncLogger name=\"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration\" level=\"${sys:spring.security.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.autoconfigure.security\" level=\"${sys:spring.security.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.devtools\" level=\"debug\" />\n+        <Logger name=\"org.springframework.boot\" level=\"${sys:spring.boot.log.level}\" />\n+        <Logger name=\"org.springframework.boot.context.embedded\" level=\"info\" />\n+        <Logger name=\"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration\" level=\"${sys:spring.security.log.level}\" />\n+        <Logger name=\"org.springframework.boot.autoconfigure.security\" level=\"${sys:spring.security.log.level}\" />\n+        <Logger name=\"org.springframework.boot.devtools\" level=\"debug\" />\n         \n-        <AsyncLogger name=\"org.springframework\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.webflow\" level=\"${sys:spring.webflow.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.aop\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.session\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.scheduling\" level=\"info\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.cloud.vault\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.web.client\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.security\" level=\"${sys:spring.security.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.cloud\" level=\"${sys:spring.cloud.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.amqp\" level=\"error\" />\n-        <AsyncLogger name=\"org.springframework.integration\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.messaging\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.web\" level=\"${sys:spring.web.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.orm.jpa\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.scheduling\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.context.annotation\" level=\"off\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.web.socket\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter\" level=\"trace\" includeLocation=\"true\"/>\n-\n-        <AsyncLogger name=\"com.couchbase\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apache\" level=\"error\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"com.netflix\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.quartz\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.thymeleaf\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.pac4j\" level=\"${sys:pac4j.log.level}\" includeLocation=\"true\"/>\n+        <Logger name=\"org.springframework\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.webflow\" level=\"${sys:spring.webflow.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.aop\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.session\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.scheduling\" level=\"info\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.cloud.vault\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.web.client\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.security\" level=\"${sys:spring.security.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.cloud\" level=\"${sys:spring.cloud.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.amqp\" level=\"error\" />\n+        <Logger name=\"org.springframework.integration\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.messaging\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.web\" level=\"${sys:spring.web.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.orm.jpa\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.scheduling\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.context.annotation\" level=\"off\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.web.socket\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter\" level=\"trace\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"org.opensaml\" level=\"${sys:opensaml.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"PROTOCOL_MESSAGE\" level=\"${sys:opensaml.log.level}\" includeLocation=\"true\" />\n+        <Logger name=\"com.couchbase\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apache\" level=\"error\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"com.netflix\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.quartz\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.thymeleaf\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.pac4j\" level=\"${sys:pac4j.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"net.sf.ehcache\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"net.jradius\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.openid4java\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.ldaptive\" level=\"${sys:ldap.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"com.hazelcast\" level=\"${sys:hazelcast.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.jasig.spring\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.apache.cxf\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.apache.http\" level=\"warn\" includeLocation=\"true\"/>\n+        <Logger name=\"org.opensaml\" level=\"${sys:opensaml.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"PROTOCOL_MESSAGE\" level=\"${sys:opensaml.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n \n-        <AsyncRoot level=\"warn\">\n+        <Logger name=\"net.sf.ehcache\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"net.jradius\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.openid4java\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.ldaptive\" level=\"${sys:ldap.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"com.hazelcast\" level=\"${sys:hazelcast.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.jasig.spring\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.apache.cxf\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.apache.http\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+b\n+        <Root level=\"warn\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a31c730f35cf7c9f7fe7f6bf4d4e1d83eca8f03"}, "originalPosition": 183}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4019, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}