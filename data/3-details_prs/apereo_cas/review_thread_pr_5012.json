{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTAyNDg1", "number": 5012, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjozMzoxOVrOFFa5wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNzoxMzowMlrOFHbL0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjI3OTY5OnYy", "diffSide": "RIGHT", "path": ".github/workflows/cas-build.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjozMzoxOVrOIF7FZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjozMzoxOVrOIF7FZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MTgzMA==", "bodyText": "Note that this cannot pass. You want the same set of tests to run all platforms equally, without any manual work whatsoever. Maintaining a separate list of test categories for windows vs unix vs something else is never going to be maintainable long-term.", "url": "https://github.com/apereo/cas/pull/5012#discussion_r543081830", "createdAt": "2020-12-15T06:33:19Z", "author": {"login": "mmoayyed"}, "path": ".github/workflows/cas-build.yml", "diffHunk": "@@ -100,6 +100,10 @@ jobs:\n             ${{ runner.os }}-gradle-\n       - name: Build with Gradle\n         run: ./gradlew --build-cache --configure-on-demand --no-daemon build -x test -x javadoc -x check --parallel\n+      - name: Run tests on Windows and Mac\n+        run: ./testcas.sh --category simple,mfa,files,groovy,webflow,webflow-config,webflow-actions,webflow-events,webflow-mfa-actions,attributes,services,expiration-policy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b957fea0a5457ee417ea5deaec5308374538b0e3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTA1MDE1OnYy", "diffSide": "RIGHT", "path": "core/cas-server-core-services-registry/src/main/java/org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDo0MTo0OFrOIIlcKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQyMToxMzozNlrOII-f5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg3MjkzOA==", "bodyText": "This block of code is due to svcFile.getCanonicalPath() throwing an IOException when one of the tests passes in a filename with some characters that windows doesn't like. The lines are showing as not covered but that is only because the coverage is calculated on Ubuntu. I suppose to get coverage we would need a filename that throws IOException on Ubuntu. The getCanonicalPath() method is only called in this method in a debug statement so another alternative would be to change that to getName() or some other method that doesn't throw IOException.\nI think this is the only non-test code changed in this PR.", "url": "https://github.com/apereo/cas/pull/5012#discussion_r545872938", "createdAt": "2020-12-18T14:41:48Z", "author": {"login": "hdeadman"}, "path": "core/cas-server-core-services-registry/src/main/java/org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry.java", "diffHunk": "@@ -387,9 +387,13 @@ protected RegisteredService getRegisteredServiceFromFile(final File file) {\n     protected File getRegisteredServiceFileName(final RegisteredService service) {\n         val fileName = resourceNamingStrategy.build(service, getExtensions()[0]);\n         val svcFile = new File(this.serviceRegistryDirectory.toFile(), fileName);\n+        try {\n+            svcFile.getCanonicalPath();\n+        } catch (final IOException e) {\n+            throw new IllegalArgumentException(\"File name is invalid: \" + e.getMessage(), e);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63d421306d3b88b8ab7239207853e02bf712add9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg5NzMzNg==", "bodyText": "This looks odd just by the looks of it, to use a method seemingly to just catch an exception, without using its return value. Could we use getPath or getAbsolutePath ?", "url": "https://github.com/apereo/cas/pull/5012#discussion_r545897336", "createdAt": "2020-12-18T15:09:39Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-services-registry/src/main/java/org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry.java", "diffHunk": "@@ -387,9 +387,13 @@ protected RegisteredService getRegisteredServiceFromFile(final File file) {\n     protected File getRegisteredServiceFileName(final RegisteredService service) {\n         val fileName = resourceNamingStrategy.build(service, getExtensions()[0]);\n         val svcFile = new File(this.serviceRegistryDirectory.toFile(), fileName);\n+        try {\n+            svcFile.getCanonicalPath();\n+        } catch (final IOException e) {\n+            throw new IllegalArgumentException(\"File name is invalid: \" + e.getMessage(), e);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg3MjkzOA=="}, "originalCommit": {"oid": "63d421306d3b88b8ab7239207853e02bf712add9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4MzQ5Mw==", "bodyText": "Yeah the test passes if the debug uses getAbsolutePath instead of getCanonicalPath so I changed it to that.", "url": "https://github.com/apereo/cas/pull/5012#discussion_r546283493", "createdAt": "2020-12-19T21:13:36Z", "author": {"login": "hdeadman"}, "path": "core/cas-server-core-services-registry/src/main/java/org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry.java", "diffHunk": "@@ -387,9 +387,13 @@ protected RegisteredService getRegisteredServiceFromFile(final File file) {\n     protected File getRegisteredServiceFileName(final RegisteredService service) {\n         val fileName = resourceNamingStrategy.build(service, getExtensions()[0]);\n         val svcFile = new File(this.serviceRegistryDirectory.toFile(), fileName);\n+        try {\n+            svcFile.getCanonicalPath();\n+        } catch (final IOException e) {\n+            throw new IllegalArgumentException(\"File name is invalid: \" + e.getMessage(), e);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg3MjkzOA=="}, "originalCommit": {"oid": "63d421306d3b88b8ab7239207853e02bf712add9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzI5NzQ1OnYy", "diffSide": "RIGHT", "path": "ci/init-build.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNzoxMzowM1rOII5qPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNzoxMzowM1rOII5qPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIwNDIyMA==", "bodyText": "This makes this script work on Windows git bash (without an error about sudo not existing). Since it is using Windows \"Git Bash\" (rather than msys2 which is also on the github CI windows image), the home directory is the same as it would be in powershell or cmd.exe (so the gradle.properties being created is correct), but when it is making these directories, they are in the Git Bash root folder which is not easily accessible in same path on C or D drive in powershell. The build and tests eventually run in powershell b/c that is default shell on windows, although we could specify that they run in bash. To make folders on C: or D: drives it would need to prefix all the paths with /c or /d but I don't know how to get the current drive letter in Git Bash (doesn't have that concept like powershell does) and its not really important because these folders aren't currently required by the tests (on Windows).", "url": "https://github.com/apereo/cas/pull/5012#discussion_r546204220", "createdAt": "2020-12-19T07:13:03Z", "author": {"login": "hdeadman"}, "path": "ci/init-build.sh", "diffHunk": "@@ -18,8 +18,15 @@ echo -e \"User: ${USER}\"\n echo -e \"User HOME directory: ${HOME}\"\n echo -e \"************************************\"\n \n+echo -e \"Checking for sudo, not available on Windows bash\"\n+SUDO=\n+type sudo &> /dev/null\n+if [ $? -eq 0 ]; then\n+  SUDO=sudo\n+fi\n+\n echo -e \"Setting build environment...\\n\"\n-sudo mkdir -p /etc/cas/config /etc/cas/saml /etc/cas/services\n+$SUDO mkdir -p /etc/cas/config /etc/cas/saml /etc/cas/services /tmp /temp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963f84537cb6e834febc3556b5bd9c2698bbccc0"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4006, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}