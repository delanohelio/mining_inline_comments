{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyODI0NTQx", "number": 4967, "title": "Password management: Allow an authenticated user to reset password", "bodyText": "Hello,\nWhen you're using the password reset link received by Mail or SMS when you're already connected, you'll have a 500 error and it's impossible to reset the password.\nAccess logs:\n192.168.176.1 - - [01/Nov/2020:12:22:09 +0000] \"GET /login?pswdrst=TST-1-******************************&service=https%3A%2F%2Fcasserver%3A8443%2Foauth2.0%2FcallbackAuthorize%3Fclient_id%3Dclient%26redirect_uri%3Dhttps%253A%252F%252Fwww.client.com%26response_type%3Dcode%26client_name%3DCasOAuthClient HTTP/1.1\" 302 -\n\n192.168.176.1 - - [01/Nov/2020:12:22:09 +0000] \"GET /oauth2.0/callbackAuthorize?client_id=client&redirect_uri=https%3A%2F%2Fwww.client.com&response_type=code&client_name=CasOAuthClient&ticket=ST-2-**************** HTTP/1.1\" 302 -\n\n192.168.176.1 - - [01/Nov/2020:12:22:09 +0000] \"GET /oauth2.0/callbackAuthorize?client_id=client&redirect_uri=https%3A%2F%2Fwww.client.com&response_type=code&client_name=CasOAuthClient&ticket=ST-2-X************** HTTP/1.1\" 500 14379\n\nCas logs:\n2020-11-01 12:22:09,691 DEBUG [org.apereo.cas.web.FlowExecutionExceptionResolver] - <Ignoring the received exception [org.apereo.cas.ticket.InvalidTicketException] due to a type mismatch with handler [org.apereo.cas.support.oauth.web.endpoints.OAuth20CallbackAuthorizeEndpointController#handleRequest(HttpServletRequest, HttpServletResponse)]>\n2020-11-01 12:22:09,691 DEBUG [org.apereo.cas.web.FlowExecutionExceptionResolver] - <Ignoring the received exception [org.apereo.cas.ticket.InvalidTicketException] due to a type mismatch with handler [org.apereo.cas.support.oauth.web.endpoints.OAuth20CallbackAuthorizeEndpointController#handleRequest(HttpServletRequest, HttpServletResponse)]>\n2020-11-01 12:22:09,699 ERROR [org.springframework.boot.web.servlet.support.ErrorPageFilter] - <Forwarding to error page from request [/oauth2.0/callbackAuthorize] due to exception [null]>\n\nWhen you're using the CAS Protocol and not oauth or oidc, the link is redirecting you to the service without error.\nFixed by adding the renew parameter to the link.\nRegards,\nJulien", "createdAt": "2020-10-30T07:56:44Z", "url": "https://github.com/apereo/cas/pull/4967", "merged": true, "mergeCommit": {"oid": "c0892b1c07ef568e531a10a45cd131135e1014c0"}, "closed": true, "closedAt": "2020-11-11T09:03:07Z", "author": {"login": "julienhuon"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdX6W8hgH2gAyNTEyODI0NTQxOmVhMDEyYjI0NTE5NTI1NWY1NDY3NGM2ZDAzNjBhYWMxMzc0NjNhYjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbFLWngH2gAyNTEyODI0NTQxOjNiYWI5NDJiMGEwMDU5YzIxNDM3MjNlY2IzMTYzZTBjMzk5NmJkOWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ea012b245195255f54674c6d0360aac137463ab8", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/ea012b245195255f54674c6d0360aac137463ab8", "committedDate": "2020-10-31T12:17:03Z", "message": "Allow an authenticated user to renew his password by disabling the sso on the flow."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b1567075c670bee47332bb586e001d7deba7b01", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/8b1567075c670bee47332bb586e001d7deba7b01", "committedDate": "2020-10-29T23:22:31Z", "message": "Allow an authenticated user to renew his password."}, "afterCommit": {"oid": "ea012b245195255f54674c6d0360aac137463ab8", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/ea012b245195255f54674c6d0360aac137463ab8", "committedDate": "2020-10-31T12:17:03Z", "message": "Allow an authenticated user to renew his password by disabling the sso on the flow."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ed841257400b619d6ee82513ba585dcbcdc8392", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/2ed841257400b619d6ee82513ba585dcbcdc8392", "committedDate": "2020-10-31T18:12:44Z", "message": "Only use the PM SSO Strategy when you're trying to reset the password"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bbd3c8361c3ffcc40ff819d42f10196fae9801c", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/1bbd3c8361c3ffcc40ff819d42f10196fae9801c", "committedDate": "2020-10-31T19:25:23Z", "message": "Add unit tests for the PM SSO Strategy."}, "afterCommit": {"oid": "b70323c44e412392c1c86e9a8cfa61273f0f558e", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/b70323c44e412392c1c86e9a8cfa61273f0f558e", "committedDate": "2020-10-31T19:50:28Z", "message": "Add unit tests for the PM SSO Strategy."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82f27b1dc173f68599938d7db55e077ebdbe3cfb", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/82f27b1dc173f68599938d7db55e077ebdbe3cfb", "committedDate": "2020-10-31T19:58:43Z", "message": "Add unit tests for the PM SSO Strategy."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b70323c44e412392c1c86e9a8cfa61273f0f558e", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/b70323c44e412392c1c86e9a8cfa61273f0f558e", "committedDate": "2020-10-31T19:50:28Z", "message": "Add unit tests for the PM SSO Strategy."}, "afterCommit": {"oid": "82f27b1dc173f68599938d7db55e077ebdbe3cfb", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/82f27b1dc173f68599938d7db55e077ebdbe3cfb", "committedDate": "2020-10-31T19:58:43Z", "message": "Add unit tests for the PM SSO Strategy."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e55b5889d504f35dc1cb6c1179a324423feea6b8", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/e55b5889d504f35dc1cb6c1179a324423feea6b8", "committedDate": "2020-11-01T14:00:29Z", "message": "Only Import assertTrue/assertFalse."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMjk5NTY3", "url": "https://github.com/apereo/cas/pull/4967#pullrequestreview-522299567", "createdAt": "2020-11-03T09:10:50Z", "commit": {"oid": "e55b5889d504f35dc1cb6c1179a324423feea6b8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOToxMDo1MVrOHslneQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOToxMDo1MVrOHslneQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUxNTcwNQ==", "bodyText": "I think this is a good starting point as a check. Is there something else, in addition to the request parameter check, that can be done to detect the request as a password-reset? Perhaps something in the RequestContext that track this execution as \"this is a password reset\"?\nFor example, a password-reset request should be:\n\nThere is a token in the request\nIt's valid token, has not been used, has not expired, etc.\nOnly then, when all those checks pass should SSO be disabled.\n\nI suspect those checks are already part of the flow, (you should not have to repeat them here) and their result is tracked in RequestContext, or should be if not already.\nThere is no danger in this solution per se; I'd like to see if there is a way we could harden the check, and not allow bypassing of SSO only with a simple request parameter (that anyone any way can supply with any value).", "url": "https://github.com/apereo/cas/pull/4967#discussion_r516515705", "createdAt": "2020-11-03T09:10:51Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pm-webflow/src/main/java/org/apereo/cas/pm/web/flow/PasswordManagementSingleSignOnParticipationStrategy.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.apereo.cas.pm.web.flow;\n+\n+import org.apereo.cas.web.flow.SingleSignOnParticipationStrategy;\n+\n+import lombok.val;\n+import org.springframework.webflow.execution.RequestContext;\n+\n+/**\n+ * This is {@link PasswordManagementSingleSignOnParticipationStrategy}.\n+ *\n+ * @author Julien Huon\n+ * @since 6.3.0\n+ */\n+public class PasswordManagementSingleSignOnParticipationStrategy implements SingleSignOnParticipationStrategy {\n+\n+    @Override\n+    public boolean supports(final RequestContext requestContext) {\n+        val params = requestContext.getRequestParameters();\n+        return params.contains(PasswordManagementWebflowUtils.REQUEST_PARAMETER_NAME_PASSWORD_RESET_TOKEN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e55b5889d504f35dc1cb6c1179a324423feea6b8"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c39eca461bf28ea0282fa5fcdcee6ac3c48182c3", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/c39eca461bf28ea0282fa5fcdcee6ac3c48182c3", "committedDate": "2020-11-06T09:37:28Z", "message": "The PM SSO Strategy will be used only if the request contain a password reset token which exists in the registry."}, "afterCommit": {"oid": "e55b5889d504f35dc1cb6c1179a324423feea6b8", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/e55b5889d504f35dc1cb6c1179a324423feea6b8", "committedDate": "2020-11-01T14:00:29Z", "message": "Only Import assertTrue/assertFalse."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac69cc3b53c8718e9da28919c19e1cd20138b2da", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/ac69cc3b53c8718e9da28919c19e1cd20138b2da", "committedDate": "2020-11-06T09:42:46Z", "message": "The PM SSO Strategy will be used only if the request contain a password reset token which exists in the registry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c987292171630c6b31bd2416192516d013a93dd5", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/c987292171630c6b31bd2416192516d013a93dd5", "committedDate": "2020-11-07T09:16:31Z", "message": "Fix tests & improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8072030e02f017dbd863f50cdc0ed02fe5fb07c", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/a8072030e02f017dbd863f50cdc0ed02fe5fb07c", "committedDate": "2020-11-07T09:30:03Z", "message": "Fix imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1OTY3MzQ3", "url": "https://github.com/apereo/cas/pull/4967#pullrequestreview-525967347", "createdAt": "2020-11-09T07:05:24Z", "commit": {"oid": "a8072030e02f017dbd863f50cdc0ed02fe5fb07c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNzowNToyNFrOHvhGIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNzowNToyNFrOHvhGIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU4NzM2MQ==", "bodyText": "You should be using CentralAuthenticationService, and then catch exceptions when you get the ticket. Also, please add logging statements under debug/trace to the method here to explain the behavior.", "url": "https://github.com/apereo/cas/pull/4967#discussion_r519587361", "createdAt": "2020-11-09T07:05:24Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pm-webflow/src/main/java/org/apereo/cas/pm/web/flow/PasswordManagementSingleSignOnParticipationStrategy.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.apereo.cas.pm.web.flow;\n+\n+import org.apereo.cas.ticket.registry.TicketRegistry;\n+import org.apereo.cas.web.flow.SingleSignOnParticipationStrategy;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.val;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.webflow.execution.RequestContext;\n+\n+/**\n+ * This is {@link PasswordManagementSingleSignOnParticipationStrategy}.\n+ *\n+ * @author Julien Huon\n+ * @since 6.3.0\n+ */\n+@RequiredArgsConstructor\n+public class PasswordManagementSingleSignOnParticipationStrategy implements SingleSignOnParticipationStrategy {\n+    private final TicketRegistry ticketRegistry;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8072030e02f017dbd863f50cdc0ed02fe5fb07c"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9e6ce53bc513984f2ac095c7308946945b708ba", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/c9e6ce53bc513984f2ac095c7308946945b708ba", "committedDate": "2020-11-09T16:57:44Z", "message": "- Use centralAuthenticationService instead of ticketRegistry.\n\n- Add TRACE logs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2ODU0MjU5", "url": "https://github.com/apereo/cas/pull/4967#pullrequestreview-526854259", "createdAt": "2020-11-10T05:01:36Z", "commit": {"oid": "c9e6ce53bc513984f2ac095c7308946945b708ba"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNTowMTozNlrOHwL1Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNTowMTozNlrOHwL1Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NzUyNw==", "bodyText": "These lines are unnecessary. The ticket that is returned from CAS should always be valid, or else exceptions are thrown.", "url": "https://github.com/apereo/cas/pull/4967#discussion_r520287527", "createdAt": "2020-11-10T05:01:36Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-pm-webflow/src/main/java/org/apereo/cas/pm/web/flow/PasswordManagementSingleSignOnParticipationStrategy.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.apereo.cas.pm.web.flow;\n+\n+import org.apereo.cas.CentralAuthenticationService;\n+import org.apereo.cas.ticket.TransientSessionTicket;\n+import org.apereo.cas.web.flow.SingleSignOnParticipationStrategy;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import lombok.val;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.webflow.execution.RequestContext;\n+\n+/**\n+ * This is {@link PasswordManagementSingleSignOnParticipationStrategy}.\n+ *\n+ * @author Julien Huon\n+ * @since 6.3.0\n+ */\n+@Slf4j\n+@RequiredArgsConstructor\n+public class PasswordManagementSingleSignOnParticipationStrategy implements SingleSignOnParticipationStrategy {\n+    private final CentralAuthenticationService centralAuthenticationService;\n+\n+    @Override\n+    public boolean supports(final RequestContext requestContext) {\n+        LOGGER.trace(\"Evaluating if the Password Reset request is valid\");\n+        val transientTicket = requestContext\n+            .getRequestParameters()\n+            .get(PasswordManagementWebflowUtils.REQUEST_PARAMETER_NAME_PASSWORD_RESET_TOKEN);\n+\n+        if (StringUtils.isBlank(transientTicket)) {\n+            LOGGER.trace(\"Password reset token is missing\");\n+            return false;\n+        }\n+\n+        try {\n+            val ticket = centralAuthenticationService.getTicket(transientTicket, TransientSessionTicket.class);\n+            if (ticket != null || !ticket.isExpired()) {\n+                LOGGER.trace(\"Token ticket [{}] is valid, SSO will be disabled\", transientTicket);\n+                return true;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e6ce53bc513984f2ac095c7308946945b708ba"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bab942b0a0059c2143723ecb3163e0c3996bd9b", "author": {"user": {"login": "julienhuon", "name": "Julien Huon"}}, "url": "https://github.com/apereo/cas/commit/3bab942b0a0059c2143723ecb3163e0c3996bd9b", "committedDate": "2020-11-10T08:35:07Z", "message": "remove unnecessary checks."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3535, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}