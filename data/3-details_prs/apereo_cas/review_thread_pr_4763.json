{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4Mzk1MDA3", "number": 4763, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjowMzozMFrODpepqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjowOTozM1rODpewmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODIwMzk1OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshTokenFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjowMzozMVrOF4rb4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxMDozMToyOFrOF5upyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NjIyNA==", "bodyText": "Looks like this might be better served as either String accessToken, or a collection of Collection<String> accessTokens", "url": "https://github.com/apereo/cas/pull/4763#discussion_r394976224", "createdAt": "2020-03-19T12:03:31Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshTokenFactory.java", "diffHunk": "@@ -24,12 +24,14 @@\n      * @param ticketGrantingTicket the ticket granting ticket\n      * @param scopes               the scopes\n      * @param clientId             the client id\n+     * @param descendantTicket     the descendant access tokens\n      * @param requestClaims        the request claims\n      * @return the refresh token\n      */\n     OAuth20RefreshToken create(Service service, Authentication authentication,\n                                TicketGrantingTicket ticketGrantingTicket,\n                                Collection<String> scopes,\n                                String clientId,\n+                               String descendantTicket,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3NzUxMw==", "bodyText": "Done", "url": "https://github.com/apereo/cas/pull/4763#discussion_r396077513", "createdAt": "2020-03-22T10:31:28Z", "author": {"login": "julienhuon"}, "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshTokenFactory.java", "diffHunk": "@@ -24,12 +24,14 @@\n      * @param ticketGrantingTicket the ticket granting ticket\n      * @param scopes               the scopes\n      * @param clientId             the client id\n+     * @param descendantTicket     the descendant access tokens\n      * @param requestClaims        the request claims\n      * @return the refresh token\n      */\n     OAuth20RefreshToken create(Service service, Authentication authentication,\n                                TicketGrantingTicket ticketGrantingTicket,\n                                Collection<String> scopes,\n                                String clientId,\n+                               String descendantTicket,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NjIyNA=="}, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODIwOTA3OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshToken.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjowNToyMVrOF4rfTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxMDozMTo0MlrOF5up2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NzEwMA==", "bodyText": "Update the javadoc to include:\n   The revocation of a refresh token may cause the revocation of related\n   tokens and the underlying authorization grant. If a refresh token is\n   revoked, the authorization server SHOULD\n   also invalidate all access tokens based on the same authorization\n   grant. Here, we track the access tokens.", "url": "https://github.com/apereo/cas/pull/4763#discussion_r394977100", "createdAt": "2020-03-19T12:05:21Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshToken.java", "diffHunk": "@@ -15,4 +18,22 @@\n      * The prefix for refresh tokens.\n      */\n     String PREFIX = \"RT\";\n+\n+    /**\n+     * Client id for whom this access token was issued.\n+     *\n+     * @return client id.\n+     * @since 6.2\n+     */\n+    String getClientId();\n+\n+    /**\n+     * Gets descendant OAuth access tokens.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3NzUzMA==", "bodyText": "Done", "url": "https://github.com/apereo/cas/pull/4763#discussion_r396077530", "createdAt": "2020-03-22T10:31:42Z", "author": {"login": "julienhuon"}, "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshToken.java", "diffHunk": "@@ -15,4 +18,22 @@\n      * The prefix for refresh tokens.\n      */\n     String PREFIX = \"RT\";\n+\n+    /**\n+     * Client id for whom this access token was issued.\n+     *\n+     * @return client id.\n+     * @since 6.2\n+     */\n+    String getClientId();\n+\n+    /**\n+     * Gets descendant OAuth access tokens.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NzEwMA=="}, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODIxMDU2OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshToken.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjowNTo1M1rOF4rgQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxODowNzo0MlrOF5xdeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NzM0NQ==", "bodyText": "Since we are only going to track access tokens for a refresh-token, it's best to simply rename this to getAccessTokens().\nAlso please change the return type to a Set.", "url": "https://github.com/apereo/cas/pull/4763#discussion_r394977345", "createdAt": "2020-03-19T12:05:53Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshToken.java", "diffHunk": "@@ -15,4 +18,22 @@\n      * The prefix for refresh tokens.\n      */\n     String PREFIX = \"RT\";\n+\n+    /**\n+     * Client id for whom this access token was issued.\n+     *\n+     * @return client id.\n+     * @since 6.2\n+     */\n+    String getClientId();\n+\n+    /**\n+     * Gets descendant OAuth access tokens.\n+     *\n+     * @return the descendant tickets\n+     * @since 6.2\n+     */\n+    default Collection<String> getDescendantTickets() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3Nzc5Ng==", "bodyText": "Instead of Collection ? Right ?", "url": "https://github.com/apereo/cas/pull/4763#discussion_r396077796", "createdAt": "2020-03-22T10:34:30Z", "author": {"login": "julienhuon"}, "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshToken.java", "diffHunk": "@@ -15,4 +18,22 @@\n      * The prefix for refresh tokens.\n      */\n     String PREFIX = \"RT\";\n+\n+    /**\n+     * Client id for whom this access token was issued.\n+     *\n+     * @return client id.\n+     * @since 6.2\n+     */\n+    String getClientId();\n+\n+    /**\n+     * Gets descendant OAuth access tokens.\n+     *\n+     * @return the descendant tickets\n+     * @since 6.2\n+     */\n+    default Collection<String> getDescendantTickets() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NzM0NQ=="}, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMzUxMg==", "bodyText": "Done", "url": "https://github.com/apereo/cas/pull/4763#discussion_r396123512", "createdAt": "2020-03-22T18:07:42Z", "author": {"login": "julienhuon"}, "path": "support/cas-server-support-oauth-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20RefreshToken.java", "diffHunk": "@@ -15,4 +18,22 @@\n      * The prefix for refresh tokens.\n      */\n     String PREFIX = \"RT\";\n+\n+    /**\n+     * Client id for whom this access token was issued.\n+     *\n+     * @return client id.\n+     * @since 6.2\n+     */\n+    String getClientId();\n+\n+    /**\n+     * Gets descendant OAuth access tokens.\n+     *\n+     * @return the descendant tickets\n+     * @since 6.2\n+     */\n+    default Collection<String> getDescendantTickets() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NzM0NQ=="}, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODIxMjg1OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/OAuth20DefaultTokenGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjowNjozNVrOF4rhuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxMDozMTo1MlrOF5up5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NzcyMQ==", "bodyText": "Pass the access token, and the use the id in the callee.", "url": "https://github.com/apereo/cas/pull/4763#discussion_r394977721", "createdAt": "2020-03-19T12:06:35Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/OAuth20DefaultTokenGenerator.java", "diffHunk": "@@ -205,10 +205,10 @@ private OAuth20DeviceToken getDeviceTokenFromTicketRegistry(final String deviceC\n         addTicketToRegistry(accessToken, ticketGrantingTicket);\n         LOGGER.debug(\"Added access token [{}] to registry\", accessToken);\n \n-        updateOAuthCode(holder);\n+        updateOAuthCode(holder, accessToken.getId());\n \n         val refreshToken = FunctionUtils.doIf(holder.isGenerateRefreshToken(),\n-            () -> generateRefreshToken(holder),\n+            () -> generateRefreshToken(holder, accessToken.getId()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3NzU0Mg==", "bodyText": "Done", "url": "https://github.com/apereo/cas/pull/4763#discussion_r396077542", "createdAt": "2020-03-22T10:31:52Z", "author": {"login": "julienhuon"}, "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/OAuth20DefaultTokenGenerator.java", "diffHunk": "@@ -205,10 +205,10 @@ private OAuth20DeviceToken getDeviceTokenFromTicketRegistry(final String deviceC\n         addTicketToRegistry(accessToken, ticketGrantingTicket);\n         LOGGER.debug(\"Added access token [{}] to registry\", accessToken);\n \n-        updateOAuthCode(holder);\n+        updateOAuthCode(holder, accessToken.getId());\n \n         val refreshToken = FunctionUtils.doIf(holder.isGenerateRefreshToken(),\n-            () -> generateRefreshToken(holder),\n+            () -> generateRefreshToken(holder, accessToken.getId()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3NzcyMQ=="}, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODIxMzExOnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/OAuth20DefaultTokenGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjowNjo0MlrOF4rh5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxMDozMjowM1rOF5up9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3Nzc2NA==", "bodyText": "Pass the access token, and the use the id in the callee.", "url": "https://github.com/apereo/cas/pull/4763#discussion_r394977764", "createdAt": "2020-03-19T12:06:42Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/OAuth20DefaultTokenGenerator.java", "diffHunk": "@@ -205,10 +205,10 @@ private OAuth20DeviceToken getDeviceTokenFromTicketRegistry(final String deviceC\n         addTicketToRegistry(accessToken, ticketGrantingTicket);\n         LOGGER.debug(\"Added access token [{}] to registry\", accessToken);\n \n-        updateOAuthCode(holder);\n+        updateOAuthCode(holder, accessToken.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3NzU1Nw==", "bodyText": "Done", "url": "https://github.com/apereo/cas/pull/4763#discussion_r396077557", "createdAt": "2020-03-22T10:32:03Z", "author": {"login": "julienhuon"}, "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/OAuth20DefaultTokenGenerator.java", "diffHunk": "@@ -205,10 +205,10 @@ private OAuth20DeviceToken getDeviceTokenFromTicketRegistry(final String deviceC\n         addTicketToRegistry(accessToken, ticketGrantingTicket);\n         LOGGER.debug(\"Added access token [{}] to registry\", accessToken);\n \n-        updateOAuthCode(holder);\n+        updateOAuthCode(holder, accessToken.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3Nzc2NA=="}, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODIyMDEzOnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/OAuth20DefaultTokenGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjowODo1NVrOF4rmWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxNjo0NjozMFrOF5w8qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3ODkwNw==", "bodyText": "Perhaps we could hide this a bit, by adding a isCodeToken() or isRefreshToken() type of methods to the holder, and move the conditions to the holder itself.", "url": "https://github.com/apereo/cas/pull/4763#discussion_r394978907", "createdAt": "2020-03-19T12:08:55Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/OAuth20DefaultTokenGenerator.java", "diffHunk": "@@ -221,9 +221,14 @@ private OAuth20DeviceToken getDeviceTokenFromTicketRegistry(final String deviceC\n      * Update OAuth code.\n      *\n      * @param holder the holder\n+     * @param accessToken the accessToken\n      */\n-    protected void updateOAuthCode(final AccessTokenRequestDataHolder holder) {\n-        if (holder.getToken() instanceof OAuth20Code) {\n+    protected void updateOAuthCode(final AccessTokenRequestDataHolder holder, final String accessToken) {\n+        if (holder.getToken() instanceof OAuth20RefreshToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjExNTExMg==", "bodyText": "Done", "url": "https://github.com/apereo/cas/pull/4763#discussion_r396115112", "createdAt": "2020-03-22T16:46:30Z", "author": {"login": "julienhuon"}, "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/support/oauth/web/response/accesstoken/OAuth20DefaultTokenGenerator.java", "diffHunk": "@@ -221,9 +221,14 @@ private OAuth20DeviceToken getDeviceTokenFromTicketRegistry(final String deviceC\n      * Update OAuth code.\n      *\n      * @param holder the holder\n+     * @param accessToken the accessToken\n      */\n-    protected void updateOAuthCode(final AccessTokenRequestDataHolder holder) {\n-        if (holder.getToken() instanceof OAuth20Code) {\n+    protected void updateOAuthCode(final AccessTokenRequestDataHolder holder, final String accessToken) {\n+        if (holder.getToken() instanceof OAuth20RefreshToken) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3ODkwNw=="}, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODIyMTY5OnYy", "diffSide": "RIGHT", "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20DefaultRefreshToken.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjowOTozM1rOF4rnaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxMDozMjoxMlrOF5uqBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3OTE3OQ==", "bodyText": "As noted earlier, these are exclusively access tokens. So please rename the column and the field name to indicate this explicitly.", "url": "https://github.com/apereo/cas/pull/4763#discussion_r394979179", "createdAt": "2020-03-19T12:09:33Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20DefaultRefreshToken.java", "diffHunk": "@@ -21,11 +26,19 @@\n  */\n @Entity\n @DiscriminatorValue(OAuth20RefreshToken.PREFIX)\n+@Getter\n @NoArgsConstructor\n public class OAuth20DefaultRefreshToken extends OAuth20DefaultCode implements OAuth20RefreshToken {\n \n     private static final long serialVersionUID = -3544459978950667758L;\n \n+    /**\n+     * The ticket ids which are tied to this ticket.\n+     */\n+    @Lob\n+    @Column(name = \"DESCENDANT_TICKETS\", length = Integer.MAX_VALUE)\n+    private HashSet<String> descendantTickets = new HashSet<>(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3NzU3Mw==", "bodyText": "Done", "url": "https://github.com/apereo/cas/pull/4763#discussion_r396077573", "createdAt": "2020-03-22T10:32:12Z", "author": {"login": "julienhuon"}, "path": "support/cas-server-support-oauth-core-api/src/main/java/org/apereo/cas/ticket/refreshtoken/OAuth20DefaultRefreshToken.java", "diffHunk": "@@ -21,11 +26,19 @@\n  */\n @Entity\n @DiscriminatorValue(OAuth20RefreshToken.PREFIX)\n+@Getter\n @NoArgsConstructor\n public class OAuth20DefaultRefreshToken extends OAuth20DefaultCode implements OAuth20RefreshToken {\n \n     private static final long serialVersionUID = -3544459978950667758L;\n \n+    /**\n+     * The ticket ids which are tied to this ticket.\n+     */\n+    @Lob\n+    @Column(name = \"DESCENDANT_TICKETS\", length = Integer.MAX_VALUE)\n+    private HashSet<String> descendantTickets = new HashSet<>(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk3OTE3OQ=="}, "originalCommit": {"oid": "7be2af5242ccd51bc73325272f95b844c79edbb1"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4077, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}