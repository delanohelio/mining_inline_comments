{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5ODgyNjc4", "number": 4928, "title": "Log4j config update", "bodyText": "The current LoggingUtils class only logs stack traces if debug level is turned on for the particular logger logging the exception.\nI like to see stack traces if errors are happening and not have to wait to hear about a problem, turn on debug and then recreate the problem to see the stack trace.\nStack traces do make a mess of the logs so this config puts them in their own log file where they can be matched up via timestamp to messages from console or from regular log file where stack traces are turned off by default.\nThe old behavior (stack traces in console or file and no separate stack trace file) can be achieved via system properties or updating the log4j2 properties.\nOld/Current behavior could be achieved via:\n-Dlog.console.stacktraces=true\n-Dlog.file.stacktraces=true\n-Dlog.stacktraceappender=null\n-Dlog.include.location=true\n\nThis also changes the way Async logging is turned on and there are fairly significant performance benefits to doing it this way according to this document: (\"all async\" method vs. using AsyncLogger or AsyncAppender)\nLog4j \"all async\" Logging\nTurning on AsyncLogging would be done via:\n-Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector\n\nI have seen cases in the past during development where CAS dies on startup and async logging is not flushed. With this config as the default, most users would have regular logging during development and could turn on async logging when their server is in production and performance matters.\nI also disabled location info (includeLocation) by default and made it configurable b/c the log4j2 docs say it is 30-100 times slower when doing async logging and I don't see where the location info is being used in the pattern layouts.\nThe benefit of LoggingUtils is that it replaces null messages with the classname of the exception so logger.error(e.getMessage()); is more useful if the message is null.\nAnother benefit is that it replaces the following with a one liner:\ncatch (Exception e) {\n  if (logger.isDebugEnable()) {\n    logger.error(msg, e);\n  } else {\n    logger.error(msg);\n  }\n\nI would rather go ahead and log the exceptions to their own log file and not have to turn on debug to get the stack traces but I suppose it could be made configurable.\nIf there is a NPE or some other runtime exception, the stack trace can tell you where and the code can be updated to avoid that error. If there are expected types of exceptions and a desire to catch them and continue, I would rather catch those specific exceptions and log them at an appropriate level with no stack trace (if they are expected you already know where they came from), and still catch Exception if there is a desire to continue regardless but log the unexpected exception with a stack trace so it can be avoided or added to the expected exception list.\nThis is WIP pending feedback and because there is documentation to update (AsyncLogger -> Logger), other log4j2.xml files to update and I should probably test it.", "createdAt": "2020-08-19T02:27:09Z", "url": "https://github.com/apereo/cas/pull/4928", "merged": true, "mergeCommit": {"oid": "b74039418dc6a75a2a62142f49d42ba946f03526"}, "closed": true, "closedAt": "2020-10-02T05:25:25Z", "author": {"login": "hdeadman"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdK1wU_AH2gAyNDY5ODgyNjc4OjhjYmQ0NjhjNzdlYWJkZGE1NTMzYjQwMTJhNTk2NWVkZGY2YWU4ZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP2dH5gFqTUwMjgyODg4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8cbd468c77eabdda5533b4012a5965eddf6ae8da", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/8cbd468c77eabdda5533b4012a5965eddf6ae8da", "committedDate": "2020-09-20T21:34:14Z", "message": "move stacktraces to own logfile, make optional\nmake stacktraces optional on console and in regular file, default off\n\nalso make async configurable via system property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4d06c3858f07989c3b6db6681ec482da275eeed", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/b4d06c3858f07989c3b6db6681ec482da275eeed", "committedDate": "2020-09-20T21:34:15Z", "message": "turn off include location by default b/c bad for performance\nespecially bad for async logging \"30-100 times slower\"\n\nalso config not using location info:\n%C or %class\n%F or %file\n%l or %location\n%L or %line\n%M or %method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7a6e5ab28f356c985dab2c5fbea8d21bccf400a", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/c7a6e5ab28f356c985dab2c5fbea8d21bccf400a", "committedDate": "2020-09-20T21:34:15Z", "message": "update documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1627fbf3709efffbcd1caf4307a9b426d8ae570a", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/1627fbf3709efffbcd1caf4307a9b426d8ae570a", "committedDate": "2020-09-21T01:38:27Z", "message": "Add ExceptionOnlyFilter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44cd647a33c6361615a6d530ae87bd17f4803f27", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/44cd647a33c6361615a6d530ae87bd17f4803f27", "committedDate": "2020-08-19T01:58:28Z", "message": "turn off include location by default b/c bad for performance\nespecially bad for async logging \"30-100 times slower\"\n\nalso config not using location info:\n%C or %class\n%F or %file\n%l or %location\n%L or %line\n%M or %method"}, "afterCommit": {"oid": "1627fbf3709efffbcd1caf4307a9b426d8ae570a", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/1627fbf3709efffbcd1caf4307a9b426d8ae570a", "committedDate": "2020-09-21T01:38:27Z", "message": "Add ExceptionOnlyFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d44365cfcc1aa33eafb75a4e338b6c4efa855a84", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/d44365cfcc1aa33eafb75a4e338b6c4efa855a84", "committedDate": "2020-09-26T20:09:49Z", "message": "Merge remote-tracking branch 'origin/master' into stacktraces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ec2743128b74e9b7e4dfba354de3ae81fdd453e", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/9ec2743128b74e9b7e4dfba354de3ae81fdd453e", "committedDate": "2020-09-27T02:06:16Z", "message": "update logging - make async the default"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16245d8c97cd0e76371aad2ca1ee24d052921550", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/16245d8c97cd0e76371aad2ca1ee24d052921550", "committedDate": "2020-09-28T02:21:21Z", "message": "Add test suite to run all tests in logging api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDQ1MTMw", "url": "https://github.com/apereo/cas/pull/4928#pullrequestreview-499445130", "createdAt": "2020-09-30T13:44:12Z", "commit": {"oid": "16245d8c97cd0e76371aad2ca1ee24d052921550"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0NDoxM1rOHaePbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0OTo0MFrOHaegtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyMDQ5NQ==", "bodyText": "Seems like this can be removed, given the default impl in the parent does the same thing, and does avoid a hard-coded name.", "url": "https://github.com/apereo/cas/pull/4928#discussion_r497520495", "createdAt": "2020-09-30T13:44:13Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-logging-api/src/main/java/org/apereo/cas/logging/ExceptionOnlyFilter.java", "diffHunk": "@@ -0,0 +1,136 @@\n+package org.apereo.cas.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.Marker;\n+import org.apache.logging.log4j.core.Filter;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.Logger;\n+import org.apache.logging.log4j.core.config.Node;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.config.plugins.PluginBuilderFactory;\n+import org.apache.logging.log4j.core.filter.AbstractFilter;\n+import org.apache.logging.log4j.message.Message;\n+\n+/**\n+ * Deny any messages without an exception (for stack trace). Neutral on messages with stack trace to allow other filters.\n+ * @author Hal Deadman\n+ * @since 6.3\n+ */\n+@Plugin(name = \"ExceptionOnlyFilter\", category = Node.CATEGORY, elementType = Filter.ELEMENT_TYPE, printObject = true)\n+public class ExceptionOnlyFilter extends AbstractFilter {\n+\n+    protected ExceptionOnlyFilter() {\n+        super(Result.ACCEPT, Result.DENY);\n+    }\n+\n+    @Override\n+    public Result filter(final LogEvent event) {\n+        if (event.getThrown() != null) {\n+            return getOnMatch();\n+        }\n+        return getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final Message msg,\n+                         final Throwable t) {\n+        return t != null ? getOnMatch() : getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final Object msg,\n+                         final Throwable t) {\n+        return t != null ? getOnMatch() : getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg,\n+                         final Object... params) {\n+        if (params != null && params.length > 0 && params[params.length - 1] instanceof Throwable) {\n+            return getOnMatch();\n+        }\n+        return getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg,\n+                         final Object p0) {\n+        return super.filter(logger, level, marker, msg, p0);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1) {\n+        return super.filter(logger, level, marker, msg, p0, p1);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4, p5);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5,\n+                         final Object p6) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4, p5, p6);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5,\n+                         final Object p6, final Object p7) {\n+        return filter(logger, level, marker, msg, new Object[] {p0, p1, p2, p3, p4, p5, p6, p7});\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5,\n+                         final Object p6, final Object p7, final Object p8) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4, p5, p6, p7, p8);\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg, final Object p0,\n+                         final Object p1, final Object p2, final Object p3, final Object p4, final Object p5,\n+                         final Object p6, final Object p7, final Object p8, final Object p9) {\n+        return super.filter(logger, level, marker, msg, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"ExceptionOnlyFilter\";\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16245d8c97cd0e76371aad2ca1ee24d052921550"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyMjA1Mg==", "bodyText": "Looks to me like all such methods that do call the super can be removed.\nYou should only override and keep the following, as you do now:\npublic Result filter(LogEvent event) {}\n\npublic Result filter(Logger logger, Level level, Marker marker, Message msg, Throwable t) {  }\n\npublic Result filter(Logger logger, Level level, Marker marker, Object msg, Throwable t) { }\n\npublic Result filter(Logger logger, Level level, Marker marker, String msg, Object... params) { }", "url": "https://github.com/apereo/cas/pull/4928#discussion_r497522052", "createdAt": "2020-09-30T13:46:15Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-logging-api/src/main/java/org/apereo/cas/logging/ExceptionOnlyFilter.java", "diffHunk": "@@ -0,0 +1,136 @@\n+package org.apereo.cas.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.Marker;\n+import org.apache.logging.log4j.core.Filter;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.Logger;\n+import org.apache.logging.log4j.core.config.Node;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.config.plugins.PluginBuilderFactory;\n+import org.apache.logging.log4j.core.filter.AbstractFilter;\n+import org.apache.logging.log4j.message.Message;\n+\n+/**\n+ * Deny any messages without an exception (for stack trace). Neutral on messages with stack trace to allow other filters.\n+ * @author Hal Deadman\n+ * @since 6.3\n+ */\n+@Plugin(name = \"ExceptionOnlyFilter\", category = Node.CATEGORY, elementType = Filter.ELEMENT_TYPE, printObject = true)\n+public class ExceptionOnlyFilter extends AbstractFilter {\n+\n+    protected ExceptionOnlyFilter() {\n+        super(Result.ACCEPT, Result.DENY);\n+    }\n+\n+    @Override\n+    public Result filter(final LogEvent event) {\n+        if (event.getThrown() != null) {\n+            return getOnMatch();\n+        }\n+        return getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final Message msg,\n+                         final Throwable t) {\n+        return t != null ? getOnMatch() : getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final Object msg,\n+                         final Throwable t) {\n+        return t != null ? getOnMatch() : getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg,\n+                         final Object... params) {\n+        if (params != null && params.length > 0 && params[params.length - 1] instanceof Throwable) {\n+            return getOnMatch();\n+        }\n+        return getOnMismatch();\n+    }\n+\n+    @Override\n+    public Result filter(final Logger logger, final Level level, final Marker marker, final String msg,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16245d8c97cd0e76371aad2ca1ee24d052921550"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyNDkxOA==", "bodyText": "You should also update the default log4j2.xml file that is in the resources module I believe. That would be the file that kicks in, if the overlay does not present its own log4j2 config file in the properties.", "url": "https://github.com/apereo/cas/pull/4928#discussion_r497524918", "createdAt": "2020-09-30T13:49:40Z", "author": {"login": "mmoayyed"}, "path": "core/cas-server-core-logging-api/src/test/resources/log4j2-test.xml", "diffHunk": "@@ -16,6 +16,23 @@\n             </Policies>\n         </RollingFile>\n \n+        <!-- Required by CasLoggerFactoryTests. Filename is linked to the test. -->\n+        <!-- Setting mmediateFlush so test can check contents -->\n+        <RollingFile name=\"stacktracefile\" fileName=\"build/slf4j-exceptions.log\" append=\"true\"\n+                     filePattern=\"build/slf4j-%d{yyyy-MM-dd-HH}-%i.log.gz\" bufferedIO=\"false\" immediateFlush=\"true\">\n+            <PatternLayout pattern=\"%highlight{%d %p [%c] - %m%n}\" />\n+            <Policies>\n+                <OnStartupTriggeringPolicy />\n+                <SizeBasedTriggeringPolicy size=\"10 MB\"/>\n+                <TimeBasedTriggeringPolicy />\n+            </Policies>\n+        </RollingFile>\n+\n+        <CasAppender name=\"CasStackTraceFile\">\n+            <AppenderRef ref=\"stacktracefile\" />\n+            <ExceptionOnlyFilter/>\n+        </CasAppender>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16245d8c97cd0e76371aad2ca1ee24d052921550"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b6cb58d728d6a0fb85a8d4fb842a85db0081592", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/5b6cb58d728d6a0fb85a8d4fb842a85db0081592", "committedDate": "2020-10-01T02:40:27Z", "message": "remove unneeded methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a31c730f35cf7c9f7fe7f6bf4d4e1d83eca8f03", "author": {"user": {"login": "hdeadman", "name": "Hal Deadman"}}, "url": "https://github.com/apereo/cas/commit/0a31c730f35cf7c9f7fe7f6bf4d4e1d83eca8f03", "committedDate": "2020-10-02T03:20:43Z", "message": "Add to logging.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNzg3ODYz", "url": "https://github.com/apereo/cas/pull/4928#pullrequestreview-502787863", "createdAt": "2020-10-06T10:15:12Z", "commit": {"oid": "0a31c730f35cf7c9f7fe7f6bf4d4e1d83eca8f03"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoxNToxMlrOHc_eSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoxNToxMlrOHc_eSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2MjEyMQ==", "bodyText": "Hi, this lonely b seems to be a typo?", "url": "https://github.com/apereo/cas/pull/4928#discussion_r500162121", "createdAt": "2020-10-06T10:15:12Z", "author": {"login": "pbodnar"}, "path": "webapp/cas-server-webapp-resources/src/main/resources/log4j2.xml", "diffHunk": "@@ -56,69 +88,76 @@\n         <CasAppender name=\"casFile\">\n             <AppenderRef ref=\"file\" />\n         </CasAppender>\n+        <CasAppender name=\"casStackTraceFile\">\n+            <AppenderRef ref=\"stacktracefile\" />\n+            <ExceptionOnlyFilter/>\n+        </CasAppender>\n         <CasAppender name=\"casConsole\">\n             <AppenderRef ref=\"console\" />\n         </CasAppender>\n     </Appenders>\n     <Loggers>\n-        <AsyncLogger name=\"org.apereo.cas\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.services\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.spring\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.services.persondir\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.web.flow\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.web.CasWebApplication\" level=\"${sys:cas.log.level}\" includeLocation=\"true\"/>\n+        <Logger name=\"org.apereo.cas\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.services\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.spring\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.services.persondir\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.web.flow\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.web.CasWebApplication\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"org.apereo.inspektr.audit.support\" additivity=\"true\" level=\"info\" includeLocation=\"true\">\n+        <Logger name=\"org.apereo.inspektr.audit.support\" additivity=\"false\" level=\"info\" includeLocation=\"${sys:log.include.location}\">\n+            <AppenderRef ref=\"casConsole\"/>\n+            <AppenderRef ref=\"casFile\"/>\n             <AppenderRef ref=\"casAudit\"/>\n-        </AsyncLogger>\n+        </Logger>\n \n-        <AsyncLogger name=\"org.springframework.boot\" level=\"${sys:spring.boot.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.context.embedded\" level=\"info\" />\n-        <AsyncLogger name=\"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration\" level=\"${sys:spring.security.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.autoconfigure.security\" level=\"${sys:spring.security.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.devtools\" level=\"debug\" />\n+        <Logger name=\"org.springframework.boot\" level=\"${sys:spring.boot.log.level}\" />\n+        <Logger name=\"org.springframework.boot.context.embedded\" level=\"info\" />\n+        <Logger name=\"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration\" level=\"${sys:spring.security.log.level}\" />\n+        <Logger name=\"org.springframework.boot.autoconfigure.security\" level=\"${sys:spring.security.log.level}\" />\n+        <Logger name=\"org.springframework.boot.devtools\" level=\"debug\" />\n         \n-        <AsyncLogger name=\"org.springframework\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.webflow\" level=\"${sys:spring.webflow.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.aop\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.session\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.scheduling\" level=\"info\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.cloud.vault\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.web.client\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.security\" level=\"${sys:spring.security.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.cloud\" level=\"${sys:spring.cloud.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.amqp\" level=\"error\" />\n-        <AsyncLogger name=\"org.springframework.integration\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.messaging\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.web\" level=\"${sys:spring.web.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.orm.jpa\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.scheduling\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.context.annotation\" level=\"off\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.web.socket\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter\" level=\"trace\" includeLocation=\"true\"/>\n-\n-        <AsyncLogger name=\"com.couchbase\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apache\" level=\"error\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"com.netflix\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.quartz\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.thymeleaf\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.pac4j\" level=\"${sys:pac4j.log.level}\" includeLocation=\"true\"/>\n+        <Logger name=\"org.springframework\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.webflow\" level=\"${sys:spring.webflow.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.aop\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.session\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.scheduling\" level=\"info\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.cloud.vault\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.web.client\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.security\" level=\"${sys:spring.security.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.cloud\" level=\"${sys:spring.cloud.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.amqp\" level=\"error\" />\n+        <Logger name=\"org.springframework.integration\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.messaging\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.web\" level=\"${sys:spring.web.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.orm.jpa\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.scheduling\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.context.annotation\" level=\"off\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.web.socket\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter\" level=\"trace\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"org.opensaml\" level=\"${sys:opensaml.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"PROTOCOL_MESSAGE\" level=\"${sys:opensaml.log.level}\" includeLocation=\"true\" />\n+        <Logger name=\"com.couchbase\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apache\" level=\"error\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"com.netflix\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.quartz\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.thymeleaf\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.pac4j\" level=\"${sys:pac4j.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"net.sf.ehcache\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"net.jradius\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.openid4java\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.ldaptive\" level=\"${sys:ldap.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"com.hazelcast\" level=\"${sys:hazelcast.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.jasig.spring\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.apache.cxf\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.apache.http\" level=\"warn\" includeLocation=\"true\"/>\n+        <Logger name=\"org.opensaml\" level=\"${sys:opensaml.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"PROTOCOL_MESSAGE\" level=\"${sys:opensaml.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n \n-        <AsyncRoot level=\"warn\">\n+        <Logger name=\"net.sf.ehcache\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"net.jradius\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.openid4java\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.ldaptive\" level=\"${sys:ldap.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"com.hazelcast\" level=\"${sys:hazelcast.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.jasig.spring\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.apache.cxf\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.apache.http\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+b", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a31c730f35cf7c9f7fe7f6bf4d4e1d83eca8f03"}, "originalPosition": 182}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyODI4ODgz", "url": "https://github.com/apereo/cas/pull/4928#pullrequestreview-502828883", "createdAt": "2020-10-06T11:12:47Z", "commit": {"oid": "0a31c730f35cf7c9f7fe7f6bf4d4e1d83eca8f03"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMToxMjo0N1rOHdBVAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMToxMjo0N1rOHdBVAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE5MjUxNQ==", "bodyText": "Hi, I wonder if you also managed to make location info like line numbers (%L in a pattern) printed when async is activated? Because according to the docs, you need to:\n\nset \"includeLocation=true\" in the configuration of all relevant loggers, including the root logger\"\n\nAnd even the Log4j documentation doesn't seem to be quite correct, because according to my experiments, the includeLocation is inherited from the root to children loggers and trying to override the value doesn't have any effect. So in short, specifying includeLocation at individual loggers doesn't make much sense under these circumstances.", "url": "https://github.com/apereo/cas/pull/4928#discussion_r500192515", "createdAt": "2020-10-06T11:12:47Z", "author": {"login": "pbodnar"}, "path": "webapp/cas-server-webapp-resources/src/main/resources/log4j2.xml", "diffHunk": "@@ -56,69 +88,76 @@\n         <CasAppender name=\"casFile\">\n             <AppenderRef ref=\"file\" />\n         </CasAppender>\n+        <CasAppender name=\"casStackTraceFile\">\n+            <AppenderRef ref=\"stacktracefile\" />\n+            <ExceptionOnlyFilter/>\n+        </CasAppender>\n         <CasAppender name=\"casConsole\">\n             <AppenderRef ref=\"console\" />\n         </CasAppender>\n     </Appenders>\n     <Loggers>\n-        <AsyncLogger name=\"org.apereo.cas\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.services\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.spring\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.services.persondir\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.web.flow\" level=\"${sys:cas.log.level}\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apereo.cas.web.CasWebApplication\" level=\"${sys:cas.log.level}\" includeLocation=\"true\"/>\n+        <Logger name=\"org.apereo.cas\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.services\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.spring\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.services.persondir\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.web.flow\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apereo.cas.web.CasWebApplication\" level=\"${sys:cas.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"org.apereo.inspektr.audit.support\" additivity=\"true\" level=\"info\" includeLocation=\"true\">\n+        <Logger name=\"org.apereo.inspektr.audit.support\" additivity=\"false\" level=\"info\" includeLocation=\"${sys:log.include.location}\">\n+            <AppenderRef ref=\"casConsole\"/>\n+            <AppenderRef ref=\"casFile\"/>\n             <AppenderRef ref=\"casAudit\"/>\n-        </AsyncLogger>\n+        </Logger>\n \n-        <AsyncLogger name=\"org.springframework.boot\" level=\"${sys:spring.boot.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.context.embedded\" level=\"info\" />\n-        <AsyncLogger name=\"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration\" level=\"${sys:spring.security.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.autoconfigure.security\" level=\"${sys:spring.security.log.level}\" />\n-        <AsyncLogger name=\"org.springframework.boot.devtools\" level=\"debug\" />\n+        <Logger name=\"org.springframework.boot\" level=\"${sys:spring.boot.log.level}\" />\n+        <Logger name=\"org.springframework.boot.context.embedded\" level=\"info\" />\n+        <Logger name=\"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration\" level=\"${sys:spring.security.log.level}\" />\n+        <Logger name=\"org.springframework.boot.autoconfigure.security\" level=\"${sys:spring.security.log.level}\" />\n+        <Logger name=\"org.springframework.boot.devtools\" level=\"debug\" />\n         \n-        <AsyncLogger name=\"org.springframework\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.webflow\" level=\"${sys:spring.webflow.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.aop\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.session\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.scheduling\" level=\"info\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.cloud.vault\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.web.client\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.springframework.security\" level=\"${sys:spring.security.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.cloud\" level=\"${sys:spring.cloud.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.amqp\" level=\"error\" />\n-        <AsyncLogger name=\"org.springframework.integration\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.messaging\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.web\" level=\"${sys:spring.web.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.orm.jpa\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.scheduling\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.context.annotation\" level=\"off\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.web.socket\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter\" level=\"trace\" includeLocation=\"true\"/>\n-\n-        <AsyncLogger name=\"com.couchbase\" level=\"warn\" includeLocation=\"true\" />\n-        <AsyncLogger name=\"org.apache\" level=\"error\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"com.netflix\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.quartz\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.thymeleaf\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.pac4j\" level=\"${sys:pac4j.log.level}\" includeLocation=\"true\"/>\n+        <Logger name=\"org.springframework\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.webflow\" level=\"${sys:spring.webflow.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.aop\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.session\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.scheduling\" level=\"info\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.cloud.vault\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.web.client\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.springframework.security\" level=\"${sys:spring.security.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.cloud\" level=\"${sys:spring.cloud.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.amqp\" level=\"error\" />\n+        <Logger name=\"org.springframework.integration\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.messaging\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.web\" level=\"${sys:spring.web.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.orm.jpa\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.scheduling\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.context.annotation\" level=\"off\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.web.socket\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter\" level=\"trace\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"org.opensaml\" level=\"${sys:opensaml.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"PROTOCOL_MESSAGE\" level=\"${sys:opensaml.log.level}\" includeLocation=\"true\" />\n+        <Logger name=\"com.couchbase\" level=\"warn\" includeLocation=\"${sys:log.include.location}\" />\n+        <Logger name=\"org.apache\" level=\"error\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"com.netflix\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.quartz\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.thymeleaf\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.pac4j\" level=\"${sys:pac4j.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n \n-        <AsyncLogger name=\"net.sf.ehcache\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"net.jradius\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.openid4java\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.ldaptive\" level=\"${sys:ldap.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"com.hazelcast\" level=\"${sys:hazelcast.log.level}\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.jasig.spring\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.apache.cxf\" level=\"warn\" includeLocation=\"true\"/>\n-        <AsyncLogger name=\"org.apache.http\" level=\"warn\" includeLocation=\"true\"/>\n+        <Logger name=\"org.opensaml\" level=\"${sys:opensaml.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"PROTOCOL_MESSAGE\" level=\"${sys:opensaml.log.level}\" includeLocation=\"${sys:log.include.location}\" />\n \n-        <AsyncRoot level=\"warn\">\n+        <Logger name=\"net.sf.ehcache\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"net.jradius\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.openid4java\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.ldaptive\" level=\"${sys:ldap.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"com.hazelcast\" level=\"${sys:hazelcast.log.level}\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.jasig.spring\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.apache.cxf\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+        <Logger name=\"org.apache.http\" level=\"warn\" includeLocation=\"${sys:log.include.location}\"/>\n+b\n+        <Root level=\"warn\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a31c730f35cf7c9f7fe7f6bf4d4e1d83eca8f03"}, "originalPosition": 183}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3570, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}