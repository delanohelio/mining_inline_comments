{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NzM2NDQ0", "number": 4936, "title": "Service ticket as JWT without TGT and gateway=true", "bodyText": "Fix the following issue:\nGiven the service xxx is configured to allow service ticket as JWT\nAnd the user has no TGT session\nWhen the user tries to go on the url /cas/login?service=xxx&gateway=true\nExpected behaviour: 302 Redirect on the requested service\nFound behaviour: The following exception\norg.jasig.cas.client.validation.TicketValidationException: service and ticket parameters are both required at org.jasig.cas.client.validation.Cas20ServiceTicketValidator.parseResponseFromServer(Cas20ServiceTicketValidator.java:84) ~[cas-client-core-3.5.1.jar!/:3.5.1] at org.jasig.cas.client.validation.AbstractUrlBasedTicketValidator.validate(AbstractUrlBasedTicketValidator.java:198) ~[cas-client-core-3.5.1.jar!/:3.5.1] at org.apereo.cas.token.JWTTokenTicketBuilder.build(JWTTokenTicketBuilder.java:52) ~[cas-server-support-token-core-5.3.15.1.jar!/:5.3.15.1] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_92] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_92] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_92] at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_92] at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:215) ~[spring-core-4.3.25.RELEASE.jar!/:4.3.25.RELEASE] at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:470) ~[spring-cloud-context-1.3.0.RELEASE.jar!/:1.3.0.RELEASE] at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.25.RELEASE.jar!/:4.3.25.RELEASE] at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) ~[spring-aop-4.3.25.RELEASE.jar!/:4.3.25.RELEASE] at com.sun.proxy.$Proxy134.build(Unknown Source) ~[?:?] at org.apereo.cas.token.authentication.principal.TokenWebApplicationServiceResponseBuilder.generateToken(TokenWebApplicationServiceResponseBuilder.java:70) ~[cas-server-support-token-tickets-5.3.15.1.jar!/:5.3.15.1] at org.apereo.cas.token.authentication.principal.TokenWebApplicationServiceResponseBuilder.buildInternal(TokenWebApplicationServiceResponseBuilder.java:49) ~[cas-server-support-token-tickets-5.3.15.1.jar!/:5.3.15.1] at org.apereo.cas.authentication.principal.WebApplicationServiceResponseBuilder.build(WebApplicationServiceResponseBuilder.java:43) ~[cas-server-core-services-authentication-5.3.15.1.jar!/:5.3.15.1] at org.apereo.cas.web.flow.actions.RedirectToServiceAction.doExecute(RedirectToServiceAction.java:41) ~[cas-server-core-webflow-api-5.3.15.1.jar!/:5.3.15.1]", "createdAt": "2020-09-04T14:26:24Z", "url": "https://github.com/apereo/cas/pull/4936", "merged": true, "mergeCommit": {"oid": "99d813049c49bb9eae17eda0f5621927df016d63"}, "closed": true, "closedAt": "2020-09-25T03:51:20Z", "author": {"login": "C4n4rd0"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFlhVKgH2gAyNDc5NzM2NDQ0OjNlYWJiODkwODUwNDFhYWNhZDAyZjA3ZDEzYTBhZGU3NTA3ZjQzYmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMNisLgFqTQ5NjA5MjkwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3eabb89085041aacad02f07d13a0ade7507f43bf", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/3eabb89085041aacad02f07d13a0ade7507f43bf", "committedDate": "2020-09-04T13:49:45Z", "message": "Service ticket as JWT without TGT and gateway=true\n\nFix the following issue:\r\nThe service is configured to allow service ticket as JWT with gateway=true\r\nThe user has no TGT session\r\n\r\nExpected behaviour: 302 Redirect on the requested service\r\nFound behaviour: The following exception\r\n\r\norg.jasig.cas.client.validation.TicketValidationException: service and ticket parameters are both required\r\n        at org.jasig.cas.client.validation.Cas20ServiceTicketValidator.parseResponseFromServer(Cas20ServiceTicketValidator.java:84) ~[cas-client-core-3.5.1.jar!/:3.5.1]\r\n        at org.jasig.cas.client.validation.AbstractUrlBasedTicketValidator.validate(AbstractUrlBasedTicketValidator.java:198) ~[cas-client-core-3.5.1.jar!/:3.5.1]\r\n        at org.apereo.cas.token.JWTTokenTicketBuilder.build(JWTTokenTicketBuilder.java:52) ~[cas-server-support-token-core-5.3.15.1.jar!/:5.3.15.1]\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_92]\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_92]\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_92]\r\n        at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_92]\r\n        at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:215) ~[spring-core-4.3.25.RELEASE.jar!/:4.3.25.RELEASE]\r\n        at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:470) ~[spring-cloud-context-1.3.0.RELEASE.jar!/:1.3.0.RELEASE]\r\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.25.RELEASE.jar!/:4.3.25.RELEASE]\r\n        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) ~[spring-aop-4.3.25.RELEASE.jar!/:4.3.25.RELEASE]\r\n        at com.sun.proxy.$Proxy134.build(Unknown Source) ~[?:?]\r\n        at org.apereo.cas.token.authentication.principal.TokenWebApplicationServiceResponseBuilder.generateToken(TokenWebApplicationServiceResponseBuilder.java:70) ~[cas-server-support-token-tickets-5.3.15.1.jar!/:5.3.15.1]\r\n        at org.apereo.cas.token.authentication.principal.TokenWebApplicationServiceResponseBuilder.buildInternal(TokenWebApplicationServiceResponseBuilder.java:49) ~[cas-server-support-token-tickets-5.3.15.1.jar!/:5.3.15.1]\r\n        at org.apereo.cas.authentication.principal.WebApplicationServiceResponseBuilder.build(WebApplicationServiceResponseBuilder.java:43) ~[cas-server-core-services-authentication-5.3.15.1.jar!/:5.3.15.1]\r\n        at org.apereo.cas.web.flow.actions.RedirectToServiceAction.doExecute(RedirectToServiceAction.java:41) ~[cas-server-core-webflow-api-5.3.15.1.jar!/:5.3.15.1]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8b1661b0971d453978b20ef3dd672d3b269d518", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/f8b1661b0971d453978b20ef3dd672d3b269d518", "committedDate": "2020-09-04T14:20:02Z", "message": "Update TokenWebApplicationServiceResponseBuilder.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7985d83e419bc0b3b3e56d58862eefa1bc41c31", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/d7985d83e419bc0b3b3e56d58862eefa1bc41c31", "committedDate": "2020-09-04T14:20:46Z", "message": "Update TokenWebApplicationServiceResponseBuilder.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e67ab3a21fc400c36f8a6cee7f0dc50512fc914", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/0e67ab3a21fc400c36f8a6cee7f0dc50512fc914", "committedDate": "2020-09-09T13:01:18Z", "message": "Add unit test for the use case service ticket as jwt with gateway=true"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e8abb20f166ab7bf84a052fbb4369e4915337c1", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/0e8abb20f166ab7bf84a052fbb4369e4915337c1", "committedDate": "2020-09-09T14:16:55Z", "message": "Update TokenWebApplicationServiceResponseBuilder.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27d52dbd2054069701d43c888c130a0c01f4dbc6", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/27d52dbd2054069701d43c888c130a0c01f4dbc6", "committedDate": "2020-09-09T14:43:39Z", "message": "Update TokenWebApplicationServiceResponseBuilder.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NTA4NTk4", "url": "https://github.com/apereo/cas/pull/4936#pullrequestreview-486508598", "createdAt": "2020-09-11T06:33:50Z", "commit": {"oid": "27d52dbd2054069701d43c888c130a0c01f4dbc6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3ea768ff5d1a7cba325a329eba602765a2c8abf", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/f3ea768ff5d1a7cba325a329eba602765a2c8abf", "committedDate": "2020-09-14T10:18:28Z", "message": "Fix checkstyle issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0a60b11856628fd76ba6528e1cf6cdeb465c554", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/c0a60b11856628fd76ba6528e1cf6cdeb465c554", "committedDate": "2020-09-14T12:06:18Z", "message": "Fix check style issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04f1a3e247386549f453c12f5c833c763d81f2d7", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/04f1a3e247386549f453c12f5c833c763d81f2d7", "committedDate": "2020-09-14T13:24:17Z", "message": "Fix check style issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7c9326911123f03c1fcbadc0539b62a28004a79", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/a7c9326911123f03c1fcbadc0539b62a28004a79", "committedDate": "2020-09-14T13:29:11Z", "message": "Fix check style issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31438623814b1069d1c2ac61961844f52a5a7116", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/31438623814b1069d1c2ac61961844f52a5a7116", "committedDate": "2020-09-14T14:57:17Z", "message": "Fix check style issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "729d68b27d054ce85f095fe78069b2ef415f9a0e", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/729d68b27d054ce85f095fe78069b2ef415f9a0e", "committedDate": "2020-09-14T15:51:29Z", "message": "Fix check style issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzA5OTc0", "url": "https://github.com/apereo/cas/pull/4936#pullrequestreview-491309974", "createdAt": "2020-09-18T09:40:41Z", "commit": {"oid": "729d68b27d054ce85f095fe78069b2ef415f9a0e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTo0MDo0MlrOHUFxrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTo0MjoxNFrOHUF3XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyODIwNg==", "bodyText": "Fix the formatting issues here. Spaces between operators, and also fix the indentation please.", "url": "https://github.com/apereo/cas/pull/4936#discussion_r490828206", "createdAt": "2020-09-18T09:40:42Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-token-tickets/src/main/java/org/apereo/cas/token/authentication/principal/TokenWebApplicationServiceResponseBuilder.java", "diffHunk": "@@ -40,11 +39,14 @@ protected WebApplicationService buildInternal(final WebApplicationService servic\n         val registeredService = this.servicesManager.findServiceBy(service);\n         RegisteredServiceAccessStrategyUtils.ensureServiceAccessIsAllowed(service, registeredService);\n         val tokenAsResponse = RegisteredServiceProperty.RegisteredServiceProperties.TOKEN_AS_SERVICE_TICKET.isAssignedTo(registeredService);\n+        val ticketIdAvailable=isTicketIdAvailable(parameters);\n \n-        if (!tokenAsResponse) {\n-            LOGGER.debug(\"Registered service [{}] is not configured to issue JWTs for service tickets. \"\n-                    + \"Make sure the service property [{}] is defined and is set to true\", registeredService,\n-                RegisteredServiceProperties.TOKEN_AS_SERVICE_TICKET.getPropertyName());\n+        if (!tokenAsResponse||!ticketIdAvailable) {\n+            if (ticketIdAvailable) {\n+                LOGGER.debug(\"Registered service [{}] is not configured to issue JWTs for service tickets. \"\n+                                + \"Make sure the service property [{}] is defined and set to true\", registeredService,\n+                        RegisteredServiceProperties.TOKEN_AS_SERVICE_TICKET.getPropertyName());\n+            }\n             return super.buildInternal(service, parameters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729d68b27d054ce85f095fe78069b2ef415f9a0e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyODgzMA==", "bodyText": "Simplify to one line:\nreturn StringUtils.isNotBlank(parameters.get(CasProtocolConstants.PARAMETER_TICKET))", "url": "https://github.com/apereo/cas/pull/4936#discussion_r490828830", "createdAt": "2020-09-18T09:41:21Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-token-tickets/src/main/java/org/apereo/cas/token/authentication/principal/TokenWebApplicationServiceResponseBuilder.java", "diffHunk": "@@ -58,6 +60,16 @@ protected WebApplicationService buildInternal(final WebApplicationService servic\n \n         return jwtService;\n     }\n+    \n+    private boolean isTicketIdAvailable(final Map<String, String> parameters){\n+        final String ticketId=parameters.get(CasProtocolConstants.PARAMETER_TICKET);\n+\n+        if (StringUtils.isBlank(ticketId)){\n+            return false;\n+        }\n+\n+        return true;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729d68b27d054ce85f095fe78069b2ef415f9a0e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyODk1MA==", "bodyText": "Also fix formatting issues", "url": "https://github.com/apereo/cas/pull/4936#discussion_r490828950", "createdAt": "2020-09-18T09:41:29Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-token-tickets/src/main/java/org/apereo/cas/token/authentication/principal/TokenWebApplicationServiceResponseBuilder.java", "diffHunk": "@@ -58,6 +60,16 @@ protected WebApplicationService buildInternal(final WebApplicationService servic\n \n         return jwtService;\n     }\n+    \n+    private boolean isTicketIdAvailable(final Map<String, String> parameters){\n+        final String ticketId=parameters.get(CasProtocolConstants.PARAMETER_TICKET);\n+\n+        if (StringUtils.isBlank(ticketId)){\n+            return false;\n+        }\n+\n+        return true;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyODgzMA=="}, "originalCommit": {"oid": "729d68b27d054ce85f095fe78069b2ef415f9a0e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyOTY2MQ==", "bodyText": "How does this test verify gateway=true?", "url": "https://github.com/apereo/cas/pull/4936#discussion_r490829661", "createdAt": "2020-09-18T09:42:14Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-token-tickets/src/test/java/org/apereo/cas/token/authentication/principal/TokenWebApplicationServiceResponseBuilderTests.java", "diffHunk": "@@ -139,4 +140,19 @@ public void verifyTokenBuilder() throws Exception {\n             assertNotNull(JWTParser.parse(ticket));\n         }\n     }\n+    \n+    @Test\n+    public void verifyTokenBuilderWhenGatewayIsTrue() throws Exception {\n+        val data = \"yes\\ncasuser\";\n+        try (val webServer = new MockWebServer(8281,\n+            new ByteArrayResource(data.getBytes(StandardCharsets.UTF_8), \"REST Output\"), MediaType.APPLICATION_JSON_VALUE)) {\n+            webServer.start();\n+\n+            val result = responseBuilder.build(CoreAuthenticationTestUtils.getWebApplicationService(\"jwtservice\"),\n+                StringUtils.EMPTY,\n+                CoreAuthenticationTestUtils.getAuthentication());\n+            assertNotNull(result);\n+            assertFalse(result.getAttributes().containsKey(CasProtocolConstants.PARAMETER_TICKET));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729d68b27d054ce85f095fe78069b2ef415f9a0e"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e47411fd4a3070ba368d2fa286e6ff48896c19ee", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/e47411fd4a3070ba368d2fa286e6ff48896c19ee", "committedDate": "2020-09-18T12:42:44Z", "message": "Fix reviews remarks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3be9a1b7e0b915c4cc288b2489fe6fbe294725f0", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/3be9a1b7e0b915c4cc288b2489fe6fbe294725f0", "committedDate": "2020-09-18T12:44:18Z", "message": "Fix review remarks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf68437af4eb9fc0fd7bd14618046cd8eb01db30", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/bf68437af4eb9fc0fd7bd14618046cd8eb01db30", "committedDate": "2020-09-18T15:26:32Z", "message": "Fix check style issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3721a3be1961e9af16e2f8cbe9ef5570c5ba604e", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/3721a3be1961e9af16e2f8cbe9ef5570c5ba604e", "committedDate": "2020-09-20T13:32:18Z", "message": "Fix checkstyle issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d3db61eb5f2bed2a720d49315f1a62bc9a8fe57", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/4d3db61eb5f2bed2a720d49315f1a62bc9a8fe57", "committedDate": "2020-09-21T07:51:29Z", "message": "Fix checkstyle issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNDQ2MDQx", "url": "https://github.com/apereo/cas/pull/4936#pullrequestreview-492446041", "createdAt": "2020-09-21T10:04:35Z", "commit": {"oid": "4d3db61eb5f2bed2a720d49315f1a62bc9a8fe57"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDowNDozNlrOHVIxCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDowNjowOVrOHVI0fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyNTc3MQ==", "bodyText": "Space before and after =", "url": "https://github.com/apereo/cas/pull/4936#discussion_r491925771", "createdAt": "2020-09-21T10:04:36Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-token-tickets/src/main/java/org/apereo/cas/token/authentication/principal/TokenWebApplicationServiceResponseBuilder.java", "diffHunk": "@@ -40,11 +39,15 @@ protected WebApplicationService buildInternal(final WebApplicationService servic\n         val registeredService = this.servicesManager.findServiceBy(service);\n         RegisteredServiceAccessStrategyUtils.ensureServiceAccessIsAllowed(service, registeredService);\n         val tokenAsResponse = RegisteredServiceProperty.RegisteredServiceProperties.TOKEN_AS_SERVICE_TICKET.isAssignedTo(registeredService);\n+        val ticketIdAvailable=isTicketIdAvailable(parameters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d3db61eb5f2bed2a720d49315f1a62bc9a8fe57"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyNjY1NQ==", "bodyText": "Don't think the log statement here makes sense.", "url": "https://github.com/apereo/cas/pull/4936#discussion_r491926655", "createdAt": "2020-09-21T10:06:09Z", "author": {"login": "mmoayyed"}, "path": "support/cas-server-support-token-tickets/src/main/java/org/apereo/cas/token/authentication/principal/TokenWebApplicationServiceResponseBuilder.java", "diffHunk": "@@ -40,11 +39,15 @@ protected WebApplicationService buildInternal(final WebApplicationService servic\n         val registeredService = this.servicesManager.findServiceBy(service);\n         RegisteredServiceAccessStrategyUtils.ensureServiceAccessIsAllowed(service, registeredService);\n         val tokenAsResponse = RegisteredServiceProperty.RegisteredServiceProperties.TOKEN_AS_SERVICE_TICKET.isAssignedTo(registeredService);\n+        val ticketIdAvailable=isTicketIdAvailable(parameters);\n \n-        if (!tokenAsResponse) {\n-            LOGGER.debug(\"Registered service [{}] is not configured to issue JWTs for service tickets. \"\n-                    + \"Make sure the service property [{}] is defined and is set to true\", registeredService,\n-                RegisteredServiceProperties.TOKEN_AS_SERVICE_TICKET.getPropertyName());\n+        if (!tokenAsResponse || !ticketIdAvailable) {\n+            if (ticketIdAvailable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d3db61eb5f2bed2a720d49315f1a62bc9a8fe57"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4a2be007b25742f87650525d5c2b3322c899a64", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/e4a2be007b25742f87650525d5c2b3322c899a64", "committedDate": "2020-09-24T13:04:31Z", "message": "Fix review comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2a94b8ca78538f05db9894a673422b52ee5c511", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/c2a94b8ca78538f05db9894a673422b52ee5c511", "committedDate": "2020-09-24T14:29:03Z", "message": "Fix check style issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f368237a44beb56e083680e99b7b6f3207cc155f", "author": {"user": {"login": "C4n4rd0", "name": null}}, "url": "https://github.com/apereo/cas/commit/f368237a44beb56e083680e99b7b6f3207cc155f", "committedDate": "2020-09-24T14:29:21Z", "message": "Fix check style issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MDkyOTAz", "url": "https://github.com/apereo/cas/pull/4936#pullrequestreview-496092903", "createdAt": "2020-09-25T03:50:59Z", "commit": {"oid": "f368237a44beb56e083680e99b7b6f3207cc155f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3522, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}