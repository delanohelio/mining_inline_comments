{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDU5NTMx", "number": 4844, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNzoyOTowOFrOEBKXeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzo0MToyMVrOEFin_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjUzODgyOnYy", "diffSide": "RIGHT", "path": "tools/dependencies/known-oap-backend-dependencies.txt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNzoyOTowOFrOGc3RRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNzoyOTowOFrOGc3RRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxODg1NA==", "bodyText": "You should update all these changes(version and new libs) into the LICENSE file. Also, if any of new lib is in Apache 2.0 license, and having NOTICE file in their original repo, you need to copy the content into our NOTICE file too(in the same folder as LICENSE file)\nAll these requirements are based on the license laws and ASF guidances.", "url": "https://github.com/apache/skywalking/pull/4844#discussion_r432918854", "createdAt": "2020-05-31T07:29:08Z", "author": {"login": "wu-sheng"}, "path": "tools/dependencies/known-oap-backend-dependencies.txt", "diffHunk": "@@ -145,22 +150,17 @@ protobuf-java-util-3.11.4.jar\n rank-eval-client-6.3.2.jar\n reactive-streams-1.0.2.jar\n reflectasm-1.11.7.jar\n-resourcecify-annotations-0.9.2.jar\n+resourcecify-annotations-0.21.0.jar\n retrofit-2.3.0.jar\n simpleclient-0.6.0.jar\n simpleclient_common-0.6.0.jar\n simpleclient_hotspot-0.6.0.jar\n simpleclient_httpserver-0.6.0.jar\n slf4j-api-1.7.25.jar\n snakeyaml-1.18.jar\n-sundr-codegen-0.9.2.jar\n-sundr-core-0.9.2.jar\n-swagger-annotations-1.5.12.jar\n+sundr-codegen-0.21.0.jar\n+sundr-core-0.21.0.jar\n+swagger-annotations-1.5.22.jar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564f6cb6650d29fee9c2ca404f2bcbf9a73088d7"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjYxMDE0OnYy", "diffSide": "RIGHT", "path": "oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/NamespacedPodListInformer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwOTo0MzowOVrOGc34Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxMDoyOTozMVrOGc4Fyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyODc3MQ==", "bodyText": "Pls, adopt to a custom thread pool to create daemon thread instead of the default cached thread pool. That's because the cluster coordination model is lack of stop phase, so we don't have any opportunity to invoke stopAllRegisteredInformers.", "url": "https://github.com/apache/skywalking/pull/4844#discussion_r432928771", "createdAt": "2020-05-31T09:43:09Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/NamespacedPodListInformer.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.cluster.plugin.kubernetes;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1Pod;\n+import io.kubernetes.client.openapi.models.V1PodList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Optional;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public enum NamespacedPodListInformer {\n+\n+    /**\n+     * contains remote collector instances\n+     */\n+    INFORMER;\n+\n+    private Lister<V1Pod> podLister;\n+\n+    public synchronized void init(ClusterModuleKubernetesConfig podConfig) {\n+\n+        try {\n+            doStartPodInformer(podConfig);\n+        } catch (IOException e) {\n+            log.error(\"cannot connect with api server in kubernetes\", e);\n+        }\n+    }\n+\n+    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n+\n+        ApiClient client = Config.defaultClient();\n+        CoreV1Api coreV1Api = new CoreV1Api(client);\n+\n+        SharedInformerFactory factory = new SharedInformerFactory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d8e304cc0f87c20e608457c38c4ca21a65c3eb"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMjI5OQ==", "bodyText": "add a hook when service shutdown ,thx for review again", "url": "https://github.com/apache/skywalking/pull/4844#discussion_r432932299", "createdAt": "2020-05-31T10:29:31Z", "author": {"login": "EvanLjp"}, "path": "oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/NamespacedPodListInformer.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.cluster.plugin.kubernetes;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1Pod;\n+import io.kubernetes.client.openapi.models.V1PodList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Optional;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public enum NamespacedPodListInformer {\n+\n+    /**\n+     * contains remote collector instances\n+     */\n+    INFORMER;\n+\n+    private Lister<V1Pod> podLister;\n+\n+    public synchronized void init(ClusterModuleKubernetesConfig podConfig) {\n+\n+        try {\n+            doStartPodInformer(podConfig);\n+        } catch (IOException e) {\n+            log.error(\"cannot connect with api server in kubernetes\", e);\n+        }\n+    }\n+\n+    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n+\n+        ApiClient client = Config.defaultClient();\n+        CoreV1Api coreV1Api = new CoreV1Api(client);\n+\n+        SharedInformerFactory factory = new SharedInformerFactory();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyODc3MQ=="}, "originalCommit": {"oid": "a4d8e304cc0f87c20e608457c38c4ca21a65c3eb"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjQ1NDc1OnYy", "diffSide": "RIGHT", "path": "dist-material/release-docs/LICENSE", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzo0MDo1OVrOGjypjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzo0MDo1OVrOGjypjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE4MzE4Mg==", "bodyText": "Fastjson should have been removed.", "url": "https://github.com/apache/skywalking/pull/4844#discussion_r440183182", "createdAt": "2020-06-15T13:40:59Z", "author": {"login": "wu-sheng"}, "path": "dist-material/release-docs/LICENSE", "diffHunk": "@@ -216,6 +216,7 @@ The following components are provided under the Apache License. See project link\n The text of each license is also included at licenses/LICENSE-[project].txt.\n \n     Apache: httpcomponents 4.x.x: http://hc.apache.org/index.html, Apache 2.0\n+    Apache: fastjson 1.2.58:  https://github.com/alibaba/fastjson, Apache 2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fdb951c8d38a46f6ef994f9afb46d386ce03b93"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjQ1NjI5OnYy", "diffSide": "RIGHT", "path": "dist-material/release-docs/LICENSE", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzo0MToyMVrOGjyqeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzo1NjoxMFrOGkckuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE4MzQxNw==", "bodyText": "Nacos should be removed too.", "url": "https://github.com/apache/skywalking/pull/4844#discussion_r440183417", "createdAt": "2020-06-15T13:41:21Z", "author": {"login": "wu-sheng"}, "path": "dist-material/release-docs/LICENSE", "diffHunk": "@@ -304,12 +306,13 @@ The text of each license is the standard Apache 2.0 license.\n     HikariCP 3.1.0: https://github.com/brettwooldridge/HikariCP, Apache 2.0\n     zipkin 2.9.1: https://github.com/openzipkin/zipkin, Apache 2.0\n     sharding-jdbc-core 2.0.3: https://github.com/sharding-sphere/sharding-sphere, Apache 2.0\n-    kubernetes-client 4.0.0: https://github.com/kubernetes-client/java, Apache 2.0\n+    kubernetes-client 8.0.0: https://github.com/kubernetes-client/java, Apache 2.0\n     proto files from istio/istio: https://github.com/istio/istio  Apache 2.0\n     proto files from istio/api: https://github.com/istio/api      Apache 2.0\n     consul-client 1.2.6: https://github.com/rickfast/consul-client, Apache 2.0\n     okhttp 3.9.0: https://github.com/square/okhttp, Apache 2.0\n     prometheus client_java 0.6.0: https://github.com/prometheus/client_java, Apache 2.0\n+    nacos 1.2.0: https://github.com/alibaba/nacos, Apache 2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fdb951c8d38a46f6ef994f9afb46d386ce03b93"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU4ODYwNw==", "bodyText": "fix it,I already know how to add a license, but how to check whether the license needs to be deleted, is there a shell script to check it?", "url": "https://github.com/apache/skywalking/pull/4844#discussion_r440588607", "createdAt": "2020-06-16T05:07:25Z", "author": {"login": "EvanLjp"}, "path": "dist-material/release-docs/LICENSE", "diffHunk": "@@ -304,12 +306,13 @@ The text of each license is the standard Apache 2.0 license.\n     HikariCP 3.1.0: https://github.com/brettwooldridge/HikariCP, Apache 2.0\n     zipkin 2.9.1: https://github.com/openzipkin/zipkin, Apache 2.0\n     sharding-jdbc-core 2.0.3: https://github.com/sharding-sphere/sharding-sphere, Apache 2.0\n-    kubernetes-client 4.0.0: https://github.com/kubernetes-client/java, Apache 2.0\n+    kubernetes-client 8.0.0: https://github.com/kubernetes-client/java, Apache 2.0\n     proto files from istio/istio: https://github.com/istio/istio  Apache 2.0\n     proto files from istio/api: https://github.com/istio/api      Apache 2.0\n     consul-client 1.2.6: https://github.com/rickfast/consul-client, Apache 2.0\n     okhttp 3.9.0: https://github.com/square/okhttp, Apache 2.0\n     prometheus client_java 0.6.0: https://github.com/prometheus/client_java, Apache 2.0\n+    nacos 1.2.0: https://github.com/alibaba/nacos, Apache 2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE4MzQxNw=="}, "originalCommit": {"oid": "7fdb951c8d38a46f6ef994f9afb46d386ce03b93"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU5OTYzMg==", "bodyText": "I am afraid there is. The way is acorss-check the LICENSE file and known-oap-backend-dependencies.txt files. They should match.", "url": "https://github.com/apache/skywalking/pull/4844#discussion_r440599632", "createdAt": "2020-06-16T05:47:02Z", "author": {"login": "wu-sheng"}, "path": "dist-material/release-docs/LICENSE", "diffHunk": "@@ -304,12 +306,13 @@ The text of each license is the standard Apache 2.0 license.\n     HikariCP 3.1.0: https://github.com/brettwooldridge/HikariCP, Apache 2.0\n     zipkin 2.9.1: https://github.com/openzipkin/zipkin, Apache 2.0\n     sharding-jdbc-core 2.0.3: https://github.com/sharding-sphere/sharding-sphere, Apache 2.0\n-    kubernetes-client 4.0.0: https://github.com/kubernetes-client/java, Apache 2.0\n+    kubernetes-client 8.0.0: https://github.com/kubernetes-client/java, Apache 2.0\n     proto files from istio/istio: https://github.com/istio/istio  Apache 2.0\n     proto files from istio/api: https://github.com/istio/api      Apache 2.0\n     consul-client 1.2.6: https://github.com/rickfast/consul-client, Apache 2.0\n     okhttp 3.9.0: https://github.com/square/okhttp, Apache 2.0\n     prometheus client_java 0.6.0: https://github.com/prometheus/client_java, Apache 2.0\n+    nacos 1.2.0: https://github.com/alibaba/nacos, Apache 2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE4MzQxNw=="}, "originalCommit": {"oid": "7fdb951c8d38a46f6ef994f9afb46d386ce03b93"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg3MDA3NQ==", "bodyText": "which shell script? Is it in the repository? this will help us to check the dependencies before commit", "url": "https://github.com/apache/skywalking/pull/4844#discussion_r440870075", "createdAt": "2020-06-16T13:56:10Z", "author": {"login": "EvanLjp"}, "path": "dist-material/release-docs/LICENSE", "diffHunk": "@@ -304,12 +306,13 @@ The text of each license is the standard Apache 2.0 license.\n     HikariCP 3.1.0: https://github.com/brettwooldridge/HikariCP, Apache 2.0\n     zipkin 2.9.1: https://github.com/openzipkin/zipkin, Apache 2.0\n     sharding-jdbc-core 2.0.3: https://github.com/sharding-sphere/sharding-sphere, Apache 2.0\n-    kubernetes-client 4.0.0: https://github.com/kubernetes-client/java, Apache 2.0\n+    kubernetes-client 8.0.0: https://github.com/kubernetes-client/java, Apache 2.0\n     proto files from istio/istio: https://github.com/istio/istio  Apache 2.0\n     proto files from istio/api: https://github.com/istio/api      Apache 2.0\n     consul-client 1.2.6: https://github.com/rickfast/consul-client, Apache 2.0\n     okhttp 3.9.0: https://github.com/square/okhttp, Apache 2.0\n     prometheus client_java 0.6.0: https://github.com/prometheus/client_java, Apache 2.0\n+    nacos 1.2.0: https://github.com/alibaba/nacos, Apache 2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE4MzQxNw=="}, "originalCommit": {"oid": "7fdb951c8d38a46f6ef994f9afb46d386ce03b93"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 175, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}