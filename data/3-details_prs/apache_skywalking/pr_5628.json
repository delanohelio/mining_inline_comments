{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3Mzg4ODk3", "number": 5628, "title": "Support Alarm to dingtalk", "bodyText": "Please answer these questions before submitting a pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\nresolves #5627\n\n\n\nBug fix\n\n\nBug description.\n\n\nHow to fix?\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.", "createdAt": "2020-10-04T07:14:30Z", "url": "https://github.com/apache/skywalking/pull/5628", "merged": true, "mergeCommit": {"oid": "117afff36fc2bbfafeeb9c02f584ef45539c12b5"}, "closed": true, "closedAt": "2020-10-05T12:16:19Z", "author": {"login": "xbkaishui"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPJvI6AH2gAyNDk3Mzg4ODk3OjEwZTY1ZWI4MjQ5ODU0NjNiNjRhZDBjYWI3Y2I5MTg2MWEwZjJmNDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPiZifAFqTUwMTk3NjM2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "10e65eb824985463b64ad0cab7cb91861a0f2f43", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/10e65eb824985463b64ad0cab7cb91861a0f2f43", "committedDate": "2020-10-04T07:06:44Z", "message": "Add dingtalk webhook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6442711399c90f9bf7cd449bf9aa7a1c5cc84de3", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/6442711399c90f9bf7cd449bf9aa7a1c5cc84de3", "committedDate": "2020-10-04T07:11:08Z", "message": "add blank line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjAyMjQy", "url": "https://github.com/apache/skywalking/pull/5628#pullrequestreview-501602242", "createdAt": "2020-10-04T08:36:58Z", "commit": {"oid": "6442711399c90f9bf7cd449bf9aa7a1c5cc84de3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwODozNjo1OFrOHcGAUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwODo0NDoxMFrOHcGC4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIyMDU2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The alarm message will send through HTTP post by `application/json` content type if you configured Slack Incoming Webhooks as following:\n          \n          \n            \n            The alarm message will send through HTTP post by `application/json` content type if you configured Dingtalk Webhooks as following:\n          \n      \n    \n    \n  \n\nCopy-Paste issue?", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499220562", "createdAt": "2020-10-04T08:36:58Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-alarm.md", "diffHunk": "@@ -219,6 +219,26 @@ wechatHooks:\n     - https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=dummy_key\n ```\n \n+## Dingtalk Hook\n+To do this you need to follow the [Dingtalk Webhooks guide](https://ding-doc.dingtalk.com/doc#/serverapi2/qf2nxq/uKPlK) and create new Webhooks.\n+For security issue, you can config optional secret for individual webhook url.\n+The alarm message will send through HTTP post by `application/json` content type if you configured Slack Incoming Webhooks as following:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6442711399c90f9bf7cd449bf9aa7a1c5cc84de3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIyMTE5MA==", "bodyText": "Only need one, please remove this.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #    - url: https://oapi.dingtalk.com/robot/send?access_token=dummy_token2\n          \n          \n            \n            #      secret:", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499221190", "createdAt": "2020-10-04T08:43:54Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/alarm-settings.yml", "diffHunk": "@@ -69,3 +69,17 @@ wechatHooks:\n     }\n   webhooks:\n #    - https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=dummy_key\n+\n+dingtalkHooks:\n+  textTemplate: |-\n+    {\n+      \"msgtype\": \"text\",\n+      \"text\": {\n+        \"content\": \"Apache SkyWalking Alarm: \\n %s.\"\n+      }\n+    }\n+  webhooks:\n+#    - url: https://oapi.dingtalk.com/robot/send?access_token=dummy_token\n+#      secret: dummysecret\n+#    - url: https://oapi.dingtalk.com/robot/send?access_token=dummy_token2\n+#      secret:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6442711399c90f9bf7cd449bf9aa7a1c5cc84de3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIyMTIxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                - url: https://oapi.dingtalk.com/robot/send?access_token=dummy_token2\n          \n          \n            \n                  secret:", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499221216", "createdAt": "2020-10-04T08:44:10Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-alarm.md", "diffHunk": "@@ -219,6 +219,26 @@ wechatHooks:\n     - https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=dummy_key\n ```\n \n+## Dingtalk Hook\n+To do this you need to follow the [Dingtalk Webhooks guide](https://ding-doc.dingtalk.com/doc#/serverapi2/qf2nxq/uKPlK) and create new Webhooks.\n+For security issue, you can config optional secret for individual webhook url.\n+The alarm message will send through HTTP post by `application/json` content type if you configured Slack Incoming Webhooks as following:\n+```yml\n+dingtalkHooks:\n+  textTemplate: |-\n+    {\n+      \"msgtype\": \"text\",\n+      \"text\": {\n+        \"content\": \"Apache SkyWalking Alarm: \\n %s.\"\n+      }\n+    }\n+  webhooks:\n+    - url: https://oapi.dingtalk.com/robot/send?access_token=dummy_token\n+      secret: dummysecret\n+    - url: https://oapi.dingtalk.com/robot/send?access_token=dummy_token2\n+      secret:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6442711399c90f9bf7cd449bf9aa7a1c5cc84de3"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac", "committedDate": "2020-10-04T10:37:27Z", "message": "change as cr suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjE3MDgx", "url": "https://github.com/apache/skywalking/pull/5628#pullrequestreview-501617081", "createdAt": "2020-10-04T12:05:12Z", "commit": {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMjowNToxMlrOHcHJHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMjowNToxMlrOHcHJHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIzOTE5OQ==", "bodyText": "Please recheck the test case, seems this method is not covered. Also, please help on rechecking other read* methods in this class.", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499239199", "createdAt": "2020-10-04T12:05:12Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReader.java", "diffHunk": "@@ -203,4 +206,25 @@ private void readCompositeRuleConfig(Rules rules) {\n             }\n         });\n     }\n+\n+    /**\n+     * Read composite rule config into {@link DingtalkSettings}\n+     */\n+    private void readDingtalkConfig(Rules rules) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjE3MTc5", "url": "https://github.com/apache/skywalking/pull/5628#pullrequestreview-501617179", "createdAt": "2020-10-04T12:06:04Z", "commit": {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMjowNjowNFrOHcHJkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMjowNjowNFrOHcHJkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIzOTMxMw==", "bodyText": "But I have noticed this, maybe above is just a coverage issue? FYI @kezhenxu94, any clue?", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499239313", "createdAt": "2020-10-04T12:06:04Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-alarm-plugin/src/test/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReaderTest.java", "diffHunk": "@@ -18,16 +18,23 @@\n \n package org.apache.skywalking.oap.server.core.alarm.provider;\n \n-import java.util.List;\n+import org.apache.skywalking.oap.server.core.alarm.provider.dingtalk.DingtalkSettings;\n import org.junit.Assert;\n import org.junit.Test;\n \n-public class AlarmRuleInitTest {\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.any;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertThat;\n+\n+public class RulesReaderTest {\n     @Test\n-    public void testInit() {\n+    public void testReadRules() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjE3MTg3", "url": "https://github.com/apache/skywalking/pull/5628#pullrequestreview-501617187", "createdAt": "2020-10-04T12:06:10Z", "commit": {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b9b0c67d906e6d0f5dad37760bae9cfe256553", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/c5b9b0c67d906e6d0f5dad37760bae9cfe256553", "committedDate": "2020-10-04T12:49:00Z", "message": "Add more test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjIwNzEx", "url": "https://github.com/apache/skywalking/pull/5628#pullrequestreview-501620711", "createdAt": "2020-10-04T12:51:04Z", "commit": {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMjo1MToyMlrOHcHZtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMjo1MzoyNlrOHcHafA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzQ0Ng==", "bodyText": "Be careful when copy-and-pasting\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Read composite rule config into {@link DingtalkSettings}\n          \n          \n            \n                 * Read alarm rule config into {@link DingtalkSettings}", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499243446", "createdAt": "2020-10-04T12:51:22Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReader.java", "diffHunk": "@@ -203,4 +206,25 @@ private void readCompositeRuleConfig(Rules rules) {\n             }\n         });\n     }\n+\n+    /**\n+     * Read composite rule config into {@link DingtalkSettings}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzY0NA==", "bodyText": "Please confirm that whether the default settings in the application.yaml makes this.alarmRulesWatcher.getDingtalkSettings().getWebhooks() null, if yes there is possible NPE", "url": "https://github.com/apache/skywalking/pull/5628#discussion_r499243644", "createdAt": "2020-10-04T12:53:26Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/dingtalk/DingtalkHookCallback.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.alarm.provider.dingtalk;\n+\n+import io.netty.handler.codec.http.HttpHeaderValues;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.http.HttpHeaders;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.StatusLine;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.util.EntityUtils;\n+import org.apache.skywalking.apm.util.StringUtil;\n+import org.apache.skywalking.oap.server.core.alarm.AlarmCallback;\n+import org.apache.skywalking.oap.server.core.alarm.AlarmMessage;\n+import org.apache.skywalking.oap.server.core.alarm.provider.AlarmRulesWatcher;\n+\n+import javax.crypto.Mac;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLEncoder;\n+import java.nio.charset.StandardCharsets;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.util.Base64;\n+import java.util.List;\n+\n+/**\n+ * Use SkyWalking alarm dingtalk webhook API.\n+ */\n+@Slf4j\n+public class DingtalkHookCallback implements AlarmCallback {\n+\n+    private static final int HTTP_CONNECT_TIMEOUT = 1000;\n+    private static final int HTTP_CONNECTION_REQUEST_TIMEOUT = 1000;\n+    private static final int HTTP_SOCKET_TIMEOUT = 10000;\n+    private AlarmRulesWatcher alarmRulesWatcher;\n+    private RequestConfig requestConfig;\n+\n+    public DingtalkHookCallback(final AlarmRulesWatcher alarmRulesWatcher) {\n+        this.alarmRulesWatcher = alarmRulesWatcher;\n+        this.requestConfig = RequestConfig.custom()\n+                .setConnectTimeout(HTTP_CONNECT_TIMEOUT)\n+                .setConnectionRequestTimeout(HTTP_CONNECTION_REQUEST_TIMEOUT)\n+                .setSocketTimeout(HTTP_SOCKET_TIMEOUT)\n+                .build();\n+    }\n+\n+    /**\n+     * Send alarm message if the settings not empty\n+     */\n+    @Override\n+    public void doAlarm(List<AlarmMessage> alarmMessages) {\n+        if (this.alarmRulesWatcher.getDingtalkSettings() == null || this.alarmRulesWatcher.getDingtalkSettings().getWebhooks().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3127ce538fd3a8ec68b28ada0cfc0fbac800ac"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bab1e9f6b6af1e25f060c4359b477cd46bb48e67", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/bab1e9f6b6af1e25f060c4359b477cd46bb48e67", "committedDate": "2020-10-04T14:27:06Z", "message": "fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6dbdb3f68f158cac8e72ac0ca3bba3af4dc7428", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/e6dbdb3f68f158cac8e72ac0ca3bba3af4dc7428", "committedDate": "2020-10-04T15:22:41Z", "message": "Merge branch 'master' into alarm-dingtalk"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTA0ODIy", "url": "https://github.com/apache/skywalking/pull/5628#pullrequestreview-501904822", "createdAt": "2020-10-05T10:05:52Z", "commit": {"oid": "e6dbdb3f68f158cac8e72ac0ca3bba3af4dc7428"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTc2MzY0", "url": "https://github.com/apache/skywalking/pull/5628#pullrequestreview-501976364", "createdAt": "2020-10-05T11:50:46Z", "commit": {"oid": "e6dbdb3f68f158cac8e72ac0ca3bba3af4dc7428"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1801, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}