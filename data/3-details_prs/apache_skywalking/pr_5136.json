{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNDEzMDM2", "number": 5136, "title": "Separate config initialization in the plugin out of core level Config.", "bodyText": "In the current agent core, the Config in the core is heavily binding with many plugins, because it is the only way to do configurations injection through agent.config, properties,  and system env. With the increment of plugins, especially the transport plugin(Kafka) and backend service discovery plugin(k8s), the Config class is being out of control.\nIn this PR, I support all plugins to provide its one or more Config Initialization Services and could initial the plugin configurations used by themselves only. This should be the better way to provide a plugin as an independent module as we mentioned in our design principle.\nBy leveraging our ClassLoader, once the org.apache.skywalking.apm.agent.core.boot.PluginConfig implementations loaded, it would be initialized inside the agent core.\nAt the same time, all plugin configurations should be kept unchanged. Users wouldn't feel this change happened.\nResolves #5130 FYI @EvanLjp", "createdAt": "2020-07-20T12:45:43Z", "url": "https://github.com/apache/skywalking/pull/5136", "merged": true, "mergeCommit": {"oid": "20b1b51798f8fbbbe043aa8ee2951cc1dbcd16bb"}, "closed": true, "closedAt": "2020-07-21T12:51:57Z", "author": {"login": "wu-sheng"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2w8UNgH2gAyNDUzNDEzMDM2OmNhN2Q1N2FkZWRiM2M1ZjhkYzBjYmYwYTVmY2JjMGJjNjdiNmMzZWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3E2l7AFqTQ1MjM3ODE2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca7d57adedb3c5f8dc0cbf0a5fcbc0bc67b6c3ee", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/ca7d57adedb3c5f8dc0cbf0a5fcbc0bc67b6c3ee", "committedDate": "2020-07-20T12:39:19Z", "message": "Separate config initialization in the plugin out of core level Config."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTg1MTg5", "url": "https://github.com/apache/skywalking/pull/5136#pullrequestreview-451585189", "createdAt": "2020-07-20T13:04:50Z", "commit": {"oid": "ca7d57adedb3c5f8dc0cbf0a5fcbc0bc67b6c3ee"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMzowNDo1MFrOG0LQyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMzowNToxMVrOG0LRxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM2MzY1Nw==", "bodyText": "I didn't see any particular usage of this method, all implementations of this interface return the class itself, just to get the implemented class, I think this method is no needed actually", "url": "https://github.com/apache/skywalking/pull/5136#discussion_r457363657", "createdAt": "2020-07-20T13:04:50Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/boot/ConfigInitializationService.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.boot;\n+\n+/**\n+ * ConfigInitializationService provides the config class which should host all parameters originally from agent setup.\n+ * {@link org.apache.skywalking.apm.agent.core.conf.Config} provides the core level config, all plugins could implement\n+ * this interface to have the same capability about initializing config from agent.config, system properties and system\n+ * environment variables.\n+ */\n+public interface ConfigInitializationService {\n+    /**\n+     * @return Config to host parameters, all static fields set based on the config variable name.\n+     */\n+    Class config();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7d57adedb3c5f8dc0cbf0a5fcbc0bc67b6c3ee"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM2MzkxMQ==", "bodyText": "Here is what I mean\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        SnifferConfigInitializer.initializeConfig(configInitializationService.config());\n          \n          \n            \n                        SnifferConfigInitializer.initializeConfig(configInitializationService.getClass());", "url": "https://github.com/apache/skywalking/pull/5136#discussion_r457363911", "createdAt": "2020-07-20T13:05:11Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/boot/PluginConfigInitializer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.boot;\n+\n+import java.util.ServiceLoader;\n+import org.apache.skywalking.apm.agent.core.conf.SnifferConfigInitializer;\n+import org.apache.skywalking.apm.agent.core.plugin.loader.AgentClassLoader;\n+\n+/**\n+ * PluginConfigInitializer loads Config(s) in all existing plugins, and initialize them through current agent settings.\n+ */\n+public class PluginConfigInitializer {\n+    public void initConfigurationsOfAllPlugins() {\n+        final ServiceLoader<ConfigInitializationService> configServiceLoader = ServiceLoader.load(\n+            ConfigInitializationService.class, AgentClassLoader.getDefault());\n+        configServiceLoader.forEach(configInitializationService -> {\n+            SnifferConfigInitializer.initializeConfig(configInitializationService.config());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7d57adedb3c5f8dc0cbf0a5fcbc0bc67b6c3ee"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5d13666401c0ec7273d434df0bdc93024cb2886", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/f5d13666401c0ec7273d434df0bdc93024cb2886", "committedDate": "2020-07-20T13:48:20Z", "message": "Try to use SkyWalking ClassLoader to initialize the Config class."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjY5MzMw", "url": "https://github.com/apache/skywalking/pull/5136#pullrequestreview-451669330", "createdAt": "2020-07-20T14:38:00Z", "commit": {"oid": "f5d13666401c0ec7273d434df0bdc93024cb2886"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDozODowMFrOG0QW8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDozODoyNFrOG0QYNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ0NzE1NQ==", "bodyText": "Is it intentionally named with a Service suffix? Seems very different from others", "url": "https://github.com/apache/skywalking/pull/5136#discussion_r457447155", "createdAt": "2020-07-20T14:38:00Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/optional-plugins/customize-enhance-plugin/src/main/java/org/apache/skywalking/apm/plugin/customize/conf/PluginConfigService.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.customize.conf;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.skywalking.apm.agent.core.boot.PluginConfig;\n+\n+public class PluginConfigService implements PluginConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d13666401c0ec7273d434df0bdc93024cb2886"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ0NzQ3OQ==", "bodyText": "And this one", "url": "https://github.com/apache/skywalking/pull/5136#discussion_r457447479", "createdAt": "2020-07-20T14:38:24Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-toolkit-activation/apm-toolkit-trace-activation/src/main/java/org/apache/skywalking/apm/toolkit/activation/ToolkitPluginConfigService.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.toolkit.activation;\n+\n+import org.apache.skywalking.apm.agent.core.boot.PluginConfig;\n+\n+public class ToolkitPluginConfigService implements PluginConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d13666401c0ec7273d434df0bdc93024cb2886"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7c990268307660be70c94f0db7efd960f935b9e", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/d7c990268307660be70c94f0db7efd960f935b9e", "committedDate": "2020-07-20T14:53:43Z", "message": "Fix 2 naming issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjg3MzU0", "url": "https://github.com/apache/skywalking/pull/5136#pullrequestreview-451687354", "createdAt": "2020-07-20T14:56:42Z", "commit": {"oid": "d7c990268307660be70c94f0db7efd960f935b9e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9af8f3665ce8323d5a3e3fc58535b0a5a9ae490", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/d9af8f3665ce8323d5a3e3fc58535b0a5a9ae490", "committedDate": "2020-07-21T00:47:36Z", "message": "Fix config initialization bug."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b87cf2fd6f061c5151239ebdcf96d880f9b12b6", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/3b87cf2fd6f061c5151239ebdcf96d880f9b12b6", "committedDate": "2020-07-21T08:21:16Z", "message": "Fix Custom Plugin in separate config initialization in the plugin out of core level Config. (#5141)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57e06e853c76258f8592112ce3194fb5a5e422a7", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/57e06e853c76258f8592112ce3194fb5a5e422a7", "committedDate": "2020-07-21T08:48:12Z", "message": "Merge branch 'master' into configInit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMzcyOTYz", "url": "https://github.com/apache/skywalking/pull/5136#pullrequestreview-452372963", "createdAt": "2020-07-21T11:43:20Z", "commit": {"oid": "57e06e853c76258f8592112ce3194fb5a5e422a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMzc4MTY3", "url": "https://github.com/apache/skywalking/pull/5136#pullrequestreview-452378167", "createdAt": "2020-07-21T11:51:10Z", "commit": {"oid": "57e06e853c76258f8592112ce3194fb5a5e422a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2105, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}