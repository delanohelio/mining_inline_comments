{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0Nzg0MzA2", "number": 5585, "title": "fix timebucket converter issue", "bodyText": "Please answer these questions before submitting a pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n\n\n\nBug fix\n\n\nBug description.\n\n\nHow to fix?\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.", "createdAt": "2020-09-29T12:12:30Z", "url": "https://github.com/apache/skywalking/pull/5585", "merged": true, "mergeCommit": {"oid": "d0b020e5a81a55c61d49eebc5337e5a8726b8d66"}, "closed": true, "closedAt": "2020-10-02T09:05:50Z", "author": {"login": "dmsolr"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNmzD-gH2gAyNDk0Nzg0MzA2OmM1YmFlNGZiNDE3OTBmMTc3ZTQ0OTE3MGYxY2E3ZDZmZjk0YmY0MGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOhRsTAFqTUwMDkyOTUzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5bae4fb41790f177e449170f1ca7d6ff94bf40c", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/c5bae4fb41790f177e449170f1ca7d6ff94bf40c", "committedDate": "2020-09-29T11:50:25Z", "message": "fix timebucket converter issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e501f202e6f19ef16fc10dd9310e81b1244ff00a", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/e501f202e6f19ef16fc10dd9310e81b1244ff00a", "committedDate": "2020-09-29T12:11:20Z", "message": "fix timebucket converter issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NDE5MzE1", "url": "https://github.com/apache/skywalking/pull/5585#pullrequestreview-498419315", "createdAt": "2020-09-29T12:35:33Z", "commit": {"oid": "e501f202e6f19ef16fc10dd9310e81b1244ff00a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjozNTozM1rOHZq7fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjozNjo0N1rOHZq-gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3OTgwNQ==", "bodyText": "Do you need these if you already have calendar.setTimeInMillis(0);?", "url": "https://github.com/apache/skywalking/pull/5585#discussion_r496679805", "createdAt": "2020-09-29T12:35:33Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/TimeBucket.java", "diffHunk": "@@ -104,6 +104,10 @@ public static boolean isDayBucket(long timeBucket) {\n     public static long getTimestamp(long timeBucket, DownSampling downsampling) {\n         Calendar calendar = Calendar.getInstance();\n         calendar.setTimeInMillis(0);\n+        calendar.set(Calendar.MILLISECOND, 0);\n+        calendar.set(Calendar.SECOND, 0);\n+        calendar.set(Calendar.MINUTE, 0);\n+        calendar.set(Calendar.HOUR_OF_DAY, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e501f202e6f19ef16fc10dd9310e81b1244ff00a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4MDU3OQ==", "bodyText": "Suggest to add comment about the deliberate \"fall through\" of the switch statement (as well as the ordering), in case future developers consider it as a bug, which is common", "url": "https://github.com/apache/skywalking/pull/5585#discussion_r496680579", "createdAt": "2020-09-29T12:36:47Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-core/src/test/java/org/apache/skywalking/oap/server/core/analysis/TimeBucketTest.java", "diffHunk": "@@ -18,63 +18,54 @@\n \n package org.apache.skywalking.oap.server.core.analysis;\n \n-import java.util.concurrent.TimeUnit;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.junit.runners.Parameterized;\n \n-import static java.util.concurrent.TimeUnit.DAYS;\n-import static java.util.concurrent.TimeUnit.HOURS;\n-import static java.util.concurrent.TimeUnit.MILLISECONDS;\n-import static java.util.concurrent.TimeUnit.MINUTES;\n-import static java.util.concurrent.TimeUnit.SECONDS;\n+import java.util.Calendar;\n+import java.util.TimeZone;\n \n @RunWith(Parameterized.class)\n public class TimeBucketTest {\n     private static final long NOW = System.currentTimeMillis();\n \n     @Parameterized.Parameters\n-    public static Object[][] parameters() {\n-        return new Object[][] {\n-            {\n+    public static Object[] parameters() {\n+        return new Object[]{\n                 DownSampling.Second,\n-                SECONDS,\n-                MILLISECONDS.toSeconds(NOW)\n-            },\n-            {\n                 DownSampling.Minute,\n-                MINUTES,\n-                MILLISECONDS.toMinutes(NOW)\n-            },\n-            {\n                 DownSampling.Hour,\n-                HOURS,\n-                MILLISECONDS.toHours(NOW)\n-            },\n-            {\n-                DownSampling.Day,\n-                DAYS,\n-                MILLISECONDS.toDays(NOW)\n-            }\n+                DownSampling.Day\n         };\n     }\n \n     private DownSampling downSampling;\n-    private TimeUnit unit;\n-    private long time;\n \n-    public TimeBucketTest(DownSampling downSampling, TimeUnit unit, long time) {\n+    public TimeBucketTest(DownSampling downSampling) {\n         this.downSampling = downSampling;\n-        this.unit = unit;\n-        this.time = time;\n     }\n \n     @Test\n     public void testConversion() {\n-        long timestamp = TimeBucket\n-            .getTimestamp(TimeBucket.getTimeBucket(NOW, downSampling));\n-        Assert.assertEquals(timestamp, unit.toMillis(time));\n-    }\n+        long timestamp = TimeBucket.getTimestamp(TimeBucket.getTimeBucket(NOW, downSampling));\n \n+        Calendar instance = Calendar.getInstance(TimeZone.getDefault());\n+        instance.setTimeInMillis(NOW);\n+        switch (downSampling) {\n+            case Day: {\n+                instance.set(Calendar.HOUR_OF_DAY, 0);\n+            }\n+            case Hour: {\n+                instance.set(Calendar.MINUTE, 0);\n+            }\n+            case Minute: {\n+                instance.set(Calendar.SECOND, 0);\n+            }\n+            case Second: {\n+                instance.set(Calendar.MILLISECOND, 0);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e501f202e6f19ef16fc10dd9310e81b1244ff00a"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6d0d1307ac2001a2010a03b1281ae341187b2a8", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/d6d0d1307ac2001a2010a03b1281ae341187b2a8", "committedDate": "2020-09-29T23:34:43Z", "message": "Merge branch 'master' into hotfix/timebucket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c65bb7d88f6ab1a234046adcbf0814bbd15fb31", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/3c65bb7d88f6ab1a234046adcbf0814bbd15fb31", "committedDate": "2020-10-01T03:34:14Z", "message": "add comment 'fall throgh'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a63134a0daf33656e858061a62101ac7d1eb1672", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/a63134a0daf33656e858061a62101ac7d1eb1672", "committedDate": "2020-10-02T03:57:05Z", "message": "remove unnecessary set statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4661227e3fe82e3d3f14b8ce9a3614279cc03e2", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/c4661227e3fe82e3d3f14b8ce9a3614279cc03e2", "committedDate": "2020-10-02T07:57:33Z", "message": "Merge branch 'master' into hotfix/timebucket"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwOTI5NTM5", "url": "https://github.com/apache/skywalking/pull/5585#pullrequestreview-500929539", "createdAt": "2020-10-02T07:58:22Z", "commit": {"oid": "c4661227e3fe82e3d3f14b8ce9a3614279cc03e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1751, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}