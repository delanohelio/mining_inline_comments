{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NjE1OTE3", "number": 4529, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNDo0MjoxNlrODolMvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNDo0MjoxNlrODolMvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODc5MTAzOnYy", "diffSide": "RIGHT", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/AlarmQuery.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNDo0MjoxNlrOF3Nx8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNTowNjoxMlrOF3OGnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0MTc3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(\"/\", \"\\\\/\")));\n          \n          \n            \n                        recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(\"/\", \"\\\\\\\\/\")));", "url": "https://github.com/apache/skywalking/pull/4529#discussion_r393441777", "createdAt": "2020-03-17T04:42:16Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/AlarmQuery.java", "diffHunk": "@@ -64,7 +64,7 @@ public Alarms getAlarm(Integer scopeId, String keyword, int limit, int from, lon\n                        .and(lte(InfluxClient.TIME, InfluxClient.timeInterval(endTB)));\n         }\n         if (!Strings.isNullOrEmpty(keyword)) {\n-            recallQuery.and(regex(AlarmRecord.ALARM_MESSAGE, keyword));\n+            recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(\"/\", \"\\\\/\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d4bbee46da831ee0b2e20b25bbfa51e7dbb1e68"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0MjYxMw==", "bodyText": "Why four ? How many do we need?\n@kezhenxu94 we may need an e2e query for alarm in the future.", "url": "https://github.com/apache/skywalking/pull/4529#discussion_r393442613", "createdAt": "2020-03-17T04:46:15Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/AlarmQuery.java", "diffHunk": "@@ -64,7 +64,7 @@ public Alarms getAlarm(Integer scopeId, String keyword, int limit, int from, lon\n                        .and(lte(InfluxClient.TIME, InfluxClient.timeInterval(endTB)));\n         }\n         if (!Strings.isNullOrEmpty(keyword)) {\n-            recallQuery.and(regex(AlarmRecord.ALARM_MESSAGE, keyword));\n+            recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(\"/\", \"\\\\/\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0MTc3Nw=="}, "originalCommit": {"oid": "8d4bbee46da831ee0b2e20b25bbfa51e7dbb1e68"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0Mzc0MA==", "bodyText": "Why four ? How many do we need?\n\n\"\\\\\" => \\, \\ in regexp pattern is for escaping, so \\\\\\\\ in string literal => \"\\\\(escape in string literal)\\\\(escape in string literal)\" => \\\\ (escape \\ in regexp)", "url": "https://github.com/apache/skywalking/pull/4529#discussion_r393443740", "createdAt": "2020-03-17T04:50:59Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/AlarmQuery.java", "diffHunk": "@@ -64,7 +64,7 @@ public Alarms getAlarm(Integer scopeId, String keyword, int limit, int from, lon\n                        .and(lte(InfluxClient.TIME, InfluxClient.timeInterval(endTB)));\n         }\n         if (!Strings.isNullOrEmpty(keyword)) {\n-            recallQuery.and(regex(AlarmRecord.ALARM_MESSAGE, keyword));\n+            recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(\"/\", \"\\\\/\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0MTc3Nw=="}, "originalCommit": {"oid": "8d4bbee46da831ee0b2e20b25bbfa51e7dbb1e68"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0MzgxOQ==", "bodyText": "@kezhenxu94 we may need an e2e query for alarm in the future.\n\nplease create an issue to track in case we all forget", "url": "https://github.com/apache/skywalking/pull/4529#discussion_r393443819", "createdAt": "2020-03-17T04:51:19Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/AlarmQuery.java", "diffHunk": "@@ -64,7 +64,7 @@ public Alarms getAlarm(Integer scopeId, String keyword, int limit, int from, lon\n                        .and(lte(InfluxClient.TIME, InfluxClient.timeInterval(endTB)));\n         }\n         if (!Strings.isNullOrEmpty(keyword)) {\n-            recallQuery.and(regex(AlarmRecord.ALARM_MESSAGE, keyword));\n+            recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(\"/\", \"\\\\/\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0MTc3Nw=="}, "originalCommit": {"oid": "8d4bbee46da831ee0b2e20b25bbfa51e7dbb1e68"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0NDU0MA==", "bodyText": "Why four ? How many do we need?\n\n\"\\\\\" => \\, \\ in regexp pattern is for escaping, so \\\\\\\\ in string literal => \"\\\\(escape in string literal)\\\\(escape in string literal)\" => \\\\ (escape \\ in regexp)\n\n@wu-sheng @dmsolr if you're not sure, please refer to the JavaDoc of java.util.regex.Matcher#replaceAll or simply run the following test:\n    public static void main(String[] args) {\n        System.out.println(\"/abc/\".replaceAll(\"/\", \"\\\\/\"));\n        // still produce /abc/ , not \\/abc\\/\n        System.out.println(\"/abc/\".replaceAll(\"/\", \"\\\\\\\\/\"));\n        // produce \\/abc\\/ , which is what we want,\n    }", "url": "https://github.com/apache/skywalking/pull/4529#discussion_r393444540", "createdAt": "2020-03-17T04:54:23Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/AlarmQuery.java", "diffHunk": "@@ -64,7 +64,7 @@ public Alarms getAlarm(Integer scopeId, String keyword, int limit, int from, lon\n                        .and(lte(InfluxClient.TIME, InfluxClient.timeInterval(endTB)));\n         }\n         if (!Strings.isNullOrEmpty(keyword)) {\n-            recallQuery.and(regex(AlarmRecord.ALARM_MESSAGE, keyword));\n+            recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(\"/\", \"\\\\/\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0MTc3Nw=="}, "originalCommit": {"oid": "8d4bbee46da831ee0b2e20b25bbfa51e7dbb1e68"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0NzA2OA==", "bodyText": "Got it", "url": "https://github.com/apache/skywalking/pull/4529#discussion_r393447068", "createdAt": "2020-03-17T05:06:12Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/AlarmQuery.java", "diffHunk": "@@ -64,7 +64,7 @@ public Alarms getAlarm(Integer scopeId, String keyword, int limit, int from, lon\n                        .and(lte(InfluxClient.TIME, InfluxClient.timeInterval(endTB)));\n         }\n         if (!Strings.isNullOrEmpty(keyword)) {\n-            recallQuery.and(regex(AlarmRecord.ALARM_MESSAGE, keyword));\n+            recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(\"/\", \"\\\\/\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0MTc3Nw=="}, "originalCommit": {"oid": "8d4bbee46da831ee0b2e20b25bbfa51e7dbb1e68"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4443, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}