{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MDM2NDI1", "number": 5270, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDoxMzoyNFrOEWoEeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozNzo0NVrOEWs_qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTYwNjMyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDoxMzoyNFrOG9-47A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDoxMzoyNFrOG9-47A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY0NjcwMA==", "bodyText": "Tag keys could be duplicated as it is in the different spans, what will happen here?", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467646700", "createdAt": "2020-08-10T00:13:24Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java", "diffHunk": "@@ -68,6 +71,15 @@ public InfluxInsertRequest addFieldAsTag(String fieldName, String tagName) {\n         return this;\n     }\n \n+    public InfluxInsertRequest tags(List<SpanTag> tags) {\n+        if (!Objects.isNull(tags) && !tags.isEmpty()) {\n+            for (final SpanTag tag : tags) {\n+                builder.addField(tag.getKey(), tag.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d41801b56e7daaee00416c67166fb2947d865391"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjQwODY1OnYy", "diffSide": "RIGHT", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozNjowN1rOG-Fylg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozNjowN1rOG-Fylg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1OTc2Ng==", "bodyText": "This should be replaced by CollectionUtil#isNotEmpty.", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467759766", "createdAt": "2020-08-10T08:36:07Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java", "diffHunk": "@@ -121,6 +125,13 @@ public TraceBrief queryBasicTraces(long startSecondTB,\n                 recallQuery.and(eq(SegmentRecord.IS_ERROR, BooleanUtils.FALSE));\n                 break;\n         }\n+        if (Objects.nonNull(tags) && !tags.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b44bc4fa1bf55400579b5209c2308a8c05c06f8"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjQwOTYwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozNjoyNlrOG-FzHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODo0Mjo0MlrOG-F-yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1OTkwMQ==", "bodyText": "This should be and. All tags in the conditions should be matched.", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467759901", "createdAt": "2020-08-10T08:36:26Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java", "diffHunk": "@@ -121,6 +125,13 @@ public TraceBrief queryBasicTraces(long startSecondTB,\n                 recallQuery.and(eq(SegmentRecord.IS_ERROR, BooleanUtils.FALSE));\n                 break;\n         }\n+        if (Objects.nonNull(tags) && !tags.isEmpty()) {\n+            WhereNested<WhereQueryImpl<SelectQueryImpl>> nested = recallQuery.andNested();\n+            for (final SpanTag tag : tags) {\n+                nested.or(contains(tag.getKey(), tag.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b44bc4fa1bf55400579b5209c2308a8c05c06f8"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MDAwMA==", "bodyText": "Where is the regex match you mentioned?", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467760000", "createdAt": "2020-08-10T08:36:40Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java", "diffHunk": "@@ -121,6 +125,13 @@ public TraceBrief queryBasicTraces(long startSecondTB,\n                 recallQuery.and(eq(SegmentRecord.IS_ERROR, BooleanUtils.FALSE));\n                 break;\n         }\n+        if (Objects.nonNull(tags) && !tags.isEmpty()) {\n+            WhereNested<WhereQueryImpl<SelectQueryImpl>> nested = recallQuery.andNested();\n+            for (final SpanTag tag : tags) {\n+                nested.or(contains(tag.getKey(), tag.getValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1OTkwMQ=="}, "originalCommit": {"oid": "4b44bc4fa1bf55400579b5209c2308a8c05c06f8"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2Mjg4OA==", "bodyText": "Oh, I see you just contains as existing, so could be a mismatch if there is one value includes another one's, such as 200 with 2000.", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467762888", "createdAt": "2020-08-10T08:42:42Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java", "diffHunk": "@@ -121,6 +125,13 @@ public TraceBrief queryBasicTraces(long startSecondTB,\n                 recallQuery.and(eq(SegmentRecord.IS_ERROR, BooleanUtils.FALSE));\n                 break;\n         }\n+        if (Objects.nonNull(tags) && !tags.isEmpty()) {\n+            WhereNested<WhereQueryImpl<SelectQueryImpl>> nested = recallQuery.andNested();\n+            for (final SpanTag tag : tags) {\n+                nested.or(contains(tag.getKey(), tag.getValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1OTkwMQ=="}, "originalCommit": {"oid": "4b44bc4fa1bf55400579b5209c2308a8c05c06f8"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjQxMzIwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozNzo0NVrOG-F1Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozNzo0NVrOG-F1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MDQzNQ==", "bodyText": "Local IDE shows, this method is useless.", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467760435", "createdAt": "2020-08-10T08:37:45Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java", "diffHunk": "@@ -68,6 +71,20 @@ public InfluxInsertRequest addFieldAsTag(String fieldName, String tagName) {\n         return this;\n     }\n \n+    public InfluxInsertRequest tags(List<SpanTag> tags) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b44bc4fa1bf55400579b5209c2308a8c05c06f8"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4926, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}