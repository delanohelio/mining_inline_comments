{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3NjQ5MjAw", "number": 5995, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMjoxNjowMFrOFEUBew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMzoyNjoxM1rOFEUoeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDY2NjgzOnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/remote/client/RemoteClientManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMjoxNjowMFrOIEZKsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMjozNjozMlrOIEZX9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ3NzU1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                          && !remoteClientAction.getRemoteClient().getAddress().isSelf()\n          \n          \n            \n                                                          && \n          \n          \n            \n            remoteClientAction.getRemoteClient() != null\n          \n          \n            \n                                                          &&                                           !remoteClientAction.getRemoteClient().getAddress().isSelf()", "url": "https://github.com/apache/skywalking/pull/5995#discussion_r541477553", "createdAt": "2020-12-12T02:16:00Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/remote/client/RemoteClientManager.java", "diffHunk": "@@ -230,7 +246,10 @@ private void reBuildRemoteClients(List<RemoteInstance> remoteInstances) {\n \n         remoteClientCollection.values()\n                               .stream()\n-                              .filter(remoteClientAction -> remoteClientAction.getAction().equals(Action.Close))\n+                              .filter(remoteClientAction ->\n+                                          remoteClientAction.getAction().equals(Action.Close)\n+                                              && !remoteClientAction.getRemoteClient().getAddress().isSelf()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c707e4a4cabb11bb022ea7f4dedff31ec61cc8ac"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ4MDk0OA==", "bodyText": "This would not be null. I enhanced another by following Filter OAP instances(unassigned in booting stage) of the empty IP in KubernetesCoordinator.", "url": "https://github.com/apache/skywalking/pull/5995#discussion_r541480948", "createdAt": "2020-12-12T02:36:32Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/remote/client/RemoteClientManager.java", "diffHunk": "@@ -230,7 +246,10 @@ private void reBuildRemoteClients(List<RemoteInstance> remoteInstances) {\n \n         remoteClientCollection.values()\n                               .stream()\n-                              .filter(remoteClientAction -> remoteClientAction.getAction().equals(Action.Close))\n+                              .filter(remoteClientAction ->\n+                                          remoteClientAction.getAction().equals(Action.Close)\n+                                              && !remoteClientAction.getRemoteClient().getAddress().isSelf()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ3NzU1Mw=="}, "originalCommit": {"oid": "c707e4a4cabb11bb022ea7f4dedff31ec61cc8ac"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDc2NjYyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/KubernetesCoordinator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMzoyNjoxMlrOIEZ2zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMzoyNjoxMlrOIEZ2zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ4ODg0NQ==", "bodyText": "NULL_DEREFERENCE:  object returned by pod.getStatus() could be null and is dereferenced at line 78.", "url": "https://github.com/apache/skywalking/pull/5995#discussion_r541488845", "createdAt": "2020-12-12T03:26:12Z", "author": {"login": "sonatype-lift"}, "path": "oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/KubernetesCoordinator.java", "diffHunk": "@@ -66,23 +65,25 @@ public KubernetesCoordinator(final ModuleDefineHolder manager,\n             List<V1Pod> pods = NamespacedPodListInformer.INFORMER.listPods().orElseGet(this::selfPod);\n             if (log.isDebugEnabled()) {\n                 List<String> uidList = pods\n-                        .stream()\n-                        .map(item -> item.getMetadata().getUid())\n-                        .collect(Collectors.toList());\n+                    .stream()\n+                    .map(item -> item.getMetadata().getUid())\n+                    .collect(Collectors.toList());\n                 log.debug(\"[kubernetes cluster pods uid list]:{}\", uidList.toString());\n             }\n             if (port == -1) {\n                 port = manager.find(CoreModule.NAME).provider().getService(ConfigService.class).getGRPCPort();\n             }\n-            List<RemoteInstance> remoteInstances =  pods.stream()\n+            List<RemoteInstance> remoteInstances =\n+                pods.stream()\n+                    .filter(pod -> StringUtil.isNotBlank(pod.getStatus().getPodIP()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34870014eb3facb09954da00490b1ff3291867d7"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDc2NjY1OnYy", "diffSide": "RIGHT", "path": "oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/KubernetesCoordinator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMzoyNjoxM1rOIEZ20A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMzoyNjoxM1rOIEZ20A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ4ODg0OA==", "bodyText": "NULL_DEREFERENCE:  object returned by pod.getStatus() could be null and is dereferenced at line 80.", "url": "https://github.com/apache/skywalking/pull/5995#discussion_r541488848", "createdAt": "2020-12-12T03:26:13Z", "author": {"login": "sonatype-lift"}, "path": "oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/KubernetesCoordinator.java", "diffHunk": "@@ -66,23 +65,25 @@ public KubernetesCoordinator(final ModuleDefineHolder manager,\n             List<V1Pod> pods = NamespacedPodListInformer.INFORMER.listPods().orElseGet(this::selfPod);\n             if (log.isDebugEnabled()) {\n                 List<String> uidList = pods\n-                        .stream()\n-                        .map(item -> item.getMetadata().getUid())\n-                        .collect(Collectors.toList());\n+                    .stream()\n+                    .map(item -> item.getMetadata().getUid())\n+                    .collect(Collectors.toList());\n                 log.debug(\"[kubernetes cluster pods uid list]:{}\", uidList.toString());\n             }\n             if (port == -1) {\n                 port = manager.find(CoreModule.NAME).provider().getService(ConfigService.class).getGRPCPort();\n             }\n-            List<RemoteInstance> remoteInstances =  pods.stream()\n+            List<RemoteInstance> remoteInstances =\n+                pods.stream()\n+                    .filter(pod -> StringUtil.isNotBlank(pod.getStatus().getPodIP()))\n                     .map(pod -> new RemoteInstance(\n-                            new Address(pod.getStatus().getPodIP(), port, pod.getMetadata().getUid().equals(uid))))\n+                        new Address(pod.getStatus().getPodIP(), port, pod.getMetadata().getUid().equals(uid))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34870014eb3facb09954da00490b1ff3291867d7"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4667, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}