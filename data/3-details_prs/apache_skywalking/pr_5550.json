{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxOTI5ODcz", "number": 5550, "title": "add support for dbcp 2.x plugin", "bodyText": "Please answer these questions before submitting a pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n\n\n\nBug fix\n\n\nBug description.\n\n\nHow to fix?\n\n\n\nNew feature or improvement\n\nThis plugin can collect the information of dbcp\n\nWhat processes can this plugin monitor?\n\nget connection from pool\nclose connection from pool\ncreate pool\nclose pool\n\n\nOther Information\nThere are something wrong with mysql plugin, I have issued this problem in 5549", "createdAt": "2020-09-23T17:25:58Z", "url": "https://github.com/apache/skywalking/pull/5550", "merged": true, "mergeCommit": {"oid": "bc7afa63476b61b44ae6464c09ca381e133d17c8"}, "closed": true, "closedAt": "2020-11-08T01:41:57Z", "author": {"login": "Jargon96"}, "timelineItems": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLvC5JAH2gAyNDkxOTI5ODczOjBlZjhhOGY4MGM0ZDNhMjgyNzMwOTYzOGI1ZDFiZjNmZjJmNDBiYjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdaWDe_gFqTUyNTY5NzY2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0ef8a8f80c4d3a2827309638b5d1bf3ff2f40bb0", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/0ef8a8f80c4d3a2827309638b5d1bf3ff2f40bb0", "committedDate": "2020-09-23T16:19:06Z", "message": "Add support for dbcp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ef8be3d81d2b2228b1bb8361195b7e6417a3ec6", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/2ef8be3d81d2b2228b1bb8361195b7e6417a3ec6", "committedDate": "2020-09-23T16:41:08Z", "message": "delete something useless for dbcp plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06793c5dc390e585ce7caa5c3911276ace3da2ed", "author": {"user": {"login": "Jargon96", "name": "King"}}, "url": "https://github.com/apache/skywalking/commit/06793c5dc390e585ce7caa5c3911276ace3da2ed", "committedDate": "2020-09-24T00:44:28Z", "message": "Merge branch 'master' into dbcp-2.x-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a345ae524a413a545e91953c2517814f7d26db9", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/4a345ae524a413a545e91953c2517814f7d26db9", "committedDate": "2020-09-24T06:10:06Z", "message": "Merge branch 'master' of github.com:apache/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaf58825f9ab19e70509d72f794518b64d875295", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/eaf58825f9ab19e70509d72f794518b64d875295", "committedDate": "2020-09-24T11:28:14Z", "message": "update plugin list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a048c0d7a4a35dd1f57f3218d5f0b76fe6ae453d", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/a048c0d7a4a35dd1f57f3218d5f0b76fe6ae453d", "committedDate": "2020-09-24T12:02:32Z", "message": "Merge branch 'dbcp-2.x-plugin' of github.com:Jargon96/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddc53eb0d5aa184bf8bcc12cdcd5d7972339ac9b", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/ddc53eb0d5aa184bf8bcc12cdcd5d7972339ac9b", "committedDate": "2020-09-24T15:04:16Z", "message": "add license to pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28330f2a6bff4fad632a76dcc72e95813567be17", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/28330f2a6bff4fad632a76dcc72e95813567be17", "committedDate": "2020-09-24T16:19:46Z", "message": "update dbcp plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9231dbcf1acb3d6d354ca584c39064585630d8ec", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/9231dbcf1acb3d6d354ca584c39064585630d8ec", "committedDate": "2020-09-26T17:19:56Z", "message": "update dbcp plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "870d616d81ae68640d68d055080737b283a40a45", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/870d616d81ae68640d68d055080737b283a40a45", "committedDate": "2020-09-26T17:23:16Z", "message": "Merge branch 'master' of github.com:apache/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDM4NjU2", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-497038656", "createdAt": "2020-09-27T00:06:14Z", "commit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMDowNjoxNFrOHYjbOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMDoxNDoxMFrOHYjdTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODI4Mg==", "bodyText": "This is not the right way to close Statement.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508282", "createdAt": "2020-09-27T00:06:14Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/dbcp-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/dbcp/SQLExecutor.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.dbcp;\n+\n+import org.apache.commons.dbcp2.BasicDataSource;\n+import org.apache.commons.dbcp2.BasicDataSourceFactory;\n+\n+import java.io.InputStream;\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.Properties;\n+\n+public class SQLExecutor implements AutoCloseable {\n+    public static BasicDataSource ds;\n+    private static Connection connection;\n+\n+    public SQLExecutor() throws SQLException {\n+        try {\n+            Properties properties = new Properties();\n+            properties.setProperty(\"driverClassName\", \"com.mysql.jdbc.Driver\");\n+            properties.setProperty(\"url\", MysqlConfig.getUrl());\n+            properties.setProperty(\"username\", MysqlConfig.getUserName());\n+            properties.setProperty(\"password\", MysqlConfig.getPassword());\n+            ds = BasicDataSourceFactory.createDataSource(properties);\n+        } catch (Exception e) {\n+            //\n+        }\n+        connection = ds.getConnection();\n+    }\n+\n+    public void createTable(String sql) throws SQLException {\n+        Statement statement = connection.createStatement();\n+        statement.execute(sql);\n+        statement.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODI5OQ==", "bodyText": "Why init the static field in the constructor?", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508299", "createdAt": "2020-09-27T00:06:31Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/dbcp-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/dbcp/SQLExecutor.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.dbcp;\n+\n+import org.apache.commons.dbcp2.BasicDataSource;\n+import org.apache.commons.dbcp2.BasicDataSourceFactory;\n+\n+import java.io.InputStream;\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.Properties;\n+\n+public class SQLExecutor implements AutoCloseable {\n+    public static BasicDataSource ds;\n+    private static Connection connection;\n+\n+    public SQLExecutor() throws SQLException {\n+        try {\n+            Properties properties = new Properties();\n+            properties.setProperty(\"driverClassName\", \"com.mysql.jdbc.Driver\");\n+            properties.setProperty(\"url\", MysqlConfig.getUrl());\n+            properties.setProperty(\"username\", MysqlConfig.getUserName());\n+            properties.setProperty(\"password\", MysqlConfig.getPassword());\n+            ds = BasicDataSourceFactory.createDataSource(properties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODM5Ng==", "bodyText": "Don't use the closing pool. The pool should have the same life cycle as the application.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508396", "createdAt": "2020-09-27T00:07:55Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/dbcp-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/dbcp/SQLExecutor.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.dbcp;\n+\n+import org.apache.commons.dbcp2.BasicDataSource;\n+import org.apache.commons.dbcp2.BasicDataSourceFactory;\n+\n+import java.io.InputStream;\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.Properties;\n+\n+public class SQLExecutor implements AutoCloseable {\n+    public static BasicDataSource ds;\n+    private static Connection connection;\n+\n+    public SQLExecutor() throws SQLException {\n+        try {\n+            Properties properties = new Properties();\n+            properties.setProperty(\"driverClassName\", \"com.mysql.jdbc.Driver\");\n+            properties.setProperty(\"url\", MysqlConfig.getUrl());\n+            properties.setProperty(\"username\", MysqlConfig.getUserName());\n+            properties.setProperty(\"password\", MysqlConfig.getPassword());\n+            ds = BasicDataSourceFactory.createDataSource(properties);\n+        } catch (Exception e) {\n+            //\n+        }\n+        connection = ds.getConnection();\n+    }\n+\n+    public void createTable(String sql) throws SQLException {\n+        Statement statement = connection.createStatement();\n+        statement.execute(sql);\n+        statement.close();\n+        connection.close();\n+        connection = null;\n+    }\n+\n+    public void dropTable(String sql) throws SQLException {\n+        connection = ds.getConnection();\n+        executeStatement(sql);\n+    }\n+\n+    public void executeStatement(String sql) throws SQLException {\n+        Statement statement = connection.createStatement();\n+        statement.execute(sql);\n+        statement.close();\n+    }\n+    \n+    public void closeConnection() throws SQLException {\n+        if (connection != null) {\n+            connection.close();\n+        }\n+    }\n+\n+    public void closePool() throws SQLException {\n+        if (ds != null) {\n+            ds.close();\n+        }\n+    }\n+\n+    @Override\n+    public void close() throws Exception {\n+        closeConnection();\n+        closePool();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODQyMQ==", "bodyText": "Connection pool is not a DB layer.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508421", "createdAt": "2020-09-27T00:08:37Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/dbcp-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/dbcp/v2/PoolingCloseConnectInterceptor.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.skywalking.apm.plugin.dbcp.v2;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class PoolingCloseConnectInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        AbstractSpan span = ContextManager.createLocalSpan(\"DBCP/Connection/\" + method.getName());\n+        span.setComponent(ComponentsDefine.DBCP);\n+        SpanLayer.asDB(span);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODQzOQ==", "bodyText": "Why need this?", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508439", "createdAt": "2020-09-27T00:08:52Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/dbcp-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/dbcp/v2/PoolingCloseConnectInterceptor.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.skywalking.apm.plugin.dbcp.v2;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class PoolingCloseConnectInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        AbstractSpan span = ContextManager.createLocalSpan(\"DBCP/Connection/\" + method.getName());\n+        span.setComponent(ComponentsDefine.DBCP);\n+        SpanLayer.asDB(span);\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        if (ContextManager.isActive()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODQ2Mw==", "bodyText": "Why need this?", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508463", "createdAt": "2020-09-27T00:09:06Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/dbcp-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/dbcp/v2/PoolingCloseConnectInterceptor.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.skywalking.apm.plugin.dbcp.v2;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class PoolingCloseConnectInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        AbstractSpan span = ContextManager.createLocalSpan(\"DBCP/Connection/\" + method.getName());\n+        span.setComponent(ComponentsDefine.DBCP);\n+        SpanLayer.asDB(span);\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        if (ContextManager.isActive()) {\n+            ContextManager.stopSpan();\n+        }\n+        return ret;\n+    }\n+\n+    @Override\n+    public void handleMethodException(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Throwable t) {\n+        if (ContextManager.isActive()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODUwNw==", "bodyText": "Take the reference from the review on PoolingCloseConnectInterceptor.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508507", "createdAt": "2020-09-27T00:09:47Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/dbcp-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/dbcp/v2/PoolingGetConnectInterceptor.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.skywalking.apm.plugin.dbcp.v2;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class PoolingGetConnectInterceptor implements InstanceMethodsAroundInterceptor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODUzMQ==", "bodyText": "Comments are required.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508531", "createdAt": "2020-09-27T00:09:57Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/dbcp-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/dbcp/v2/PoolingCloseConnectInterceptor.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.skywalking.apm.plugin.dbcp.v2;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class PoolingCloseConnectInterceptor implements InstanceMethodsAroundInterceptor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODYwNg==", "bodyText": "Please extends ClassInstanceMethodsEnhancePluginDefine.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508606", "createdAt": "2020-09-27T00:11:02Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/dbcp-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/dbcp/v2/define/BasicDataSourceInstrumentation.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.skywalking.apm.plugin.dbcp.v2.define;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.ConstructorInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.InstanceMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.StaticMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.ClassEnhancePluginDefine;\n+import org.apache.skywalking.apm.agent.core.plugin.match.ClassMatch;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+import static org.apache.skywalking.apm.agent.core.plugin.match.NameMatch.byName;\n+\n+public class BasicDataSourceInstrumentation extends ClassEnhancePluginDefine {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODY3MA==", "bodyText": "Please extends ClassInstanceMethodsEnhancePluginDefine.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508670", "createdAt": "2020-09-27T00:11:32Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/dbcp-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/dbcp/v2/define/DelegatingConnectionInstrumentation.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.skywalking.apm.plugin.dbcp.v2.define;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.ConstructorInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.InstanceMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.StaticMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.ClassEnhancePluginDefine;\n+import org.apache.skywalking.apm.agent.core.plugin.match.ClassMatch;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+import static org.apache.skywalking.apm.agent.core.plugin.match.NameMatch.byName;\n+\n+public class DelegatingConnectionInstrumentation extends ClassEnhancePluginDefine {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODY3Ng==", "bodyText": "Comments required.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508676", "createdAt": "2020-09-27T00:11:41Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/dbcp-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/dbcp/v2/define/BasicDataSourceInstrumentation.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.skywalking.apm.plugin.dbcp.v2.define;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.ConstructorInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.InstanceMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.StaticMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.ClassEnhancePluginDefine;\n+import org.apache.skywalking.apm.agent.core.plugin.match.ClassMatch;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+import static org.apache.skywalking.apm.agent.core.plugin.match.NameMatch.byName;\n+\n+public class BasicDataSourceInstrumentation extends ClassEnhancePluginDefine {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODYwNg=="}, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODc1Nw==", "bodyText": "Create and drop are not typical SQLs in the execution stage, insert/update/delete are.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508757", "createdAt": "2020-09-27T00:13:12Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/dbcp-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/dbcp/controller/CaseController.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.dbcp.controller;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.skywalking.apm.testcase.dbcp.SQLExecutor;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/case\")\n+public class CaseController {\n+\n+    private static final Logger logger = LogManager.getLogger(CaseController.class);\n+\n+    private static final String SUCCESS = \"Success\";\n+\n+    private static final String CREATE_TABLE_SQL = \"CREATE TABLE test_DBCP(\\n\" + \"id VARCHAR(1) PRIMARY KEY, \\n\" + \"value VARCHAR(1) NOT NULL)\";\n+    private static final String DROP_TABLE_SQL = \"DROP table test_DBCP\";\n+    \n+    @RequestMapping(\"/dbcp-2.x-scenario\")\n+    @ResponseBody\n+    public String testcase() throws Exception {\n+        try (SQLExecutor sqlExecute = new SQLExecutor()) {\n+            sqlExecute.createTable(CREATE_TABLE_SQL);\n+            sqlExecute.dropTable(DROP_TABLE_SQL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODgxMw==", "bodyText": "You are using SQLExecutor like a connection, but in the codes, it actually is controlling the whole datasource. This is not right. The real services don't use it in this way.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r495508813", "createdAt": "2020-09-27T00:14:10Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/dbcp-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/dbcp/controller/CaseController.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.dbcp.controller;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.skywalking.apm.testcase.dbcp.SQLExecutor;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/case\")\n+public class CaseController {\n+\n+    private static final Logger logger = LogManager.getLogger(CaseController.class);\n+\n+    private static final String SUCCESS = \"Success\";\n+\n+    private static final String CREATE_TABLE_SQL = \"CREATE TABLE test_DBCP(\\n\" + \"id VARCHAR(1) PRIMARY KEY, \\n\" + \"value VARCHAR(1) NOT NULL)\";\n+    private static final String DROP_TABLE_SQL = \"DROP table test_DBCP\";\n+    \n+    @RequestMapping(\"/dbcp-2.x-scenario\")\n+    @ResponseBody\n+    public String testcase() throws Exception {\n+        try (SQLExecutor sqlExecute = new SQLExecutor()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870d616d81ae68640d68d055080737b283a40a45"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64c2b1fd97aa2454828f75834266f8cb20d234d1", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/64c2b1fd97aa2454828f75834266f8cb20d234d1", "committedDate": "2020-09-28T05:56:47Z", "message": "update dbcp plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca5180f0445645a125b623466d8486d4dbdbdb09", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/ca5180f0445645a125b623466d8486d4dbdbdb09", "committedDate": "2020-09-28T15:03:01Z", "message": "update webflux plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eee90042e08f798af0143502b10a6a3cf398622d", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/eee90042e08f798af0143502b10a6a3cf398622d", "committedDate": "2020-09-28T15:03:14Z", "message": "Merge branch 'master' of github.com:apache/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d019c2ade623baca2d52f17f75ef146fad8fcbe0", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/d019c2ade623baca2d52f17f75ef146fad8fcbe0", "committedDate": "2020-09-28T15:05:45Z", "message": "update dbcp plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e48e99496bd02ca5e00e5270753c94e9d826910", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/6e48e99496bd02ca5e00e5270753c94e9d826910", "committedDate": "2020-10-18T07:57:53Z", "message": "Add comments to dbcp plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7dfb47911af8814f09a81b624ef0e71a01f91eb", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/f7dfb47911af8814f09a81b624ef0e71a01f91eb", "committedDate": "2020-10-21T15:42:25Z", "message": "merge current branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6843a760d4bc90b8a838dc6094a28d82f17ad569", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/6843a760d4bc90b8a838dc6094a28d82f17ad569", "committedDate": "2020-10-21T15:42:50Z", "message": "Merge branch 'master' of github.com:apache/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e15a717d9dccbd97c3fdfbc315da890ab8a4dea", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/6e15a717d9dccbd97c3fdfbc315da890ab8a4dea", "committedDate": "2020-10-23T12:45:12Z", "message": "modify layer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dc28a07496127330b4fa241cd77c637c9541e62", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/3dc28a07496127330b4fa241cd77c637c9541e62", "committedDate": "2020-10-23T14:52:30Z", "message": "update dbcp plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "890d16fda1d4272a521832793163015ec8a6f773", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/890d16fda1d4272a521832793163015ec8a6f773", "committedDate": "2020-10-23T15:31:52Z", "message": "Merge branch 'master' of github.com:apache/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "685bf3e968a3d1327d0b67a001c4b533586886ac", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/685bf3e968a3d1327d0b67a001c4b533586886ac", "committedDate": "2020-10-24T02:50:57Z", "message": "Add licence to testcase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMjk0NDYx", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-521294461", "createdAt": "2020-11-02T02:05:00Z", "commit": {"oid": "685bf3e968a3d1327d0b67a001c4b533586886ac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMjowNTowMFrOHr0U7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMjowNTowMFrOHr0U7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcwODE0MQ==", "bodyText": "we don't need to validate this segment.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r515708141", "createdAt": "2020-11-02T02:05:00Z", "author": {"login": "dmsolr"}, "path": "test/plugin/scenarios/dbcp-2.x-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,255 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+- serviceName: dbcp-2.x-scenario\n+  segmentSize: nq 0\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: /dbcp-2.x-scenario/case/healthCheck\n+      operationId: eq 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: Http\n+      componentId: 1\n+      isError: false\n+      spanType: Entry\n+      peer: ''\n+      skipAnalysis: false\n+      tags:\n+        - {key: url, value: 'http://localhost:8080/dbcp-2.x-scenario/case/healthCheck'}\n+        - {key: http.method, value: HEAD}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "685bf3e968a3d1327d0b67a001c4b533586886ac"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80a92a9bbdf7627c4a9e12d0a1aebd8f03f443a9", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/80a92a9bbdf7627c4a9e12d0a1aebd8f03f443a9", "committedDate": "2020-11-02T13:14:51Z", "message": "Merge current code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e45599d91d6570370aeaf66ddd33de049b981aa3", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/e45599d91d6570370aeaf66ddd33de049b981aa3", "committedDate": "2020-11-02T13:18:30Z", "message": "Remove unnessceary assertion segment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4daf0298c1d8d9c812efe315d37e064eb375d60", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/a4daf0298c1d8d9c812efe315d37e064eb375d60", "committedDate": "2020-11-02T15:25:50Z", "message": "Modify dbcp-2.x-plugin pom"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMjE5NTkx", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-522219591", "createdAt": "2020-11-03T06:47:39Z", "commit": {"oid": "a4daf0298c1d8d9c812efe315d37e064eb375d60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjo0Nzo0MFrOHshz5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjo0Nzo0MFrOHshz5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1MzM0OA==", "bodyText": "Do DBCP have 2.0-2.4?", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r516453348", "createdAt": "2020-11-03T06:47:40Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/dbcp-2.x-scenario/support-version.list", "diffHunk": "@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+2.7.0\n+2.6.0\n+2.5.0\n+2.4.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4daf0298c1d8d9c812efe315d37e064eb375d60"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMjMzMzk3", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-522233397", "createdAt": "2020-11-03T07:23:22Z", "commit": {"oid": "a4daf0298c1d8d9c812efe315d37e064eb375d60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNzoyMzoyMlrOHsid3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNzoyMzoyMlrOHsid3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ2NDA5NA==", "bodyText": "@Jargon96 @dmsolr @ascrutae Does DBCP pool have a name? I hope this could be DBCP/{pool-name}/.... Then some of the operations like get and close should be the logic span later to show the connection pool performance.", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r516464094", "createdAt": "2020-11-03T07:23:22Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/dbcp-2.x-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,240 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+- serviceName: dbcp-2.x-scenario\n+  segmentSize: nq 0\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: Mysql/JDBI/Connection/close\n+      operationId: eq 0\n+      parentSpanId: 1\n+      spanId: 2\n+      componentId: 33\n+      isError: false\n+      spanType: Exit\n+      peer: mysql-server:3306\n+      skipAnalysis: false\n+      tags:\n+        - {key: db.type, value: sql}\n+        - {key: db.instance, value: test}\n+        - {key: db.statement, value: ''}\n+    - operationName: DBCP/Connection/getConnection\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      startTime: gt 0\n+      endTime: gt 0\n+      componentId: 102\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      skipAnalysis: false\n+    - operationName: Mysql/JDBI/Statement/execute\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 3\n+      startTime: gt 0\n+      endTime: gt 0\n+      componentId: 33\n+      isError: false\n+      spanType: Exit\n+      peer: mysql-server:3306\n+      skipAnalysis: false\n+      tags:\n+        - {key: db.type, value: sql}\n+        - {key: db.instance, value: test}\n+        - key: db.statement\n+          value: \"CREATE TABLE test_DBCP(\\nid VARCHAR(1) PRIMARY KEY, \\nvalue VARCHAR(1)\\\n+          \\ NOT NULL)\"\n+    - operationName: DBCP/Connection/close", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4daf0298c1d8d9c812efe315d37e064eb375d60"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "accd7d04917c5ca4511a0267e666a2fd95ebcd79", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/accd7d04917c5ca4511a0267e666a2fd95ebcd79", "committedDate": "2020-11-03T07:57:34Z", "message": "Merge branch 'master' into dbcp-2.x-plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNDcyOTE4", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-522472918", "createdAt": "2020-11-03T13:03:44Z", "commit": {"oid": "accd7d04917c5ca4511a0267e666a2fd95ebcd79"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzowMzo0NVrOHst0Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzowMzo0NVrOHst0Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY1MDA1OQ==", "bodyText": "I mean, does the connection pool has an attribute called name or something?", "url": "https://github.com/apache/skywalking/pull/5550#discussion_r516650059", "createdAt": "2020-11-03T13:03:45Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/dbcp-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/dbcp/service/CaseService.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.dbcp.service;\n+\n+import org.apache.commons.dbcp2.BasicDataSourceFactory;\n+import org.apache.skywalking.apm.testcase.dbcp.MysqlConfig;\n+import org.springframework.stereotype.Service;\n+\n+import javax.sql.DataSource;\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.Properties;\n+\n+@Service\n+public class CaseService {\n+\n+    public static DataSource ds;\n+    private static final String CREATE_TABLE_SQL = \"CREATE TABLE test_DBCP(\\n\" + \"id VARCHAR(1) PRIMARY KEY, \\n\" + \"value VARCHAR(1) NOT NULL)\";\n+    private static final String INSERT_DATA_SQL = \"INSERT INTO test_DBCP(id, value) VALUES(1,1)\";\n+    private static final String QUERY_DATA_SQL = \"SELECT id, value FROM test_DBCP WHERE id=1\";\n+    private static final String DELETE_DATA_SQL = \"DELETE FROM test_DBCP WHERE id=1\";\n+    private static final String DROP_TABLE_SQL = \"DROP table test_DBCP\";\n+\n+    static {\n+        Properties properties = new Properties();\n+        properties.setProperty(\"driverClassName\", \"com.mysql.jdbc.Driver\");\n+        properties.setProperty(\"url\", MysqlConfig.getUrl());\n+        properties.setProperty(\"username\", MysqlConfig.getUserName());\n+        properties.setProperty(\"password\", MysqlConfig.getPassword());\n+        try {\n+            ds = BasicDataSourceFactory.createDataSource(properties);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "accd7d04917c5ca4511a0267e666a2fd95ebcd79"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7441c421acdc7a111a1fbc6bacc9d6ba9fe35991", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/7441c421acdc7a111a1fbc6bacc9d6ba9fe35991", "committedDate": "2020-11-03T14:21:03Z", "message": "Update support-version list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f779ca96d2f49850f413bb04c654d295a53a0071", "author": {"user": {"login": "ascrutae", "name": "Xin,Zhang"}}, "url": "https://github.com/apache/skywalking/commit/f779ca96d2f49850f413bb04c654d295a53a0071", "committedDate": "2020-11-03T14:37:07Z", "message": "Merge branch 'master' into dbcp-2.x-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10acb6b4f7aca3d6a2fca5ff43b8ad7a1381f3e8", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/10acb6b4f7aca3d6a2fca5ff43b8ad7a1381f3e8", "committedDate": "2020-11-03T14:44:08Z", "message": "Merge branch 'master' of github.com:apache/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b92d1159f25f0a13cc26999eaae4f129e7bf7a8", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/2b92d1159f25f0a13cc26999eaae4f129e7bf7a8", "committedDate": "2020-11-03T14:46:12Z", "message": "Merge branch 'dbcp-2.x-plugin' of github.com:Jargon96/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNTk0ODU0", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-522594854", "createdAt": "2020-11-03T15:12:00Z", "commit": {"oid": "2b92d1159f25f0a13cc26999eaae4f129e7bf7a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNjE2NDI1", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-522616425", "createdAt": "2020-11-03T15:33:02Z", "commit": {"oid": "2b92d1159f25f0a13cc26999eaae4f129e7bf7a8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e40bae1c4ef2a24fbb90719f578ac809618f3e7e", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/e40bae1c4ef2a24fbb90719f578ac809618f3e7e", "committedDate": "2020-11-04T02:04:37Z", "message": "Merge branch 'master' into dbcp-2.x-plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDE2NDE1", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-523016415", "createdAt": "2020-11-04T03:11:00Z", "commit": {"oid": "e40bae1c4ef2a24fbb90719f578ac809618f3e7e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDIwMDUw", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-523020050", "createdAt": "2020-11-04T03:24:26Z", "commit": {"oid": "e40bae1c4ef2a24fbb90719f578ac809618f3e7e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe058df885d57eb3f95b612551048b72f964ab8c", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/fe058df885d57eb3f95b612551048b72f964ab8c", "committedDate": "2020-11-07T13:21:03Z", "message": "Merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3dd9fabeff562fa98bf539cf299e762fbe6ab86", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/c3dd9fabeff562fa98bf539cf299e762fbe6ab86", "committedDate": "2020-11-07T13:21:45Z", "message": "Update dbcp-2.x-plugin test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b28b4c498b066ea0197740f4bb2e013bedaf74c2", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/b28b4c498b066ea0197740f4bb2e013bedaf74c2", "committedDate": "2020-11-07T13:24:10Z", "message": "Merge branch 'dbcp-2.x-plugin' of github.com:Jargon96/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjU0NjI3", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-525654627", "createdAt": "2020-11-07T13:55:22Z", "commit": {"oid": "b28b4c498b066ea0197740f4bb2e013bedaf74c2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca95dd0398f2ce8a0a77776c1ca218c67e1ab9a", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/6ca95dd0398f2ce8a0a77776c1ca218c67e1ab9a", "committedDate": "2020-11-07T13:56:23Z", "message": "Merge branch 'master' of github.com:apache/skywalking into dbcp-2.x-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0ca69a4d696d9ecf8049f87795143df4214ea8e", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/e0ca69a4d696d9ecf8049f87795143df4214ea8e", "committedDate": "2020-11-07T15:09:55Z", "message": "Update java-agent supported-list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjYwMzgz", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-525660383", "createdAt": "2020-11-07T15:26:20Z", "commit": {"oid": "e0ca69a4d696d9ecf8049f87795143df4214ea8e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjYwNTg0", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-525660584", "createdAt": "2020-11-07T15:29:09Z", "commit": {"oid": "e0ca69a4d696d9ecf8049f87795143df4214ea8e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea2fba9a250e29f6b79583c1d876634c8820e678", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/ea2fba9a250e29f6b79583c1d876634c8820e678", "committedDate": "2020-11-08T00:43:06Z", "message": "Update CHANGES.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1Njk3MTU2", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-525697156", "createdAt": "2020-11-08T01:26:53Z", "commit": {"oid": "ea2fba9a250e29f6b79583c1d876634c8820e678"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1Njk3NjY1", "url": "https://github.com/apache/skywalking/pull/5550#pullrequestreview-525697665", "createdAt": "2020-11-08T01:40:59Z", "commit": {"oid": "ea2fba9a250e29f6b79583c1d876634c8820e678"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1732, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}