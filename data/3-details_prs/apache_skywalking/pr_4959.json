{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3ODI4NTQ0", "number": 4959, "title": "Configmap configuration", "bodyText": "Please answer these questions before submitting pull request\n\n\nWhy submit this pull request?\n\n\n New feature provided\n\n\nRelated issues\n#4800\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.\nadd kubernetes configmap support for dynamic config", "createdAt": "2020-06-22T10:03:40Z", "url": "https://github.com/apache/skywalking/pull/4959", "merged": true, "mergeCommit": {"oid": "e0325a44070cf94c73624a2c4c81819bc14ee09d"}, "closed": true, "closedAt": "2020-07-20T04:35:36Z", "author": {"login": "EvanLjp"}, "timelineItems": {"totalCount": 60, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchzg5-gH2gAyNDM3ODI4NTQ0OjAwMmY0YzI1NzMzOTlhOTY2NDlhNjRmYjM5OWRjOGI3ZTgwY2QxNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2pH8xgFqTQ1MTI3NjEyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "002f4c2573399a96649a64fb399dc8b7e80cd175", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/002f4c2573399a96649a64fb399dc8b7e80cd175", "committedDate": "2020-05-16T09:46:41Z", "message": "add SuperDataset tag for add super size dataset shards config in es"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fead29fe6379c1784feb1e21b28888266242d69", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/3fead29fe6379c1784feb1e21b28888266242d69", "committedDate": "2020-05-16T13:40:59Z", "message": "explain the meaning of indexShardsNumber and superDatasetIndexShardsFactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f84bf3ea704ac9c0b7d751d6533d8ad25ba94625", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/f84bf3ea704ac9c0b7d751d6533d8ad25ba94625", "committedDate": "2020-05-17T08:19:36Z", "message": "code style format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9c0d17a67d7213e7426b1449410700079b0ac2a", "author": {"user": {"login": "EvanLjp", "name": "Evan"}}, "url": "https://github.com/apache/skywalking/commit/b9c0d17a67d7213e7426b1449410700079b0ac2a", "committedDate": "2020-05-17T08:35:47Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f176bdbb28a466f0683d341d7b5eb1782068438f", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/f176bdbb28a466f0683d341d7b5eb1782068438f", "committedDate": "2020-05-17T08:55:05Z", "message": "code style format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34df4295c55fb7343a4e3e3dc86ff417d44f0010", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/34df4295c55fb7343a4e3e3dc86ff417d44f0010", "committedDate": "2020-05-17T08:59:25Z", "message": "code style format and change notes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e698ddf0b0d522894d94b4f1143210afabffd8d5", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/e698ddf0b0d522894d94b4f1143210afabffd8d5", "committedDate": "2020-05-20T08:01:53Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52e21a287727aeffa241533f3c208a7b9c4fb215", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/52e21a287727aeffa241533f3c208a7b9c4fb215", "committedDate": "2020-05-27T13:54:44Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87cc6a2c405f3b31deaf8d5a47f718edd6c0eee5", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/87cc6a2c405f3b31deaf8d5a47f718edd6c0eee5", "committedDate": "2020-06-10T04:41:26Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39669e67a8b738f7cf5030b3277ddc1668a88835", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/39669e67a8b738f7cf5030b3277ddc1668a88835", "committedDate": "2020-06-22T09:47:59Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "432558da1fd1c40c2d2a027981478b13429c6b55", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/432558da1fd1c40c2d2a027981478b13429c6b55", "committedDate": "2020-06-22T10:02:18Z", "message": "add kubernetes config dynamic configmap support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODYxMTI1", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-434861125", "createdAt": "2020-06-22T12:09:43Z", "commit": {"oid": "432558da1fd1c40c2d2a027981478b13429c6b55"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjowOTo0M1rOGm92Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjowOTo0M1rOGm92Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxMjQxOQ==", "bodyText": "I think you missed this license.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r443512419", "createdAt": "2020-06-22T12:09:43Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/pom.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432558da1fd1c40c2d2a027981478b13429c6b55"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d29d7eb862c8e6a155f1b4336b73e0122e659390", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/d29d7eb862c8e6a155f1b4336b73e0122e659390", "committedDate": "2020-06-30T06:51:26Z", "message": "Merge branch 'master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "996ece28e60170157f117e58a38ffe4080d8b9f3", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/996ece28e60170157f117e58a38ffe4080d8b9f3", "committedDate": "2020-06-30T16:14:11Z", "message": "add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34ed1f9afa68e107f244d7f9143c7eb9a019dff4", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/34ed1f9afa68e107f244d7f9143c7eb9a019dff4", "committedDate": "2020-06-30T16:41:02Z", "message": "Merge branch 'configmap-configuration' of https://github.com/EvanLjp/skywalking into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a49d42216e0dc009c65463c37e5ad18a8e2e1e54", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/a49d42216e0dc009c65463c37e5ad18a8e2e1e54", "committedDate": "2020-07-01T01:38:14Z", "message": "Merge remote-tracking branch 'upstream/master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88a795c6dc89bb5280ad6923d87a787f945a1634", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/88a795c6dc89bb5280ad6923d87a787f945a1634", "committedDate": "2020-07-01T01:38:51Z", "message": "checkstyle format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTYyMzM0", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-440562334", "createdAt": "2020-07-01T05:49:29Z", "commit": {"oid": "88a795c6dc89bb5280ad6923d87a787f945a1634"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05a2312826cc0d90342ffb5536dc7e61ea5e927d", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/05a2312826cc0d90342ffb5536dc7e61ea5e927d", "committedDate": "2020-07-03T14:16:54Z", "message": "Merge branch 'master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea6b8e7f47df29365aadee9b0fa30840502b7145", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/ea6b8e7f47df29365aadee9b0fa30840502b7145", "committedDate": "2020-07-06T15:24:01Z", "message": "add kubernetes config doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e3be8f4b6d46be5d8d538d1e542bb1c89d2fcfd", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/5e3be8f4b6d46be5d8d538d1e542bb1c89d2fcfd", "committedDate": "2020-07-06T15:26:08Z", "message": "Merge remote-tracking branch 'upstream/master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/c21948c3e4deddd1772ca6c557b526f2ebb6ee21", "committedDate": "2020-07-06T15:26:42Z", "message": "Merge branch 'configmap-configuration' of https://github.com/EvanLjp/skywalking into configmap-configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzMwNzAy", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-444330702", "createdAt": "2020-07-08T00:11:23Z", "commit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDoxMToyNFrOGuTwqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDoxMToyNFrOGuTwqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTQzNA==", "bodyText": "Please add descriptions about how the labelSelector works.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451211434", "createdAt": "2020-07-08T00:11:24Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -102,3 +102,16 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+\n+[configmap](https://kubernetes.io/docs/concepts/configuration/configmap/) is also supported as DCC(Dynamic Configuration Center), to use it, just configured as follows:\n+\n+```yaml\n+configuration:\n+  selector: ${SW_CONFIGURATION:configmap}\n+  configmap:\n+      period: ${SW_CONFIG_CONSUL_PERIOD:60}\n+      namespace: ${SW_CLUSTER_K8S_NAMESPACE:default}\n+      labelSelector: ${SW_CLUSTER_K8S_LABEL:app=collector,release=skywalking}\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzMxMDU1", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-444331055", "createdAt": "2020-07-08T00:12:34Z", "commit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDoxMjozNFrOGuTx7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDoxMjozNFrOGuTx7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTc1Nw==", "bodyText": "Why enum? Typically, we recommend don't' do this, unless you have to.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451211757", "createdAt": "2020-07-08T00:12:34Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public enum ConfigurationConfigmapInformer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3abf5177ebc0cd5e9cb898644a97cbbefc82b8f6", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/3abf5177ebc0cd5e9cb898644a97cbbefc82b8f6", "committedDate": "2020-07-08T01:29:30Z", "message": "add doc explain"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dc8772014f5bbe9ba2b1f73cfc969c71ae09374", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/6dc8772014f5bbe9ba2b1f73cfc969c71ae09374", "committedDate": "2020-07-08T01:39:32Z", "message": "convert enum as normal class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzczNDIw", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-444373420", "createdAt": "2020-07-08T02:38:35Z", "commit": {"oid": "6dc8772014f5bbe9ba2b1f73cfc969c71ae09374"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjozODozNlrOGuWCYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjozODozNlrOGuWCYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0ODczNg==", "bodyText": "Typo doAddShowdownHook -> doAddShutdownHook", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451248736", "createdAt": "2020-07-08T02:38:36Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public class ConfigurationConfigmapInformer {\n+\n+    private static ConfigurationConfigmapInformer informer;\n+\n+    private Lister<V1ConfigMap> configMapLister;\n+\n+    private SharedInformerFactory factory;\n+\n+    private final ExecutorService executorService = Executors.newSingleThreadExecutor(r -> {\n+        Thread thread = new Thread(r, \"SKYWALKING_KUBERNETES_CONFIGURATION_INFORMER\");\n+        thread.setDaemon(true);\n+        return thread;\n+    });\n+\n+    public static ConfigurationConfigmapInformer getInstance(ConfigmapConfigurationSettings settings) {\n+        if (informer == null) {\n+            synchronized (ConfigurationConfigmapInformer.class) {\n+                if (informer == null) {\n+                    informer = new ConfigurationConfigmapInformer(settings);\n+                }\n+            }\n+        }\n+        return informer;\n+    }\n+\n+    private ConfigurationConfigmapInformer(ConfigmapConfigurationSettings settings) {\n+\n+        try {\n+            doStartConfigMapInformer(settings);\n+            doAddShowdownHook();\n+        } catch (IOException e) {\n+            log.error(\"cannot connect with api server in kubernetes\", e);\n+        }\n+\n+    }\n+\n+    private void doAddShowdownHook() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc8772014f5bbe9ba2b1f73cfc969c71ae09374"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a21cda771e716c876e87bca16aa3ae854110e116", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/a21cda771e716c876e87bca16aa3ae854110e116", "committedDate": "2020-07-08T04:29:43Z", "message": "Merge remote-tracking branch 'upstream/master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3949a5294c6795e9cb1827f982b5220fdafeed69", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/3949a5294c6795e9cb1827f982b5220fdafeed69", "committedDate": "2020-07-08T04:31:30Z", "message": "fix spelling mistake"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfcbdbcd321da24075782d3c40d0b9eb91501f39", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/bfcbdbcd321da24075782d3c40d0b9eb91501f39", "committedDate": "2020-07-09T00:06:11Z", "message": "Merge branch 'master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf2d4c8a2ad7957a0d222ae18c1b46e7c6aae1d4", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/bf2d4c8a2ad7957a0d222ae18c1b46e7c6aae1d4", "committedDate": "2020-07-10T01:36:17Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4407ff7c20e8c034be59228e5e69691c815638fd", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/4407ff7c20e8c034be59228e5e69691c815638fd", "committedDate": "2020-07-10T01:37:07Z", "message": "Merge remote-tracking branch 'upstream/master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "015ffa78fcd5e73fc65fad6b76b32bace183b276", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/015ffa78fcd5e73fc65fad6b76b32bace183b276", "committedDate": "2020-07-10T01:38:09Z", "message": "Merge branch 'configmap-configuration' of https://github.com/EvanLjp/skywalking into configmap-configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MjYxNjM2", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-446261636", "createdAt": "2020-07-10T09:33:27Z", "commit": {"oid": "015ffa78fcd5e73fc65fad6b76b32bace183b276"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOTozMzoyN1rOGvwt5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOTozNDoyMVrOGvwvtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjczNDQzOA==", "bodyText": "typo: SW_CONFIG_CONSUL_PERIOD -> SW_CONFIG_CONFIGMAP_PERIOD", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r452734438", "createdAt": "2020-07-10T09:33:27Z", "author": {"login": "innerpeacez"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -264,6 +264,10 @@ configuration:\n     period: ${SW_CONFIG_CONSUL_PERIOD:1}\n     # Consul aclToken\n     aclToken: ${SW_CONFIG_CONSUL_ACL_TOKEN:\"\"}\n+  configmap:\n+    period: ${SW_CONFIG_CONSUL_PERIOD:60}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ffa78fcd5e73fc65fad6b76b32bace183b276"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjczNDkwMg==", "bodyText": "typo: SW_CONFIG_CONSUL_PERIOD -> SW_CONFIG_CONFIGMAP_PERIOD", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r452734902", "createdAt": "2020-07-10T09:34:21Z", "author": {"login": "innerpeacez"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -103,3 +103,20 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+\n+[configmap](https://kubernetes.io/docs/concepts/configuration/configmap/) is also supported as DCC(Dynamic Configuration Center), to use it, just configured as follows:\n+\n+```yaml\n+configuration:\n+  selector: ${SW_CONFIGURATION:configmap}\n+  # [example] (../../../../oap-server/server-configuration/configuration-configmap/src/test/resources/skywalking-dynamic-configmap.example.yaml)\n+  configmap:\n+      # Sync period in seconds. Defaults to 60 seconds.\n+      period: ${SW_CONFIG_CONSUL_PERIOD:60}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ffa78fcd5e73fc65fad6b76b32bace183b276"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODQ4NjYz", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-446848663", "createdAt": "2020-07-12T06:03:31Z", "commit": {"oid": "015ffa78fcd5e73fc65fad6b76b32bace183b276"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c44aa06b28c3df8f054e9510253c3718113822f", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/6c44aa06b28c3df8f054e9510253c3718113822f", "committedDate": "2020-07-12T06:20:06Z", "message": "Merge branch 'master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8544523ee0d4754b304403f81f3a0a1b1fd1925e", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/8544523ee0d4754b304403f81f3a0a1b1fd1925e", "committedDate": "2020-07-12T14:20:10Z", "message": "fix some  wrong doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7974483a9613c8e8f4ade4885619c27df85296bd", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/7974483a9613c8e8f4ade4885619c27df85296bd", "committedDate": "2020-07-12T14:20:17Z", "message": "Merge remote-tracking branch 'upstream/master' into configmap-configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODg2MjMz", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-446886233", "createdAt": "2020-07-12T15:02:39Z", "commit": {"oid": "7974483a9613c8e8f4ade4885619c27df85296bd"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNTowMjozOVrOGwU6Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNTowMzowOFrOGwU6hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNzM5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <artifactId>configuration-configmap</artifactId>\n          \n          \n            \n                <artifactId>configuration-k8s-configmap</artifactId>", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r453327395", "createdAt": "2020-07-12T15:02:39Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/pom.xml", "diffHunk": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>server-configuration</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>configuration-configmap</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7974483a9613c8e8f4ade4885619c27df85296bd"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNzQ1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return \"configmap\";\n          \n          \n            \n                    return \"k8s_configmap\";\n          \n      \n    \n    \n  \n\nAnd please change other docs related to this.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r453327450", "createdAt": "2020-07-12T15:02:54Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import com.google.common.base.Strings;\n+import org.apache.skywalking.oap.server.configuration.api.AbstractConfigurationProvider;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+\n+public class ConfigmapConfigurationProvider extends AbstractConfigurationProvider {\n+\n+    private final ConfigmapConfigurationSettings settings;\n+\n+    public ConfigmapConfigurationProvider() {\n+        this.settings = new ConfigmapConfigurationSettings();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"configmap\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7974483a9613c8e8f4ade4885619c27df85296bd"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNzQ5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return \"configmap\";\n          \n          \n            \n                    return \"k8s_configmap\";", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r453327492", "createdAt": "2020-07-12T15:03:08Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import com.google.common.base.Strings;\n+import org.apache.skywalking.oap.server.configuration.api.AbstractConfigurationProvider;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+\n+public class ConfigmapConfigurationProvider extends AbstractConfigurationProvider {\n+\n+    private final ConfigmapConfigurationSettings settings;\n+\n+    public ConfigmapConfigurationProvider() {\n+        this.settings = new ConfigmapConfigurationSettings();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"configmap\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7974483a9613c8e8f4ade4885619c27df85296bd"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be276dcff9656191fbea0efbad262d19cdcf46ef", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/be276dcff9656191fbea0efbad262d19cdcf46ef", "committedDate": "2020-07-14T07:28:31Z", "message": "move dir && add test log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4603dcedf462a0b5efd887476d55a375bee6c29a", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/4603dcedf462a0b5efd887476d55a375bee6c29a", "committedDate": "2020-07-14T07:29:34Z", "message": "Merge remote-tracking branch 'upstream/master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a975acc0577280575f91c9bd7eea52624146c14", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/6a975acc0577280575f91c9bd7eea52624146c14", "committedDate": "2020-07-14T07:56:44Z", "message": "Merge branch 'master' into configmap-configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3ODc3NDA1", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-447877405", "createdAt": "2020-07-14T08:00:43Z", "commit": {"oid": "6a975acc0577280575f91c9bd7eea52624146c14"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODowMDo0NFrOGxIssg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODowMDo0NFrOGxIssg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3NTkyMg==", "bodyText": "If you can't read the key from configmap, please don't include value in the ConfigTable. I received a report today, someone accidentally reset the default value, even they didn't config the new value in the dynamic configuration center.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r454175922", "createdAt": "2020-07-14T08:00:44Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationWatcherRegister.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import java.util.Optional;\n+import java.util.Set;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+\n+@Slf4j\n+public class ConfigmapConfigurationWatcherRegister extends ConfigWatcherRegister {\n+\n+    private final ConfigurationConfigmapInformer informer;\n+\n+    public ConfigmapConfigurationWatcherRegister(ConfigmapConfigurationSettings settings,\n+                                                 ConfigurationConfigmapInformer informer) {\n+        super(settings.getPeriod());\n+        this.informer = informer;\n+    }\n+\n+    @Override\n+    public Optional<ConfigTable> readConfig(Set<String> keys) {\n+        final ConfigTable configTable = new ConfigTable();\n+\n+        Optional<V1ConfigMap> v1ConfigMap = informer.configMap();\n+\n+        for (final String name : keys) {\n+\n+            final String value = v1ConfigMap.map(configMap -> configMap.getData().get(name)).orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a975acc0577280575f91c9bd7eea52624146c14"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e7a2576219765f6698e0c710e8c1ca7a1a49e71", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/0e7a2576219765f6698e0c710e8c1ca7a1a49e71", "committedDate": "2020-07-14T09:21:06Z", "message": "filter null value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0781a7c3b97714084268add2fb865f3f872d6a11", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/0781a7c3b97714084268add2fb865f3f872d6a11", "committedDate": "2020-07-14T09:23:02Z", "message": "Merge branch 'configmap-configuration' of https://github.com/EvanLjp/skywalking into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e53325b70663ddbbe06976530f51c2761658ae33", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/e53325b70663ddbbe06976530f51c2761658ae33", "committedDate": "2020-07-14T11:31:58Z", "message": "fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/8f5a07b36278e29e2ad243fe5516772e01b7cbe7", "committedDate": "2020-07-15T06:32:47Z", "message": "Merge branch 'master' into configmap-configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MDc3NjU2", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-449077656", "createdAt": "2020-07-15T15:34:42Z", "commit": {"oid": "015ffa78fcd5e73fc65fad6b76b32bace183b276"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzozN1rOGyD-mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzozN1rOGyD-mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NzE2MA==", "bodyText": "typo: confiigmap -> configmap", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455147160", "createdAt": "2020-07-15T15:37:37Z", "author": {"login": "innerpeacez"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -102,3 +102,16 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+\n+[configmap](https://kubernetes.io/docs/concepts/configuration/configmap/) is also supported as DCC(Dynamic Configuration Center), to use it, just configured as follows:\n+\n+```yaml\n+configuration:\n+  selector: ${SW_CONFIGURATION:configmap}\n+  configmap:\n+      period: ${SW_CONFIG_CONSUL_PERIOD:60}\n+      namespace: ${SW_CLUSTER_K8S_NAMESPACE:default}\n+      labelSelector: ${SW_CLUSTER_K8S_LABEL:app=collector,release=skywalking}\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTQzNA=="}, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5Nzg2ODAy", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-449786802", "createdAt": "2020-07-16T12:12:31Z", "commit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5Nzg5MTIz", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-449789123", "createdAt": "2020-07-16T12:15:53Z", "commit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNTo1NFrOGyoP1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxOToyNFrOGyoXQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MTM5OQ==", "bodyText": "I think this should not be committed? And the next file?", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455741399", "createdAt": "2020-07-16T12:15:54Z", "author": {"login": "wu-sheng"}, "path": "all-dependencies-es7.txt", "diffHunk": "@@ -0,0 +1,211 @@\n+HdrHistogram-2.1.9.jar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MTk5Mw==", "bodyText": "oap-server/server-configuration/configuration-k8s_configmap should be oap-server/server-configuration/configuration-k8s-configmap", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455741993", "createdAt": "2020-07-16T12:17:00Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s_configmap/pom.xml", "diffHunk": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>server-configuration</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>configuration-k8s_configmap</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MzAzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              k8s_configmap:\n          \n          \n            \n              k8s-configmap:\n          \n      \n    \n    \n  \n\nSame here, by following other module and provider style.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455743033", "createdAt": "2020-07-16T12:18:56Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -264,6 +264,10 @@ configuration:\n     period: ${SW_CONFIG_CONSUL_PERIOD:1}\n     # Consul aclToken\n     aclToken: ${SW_CONFIG_CONSUL_ACL_TOKEN:\"\"}\n+  k8s_configmap:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MzI5Nw==", "bodyText": "Many emtpy lines, please polish the code format.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455743297", "createdAt": "2020-07-16T12:19:24Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s_configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public class ConfigurationConfigmapInformer {\n+\n+    private Lister<V1ConfigMap> configMapLister;\n+\n+    private SharedInformerFactory factory;\n+\n+    private final ExecutorService executorService = Executors.newSingleThreadExecutor(r -> {\n+        Thread thread = new Thread(r, \"SKYWALKING_KUBERNETES_CONFIGURATION_INFORMER\");\n+        thread.setDaemon(true);\n+        return thread;\n+    });\n+\n+    public ConfigurationConfigmapInformer(ConfigmapConfigurationSettings settings) {\n+\n+        try {\n+            doStartConfigMapInformer(settings);\n+            doAddShutdownHook();\n+        } catch (IOException e) {\n+            log.error(\"cannot connect with api server in kubernetes\", e);\n+        }\n+\n+    }\n+\n+    private void doAddShutdownHook() {\n+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+            if (Objects.nonNull(factory)) {\n+                factory.stopAllRegisteredInformers();\n+            }\n+        }));\n+    }\n+\n+    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n+        ApiClient apiClient = Config.defaultClient();\n+        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n+        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n+\n+        factory = new SharedInformerFactory(executorService);\n+\n+        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n+            params -> coreV1Api.listNamespacedConfigMapCall(\n+                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n+                , 1, params.resourceVersion, params.timeoutSeconds, params.watch, null\n+            ),\n+            V1ConfigMap.class, V1ConfigMapList.class\n+        );\n+\n+        factory.startAllRegisteredInformers();\n+        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n+\n+    }\n+\n+    public Optional<V1ConfigMap> configMap() {\n+\n+        return Optional.ofNullable(configMapLister.list().size() == 1 ? configMapLister.list().get(0) : null);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "013bf3a71bd31969a2145a9d3927fa03b6c407c1", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/013bf3a71bd31969a2145a9d3927fa03b6c407c1", "committedDate": "2020-07-16T14:53:33Z", "message": "Merge branch 'master' into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e2c6ebd2caa9232bf33ddb36c0e56ea176b93e9", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/8e2c6ebd2caa9232bf33ddb36c0e56ea176b93e9", "committedDate": "2020-07-17T12:43:32Z", "message": "rename module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5420036022f171551aed596061831a4ab7b08b1c", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/5420036022f171551aed596061831a4ab7b08b1c", "committedDate": "2020-07-17T12:51:55Z", "message": "rename module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5629b9c40688a3be7bccb5e2b11fc4b4c261c0b", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/d5629b9c40688a3be7bccb5e2b11fc4b4c261c0b", "committedDate": "2020-07-17T12:56:50Z", "message": "Merge branch 'configmap-configuration' of https://github.com/EvanLjp/skywalking into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/c259cb52f4095b1ff9bbef064d62e060b8d2e9b5", "committedDate": "2020-07-17T13:25:52Z", "message": "Merge branch 'master' into configmap-configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNjU4MDIw", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-450658020", "createdAt": "2020-07-17T13:30:16Z", "commit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDoxNlrOGzTEHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMjoxNFrOGzTIdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MjkxMQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456442911", "createdAt": "2020-07-17T13:30:16Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public class ConfigurationConfigmapInformer {\n+\n+    private Lister<V1ConfigMap> configMapLister;\n+\n+    private SharedInformerFactory factory;\n+\n+    private final ExecutorService executorService = Executors.newSingleThreadExecutor(r -> {\n+        Thread thread = new Thread(r, \"SKYWALKING_KUBERNETES_CONFIGURATION_INFORMER\");\n+        thread.setDaemon(true);\n+        return thread;\n+    });\n+\n+    public ConfigurationConfigmapInformer(ConfigmapConfigurationSettings settings) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzAwNg==", "bodyText": "Many unnecessary empty lines.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443006", "createdAt": "2020-07-17T13:30:27Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationWatcherRegister.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+\n+@Slf4j\n+public class ConfigmapConfigurationWatcherRegister extends ConfigWatcherRegister {\n+\n+    private final ConfigurationConfigmapInformer informer;\n+\n+    public ConfigmapConfigurationWatcherRegister(ConfigmapConfigurationSettings settings,\n+                                                 ConfigurationConfigmapInformer informer) {\n+        super(settings.getPeriod());\n+        this.informer = informer;\n+    }\n+\n+    @Override\n+    public Optional<ConfigTable> readConfig(Set<String> keys) {\n+        final ConfigTable configTable = new ConfigTable();\n+\n+        Optional<V1ConfigMap> v1ConfigMap = informer.configMap();\n+\n+        for (final String name : keys) {\n+\n+            final String value = v1ConfigMap.map(configMap -> configMap.getData().get(name)).orElse(null);\n+\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"read config: name:{} ,value:{}\", name, value);\n+            }\n+            if (Objects.nonNull(value)) {\n+                configTable.add(new ConfigTable.ConfigItem(name, value));\n+            }\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzEwNA==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443104", "createdAt": "2020-07-17T13:30:36Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationSettings.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+\n+@Setter\n+@Getter\n+public class ConfigmapConfigurationSettings extends ModuleConfig {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzIxMQ==", "bodyText": "Comments are required in here too.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443211", "createdAt": "2020-07-17T13:30:45Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationSettings.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+\n+@Setter\n+@Getter\n+public class ConfigmapConfigurationSettings extends ModuleConfig {\n+\n+    private String namespace;\n+    private String labelSelector;\n+    private Integer period;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzI2Mg==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443262", "createdAt": "2020-07-17T13:30:50Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import com.google.common.base.Strings;\n+import org.apache.skywalking.oap.server.configuration.api.AbstractConfigurationProvider;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+\n+public class ConfigmapConfigurationProvider extends AbstractConfigurationProvider {\n+\n+    private final ConfigmapConfigurationSettings settings;\n+\n+    public ConfigmapConfigurationProvider() {\n+        this.settings = new ConfigmapConfigurationSettings();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"k8s-configmap\";\n+    }\n+\n+    @Override\n+    public ModuleConfig createConfigBeanIfAbsent() {\n+        return settings;\n+    }\n+\n+    @Override\n+    protected ConfigWatcherRegister initConfigReader() throws ModuleStartException {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzMzNQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443335", "createdAt": "2020-07-17T13:30:56Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import com.google.common.base.Strings;\n+import org.apache.skywalking.oap.server.configuration.api.AbstractConfigurationProvider;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+\n+public class ConfigmapConfigurationProvider extends AbstractConfigurationProvider {\n+\n+    private final ConfigmapConfigurationSettings settings;\n+\n+    public ConfigmapConfigurationProvider() {\n+        this.settings = new ConfigmapConfigurationSettings();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"k8s-configmap\";\n+    }\n+\n+    @Override\n+    public ModuleConfig createConfigBeanIfAbsent() {\n+        return settings;\n+    }\n+\n+    @Override\n+    protected ConfigWatcherRegister initConfigReader() throws ModuleStartException {\n+\n+        if (Strings.isNullOrEmpty(settings.getLabelSelector()) || Strings.isNullOrEmpty(settings.getNamespace())) {\n+            throw new ModuleStartException(\"the settings of configmap configuration is illegal.\");\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzM5NQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443395", "createdAt": "2020-07-17T13:31:03Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/pom.xml", "diffHunk": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>server-configuration</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>configuration-k8s-configmap</artifactId>\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzgwOQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443809", "createdAt": "2020-07-17T13:31:49Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -103,3 +103,20 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0Mzk2MA==", "bodyText": "Many unnecessary empty lines.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443960", "createdAt": "2020-07-17T13:32:08Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/test/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigWatcherRegisterTest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import java.io.Reader;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.library.util.ResourceUtils;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PowerMockIgnore;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+import org.yaml.snakeyaml.Yaml;\n+\n+@RunWith(PowerMockRunner.class)\n+@PowerMockIgnore(\"javax.management.*\")\n+@PrepareForTest({ConfigurationConfigmapInformer.class})\n+public class ConfigmapConfigWatcherRegisterTest {\n+\n+    private ConfigmapConfigurationWatcherRegister register;\n+\n+    private ConfigurationConfigmapInformer informer;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0NDAyMQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456444021", "createdAt": "2020-07-17T13:32:14Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/test/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProviderTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.powermock.core.classloader.annotations.PowerMockIgnore;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+@RunWith(PowerMockRunner.class)\n+@PowerMockIgnore(\"javax.management.*\")\n+public class ConfigmapConfigurationProviderTest {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c889feeab188fb29e6b9e0e3cb40741e791369b1", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/c889feeab188fb29e6b9e0e3cb40741e791369b1", "committedDate": "2020-07-20T01:28:11Z", "message": "remove empty lines and delete unnecessary files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c81dea782d5a5998cf9d9c33a61d1dcb178a6dc0", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/c81dea782d5a5998cf9d9c33a61d1dcb178a6dc0", "committedDate": "2020-07-20T01:28:32Z", "message": "Merge branch 'configmap-configuration' of https://github.com/EvanLjp/skywalking into configmap-configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dbea3186d8fc2ee8fd454afa3b320b83a82e1eb", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/6dbea3186d8fc2ee8fd454afa3b320b83a82e1eb", "committedDate": "2020-07-20T01:29:12Z", "message": "Merge remote-tracking branch 'upstream/master' into configmap-configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjc2MTI4", "url": "https://github.com/apache/skywalking/pull/4959#pullrequestreview-451276128", "createdAt": "2020-07-20T03:32:47Z", "commit": {"oid": "6dbea3186d8fc2ee8fd454afa3b320b83a82e1eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2272, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}