{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4OTQ1Nzky", "number": 5339, "title": "Add support for spring @Scheduled", "bodyText": "Please answer these questions before submitting a pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n\n\n\nBug fix\n\n\nBug description.\n\n\nHow to fix?\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.\n\nHi~ Now we use spring @scheduled to execute scheduled tasks, but it seems to be not supported.\nSo I add the client side support.  Please see if it makes sense.", "createdAt": "2020-08-17T16:45:40Z", "url": "https://github.com/apache/skywalking/pull/5339", "merged": true, "mergeCommit": {"oid": "1b54b61a88c88047154d0d99e61e855b4fcdb3a4"}, "closed": true, "closedAt": "2020-08-23T09:13:50Z", "author": {"login": "hailin0"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_z6EpAH2gAyNDY4OTQ1NzkyOjc5M2NhY2ZhOGM3ZTk1ZGQ0ZWU1YjdhN2RjMTM4NTBhYmM2NDgzODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBpjUtgH2gAyNDY4OTQ1NzkyOmFjYWM1ZmNiOWY3OTZhMGU1OTAyY2U2NDRhOTc0ODExODNjMjg5NjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "793cacfa8c7e95dd4ee5b7a7dc13850abc648389", "author": {"user": {"login": "hailin0", "name": "hailin0"}}, "url": "https://github.com/apache/skywalking/commit/793cacfa8c7e95dd4ee5b7a7dc13850abc648389", "committedDate": "2020-08-17T15:11:54Z", "message": "Merge pull request #1 from apache/master\n\npull request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f6bba6a27a0ba0ccb41c639f0002e5276b7de3a", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/7f6bba6a27a0ba0ccb41c639f0002e5276b7de3a", "committedDate": "2020-08-17T16:25:53Z", "message": "Support spring @Scheduled annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTQ4OTU3", "url": "https://github.com/apache/skywalking/pull/5339#pullrequestreview-468948957", "createdAt": "2020-08-18T02:27:54Z", "commit": {"oid": "7f6bba6a27a0ba0ccb41c639f0002e5276b7de3a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMjoyNzo1NFrOHCBEkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMjozMToxNFrOHCBIDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3Njc1NA==", "bodyText": "Don't use all 119 versions, it costs too many CI resources and time. Just choose the typical ones, such as choose the latest version in 5.0.x to represent all versions.", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r471876754", "createdAt": "2020-08-18T02:27:54Z", "author": {"login": "wu-sheng"}, "path": ".github/workflows/plugins-test.3.yaml", "diffHunk": "@@ -55,6 +55,7 @@ jobs:\n           - { name: 'hbase-scenario', title: 'hbase-scenario (5)' }\n           - { name: 'spring-kafka-2.2.x-scenario', title: 'Spring-Kafka 2.2.x (7)' }\n           - { name: 'spring-kafka-2.3.x-scenario', title: 'Spring-Kafka 2.3.x (7)' }\n+          - { name: 'spring-scheduled-scenario', title: 'Spring Scheduled 3.1.x-5.2.x (119)' }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f6bba6a27a0ba0ccb41c639f0002e5276b7de3a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NzQxOA==", "bodyText": "From my reading of your test case codes, there should be a segment starting with SchedulingJob#work, where it is? Or do I miss anything?", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r471877418", "createdAt": "2020-08-18T02:30:21Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/spring-scheduled-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,48 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+  - serviceName: spring-scheduled-scenario\n+    segmentSize: ge 2\n+    segments:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f6bba6a27a0ba0ccb41c639f0002e5276b7de3a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NzY0NA==", "bodyText": "This is just a local scheduler task, not an entry. Please read the plugin dev document. This should be a local span. Could you share why you put this as Entry Span?", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r471877644", "createdAt": "2020-08-18T02:31:14Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/scheduled-annotation-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/scheduled/ScheduledMethodInterceptor.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.spring.scheduled;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextCarrier;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class ScheduledMethodInterceptor implements InstanceMethodsAroundInterceptor, InstanceConstructorInterceptor {\n+\n+    private static final String DEFAULT_OPERATION_NAME = \"SpringScheduled\";\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        String targetMethodName = (String) objInst.getSkyWalkingDynamicField();\n+        String operationName = targetMethodName != null ? targetMethodName : DEFAULT_OPERATION_NAME;\n+\n+        AbstractSpan span = ContextManager.createEntrySpan(operationName, new ContextCarrier());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f6bba6a27a0ba0ccb41c639f0002e5276b7de3a"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c2f1758c715ec93f00db8e98cf5a5989dec34d1", "author": {"user": {"login": "hailin0", "name": "hailin0"}}, "url": "https://github.com/apache/skywalking/commit/0c2f1758c715ec93f00db8e98cf5a5989dec34d1", "committedDate": "2020-08-18T16:23:26Z", "message": "Merge pull request #2 from apache/master\n\nMerge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65", "committedDate": "2020-08-18T16:58:25Z", "message": "fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5OTE2NjA4", "url": "https://github.com/apache/skywalking/pull/5339#pullrequestreview-469916608", "createdAt": "2020-08-19T00:29:45Z", "commit": {"oid": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMDoyOTo0NVrOHCrKyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMDoyOTo0NVrOHCrKyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2NjQ3NA==", "bodyText": "Could you move this into Tags as more plugins are going to use this? And name this as VAL_LOCAL_SPAN_AS_LOGIC_ENDPOINT\u00b7", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472566474", "createdAt": "2020-08-19T00:29:45Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/scheduled-annotation-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/scheduled/ScheduledMethodInterceptor.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.spring.scheduled;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class ScheduledMethodInterceptor implements InstanceMethodsAroundInterceptor, InstanceConstructorInterceptor {\n+\n+    private static final String DEFAULT_OPERATION_NAME = \"SpringScheduled\";\n+    private static final String DEFAULT_LOGIC_ENDPOINT_CONTENT = \"{\\\"logic-span\\\":true}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5OTE3MjUw", "url": "https://github.com/apache/skywalking/pull/5339#pullrequestreview-469917250", "createdAt": "2020-08-19T00:32:03Z", "commit": {"oid": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMDozMjowNFrOHCrNMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMDozMjowNFrOHCrNMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2NzA4OA==", "bodyText": "Instanceof is not recommended in the interceptor. Usually, we set up two instrumentation for constructures with different parameters(if necessary)", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472567088", "createdAt": "2020-08-19T00:32:04Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/scheduled-annotation-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/scheduled/ScheduledMethodInterceptor.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.spring.scheduled;\n+\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+\n+public class ScheduledMethodInterceptor implements InstanceMethodsAroundInterceptor, InstanceConstructorInterceptor {\n+\n+    private static final String DEFAULT_OPERATION_NAME = \"SpringScheduled\";\n+    private static final String DEFAULT_LOGIC_ENDPOINT_CONTENT = \"{\\\"logic-span\\\":true}\";\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        String targetMethodName = (String) objInst.getSkyWalkingDynamicField();\n+        String operationName = targetMethodName != null ? targetMethodName : DEFAULT_OPERATION_NAME;\n+\n+        AbstractSpan span = ContextManager.createLocalSpan(operationName);\n+        Tags.LOGIC_ENDPOINT.set(span, DEFAULT_LOGIC_ENDPOINT_CONTENT);\n+        span.setComponent(ComponentsDefine.SPRING_SCHEDULED);\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        ContextManager.stopSpan();\n+        return ret;\n+    }\n+\n+    @Override\n+    public void handleMethodException(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Throwable t) {\n+        ContextManager.activeSpan().errorOccurred().log(t);\n+    }\n+\n+    @Override\n+    public void onConstruct(EnhancedInstance objInst, Object[] allArguments) throws Throwable {\n+        Object targetMethod = allArguments[1];\n+        String targetMethodName = getTargetMethodName(targetMethod);\n+\n+        objInst.setSkyWalkingDynamicField(targetMethodName);\n+    }\n+\n+    private String getTargetMethodName(Object targetMethod) {\n+        if (targetMethod instanceof String) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5OTE4MDQ3", "url": "https://github.com/apache/skywalking/pull/5339#pullrequestreview-469918047", "createdAt": "2020-08-19T00:34:50Z", "commit": {"oid": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMjkwMjEw", "url": "https://github.com/apache/skywalking/pull/5339#pullrequestreview-470290210", "createdAt": "2020-08-19T09:36:50Z", "commit": {"oid": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTozNjo1MFrOHC_aaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTozNjo1MFrOHC_aaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODE1NQ==", "bodyText": "@hailin0, I think I got @zhaoyuguang 's point as he DM me.\nThis bean has @Component already, so, why this method wouldn't work? I think Spring annotation plugin tracing all methods of the bean. Unless you only want to activate this, rather than other beans?", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r472898155", "createdAt": "2020-08-19T09:36:50Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/spring-scheduled-scenario/src/main/java/org/apache/skywalking/apm/testcase/spring/scheduled/job/SchedulingJob.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.spring.scheduled.job;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.springframework.scheduling.annotation.EnableScheduling;\n+import org.springframework.scheduling.annotation.Scheduled;\n+import org.springframework.stereotype.Component;\n+\n+import java.io.IOException;\n+\n+@Component\n+@EnableScheduling\n+public class SchedulingJob {\n+\n+    private static final Logger logger = LogManager.getLogger(SchedulingJob.class);\n+    \n+    private static final OkHttpClient client = new OkHttpClient.Builder().build();\n+\n+    @Scheduled(fixedDelay = 5000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb48bc078eb1c29b2b3dae14a4fedb2aa9cbcc65"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1bde9dbb8e986a95f35908b006a40b160957b5b", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/e1bde9dbb8e986a95f35908b006a40b160957b5b", "committedDate": "2020-08-19T13:38:44Z", "message": "Merge branch 'master' into spring-scheduled-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17429f24f1c43a5d3688bad6b206c1c23ff25a9f", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/17429f24f1c43a5d3688bad6b206c1c23ff25a9f", "committedDate": "2020-08-20T07:16:08Z", "message": "Merge branch 'master' into spring-scheduled-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15a5c58971258e12be255740913af05d972e3051", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/15a5c58971258e12be255740913af05d972e3051", "committedDate": "2020-08-20T16:15:55Z", "message": "fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24271551a80ede646d43dc053ee283c384e5fb85", "author": {"user": {"login": "hailin0", "name": "hailin0"}}, "url": "https://github.com/apache/skywalking/commit/24271551a80ede646d43dc053ee283c384e5fb85", "committedDate": "2020-08-21T16:02:35Z", "message": "Merge branch 'master' into spring-scheduled-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "858f9472e67182aa3dfca74d3ffc81e4a6fa6a65", "author": {"user": {"login": "hailin0", "name": "hailin0"}}, "url": "https://github.com/apache/skywalking/commit/858f9472e67182aa3dfca74d3ffc81e4a6fa6a65", "committedDate": "2020-08-22T10:19:12Z", "message": "Merge branch 'master' into spring-scheduled-plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTIyMjM0", "url": "https://github.com/apache/skywalking/pull/5339#pullrequestreview-472922234", "createdAt": "2020-08-22T12:16:07Z", "commit": {"oid": "858f9472e67182aa3dfca74d3ffc81e4a6fa6a65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMjoxNjowN1rOHFE3NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMjoxNjowN1rOHFE3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4NDU5Nw==", "bodyText": "Why need Spring repository? All jars should be available in the Maven Central.", "url": "https://github.com/apache/skywalking/pull/5339#discussion_r475084597", "createdAt": "2020-08-22T12:16:07Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/spring-scheduled-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,129 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>spring-scheduled-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>war</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-spring-scheduled-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <!-- Cannot be testing spring(3.2.0 ~ 3.2.8) because the tomcat image unsupported jdk1.7 -->\n+        <test.framework.version>3.1.0.RELEASE</test.framework.version>\n+        <test.framework>spring-scheduled</test.framework>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>javax.servlet</groupId>\n+            <artifactId>javax.servlet-api</artifactId>\n+            <version>3.1.0</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-api</artifactId>\n+            <version>2.8.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-core</artifactId>\n+            <version>2.8.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-context</artifactId>\n+            <version>${test.framework.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-web</artifactId>\n+            <version>${test.framework.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-webmvc</artifactId>\n+            <version>${test.framework.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>cglib</groupId>\n+            <artifactId>cglib</artifactId>\n+            <version>2.2</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.squareup.okhttp3</groupId>\n+            <artifactId>okhttp</artifactId>\n+            <version>3.0.0</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>spring-scheduled-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.tomcat.maven</groupId>\n+                <artifactId>tomcat7-maven-plugin</artifactId>\n+                <version>2.1</version>\n+                <configuration>\n+                    <port>8080</port>\n+                    <path>/spring-scheduled-scenario</path>\n+                    <uriEncoding>UTF-8</uriEncoding>\n+                    <server>tomcat7</server>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>\n+            <url>http://repo.spring.io/snapshot</url>\n+        </pluginRepository>\n+        <pluginRepository>\n+            <id>spring-milestones</id>\n+            <url>http://repo.spring.io/milestone</url>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858f9472e67182aa3dfca74d3ffc81e4a6fa6a65"}, "originalPosition": 126}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74a1f3c452f9ddb13db6cf75cbec571332f1b608", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/74a1f3c452f9ddb13db6cf75cbec571332f1b608", "committedDate": "2020-08-22T16:53:16Z", "message": "fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTkwOTE1", "url": "https://github.com/apache/skywalking/pull/5339#pullrequestreview-472990915", "createdAt": "2020-08-23T08:15:42Z", "commit": {"oid": "74a1f3c452f9ddb13db6cf75cbec571332f1b608"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acac5fcb9f796a0e5902ce644a97481183c28963", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/acac5fcb9f796a0e5902ce644a97481183c28963", "committedDate": "2020-08-23T08:15:51Z", "message": "Merge branch 'master' into spring-scheduled-plugin"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1910, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}