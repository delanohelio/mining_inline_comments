{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0OTQ1NDI2", "number": 5147, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDowMjo1OVrOERS8RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNTo1NjoyNFrOER4Jeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTcxNTg4OnYy", "diffSide": "RIGHT", "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDowMjo1OVrOG17jIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNToxODowOVrOG18gag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwMzM2MA==", "bodyText": "Don't open this, because once you did, all query and trace in http need to be reported through this port, which breaks quick start and tests.\nYour change should be in the doc mostly.", "url": "https://github.com/apache/skywalking/pull/5147#discussion_r459203360", "createdAt": "2020-07-23T04:02:59Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -156,7 +156,15 @@ storage:\n receiver-sharing-server:\n   selector: ${SW_RECEIVER_SHARING_SERVER:default}\n   default:\n+    host: ${SW_RECEIVER_JETTY_HOST:0.0.0.0}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38edd901a7b390a79b73b89f0331e448d7169093"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxOTA1MA==", "bodyText": "We can also set port default to 0?", "url": "https://github.com/apache/skywalking/pull/5147#discussion_r459219050", "createdAt": "2020-07-23T05:18:09Z", "author": {"login": "JaredTan95"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -156,7 +156,15 @@ storage:\n receiver-sharing-server:\n   selector: ${SW_RECEIVER_SHARING_SERVER:default}\n   default:\n+    host: ${SW_RECEIVER_JETTY_HOST:0.0.0.0}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwMzM2MA=="}, "originalCommit": {"oid": "38edd901a7b390a79b73b89f0331e448d7169093"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTgxMTc4OnYy", "diffSide": "RIGHT", "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/SharingServerModuleProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNTo1NjoyNFrOG202EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoyMzoxOFrOG3ALRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE0MjA5Ng==", "bodyText": "Can you explain more about this, the original logic is initializing JettyServer when config.getRestPort() != 0, but after your changes, JettyServer is always initialized, is it expected?", "url": "https://github.com/apache/skywalking/pull/5147#discussion_r460142096", "createdAt": "2020-07-24T15:56:24Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/SharingServerModuleProvider.java", "diffHunk": "@@ -67,26 +68,38 @@ public ModuleConfig createConfigBeanIfAbsent() {\n \n     @Override\n     public void prepare() {\n-        if (config.getRestPort() != 0) {\n-            jettyServer = new JettyServer(Strings.isBlank(config.getRestHost()) ? \"0.0.0.0\" : config.getRestHost(), config\n-                .getRestPort(), config.getRestContextPath());\n-            jettyServer.initialize();\n-\n-            this.registerServiceImplementation(JettyHandlerRegister.class, new JettyHandlerRegisterImpl(jettyServer));\n-        } else {\n-            this.receiverJettyHandlerRegister = new ReceiverJettyHandlerRegister();\n-            this.registerServiceImplementation(JettyHandlerRegister.class, receiverJettyHandlerRegister);\n+        JettyServerConfig jettyServerConfig = JettyServerConfig.builder()\n+                                                               .host(config.getHost()).port(config.getPort())\n+                                                               .contextPath(config.getContextPath())\n+                                                               .jettyMinThreads(config.getJettyMinThreads())\n+                                                               .jettyMaxThreads(config.getJettyMaxThreads())\n+                                                               .jettyAcceptQueueSize(config.getJettyAcceptQueueSize())\n+                                                               .jettyAcceptorPriorityDelta(config.getJettyAcceptorPriorityDelta())\n+                                                               .jettyIdleTimeOut(config.getJettyIdleTimeOut()).build();\n+\n+        if (config.getPort() != 0) {\n+            jettyServerConfig.setHost(Strings.isBlank(config.getHost()) ? \"0.0.0.0\" : config.getHost());\n+            jettyServerConfig.setPort(config.getPort());\n+            jettyServerConfig.setContextPath(config.getContextPath());\n         }\n+        jettyServer = new JettyServer(jettyServerConfig);\n+        jettyServer.initialize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "177ef9bcdea02c9e1c6672f1b03a92794271c908"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNzc1MA==", "bodyText": "The logic should not be changed. Once port is invalid, the jetty server should not be activated.", "url": "https://github.com/apache/skywalking/pull/5147#discussion_r460327750", "createdAt": "2020-07-24T23:23:18Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/SharingServerModuleProvider.java", "diffHunk": "@@ -67,26 +68,38 @@ public ModuleConfig createConfigBeanIfAbsent() {\n \n     @Override\n     public void prepare() {\n-        if (config.getRestPort() != 0) {\n-            jettyServer = new JettyServer(Strings.isBlank(config.getRestHost()) ? \"0.0.0.0\" : config.getRestHost(), config\n-                .getRestPort(), config.getRestContextPath());\n-            jettyServer.initialize();\n-\n-            this.registerServiceImplementation(JettyHandlerRegister.class, new JettyHandlerRegisterImpl(jettyServer));\n-        } else {\n-            this.receiverJettyHandlerRegister = new ReceiverJettyHandlerRegister();\n-            this.registerServiceImplementation(JettyHandlerRegister.class, receiverJettyHandlerRegister);\n+        JettyServerConfig jettyServerConfig = JettyServerConfig.builder()\n+                                                               .host(config.getHost()).port(config.getPort())\n+                                                               .contextPath(config.getContextPath())\n+                                                               .jettyMinThreads(config.getJettyMinThreads())\n+                                                               .jettyMaxThreads(config.getJettyMaxThreads())\n+                                                               .jettyAcceptQueueSize(config.getJettyAcceptQueueSize())\n+                                                               .jettyAcceptorPriorityDelta(config.getJettyAcceptorPriorityDelta())\n+                                                               .jettyIdleTimeOut(config.getJettyIdleTimeOut()).build();\n+\n+        if (config.getPort() != 0) {\n+            jettyServerConfig.setHost(Strings.isBlank(config.getHost()) ? \"0.0.0.0\" : config.getHost());\n+            jettyServerConfig.setPort(config.getPort());\n+            jettyServerConfig.setContextPath(config.getContextPath());\n         }\n+        jettyServer = new JettyServer(jettyServerConfig);\n+        jettyServer.initialize();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE0MjA5Ng=="}, "originalCommit": {"oid": "177ef9bcdea02c9e1c6672f1b03a92794271c908"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 105, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}