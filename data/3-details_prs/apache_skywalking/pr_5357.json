{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTgxNTA1", "number": 5357, "title": "JsonLogger implementation (#5356)", "bodyText": "Please answer these questions before submitting a pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n\n\n#5356\nNew feature or improvement\n\n Implement JsonLogger and JsonResolver. Json serialization with Gson\n Allow user to specify Resolver via SystemProperty, for example, -Dskywalking.logger=JSON\n Additional tests", "createdAt": "2020-08-20T02:39:03Z", "url": "https://github.com/apache/skywalking/pull/5357", "merged": true, "mergeCommit": {"oid": "9442a51c112d8c3908e936224f30757bcbfb3a25"}, "closed": true, "closedAt": "2020-08-29T15:17:30Z", "author": {"login": "lujiajing1126"}, "timelineItems": {"totalCount": 62, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAnRvxgFqTQ3MTA5NDc0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDrLRJAFqTQ3ODEzNDc2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDk0NzQw", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-471094740", "createdAt": "2020-08-20T03:02:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzowMjowOFrOHDnxmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzowMjozNFrOHDnyBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1OTQ0OA==", "bodyText": "Please read the existing source codes, all config should be controlled through Config, which has supported dynamic injection already.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473559448", "createdAt": "2020-08-20T03:02:08Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent/src/main/java/org/apache/skywalking/apm/agent/SkyWalkingAgent.java", "diffHunk": "@@ -203,4 +213,25 @@ public void onError(final String typeName,\n         public void onComplete(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded) {\n         }\n     }\n+\n+    static void configureLogger() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1OTU1Nw==", "bodyText": "I don't think these belong to Config.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473559557", "createdAt": "2020-08-20T03:02:34Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -259,6 +260,43 @@\n          * @see org.apache.skywalking.apm.agent.core.logging.core.PatternLogger#DEFAULT_CONVERTER_MAP\n          */\n         public static String PATTERN = \"%level %timestamp %thread %class : %msg %throwable\";\n+\n+        public static class JSON {\n+            /**\n+             * Key of the AgentName\n+             */\n+            public static String AGENT_NAME_KEY = \"agent_name\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMjg2Nzk3", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-471286797", "createdAt": "2020-08-20T06:40:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo0MDozNVrOHDtlpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo0MDozNVrOHDtlpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1NDY5Mg==", "bodyText": "Why change this?", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473654692", "createdAt": "2020-08-20T06:40:35Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/SnifferConfigInitializer.java", "diffHunk": "@@ -40,7 +42,7 @@\n  * The <code>SnifferConfigInitializer</code> initializes all configs in several way.\n  */\n public class SnifferConfigInitializer {\n-    private static final ILog logger = LogManager.getLogger(SnifferConfigInitializer.class);\n+    private static ILog LOGGER = LogManager.getLogger(SnifferConfigInitializer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMjg3NDM3", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-471287437", "createdAt": "2020-08-20T06:41:52Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo0MTo1MlrOHDtpQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo0MTo1MlrOHDtpQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1NTYxOA==", "bodyText": "This is not a good way to do this switch. I am waiting for the PMC confirmation about whether JSON format is acceptable. If YES, we need to improve this.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473655618", "createdAt": "2020-08-20T06:41:52Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/SnifferConfigInitializer.java", "diffHunk": "@@ -207,4 +212,15 @@ private static InputStreamReader loadConfig() throws AgentPackageNotFoundExcepti\n         }\n         throw new ConfigNotFoundException(\"Failed to load agent.config.\");\n     }\n+\n+    static void configureLogger() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMzczNTc2", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-471373576", "createdAt": "2020-08-20T08:26:43Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODoyNjo0M1rOHDz2wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODo1MzozMVrOHD1Wgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc1NzM3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static ResolverType LOGGER = ResolverType.PATTERN;\n          \n          \n            \n                    public static ResolverType RESOLVER = ResolverType.PATTERN;", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473757377", "createdAt": "2020-08-20T08:26:43Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -249,6 +251,11 @@\n          */\n         public static LogOutput OUTPUT = LogOutput.FILE;\n \n+        /**\n+         * The log resolver type. Default is PATTERN which will create PatternLogResolver later.\n+         */\n+        public static ResolverType LOGGER = ResolverType.PATTERN;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc1OTQzMQ==", "bodyText": "Technically, yes, my question is more about, why and who will config this.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473759431", "createdAt": "2020-08-20T08:29:00Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -259,6 +260,43 @@\n          * @see org.apache.skywalking.apm.agent.core.logging.core.PatternLogger#DEFAULT_CONVERTER_MAP\n          */\n         public static String PATTERN = \"%level %timestamp %thread %class : %msg %throwable\";\n+\n+        public static class JSON {\n+            /**\n+             * Key of the AgentName\n+             */\n+            public static String AGENT_NAME_KEY = \"agent_name\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1OTU1Nw=="}, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc1OTcyMw==", "bodyText": "Why starting with @ in JSON?", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473759723", "createdAt": "2020-08-20T08:29:20Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -259,6 +266,43 @@\n          * @see org.apache.skywalking.apm.agent.core.logging.core.PatternLogger#DEFAULT_CONVERTER_MAP\n          */\n         public static String PATTERN = \"%level %timestamp %thread %class : %msg %throwable\";\n+\n+        public static class JSON {\n+            /**\n+             * Key of the AgentName\n+             */\n+            public static String AGENT_NAME_KEY = \"agent_name\";\n+\n+            /**\n+             * Key of the timestamp\n+             */\n+            public static String TIMESTAMP_KEY = \"@timestamp\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2Mjk1MQ==", "bodyText": "It used to be able to pass, then it still can. All codes in the master branch have to pass the style check. Please recheck again.\nIn the rule, we set an exception for the logger due to the legacy issue.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473762951", "createdAt": "2020-08-20T08:32:44Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/SnifferConfigInitializer.java", "diffHunk": "@@ -40,7 +42,7 @@\n  * The <code>SnifferConfigInitializer</code> initializes all configs in several way.\n  */\n public class SnifferConfigInitializer {\n-    private static final ILog logger = LogManager.getLogger(SnifferConfigInitializer.class);\n+    private static ILog LOGGER = LogManager.getLogger(SnifferConfigInitializer.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1NDY5Mg=="}, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2OTQ2OA==", "bodyText": "Once you add this, why need a default implementation?", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473769468", "createdAt": "2020-08-20T08:40:03Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/logging/core/Converter.java", "diffHunk": "@@ -19,10 +19,13 @@\n package org.apache.skywalking.apm.agent.core.logging.core;\n \n /**\n- * The Converter, It is used to convert the LogEvent to the String.\n+ * The Converter, it is used to convert the LogEvent to the String.\n  */\n public interface Converter {\n \n     String convert(LogEvent logEvent);\n \n+    default String getKey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc3MTY1NA==", "bodyText": "Why you hide the expression? What happens once these happen?", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473771654", "createdAt": "2020-08-20T08:42:31Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/logging/core/JsonLogger.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.logging.core;\n+\n+import com.google.gson.Gson;\n+import org.apache.skywalking.apm.agent.core.logging.core.converters.LiteralConverter;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class JsonLogger extends AbstractLogger {\n+    private final Gson gson;\n+\n+    public JsonLogger(Class<?> targetClass, Gson gson) {\n+        this(targetClass.getSimpleName(), gson);\n+    }\n+\n+    public JsonLogger(String targetClass, Gson gson) {\n+        super(targetClass);\n+        this.gson = gson;\n+        for (Map.Entry<String, Class<? extends Converter>> entry : DEFAULT_CONVERTER_MAP.entrySet()) {\n+            try {\n+                if (converters instanceof LiteralConverter) {\n+                    continue;\n+                }\n+                converters.add(entry.getValue().newInstance());\n+            } catch (IllegalAccessException | InstantiationException ignore) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc3NjA1OQ==", "bodyText": "Why need to override this method? I think this method should be in AbstractLogger too, and the two implementations only have their own format method(an abstract method in the parent).", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473776059", "createdAt": "2020-08-20T08:46:54Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/logging/core/JsonLogger.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.logging.core;\n+\n+import com.google.gson.Gson;\n+import org.apache.skywalking.apm.agent.core.logging.core.converters.LiteralConverter;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class JsonLogger extends AbstractLogger {\n+    private final Gson gson;\n+\n+    public JsonLogger(Class<?> targetClass, Gson gson) {\n+        this(targetClass.getSimpleName(), gson);\n+    }\n+\n+    public JsonLogger(String targetClass, Gson gson) {\n+        super(targetClass);\n+        this.gson = gson;\n+        for (Map.Entry<String, Class<? extends Converter>> entry : DEFAULT_CONVERTER_MAP.entrySet()) {\n+            try {\n+                if (converters instanceof LiteralConverter) {\n+                    continue;\n+                }\n+                converters.add(entry.getValue().newInstance());\n+            } catch (IllegalAccessException | InstantiationException ignore) {\n+            }\n+        }\n+    }\n+\n+    protected void logger(LogLevel level, String message, Throwable e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc3Nzc5Ng==", "bodyText": "Traditionally, we put the benchmark result in the class comments. Then other developers could have a clear result at the first time, rather than running on its own laptop.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473777796", "createdAt": "2020-08-20T08:48:57Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/logging/core/LoggingBenchmark.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.logging.core;\n+\n+import com.google.gson.Gson;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+public class LoggingBenchmark {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4MTg5MA==", "bodyText": "You should make SnifferConfigInitializer.initializeCoreConfig(agentArgs); in a separate try/catch/finally to reset the logger, please do this so many times.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473781890", "createdAt": "2020-08-20T08:53:31Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent/src/main/java/org/apache/skywalking/apm/agent/SkyWalkingAgent.java", "diffHunk": "@@ -65,63 +66,68 @@ public static void premain(String agentArgs, Instrumentation instrumentation) th\n \n             pluginFinder = new PluginFinder(new PluginBootstrap().loadPlugins());\n         } catch (AgentPackageNotFoundException ape) {\n-            logger.error(ape, \"Locate agent.jar failure. Shutting down.\");\n+            LOGGER = LogManager.getLogger(SkyWalkingAgent.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNDIwNjcy", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-471420672", "createdAt": "2020-08-20T09:30:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTozMDowM1rOHD3NRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTozMDowM1rOHD3NRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgxMjI5NQ==", "bodyText": "But this could be a potential bug in the future, as getKey returns empty string in default, so they could override with each other.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473812295", "createdAt": "2020-08-20T09:30:03Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/logging/core/JsonLogger.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.logging.core;\n+\n+import com.google.gson.Gson;\n+import org.apache.skywalking.apm.agent.core.logging.core.converters.LiteralConverter;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class JsonLogger extends AbstractLogger {\n+    private final Gson gson;\n+\n+    public JsonLogger(Class<?> targetClass, Gson gson) {\n+        this(targetClass.getSimpleName(), gson);\n+    }\n+\n+    public JsonLogger(String targetClass, Gson gson) {\n+        super(targetClass);\n+        this.gson = gson;\n+        for (Map.Entry<String, Class<? extends Converter>> entry : DEFAULT_CONVERTER_MAP.entrySet()) {\n+            try {\n+                if (converters instanceof LiteralConverter) {\n+                    continue;\n+                }\n+                converters.add(entry.getValue().newInstance());\n+            } catch (IllegalAccessException | InstantiationException ignore) {\n+            }\n+        }\n+    }\n+\n+    protected void logger(LogLevel level, String message, Throwable e) {\n+        WriterFactory.getLogWriter().write(generateJson(level, message, e));\n+    }\n+\n+    String generateJson(LogLevel level, String message, Throwable e) {\n+        LogEvent logEvent = new LogEvent(level, message, e, this.targetClass);\n+        Map<String, String> log = new HashMap<>();\n+        for (Converter converter : this.converters) {\n+            log.put(converter.getKey(), converter.convert(logEvent));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNTc5NTQ0", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-471579544", "createdAt": "2020-08-20T13:07:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzowNzozM1rOHD_53g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzowNzozM1rOHD_53g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk1NDc4Mg==", "bodyText": "This reformat seems very strange. Why do this? If you want to reformat, this is a better choice.\n        AgentBuilder agentBuilder = new AgentBuilder.Default(byteBuddy).ignore(\n            nameStartsWith(\"net.bytebuddy.\")\n                .or(nameStartsWith(\"org.slf4j.\"))\n                .or(nameStartsWith(\"org.groovy.\"))\n                .or(nameContains(\"javassist\"))\n                .or(nameContains(\".asm.\"))\n                .or(nameContains(\".reflectasm.\"))\n                .or(nameStartsWith(\"sun.reflect\"))\n                .or(allSkyWalkingAgentExcludeToolkit())\n                .or(ElementMatchers.isSynthetic()));", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473954782", "createdAt": "2020-08-20T13:07:33Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent/src/main/java/org/apache/skywalking/apm/agent/SkyWalkingAgent.java", "diffHunk": "@@ -75,14 +84,14 @@ public static void premain(String agentArgs, Instrumentation instrumentation) th\n         final ByteBuddy byteBuddy = new ByteBuddy().with(TypeValidation.of(Config.Agent.IS_OPEN_DEBUGGING_CLASS));\n \n         AgentBuilder agentBuilder = new AgentBuilder.Default(byteBuddy).ignore(\n-            nameStartsWith(\"net.bytebuddy.\").or(nameStartsWith(\"org.slf4j.\"))\n-                                            .or(nameStartsWith(\"org.groovy.\"))\n-                                            .or(nameContains(\"javassist\"))\n-                                            .or(nameContains(\".asm.\"))\n-                                            .or(nameContains(\".reflectasm.\"))\n-                                            .or(nameStartsWith(\"sun.reflect\"))\n-                                            .or(allSkyWalkingAgentExcludeToolkit())\n-                                            .or(ElementMatchers.isSynthetic()));\n+                nameStartsWith(\"net.bytebuddy.\").or(nameStartsWith(\"org.slf4j.\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNTgwMTQ1", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-471580145", "createdAt": "2020-08-20T13:07:50Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzowNzo1MFrOHD_6Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzowNzo1MFrOHD_6Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk1NDkxOQ==", "bodyText": "Same strange format here.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r473954919", "createdAt": "2020-08-20T13:07:50Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent/src/main/java/org/apache/skywalking/apm/agent/SkyWalkingAgent.java", "diffHunk": "@@ -109,10 +118,10 @@ public static void premain(String agentArgs, Instrumentation instrumentation) th\n         }\n \n         agentBuilder.type(pluginFinder.buildMatch())\n-                    .transform(new Transformer(pluginFinder))\n-                    .with(AgentBuilder.RedefinitionStrategy.RETRANSFORMATION)\n-                    .with(new Listener())\n-                    .installOn(instrumentation);\n+                .transform(new Transformer(pluginFinder))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a59682b1e2e3bf8c2a4701d79f8461320eb7f631", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/a59682b1e2e3bf8c2a4701d79f8461320eb7f631", "committedDate": "2020-08-26T01:51:32Z", "message": "add json logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3385a2fc15e305df8a23ce6fad6090c83ffef5ff", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/3385a2fc15e305df8a23ce6fad6090c83ffef5ff", "committedDate": "2020-08-26T01:51:36Z", "message": "add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1b8d92701e29bc73b03a957ff0f25466edf5328", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/f1b8d92701e29bc73b03a957ff0f25466edf5328", "committedDate": "2020-08-26T01:51:36Z", "message": "catch illegal logger exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba9fd9924ac3eedfe1757c6cd371a205a4e529e4", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/ba9fd9924ac3eedfe1757c6cd371a205a4e529e4", "committedDate": "2020-08-26T01:51:36Z", "message": "add test for agent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "210a69aaba1efff5eb6aae86ca21e419ab893313", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/210a69aaba1efff5eb6aae86ca21e419ab893313", "committedDate": "2020-08-26T01:51:36Z", "message": "fix style issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8b17290499ef6d9f8754ff5842df52d55862013", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/e8b17290499ef6d9f8754ff5842df52d55862013", "committedDate": "2020-08-26T01:53:11Z", "message": "use ConfigInitializer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9be6e96b1cc6506828932ce2f87fe448e808b327", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/9be6e96b1cc6506828932ce2f87fe448e808b327", "committedDate": "2020-08-26T01:53:14Z", "message": "add benchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbe4d32684cd111331b3fa594af5611b6adda686", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/dbe4d32684cd111331b3fa594af5611b6adda686", "committedDate": "2020-08-26T01:54:52Z", "message": "init logger in SnifferConfigInitializer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d845b7300879fb8701c802b28c591b0f44ba4b51", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/d845b7300879fb8701c802b28c591b0f44ba4b51", "committedDate": "2020-08-26T01:54:53Z", "message": "refactor AbstractLogger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe9e5f8f77129199bab9afe0d29c69040745ad5b", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/fe9e5f8f77129199bab9afe0d29c69040745ad5b", "committedDate": "2020-08-26T01:54:53Z", "message": "revert logger name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42c8a75e153872e478a3620b1af5f76dc56742a8", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/42c8a75e153872e478a3620b1af5f76dc56742a8", "committedDate": "2020-08-26T01:54:53Z", "message": "use RESOLVER instead of LOGGER"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5db8be15c0005e270039f2987d1e7dd273019801", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/5db8be15c0005e270039f2987d1e7dd273019801", "committedDate": "2020-08-26T01:54:53Z", "message": "add benchmark result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2ff5d706b0c1a3f8c498ea26b7976c9f744f289", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/c2ff5d706b0c1a3f8c498ea26b7976c9f744f289", "committedDate": "2020-08-26T01:54:53Z", "message": "refactor interface not to use default method for getKey()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6c3e8b9f8b4bb6780c817eb0a17ff8fcee21f8b", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/c6c3e8b9f8b4bb6780c817eb0a17ff8fcee21f8b", "committedDate": "2020-08-26T01:54:53Z", "message": "separate try/catch/finally for SnifferConfigInitializer.initializeCoreConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3625fb942804ad330036f32db483fd87bc26a57", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/d3625fb942804ad330036f32db483fd87bc26a57", "committedDate": "2020-08-26T01:54:53Z", "message": "polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96c92eae89f6e1d2d667d883d9da5c4f095ec718", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/96c92eae89f6e1d2d667d883d9da5c4f095ec718", "committedDate": "2020-08-26T02:14:38Z", "message": "fix LOGGER style after rebase master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b24bbef7e3673c0b8504782cd9ba5526168b19f", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/1b24bbef7e3673c0b8504782cd9ba5526168b19f", "committedDate": "2020-08-26T02:18:46Z", "message": "improve style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b600d2a7ac32191373068043133f9e1191fb0f6", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/8b600d2a7ac32191373068043133f9e1191fb0f6", "committedDate": "2020-08-26T02:19:14Z", "message": "improve code format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61614375052f07c6030d50ca0768e2ef1c4d7f8d", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/61614375052f07c6030d50ca0768e2ef1c4d7f8d", "committedDate": "2020-08-26T02:22:24Z", "message": "re-throw exception if creating converter fails"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b94b80bd7166bc2aa78d25410cdbe6f6c51c9571", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/b94b80bd7166bc2aa78d25410cdbe6f6c51c9571", "committedDate": "2020-08-26T02:24:49Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0cfa7311d436715976641d9a023194de922406f", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/c0cfa7311d436715976641d9a023194de922406f", "committedDate": "2020-08-26T02:51:54Z", "message": "remove configuration for json logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca9e321be6f576e8a2fb23c4bcc6707d7b77ba35", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/ca9e321be6f576e8a2fb23c4bcc6707d7b77ba35", "committedDate": "2020-08-26T02:55:41Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee7dd0fae63c794e21e86a1ed523f2ac9373edae", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/ee7dd0fae63c794e21e86a1ed523f2ac9373edae", "committedDate": "2020-08-26T03:19:05Z", "message": "add docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f48ca0e9102f9fc0a684a821f7473d2def7e792", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/2f48ca0e9102f9fc0a684a821f7473d2def7e792", "committedDate": "2020-08-26T05:23:13Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "970364d996214a4a230ff489bef0c8edc7d06f93", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/970364d996214a4a230ff489bef0c8edc7d06f93", "committedDate": "2020-08-26T08:49:53Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3009c39d3fca70e1cba217b11502f0144b26da0", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/f3009c39d3fca70e1cba217b11502f0144b26da0", "committedDate": "2020-08-26T15:35:56Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0dab0008fa9494e5bc3bfa723d05036aa095a26", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/c0dab0008fa9494e5bc3bfa723d05036aa095a26", "committedDate": "2020-08-26T15:51:13Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c8390cfad1ea86e5d7a893af9debac4afeea029", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/3c8390cfad1ea86e5d7a893af9debac4afeea029", "committedDate": "2020-08-28T06:28:26Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7658d69e41460d181b2448dc64e2aae4216874f4", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/7658d69e41460d181b2448dc64e2aae4216874f4", "committedDate": "2020-08-28T08:32:48Z", "message": "fix wrong key issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NTE4NDgy", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-477518482", "createdAt": "2020-08-28T08:33:51Z", "commit": {"oid": "3c8390cfad1ea86e5d7a893af9debac4afeea029"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODozMzo1MVrOHIwdWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODozMzo1MVrOHIwdWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk0NDYwMA==", "bodyText": "You are adding this.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r478944600", "createdAt": "2020-08-28T08:33:51Z", "author": {"login": "wu-sheng"}, "path": "pom.xml", "diffHunk": "@@ -250,6 +250,14 @@\n             <version>${jmh.version}</version>\n             <scope>test</scope>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>org.openjdk.jmh</groupId>\n+            <artifactId>jmh-generator-annprocess</artifactId>\n+            <version>${jmh.version}</version>\n+            <scope>test</scope>\n+        </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c8390cfad1ea86e5d7a893af9debac4afeea029"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "121db31f481ab77e7fb884f023a1524bf9c71951", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/121db31f481ab77e7fb884f023a1524bf9c71951", "committedDate": "2020-08-28T09:38:15Z", "message": "move jmh-annotation-processor to dependencyManagement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eff29e091211351dca57f1c3fc8f351083a875e", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/5eff29e091211351dca57f1c3fc8f351083a875e", "committedDate": "2020-08-28T10:02:00Z", "message": "explicitly exclude generated benchmarks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15a976445378b36a77a0549bad949a9e4d443ecf", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/15a976445378b36a77a0549bad949a9e4d443ecf", "committedDate": "2020-08-28T14:27:26Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODIyMDQy", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-477822042", "createdAt": "2020-08-28T15:25:54Z", "commit": {"oid": "15a976445378b36a77a0549bad949a9e4d443ecf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyNTo1NFrOHJK1Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyNTo1NFrOHJK1Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NjcwMg==", "bodyText": "Could you share which part generates these classes?\nAnd please move this to the last one.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r479376702", "createdAt": "2020-08-28T15:25:54Z", "author": {"login": "wu-sheng"}, "path": "pom.xml", "diffHunk": "@@ -581,6 +588,7 @@\n                     </resourceExcludes>\n                     <excludes>\n                         **/target/generated-test-sources/**,\n+                        org/apache/skywalking/apm/agent/core/logging/core/generated/LoggingBenchmark*.java,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15a976445378b36a77a0549bad949a9e4d443ecf"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODIyMzIw", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-477822320", "createdAt": "2020-08-28T15:26:16Z", "commit": {"oid": "15a976445378b36a77a0549bad949a9e4d443ecf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyNjoxNlrOHJK2CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyNjoxNlrOHJK2CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NjkwNA==", "bodyText": "Add comments for this.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r479376904", "createdAt": "2020-08-28T15:26:16Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent/src/main/java/org/apache/skywalking/apm/agent/SkyWalkingAgent.java", "diffHunk": "@@ -62,7 +63,15 @@ public static void premain(String agentArgs, Instrumentation instrumentation) th\n         final PluginFinder pluginFinder;\n         try {\n             SnifferConfigInitializer.initializeCoreConfig(agentArgs);\n+        } catch (Exception e) {\n+            LogManager.getLogger(SkyWalkingAgent.class)\n+                    .error(e, \"SkyWalking agent initialized failure. Shutting down.\");\n+            return;\n+        } finally {\n+            LOGGER = LogManager.getLogger(SkyWalkingAgent.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15a976445378b36a77a0549bad949a9e4d443ecf"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a90ce66ee5542cbc97be3fce9a5598a0cf5825a", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/7a90ce66ee5542cbc97be3fce9a5598a0cf5825a", "committedDate": "2020-08-28T15:43:15Z", "message": "change order of exclude rules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed2bd6df8112406bcfd6bc186dc50b752d1baf3b", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/ed2bd6df8112406bcfd6bc186dc50b752d1baf3b", "committedDate": "2020-08-28T15:52:19Z", "message": "add comment for agent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50346fdd7709a77cb3fb9c5285bcef6abe613ff2", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/50346fdd7709a77cb3fb9c5285bcef6abe613ff2", "committedDate": "2020-08-29T07:30:06Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTA4MTk1", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-478108195", "createdAt": "2020-08-29T07:34:30Z", "commit": {"oid": "50346fdd7709a77cb3fb9c5285bcef6abe613ff2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzozNDozMFrOHJZs2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzozNDozMFrOHJZs2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYyMDMxNA==", "bodyText": "Could you recheck, whether we are going to use timestamp or @timestamp.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r479620314", "createdAt": "2020-08-29T07:34:30Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/logging/core/JsonLogger.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.logging.core;\n+\n+import com.google.gson.Gson;\n+import org.apache.skywalking.apm.agent.core.logging.core.converters.LiteralConverter;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * An alternative logger for the SkyWalking agent. The default layout is\n+ * {\n+ *     \"timestamp\": \"\", // timestamp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50346fdd7709a77cb3fb9c5285bcef6abe613ff2"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTA4MzUw", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-478108350", "createdAt": "2020-08-29T07:36:34Z", "commit": {"oid": "50346fdd7709a77cb3fb9c5285bcef6abe613ff2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzozNjozNVrOHJZxNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzozNjozNVrOHJZxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYyMTQyOA==", "bodyText": "This is not required, right? As you have used the dependency management.", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r479621428", "createdAt": "2020-08-29T07:36:35Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/pom.xml", "diffHunk": "@@ -104,6 +104,12 @@\n             <version>${ststem-rules.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.openjdk.jmh</groupId>\n+            <artifactId>jmh-generator-annprocess</artifactId>\n+            <version>${jmh.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50346fdd7709a77cb3fb9c5285bcef6abe613ff2"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTA4Mzg3", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-478108387", "createdAt": "2020-08-29T07:37:16Z", "commit": {"oid": "50346fdd7709a77cb3fb9c5285bcef6abe613ff2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzozNzoxNlrOHJZxlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzozNzoxNlrOHJZxlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYyMTUyNQ==", "bodyText": "Why I can't find the dependency on the DataCarrier pom.xml?", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r479621525", "createdAt": "2020-08-29T07:37:16Z", "author": {"login": "wu-sheng"}, "path": "pom.xml", "diffHunk": "@@ -290,6 +291,12 @@\n                 <version>${powermock.version}</version>\n                 <scope>test</scope>\n             </dependency>\n+            <dependency>\n+                <groupId>org.openjdk.jmh</groupId>\n+                <artifactId>jmh-generator-annprocess</artifactId>\n+                <version>${jmh.version}</version>\n+                <scope>test</scope>\n+            </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50346fdd7709a77cb3fb9c5285bcef6abe613ff2"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTA4NDg4", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-478108488", "createdAt": "2020-08-29T07:39:17Z", "commit": {"oid": "50346fdd7709a77cb3fb9c5285bcef6abe613ff2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed94bc706d0898d6dcfe1fb3c14d53a8c6117d2d", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/ed94bc706d0898d6dcfe1fb3c14d53a8c6117d2d", "committedDate": "2020-08-29T07:48:04Z", "message": "remove version of jmh-generator-annprocess as dep management is used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5369d54b68202a22f2a01064c702b2d0caa32f2c", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/5369d54b68202a22f2a01064c702b2d0caa32f2c", "committedDate": "2020-08-29T07:48:32Z", "message": "Merge branch 'master' of github.com:lujiajing1126/skywalking into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adc88c982712c9881eb9970ac9ea08813d361294", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/adc88c982712c9881eb9970ac9ea08813d361294", "committedDate": "2020-08-29T07:49:22Z", "message": "fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44f4a7ebc8d4b666108a1d38c77cf55ebb3a190c", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/44f4a7ebc8d4b666108a1d38c77cf55ebb3a190c", "committedDate": "2020-08-29T07:59:11Z", "message": "update agent settings docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81ffebdbef41f35ccc69630e2795170e03d481b5", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/81ffebdbef41f35ccc69630e2795170e03d481b5", "committedDate": "2020-08-29T08:31:01Z", "message": "add necessary jmh processor to all modules containing Benchmark codes. And generally exclude jmh generated classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTE0NzUz", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-478114753", "createdAt": "2020-08-29T09:42:54Z", "commit": {"oid": "81ffebdbef41f35ccc69630e2795170e03d481b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwOTo0Mjo1NVrOHJaZPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwOTo0Mjo1NVrOHJaZPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzMTY3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `logging.resolver`|Logger resovler: `PATTERN` or `JSON`. Default is `PATTERN` with which `PatternLogger` will be used. `JSON`: `JsonLogger` is used after initialization. |`PATTERN`|\n          \n          \n            \n            `logging.resolver`|Logger resolver: `PATTERN` or `JSON`. The default is `PATTERN`, which uses `logging.pattern` to print traditional text logs. `JSON` resolver prints logs in JSON format. |`PATTERN`|", "url": "https://github.com/apache/skywalking/pull/5357#discussion_r479631678", "createdAt": "2020-08-29T09:42:55Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -96,7 +96,8 @@ property key | Description | Default |\n `logging.file_name`|Log file name.|`skywalking-api.log`|\n `logging.output`| Log output. Default is FILE. Use CONSOLE means output to stdout. |`FILE`|\n `logging.dir`|Log files directory. Default is blank string, means, use \"{theSkywalkingAgentJarDir}/logs  \" to output logs. {theSkywalkingAgentJarDir} is the directory where the skywalking agent jar file is located |`\"\"`|\n-`logging.pattern `|logging format. There are all conversion specifiers: <br>&nbsp;&nbsp;* `%level` means log level. <br>&nbsp;&nbsp;*  `%timestamp` means now of time with format `yyyy-MM-dd HH:mm:ss:SSS`.<br>&nbsp;&nbsp;*   `%thread` means name of current thread.<br>&nbsp;&nbsp;*   `%msg` means some message which user logged. <br>&nbsp;&nbsp;*  `%class` means SimpleName of TargetClass. <br>&nbsp;&nbsp;*  `%throwable` means a throwable which user called. <br>&nbsp;&nbsp;*  `%agent_name` means `agent.service_name`  |`%level %timestamp %thread %class : %msg %throwable`|\n+`logging.resolver`|Logger resovler: `PATTERN` or `JSON`. Default is `PATTERN` with which `PatternLogger` will be used. `JSON`: `JsonLogger` is used after initialization. |`PATTERN`|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81ffebdbef41f35ccc69630e2795170e03d481b5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTE0ODE4", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-478114818", "createdAt": "2020-08-29T09:44:24Z", "commit": {"oid": "81ffebdbef41f35ccc69630e2795170e03d481b5"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f146b120d34d9a1a68c175e96ccedecfae5d02eb", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/f146b120d34d9a1a68c175e96ccedecfae5d02eb", "committedDate": "2020-08-29T09:51:39Z", "message": "Update docs/en/setup/service-agent/java-agent/README.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79391aeca4409352c7dc4b145a23182141634b85", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/79391aeca4409352c7dc4b145a23182141634b85", "committedDate": "2020-08-29T10:51:33Z", "message": "check every output in PatterLoggerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ce3cf927d2b8d9eb31303a72fba6961a4ec8543", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/4ce3cf927d2b8d9eb31303a72fba6961a4ec8543", "committedDate": "2020-08-29T13:08:39Z", "message": "use LogMatch to do the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "985098c6c97749a0923700ade38bda5b785fe7b8", "author": {"user": {"login": "lujiajing1126", "name": "Jiajing LU"}}, "url": "https://github.com/apache/skywalking/commit/985098c6c97749a0923700ade38bda5b785fe7b8", "committedDate": "2020-08-29T13:12:34Z", "message": "fix style issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTI5OTM4", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-478129938", "createdAt": "2020-08-29T13:57:32Z", "commit": {"oid": "985098c6c97749a0923700ade38bda5b785fe7b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTM0NzYw", "url": "https://github.com/apache/skywalking/pull/5357#pullrequestreview-478134760", "createdAt": "2020-08-29T15:17:14Z", "commit": {"oid": "985098c6c97749a0923700ade38bda5b785fe7b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1928, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}