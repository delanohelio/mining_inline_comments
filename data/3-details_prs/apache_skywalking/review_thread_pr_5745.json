{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMzc0NTY2", "number": 5745, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODo0NDo0OVrOEytIjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwOTo0OTozMlrOEyuwGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjAzNzI3OnYy", "diffSide": "RIGHT", "path": "CHANGES.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODo0NDo0OVrOHpfWyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODo0NDo0OVrOHpfWyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2NzQwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            plugin feign-default-http-9.x-plugin support java 14\n          \n          \n            \n            Make the Feign plugin to support Java 14", "url": "https://github.com/apache/skywalking/pull/5745#discussion_r513267402", "createdAt": "2020-10-28T08:44:49Z", "author": {"login": "wu-sheng"}, "path": "CHANGES.md", "diffHunk": "@@ -7,6 +7,8 @@ Release Notes.\n #### Project\n \n #### Java Agent\n+plugin feign-default-http-9.x-plugin support java 14", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c783935d5e08eca64896bd3d21695868249a24"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjAzODAxOnYy", "diffSide": "RIGHT", "path": "CHANGES.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODo0NTowMVrOHpfXQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwOTozODo1N1rOHphcOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2NzUyMg==", "bodyText": "Same style as above", "url": "https://github.com/apache/skywalking/pull/5745#discussion_r513267522", "createdAt": "2020-10-28T08:45:01Z", "author": {"login": "wu-sheng"}, "path": "CHANGES.md", "diffHunk": "@@ -7,6 +7,8 @@ Release Notes.\n #### Project\n \n #### Java Agent\n+plugin feign-default-http-9.x-plugin support java 14\n+plugin okhttp-3.x-plugin support java 14", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c783935d5e08eca64896bd3d21695868249a24"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwMTU2Mw==", "bodyText": "modified", "url": "https://github.com/apache/skywalking/pull/5745#discussion_r513301563", "createdAt": "2020-10-28T09:38:57Z", "author": {"login": "hsoftxl"}, "path": "CHANGES.md", "diffHunk": "@@ -7,6 +7,8 @@ Release Notes.\n #### Project\n \n #### Java Agent\n+plugin feign-default-http-9.x-plugin support java 14\n+plugin okhttp-3.x-plugin support java 14", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2NzUyMg=="}, "originalCommit": {"oid": "31c783935d5e08eca64896bd3d21695868249a24"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjMwMjMzOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/okhttp-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/okhttp/v3/RealCallInterceptor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwOTo0OTozMlrOHph4aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDoxMDo0NFrOHpiwcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwODc3OQ==", "bodyText": "Note, the existing code creates a new builder, but never read the existing headers, if the client has meaning headers, such as token, they would be lost, right?", "url": "https://github.com/apache/skywalking/pull/5745#discussion_r513308779", "createdAt": "2020-10-28T09:49:32Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/okhttp-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/okhttp/v3/RealCallInterceptor.java", "diffHunk": "@@ -70,10 +69,6 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         SpanLayer.asHttp(span);\n \n         Field headersField = Request.class.getDeclaredField(\"headers\");\n-        Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n-        modifiersField.setAccessible(true);\n-        modifiersField.setInt(headersField, headersField.getModifiers() & ~Modifier.FINAL);\n-\n         headersField.setAccessible(true);\n         Headers.Builder headerBuilder = request.headers().newBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb10f5f0c2e7a7672fe5cf2e05e9b5b3631808a7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwOTQ3NA==", "bodyText": "I know this is not related to this fix. You could consider to check these 3 plugins, to submit issue or another PR to fox this.", "url": "https://github.com/apache/skywalking/pull/5745#discussion_r513309474", "createdAt": "2020-10-28T09:50:25Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/okhttp-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/okhttp/v3/RealCallInterceptor.java", "diffHunk": "@@ -70,10 +69,6 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         SpanLayer.asHttp(span);\n \n         Field headersField = Request.class.getDeclaredField(\"headers\");\n-        Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n-        modifiersField.setAccessible(true);\n-        modifiersField.setInt(headersField, headersField.getModifiers() & ~Modifier.FINAL);\n-\n         headersField.setAccessible(true);\n         Headers.Builder headerBuilder = request.headers().newBuilder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwODc3OQ=="}, "originalCommit": {"oid": "fb10f5f0c2e7a7672fe5cf2e05e9b5b3631808a7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMyMjQzNw==", "bodyText": "first question : request.headers().newBuilder();\nthis code read existing headers, and next step put new values in it.\n2: there just 3 block code use this way to change modifiers  in project.", "url": "https://github.com/apache/skywalking/pull/5745#discussion_r513322437", "createdAt": "2020-10-28T10:09:43Z", "author": {"login": "hsoftxl"}, "path": "apm-sniffer/apm-sdk-plugin/okhttp-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/okhttp/v3/RealCallInterceptor.java", "diffHunk": "@@ -70,10 +69,6 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         SpanLayer.asHttp(span);\n \n         Field headersField = Request.class.getDeclaredField(\"headers\");\n-        Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n-        modifiersField.setAccessible(true);\n-        modifiersField.setInt(headersField, headersField.getModifiers() & ~Modifier.FINAL);\n-\n         headersField.setAccessible(true);\n         Headers.Builder headerBuilder = request.headers().newBuilder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwODc3OQ=="}, "originalCommit": {"oid": "fb10f5f0c2e7a7672fe5cf2e05e9b5b3631808a7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMyMzEyMg==", "bodyText": "Thanks for clearance. Good to me.", "url": "https://github.com/apache/skywalking/pull/5745#discussion_r513323122", "createdAt": "2020-10-28T10:10:44Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/okhttp-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/okhttp/v3/RealCallInterceptor.java", "diffHunk": "@@ -70,10 +69,6 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         SpanLayer.asHttp(span);\n \n         Field headersField = Request.class.getDeclaredField(\"headers\");\n-        Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n-        modifiersField.setAccessible(true);\n-        modifiersField.setInt(headersField, headersField.getModifiers() & ~Modifier.FINAL);\n-\n         headersField.setAccessible(true);\n         Headers.Builder headerBuilder = request.headers().newBuilder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwODc3OQ=="}, "originalCommit": {"oid": "fb10f5f0c2e7a7672fe5cf2e05e9b5b3631808a7"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4734, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}