{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNTIxNzU0", "number": 4247, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwNTo0ODo0NVrODZBy6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMDo0NzowOVrODZCjpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTcwNDA5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwNTo0ODo0NVrOFfNSEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwNTo0ODo0NVrOFfNSEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2Nzc5NA==", "bodyText": "Why change this name?", "url": "https://github.com/apache/skywalking/pull/4247#discussion_r368267794", "createdAt": "2020-01-19T05:48:45Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -187,7 +182,7 @@ public void moveTo(LocalDateTime targetTime) {\n         private int silenceCountdown;\n \n         private LinkedList<Metrics> values;\n-        private ReentrantLock lock = new ReentrantLock();\n+        private ReentrantLock reentrantLock = new ReentrantLock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTcwNDIyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwNTo0OToxOFrOFfNSIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwNTo0OToxOFrOFfNSIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2NzgxMA==", "bodyText": "Why change this?", "url": "https://github.com/apache/skywalking/pull/4247#discussion_r368267810", "createdAt": "2020-01-19T05:49:18Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -86,7 +83,7 @@ public RunningRule(AlarmRule alarmRule) {\n      * Receive metrics result from persistence, after it is saved into storage. In alarm, only minute dimensionality\n      * metrics are expected to process.\n      *\n-     * @param meta of input metrics\n+     * @param meta    of input metrics", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTcwNDI5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwNTo0OTo0OFrOFfNSLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwNTo1Nzo0OVrOFfNTZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2NzgyMw==", "bodyText": "What change the format of all these cases?", "url": "https://github.com/apache/skywalking/pull/4247#discussion_r368267823", "createdAt": "2020-01-19T05:49:48Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -290,28 +278,28 @@ private boolean isMatch() {\n \n                 switch (valueType) {\n                     case LONG:\n-                        long lvalue = ((LongValueHolder)metrics).getValue();\n+                        long lvalue = ((LongValueHolder) metrics).getValue();\n                         long lexpected = RunningRule.this.threshold.getLongThreshold();\n                         if (op.test(lexpected, lvalue)) {\n                             matchCount++;\n                         }\n                         break;\n                     case INT:\n-                        int ivalue = ((IntValueHolder)metrics).getValue();\n+                        int ivalue = ((IntValueHolder) metrics).getValue();\n                         int iexpected = RunningRule.this.threshold.getIntThreshold();\n                         if (op.test(iexpected, ivalue)) {\n                             matchCount++;\n                         }\n                         break;\n                     case DOUBLE:\n-                        double dvalue = ((DoubleValueHolder)metrics).getValue();\n+                        double dvalue = ((DoubleValueHolder) metrics).getValue();\n                         double dexpected = RunningRule.this.threshold.getDoubleThreshold();\n                         if (op.test(dexpected, dvalue)) {\n                             matchCount++;\n                         }\n                         break;\n                     case MULTI_INTS:\n-                        int[] ivalueArray = ((MultiIntValuesHolder)metrics).getValues();\n+                        int[] ivalueArray = ((MultiIntValuesHolder) metrics).getValues();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2ODA2NQ==", "bodyText": "alibaba coding guideline plugin did these coding format automatically..", "url": "https://github.com/apache/skywalking/pull/4247#discussion_r368268065", "createdAt": "2020-01-19T05:56:05Z", "author": {"login": "liuhaoXD"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -290,28 +278,28 @@ private boolean isMatch() {\n \n                 switch (valueType) {\n                     case LONG:\n-                        long lvalue = ((LongValueHolder)metrics).getValue();\n+                        long lvalue = ((LongValueHolder) metrics).getValue();\n                         long lexpected = RunningRule.this.threshold.getLongThreshold();\n                         if (op.test(lexpected, lvalue)) {\n                             matchCount++;\n                         }\n                         break;\n                     case INT:\n-                        int ivalue = ((IntValueHolder)metrics).getValue();\n+                        int ivalue = ((IntValueHolder) metrics).getValue();\n                         int iexpected = RunningRule.this.threshold.getIntThreshold();\n                         if (op.test(iexpected, ivalue)) {\n                             matchCount++;\n                         }\n                         break;\n                     case DOUBLE:\n-                        double dvalue = ((DoubleValueHolder)metrics).getValue();\n+                        double dvalue = ((DoubleValueHolder) metrics).getValue();\n                         double dexpected = RunningRule.this.threshold.getDoubleThreshold();\n                         if (op.test(dexpected, dvalue)) {\n                             matchCount++;\n                         }\n                         break;\n                     case MULTI_INTS:\n-                        int[] ivalueArray = ((MultiIntValuesHolder)metrics).getValues();\n+                        int[] ivalueArray = ((MultiIntValuesHolder) metrics).getValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2NzgyMw=="}, "originalCommit": null, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2ODEzMw==", "bodyText": "But we are not using it .SkyWalking has its own format, please revert those.", "url": "https://github.com/apache/skywalking/pull/4247#discussion_r368268133", "createdAt": "2020-01-19T05:57:49Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -290,28 +278,28 @@ private boolean isMatch() {\n \n                 switch (valueType) {\n                     case LONG:\n-                        long lvalue = ((LongValueHolder)metrics).getValue();\n+                        long lvalue = ((LongValueHolder) metrics).getValue();\n                         long lexpected = RunningRule.this.threshold.getLongThreshold();\n                         if (op.test(lexpected, lvalue)) {\n                             matchCount++;\n                         }\n                         break;\n                     case INT:\n-                        int ivalue = ((IntValueHolder)metrics).getValue();\n+                        int ivalue = ((IntValueHolder) metrics).getValue();\n                         int iexpected = RunningRule.this.threshold.getIntThreshold();\n                         if (op.test(iexpected, ivalue)) {\n                             matchCount++;\n                         }\n                         break;\n                     case DOUBLE:\n-                        double dvalue = ((DoubleValueHolder)metrics).getValue();\n+                        double dvalue = ((DoubleValueHolder) metrics).getValue();\n                         double dexpected = RunningRule.this.threshold.getDoubleThreshold();\n                         if (op.test(dexpected, dvalue)) {\n                             matchCount++;\n                         }\n                         break;\n                     case MULTI_INTS:\n-                        int[] ivalueArray = ((MultiIntValuesHolder)metrics).getValues();\n+                        int[] ivalueArray = ((MultiIntValuesHolder) metrics).getValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2NzgyMw=="}, "originalCommit": null, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTgyODg0OnYy", "diffSide": "RIGHT", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMDo0NzowOVrOFfOSRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTowMjowOVrOFfOVlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NDIzMA==", "bodyText": "Why add this? End time has been initialized in the constructor. End time should never be null. Right?", "url": "https://github.com/apache/skywalking/pull/4247#discussion_r368284230", "createdAt": "2020-01-19T10:47:09Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -227,18 +221,17 @@ public void moveTo(LocalDateTime current) {\n         public void add(Metrics metrics) {\n             long bucket = metrics.getTimeBucket();\n \n-            LocalDateTime timebucket = TIME_BUCKET_FORMATTER.parseLocalDateTime(bucket + \"\");\n-\n-            int minutes = Minutes.minutesBetween(timebucket, endTime).getMinutes();\n-            if (minutes == -1) {\n-                this.moveTo(timebucket);\n-\n-            }\n+            LocalDateTime timeBucket = TIME_BUCKET_FORMATTER.parseLocalDateTime(bucket + \"\");\n \n-            lock.lock();\n+            this.lock.lock();\n             try {\n+                if (this.endTime == null) {\n+                    init();\n+                    this.endTime = timeBucket;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9855bba559ecf855a54fea9627806c69e02c272"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NTA3Ng==", "bodyText": "End time was not initialized.\nhard-coded initialization of endTime is elegant, but may cause fatal problem when the initial bucketTime is less than  1970-01-01T00:00:00Z, under this circumstance, #add will treated window as inited and invoke #set on un-inited this.values, which will cause IOB Exception. Maybe an alternative way is initializing endTime with value '0000-01-01T00:00:00Z\u2018,  it's not so elegant though..", "url": "https://github.com/apache/skywalking/pull/4247#discussion_r368285076", "createdAt": "2020-01-19T11:02:09Z", "author": {"login": "liuhaoXD"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -227,18 +221,17 @@ public void moveTo(LocalDateTime current) {\n         public void add(Metrics metrics) {\n             long bucket = metrics.getTimeBucket();\n \n-            LocalDateTime timebucket = TIME_BUCKET_FORMATTER.parseLocalDateTime(bucket + \"\");\n-\n-            int minutes = Minutes.minutesBetween(timebucket, endTime).getMinutes();\n-            if (minutes == -1) {\n-                this.moveTo(timebucket);\n-\n-            }\n+            LocalDateTime timeBucket = TIME_BUCKET_FORMATTER.parseLocalDateTime(bucket + \"\");\n \n-            lock.lock();\n+            this.lock.lock();\n             try {\n+                if (this.endTime == null) {\n+                    init();\n+                    this.endTime = timeBucket;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NDIzMA=="}, "originalCommit": {"oid": "a9855bba559ecf855a54fea9627806c69e02c272"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4532, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}