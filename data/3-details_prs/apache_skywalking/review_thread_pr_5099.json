{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTQ1Nzc2", "number": 5099, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNjozMzo1N1rOEOi6fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNDoxODoxNlrOEP29Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjg3NTQ4OnYy", "diffSide": "RIGHT", "path": "oap-server/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNjozMzo1N1rOGxwLVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzowMDoyNVrOGxw4_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyMjc0MA==", "bodyText": "Could we don't do this? Once you did, I remember, you can't access 6.3-6.7 server any more.", "url": "https://github.com/apache/skywalking/pull/5099#discussion_r454822740", "createdAt": "2020-07-15T06:33:57Z", "author": {"login": "wu-sheng"}, "path": "oap-server/pom.xml", "diffHunk": "@@ -64,7 +64,7 @@\n         <h2.version>1.4.196</h2.version>\n         <commons-dbcp.version>1.4</commons-dbcp.version>\n         <commons-io.version>2.6</commons-io.version>\n-        <elasticsearch.version>6.3.2</elasticsearch.version>\n+        <elasticsearch.version>6.8.10</elasticsearch.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d3e2453d38af67fdbaf492832f4ed56d5ecfc39"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzNDQyOA==", "bodyText": "I notice the same thing, so just revert that commit.", "url": "https://github.com/apache/skywalking/pull/5099#discussion_r454834428", "createdAt": "2020-07-15T07:00:25Z", "author": {"login": "hanahmily"}, "path": "oap-server/pom.xml", "diffHunk": "@@ -64,7 +64,7 @@\n         <h2.version>1.4.196</h2.version>\n         <commons-dbcp.version>1.4</commons-dbcp.version>\n         <commons-io.version>2.6</commons-io.version>\n-        <elasticsearch.version>6.3.2</elasticsearch.version>\n+        <elasticsearch.version>6.8.10</elasticsearch.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgyMjc0MA=="}, "originalCommit": {"oid": "2d3e2453d38af67fdbaf492832f4ed56d5ecfc39"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDk3NTU2OnYy", "diffSide": "RIGHT", "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjoxNzoyN1rOGyXp5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMzo1MzozN1rOGzvq9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTU0Mw==", "bodyText": "CoreModule has depended on TelemetryModule, I think.", "url": "https://github.com/apache/skywalking/pull/5099#discussion_r455469543", "createdAt": "2020-07-16T02:17:27Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java", "diffHunk": "@@ -197,7 +208,7 @@ public void notifyAfterCompleted() {\n \n     @Override\n     public String[] requiredModules() {\n-        return new String[]{CoreModule.NAME};\n+        return new String[]{CoreModule.NAME, TelemetryModule.NAME};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f50fa847cb68a71eff3bf8ee9c283d2dab054ad"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTYwNw==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/5099#discussion_r456911607", "createdAt": "2020-07-19T13:53:37Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java", "diffHunk": "@@ -197,7 +208,7 @@ public void notifyAfterCompleted() {\n \n     @Override\n     public String[] requiredModules() {\n-        return new String[]{CoreModule.NAME};\n+        return new String[]{CoreModule.NAME, TelemetryModule.NAME};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTU0Mw=="}, "originalCommit": {"oid": "9f50fa847cb68a71eff3bf8ee9c283d2dab054ad"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDk5MjM3OnYy", "diffSide": "RIGHT", "path": "oap-server/server-library/library-client/src/main/java/org/apache/skywalking/oap/server/library/client/healthcheck/HealthChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjoyNzowMVrOGyXzsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjoyODozNVrOGyX1RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3MjA0OA==", "bodyText": "Why need HealthChecker as a kind of util? And keep in static final(DEFAULT_CHECKER)?\nAccording to #5046, Health check is a module/provider. So, the thing about the checker should be a service, which you could get a reference from ServiceManager in any module.", "url": "https://github.com/apache/skywalking/pull/5099#discussion_r455472048", "createdAt": "2020-07-16T02:27:01Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-library/library-client/src/main/java/org/apache/skywalking/oap/server/library/client/healthcheck/HealthChecker.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.library.client.healthcheck;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * HealthChecker could provide health status to the listener.\n+ */\n+@Slf4j\n+@RequiredArgsConstructor\n+public class HealthChecker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f50fa847cb68a71eff3bf8ee9c283d2dab054ad"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3MjQ1Mw==", "bodyText": "Also, based on the way you use this, it is likely, you should have this module up and running always.\nI think we need a little more discussion about health checker model behavior.", "url": "https://github.com/apache/skywalking/pull/5099#discussion_r455472453", "createdAt": "2020-07-16T02:28:35Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-library/library-client/src/main/java/org/apache/skywalking/oap/server/library/client/healthcheck/HealthChecker.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.library.client.healthcheck;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * HealthChecker could provide health status to the listener.\n+ */\n+@Slf4j\n+@RequiredArgsConstructor\n+public class HealthChecker {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3MjA0OA=="}, "originalCommit": {"oid": "9f50fa847cb68a71eff3bf8ee9c283d2dab054ad"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDY0NDk0OnYy", "diffSide": "RIGHT", "path": "oap-server/server-storage-plugin/storage-elasticsearch7-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch7/client/ElasticSearch7Client.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNDoxODoxNlrOGzv1vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNDoyNToxNlrOGzv4zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxNDM2Nw==", "bodyText": "This seems a format issue.", "url": "https://github.com/apache/skywalking/pull/5099#discussion_r456914367", "createdAt": "2020-07-19T14:18:16Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch7-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch7/client/ElasticSearch7Client.java", "diffHunk": "@@ -256,9 +292,9 @@ public void synchronousBulk(BulkRequest request) {\n             int size = request.requests().size();\n             BulkResponse responses = client.bulk(request, RequestOptions.DEFAULT);\n             log.info(\"Synchronous bulk took time: {} millis, size: {}\", responses.getTook().getMillis(), size);\n-        } catch (IOException e) {\n-            log.error(e.getMessage(), e);\n-        }\n+            healthChecker.health();\n+        } catch (Throwable t) {\n+            healthChecker.unHealth(t);        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6843b0d85ea35f415174efb35ec037dcf9d52f3"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxNTE0OQ==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/5099#discussion_r456915149", "createdAt": "2020-07-19T14:25:16Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch7-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch7/client/ElasticSearch7Client.java", "diffHunk": "@@ -256,9 +292,9 @@ public void synchronousBulk(BulkRequest request) {\n             int size = request.requests().size();\n             BulkResponse responses = client.bulk(request, RequestOptions.DEFAULT);\n             log.info(\"Synchronous bulk took time: {} millis, size: {}\", responses.getTook().getMillis(), size);\n-        } catch (IOException e) {\n-            log.error(e.getMessage(), e);\n-        }\n+            healthChecker.health();\n+        } catch (Throwable t) {\n+            healthChecker.unHealth(t);        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxNDM2Nw=="}, "originalCommit": {"oid": "a6843b0d85ea35f415174efb35ec037dcf9d52f3"}, "originalPosition": 139}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 80, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}