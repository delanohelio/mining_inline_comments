{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NzgzODM4", "number": 4958, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxMzo0NlrOEHi5ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxNTo0M1rOEHi76g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzQ3Mjk0OnYy", "diffSide": "RIGHT", "path": "oap-server/server-bootstrap/src/main/resources/component-libraries.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxMzo0NlrOGm9-Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMzozMjozMlrOGnYDBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNDQ1MQ==", "bodyText": "Is brpc having a logo?", "url": "https://github.com/apache/skywalking/pull/4958#discussion_r443514451", "createdAt": "2020-06-22T12:13:46Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/component-libraries.yml", "diffHunk": "@@ -302,6 +302,9 @@ InfluxDB:\n influxdb-java:\n   id: 90\n   languages: Java\n+brpc-java:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ed5d3e71c68faad5a42f876a15b52ef6bc8bd1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk0MTYzNg==", "bodyText": "up to now, i did not find it", "url": "https://github.com/apache/skywalking/pull/4958#discussion_r443941636", "createdAt": "2020-06-23T03:32:32Z", "author": {"login": "IanCao"}, "path": "oap-server/server-bootstrap/src/main/resources/component-libraries.yml", "diffHunk": "@@ -302,6 +302,9 @@ InfluxDB:\n influxdb-java:\n   id: 90\n   languages: Java\n+brpc-java:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNDQ1MQ=="}, "originalCommit": {"oid": "76ed5d3e71c68faad5a42f876a15b52ef6bc8bd1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzQ3Mzc2OnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/test/resources/component-libraries.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxNDowNlrOGm9-4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMzozMjo1MFrOGnYDPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNDU5NQ==", "bodyText": "I think test file actually doesn't need to change every time.", "url": "https://github.com/apache/skywalking/pull/4958#discussion_r443514595", "createdAt": "2020-06-22T12:14:06Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/test/resources/component-libraries.yml", "diffHunk": "@@ -266,6 +266,9 @@ InfluxDB:\n influxdb-java:\n   id: 90\n   languages: Java\n+brpc-java:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ed5d3e71c68faad5a42f876a15b52ef6bc8bd1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk0MTY5Mw==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/4958#discussion_r443941693", "createdAt": "2020-06-23T03:32:50Z", "author": {"login": "IanCao"}, "path": "oap-server/server-core/src/test/resources/component-libraries.yml", "diffHunk": "@@ -266,6 +266,9 @@ InfluxDB:\n influxdb-java:\n   id: 90\n   languages: Java\n+brpc-java:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNDU5NQ=="}, "originalCommit": {"oid": "76ed5d3e71c68faad5a42f876a15b52ef6bc8bd1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzQ3ODgyOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/brpc-java-plugin/src/main/java/org.apache.skywalking.apm.plugin.brpc/define/ClientInstrumentation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxNTo0M1rOGm-CGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMzozMjo1NVrOGnYDXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNTQxOQ==", "bodyText": "As this is still in the Baidu package name, please rename the plugin to baidu-brpc-plugin. Because brpc is in the ASF incubator, but it seems don't very active. And java is not needed, this is a Java repo", "url": "https://github.com/apache/skywalking/pull/4958#discussion_r443515419", "createdAt": "2020-06-22T12:15:43Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/brpc-java-plugin/src/main/java/org.apache.skywalking.apm.plugin.brpc/define/ClientInstrumentation.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.brpc.define;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.ConstructorInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.InstanceMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.ClassInstanceMethodsEnhancePluginDefine;\n+import org.apache.skywalking.apm.agent.core.plugin.match.ClassMatch;\n+import org.apache.skywalking.apm.agent.core.plugin.match.NameMatch;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+\n+public class ClientInstrumentation extends ClassInstanceMethodsEnhancePluginDefine {\n+\n+    public static final String INTERCEPTOR_CLASS = \"org.apache.skywalking.apm.plugin.brpc.ClientInterceptor\";\n+    public static final String ENHANCE_CLASS = \"com.baidu.brpc.interceptor.LoadBalanceInterceptor\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ed5d3e71c68faad5a42f876a15b52ef6bc8bd1"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk0MTcyNA==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/4958#discussion_r443941724", "createdAt": "2020-06-23T03:32:55Z", "author": {"login": "IanCao"}, "path": "apm-sniffer/apm-sdk-plugin/brpc-java-plugin/src/main/java/org.apache.skywalking.apm.plugin.brpc/define/ClientInstrumentation.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.brpc.define;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.ConstructorInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.InstanceMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.ClassInstanceMethodsEnhancePluginDefine;\n+import org.apache.skywalking.apm.agent.core.plugin.match.ClassMatch;\n+import org.apache.skywalking.apm.agent.core.plugin.match.NameMatch;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+\n+public class ClientInstrumentation extends ClassInstanceMethodsEnhancePluginDefine {\n+\n+    public static final String INTERCEPTOR_CLASS = \"org.apache.skywalking.apm.plugin.brpc.ClientInterceptor\";\n+    public static final String ENHANCE_CLASS = \"com.baidu.brpc.interceptor.LoadBalanceInterceptor\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNTQxOQ=="}, "originalCommit": {"oid": "76ed5d3e71c68faad5a42f876a15b52ef6bc8bd1"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 223, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}