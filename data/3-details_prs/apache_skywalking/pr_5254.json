{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MDA3OTk3", "number": 5254, "title": "Support spring-kafka", "bodyText": "Please answer these questions before submitting pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n#5244", "createdAt": "2020-08-06T12:52:45Z", "url": "https://github.com/apache/skywalking/pull/5254", "merged": true, "mergeCommit": {"oid": "e37fc2e439969da6d10518fb823611b6a786aee6"}, "closed": true, "closedAt": "2020-08-10T11:13:20Z", "author": {"login": "zhaoyuguang"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8PTdRAH2gAyNDY0MDA3OTk3OmI0NDBkMWEzMDU3NzUwNjc0ZGY1ZDZlOTk3YWEwZjJkOGU5MGI4NGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9f_z0gFqTQ2NDEyODMxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b440d1a3057750674df5d6e997aa0f2d8e90b84a", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/b440d1a3057750674df5d6e997aa0f2d8e90b84a", "committedDate": "2020-08-06T12:51:22Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73beb07622606eabdc16c3579437e8dd12c09d2b", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/73beb07622606eabdc16c3579437e8dd12c09d2b", "committedDate": "2020-08-06T12:53:17Z", "message": "Merge branch 'master' into zhaoyuguang_0009"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNTU0ODk5", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-462554899", "createdAt": "2020-08-06T14:08:35Z", "commit": {"oid": "73beb07622606eabdc16c3579437e8dd12c09d2b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bce1bba59a9eb16d7b4829c527efbab9e6e5eeb7", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/bce1bba59a9eb16d7b4829c527efbab9e6e5eeb7", "committedDate": "2020-08-07T02:49:05Z", "message": "Merge branch 'master' into zhaoyuguang_0009"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67eb9868ae41f9df2ccb703cb121ae6fbb6a80e4", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/67eb9868ae41f9df2ccb703cb121ae6fbb6a80e4", "committedDate": "2020-08-07T04:18:22Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f147272849739e94dcad3f80c07f9cbbc1eee95a", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/f147272849739e94dcad3f80c07f9cbbc1eee95a", "committedDate": "2020-08-07T06:58:44Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "741e8a8851fee1a3f706823aca3b750caed7e512", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/741e8a8851fee1a3f706823aca3b750caed7e512", "committedDate": "2020-08-07T07:01:14Z", "message": "Merge branch 'master' into zhaoyuguang_0009"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f51ac5181831c86e22e43f411f884071894a7eef", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/f51ac5181831c86e22e43f411f884071894a7eef", "committedDate": "2020-08-07T07:17:59Z", "message": "fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceb363472830a6b93983f8f3502d6909b431c874", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/ceb363472830a6b93983f8f3502d6909b431c874", "committedDate": "2020-08-07T07:19:02Z", "message": "Merge branch 'zhaoyuguang_0009' of https://github.com/zhaoyuguang/incubator-skywalking into zhaoyuguang_0009"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3010c8a549c34f4f23aa776e34067a762c547dd", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/a3010c8a549c34f4f23aa776e34067a762c547dd", "committedDate": "2020-08-07T10:32:11Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMjEyMTY0", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-463212164", "createdAt": "2020-08-07T10:39:37Z", "commit": {"oid": "a3010c8a549c34f4f23aa776e34067a762c547dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMDozOTozOFrOG9VFyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMDozOTozOFrOG9VFyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk2MTg2NA==", "bodyText": "Is this an asynchronous operation?\nkafkaTemplate.send(topicName, \"key\", \"helloWorld\").get();", "url": "https://github.com/apache/skywalking/pull/5254#discussion_r466961864", "createdAt": "2020-08-07T10:39:38Z", "author": {"login": "dmsolr"}, "path": "test/plugin/scenarios/spring-kafka-scenario/src/main/java/test/org/apache/skywalking/apm/testcase/spring/kafka/controller/CaseController.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package test.org.apache.skywalking.apm.testcase.spring.kafka.controller;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import org.apache.kafka.clients.consumer.ConsumerConfig;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.common.serialization.Deserializer;\n+import org.apache.kafka.common.serialization.StringDeserializer;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.kafka.core.DefaultKafkaConsumerFactory;\n+import org.springframework.kafka.core.DefaultKafkaProducerFactory;\n+import org.springframework.kafka.core.KafkaTemplate;\n+import org.springframework.kafka.listener.AcknowledgingMessageListener;\n+import org.springframework.kafka.listener.ContainerProperties;\n+import org.springframework.kafka.listener.KafkaMessageListenerContainer;\n+import org.springframework.kafka.support.Acknowledgment;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+\n+import javax.annotation.PostConstruct;\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@Controller\n+@RequestMapping(\"/case\")\n+@PropertySource(\"classpath:application.properties\")\n+public class CaseController {\n+\n+    private static final String SUCCESS = \"Success\";\n+\n+    @Value(\"${bootstrap.servers:127.0.0.1:9092}\")\n+    private String bootstrapServers;\n+    private String topicName;\n+    private KafkaTemplate<String, String> kafkaTemplate;\n+\n+    @PostConstruct\n+    private void setUp() {\n+        topicName = \"spring_test\";\n+        setUpProvider();\n+        setUpConsumer();\n+    }\n+\n+    private void setUpProvider() {\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n+        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n+        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n+        kafkaTemplate = new KafkaTemplate<String, String>(new DefaultKafkaProducerFactory<>(props));\n+    }\n+\n+    private void setUpConsumer() {\n+        Map<String, Object> configs = new HashMap<>();\n+        configs.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n+        configs.put(ConsumerConfig.GROUP_ID_CONFIG, \"grop:\" + topicName);\n+        configs.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, false);\n+        Deserializer<String> stringDeserializer = new StringDeserializer();\n+        DefaultKafkaConsumerFactory<String, String> factory = new DefaultKafkaConsumerFactory(configs, stringDeserializer, stringDeserializer);\n+        ContainerProperties props = new ContainerProperties(topicName);\n+        props.setMessageListener(new AcknowledgingMessageListener<String, String>() {\n+            @Override\n+            public void onMessage(ConsumerRecord<String, String> data, Acknowledgment acknowledgment) {\n+                System.out.println(data);\n+                OkHttpClient client = new OkHttpClient.Builder().build();\n+                Request request = new Request.Builder().url(\"http://localhost:8080/spring-kafka-scenario/case/spring-kafka-consumer-ping\").build();\n+                Response response = null;\n+                try {\n+                    response = client.newCall(request).execute();\n+                } catch (IOException e) {\n+                }\n+                response.body().close();\n+                acknowledgment.acknowledge();\n+            }\n+        });\n+        KafkaMessageListenerContainer<String, String> container = new KafkaMessageListenerContainer<>(factory, props);\n+        container.getContainerProperties().setAckMode(ContainerProperties.AckMode.MANUAL_IMMEDIATE);\n+        container.start();\n+    }\n+\n+    @RequestMapping(\"/spring-kafka-case\")\n+    @ResponseBody\n+    public String springKafkaCase() {\n+        kafkaTemplate.send(topicName, \"key\", \"helloWorld\");\n+        return SUCCESS;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3010c8a549c34f4f23aa776e34067a762c547dd"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec7d5df8460b07cdf4fda8d5872c4d00a2e6b850", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/ec7d5df8460b07cdf4fda8d5872c4d00a2e6b850", "committedDate": "2020-08-08T08:48:24Z", "message": "Merge branch 'master' into zhaoyuguang_0009"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ded49e3dee5a8eab3f212c5890c6f917daed035", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/0ded49e3dee5a8eab3f212c5890c6f917daed035", "committedDate": "2020-08-08T11:17:30Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6f2da9c546bc0d2155266d16f4fa62d60b8ab15", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/c6f2da9c546bc0d2155266d16f4fa62d60b8ab15", "committedDate": "2020-08-08T12:37:43Z", "message": "fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7ceba99b39ee72d32d224f1620e417a2d500772", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/a7ceba99b39ee72d32d224f1620e417a2d500772", "committedDate": "2020-08-08T13:46:16Z", "message": "fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c54251ef621df6e97482b0ac2b9cce93c2d6931", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/4c54251ef621df6e97482b0ac2b9cce93c2d6931", "committedDate": "2020-08-08T14:47:45Z", "message": "fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43d1f4de43d11c2255a6780909bdaee9205c6b42", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/43d1f4de43d11c2255a6780909bdaee9205c6b42", "committedDate": "2020-08-08T14:49:40Z", "message": "Merge branch 'master' into zhaoyuguang_0009"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fad11bebc22838057b5e5919502fe1b019c4d9bd", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/fad11bebc22838057b5e5919502fe1b019c4d9bd", "committedDate": "2020-08-09T23:20:34Z", "message": "fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03281781434581cda77a02c657374d31fc18b383", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/03281781434581cda77a02c657374d31fc18b383", "committedDate": "2020-08-09T23:21:23Z", "message": "Merge branch 'master' into zhaoyuguang_0009"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTE5MDA5", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-463919009", "createdAt": "2020-08-10T00:34:38Z", "commit": {"oid": "fad11bebc22838057b5e5919502fe1b019c4d9bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDozNDozOFrOG9_B8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDozNDozOFrOG9_B8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY0OTAxMQ==", "bodyText": "Aren't supporting 2.1.x? I think you should create a new test case?", "url": "https://github.com/apache/skywalking/pull/5254#discussion_r467649011", "createdAt": "2020-08-10T00:34:38Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/spring-kafka-2.2.x-scenario/support-version.list", "diffHunk": "@@ -14,16 +14,10 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n+2.2.14.RELEASE\n 2.2.13.RELEASE\n+2.2.12.RELEASE\n 2.2.11.RELEASE\n+2.2.10.RELEASE\n 2.2.9.RELEASE\n-2.2.7.RELEASE\n-2.2.5.RELEASE\n-2.2.3.RELEASE\n-2.1.14.RELEASE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad11bebc22838057b5e5919502fe1b019c4d9bd"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTE5NDQx", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-463919441", "createdAt": "2020-08-10T00:38:41Z", "commit": {"oid": "03281781434581cda77a02c657374d31fc18b383"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDozODo0MVrOG9_D1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDozODo0MVrOG9_D1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY0OTQ5Mg==", "bodyText": "Why change this code style?", "url": "https://github.com/apache/skywalking/pull/5254#discussion_r467649492", "createdAt": "2020-08-10T00:38:41Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/CallbackAdapterInterceptor.java", "diffHunk": "@@ -45,8 +45,8 @@ public CallbackAdapterInterceptor(CallbackCache callbackCache) {\n     public void onCompletion(RecordMetadata metadata, Exception exception) {\n         ContextSnapshot snapshot = callbackCache.getSnapshot();\n         AbstractSpan activeSpan = ContextManager.createLocalSpan(\"Kafka/Producer/Callback\");\n-        SpanLayer.asMQ(activeSpan);\n         activeSpan.setComponent(ComponentsDefine.KAFKA_PRODUCER);\n+        activeSpan.setLayer(SpanLayer.MQ);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03281781434581cda77a02c657374d31fc18b383"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTE5NDU0", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-463919454", "createdAt": "2020-08-10T00:38:50Z", "commit": {"oid": "03281781434581cda77a02c657374d31fc18b383"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDozODo1MFrOG9_D3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDozODo1MFrOG9_D3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY0OTUwMg==", "bodyText": "Same here.", "url": "https://github.com/apache/skywalking/pull/5254#discussion_r467649502", "createdAt": "2020-08-10T00:38:50Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/CallbackInterceptor.java", "diffHunk": "@@ -44,8 +44,8 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n             ContextSnapshot snapshot = getSnapshot(cache);\n             RecordMetadata metadata = (RecordMetadata) allArguments[0];\n             AbstractSpan activeSpan = ContextManager.createLocalSpan(\"Kafka/Producer/Callback\");\n-            SpanLayer.asMQ(activeSpan);\n             activeSpan.setComponent(ComponentsDefine.KAFKA_PRODUCER);\n+            activeSpan.setLayer(SpanLayer.MQ);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03281781434581cda77a02c657374d31fc18b383"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTE5NjY3", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-463919667", "createdAt": "2020-08-10T00:40:53Z", "commit": {"oid": "03281781434581cda77a02c657374d31fc18b383"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDo0MDo1M1rOG9_E6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDo0MDo1M1rOG9_E6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY0OTc3MA==", "bodyText": "Use @setter/@getter to follow the recommended code style.", "url": "https://github.com/apache/skywalking/pull/5254#discussion_r467649770", "createdAt": "2020-08-10T00:40:53Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/kafka-commons/src/main/java/org/apache/skywalking/apm/plugin/kafka/define/SpringKafkaContext.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.kafka.define;\n+\n+public class SpringKafkaContext {\n+\n+    public SpringKafkaContext() {\n+        needStop = false;\n+    }\n+\n+    private boolean needStop;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03281781434581cda77a02c657374d31fc18b383"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e1eedd0c7d2676a6b488c9fcc79264689bc4c9f", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/6e1eedd0c7d2676a6b488c9fcc79264689bc4c9f", "committedDate": "2020-08-10T07:27:25Z", "message": "fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc47515ae20a6410fe054da9f4f1d9459dd1c28e", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/bc47515ae20a6410fe054da9f4f1d9459dd1c28e", "committedDate": "2020-08-10T07:30:27Z", "message": "Merge branch 'master' into zhaoyuguang_0009"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDIzMjQy", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-464023242", "createdAt": "2020-08-10T07:59:56Z", "commit": {"oid": "bc47515ae20a6410fe054da9f4f1d9459dd1c28e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3d2b8ca35be455cffe0179f7ae3e844d20dd98a", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/d3d2b8ca35be455cffe0179f7ae3e844d20dd98a", "committedDate": "2020-08-10T08:11:23Z", "message": "fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c04acfc6550016e3baff143e14ad787f7989e2d0", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/c04acfc6550016e3baff143e14ad787f7989e2d0", "committedDate": "2020-08-10T08:11:35Z", "message": "Merge branch 'zhaoyuguang_0009' of https://github.com/zhaoyuguang/incubator-skywalking into zhaoyuguang_0009"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDMzNzg2", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-464033786", "createdAt": "2020-08-10T08:17:51Z", "commit": {"oid": "d3d2b8ca35be455cffe0179f7ae3e844d20dd98a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODoxNzo1MVrOG-FPlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODoxNzo1MVrOG-FPlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1MDgwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Use Application Toolkit libraries to do manual instrumentation. such as `@Trace` annotation or OpenTracing API, Or if you're using `spring-kafka` 2.2.x or above, you can track the Consumer side without any code changes.\n          \n          \n            \n            Use Application Toolkit libraries to do manual instrumentation. such as `@Trace` annotation or OpenTracing API, Or if you're using `spring-kafka` 2.2.x or above, you can track the Consumer side without any code change.", "url": "https://github.com/apache/skywalking/pull/5254#discussion_r467750807", "createdAt": "2020-08-10T08:17:51Z", "author": {"login": "wu-sheng"}, "path": "docs/en/FAQ/kafka-plugin.md", "diffHunk": "@@ -5,4 +5,5 @@ The trace doesn't continue in kafka consumer side.\n The kafka client is pulling message from server, the plugin also just traces the pull action. As that, you need to do the manual instrument before the pull action, and include the further data process.\n \n ### Resolve\n-Use Application Toolkit libraries to do manual instrumentation. such as `@Trace` annotation or OpenTracing API.\n+Use Application Toolkit libraries to do manual instrumentation. such as `@Trace` annotation or OpenTracing API, Or if you're using `spring-kafka` 2.2.x or above, you can track the Consumer side without any code changes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3d2b8ca35be455cffe0179f7ae3e844d20dd98a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f79622d899847bd168ef343abd4ea6c9d4acfb1f", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/f79622d899847bd168ef343abd4ea6c9d4acfb1f", "committedDate": "2020-08-10T08:19:02Z", "message": "Update docs/en/FAQ/kafka-plugin.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca1a026a25e9ddc333881bec87425512d905c415", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/ca1a026a25e9ddc333881bec87425512d905c415", "committedDate": "2020-08-10T08:49:57Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cc9436854e9f05d6ba3123a6f839f99ce65becb", "author": {"user": {"login": "zhaoyuguang", "name": "\u4e8e\u7389\u6854"}}, "url": "https://github.com/apache/skywalking/commit/9cc9436854e9f05d6ba3123a6f839f99ce65becb", "committedDate": "2020-08-10T08:50:17Z", "message": "Merge branch 'zhaoyuguang_0009' of https://github.com/zhaoyuguang/incubator-skywalking into zhaoyuguang_0009"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MTI4MzAw", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-464128300", "createdAt": "2020-08-10T10:52:10Z", "commit": {"oid": "9cc9436854e9f05d6ba3123a6f839f99ce65becb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MTI4MzE5", "url": "https://github.com/apache/skywalking/pull/5254#pullrequestreview-464128319", "createdAt": "2020-08-10T10:52:13Z", "commit": {"oid": "9cc9436854e9f05d6ba3123a6f839f99ce65becb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1867, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}