{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3ODI4NTQ0", "number": 4959, "reviewThreads": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjowOTo0M1rOEHi0ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMjoxNFrOEPiUFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzQ1OTc5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-configmap/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjowOTo0M1rOGm92Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoyOToyOFrOGm-fJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxMjQxOQ==", "bodyText": "I think you missed this license.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r443512419", "createdAt": "2020-06-22T12:09:43Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/pom.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432558da1fd1c40c2d2a027981478b13429c6b55"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUyMjg1Mg==", "bodyText": "sorry, i would be fix later", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r443522852", "createdAt": "2020-06-22T12:29:28Z", "author": {"login": "EvanLjp"}, "path": "oap-server/server-configuration/configuration-configmap/pom.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxMjQxOQ=="}, "originalCommit": {"oid": "432558da1fd1c40c2d2a027981478b13429c6b55"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzE3MDQ3OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/dynamic-config.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDoxMToyNFrOGuTwqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzozN1rOGyD-mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTQzNA==", "bodyText": "Please add descriptions about how the labelSelector works.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451211434", "createdAt": "2020-07-08T00:11:24Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -102,3 +102,16 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+\n+[configmap](https://kubernetes.io/docs/concepts/configuration/configmap/) is also supported as DCC(Dynamic Configuration Center), to use it, just configured as follows:\n+\n+```yaml\n+configuration:\n+  selector: ${SW_CONFIGURATION:configmap}\n+  configmap:\n+      period: ${SW_CONFIG_CONSUL_PERIOD:60}\n+      namespace: ${SW_CLUSTER_K8S_NAMESPACE:default}\n+      labelSelector: ${SW_CLUSTER_K8S_LABEL:app=collector,release=skywalking}\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMjAwMg==", "bodyText": "And please link the skywalking-dynamic-configmap.example.yaml as an example here.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451212002", "createdAt": "2020-07-08T00:13:31Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -102,3 +102,16 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+\n+[configmap](https://kubernetes.io/docs/concepts/configuration/configmap/) is also supported as DCC(Dynamic Configuration Center), to use it, just configured as follows:\n+\n+```yaml\n+configuration:\n+  selector: ${SW_CONFIGURATION:configmap}\n+  configmap:\n+      period: ${SW_CONFIG_CONSUL_PERIOD:60}\n+      namespace: ${SW_CLUSTER_K8S_NAMESPACE:default}\n+      labelSelector: ${SW_CLUSTER_K8S_LABEL:app=collector,release=skywalking}\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTQzNA=="}, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyNzE0Nw==", "bodyText": "no problem", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451227147", "createdAt": "2020-07-08T01:13:18Z", "author": {"login": "EvanLjp"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -102,3 +102,16 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+\n+[configmap](https://kubernetes.io/docs/concepts/configuration/configmap/) is also supported as DCC(Dynamic Configuration Center), to use it, just configured as follows:\n+\n+```yaml\n+configuration:\n+  selector: ${SW_CONFIGURATION:configmap}\n+  configmap:\n+      period: ${SW_CONFIG_CONSUL_PERIOD:60}\n+      namespace: ${SW_CLUSTER_K8S_NAMESPACE:default}\n+      labelSelector: ${SW_CLUSTER_K8S_LABEL:app=collector,release=skywalking}\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTQzNA=="}, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NzE2MA==", "bodyText": "typo: confiigmap -> configmap", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455147160", "createdAt": "2020-07-15T15:37:37Z", "author": {"login": "innerpeacez"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -102,3 +102,16 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+\n+[configmap](https://kubernetes.io/docs/concepts/configuration/configmap/) is also supported as DCC(Dynamic Configuration Center), to use it, just configured as follows:\n+\n+```yaml\n+configuration:\n+  selector: ${SW_CONFIGURATION:configmap}\n+  configmap:\n+      period: ${SW_CONFIG_CONSUL_PERIOD:60}\n+      namespace: ${SW_CLUSTER_K8S_NAMESPACE:default}\n+      labelSelector: ${SW_CLUSTER_K8S_LABEL:app=collector,release=skywalking}\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTQzNA=="}, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzE3MjY0OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDoxMjozNFrOGuTx7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo0MTozMFrOGuVKAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTc1Nw==", "bodyText": "Why enum? Typically, we recommend don't' do this, unless you have to.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451211757", "createdAt": "2020-07-08T00:12:34Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public enum ConfigurationConfigmapInformer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyNzA4Ng==", "bodyText": "It is supposed to be singleton and initialized once, but there are some problems, I will fix it.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451227086", "createdAt": "2020-07-08T01:13:03Z", "author": {"login": "EvanLjp"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public enum ConfigurationConfigmapInformer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTc1Nw=="}, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMTI1NA==", "bodyText": "I hope it should a logic singleton, rather than an enum. Because you have the provider initialization process to make sure there is only one instance.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451231254", "createdAt": "2020-07-08T01:29:41Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public enum ConfigurationConfigmapInformer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTc1Nw=="}, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNDMwNg==", "bodyText": "yes, i agree with u ,thx for review again", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451234306", "createdAt": "2020-07-08T01:41:30Z", "author": {"login": "EvanLjp"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public enum ConfigurationConfigmapInformer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMTc1Nw=="}, "originalCommit": {"oid": "c21948c3e4deddd1772ca6c557b526f2ebb6ee21"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzQxNjUyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjozODozNlrOGuWCYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDozMDo0N1rOGuXuTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0ODczNg==", "bodyText": "Typo doAddShowdownHook -> doAddShutdownHook", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451248736", "createdAt": "2020-07-08T02:38:36Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public class ConfigurationConfigmapInformer {\n+\n+    private static ConfigurationConfigmapInformer informer;\n+\n+    private Lister<V1ConfigMap> configMapLister;\n+\n+    private SharedInformerFactory factory;\n+\n+    private final ExecutorService executorService = Executors.newSingleThreadExecutor(r -> {\n+        Thread thread = new Thread(r, \"SKYWALKING_KUBERNETES_CONFIGURATION_INFORMER\");\n+        thread.setDaemon(true);\n+        return thread;\n+    });\n+\n+    public static ConfigurationConfigmapInformer getInstance(ConfigmapConfigurationSettings settings) {\n+        if (informer == null) {\n+            synchronized (ConfigurationConfigmapInformer.class) {\n+                if (informer == null) {\n+                    informer = new ConfigurationConfigmapInformer(settings);\n+                }\n+            }\n+        }\n+        return informer;\n+    }\n+\n+    private ConfigurationConfigmapInformer(ConfigmapConfigurationSettings settings) {\n+\n+        try {\n+            doStartConfigMapInformer(settings);\n+            doAddShowdownHook();\n+        } catch (IOException e) {\n+            log.error(\"cannot connect with api server in kubernetes\", e);\n+        }\n+\n+    }\n+\n+    private void doAddShowdownHook() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc8772014f5bbe9ba2b1f73cfc969c71ae09374"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI3NjM2NQ==", "bodyText": "fixed", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r451276365", "createdAt": "2020-07-08T04:30:47Z", "author": {"login": "EvanLjp"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public class ConfigurationConfigmapInformer {\n+\n+    private static ConfigurationConfigmapInformer informer;\n+\n+    private Lister<V1ConfigMap> configMapLister;\n+\n+    private SharedInformerFactory factory;\n+\n+    private final ExecutorService executorService = Executors.newSingleThreadExecutor(r -> {\n+        Thread thread = new Thread(r, \"SKYWALKING_KUBERNETES_CONFIGURATION_INFORMER\");\n+        thread.setDaemon(true);\n+        return thread;\n+    });\n+\n+    public static ConfigurationConfigmapInformer getInstance(ConfigmapConfigurationSettings settings) {\n+        if (informer == null) {\n+            synchronized (ConfigurationConfigmapInformer.class) {\n+                if (informer == null) {\n+                    informer = new ConfigurationConfigmapInformer(settings);\n+                }\n+            }\n+        }\n+        return informer;\n+    }\n+\n+    private ConfigurationConfigmapInformer(ConfigmapConfigurationSettings settings) {\n+\n+        try {\n+            doStartConfigMapInformer(settings);\n+            doAddShowdownHook();\n+        } catch (IOException e) {\n+            log.error(\"cannot connect with api server in kubernetes\", e);\n+        }\n+\n+    }\n+\n+    private void doAddShowdownHook() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0ODczNg=="}, "originalCommit": {"oid": "6dc8772014f5bbe9ba2b1f73cfc969c71ae09374"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjg2MTk5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOTozMzoyN1rOGvwt5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxMzoyNTo1NlrOGwUPrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjczNDQzOA==", "bodyText": "typo: SW_CONFIG_CONSUL_PERIOD -> SW_CONFIG_CONFIGMAP_PERIOD", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r452734438", "createdAt": "2020-07-10T09:33:27Z", "author": {"login": "innerpeacez"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -264,6 +264,10 @@ configuration:\n     period: ${SW_CONFIG_CONSUL_PERIOD:1}\n     # Consul aclToken\n     aclToken: ${SW_CONFIG_CONSUL_ACL_TOKEN:\"\"}\n+  configmap:\n+    period: ${SW_CONFIG_CONSUL_PERIOD:60}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ffa78fcd5e73fc65fad6b76b32bace183b276"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMxNjUyNg==", "bodyText": "ok", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r453316526", "createdAt": "2020-07-12T13:25:56Z", "author": {"login": "EvanLjp"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -264,6 +264,10 @@ configuration:\n     period: ${SW_CONFIG_CONSUL_PERIOD:1}\n     # Consul aclToken\n     aclToken: ${SW_CONFIG_CONSUL_ACL_TOKEN:\"\"}\n+  configmap:\n+    period: ${SW_CONFIG_CONSUL_PERIOD:60}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjczNDQzOA=="}, "originalCommit": {"oid": "015ffa78fcd5e73fc65fad6b76b32bace183b276"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjg2NDk0OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/dynamic-config.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOTozNDoyMVrOGvwvtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOTozNDoyMVrOGvwvtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjczNDkwMg==", "bodyText": "typo: SW_CONFIG_CONSUL_PERIOD -> SW_CONFIG_CONFIGMAP_PERIOD", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r452734902", "createdAt": "2020-07-10T09:34:21Z", "author": {"login": "innerpeacez"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -103,3 +103,20 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+\n+[configmap](https://kubernetes.io/docs/concepts/configuration/configmap/) is also supported as DCC(Dynamic Configuration Center), to use it, just configured as follows:\n+\n+```yaml\n+configuration:\n+  selector: ${SW_CONFIGURATION:configmap}\n+  # [example] (../../../../oap-server/server-configuration/configuration-configmap/src/test/resources/skywalking-dynamic-configmap.example.yaml)\n+  configmap:\n+      # Sync period in seconds. Defaults to 60 seconds.\n+      period: ${SW_CONFIG_CONSUL_PERIOD:60}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015ffa78fcd5e73fc65fad6b76b32bace183b276"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzAxODI0OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-configmap/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNTowMjozOVrOGwU6Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1OToxOVrOGxIpaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNzM5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <artifactId>configuration-configmap</artifactId>\n          \n          \n            \n                <artifactId>configuration-k8s-configmap</artifactId>", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r453327395", "createdAt": "2020-07-12T15:02:39Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/pom.xml", "diffHunk": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>server-configuration</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>configuration-configmap</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7974483a9613c8e8f4ade4885619c27df85296bd"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3NTA4MA==", "bodyText": "Have you finished all these changes?", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r454175080", "createdAt": "2020-07-14T07:59:19Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/pom.xml", "diffHunk": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>server-configuration</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>configuration-configmap</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNzM5NQ=="}, "originalCommit": {"oid": "7974483a9613c8e8f4ade4885619c27df85296bd"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzAxODczOnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNTowMjo1NFrOGwU6Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNTowMjo1NFrOGwU6Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNzQ1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return \"configmap\";\n          \n          \n            \n                    return \"k8s_configmap\";\n          \n      \n    \n    \n  \n\nAnd please change other docs related to this.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r453327450", "createdAt": "2020-07-12T15:02:54Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import com.google.common.base.Strings;\n+import org.apache.skywalking.oap.server.configuration.api.AbstractConfigurationProvider;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+\n+public class ConfigmapConfigurationProvider extends AbstractConfigurationProvider {\n+\n+    private final ConfigmapConfigurationSettings settings;\n+\n+    public ConfigmapConfigurationProvider() {\n+        this.settings = new ConfigmapConfigurationSettings();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"configmap\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7974483a9613c8e8f4ade4885619c27df85296bd"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzAxOTA5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNTowMzowOFrOGwU6hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNTowMzowOFrOGwU6hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNzQ5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return \"configmap\";\n          \n          \n            \n                    return \"k8s_configmap\";", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r453327492", "createdAt": "2020-07-12T15:03:08Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import com.google.common.base.Strings;\n+import org.apache.skywalking.oap.server.configuration.api.AbstractConfigurationProvider;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+\n+public class ConfigmapConfigurationProvider extends AbstractConfigurationProvider {\n+\n+    private final ConfigmapConfigurationSettings settings;\n+\n+    public ConfigmapConfigurationProvider() {\n+        this.settings = new ConfigmapConfigurationSettings();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"configmap\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7974483a9613c8e8f4ade4885619c27df85296bd"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjcxNDI5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationWatcherRegister.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODowMDo0NFrOGxIssg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODo1Nzo1N1rOGxKrew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3NTkyMg==", "bodyText": "If you can't read the key from configmap, please don't include value in the ConfigTable. I received a report today, someone accidentally reset the default value, even they didn't config the new value in the dynamic configuration center.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r454175922", "createdAt": "2020-07-14T08:00:44Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationWatcherRegister.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import java.util.Optional;\n+import java.util.Set;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+\n+@Slf4j\n+public class ConfigmapConfigurationWatcherRegister extends ConfigWatcherRegister {\n+\n+    private final ConfigurationConfigmapInformer informer;\n+\n+    public ConfigmapConfigurationWatcherRegister(ConfigmapConfigurationSettings settings,\n+                                                 ConfigurationConfigmapInformer informer) {\n+        super(settings.getPeriod());\n+        this.informer = informer;\n+    }\n+\n+    @Override\n+    public Optional<ConfigTable> readConfig(Set<String> keys) {\n+        final ConfigTable configTable = new ConfigTable();\n+\n+        Optional<V1ConfigMap> v1ConfigMap = informer.configMap();\n+\n+        for (final String name : keys) {\n+\n+            final String value = v1ConfigMap.map(configMap -> configMap.getData().get(name)).orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a975acc0577280575f91c9bd7eea52624146c14"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIwODM3OQ==", "bodyText": "ok,thanks for your notice", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r454208379", "createdAt": "2020-07-14T08:57:57Z", "author": {"login": "EvanLjp"}, "path": "oap-server/server-configuration/configuration-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationWatcherRegister.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import java.util.Optional;\n+import java.util.Set;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+\n+@Slf4j\n+public class ConfigmapConfigurationWatcherRegister extends ConfigWatcherRegister {\n+\n+    private final ConfigurationConfigmapInformer informer;\n+\n+    public ConfigmapConfigurationWatcherRegister(ConfigmapConfigurationSettings settings,\n+                                                 ConfigurationConfigmapInformer informer) {\n+        super(settings.getPeriod());\n+        this.informer = informer;\n+    }\n+\n+    @Override\n+    public Optional<ConfigTable> readConfig(Set<String> keys) {\n+        final ConfigTable configTable = new ConfigTable();\n+\n+        Optional<V1ConfigMap> v1ConfigMap = informer.configMap();\n+\n+        for (final String name : keys) {\n+\n+            final String value = v1ConfigMap.map(configMap -> configMap.getData().get(name)).orElse(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3NTkyMg=="}, "originalCommit": {"oid": "6a975acc0577280575f91c9bd7eea52624146c14"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjcyMzQ2OnYy", "diffSide": "RIGHT", "path": "all-dependencies-es7.txt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNTo1NFrOGyoP1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNTo1NFrOGyoP1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MTM5OQ==", "bodyText": "I think this should not be committed? And the next file?", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455741399", "createdAt": "2020-07-16T12:15:54Z", "author": {"login": "wu-sheng"}, "path": "all-dependencies-es7.txt", "diffHunk": "@@ -0,0 +1,211 @@\n+HdrHistogram-2.1.9.jar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjcyNzM4OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s_configmap/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNzowMFrOGyoSKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNzowMFrOGyoSKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MTk5Mw==", "bodyText": "oap-server/server-configuration/configuration-k8s_configmap should be oap-server/server-configuration/configuration-k8s-configmap", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455741993", "createdAt": "2020-07-16T12:17:00Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s_configmap/pom.xml", "diffHunk": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>server-configuration</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>configuration-k8s_configmap</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjczMzY5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxODo1NlrOGyoWOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoyMjo0MlrOGyoeLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MzAzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              k8s_configmap:\n          \n          \n            \n              k8s-configmap:\n          \n      \n    \n    \n  \n\nSame here, by following other module and provider style.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455743033", "createdAt": "2020-07-16T12:18:56Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -264,6 +264,10 @@ configuration:\n     period: ${SW_CONFIG_CONSUL_PERIOD:1}\n     # Consul aclToken\n     aclToken: ${SW_CONFIG_CONSUL_ACL_TOKEN:\"\"}\n+  k8s_configmap:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0NTA3MA==", "bodyText": "Sorry for I commented wrong before.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455745070", "createdAt": "2020-07-16T12:22:42Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -264,6 +264,10 @@ configuration:\n     period: ${SW_CONFIG_CONSUL_PERIOD:1}\n     # Consul aclToken\n     aclToken: ${SW_CONFIG_CONSUL_ACL_TOKEN:\"\"}\n+  k8s_configmap:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MzAzMw=="}, "originalCommit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjczNTQ5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s_configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxOToyNFrOGyoXQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxOToyNFrOGyoXQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MzI5Nw==", "bodyText": "Many emtpy lines, please polish the code format.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r455743297", "createdAt": "2020-07-16T12:19:24Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s_configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public class ConfigurationConfigmapInformer {\n+\n+    private Lister<V1ConfigMap> configMapLister;\n+\n+    private SharedInformerFactory factory;\n+\n+    private final ExecutorService executorService = Executors.newSingleThreadExecutor(r -> {\n+        Thread thread = new Thread(r, \"SKYWALKING_KUBERNETES_CONFIGURATION_INFORMER\");\n+        thread.setDaemon(true);\n+        return thread;\n+    });\n+\n+    public ConfigurationConfigmapInformer(ConfigmapConfigurationSettings settings) {\n+\n+        try {\n+            doStartConfigMapInformer(settings);\n+            doAddShutdownHook();\n+        } catch (IOException e) {\n+            log.error(\"cannot connect with api server in kubernetes\", e);\n+        }\n+\n+    }\n+\n+    private void doAddShutdownHook() {\n+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+            if (Objects.nonNull(factory)) {\n+                factory.stopAllRegisteredInformers();\n+            }\n+        }));\n+    }\n+\n+    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n+        ApiClient apiClient = Config.defaultClient();\n+        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n+        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n+\n+        factory = new SharedInformerFactory(executorService);\n+\n+        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n+            params -> coreV1Api.listNamespacedConfigMapCall(\n+                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n+                , 1, params.resourceVersion, params.timeoutSeconds, params.watch, null\n+            ),\n+            V1ConfigMap.class, V1ConfigMapList.class\n+        );\n+\n+        factory.startAllRegisteredInformers();\n+        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n+\n+    }\n+\n+    public Optional<V1ConfigMap> configMap() {\n+\n+        return Optional.ofNullable(configMapLister.list().size() == 1 ? configMapLister.list().get(0) : null);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5a07b36278e29e2ad243fe5516772e01b7cbe7"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI1NTgyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDoxNlrOGzTEHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDoxNlrOGzTEHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MjkxMQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456442911", "createdAt": "2020-07-17T13:30:16Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.informer.SharedIndexInformer;\n+import io.kubernetes.client.informer.SharedInformerFactory;\n+import io.kubernetes.client.informer.cache.Lister;\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import io.kubernetes.client.openapi.models.V1ConfigMapList;\n+import io.kubernetes.client.util.Config;\n+import java.io.IOException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public class ConfigurationConfigmapInformer {\n+\n+    private Lister<V1ConfigMap> configMapLister;\n+\n+    private SharedInformerFactory factory;\n+\n+    private final ExecutorService executorService = Executors.newSingleThreadExecutor(r -> {\n+        Thread thread = new Thread(r, \"SKYWALKING_KUBERNETES_CONFIGURATION_INFORMER\");\n+        thread.setDaemon(true);\n+        return thread;\n+    });\n+\n+    public ConfigurationConfigmapInformer(ConfigmapConfigurationSettings settings) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI1NjQwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationWatcherRegister.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDoyN1rOGzTEfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDoyN1rOGzTEfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzAwNg==", "bodyText": "Many unnecessary empty lines.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443006", "createdAt": "2020-07-17T13:30:27Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationWatcherRegister.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+\n+@Slf4j\n+public class ConfigmapConfigurationWatcherRegister extends ConfigWatcherRegister {\n+\n+    private final ConfigurationConfigmapInformer informer;\n+\n+    public ConfigmapConfigurationWatcherRegister(ConfigmapConfigurationSettings settings,\n+                                                 ConfigurationConfigmapInformer informer) {\n+        super(settings.getPeriod());\n+        this.informer = informer;\n+    }\n+\n+    @Override\n+    public Optional<ConfigTable> readConfig(Set<String> keys) {\n+        final ConfigTable configTable = new ConfigTable();\n+\n+        Optional<V1ConfigMap> v1ConfigMap = informer.configMap();\n+\n+        for (final String name : keys) {\n+\n+            final String value = v1ConfigMap.map(configMap -> configMap.getData().get(name)).orElse(null);\n+\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"read config: name:{} ,value:{}\", name, value);\n+            }\n+            if (Objects.nonNull(value)) {\n+                configTable.add(new ConfigTable.ConfigItem(name, value));\n+            }\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI1Njk3OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationSettings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDozNlrOGzTE4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDozNlrOGzTE4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzEwNA==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443104", "createdAt": "2020-07-17T13:30:36Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationSettings.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+\n+@Setter\n+@Getter\n+public class ConfigmapConfigurationSettings extends ModuleConfig {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI1NzcyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationSettings.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDo0NVrOGzTFSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDo0NVrOGzTFSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzIxMQ==", "bodyText": "Comments are required in here too.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443211", "createdAt": "2020-07-17T13:30:45Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationSettings.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+\n+@Setter\n+@Getter\n+public class ConfigmapConfigurationSettings extends ModuleConfig {\n+\n+    private String namespace;\n+    private String labelSelector;\n+    private Integer period;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI1ODAwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDo1MFrOGzTFfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDo1MFrOGzTFfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzI2Mg==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443262", "createdAt": "2020-07-17T13:30:50Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import com.google.common.base.Strings;\n+import org.apache.skywalking.oap.server.configuration.api.AbstractConfigurationProvider;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+\n+public class ConfigmapConfigurationProvider extends AbstractConfigurationProvider {\n+\n+    private final ConfigmapConfigurationSettings settings;\n+\n+    public ConfigmapConfigurationProvider() {\n+        this.settings = new ConfigmapConfigurationSettings();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"k8s-configmap\";\n+    }\n+\n+    @Override\n+    public ModuleConfig createConfigBeanIfAbsent() {\n+        return settings;\n+    }\n+\n+    @Override\n+    protected ConfigWatcherRegister initConfigReader() throws ModuleStartException {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI1ODQ2OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDo1NlrOGzTFxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMDo1NlrOGzTFxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzMzNQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443335", "createdAt": "2020-07-17T13:30:56Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import com.google.common.base.Strings;\n+import org.apache.skywalking.oap.server.configuration.api.AbstractConfigurationProvider;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+\n+public class ConfigmapConfigurationProvider extends AbstractConfigurationProvider {\n+\n+    private final ConfigmapConfigurationSettings settings;\n+\n+    public ConfigmapConfigurationProvider() {\n+        this.settings = new ConfigmapConfigurationSettings();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"k8s-configmap\";\n+    }\n+\n+    @Override\n+    public ModuleConfig createConfigBeanIfAbsent() {\n+        return settings;\n+    }\n+\n+    @Override\n+    protected ConfigWatcherRegister initConfigReader() throws ModuleStartException {\n+\n+        if (Strings.isNullOrEmpty(settings.getLabelSelector()) || Strings.isNullOrEmpty(settings.getNamespace())) {\n+            throw new ModuleStartException(\"the settings of configmap configuration is illegal.\");\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI1ODg2OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s-configmap/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMTowM1rOGzTGAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMTowM1rOGzTGAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzM5NQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443395", "createdAt": "2020-07-17T13:31:03Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/pom.xml", "diffHunk": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>server-configuration</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>configuration-k8s-configmap</artifactId>\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI2MTU1OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/dynamic-config.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMTo0OVrOGzTHoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMToyNjozMlrOGz0GBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzgwOQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443809", "createdAt": "2020-07-17T13:31:49Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -103,3 +103,20 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4NDA2OQ==", "bodyText": "code like before", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456984069", "createdAt": "2020-07-20T01:26:32Z", "author": {"login": "EvanLjp"}, "path": "docs/en/setup/backend/dynamic-config.md", "diffHunk": "@@ -103,3 +103,20 @@ configuration:\n     appId: ${SW_CONFIG_APOLLO_APP_ID:skywalking}\n     period: ${SW_CONFIG_APOLLO_PERIOD:5}\n ```\n+\n+## Dynamic Configuration Kuberbetes Configmap Implementation\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MzgwOQ=="}, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI2MjU3OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s-configmap/src/test/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigWatcherRegisterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMjowOFrOGzTIOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMjowOFrOGzTIOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0Mzk2MA==", "bodyText": "Many unnecessary empty lines.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456443960", "createdAt": "2020-07-17T13:32:08Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/test/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigWatcherRegisterTest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import io.kubernetes.client.openapi.models.V1ConfigMap;\n+import java.io.Reader;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.library.util.ResourceUtils;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PowerMockIgnore;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+import org.yaml.snakeyaml.Yaml;\n+\n+@RunWith(PowerMockRunner.class)\n+@PowerMockIgnore(\"javax.management.*\")\n+@PrepareForTest({ConfigurationConfigmapInformer.class})\n+public class ConfigmapConfigWatcherRegisterTest {\n+\n+    private ConfigmapConfigurationWatcherRegister register;\n+\n+    private ConfigurationConfigmapInformer informer;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzI2Mjk1OnYy", "diffSide": "RIGHT", "path": "oap-server/server-configuration/configuration-k8s-configmap/src/test/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMjoxNFrOGzTIdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzozMjoxNFrOGzTIdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0NDAyMQ==", "bodyText": "An unnecessary empty line.", "url": "https://github.com/apache/skywalking/pull/4959#discussion_r456444021", "createdAt": "2020-07-17T13:32:14Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-configuration/configuration-k8s-configmap/src/test/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigmapConfigurationProviderTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.configuration.configmap;\n+\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.powermock.core.classloader.annotations.PowerMockIgnore;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+@RunWith(PowerMockRunner.class)\n+@PowerMockIgnore(\"javax.management.*\")\n+public class ConfigmapConfigurationProviderTest {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c259cb52f4095b1ff9bbef064d62e060b8d2e9b5"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 227, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}