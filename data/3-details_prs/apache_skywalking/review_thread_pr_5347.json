{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MzEyNjY2", "number": 5347, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToxNjoxNFrOEZY1hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToxNjoxNFrOEZY1hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDU2Nzc0OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/elastic-job-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/elasticjob/ElasticJobExecutorInterceptor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToxNjoxNFrOHCK18Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDo1Mzo0N1rOHDB_EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzNjg0OQ==", "bodyText": "Do you want to analyze? If you want, add logic span tag.", "url": "https://github.com/apache/skywalking/pull/5347#discussion_r472036849", "createdAt": "2020-08-18T09:16:14Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/elastic-job-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/elasticjob/ElasticJobExecutorInterceptor.java", "diffHunk": "@@ -36,7 +35,7 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         ShardingContexts shardingContexts = (ShardingContexts) allArguments[0];\n         Integer item = (Integer) allArguments[1];\n         String operateName = ComponentsDefine.ELASTIC_JOB.getName() + \"/\" + shardingContexts.getJobName();\n-        AbstractSpan span = ContextManager.createEntrySpan(operateName, new ContextCarrier());\n+        AbstractSpan span = ContextManager.createLocalSpan(operateName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e50fe4f350e829b70284c6ca22f35871ccaddf92"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI0NjIzMw==", "bodyText": "@tristaZero @terrymanu After this is added, on the SkyWalking UI, you will have the job metrics, besides the traces, including\n\nExecution time, including avg, percentile\nSuccessful rate, determined through whether the main entrance has an exception\nWhat other endpoints(HTTP/gRPC) this task depends on.\n\nThis is a thing we called the logic endpoint.", "url": "https://github.com/apache/skywalking/pull/5347#discussion_r472246233", "createdAt": "2020-08-18T14:36:42Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/elastic-job-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/elasticjob/ElasticJobExecutorInterceptor.java", "diffHunk": "@@ -36,7 +35,7 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         ShardingContexts shardingContexts = (ShardingContexts) allArguments[0];\n         Integer item = (Integer) allArguments[1];\n         String operateName = ComponentsDefine.ELASTIC_JOB.getName() + \"/\" + shardingContexts.getJobName();\n-        AbstractSpan span = ContextManager.createEntrySpan(operateName, new ContextCarrier());\n+        AbstractSpan span = ContextManager.createLocalSpan(operateName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzNjg0OQ=="}, "originalCommit": {"oid": "e50fe4f350e829b70284c6ca22f35871ccaddf92"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1NTYwMQ==", "bodyText": "It sounds a great feature. Express my thinks to @zhaoyuguang and @wu-sheng .", "url": "https://github.com/apache/skywalking/pull/5347#discussion_r472755601", "createdAt": "2020-08-19T06:28:13Z", "author": {"login": "tristaZero"}, "path": "apm-sniffer/apm-sdk-plugin/elastic-job-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/elasticjob/ElasticJobExecutorInterceptor.java", "diffHunk": "@@ -36,7 +35,7 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         ShardingContexts shardingContexts = (ShardingContexts) allArguments[0];\n         Integer item = (Integer) allArguments[1];\n         String operateName = ComponentsDefine.ELASTIC_JOB.getName() + \"/\" + shardingContexts.getJobName();\n-        AbstractSpan span = ContextManager.createEntrySpan(operateName, new ContextCarrier());\n+        AbstractSpan span = ContextManager.createLocalSpan(operateName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzNjg0OQ=="}, "originalCommit": {"oid": "e50fe4f350e829b70284c6ca22f35871ccaddf92"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0MDMwNA==", "bodyText": "Elastic-job`s had specification logic-span", "url": "https://github.com/apache/skywalking/pull/5347#discussion_r472940304", "createdAt": "2020-08-19T10:53:47Z", "author": {"login": "zhaoyuguang"}, "path": "apm-sniffer/apm-sdk-plugin/elastic-job-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/elasticjob/ElasticJobExecutorInterceptor.java", "diffHunk": "@@ -36,7 +35,7 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         ShardingContexts shardingContexts = (ShardingContexts) allArguments[0];\n         Integer item = (Integer) allArguments[1];\n         String operateName = ComponentsDefine.ELASTIC_JOB.getName() + \"/\" + shardingContexts.getJobName();\n-        AbstractSpan span = ContextManager.createEntrySpan(operateName, new ContextCarrier());\n+        AbstractSpan span = ContextManager.createLocalSpan(operateName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzNjg0OQ=="}, "originalCommit": {"oid": "e50fe4f350e829b70284c6ca22f35871ccaddf92"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4951, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}