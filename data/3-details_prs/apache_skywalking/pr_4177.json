{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MzMyODIy", "number": 4177, "title": "Enhance gRPC plugin", "bodyText": "Skywalking with enhanced gRPC\nThis PR enhances the original gRPC plugin of Skywalking.\nI created PR early for the request for comments. @GuoDuanLZ and I will accept opinion and improve this PR.\nChecklist\nThis PR still in WIP state, you can merge this PR after all check is done.\n\n Implementation\n Test\n Documents\n CI build pass\n Review\n\nDescription\nThe original gRPC plugin just provided very basically tracing function, the exception of business code will not be traced.\nWe refactored this plugin for those functions:\n\nServer and Client tracing has the same operations.\nProvide the internal or external gRPC server tracing mode.\nStreamline span timeline.\nThe error caused by business code will make the \"/Response/onClose\" fail.\nReduce interface point and optimize the code.\n\nOperations\nThe operation name of that this plugin created will be like\n       service  traceSide             event\n        ----\u2518      -----\u2518         --------\u2518\nfoo.bar.MyApi.echo/server/Request/onMessage\n------\u2510       ---\u2510        ------\u2510\npackage      method        side\n\n\nThere are two sides of tracing for gRPC: client-side and server-side.\nTrace side provides a view for gRPC request, it means what the gRPC request looks like in the client or the server.\nThere are five combinations for sides and events.\n/Request/onMessage\n# Request message received on the server or sent on the client.\n\n/Request/onComplete\n# Client has completed request sending, there is no more incoming request.\n\n/Request/onCancel\n# Client has canceled the call.\n\n/Response/onMessage\n# Response message received on client or sent on server.\n\n/Response/onClose\n# Call closed with status and trailers.\n\nFor simplifying tracing span, this plugin just creates onMessage spans for streaming calls.\n\nFor unary calls, no onMessage span created.\nFor client-streaming calls, just /Request/onMessage span created.\nFor server-streaming calls, just /Response/onMessage span created.\nFor bi-streaming calls, all /onMessage span created.\n\nFor example:\nfoo.bar.MyApi.echo/server/Request/onMessage\n# means it is a server-side tracing for server receive a request message from the client.\n\nfoo.bar.MyApi.echo/client/Request/onMessage\n# means it is a client-side tracing for client send a request message to server.\n\nfoo.bar.MyApi.echo/server/Response/onMessage\n# means server send a response message to client.\n\nfoo.bar.MyApi.echo/server/Response/onClose\n# means server completed all handling for a request.\n\nInternal and external gRPC server tracing\nIf you have two gRPC servers called Server1 and Server2, Server1 will call the Server2.test method in your business code, we just need the server-side tracing because of the Server2 is an internal server, Server2 will provide server-side view, server-side view will be more useful for tracing a call than client-side view.\nIf Server2 is an external gRPC server which you can't get server-side view by it. You will need the Server1 client-side view for the call.\nConfigure plugin\nThis plugin provides three configs for configuring internal and external gRPC servers.\n/**\n * If this config is false, only client spans of peer which configured in INCLUDED_CLIENT_TRACING_PEERS\n * will be collected. In this mode EXCLUDED_CLIENT_TRACING_PEERS will override INCLUDED_CLIENT_TRACING_PEERS.\n * <p>\n * If this config is true, only client spans of peer which configured in EXCLUDED_CLIENT_TRACING_PEERS\n * will not be collected. In this mode INCLUDED_CLIENT_TRACING_PEERS will override EXCLUDED_CLIENT_TRACING_PEERS.\n */\npublic static boolean DEFAULT_CLIENT_TRACING_ENABLE = false;\n\n/**\n * Included client tracing peers. gRPC plugin will collect client spans of configured config.\n */\npublic static List<String> INCLUDED_CLIENT_TRACING_PEERS = new LinkedList<>();\n\n/**\n * Excluded client tracing peers. gRPC plugin will not collect client spans of configured config.\n */\npublic static List<String> EXCLUDED_CLIENT_TRACING_PEERS = new LinkedList<>();\nDefault config is no external gRPC server, no client-side spans created. If you need the client-side view for three-part APIs, add the host and port like services.googleapis.com:11800 into INCLUDED_CLIENT_TRACING_PEERS.\nScreenshots\nWIP", "createdAt": "2020-01-05T20:17:42Z", "url": "https://github.com/apache/skywalking/pull/4177", "merged": true, "mergeCommit": {"oid": "97950807fafb503a0b083cd035f42e4f6e7c9ac5"}, "closed": true, "closedAt": "2020-01-30T12:12:49Z", "author": {"login": "devkanro"}, "timelineItems": {"totalCount": 52, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3c1SzgH2gAyMzU5MzMyODIyOmUxNmYxMmFlNDM5YmNjNzEwMjAxODU2MGYzZGJlOTU1MmVmZmEyNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_Ysd7gFqTM1MDc0OTA1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e16f12ae439bcc7102018560f3dbe9552effa241", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/e16f12ae439bcc7102018560f3dbe9552effa241", "committedDate": "2020-01-05T19:36:19Z", "message": "Enhance gRPC plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "337442dc2edfad63a0fe08a994e2a68641972dbe", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/337442dc2edfad63a0fe08a994e2a68641972dbe", "committedDate": "2020-01-05T20:17:04Z", "message": "Fix blocking call"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDUzNzk5", "url": "https://github.com/apache/skywalking/pull/4177#pullrequestreview-338453799", "createdAt": "2020-01-06T03:22:03Z", "commit": {"oid": "337442dc2edfad63a0fe08a994e2a68641972dbe"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77f2530e5452b8c40a710ee790a6e13e99ee902f", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/77f2530e5452b8c40a710ee790a6e13e99ee902f", "committedDate": "2020-01-06T06:41:16Z", "message": "Add server call ok status and modify auth name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e99d189d743400f7725574130e10c9f212318d1", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/8e99d189d743400f7725574130e10c9f212318d1", "committedDate": "2020-01-07T13:38:30Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40cbd77066fdc3704d3a70e659e840a64d512863", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/40cbd77066fdc3704d3a70e659e840a64d512863", "committedDate": "2020-01-08T03:12:58Z", "message": "Merge commit '8e99d189d743400f7725574130e10c9f212318d1' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "577efd28872aa8a851837e1db1677d12f5d97b21", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/577efd28872aa8a851837e1db1677d12f5d97b21", "committedDate": "2020-01-11T17:10:03Z", "message": "Add grpc error test (#1)\n\n* Add grpc on error test\r\n\r\n* Fixed bugs\r\n\r\n* Add license and fix bugs\r\n\r\n* Fixed bugs\r\n\r\n* Fix bugs\r\n\r\n* Override expect data\r\n\r\n* Update expectedData.yaml\r\n\r\nCo-authored-by: Kanro <higan@live.cn>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6547afa486ec1c3b675abc8b5d647ae05ad1ebd5", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/6547afa486ec1c3b675abc8b5d647ae05ad1ebd5", "committedDate": "2020-01-12T01:28:58Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "157a649655118520ee448790831ab7f74f1ca3a7", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/157a649655118520ee448790831ab7f74f1ca3a7", "committedDate": "2020-01-12T16:21:09Z", "message": "Add doc for gRPC configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "722f77a3c9fb7cb92886687ce6d2efb93fbb3b4c", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/722f77a3c9fb7cb92886687ce6d2efb93fbb3b4c", "committedDate": "2020-01-12T16:21:21Z", "message": "Merge remote-tracking branch 'apache/master' into trace-ignore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ff8b91c7fb39dc2e86fb7a0cef5215da4b6b5cf", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/7ff8b91c7fb39dc2e86fb7a0cef5215da4b6b5cf", "committedDate": "2020-01-12T23:38:52Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f3c9e1ab09f0cb23cf936d1ca9fd8f098bfb00d", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/9f3c9e1ab09f0cb23cf936d1ca9fd8f098bfb00d", "committedDate": "2020-01-13T13:58:03Z", "message": "Remove simple tracing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b559dbb7acaddf1ec9e26acee85347e04ae9bcd3", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/b559dbb7acaddf1ec9e26acee85347e04ae9bcd3", "committedDate": "2020-01-13T15:10:25Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a1d453a53bba15397d708d6558bdf28500320ae", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/5a1d453a53bba15397d708d6558bdf28500320ae", "committedDate": "2020-01-15T14:40:27Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjY2MDk1", "url": "https://github.com/apache/skywalking/pull/4177#pullrequestreview-343266095", "createdAt": "2020-01-15T14:41:08Z", "commit": {"oid": "5a1d453a53bba15397d708d6558bdf28500320ae"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0MTowOFrOFd6ghQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NTozNlrOFd6qBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxMTYyMQ==", "bodyText": "Do you forget to remove all these?", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r366911621", "createdAt": "2020-01-15T14:41:08Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -388,5 +390,26 @@\n              */\n             public static int HTTP_PARAMS_LENGTH_THRESHOLD = 1024;\n         }\n+\n+        public static class Grpc {\n+            /**\n+             * If this config is false, only client spans of peer which configured in {@link Grpc#INCLUDED_CLIENT_TRACING_PEERS}\n+             * will be collected. In this mode {@link Grpc#EXCLUDED_CLIENT_TRACING_PEERS} will override {@link Grpc#INCLUDED_CLIENT_TRACING_PEERS}.\n+             * <p>\n+             * If this config is true, only client spans of peer which configured in {@link Grpc#EXCLUDED_CLIENT_TRACING_PEERS}\n+             * will not be collected. In this mode {@link Grpc#INCLUDED_CLIENT_TRACING_PEERS} will override {@link Grpc#EXCLUDED_CLIENT_TRACING_PEERS}.\n+             */\n+            public static boolean DEFAULT_CLIENT_TRACING_ENABLE = false;\n+\n+            /**\n+             * Included client tracing peers. gRPC plugin will collect client spans of configured config.\n+             */\n+            public static List<String> INCLUDED_CLIENT_TRACING_PEERS = new LinkedList<>();\n+\n+            /**\n+             * Excluded client tracing peers. gRPC plugin will not collect client spans of configured config.\n+             */\n+            public static List<String> EXCLUDED_CLIENT_TRACING_PEERS = new LinkedList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1d453a53bba15397d708d6558bdf28500320ae"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxMzM4NQ==", "bodyText": "When will remove this from the RuntimeContext?", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r366913385", "createdAt": "2020-01-15T14:44:21Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/client/BlockingCallInterceptor.java", "diffHunk": "@@ -16,43 +16,48 @@\n  *\n  */\n \n-package org.apache.skywalking.apm.plugin.grpc.v1;\n+package org.apache.skywalking.apm.plugin.grpc.v1.client;\n \n import io.grpc.Channel;\n import io.grpc.MethodDescriptor;\n-import java.lang.reflect.Method;\n import org.apache.skywalking.apm.agent.core.context.ContextManager;\n import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.StaticMethodsAroundInterceptor;\n import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n \n+import java.lang.reflect.Method;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.BLOCKING_CALL_EXIT_SPAN;\n import static org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil.formatOperationName;\n \n /**\n- * @author zhang xin\n+ * @author zhang xin, kanro\n  */\n public class BlockingCallInterceptor implements StaticMethodsAroundInterceptor {\n \n-    @Override public void beforeMethod(Class clazz, Method method, Object[] allArguments, Class<?>[] parameterTypes,\n-        MethodInterceptResult result) {\n-        Channel channel = (Channel)allArguments[0];\n-        MethodDescriptor methodDescriptor = (MethodDescriptor)allArguments[1];\n+    @Override\n+    public void beforeMethod(Class clazz, Method method, Object[] allArguments, Class<?>[] parameterTypes,\n+                             MethodInterceptResult result) {\n+        Channel channel = (Channel) allArguments[0];\n+        MethodDescriptor<?, ?> methodDescriptor = (MethodDescriptor<?, ?>) allArguments[1];\n         final AbstractSpan span = ContextManager.createExitSpan(formatOperationName(methodDescriptor), channel.authority());\n         span.setComponent(ComponentsDefine.GRPC);\n-        SpanLayer.asRPCFramework(span);\n+        span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+        ContextManager.getRuntimeContext().put(BLOCKING_CALL_EXIT_SPAN, span);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1d453a53bba15397d708d6558bdf28500320ae"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxNDA1Mg==", "bodyText": "If not, whether the multiple RPCs will trigger dirty read?", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r366914052", "createdAt": "2020-01-15T14:45:36Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/client/BlockingCallInterceptor.java", "diffHunk": "@@ -16,43 +16,48 @@\n  *\n  */\n \n-package org.apache.skywalking.apm.plugin.grpc.v1;\n+package org.apache.skywalking.apm.plugin.grpc.v1.client;\n \n import io.grpc.Channel;\n import io.grpc.MethodDescriptor;\n-import java.lang.reflect.Method;\n import org.apache.skywalking.apm.agent.core.context.ContextManager;\n import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.StaticMethodsAroundInterceptor;\n import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n \n+import java.lang.reflect.Method;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.BLOCKING_CALL_EXIT_SPAN;\n import static org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil.formatOperationName;\n \n /**\n- * @author zhang xin\n+ * @author zhang xin, kanro\n  */\n public class BlockingCallInterceptor implements StaticMethodsAroundInterceptor {\n \n-    @Override public void beforeMethod(Class clazz, Method method, Object[] allArguments, Class<?>[] parameterTypes,\n-        MethodInterceptResult result) {\n-        Channel channel = (Channel)allArguments[0];\n-        MethodDescriptor methodDescriptor = (MethodDescriptor)allArguments[1];\n+    @Override\n+    public void beforeMethod(Class clazz, Method method, Object[] allArguments, Class<?>[] parameterTypes,\n+                             MethodInterceptResult result) {\n+        Channel channel = (Channel) allArguments[0];\n+        MethodDescriptor<?, ?> methodDescriptor = (MethodDescriptor<?, ?>) allArguments[1];\n         final AbstractSpan span = ContextManager.createExitSpan(formatOperationName(methodDescriptor), channel.authority());\n         span.setComponent(ComponentsDefine.GRPC);\n-        SpanLayer.asRPCFramework(span);\n+        span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+        ContextManager.getRuntimeContext().put(BLOCKING_CALL_EXIT_SPAN, span);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxMzM4NQ=="}, "originalCommit": {"oid": "5a1d453a53bba15397d708d6558bdf28500320ae"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aef265d3b025888448034bc621c8074074e3ea55", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/aef265d3b025888448034bc621c8074074e3ea55", "committedDate": "2020-01-16T08:36:26Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caaa969aef3b36f686662665fefe1f08cf0c255e", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/caaa969aef3b36f686662665fefe1f08cf0c255e", "committedDate": "2020-01-16T12:15:25Z", "message": "Remove runtime context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ca626e57d811aae3b792beeb8e35511400d4d41", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/5ca626e57d811aae3b792beeb8e35511400d4d41", "committedDate": "2020-01-16T12:52:10Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d7741944d3390109e4d30e6f9c05b8a5cb6171a", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/9d7741944d3390109e4d30e6f9c05b8a5cb6171a", "committedDate": "2020-01-17T16:36:27Z", "message": "Update test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "407e318bc78066ec9b13081d3f491dab7b8ced6b", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/407e318bc78066ec9b13081d3f491dab7b8ced6b", "committedDate": "2020-01-17T16:38:34Z", "message": "Update test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "047b6f4ae74d185b92e1de96ce0c96d48231dcea", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/047b6f4ae74d185b92e1de96ce0c96d48231dcea", "committedDate": "2020-01-17T17:25:54Z", "message": "Fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0572360550ff4ec39e2609425ae1f14384557543", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/0572360550ff4ec39e2609425ae1f14384557543", "committedDate": "2020-01-17T18:05:16Z", "message": "Fix bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97fc457c8005c7d6977f3c00198442b4dce923ca", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/97fc457c8005c7d6977f3c00198442b4dce923ca", "committedDate": "2020-01-18T01:56:32Z", "message": "Fix error type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "577c28546feddd6d2ec8ddedd53df536ba7079a7", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/577c28546feddd6d2ec8ddedd53df536ba7079a7", "committedDate": "2020-01-18T13:21:12Z", "message": "Final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "821cad2633b170020f6b90d2046350575744546f", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/821cad2633b170020f6b90d2046350575744546f", "committedDate": "2020-01-18T15:07:45Z", "message": "Fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d44d145bce7e75063b89b28490a413968346fe06", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/d44d145bce7e75063b89b28490a413968346fe06", "committedDate": "2020-01-19T01:00:51Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7de2df7e38d1ce34646f5ddf16df9b99dcb85cb4", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/7de2df7e38d1ce34646f5ddf16df9b99dcb85cb4", "committedDate": "2020-01-19T02:15:09Z", "message": "Fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85f4c35e56875de311ce67869e77a6090720d724", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/85f4c35e56875de311ce67869e77a6090720d724", "committedDate": "2020-01-19T02:54:01Z", "message": "Fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cdce30f866768ea777b06b1e5445e8ee69cc2b4", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/6cdce30f866768ea777b06b1e5445e8ee69cc2b4", "committedDate": "2020-01-19T07:03:41Z", "message": "Fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b191ddbde4f34aec1406bb230e654a945d9b933", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/1b191ddbde4f34aec1406bb230e654a945d9b933", "committedDate": "2020-01-19T08:29:26Z", "message": "Try"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00a5ccf974dc221243b0f76258e1eb5f36cbc31a", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/00a5ccf974dc221243b0f76258e1eb5f36cbc31a", "committedDate": "2020-01-19T10:00:41Z", "message": "Try again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c377e1281a05fa8d3c5de8e7ab63df99806f2354", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/c377e1281a05fa8d3c5de8e7ab63df99806f2354", "committedDate": "2020-01-19T11:27:45Z", "message": "Fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e541130139cba235d90ad176e91ed3a6685aee2b", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/e541130139cba235d90ad176e91ed3a6685aee2b", "committedDate": "2020-01-19T15:33:16Z", "message": "Update expectedData.yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93cdc2a0e658e44fef7fc20c0cb388a1356417cd", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/93cdc2a0e658e44fef7fc20c0cb388a1356417cd", "committedDate": "2020-01-20T03:16:39Z", "message": "Merge pull request #2 from GuoDuanLZ/grpc\n\nUpdate test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "416582ea553217f38315b03118467965b7470b55", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/416582ea553217f38315b03118467965b7470b55", "committedDate": "2020-01-20T06:01:02Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0ef0dff770e4342ad98a643eb19b9ccd5a5fb69", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/d0ef0dff770e4342ad98a643eb19b9ccd5a5fb69", "committedDate": "2020-01-20T07:27:17Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/394adec0dfd00cf744df06a299079eba17e9e0e3", "committedDate": "2020-01-21T06:05:02Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NDgzNzI3", "url": "https://github.com/apache/skywalking/pull/4177#pullrequestreview-348483727", "createdAt": "2020-01-27T07:59:36Z", "commit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNzo1OTozN1rOFh6Idg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODozNjoyM1rOFh63dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA5OTc2Ng==", "bodyText": "This comment seems not right. Do you miss the changes of old version?", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371099766", "createdAt": "2020-01-27T07:59:37Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/client/TracingClientCall.java", "diffHunk": "@@ -0,0 +1,201 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.grpc.v1.client;\n+\n+import io.grpc.*;\n+import org.apache.skywalking.apm.agent.core.context.CarrierItem;\n+import org.apache.skywalking.apm.agent.core.context.ContextCarrier;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.ContextSnapshot;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil;\n+\n+import javax.annotation.Nullable;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.*;\n+import static org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil.formatOperationName;\n+\n+/**\n+ * Fully client tracing for external gRPC server which not be registered in the same Skywalking server.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwMjc5Ng==", "bodyText": "case UNKNOWN, case INTERNAL and default seem to have the same logic. What is the difference?", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371102796", "createdAt": "2020-01-27T08:09:46Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/server/TracingServerCall.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.grpc.v1.server;\n+\n+import io.grpc.ForwardingServerCall;\n+import io.grpc.Metadata;\n+import io.grpc.ServerCall;\n+import io.grpc.Status;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.ContextSnapshot;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.*;\n+\n+/**\n+ * @author wang zheng, kanro\n+ */\n+public class TracingServerCall<REQUEST, RESPONSE> extends ForwardingServerCall.SimpleForwardingServerCall<REQUEST, RESPONSE> {\n+\n+    private final String operationPrefix;\n+    private final ContextSnapshot contextSnapshot;\n+\n+    protected TracingServerCall(ServerCall<REQUEST, RESPONSE> delegate, ContextSnapshot contextSnapshot) {\n+        super(delegate);\n+        this.operationPrefix = OperationNameFormatUtil.formatOperationName(delegate.getMethodDescriptor()) + SERVER;\n+        this.contextSnapshot = contextSnapshot;\n+    }\n+\n+    @Override\n+    public void sendMessage(RESPONSE message) {\n+        // We just create the request on message span for server stream calls.\n+        if (!getMethodDescriptor().getType().serverSendsOneMessage()) {\n+            try {\n+                final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + RESPONSE_ON_MESSAGE_OPERATION_NAME);\n+                span.setComponent(ComponentsDefine.GRPC);\n+                span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+                ContextManager.continued(contextSnapshot);\n+                super.sendMessage(message);\n+            } catch (Throwable t) {\n+                ContextManager.activeSpan().errorOccurred().log(t);\n+                throw t;\n+            } finally {\n+                ContextManager.stopSpan();\n+            }\n+        } else {\n+            super.sendMessage(message);\n+        }\n+    }\n+\n+    @Override\n+    public void close(Status status, Metadata trailers) {\n+        try {\n+            final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + RESPONSE_ON_CLOSE_OPERATION_NAME);\n+            span.setComponent(ComponentsDefine.GRPC);\n+            span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+            ContextManager.continued(contextSnapshot);\n+\n+            switch (status.getCode()) {\n+                case OK:\n+                    break;\n+                // UNKNOWN/INTERNAL status code will case error in this span.\n+                // Those status code means some unexpected error occurred in server.\n+                // Similar to 5XX in HTTP status.\n+                case UNKNOWN:\n+                case INTERNAL:\n+                    if (status.getCause() == null) {\n+                        span.errorOccurred().log(status.asRuntimeException());\n+                    } else {\n+                        span.errorOccurred().log(status.getCause());\n+                    }\n+                    break;\n+                // Other status code means some predictable error occurred in server.\n+                // Like PERMISSION_DENIED or UNAUTHENTICATED somethings.\n+                // Similar to 4XX in HTTP status.\n+                default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwNDYxOQ==", "bodyText": "You should add a new try/final in this code block, and keep super#close in the final.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371104619", "createdAt": "2020-01-27T08:15:35Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/server/TracingServerCall.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.grpc.v1.server;\n+\n+import io.grpc.ForwardingServerCall;\n+import io.grpc.Metadata;\n+import io.grpc.ServerCall;\n+import io.grpc.Status;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.ContextSnapshot;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.*;\n+\n+/**\n+ * @author wang zheng, kanro\n+ */\n+public class TracingServerCall<REQUEST, RESPONSE> extends ForwardingServerCall.SimpleForwardingServerCall<REQUEST, RESPONSE> {\n+\n+    private final String operationPrefix;\n+    private final ContextSnapshot contextSnapshot;\n+\n+    protected TracingServerCall(ServerCall<REQUEST, RESPONSE> delegate, ContextSnapshot contextSnapshot) {\n+        super(delegate);\n+        this.operationPrefix = OperationNameFormatUtil.formatOperationName(delegate.getMethodDescriptor()) + SERVER;\n+        this.contextSnapshot = contextSnapshot;\n+    }\n+\n+    @Override\n+    public void sendMessage(RESPONSE message) {\n+        // We just create the request on message span for server stream calls.\n+        if (!getMethodDescriptor().getType().serverSendsOneMessage()) {\n+            try {\n+                final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + RESPONSE_ON_MESSAGE_OPERATION_NAME);\n+                span.setComponent(ComponentsDefine.GRPC);\n+                span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+                ContextManager.continued(contextSnapshot);\n+                super.sendMessage(message);\n+            } catch (Throwable t) {\n+                ContextManager.activeSpan().errorOccurred().log(t);\n+                throw t;\n+            } finally {\n+                ContextManager.stopSpan();\n+            }\n+        } else {\n+            super.sendMessage(message);\n+        }\n+    }\n+\n+    @Override\n+    public void close(Status status, Metadata trailers) {\n+        try {\n+            final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + RESPONSE_ON_CLOSE_OPERATION_NAME);\n+            span.setComponent(ComponentsDefine.GRPC);\n+            span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+            ContextManager.continued(contextSnapshot);\n+\n+            switch (status.getCode()) {\n+                case OK:\n+                    break;\n+                // UNKNOWN/INTERNAL status code will case error in this span.\n+                // Those status code means some unexpected error occurred in server.\n+                // Similar to 5XX in HTTP status.\n+                case UNKNOWN:\n+                case INTERNAL:\n+                    if (status.getCause() == null) {\n+                        span.errorOccurred().log(status.asRuntimeException());\n+                    } else {\n+                        span.errorOccurred().log(status.getCause());\n+                    }\n+                    break;\n+                // Other status code means some predictable error occurred in server.\n+                // Like PERMISSION_DENIED or UNAUTHENTICATED somethings.\n+                // Similar to 4XX in HTTP status.\n+                default:\n+                    // But if the status still has cause exception, we will log it too.\n+                    if (status.getCause() != null) {\n+                        span.errorOccurred().log(status.getCause());\n+                    }\n+                    break;\n+            }\n+            Tags.STATUS_CODE.set(span, status.getCode().name());\n+            super.close(status, trailers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwNDkyMg==", "bodyText": "A similar suggestion, try/final should be added here.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371104922", "createdAt": "2020-01-27T08:16:33Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/server/TracingServerCallListener.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.grpc.v1.server;\n+\n+import io.grpc.ForwardingServerCallListener;\n+import io.grpc.MethodDescriptor;\n+import io.grpc.ServerCall;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.ContextSnapshot;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.*;\n+\n+/**\n+ * @author wang zheng, kanro\n+ */\n+public class TracingServerCallListener<REQUEST> extends ForwardingServerCallListener.SimpleForwardingServerCallListener<REQUEST> {\n+\n+    private final ContextSnapshot contextSnapshot;\n+    private final MethodDescriptor.MethodType methodType;\n+    private final String operationPrefix;\n+\n+    protected TracingServerCallListener(ServerCall.Listener<REQUEST> delegate, MethodDescriptor<REQUEST, ?> descriptor,\n+                                        ContextSnapshot contextSnapshot) {\n+        super(delegate);\n+        this.contextSnapshot = contextSnapshot;\n+        this.methodType = descriptor.getType();\n+        this.operationPrefix = OperationNameFormatUtil.formatOperationName(descriptor) + SERVER;\n+    }\n+\n+    @Override\n+    public void onMessage(REQUEST message) {\n+        // We just create the request on message span for client stream calls.\n+        if (!methodType.clientSendsOneMessage()) {\n+            try {\n+                final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + REQUEST_ON_MESSAGE_OPERATION_NAME);\n+                span.setComponent(ComponentsDefine.GRPC);\n+                span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+                ContextManager.continued(contextSnapshot);\n+                super.onMessage(message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwNTAxMw==", "bodyText": "A similar suggestion, try/final should be added here.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371105013", "createdAt": "2020-01-27T08:16:48Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/server/TracingServerCallListener.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.grpc.v1.server;\n+\n+import io.grpc.ForwardingServerCallListener;\n+import io.grpc.MethodDescriptor;\n+import io.grpc.ServerCall;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.ContextSnapshot;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.*;\n+\n+/**\n+ * @author wang zheng, kanro\n+ */\n+public class TracingServerCallListener<REQUEST> extends ForwardingServerCallListener.SimpleForwardingServerCallListener<REQUEST> {\n+\n+    private final ContextSnapshot contextSnapshot;\n+    private final MethodDescriptor.MethodType methodType;\n+    private final String operationPrefix;\n+\n+    protected TracingServerCallListener(ServerCall.Listener<REQUEST> delegate, MethodDescriptor<REQUEST, ?> descriptor,\n+                                        ContextSnapshot contextSnapshot) {\n+        super(delegate);\n+        this.contextSnapshot = contextSnapshot;\n+        this.methodType = descriptor.getType();\n+        this.operationPrefix = OperationNameFormatUtil.formatOperationName(descriptor) + SERVER;\n+    }\n+\n+    @Override\n+    public void onMessage(REQUEST message) {\n+        // We just create the request on message span for client stream calls.\n+        if (!methodType.clientSendsOneMessage()) {\n+            try {\n+                final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + REQUEST_ON_MESSAGE_OPERATION_NAME);\n+                span.setComponent(ComponentsDefine.GRPC);\n+                span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+                ContextManager.continued(contextSnapshot);\n+                super.onMessage(message);\n+            } catch (Throwable t) {\n+                ContextManager.activeSpan().errorOccurred().log(t);\n+                throw t;\n+            } finally {\n+                ContextManager.stopSpan();\n+            }\n+        } else {\n+            super.onMessage(message);\n+        }\n+    }\n+\n+    @Override\n+    public void onCancel() {\n+        try {\n+            final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + REQUEST_ON_CANCEL_OPERATION_NAME);\n+            span.setComponent(ComponentsDefine.GRPC);\n+            span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+            ContextManager.continued(contextSnapshot);\n+            super.onCancel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwNTA5Mw==", "bodyText": "A similar suggestion, try/final should be added here.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371105093", "createdAt": "2020-01-27T08:17:07Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/server/TracingServerCallListener.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.grpc.v1.server;\n+\n+import io.grpc.ForwardingServerCallListener;\n+import io.grpc.MethodDescriptor;\n+import io.grpc.ServerCall;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.ContextSnapshot;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.*;\n+\n+/**\n+ * @author wang zheng, kanro\n+ */\n+public class TracingServerCallListener<REQUEST> extends ForwardingServerCallListener.SimpleForwardingServerCallListener<REQUEST> {\n+\n+    private final ContextSnapshot contextSnapshot;\n+    private final MethodDescriptor.MethodType methodType;\n+    private final String operationPrefix;\n+\n+    protected TracingServerCallListener(ServerCall.Listener<REQUEST> delegate, MethodDescriptor<REQUEST, ?> descriptor,\n+                                        ContextSnapshot contextSnapshot) {\n+        super(delegate);\n+        this.contextSnapshot = contextSnapshot;\n+        this.methodType = descriptor.getType();\n+        this.operationPrefix = OperationNameFormatUtil.formatOperationName(descriptor) + SERVER;\n+    }\n+\n+    @Override\n+    public void onMessage(REQUEST message) {\n+        // We just create the request on message span for client stream calls.\n+        if (!methodType.clientSendsOneMessage()) {\n+            try {\n+                final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + REQUEST_ON_MESSAGE_OPERATION_NAME);\n+                span.setComponent(ComponentsDefine.GRPC);\n+                span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+                ContextManager.continued(contextSnapshot);\n+                super.onMessage(message);\n+            } catch (Throwable t) {\n+                ContextManager.activeSpan().errorOccurred().log(t);\n+                throw t;\n+            } finally {\n+                ContextManager.stopSpan();\n+            }\n+        } else {\n+            super.onMessage(message);\n+        }\n+    }\n+\n+    @Override\n+    public void onCancel() {\n+        try {\n+            final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + REQUEST_ON_CANCEL_OPERATION_NAME);\n+            span.setComponent(ComponentsDefine.GRPC);\n+            span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+            ContextManager.continued(contextSnapshot);\n+            super.onCancel();\n+        } catch (Throwable t) {\n+            ContextManager.activeSpan().errorOccurred().log(t);\n+            throw t;\n+        } finally {\n+            ContextManager.stopSpan();\n+        }\n+    }\n+\n+    @Override\n+    public void onHalfClose() {\n+        try {\n+            final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + REQUEST_ON_COMPLETE_OPERATION_NAME);\n+            span.setComponent(ComponentsDefine.GRPC);\n+            span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+            ContextManager.continued(contextSnapshot);\n+            super.onHalfClose();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExMTc1OA==", "bodyText": "Health check should not be included.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371111758", "createdAt": "2020-01-27T08:36:16Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/grpc-scenario/config/expectedData.yaml", "diffHunk": "@@ -15,239 +15,542 @@\n # limitations under the License.\n registryItems:\n   applications:\n-    - {grpc-scenario: 2}\n+  - { grpc-scenario: 2 }\n   instances:\n-    - {grpc-scenario: 1}\n+  - { grpc-scenario: 1 }\n   operationNames:\n-    - grpc-scenario: [Greeter.sayHello, GreeterBlocking.sayHello,\n-                      /grpc-scenario/case/grpc-scenario]\n+  - grpc-scenario: [/grpc-scenario/case/healthCheck, Greeter.sayHello, GreeterBlocking.sayHello, GreeterBlockingError.sayHello, /grpc-scenario/case/grpc-scenario]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExMTc5OQ==", "bodyText": "Health check should not be included.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371111799", "createdAt": "2020-01-27T08:36:23Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/grpc-scenario/config/expectedData.yaml", "diffHunk": "@@ -15,239 +15,542 @@\n # limitations under the License.\n registryItems:\n   applications:\n-    - {grpc-scenario: 2}\n+  - { grpc-scenario: 2 }\n   instances:\n-    - {grpc-scenario: 1}\n+  - { grpc-scenario: 1 }\n   operationNames:\n-    - grpc-scenario: [Greeter.sayHello, GreeterBlocking.sayHello,\n-                      /grpc-scenario/case/grpc-scenario]\n+  - grpc-scenario: [/grpc-scenario/case/healthCheck, Greeter.sayHello, GreeterBlocking.sayHello, GreeterBlockingError.sayHello, /grpc-scenario/case/grpc-scenario]\n   heartbeat: []\n segmentItems:\n-  - applicationCode: grpc-scenario\n-    segmentSize: gt 10\n-    segments:\n-      - segmentId: not null\n-        spans:\n-          - operationName: GreeterBlocking.sayHello\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Entry\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossProcess, parentSpanId: 2, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Entry\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossProcess, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: GreeterBlocking.sayHello/server/RequestObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: GreeterBlocking.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/server/RequestObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/client/ResponseObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/client/ResponseObserver/onComplete\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/server/RequestObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/server/RequestObserver/onComplete\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello\n-            operationId: 0\n-            parentSpanId: 0\n-            spanId: 1\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Exit\n-            peer: '127.0.0.1:18080'\n-            peerId: 0\n-          - operationName: GreeterBlocking.sayHello\n-            operationId: 0\n-            parentSpanId: 0\n-            spanId: 2\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Exit\n-            peer: '127.0.0.1:18080'\n-            peerId: 0\n-          - operationName: /grpc-scenario/case/grpc-scenario\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Http\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 1\n-            componentName: ''\n-            isError: false\n-            spanType: Entry\n-            peer: ''\n-            peerId: 0\n-            tags:\n-              - {key: url, value: 'http://localhost:8080/grpc-scenario/case/grpc-scenario'}\n-              - {key: http.method, value: GET}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/client/ResponseObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-\n+- applicationCode: grpc-scenario\n+  segmentSize: gt 10\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: /grpc-scenario/case/healthCheck", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394adec0dfd00cf744df06a299079eba17e9e0e3"}, "originalPosition": 248}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c601e1d53e11d5d50b877d8ce93088f6a4d10a01", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/c601e1d53e11d5d50b877d8ce93088f6a4d10a01", "committedDate": "2020-01-27T19:46:04Z", "message": "Fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTc0OTAx", "url": "https://github.com/apache/skywalking/pull/4177#pullrequestreview-349174901", "createdAt": "2020-01-28T07:41:50Z", "commit": {"oid": "c601e1d53e11d5d50b877d8ce93088f6a4d10a01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNzo0MTo1MFrOFibc6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNzo0MTo1MFrOFibc6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0NTY3Mg==", "bodyText": "What is this catch for? I can't see any code happens except the plugin logic. We should not log an error caused by our own codes, rather than users.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371645672", "createdAt": "2020-01-28T07:41:50Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/server/TracingServerCall.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.grpc.v1.server;\n+\n+import io.grpc.ForwardingServerCall;\n+import io.grpc.Metadata;\n+import io.grpc.ServerCall;\n+import io.grpc.Status;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.ContextSnapshot;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.*;\n+\n+/**\n+ * @author wang zheng, kanro\n+ */\n+public class TracingServerCall<REQUEST, RESPONSE> extends ForwardingServerCall.SimpleForwardingServerCall<REQUEST, RESPONSE> {\n+\n+    private final String operationPrefix;\n+    private final ContextSnapshot contextSnapshot;\n+\n+    protected TracingServerCall(ServerCall<REQUEST, RESPONSE> delegate, ContextSnapshot contextSnapshot) {\n+        super(delegate);\n+        this.operationPrefix = OperationNameFormatUtil.formatOperationName(delegate.getMethodDescriptor()) + SERVER;\n+        this.contextSnapshot = contextSnapshot;\n+    }\n+\n+    @Override\n+    public void sendMessage(RESPONSE message) {\n+        // We just create the request on message span for server stream calls.\n+        if (!getMethodDescriptor().getType().serverSendsOneMessage()) {\n+            try {\n+                final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + RESPONSE_ON_MESSAGE_OPERATION_NAME);\n+                span.setComponent(ComponentsDefine.GRPC);\n+                span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+                ContextManager.continued(contextSnapshot);\n+            } catch (Throwable t) {\n+                ContextManager.activeSpan().errorOccurred().log(t);\n+                throw t;\n+            } finally {\n+                super.sendMessage(message);\n+                ContextManager.stopSpan();\n+            }\n+        } else {\n+            super.sendMessage(message);\n+        }\n+    }\n+\n+    @Override\n+    public void close(Status status, Metadata trailers) {\n+        try {\n+            final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + RESPONSE_ON_CLOSE_OPERATION_NAME);\n+            span.setComponent(ComponentsDefine.GRPC);\n+            span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+            ContextManager.continued(contextSnapshot);\n+\n+            switch (status.getCode()) {\n+                case OK:\n+                    break;\n+                // UNKNOWN/INTERNAL status code will case error in this span.\n+                // Those status code means some unexpected error occurred in server.\n+                // Similar to 5XX in HTTP status.\n+                case UNKNOWN:\n+                case INTERNAL:\n+                    if (status.getCause() == null) {\n+                        span.errorOccurred().log(status.asRuntimeException());\n+                    } else {\n+                        span.errorOccurred().log(status.getCause());\n+                    }\n+                    break;\n+                // Other status code means some predictable error occurred in server.\n+                // Like PERMISSION_DENIED or UNAUTHENTICATED somethings.\n+                // Similar to 4XX in HTTP status.\n+                default:\n+                    // But if the status still has cause exception, we will log it too.\n+                    if (status.getCause() != null) {\n+                        span.errorOccurred().log(status.getCause());\n+                    }\n+                    break;\n+            }\n+            Tags.STATUS_CODE.set(span, status.getCode().name());\n+        } catch (Throwable t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c601e1d53e11d5d50b877d8ce93088f6a4d10a01"}, "originalPosition": 103}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTc3Mjcy", "url": "https://github.com/apache/skywalking/pull/4177#pullrequestreview-349177272", "createdAt": "2020-01-28T07:48:14Z", "commit": {"oid": "c601e1d53e11d5d50b877d8ce93088f6a4d10a01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNzo0ODoxNFrOFiblJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNzo0ODoxNFrOFiblJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0Nzc4MA==", "bodyText": "As I last comment, please just try/final, but not catch. I just want to guarantee our plugins would not break the original codes even our plugins have bugs.\nPlease recheck the codes based on this rule.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371647780", "createdAt": "2020-01-28T07:48:14Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/grpc-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/grpc/v1/server/TracingServerCallListener.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.grpc.v1.server;\n+\n+import io.grpc.ForwardingServerCallListener;\n+import io.grpc.MethodDescriptor;\n+import io.grpc.ServerCall;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.ContextSnapshot;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.grpc.v1.OperationNameFormatUtil;\n+\n+import static org.apache.skywalking.apm.plugin.grpc.v1.Constants.*;\n+\n+/**\n+ * @author wang zheng, kanro\n+ */\n+public class TracingServerCallListener<REQUEST> extends ForwardingServerCallListener.SimpleForwardingServerCallListener<REQUEST> {\n+\n+    private final ContextSnapshot contextSnapshot;\n+    private final MethodDescriptor.MethodType methodType;\n+    private final String operationPrefix;\n+\n+    protected TracingServerCallListener(ServerCall.Listener<REQUEST> delegate, MethodDescriptor<REQUEST, ?> descriptor,\n+                                        ContextSnapshot contextSnapshot) {\n+        super(delegate);\n+        this.contextSnapshot = contextSnapshot;\n+        this.methodType = descriptor.getType();\n+        this.operationPrefix = OperationNameFormatUtil.formatOperationName(descriptor) + SERVER;\n+    }\n+\n+    @Override\n+    public void onMessage(REQUEST message) {\n+        // We just create the request on message span for client stream calls.\n+        if (!methodType.clientSendsOneMessage()) {\n+            try {\n+                final AbstractSpan span = ContextManager.createLocalSpan(operationPrefix + REQUEST_ON_MESSAGE_OPERATION_NAME);\n+                span.setComponent(ComponentsDefine.GRPC);\n+                span.setLayer(SpanLayer.RPC_FRAMEWORK);\n+                ContextManager.continued(contextSnapshot);\n+            } catch (Throwable t) {\n+                ContextManager.activeSpan().errorOccurred().log(t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c601e1d53e11d5d50b877d8ce93088f6a4d10a01"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fae778db9b8f4f3b3244841a6f352314bc76df4", "author": {"user": {"login": "devkanro", "name": "Kanro"}}, "url": "https://github.com/apache/skywalking/commit/2fae778db9b8f4f3b3244841a6f352314bc76df4", "committedDate": "2020-01-28T07:59:19Z", "message": "Fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MjA0NTYw", "url": "https://github.com/apache/skywalking/pull/4177#pullrequestreview-349204560", "createdAt": "2020-01-28T08:48:14Z", "commit": {"oid": "2fae778db9b8f4f3b3244841a6f352314bc76df4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwODo0ODoxNFrOFic5xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwODo0ODoxNFrOFic5xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY2OTQ0NA==", "bodyText": "Why do these two use different formats? I know they may be right but it seems strange.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371669444", "createdAt": "2020-01-28T08:48:14Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/grpc-scenario/config/expectedData.yaml", "diffHunk": "@@ -15,239 +15,524 @@\n # limitations under the License.\n registryItems:\n   applications:\n-    - {grpc-scenario: 2}\n+  - { grpc-scenario: 2 }\n   instances:\n-    - {grpc-scenario: 1}\n+  - { grpc-scenario: 1 }\n   operationNames:\n-    - grpc-scenario: [Greeter.sayHello, GreeterBlocking.sayHello,\n-                      /grpc-scenario/case/grpc-scenario]\n+  - grpc-scenario: [Greeter.sayHello, GreeterBlocking.sayHello, GreeterBlockingError.sayHello, /grpc-scenario/case/grpc-scenario]\n   heartbeat: []\n segmentItems:\n-  - applicationCode: grpc-scenario\n-    segmentSize: gt 10\n-    segments:\n-      - segmentId: not null\n-        spans:\n-          - operationName: GreeterBlocking.sayHello\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Entry\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossProcess, parentSpanId: 2, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Entry\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossProcess, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: GreeterBlocking.sayHello/server/RequestObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: GreeterBlocking.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/server/RequestObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/client/ResponseObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/client/ResponseObserver/onComplete\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/server/RequestObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/server/RequestObserver/onComplete\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello\n-            operationId: 0\n-            parentSpanId: 0\n-            spanId: 1\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Exit\n-            peer: '127.0.0.1:18080'\n-            peerId: 0\n-          - operationName: GreeterBlocking.sayHello\n-            operationId: 0\n-            parentSpanId: 0\n-            spanId: 2\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Exit\n-            peer: '127.0.0.1:18080'\n-            peerId: 0\n-          - operationName: /grpc-scenario/case/grpc-scenario\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Http\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 1\n-            componentName: ''\n-            isError: false\n-            spanType: Entry\n-            peer: ''\n-            peerId: 0\n-            tags:\n-              - {key: url, value: 'http://localhost:8080/grpc-scenario/case/grpc-scenario'}\n-              - {key: http.method, value: GET}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/client/ResponseObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-\n+- applicationCode: grpc-scenario\n+  segmentSize: gt 10\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: GreeterBlocking.sayHello\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Entry\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossProcess, parentSpanId: 2, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Request/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Request/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Request/onComplete\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Entry\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossProcess, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/server/Response/onMessage\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: Greeter.sayHello/server/Request/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Response/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: GreeterBlocking.sayHello/server/Response/onClose\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      tags:\n+      - { key: status_code, value: OK }\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: GreeterBlocking.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: GreeterBlocking.sayHello/server/Request/onComplete\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: GreeterBlocking.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/server/Response/onMessage\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: Greeter.sayHello/server/Request/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/server/Response/onClose\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      tags:\n+      - {key: status_code, value: OK}\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: Greeter.sayHello/server/Request/onComplete\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Response/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Response/onClose\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: GreeterBlockingError.sayHello\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Entry\n+      peer: ''\n+      peerId: 0\n+      refs:\n+        - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+           entryEndpointId: 0, refType: CrossProcess, parentSpanId: 5, parentTraceSegmentId: not null,\n+           parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+           entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: GreeterBlockingError.sayHello/server/Response/onClose\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: true\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      tags:\n+      - { key: status_code, value: UNKNOWN }\n+      logs:\n+      - logEvent:\n+        - { key: event, value: error }\n+        - { key: error.kind, value: java.lang.Exception }\n+        - { key: message, value: '' }\n+        - key: stack\n+          value: not null\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: GreeterBlockingError.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: GreeterBlockingError.sayHello/server/Request/onComplete\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: GreeterBlockingError.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Exit\n+      peer: '127.0.0.1:18080'\n+      peerId: 0\n+    - {operationName: GreeterBlocking.sayHello/client/Request/onComplete, operationId: 0,\n+       parentSpanId: 2, spanId: 3, spanLayer: RPCFramework, startTime: nq 0,\n+       endTime: nq 0, componentId: 23, componentName: '', isError: false,\n+       spanType: Local, peer: '', peerId: 0}\n+    - {operationName: GreeterBlocking.sayHello/client/Response/onClose, operationId: 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fae778db9b8f4f3b3244841a6f352314bc76df4"}, "originalPosition": 648}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MjA0NjYx", "url": "https://github.com/apache/skywalking/pull/4177#pullrequestreview-349204661", "createdAt": "2020-01-28T08:48:24Z", "commit": {"oid": "2fae778db9b8f4f3b3244841a6f352314bc76df4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwODo0ODoyNFrOFic6HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwODo0ODoyNFrOFic6HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY2OTUzMg==", "bodyText": "This one too.", "url": "https://github.com/apache/skywalking/pull/4177#discussion_r371669532", "createdAt": "2020-01-28T08:48:24Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/grpc-scenario/config/expectedData.yaml", "diffHunk": "@@ -15,239 +15,524 @@\n # limitations under the License.\n registryItems:\n   applications:\n-    - {grpc-scenario: 2}\n+  - { grpc-scenario: 2 }\n   instances:\n-    - {grpc-scenario: 1}\n+  - { grpc-scenario: 1 }\n   operationNames:\n-    - grpc-scenario: [Greeter.sayHello, GreeterBlocking.sayHello,\n-                      /grpc-scenario/case/grpc-scenario]\n+  - grpc-scenario: [Greeter.sayHello, GreeterBlocking.sayHello, GreeterBlockingError.sayHello, /grpc-scenario/case/grpc-scenario]\n   heartbeat: []\n segmentItems:\n-  - applicationCode: grpc-scenario\n-    segmentSize: gt 10\n-    segments:\n-      - segmentId: not null\n-        spans:\n-          - operationName: GreeterBlocking.sayHello\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Entry\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossProcess, parentSpanId: 2, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Entry\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossProcess, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: GreeterBlocking.sayHello/server/RequestObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: GreeterBlocking.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/server/RequestObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/client/ResponseObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/client/ResponseObserver/onComplete\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/server/RequestObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/server/RequestObserver/onComplete\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello\n-            operationId: 0\n-            parentSpanId: 0\n-            spanId: 1\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Exit\n-            peer: '127.0.0.1:18080'\n-            peerId: 0\n-          - operationName: GreeterBlocking.sayHello\n-            operationId: 0\n-            parentSpanId: 0\n-            spanId: 2\n-            spanLayer: RPCFramework\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 23\n-            componentName: ''\n-            isError: false\n-            spanType: Exit\n-            peer: '127.0.0.1:18080'\n-            peerId: 0\n-          - operationName: /grpc-scenario/case/grpc-scenario\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Http\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 1\n-            componentName: ''\n-            isError: false\n-            spanType: Entry\n-            peer: ''\n-            peerId: 0\n-            tags:\n-              - {key: url, value: 'http://localhost:8080/grpc-scenario/case/grpc-scenario'}\n-              - {key: http.method, value: GET}\n-      - segmentId: not null\n-        spans:\n-          - operationName: Greeter.sayHello/client/ResponseObserver/onNext\n-            operationId: 0\n-            parentSpanId: -1\n-            spanId: 0\n-            spanLayer: Unknown\n-            startTime: nq 0\n-            endTime: nq 0\n-            componentId: 0\n-            componentName: ''\n-            isError: false\n-            spanType: Local\n-            peer: ''\n-            peerId: 0\n-            refs:\n-              - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n-                 entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n-                 parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n-                 entryServiceInstanceId: 1}\n-\n+- applicationCode: grpc-scenario\n+  segmentSize: gt 10\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: GreeterBlocking.sayHello\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Entry\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossProcess, parentSpanId: 2, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Request/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Request/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Request/onComplete\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Entry\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossProcess, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/server/Response/onMessage\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: Greeter.sayHello/server/Request/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Response/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: GreeterBlocking.sayHello/server/Response/onClose\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      tags:\n+      - { key: status_code, value: OK }\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: GreeterBlocking.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: GreeterBlocking.sayHello/server/Request/onComplete\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: GreeterBlocking.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/server/Response/onMessage\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: Greeter.sayHello/server/Request/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/server/Response/onClose\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      tags:\n+      - {key: status_code, value: OK}\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: Greeter.sayHello/server/Request/onComplete\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: Greeter.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Response/onMessage\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello/client/Response/onClose\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 1, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: GreeterBlockingError.sayHello\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Entry\n+      peer: ''\n+      peerId: 0\n+      refs:\n+        - {parentEndpointId: 0, parentEndpoint: /grpc-scenario/case/grpc-scenario, networkAddressId: 0,\n+           entryEndpointId: 0, refType: CrossProcess, parentSpanId: 5, parentTraceSegmentId: not null,\n+           parentServiceInstanceId: 1, networkAddress: '127.0.0.1:18080', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+           entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: GreeterBlockingError.sayHello/server/Response/onClose\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: true\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      tags:\n+      - { key: status_code, value: UNKNOWN }\n+      logs:\n+      - logEvent:\n+        - { key: event, value: error }\n+        - { key: error.kind, value: java.lang.Exception }\n+        - { key: message, value: '' }\n+        - key: stack\n+          value: not null\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: GreeterBlockingError.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+    - operationName: GreeterBlockingError.sayHello/server/Request/onComplete\n+      operationId: 0\n+      parentSpanId: -1\n+      spanId: 0\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      peerId: 0\n+      refs:\n+      - {parentEndpointId: 0, parentEndpoint: GreeterBlockingError.sayHello, networkAddressId: 0,\n+         entryEndpointId: 0, refType: CrossThread, parentSpanId: 0, parentTraceSegmentId: not null,\n+         parentServiceInstanceId: 1, networkAddress: '', entryEndpoint: /grpc-scenario/case/grpc-scenario,\n+         entryServiceInstanceId: 1}\n+  - segmentId: not null\n+    spans:\n+    - operationName: Greeter.sayHello\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Exit\n+      peer: '127.0.0.1:18080'\n+      peerId: 0\n+    - {operationName: GreeterBlocking.sayHello/client/Request/onComplete, operationId: 0,\n+       parentSpanId: 2, spanId: 3, spanLayer: RPCFramework, startTime: nq 0,\n+       endTime: nq 0, componentId: 23, componentName: '', isError: false,\n+       spanType: Local, peer: '', peerId: 0}\n+    - {operationName: GreeterBlocking.sayHello/client/Response/onClose, operationId: 0,\n+       parentSpanId: 2, spanId: 4, spanLayer: RPCFramework, startTime: nq 0,\n+       endTime: nq 0, componentId: 23, componentName: '', isError: false,\n+       spanType: Local, peer: '', peerId: 0}\n+    - operationName: GreeterBlocking.sayHello\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 2\n+      spanLayer: RPCFramework\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 23\n+      componentName: ''\n+      isError: false\n+      spanType: Exit\n+      peer: '127.0.0.1:18080'\n+      peerId: 0\n+    - {operationName: GreeterBlockingError.sayHello/client/Request/onComplete, operationId: 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fae778db9b8f4f3b3244841a6f352314bc76df4"}, "originalPosition": 665}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d11d83299211f04e4cde3e4198607e3ed2dfac8", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/3d11d83299211f04e4cde3e4198607e3ed2dfac8", "committedDate": "2020-01-29T04:03:59Z", "message": "Fix test format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f00e93c0b53eb0b116bb769799c7bd650743bf1", "author": {"user": {"login": "GuoDuanLZ", "name": null}}, "url": "https://github.com/apache/skywalking/commit/5f00e93c0b53eb0b116bb769799c7bd650743bf1", "committedDate": "2020-01-29T05:35:55Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODgxNjAx", "url": "https://github.com/apache/skywalking/pull/4177#pullrequestreview-349881601", "createdAt": "2020-01-29T06:17:17Z", "commit": {"oid": "5f00e93c0b53eb0b116bb769799c7bd650743bf1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23be98441c0aee38119d1beace166be57930fcbf", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/23be98441c0aee38119d1beace166be57930fcbf", "committedDate": "2020-01-29T06:25:39Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9608d0733ff07bd69ac0ef9d6682fc81dd417aa0", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/9608d0733ff07bd69ac0ef9d6682fc81dd417aa0", "committedDate": "2020-01-29T09:10:27Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6e143e6a2ed9f33f4ae95f9741d8dca024b3ec2", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/a6e143e6a2ed9f33f4ae95f9741d8dca024b3ec2", "committedDate": "2020-01-30T09:52:02Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d86e017fc5027fe9e86b7d39c9313999ed03e02f", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/d86e017fc5027fe9e86b7d39c9313999ed03e02f", "committedDate": "2020-01-30T11:16:15Z", "message": "Merge branch 'master' into grpc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzQ5MDU0", "url": "https://github.com/apache/skywalking/pull/4177#pullrequestreview-350749054", "createdAt": "2020-01-30T11:18:27Z", "commit": {"oid": "d86e017fc5027fe9e86b7d39c9313999ed03e02f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2538, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}