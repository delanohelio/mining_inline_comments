{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNjAyMzIz", "number": 4422, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMjoyNjowNVrODjT-0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMjoyNjowNVrODjT-0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzU0MTMwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/parser/standardization/ReferenceIdExchanger.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMjoyNjowNVrOFvDQ4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMjo0MTo1OFrOFvDggg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4MDg2Ng==", "bodyText": "It should be Client in Ref, right?", "url": "https://github.com/apache/skywalking/pull/4422#discussion_r384880866", "createdAt": "2020-02-27T02:26:05Z", "author": {"login": "arugal"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/parser/standardization/ReferenceIdExchanger.java", "diffHunk": "@@ -139,29 +139,19 @@ public boolean exchange(ReferenceDecorator standardBuilder, int serviceId) {\n                 standardBuilder.setNetworkAddressId(networkAddressId);\n                 standardBuilder.setNetworkAddress(Const.EMPTY_STRING);\n             }\n-        } else {\n-            /**\n-             * Since 6.6.0, endpoint id could be -1, as it is not an endpoint. Such as local span and exist span.\n-             */\n         }\n         return exchanged;\n     }\n \n     /**\n-     * Endpoint in ref could be local or exit span's operation name. Especially if it is local span operation name,\n-     * exchange may not happen at agent, such as Java agent, then put literal endpoint string in the header, Need to try\n-     * to get the id by assuming the endpoint name is detected at server, local or client.\n-     * <p>\n-     * If agent does the exchange, then always use endpoint id.\n+     * @since 6.6.0 The endpoint in the ref should be server endpoint only. The agent will/should use `-1`, when it can't\n+     * find the endpoint of entry span in the current tracing context when build the ref.\n+     * @since 5.0 Endpoint in ref could be local or exit span's operation name. Especially if it is local span operation\n+     * name, * exchange may not happen at agent, such as Java agent, then put literal endpoint string in the header,\n+     * Need to try * to get the id by assuming the endpoint name is detected at server, local or client. * <p> * If\n+     * agent does the exchange, then always use endpoint id.\n      */\n     private int getEndpointId(int serviceId, String endpointName) {\n-        int endpointId = endpointInventoryRegister.get(serviceId, endpointName, DetectPoint.SERVER.ordinal());\n-        if (endpointId == Const.NONE) {\n-            endpointId = endpointInventoryRegister.get(serviceId, endpointName, DetectPoint.CLIENT.ordinal());\n-            if (endpointId == Const.NONE) {\n-                endpointId = endpointInventoryRegister.get(serviceId, endpointName, DetectPoint.UNRECOGNIZED.ordinal());\n-            }\n-        }\n-        return endpointId;\n+        return endpointInventoryRegister.getOrCreate(serviceId, endpointName, DetectPoint.SERVER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56ae26a0b1fe32c8dfe8ec5c8ea716bb1a7c891b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4MTE0MA==", "bodyText": "No, it isn't. The operation name is from the entry span, which means, detect from server-side plugin, such as SpringMVC, Tomcat.", "url": "https://github.com/apache/skywalking/pull/4422#discussion_r384881140", "createdAt": "2020-02-27T02:27:15Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/parser/standardization/ReferenceIdExchanger.java", "diffHunk": "@@ -139,29 +139,19 @@ public boolean exchange(ReferenceDecorator standardBuilder, int serviceId) {\n                 standardBuilder.setNetworkAddressId(networkAddressId);\n                 standardBuilder.setNetworkAddress(Const.EMPTY_STRING);\n             }\n-        } else {\n-            /**\n-             * Since 6.6.0, endpoint id could be -1, as it is not an endpoint. Such as local span and exist span.\n-             */\n         }\n         return exchanged;\n     }\n \n     /**\n-     * Endpoint in ref could be local or exit span's operation name. Especially if it is local span operation name,\n-     * exchange may not happen at agent, such as Java agent, then put literal endpoint string in the header, Need to try\n-     * to get the id by assuming the endpoint name is detected at server, local or client.\n-     * <p>\n-     * If agent does the exchange, then always use endpoint id.\n+     * @since 6.6.0 The endpoint in the ref should be server endpoint only. The agent will/should use `-1`, when it can't\n+     * find the endpoint of entry span in the current tracing context when build the ref.\n+     * @since 5.0 Endpoint in ref could be local or exit span's operation name. Especially if it is local span operation\n+     * name, * exchange may not happen at agent, such as Java agent, then put literal endpoint string in the header,\n+     * Need to try * to get the id by assuming the endpoint name is detected at server, local or client. * <p> * If\n+     * agent does the exchange, then always use endpoint id.\n      */\n     private int getEndpointId(int serviceId, String endpointName) {\n-        int endpointId = endpointInventoryRegister.get(serviceId, endpointName, DetectPoint.SERVER.ordinal());\n-        if (endpointId == Const.NONE) {\n-            endpointId = endpointInventoryRegister.get(serviceId, endpointName, DetectPoint.CLIENT.ordinal());\n-            if (endpointId == Const.NONE) {\n-                endpointId = endpointInventoryRegister.get(serviceId, endpointName, DetectPoint.UNRECOGNIZED.ordinal());\n-            }\n-        }\n-        return endpointId;\n+        return endpointInventoryRegister.getOrCreate(serviceId, endpointName, DetectPoint.SERVER);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4MDg2Ng=="}, "originalCommit": {"oid": "56ae26a0b1fe32c8dfe8ec5c8ea716bb1a7c891b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4NDg2Ng==", "bodyText": "Got it.", "url": "https://github.com/apache/skywalking/pull/4422#discussion_r384884866", "createdAt": "2020-02-27T02:41:58Z", "author": {"login": "arugal"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/parser/standardization/ReferenceIdExchanger.java", "diffHunk": "@@ -139,29 +139,19 @@ public boolean exchange(ReferenceDecorator standardBuilder, int serviceId) {\n                 standardBuilder.setNetworkAddressId(networkAddressId);\n                 standardBuilder.setNetworkAddress(Const.EMPTY_STRING);\n             }\n-        } else {\n-            /**\n-             * Since 6.6.0, endpoint id could be -1, as it is not an endpoint. Such as local span and exist span.\n-             */\n         }\n         return exchanged;\n     }\n \n     /**\n-     * Endpoint in ref could be local or exit span's operation name. Especially if it is local span operation name,\n-     * exchange may not happen at agent, such as Java agent, then put literal endpoint string in the header, Need to try\n-     * to get the id by assuming the endpoint name is detected at server, local or client.\n-     * <p>\n-     * If agent does the exchange, then always use endpoint id.\n+     * @since 6.6.0 The endpoint in the ref should be server endpoint only. The agent will/should use `-1`, when it can't\n+     * find the endpoint of entry span in the current tracing context when build the ref.\n+     * @since 5.0 Endpoint in ref could be local or exit span's operation name. Especially if it is local span operation\n+     * name, * exchange may not happen at agent, such as Java agent, then put literal endpoint string in the header,\n+     * Need to try * to get the id by assuming the endpoint name is detected at server, local or client. * <p> * If\n+     * agent does the exchange, then always use endpoint id.\n      */\n     private int getEndpointId(int serviceId, String endpointName) {\n-        int endpointId = endpointInventoryRegister.get(serviceId, endpointName, DetectPoint.SERVER.ordinal());\n-        if (endpointId == Const.NONE) {\n-            endpointId = endpointInventoryRegister.get(serviceId, endpointName, DetectPoint.CLIENT.ordinal());\n-            if (endpointId == Const.NONE) {\n-                endpointId = endpointInventoryRegister.get(serviceId, endpointName, DetectPoint.UNRECOGNIZED.ordinal());\n-            }\n-        }\n-        return endpointId;\n+        return endpointInventoryRegister.getOrCreate(serviceId, endpointName, DetectPoint.SERVER);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4MDg2Ng=="}, "originalCommit": {"oid": "56ae26a0b1fe32c8dfe8ec5c8ea716bb1a7c891b"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4380, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}