{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMTE3NjEw", "number": 5851, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzo0NjozOVrOE51n3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzozNjowNlrOE54jgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDgyODQ2OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/service-auto-grouping.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzo0NjozOVrOH0jTWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzo1MzowNlrOH0jZnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2NjM5Mg==", "bodyText": "Why not double \":\", typo?", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524866392", "createdAt": "2020-11-17T03:46:39Z", "author": {"login": "hanahmily"}, "path": "docs/en/setup/backend/service-auto-grouping.md", "diffHunk": "@@ -0,0 +1,16 @@\n+# Service Auto Grouping\n+SkyWalking supports various default and customized dashboard templates. \n+Each template provides the reasonable layout for the services in the particular field. \n+Such as, services with a language agent installed \n+could have different metrics with service detected by the service mesh observability solution, \n+and different with SkyWalking's self-observability metrics dashboard.\n+\n+Therefore, since 8.3.0, SkyWalking OAP would generate the group based on this simple naming format.\n+\n+### ${service name} = [${group name}:]${logic name}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f94cfc1d0af58f3f932b0a17cc716302fa750812"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2NjUxNw==", "bodyText": "Typo.", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524866517", "createdAt": "2020-11-17T03:47:07Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/service-auto-grouping.md", "diffHunk": "@@ -0,0 +1,16 @@\n+# Service Auto Grouping\n+SkyWalking supports various default and customized dashboard templates. \n+Each template provides the reasonable layout for the services in the particular field. \n+Such as, services with a language agent installed \n+could have different metrics with service detected by the service mesh observability solution, \n+and different with SkyWalking's self-observability metrics dashboard.\n+\n+Therefore, since 8.3.0, SkyWalking OAP would generate the group based on this simple naming format.\n+\n+### ${service name} = [${group name}:]${logic name}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2NjM5Mg=="}, "originalCommit": {"oid": "f94cfc1d0af58f3f932b0a17cc716302fa750812"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2Nzk5OQ==", "bodyText": "Done.", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524867999", "createdAt": "2020-11-17T03:53:06Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/service-auto-grouping.md", "diffHunk": "@@ -0,0 +1,16 @@\n+# Service Auto Grouping\n+SkyWalking supports various default and customized dashboard templates. \n+Each template provides the reasonable layout for the services in the particular field. \n+Such as, services with a language agent installed \n+could have different metrics with service detected by the service mesh observability solution, \n+and different with SkyWalking's self-observability metrics dashboard.\n+\n+Therefore, since 8.3.0, SkyWalking OAP would generate the group based on this simple naming format.\n+\n+### ${service name} = [${group name}:]${logic name}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2NjM5Mg=="}, "originalCommit": {"oid": "f94cfc1d0af58f3f932b0a17cc716302fa750812"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDgzNjA0OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/backend-setup.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzo1MDo1OFrOH0jXkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzo1NjozOVrOH0jdJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2NzQ3Mw==", "bodyText": "\"..\" on the end", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524867473", "createdAt": "2020-11-17T03:50:58Z", "author": {"login": "dmsolr"}, "path": "docs/en/setup/backend/backend-setup.md", "diffHunk": "@@ -108,6 +108,7 @@ or 3rd party configuration management system.\n 1. [Uninstrumented Gateways](uninstrumented-gateways.md). Configure gateways/proxies that are not supported by SkyWalking agent plugins,\n to reflect the delegation in topology graph.\n 1. [Apdex threshold](apdex-threshold.md). Configure the thresholds for different services if Apdex calculation is activated in the OAL.\n+1. [Service Grouping](service-auto-grouping.md). An automatic grouping mechanism for all services based on name..", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f94cfc1d0af58f3f932b0a17cc716302fa750812"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2ODkwMA==", "bodyText": "Done.", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524868900", "createdAt": "2020-11-17T03:56:39Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-setup.md", "diffHunk": "@@ -108,6 +108,7 @@ or 3rd party configuration management system.\n 1. [Uninstrumented Gateways](uninstrumented-gateways.md). Configure gateways/proxies that are not supported by SkyWalking agent plugins,\n to reflect the delegation in topology graph.\n 1. [Apdex threshold](apdex-threshold.md). Configure the thresholds for different services if Apdex calculation is activated in the OAL.\n+1. [Service Grouping](service-auto-grouping.md). An automatic grouping mechanism for all services based on name..", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2NzQ3Mw=="}, "originalCommit": {"oid": "f94cfc1d0af58f3f932b0a17cc716302fa750812"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDk4NjE2OnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/manual/service/ServiceTraffic.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNToxNDozOVrOH0krgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNTo1NDo1M1rOH0lYVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg4ODk2Mg==", "bodyText": "need to keep group as a service name prefix?", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524888962", "createdAt": "2020-11-17T05:14:39Z", "author": {"login": "hailin0"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/manual/service/ServiceTraffic.java", "diffHunk": "@@ -93,14 +101,23 @@ public ServiceTraffic map2Data(final Map<String, Object> dbMap) {\n             ServiceTraffic serviceTraffic = new ServiceTraffic();\n             serviceTraffic.setName((String) dbMap.get(NAME));\n             serviceTraffic.setNodeType(NodeType.valueOf(((Number) dbMap.get(NODE_TYPE)).intValue()));\n+            serviceTraffic.setGroup((String) dbMap.get(GROUP));\n             return serviceTraffic;\n         }\n \n         @Override\n         public Map<String, Object> data2Map(final ServiceTraffic storageData) {\n+            final String serviceName = storageData.getName();\n+            if (NodeType.Normal.equals(storageData.getNodeType())) {\n+                int groupIdx = serviceName.indexOf(DOUBLE_COLONS_SPLIT);\n+                if (groupIdx > 0) {\n+                    storageData.setGroup(serviceName.substring(0, groupIdx));\n+                }\n+            }\n             Map<String, Object> map = new HashMap<>();\n-            map.put(NAME, storageData.getName());\n+            map.put(NAME, serviceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbf13426468eec36464133632a1a3d2768630bba"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg5NDk2MQ==", "bodyText": "Yes, we don't remove it. As the name is a part of metrics key. Changing it will break many things.", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524894961", "createdAt": "2020-11-17T05:36:08Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/manual/service/ServiceTraffic.java", "diffHunk": "@@ -93,14 +101,23 @@ public ServiceTraffic map2Data(final Map<String, Object> dbMap) {\n             ServiceTraffic serviceTraffic = new ServiceTraffic();\n             serviceTraffic.setName((String) dbMap.get(NAME));\n             serviceTraffic.setNodeType(NodeType.valueOf(((Number) dbMap.get(NODE_TYPE)).intValue()));\n+            serviceTraffic.setGroup((String) dbMap.get(GROUP));\n             return serviceTraffic;\n         }\n \n         @Override\n         public Map<String, Object> data2Map(final ServiceTraffic storageData) {\n+            final String serviceName = storageData.getName();\n+            if (NodeType.Normal.equals(storageData.getNodeType())) {\n+                int groupIdx = serviceName.indexOf(DOUBLE_COLONS_SPLIT);\n+                if (groupIdx > 0) {\n+                    storageData.setGroup(serviceName.substring(0, groupIdx));\n+                }\n+            }\n             Map<String, Object> map = new HashMap<>();\n-            map.put(NAME, storageData.getName());\n+            map.put(NAME, serviceName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg4ODk2Mg=="}, "originalCommit": {"oid": "bbf13426468eec36464133632a1a3d2768630bba"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkwMDQzNw==", "bodyText": "ok", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524900437", "createdAt": "2020-11-17T05:54:53Z", "author": {"login": "hailin0"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/manual/service/ServiceTraffic.java", "diffHunk": "@@ -93,14 +101,23 @@ public ServiceTraffic map2Data(final Map<String, Object> dbMap) {\n             ServiceTraffic serviceTraffic = new ServiceTraffic();\n             serviceTraffic.setName((String) dbMap.get(NAME));\n             serviceTraffic.setNodeType(NodeType.valueOf(((Number) dbMap.get(NODE_TYPE)).intValue()));\n+            serviceTraffic.setGroup((String) dbMap.get(GROUP));\n             return serviceTraffic;\n         }\n \n         @Override\n         public Map<String, Object> data2Map(final ServiceTraffic storageData) {\n+            final String serviceName = storageData.getName();\n+            if (NodeType.Normal.equals(storageData.getNodeType())) {\n+                int groupIdx = serviceName.indexOf(DOUBLE_COLONS_SPLIT);\n+                if (groupIdx > 0) {\n+                    storageData.setGroup(serviceName.substring(0, groupIdx));\n+                }\n+            }\n             Map<String, Object> map = new HashMap<>();\n-            map.put(NAME, storageData.getName());\n+            map.put(NAME, serviceName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg4ODk2Mg=="}, "originalCommit": {"oid": "bbf13426468eec36464133632a1a3d2768630bba"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTMwODgyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/TableMetaInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzozNjowNlrOH0nldQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzozODo0NFrOH0np2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkzNjU2NQ==", "bodyText": "TagName.GROUP", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524936565", "createdAt": "2020-11-17T07:36:06Z", "author": {"login": "dmsolr"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/TableMetaInfo.java", "diffHunk": "@@ -62,8 +62,9 @@ public static void addModel(Model model) {\n                 || EndpointTraffic.INDEX_NAME.equals(model.getName())) {\n                 storageAndTagMap.put(EndpointTraffic.SERVICE_ID, InfluxConstants.TagName.SERVICE_ID);\n             } else {\n-                // service_traffic  name, node_type\n+                // service_traffic  name, node_type, group\n                 storageAndTagMap.put(ServiceTraffic.NODE_TYPE, InfluxConstants.TagName.NODE_TYPE);\n+                storageAndTagMap.put(ServiceTraffic.GROUP, InfluxConstants.TagName.NODE_TYPE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c0ad45f8f9c110d8e75deca8f8204c3d0a03c4f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkzNzY4OQ==", "bodyText": "Done.", "url": "https://github.com/apache/skywalking/pull/5851#discussion_r524937689", "createdAt": "2020-11-17T07:38:44Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/TableMetaInfo.java", "diffHunk": "@@ -62,8 +62,9 @@ public static void addModel(Model model) {\n                 || EndpointTraffic.INDEX_NAME.equals(model.getName())) {\n                 storageAndTagMap.put(EndpointTraffic.SERVICE_ID, InfluxConstants.TagName.SERVICE_ID);\n             } else {\n-                // service_traffic  name, node_type\n+                // service_traffic  name, node_type, group\n                 storageAndTagMap.put(ServiceTraffic.NODE_TYPE, InfluxConstants.TagName.NODE_TYPE);\n+                storageAndTagMap.put(ServiceTraffic.GROUP, InfluxConstants.TagName.NODE_TYPE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkzNjU2NQ=="}, "originalCommit": {"oid": "2c0ad45f8f9c110d8e75deca8f8204c3d0a03c4f"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4788, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}