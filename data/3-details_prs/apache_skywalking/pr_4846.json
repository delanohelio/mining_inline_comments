{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NTg1MzA2", "number": 4846, "title": "New feature provided : new plugin for influxdb-java client", "bodyText": "Please answer these questions before submitting pull request\n\nWhy submit this pull request?\nNew feature provided\n\n\nadd new java sdk plugin : InfluxDB\n\ni develop a new plugin for influxdb-java client\ni\u2018ve done the unit test and access influxdb can display on the topology and trace history", "createdAt": "2020-05-31T09:29:26Z", "url": "https://github.com/apache/skywalking/pull/4846", "merged": true, "mergeCommit": {"oid": "08897ce5f8962d118d7da795b0d3decd6d3db851"}, "closed": true, "closedAt": "2020-06-21T14:35:46Z", "author": {"login": "dagmom"}, "timelineItems": {"totalCount": 46, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmknYUAH2gAyNDI1NTg1MzA2OmZhZmNmMjkwYjA0NjdmNjEyMmQ0M2JjNGI3NDc4Nzg1Mjk1ZjU5MDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABctchJIgFqTQzNDUwMjgxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fafcf290b0467f6122d43bc4b7478785295f5906", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/fafcf290b0467f6122d43bc4b7478785295f5906", "committedDate": "2020-05-31T05:14:48Z", "message": "Bulk executed with failures\uff0cthen log detail message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81d07c0c03c736e451c9d679c7a97fefb22b9143", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/81d07c0c03c736e451c9d679c7a97fefb22b9143", "committedDate": "2020-05-31T05:25:19Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcc9a71acdb7122d497c4f1afa1216eaf845d1bf", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/dcc9a71acdb7122d497c4f1afa1216eaf845d1bf", "committedDate": "2020-05-31T08:59:30Z", "message": "add new java sdk plugin : InfluxDB"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d28d344f8e801fa51e489dc6058048e2684ce7a1", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/d28d344f8e801fa51e489dc6058048e2684ce7a1", "committedDate": "2020-05-31T09:29:44Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7a5d8a23512e16c1194929b57cf55f690d60fae", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/d7a5d8a23512e16c1194929b57cf55f690d60fae", "committedDate": "2020-06-03T13:33:46Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7121812dfbfa9fa2cf41ac0dd770e484386ae231", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/7121812dfbfa9fa2cf41ac0dd770e484386ae231", "committedDate": "2020-06-03T13:35:18Z", "message": "plugin-test : influxdb-scenario"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f9938100a5f64f4e4dcaefde1ac312f86c8aa1b", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/2f9938100a5f64f4e4dcaefde1ac312f86c8aa1b", "committedDate": "2020-06-03T14:55:16Z", "message": "plugin-test : influxdb-scenario\nsupport-version.list modify form old version and healthCheck use ping() api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e0c63495ae626275d66ea729acce708f1eb9d3b", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/2e0c63495ae626275d66ea729acce708f1eb9d3b", "committedDate": "2020-06-03T15:00:58Z", "message": "plugin-test : upgrade influxdb-scenario support-version.list form 2.5 ~ 2.17"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "129689027f6ce0e71ff688bcdf9e7aaa7459419d", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/129689027f6ce0e71ff688bcdf9e7aaa7459419d", "committedDate": "2020-06-03T15:12:15Z", "message": "plugin-test : add influxdb-scenario to Github Actions Job."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9caa661c64a5eca8d32c7708cd1e7dc05f9cf3f3", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/9caa661c64a5eca8d32c7708cd1e7dc05f9cf3f3", "committedDate": "2020-06-03T15:14:00Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b151ad3f231c5c90b555003fcbc5d82fa9dc600a", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/b151ad3f231c5c90b555003fcbc5d82fa9dc600a", "committedDate": "2020-06-04T16:33:30Z", "message": "raf check : exclude [jacoco] dir --> generated file from test agent plugin scenarios"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca855b4a5837bf490727b3c9357ade2c38753a64", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/ca855b4a5837bf490727b3c9357ade2c38753a64", "committedDate": "2020-06-04T16:33:30Z", "message": "influxdb plugin : resolve raf problem and unit test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzE5NTYx", "url": "https://github.com/apache/skywalking/pull/4846#pullrequestreview-425719561", "createdAt": "2020-06-06T06:53:38Z", "commit": {"oid": "ca855b4a5837bf490727b3c9357ade2c38753a64"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwNjo1MzozOFrOGgCSDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwNzowOTowNVrOGgCVww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NTAwNQ==", "bodyText": "The artifactId and the description don't match, one says it's for 2.x while the other says it's for 1.x", "url": "https://github.com/apache/skywalking/pull/4846#discussion_r436245005", "createdAt": "2020-06-06T06:53:38Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/influxdb-2.x-plugin/pom.xml", "diffHunk": "@@ -0,0 +1,47 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>apm-sdk-plugin</artifactId>\n+    <groupId>org.apache.skywalking</groupId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>apm-influxdb-2.x-plugin</artifactId>\n+  <description>This plugin is for use with InfluxDB 1.x.</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca855b4a5837bf490727b3c9357ade2c38753a64"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NTAzOQ==", "bodyText": "Capitalize the first letter of the sentence please", "url": "https://github.com/apache/skywalking/pull/4846#discussion_r436245039", "createdAt": "2020-06-06T06:54:50Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/influxdb-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/influxdb/define/InfluxDBInstrumentation.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.influxdb.define;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.ConstructorInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.InstanceMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.ClassInstanceMethodsEnhancePluginDefine;\n+import org.apache.skywalking.apm.agent.core.plugin.match.ClassMatch;\n+import org.apache.skywalking.apm.agent.core.plugin.match.NameMatch;\n+import org.apache.skywalking.apm.plugin.influxdb.InfluxDBMethodMatch;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.takesArgument;\n+\n+/**\n+ * enhance InfluxDB InfluxDBFactory\n+ * really impl class {@link org.influxdb.impl.InfluxDBImpl}\n+ *\n+ * @since  2020/05/22", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca855b4a5837bf490727b3c9357ade2c38753a64"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NTExNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String INFLUXDB_METHOD_INTERCEPT_CLASS = \"org.apache.skywalking.apm.plugin.influxdb.interceptor.InfluxDBMethodInterceptor\";\n          \n          \n            \n                private static final String INFLUXDB_METHOD_INTERCEPT_CLASS = \"org.apache.skywalking.apm.plugin.influxdb.interceptor.InfluxDBMethodInterceptor\";", "url": "https://github.com/apache/skywalking/pull/4846#discussion_r436245114", "createdAt": "2020-06-06T06:55:55Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/influxdb-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/influxdb/define/InfluxDBInstrumentation.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.influxdb.define;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.ConstructorInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.InstanceMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.ClassInstanceMethodsEnhancePluginDefine;\n+import org.apache.skywalking.apm.agent.core.plugin.match.ClassMatch;\n+import org.apache.skywalking.apm.agent.core.plugin.match.NameMatch;\n+import org.apache.skywalking.apm.plugin.influxdb.InfluxDBMethodMatch;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.takesArgument;\n+\n+/**\n+ * enhance InfluxDB InfluxDBFactory\n+ * really impl class {@link org.influxdb.impl.InfluxDBImpl}\n+ *\n+ * @since  2020/05/22\n+ */\n+public class InfluxDBInstrumentation extends ClassInstanceMethodsEnhancePluginDefine {\n+\n+    private static final String ENHANCE_CLASS = \"org.influxdb.impl.InfluxDBImpl\";\n+    private static final String INTERCEPTOR_CLASS = \"org.apache.skywalking.apm.plugin.influxdb.interceptor.InfluxDBConstructorInterceptor\";\n+  private static final String INFLUXDB_METHOD_INTERCEPT_CLASS = \"org.apache.skywalking.apm.plugin.influxdb.interceptor.InfluxDBMethodInterceptor\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca855b4a5837bf490727b3c9357ade2c38753a64"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NTE2OA==", "bodyText": "Remove if useless, or fix it if assertion is failed", "url": "https://github.com/apache/skywalking/pull/4846#discussion_r436245168", "createdAt": "2020-06-06T06:56:55Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/influxdb-2.x-plugin/src/test/java/org/apache/skywalking/apm/plugin/influxdb/InfluxDBMethodInterceptorTest.java", "diffHunk": "@@ -0,0 +1,147 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.influxdb;\n+\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractTracingSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.LogDataEntity;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.context.trace.TraceSegment;\n+import org.apache.skywalking.apm.agent.core.context.util.TagValuePair;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.test.helper.SegmentHelper;\n+import org.apache.skywalking.apm.agent.test.helper.SpanHelper;\n+import org.apache.skywalking.apm.agent.test.tools.AgentServiceRule;\n+import org.apache.skywalking.apm.agent.test.tools.SegmentStorage;\n+import org.apache.skywalking.apm.agent.test.tools.SegmentStoragePoint;\n+import org.apache.skywalking.apm.agent.test.tools.TracingSegmentRunner;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+import org.apache.skywalking.apm.plugin.influxdb.interceptor.InfluxDBMethodInterceptor;\n+import org.hamcrest.CoreMatchers;\n+import org.influxdb.InfluxDBException;\n+import org.influxdb.dto.Point;\n+import org.influxdb.impl.InfluxDBImpl;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+import org.powermock.modules.junit4.PowerMockRunnerDelegate;\n+\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+import static junit.framework.TestCase.assertNotNull;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(PowerMockRunner.class)\n+@PowerMockRunnerDelegate(TracingSegmentRunner.class)\n+public class InfluxDBMethodInterceptorTest {\n+\n+    @SegmentStoragePoint\n+    private SegmentStorage segmentStorage;\n+\n+    @Rule\n+    public AgentServiceRule serviceRule = new AgentServiceRule();\n+\n+    @Mock\n+    private EnhancedInstance enhancedInstance;\n+\n+    private InfluxDBMethodInterceptor interceptor;\n+\n+    private Object[] allArgument;\n+\n+    private Class[] argumentType;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        allArgument = new Object[] {\n+            Point.measurement(\"cpu\")\n+                .tag(\"host\", \"127.0.0.1\")\n+                .addField(\"use_idle\", 0.8)\n+                .build()\n+        };\n+        argumentType = new Class[] {\n+            Point.class\n+        };\n+\n+        interceptor = new InfluxDBMethodInterceptor();\n+        when(enhancedInstance.getSkyWalkingDynamicField()).thenReturn(\"http://127.0.0.1:8086\");\n+    }\n+\n+    @Test\n+    public void testIntercept() throws Throwable {\n+        interceptor.beforeMethod(enhancedInstance, getMockWriteMethod(), allArgument, argumentType, null);\n+        interceptor.afterMethod(enhancedInstance, getMockWriteMethod(), allArgument, argumentType, null);\n+\n+        TraceSegment traceSegment = segmentStorage.getTraceSegments().get(0);\n+        List<AbstractTracingSpan> spans = SegmentHelper.getSpans(traceSegment);\n+        assertThat(spans.size(), is(1));\n+        assertInfluxDBSpan(spans.get(0));\n+    }\n+\n+    @Test\n+    public void testInterceptWithException() throws Throwable {\n+        interceptor.beforeMethod(enhancedInstance, getMockWriteMethod(), allArgument, argumentType, null);\n+        interceptor.handleMethodException(enhancedInstance, getMockWriteMethod(), allArgument, argumentType, new InfluxDBException(\"test exception\"));\n+        interceptor.afterMethod(enhancedInstance, getMockWriteMethod(), allArgument, argumentType, null);\n+\n+        TraceSegment traceSegment = segmentStorage.getTraceSegments().get(0);\n+        List<AbstractTracingSpan> spans = SegmentHelper.getSpans(traceSegment);\n+        assertThat(spans.size(), is(1));\n+        assertInfluxDBSpan(spans.get(0));\n+\n+        assertLogData(SpanHelper.getLogs(spans.get(0)));\n+    }\n+\n+    private void assertLogData(List<LogDataEntity> logDataEntities) {\n+        assertThat(logDataEntities.size(), is(1));\n+        LogDataEntity logData = logDataEntities.get(0);\n+        Assert.assertThat(logData.getLogs().size(), is(4));\n+        Assert.assertThat(logData.getLogs().get(0).getValue(), CoreMatchers.<Object>is(\"error\"));\n+        Assert.assertThat(logData.getLogs()\n+                                 .get(1)\n+                                 .getValue(), CoreMatchers.<Object>is(InfluxDBException.class.getName()));\n+        Assert.assertEquals(\"test exception\", logData.getLogs().get(2).getValue());\n+        assertNotNull(logData.getLogs().get(3).getValue());\n+    }\n+\n+    private void assertInfluxDBSpan(AbstractTracingSpan span) {\n+        assertThat(span.getOperationName(), is(\"InfluxDB/write\"));\n+        assertThat(span.isExit(), is(true));\n+        assertThat(SpanHelper.getComponentId(span), is(ComponentsDefine.INFLUXDB_JAVA.getId()));\n+        List<TagValuePair> tags = SpanHelper.getTags(span);\n+        assertThat(tags.get(0).getValue(), is(\"InfluxDB\"));\n+//        assertThat(tags.get(1).getValue(), is(\"write \".concat(allArgument[0].toString())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca855b4a5837bf490727b3c9357ade2c38753a64"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NTMxNA==", "bodyText": "Remove author tag", "url": "https://github.com/apache/skywalking/pull/4846#discussion_r436245314", "createdAt": "2020-06-06T06:59:06Z", "author": {"login": "kezhenxu94"}, "path": "test/plugin/scenarios/influxdb-scenario/src/main/java/org/apache/skywalking/apm/testcase/influxdb/executor/InfluxDBExecutor.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.influxdb.executor;\n+\n+import org.influxdb.InfluxDB;\n+import org.influxdb.InfluxDBFactory;\n+import org.influxdb.dto.Point;\n+import org.influxdb.dto.Pong;\n+import org.influxdb.dto.Query;\n+import org.influxdb.dto.QueryResult;\n+\n+/**\n+ * InfluxDBExecutor\n+ *\n+ * @author guhao\n+ * @since 2020/6/3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca855b4a5837bf490727b3c9357ade2c38753a64"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NTM2Mg==", "bodyText": "Remove this if it's useless", "url": "https://github.com/apache/skywalking/pull/4846#discussion_r436245362", "createdAt": "2020-06-06T07:00:05Z", "author": {"login": "kezhenxu94"}, "path": "test/plugin/scenarios/influxdb-scenario/src/test/java/org/apache/skywalking/apm/testcase/influxdb/executor/InfluxDBExecutorTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.influxdb.executor;\n+\n+/**\n+ * InfluxDBExecutorTest\n+ *\n+ * @author guhao\n+ * @since 2020/6/3\n+ */\n+public class InfluxDBExecutorTest {\n+\n+//  @Test\n+//  public void testPing(){\n+//    InfluxDBExecutor executor = new InfluxDBExecutor(\"http://localhost:8086\");\n+//    Pong pong = executor.ping();\n+//    System.out.println(pong.getVersion());\n+//    Assert.assertNotNull(pong.getVersion());\n+//  }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca855b4a5837bf490727b3c9357ade2c38753a64"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NTk1NQ==", "bodyText": "This is good for encapsulation, but it's a pitfall that we check third-party classes in classes whose name end with *Instrumentation\n\n  \n    \n      skywalking/apm-checkstyle/checkStyle.xml\n    \n    \n        Lines 122 to 129\n      in\n      f3d907b\n    \n    \n    \n    \n\n        \n          \n           <module name=\"ImportControl\"> \n        \n\n        \n          \n               <property name=\"file\" value=\"${import.control}\"/> \n        \n\n        \n          \n               <property name=\"path\" value=\"apm-sniffer/(apm-sdk-plugin|bootstrap-plugins|optional-plugins)/.+/src/main/.+Instrumentation.java$\"/> \n        \n\n        \n          \n           </module> \n        \n\n        \n          \n            \n        \n\n        \n          \n           <module name=\"ImportControl\"> \n        \n\n        \n          \n               <property name=\"file\" value=\"${import.control}\"/> \n        \n\n        \n          \n               <property name=\"path\" value=\"apm-sniffer/apm-toolkit-activation/.+/src/main/.+Activation.java$\"/> \n        \n    \n  \n\n\nto avoid issues like this #2871 , but this breaks the checks, although there is no third-party class in the InfluxDBMethodMatch for now, other reviewers should pay attention to this class in the future, FYI @wu-sheng", "url": "https://github.com/apache/skywalking/pull/4846#discussion_r436245955", "createdAt": "2020-06-06T07:09:05Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/influxdb-2.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/influxdb/define/InfluxDBInstrumentation.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.influxdb.define;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.ConstructorInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.InstanceMethodsInterceptPoint;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.ClassInstanceMethodsEnhancePluginDefine;\n+import org.apache.skywalking.apm.agent.core.plugin.match.ClassMatch;\n+import org.apache.skywalking.apm.agent.core.plugin.match.NameMatch;\n+import org.apache.skywalking.apm.plugin.influxdb.InfluxDBMethodMatch;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.takesArgument;\n+\n+/**\n+ * enhance InfluxDB InfluxDBFactory\n+ * really impl class {@link org.influxdb.impl.InfluxDBImpl}\n+ *\n+ * @since  2020/05/22\n+ */\n+public class InfluxDBInstrumentation extends ClassInstanceMethodsEnhancePluginDefine {\n+\n+    private static final String ENHANCE_CLASS = \"org.influxdb.impl.InfluxDBImpl\";\n+    private static final String INTERCEPTOR_CLASS = \"org.apache.skywalking.apm.plugin.influxdb.interceptor.InfluxDBConstructorInterceptor\";\n+  private static final String INFLUXDB_METHOD_INTERCEPT_CLASS = \"org.apache.skywalking.apm.plugin.influxdb.interceptor.InfluxDBMethodInterceptor\";\n+\n+    @Override\n+    protected ClassMatch enhanceClass() {\n+        return NameMatch.byName(ENHANCE_CLASS);\n+    }\n+\n+    @Override\n+    public ConstructorInterceptPoint[] getConstructorsInterceptPoints() {\n+        return new ConstructorInterceptPoint[] {\n+            new ConstructorInterceptPoint() {\n+                @Override\n+                public ElementMatcher<MethodDescription> getConstructorMatcher() {\n+                    return takesArgument(0, String.class);\n+                }\n+\n+                @Override\n+                public String getConstructorInterceptor() {\n+                    return INTERCEPTOR_CLASS;\n+                }\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public InstanceMethodsInterceptPoint[] getInstanceMethodsInterceptPoints() {\n+      return new InstanceMethodsInterceptPoint[] {\n+          new InstanceMethodsInterceptPoint() {\n+            @Override\n+            public ElementMatcher<MethodDescription> getMethodsMatcher() {\n+              return InfluxDBMethodMatch.INSTANCE.getInfluxDBMethodMatcher();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca855b4a5837bf490727b3c9357ade2c38753a64"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5818b7e106cc9de9eacdc09df821c77c901fd031", "author": {"user": {"login": "heyanlong", "name": "\u4f55\u5ef6\u9f99"}}, "url": "https://github.com/apache/skywalking/commit/5818b7e106cc9de9eacdc09df821c77c901fd031", "committedDate": "2020-06-06T13:12:39Z", "message": "[PHP-E2E] Support v8 (#4862)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa94bb5507e87f94533c55e1403bf99e92fa3699", "author": {"user": {"login": "songzhendong", "name": null}}, "url": "https://github.com/apache/skywalking/commit/fa94bb5507e87f94533c55e1403bf99e92fa3699", "committedDate": "2020-06-06T13:12:39Z", "message": "Remove nacos (#4867)\n\n* Add annotation(AlarmCore.start)\r\n\r\n* Upgrade nacos version to 1.2.0\r\n\r\n* Revert \"Upgrade nacos version to 1.2.0\"\r\n\r\nThis reverts commit 4d7b06f6d20ee09ad377ad6ef736aeab429314e0.\r\n\r\n* Update nacos version to 1.2.0(Solve the security problem of the old version of fastsjon)\r\n\r\n* Recovery annotation\r\n\r\n* Recovery annotation\r\n\r\n* Update nacos version to 1.2.0\r\n\r\n* Update tls_key_generate.sh path\r\n\r\nUpdate tls_key_generate.sh path\r\n\r\n* Add annotation(AlarmCore.start)\r\n\r\n* Revert \"Upgrade nacos version to 1.2.0\"\r\n\r\nThis reverts commit 4d7b06f6d20ee09ad377ad6ef736aeab429314e0.\r\n\r\n* Update nacos version to 1.2.0(Solve the security problem of the old version of fastsjon)\r\n\r\n* Recovery annotation\r\n\r\n* Recovery annotation\r\n\r\n* Update tls_key_generate.sh path\r\n\r\n* Execution Authority\r\n\r\n* Remove nacos\r\n\r\n* remove nacos code\r\n\r\n* remove nacos\r\n\r\nremove nacos\r\n\r\n* remove nacos\r\n\r\nremove nacos\r\n\r\n* remove nacos\r\n\r\n* remove nacos\r\n\r\nCo-authored-by: songzhendong <289505773@qq.com>\r\nCo-authored-by: songzhendong <songzhendong@xiaomi.com>\r\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "916a018ad6c0975fe082b1630b77d0e48ac17de5", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/916a018ad6c0975fe082b1630b77d0e48ac17de5", "committedDate": "2020-06-06T15:50:45Z", "message": "influxdb plugin : Some review comments fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef35816b0f0ba7295ede7611e9b50fc7ea3d0299", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/ef35816b0f0ba7295ede7611e9b50fc7ea3d0299", "committedDate": "2020-06-06T15:52:18Z", "message": "influxdb plugin : Some review comments fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dadb56e56b461ace63c55efd5b894ae753f00bf5", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/dadb56e56b461ace63c55efd5b894ae753f00bf5", "committedDate": "2020-06-06T15:55:49Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59a168d3ecea8a217aa1c5503d9b4c72f041d1ff", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/59a168d3ecea8a217aa1c5503d9b4c72f041d1ff", "committedDate": "2020-06-06T15:57:50Z", "message": "influxdb plugin : remove since date"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6b379bf33cfe51ddfe524446efae5dad3e2866e", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/c6b379bf33cfe51ddfe524446efae5dad3e2866e", "committedDate": "2020-06-14T03:05:43Z", "message": "Merge remote-tracking branch 'upstream/master'\n\n# Conflicts:\n#\toap-server/server-bootstrap/src/main/resources/component-libraries.yml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55b2b24e90f303cd07424195676b6cfd1fc4573e", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/55b2b24e90f303cd07424195676b6cfd1fc4573e", "committedDate": "2020-06-14T04:56:14Z", "message": "update influxdb plugin version."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8387f0468dc058d0bd6dff6be01cfc03a69660b8", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/8387f0468dc058d0bd6dff6be01cfc03a69660b8", "committedDate": "2020-06-14T12:04:46Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjE0NTg4", "url": "https://github.com/apache/skywalking/pull/4846#pullrequestreview-430214588", "createdAt": "2020-06-14T12:22:38Z", "commit": {"oid": "8387f0468dc058d0bd6dff6be01cfc03a69660b8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4889fa960aa7a0865c3063e0a244d2176da4927f", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/4889fa960aa7a0865c3063e0a244d2176da4927f", "committedDate": "2020-06-14T12:46:57Z", "message": "add component-libraries.yml and update Supported-list.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e28d7fd2045ef7072e1fc26c2d597dab389a7cf1", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/e28d7fd2045ef7072e1fc26c2d597dab389a7cf1", "committedDate": "2020-06-18T00:01:17Z", "message": "influxdb support db.statement tag, like influxql,lineProtocol value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "168f7f6d9242d54dae490bded26edbb76e6e1fe8", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/168f7f6d9242d54dae490bded26edbb76e6e1fe8", "committedDate": "2020-06-18T00:38:48Z", "message": "Update skywalking-ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36811ea24bab01f0e99669ce6234551c1ce53650", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/36811ea24bab01f0e99669ce6234551c1ce53650", "committedDate": "2020-06-18T16:08:39Z", "message": "remove local ut"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8744795a75a595e659518019b86d341ff33242be", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/8744795a75a595e659518019b86d341ff33242be", "committedDate": "2020-06-18T16:22:23Z", "message": "update submodule\n\nupdate submodule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da0181e718943c6b217d25f3762fe28129fff6c2", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/da0181e718943c6b217d25f3762fe28129fff6c2", "committedDate": "2020-06-19T13:53:09Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e272e753b82db34098485e8d8c0c58ebe02e0995", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/e272e753b82db34098485e8d8c0c58ebe02e0995", "committedDate": "2020-06-20T12:41:32Z", "message": "fixed influxdb-scenario `expectedData.yaml` assert value"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDI4MDAw", "url": "https://github.com/apache/skywalking/pull/4846#pullrequestreview-434428000", "createdAt": "2020-06-20T13:17:46Z", "commit": {"oid": "e272e753b82db34098485e8d8c0c58ebe02e0995"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxMzoxNzo0NlrOGmmhjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxMzoxNzo0NlrOGmmhjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzMDI1Mg==", "bodyText": "Why Deleting? Mischange?", "url": "https://github.com/apache/skywalking/pull/4846#discussion_r443130252", "createdAt": "2020-06-20T13:17:46Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/component-libraries.yml", "diffHunk": "@@ -52,7 +52,7 @@ ORACLE:\n   languages: Java\n Redis:\n   id: 7\n-  languages: Java,C#,Node.js,PHP\n+  languages: Java,C#,Node.js", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e272e753b82db34098485e8d8c0c58ebe02e0995"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d9e13762b47f89f3a2fdb63e1c18166f50a1f20", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/4d9e13762b47f89f3a2fdb63e1c18166f50a1f20", "committedDate": "2020-06-20T13:30:41Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0838ef5ffee24f96c317a87aa2ab9b4a6c2ce096", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/0838ef5ffee24f96c317a87aa2ab9b4a6c2ce096", "committedDate": "2020-06-20T13:38:40Z", "message": "Mischange when merge remote-tracing branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f77f8f39c59e483cb1038730e01cd078cb5648d6", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/f77f8f39c59e483cb1038730e01cd078cb5648d6", "committedDate": "2020-06-20T14:06:30Z", "message": "Revert \"update submodule\"\n\nThis reverts commit 8744795a75a595e659518019b86d341ff33242be."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4c4515ae6924c6bbda4f7f9565948ca3951b7b4", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/d4c4515ae6924c6bbda4f7f9565948ca3951b7b4", "committedDate": "2020-06-20T14:14:08Z", "message": "make submodule commit id is as same as the master branch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15884f122a34b5fae992b08501be4e386b2e7114", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/15884f122a34b5fae992b08501be4e386b2e7114", "committedDate": "2020-06-20T14:15:07Z", "message": "exclude scenario test gen files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDMxNTQ1", "url": "https://github.com/apache/skywalking/pull/4846#pullrequestreview-434431545", "createdAt": "2020-06-20T14:21:05Z", "commit": {"oid": "15884f122a34b5fae992b08501be4e386b2e7114"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f85be1bebd699b2fbd3152191ecdc3f9771eab15", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/f85be1bebd699b2fbd3152191ecdc3f9771eab15", "committedDate": "2020-06-21T02:50:49Z", "message": "Merge remote-tracking branch 'remotes/upstream/master'\n\n# Conflicts:\n#\tapm-protocol/apm-network/src/main/java/org/apache/skywalking/apm/network/trace/component/ComponentsDefine.java\n#\toap-server/server-bootstrap/src/main/resources/component-libraries.yml\n#\toap-server/server-core/src/test/resources/component-libraries.yml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da55955ab04ce9f56ff175ebbbe1b8705ea2f04b", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/da55955ab04ce9f56ff175ebbbe1b8705ea2f04b", "committedDate": "2020-06-21T03:22:28Z", "message": "change componentId"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDY3MDEz", "url": "https://github.com/apache/skywalking/pull/4846#pullrequestreview-434467013", "createdAt": "2020-06-21T03:34:02Z", "commit": {"oid": "da55955ab04ce9f56ff175ebbbe1b8705ea2f04b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6b32dff414f4cbe30355c8911aae6f4e4ce7409", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/d6b32dff414f4cbe30355c8911aae6f4e4ce7409", "committedDate": "2020-06-21T04:02:08Z", "message": "add `agent/config/agent.config` : plugin.influxdb.trace_influxql"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43af6268e95def8cea78bd720bff201278e42fa8", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/43af6268e95def8cea78bd720bff201278e42fa8", "committedDate": "2020-06-21T10:35:41Z", "message": "Component id defined in class ComponentsDefine should be the same as that in component-libraries.yml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NTAwMjMy", "url": "https://github.com/apache/skywalking/pull/4846#pullrequestreview-434500232", "createdAt": "2020-06-21T13:10:32Z", "commit": {"oid": "43af6268e95def8cea78bd720bff201278e42fa8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxMzoxMDozM1rOGmr5Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxMzoxMDozM1rOGmr5Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIxODE4Mw==", "bodyText": "This is not a widely used config, don't need to add it into the default agent.config. Putting it in the document should be enough.", "url": "https://github.com/apache/skywalking/pull/4846#discussion_r443218183", "createdAt": "2020-06-21T13:10:33Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/config/agent.config", "diffHunk": "@@ -78,3 +78,6 @@ logging.level=${SW_LOGGING_LEVEL:INFO}\n \n # mysql plugin configuration\n # plugin.mysql.trace_sql_parameters=${SW_MYSQL_TRACE_SQL_PARAMETERS:false}\n+\n+# influxdb plugin configuration\n+# plugin.influxdb.trace_influxql=${SW_INFLUXDB_TRACE_INFLUXQL:true}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43af6268e95def8cea78bd720bff201278e42fa8"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2854247b96547989b3fae1924f6ac4bd03dc47c", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/d2854247b96547989b3fae1924f6ac4bd03dc47c", "committedDate": "2020-06-21T13:38:13Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03ac12353bcd11660f50e55089075b245a6d309a", "author": {"user": {"login": "dagmom", "name": "dagmom"}}, "url": "https://github.com/apache/skywalking/commit/03ac12353bcd11660f50e55089075b245a6d309a", "committedDate": "2020-06-21T13:40:18Z", "message": "Revert \"add `agent/config/agent.config` : plugin.influxdb.trace_influxql\"\n\nThis reverts commit d6b32dff"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NTAyODE5", "url": "https://github.com/apache/skywalking/pull/4846#pullrequestreview-434502819", "createdAt": "2020-06-21T13:46:13Z", "commit": {"oid": "03ac12353bcd11660f50e55089075b245a6d309a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2207, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}