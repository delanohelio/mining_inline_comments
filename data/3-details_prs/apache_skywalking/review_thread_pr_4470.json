{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NDY3NDYx", "number": 4470, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDozNzoxOFrODmO8ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNjo0MDoxOVrODnulig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDE3NDAyOnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/grpc-ssl.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDozNzoxOFrOFziCJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDo0MToyN1rOFziJvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3OTMwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #Support gRPC SSL transportation for OAP server\n          \n          \n            \n            # Support gRPC SSL transportation for OAP server", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r389579300", "createdAt": "2020-03-09T10:37:18Z", "author": {"login": "kezhenxu94"}, "path": "docs/en/setup/backend/grpc-ssl.md", "diffHunk": "@@ -0,0 +1,33 @@\n+#Support gRPC SSL transportation for OAP server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe58ddaad0a92e060776c65a2f69e0556800904"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4MTI0Nw==", "bodyText": "without a space, the header style is not correctly rendered", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r389581247", "createdAt": "2020-03-09T10:41:27Z", "author": {"login": "kezhenxu94"}, "path": "docs/en/setup/backend/grpc-ssl.md", "diffHunk": "@@ -0,0 +1,33 @@\n+#Support gRPC SSL transportation for OAP server", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3OTMwMA=="}, "originalCommit": {"oid": "8fe58ddaad0a92e060776c65a2f69e0556800904"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDE3NTgyOnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/grpc-ssl.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDozNzo1MlrOFziDQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDozNzo1MlrOFziDQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3OTU4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            exchanges. Now OAP support to enable SSL transportation for gRPC receivers.\n          \n          \n            \n            exchanges. Now OAP supports to enable SSL transportation for gRPC receivers.", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r389579586", "createdAt": "2020-03-09T10:37:52Z", "author": {"login": "kezhenxu94"}, "path": "docs/en/setup/backend/grpc-ssl.md", "diffHunk": "@@ -0,0 +1,33 @@\n+#Support gRPC SSL transportation for OAP server\n+\n+For OAP communication we are currently using gRPC, a multi-platform RPC framework that uses protocol buffers for\n+message serialization. The nice part about gRPC is that it promotes the use of SSL/TLS to authenticate and encrypt\n+exchanges. Now OAP support to enable SSL transportation for gRPC receivers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe58ddaad0a92e060776c65a2f69e0556800904"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTQwOTg4OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/grpc-ssl.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo0Mjo0M1rOFzuFFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo0Mjo0M1rOFzuFFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3NjY2MQ==", "bodyText": "This linked file should be updated too, to keep consistently", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r389776661", "createdAt": "2020-03-09T15:42:43Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/grpc-ssl.md", "diffHunk": "@@ -0,0 +1,32 @@\n+# Support gRPC SSL transportation for OAP server\n+\n+For OAP communication we are currently using gRPC, a multi-platform RPC framework that uses protocol buffers for\n+message serialization. The nice part about gRPC is that it promotes the use of SSL/TLS to authenticate and encrypt\n+exchanges. Now OAP supports to enable SSL transportation for gRPC receivers.\n+\n+You can follow below steps to enable this feature\n+\n+## Creating SSL/TLS Certificates\n+\n+It seems like step one is to generate certificates and key files for encrypting communication. I thought this would be\n+fairly straightforward using `openssl` from the command line, However, it may be simpler to use\n+[certstrap](https://github.com/square/certstrap), a simple certificate manager written in Go by the folks at Square.\n+The app avoids dealing with `openssl`, but has a very simple workflow: create a certificate authority, sign certificates\n+with it.\n+\n+After signing the certificates of OAP server, we should convert private key to a PKCS8 format before placing it into the host.\n+\n+```\n+$ openssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt -in server.key -out server-key.pem\n+```\n+\n+## Config OAP server \n+\n+You can enable gRPC SSL by add following lines to `application.yml/core/default`.\n+```json\n+gRPCSslEnabled: true\n+gRPCSslKeyPath: /path/to/server-key.pem\n+gRPCSslCertChainPath: /path/to/server.crt\n+```\n+\n+If you port to java agent, refer to [TLS.md](../service-agent/java-agent/TLS.md) to config java agent to enable TLS.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4994b152ef3767bbed7d8974925a83937f329b4"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTgzNjQwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/remote/client/RemoteClientManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNjozNjowNFrOF14-Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMTowNDozNVrOF1_taA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MjIzNA==", "bodyText": "Could you make the core style consistently. GRPCRemoteClient client use two constructors for ssl ON/OFF, here using a boolean and empty/null string.", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392052234", "createdAt": "2020-03-13T06:36:04Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/remote/client/RemoteClientManager.java", "diffHunk": "@@ -55,21 +59,29 @@\n     private static final Logger logger = LoggerFactory.getLogger(RemoteClientManager.class);\n \n     private final ModuleDefineHolder moduleDefineHolder;\n+    private final boolean grpcSslEnabled;\n+    private final String grpcSslTrustCAPath;\n     private ClusterNodesQuery clusterNodesQuery;\n     private volatile List<RemoteClient> usingClients;\n     private GaugeMetrics gauge;\n     private int remoteTimeout;\n \n     /**\n      * Initial the manager for all remote communication clients.\n-     *\n-     * @param moduleDefineHolder for looking up other modules\n+     *  @param moduleDefineHolder for looking up other modules\n      * @param remoteTimeout      for cluster internal communication, in second unit.\n+     * @param grpcSslEnabled true: enable SSL between clusters, false: plain gRPC between the cluster.\n+     * @param grpcSslTrustCAPath trust certificate authorities file path.\n      */\n-    public RemoteClientManager(ModuleDefineHolder moduleDefineHolder, int remoteTimeout) {\n+    public RemoteClientManager(ModuleDefineHolder moduleDefineHolder,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2MjY2NA==", "bodyText": "done. keep all parameter list the same way.", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392162664", "createdAt": "2020-03-13T11:04:35Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/remote/client/RemoteClientManager.java", "diffHunk": "@@ -55,21 +59,29 @@\n     private static final Logger logger = LoggerFactory.getLogger(RemoteClientManager.class);\n \n     private final ModuleDefineHolder moduleDefineHolder;\n+    private final boolean grpcSslEnabled;\n+    private final String grpcSslTrustCAPath;\n     private ClusterNodesQuery clusterNodesQuery;\n     private volatile List<RemoteClient> usingClients;\n     private GaugeMetrics gauge;\n     private int remoteTimeout;\n \n     /**\n      * Initial the manager for all remote communication clients.\n-     *\n-     * @param moduleDefineHolder for looking up other modules\n+     *  @param moduleDefineHolder for looking up other modules\n      * @param remoteTimeout      for cluster internal communication, in second unit.\n+     * @param grpcSslEnabled true: enable SSL between clusters, false: plain gRPC between the cluster.\n+     * @param grpcSslTrustCAPath trust certificate authorities file path.\n      */\n-    public RemoteClientManager(ModuleDefineHolder moduleDefineHolder, int remoteTimeout) {\n+    public RemoteClientManager(ModuleDefineHolder moduleDefineHolder,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MjIzNA=="}, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTgzNzQyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/remote/client/GRPCRemoteClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNjozNjozOVrOF14-oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNjozNjozOVrOF14-oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MjM4NQ==", "bodyText": "A similar code style inconsistent here, using sslContext==null represents no SSL.", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392052385", "createdAt": "2020-03-13T06:36:39Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/remote/client/GRPCRemoteClient.java", "diffHunk": "@@ -99,7 +110,7 @@ GRPCClient getClient() {\n         if (Objects.isNull(client)) {\n             synchronized (GRPCRemoteClient.class) {\n                 if (Objects.isNull(client)) {\n-                    this.client = new GRPCClient(address.getHost(), address.getPort());\n+                    this.client = new GRPCClient(address.getHost(), address.getPort(), sslContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTg0MDE4OnYy", "diffSide": "RIGHT", "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/SharingServerModuleProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNjozODozNFrOF15AZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMTowNDo0OVrOF1_tzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MjgzNw==", "bodyText": "I think you miss the deletion of this?", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392052837", "createdAt": "2020-03-13T06:38:34Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/SharingServerModuleProvider.java", "diffHunk": "@@ -80,6 +81,15 @@ public void prepare() {\n         if (config.getGRPCPort() != 0) {\n             grpcServer = new GRPCServer(Strings.isBlank(config.getGRPCHost()) ? \"0.0.0.0\" : config.getGRPCHost(), config", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2Mjc2NA==", "bodyText": "removed it.", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392162764", "createdAt": "2020-03-13T11:04:49Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-receiver-plugin/skywalking-sharing-server-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/sharing/server/SharingServerModuleProvider.java", "diffHunk": "@@ -80,6 +81,15 @@ public void prepare() {\n         if (config.getGRPCPort() != 0) {\n             grpcServer = new GRPCServer(Strings.isBlank(config.getGRPCHost()) ? \"0.0.0.0\" : config.getGRPCHost(), config", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MjgzNw=="}, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTg0MjAwOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-ssl/e2e-ssl.iml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNjozOTozOVrOF15BcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMTowNjowM1rOF1_v0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MzEwNA==", "bodyText": "I think this should not be uploaded? Why git ignore is not working for this?", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392053104", "createdAt": "2020-03-13T06:39:39Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-ssl/e2e-ssl.iml", "diffHunk": "@@ -0,0 +1,120 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2MzI4MA==", "bodyText": "deleted it.", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392163280", "createdAt": "2020-03-13T11:06:03Z", "author": {"login": "hanahmily"}, "path": "test/e2e/e2e-ssl/e2e-ssl.iml", "diffHunk": "@@ -0,0 +1,120 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MzEwNA=="}, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTg0MzMwOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-ssl/src/docker/certs/server-key.pem", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNjo0MDoxOVrOF15CMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxMToyOTo1MVrOF2ZEvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MzI5Nw==", "bodyText": "Are these cert files alway valid? No expired time?", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392053297", "createdAt": "2020-03-13T06:40:19Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-ssl/src/docker/certs/server-key.pem", "diffHunk": "@@ -0,0 +1,28 @@\n+-----BEGIN PRIVATE KEY-----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2MzUwMQ==", "bodyText": "2 years. Is it enough?", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392163501", "createdAt": "2020-03-13T11:06:32Z", "author": {"login": "hanahmily"}, "path": "test/e2e/e2e-ssl/src/docker/certs/server-key.pem", "diffHunk": "@@ -0,0 +1,28 @@\n+-----BEGIN PRIVATE KEY-----", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MzI5Nw=="}, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3ODgzNg==", "bodyText": "My point is, this is for test. Could we set it forever? Or let's say 100 years?", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392178836", "createdAt": "2020-03-13T11:42:52Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-ssl/src/docker/certs/server-key.pem", "diffHunk": "@@ -0,0 +1,28 @@\n+-----BEGIN PRIVATE KEY-----", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MzI5Nw=="}, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU3ODIzNw==", "bodyText": "Now we get the  100 years/ century certificates.", "url": "https://github.com/apache/skywalking/pull/4470#discussion_r392578237", "createdAt": "2020-03-14T11:29:51Z", "author": {"login": "hanahmily"}, "path": "test/e2e/e2e-ssl/src/docker/certs/server-key.pem", "diffHunk": "@@ -0,0 +1,28 @@\n+-----BEGIN PRIVATE KEY-----", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1MzI5Nw=="}, "originalCommit": {"oid": "262548404374557cbef14c3397db75b778bc27f9"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4397, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}