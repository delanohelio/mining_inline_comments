{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MjM0Mjkw", "number": 5972, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODowMjoyN1rOFCLfdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODowMjo0NFrOFCLf1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODI5NzQ4OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/backend-fetcher.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODowMjoyN1rOIBMC8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODowMjoyN1rOIBMC8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODExNjg0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              selector: ${SW_PROMETHEUS_FETCHER:-}\n          \n          \n            \n              selector: ${SW_PROMETHEUS_FETCHER:default}\n          \n      \n    \n    \n  \n\nI think should be like this?", "url": "https://github.com/apache/skywalking/pull/5972#discussion_r538116848", "createdAt": "2020-12-08T08:02:27Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -3,11 +3,14 @@ Fetcher is a concept in SkyWalking backend. It uses pulling mode rather than [re\n read the data from the target systems. This mode is typically in some metrics SDKs, such as Prometheus.\n \n ## Prometheus Fetcher\n+Suppose you want to enable `metric-custom.yaml` stored at `fetcher-prom-rules`, append its name to `enabledRules` of \n+ `promethues-fetcher` as below:\n+ \n ```yaml\n prometheus-fetcher:\n-  selector: ${SW_PROMETHEUS_FETCHER:default}\n+  selector: ${SW_PROMETHEUS_FETCHER:-}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "020f46d38d18c11f99ff48eaef9168c3aa8ae236"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODI5ODQ2OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/backend-fetcher.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODowMjo0NFrOIBMDhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODowMjo0NFrOIBMDhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODExNjk5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Suppose you want to enable `metric-custom.yaml` stored at `fetcher-prom-rules`, append its name to `enabledRules` of \n          \n          \n            \n            Suppose you want to enable some `metric-custom.yaml` files stored at `fetcher-prom-rules`, append its name to `enabledRules` of", "url": "https://github.com/apache/skywalking/pull/5972#discussion_r538116997", "createdAt": "2020-12-08T08:02:44Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -3,11 +3,14 @@ Fetcher is a concept in SkyWalking backend. It uses pulling mode rather than [re\n read the data from the target systems. This mode is typically in some metrics SDKs, such as Prometheus.\n \n ## Prometheus Fetcher\n+Suppose you want to enable `metric-custom.yaml` stored at `fetcher-prom-rules`, append its name to `enabledRules` of ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "020f46d38d18c11f99ff48eaef9168c3aa8ae236"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4650, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}