{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MDc4Njk0", "number": 4719, "title": "Support histogram function in Meter system.", "bodyText": "Histogram Function\nHistogram includes data range buckets and the amount matched/grouped in the buckets.\nThis is for original histogram graph visualization\nAPI Usage\nfinal MeterSystem service = getManager().find(CoreModule.NAME).provider().getService(MeterSystem.class);\n// Histogram Example\nfinal AcceptableValue<BucketedValues> histogramMetrics = service.buildMetrics(\n                        \"test_histogram_metrics\", BucketedValues.class);\n value.setTimeBucket(TimeBucket.getMinuteTimeBucket(System.currentTimeMillis()));\nhistogramMetrics.accept(servEntity, new BucketedValues(\n                        new long[] {\n                            0,\n                            50,\n                            100,\n                            250\n                        },\n                        new long[] {\n                            0,\n                            4,\n                            10,\n                            10\n                        }\n                    ));\nservice.doStreamingCalculation(histogramMetrics);\nConstraint Condition\nThe time bucket should be set completely at the first place and immutable. Once it is changed,\n\nIf in the AcceptableValue level, IllegalArgumentException raised for blocking further calculation.\nIf in the internal combine level, such as memory-db combine, warning logs show up, and ignore the combine operation.\n\nDon't change the bucket in any case. If the bucket is really changed, the data will be saved in next time bucket, such as next minute/hour/day based on the precision.\n\nNOTICE, Percentile/Quantiles function will be provided in a similar idea of the histogram function,  buckets and ranks should not be changed once they are set.", "createdAt": "2020-04-26T12:52:37Z", "url": "https://github.com/apache/skywalking/pull/4719", "merged": true, "mergeCommit": {"oid": "7c84e77bf22c0b6975d12aecfc9316f3cc6d815a"}, "closed": true, "closedAt": "2020-04-27T06:38:39Z", "author": {"login": "wu-sheng"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbZvB7AH2gAyNDA5MDc4Njk0OjgyNjMxZGMxYmZjODcwZDFkNTQ3NTEzZGFiYWU2NmVjMzYwZDY0NWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbpZQgAFqTQwMDY2MTE3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "82631dc1bfc870d1d547513dabae66ec360d645a", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/82631dc1bfc870d1d547513dabae66ec360d645a", "committedDate": "2020-04-26T12:21:02Z", "message": "Support histogram function in Meter system."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5679ddda696631fcca4f9f1a516514430754014a", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/5679ddda696631fcca4f9f1a516514430754014a", "committedDate": "2020-04-26T12:35:08Z", "message": "Add bucket consistent check."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d589b4f51ce1b1ce9e1d0a429aaafd868ea11032", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/d589b4f51ce1b1ce9e1d0a429aaafd868ea11032", "committedDate": "2020-04-26T12:50:48Z", "message": "Add histogram in the document."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a81a82242346f1f3088b33cff104715645d354d", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/2a81a82242346f1f3088b33cff104715645d354d", "committedDate": "2020-04-26T13:01:41Z", "message": "Merge branch 'master' into new-func"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTcwNjE1", "url": "https://github.com/apache/skywalking/pull/4719#pullrequestreview-400570615", "createdAt": "2020-04-27T00:39:34Z", "commit": {"oid": "2a81a82242346f1f3088b33cff104715645d354d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMDozOTozNFrOGMMfaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMDozOTozNFrOGMMfaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0MDc0NA==", "bodyText": "How to set up infinite lower bound? for example, [infinite-, 0)", "url": "https://github.com/apache/skywalking/pull/4719#discussion_r415440744", "createdAt": "2020-04-27T00:39:34Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/meter/function/BucketedValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.analysis.meter.function;\n+\n+import java.util.Arrays;\n+import lombok.Getter;\n+import lombok.ToString;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.DataTable;\n+\n+/**\n+ * BucketedValues represents a value set, which elements are grouped by time bucket.\n+ */\n+@ToString\n+@Getter\n+public class BucketedValues {\n+    /**\n+     * The element in the buckets represent the minimal value of this bucket, the max is defined by the next element.\n+     * Such as 0, 10, 50, 100 means buckets are [0, 10), [10, 50), [50, 100), [100, infinite+).\n+     */\n+    private long[] buckets;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a81a82242346f1f3088b33cff104715645d354d"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76defe146f3d025a869582070bcbf81ba47caa9c", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/76defe146f3d025a869582070bcbf81ba47caa9c", "committedDate": "2020-04-27T03:59:36Z", "message": "Support infinite-"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjYxMTcw", "url": "https://github.com/apache/skywalking/pull/4719#pullrequestreview-400661170", "createdAt": "2020-04-27T06:35:44Z", "commit": {"oid": "76defe146f3d025a869582070bcbf81ba47caa9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2357, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}