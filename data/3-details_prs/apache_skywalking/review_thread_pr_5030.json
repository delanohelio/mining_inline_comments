{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MjcxMTAw", "number": 5030, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxMTo1Mzo0OFrOELYIZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowODoyMVrOEMUCYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzY1MTU3OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/graphql-plugin/graphql-12.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/graphql/v12/GraphqlInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxMTo1Mzo0OFrOGs7l1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwNzoyMzoyMVrOGtAUaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2Njg3MA==", "bodyText": "How a GraphQL span could not be the first span? Or not an entry span? A little confused.", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449766870", "createdAt": "2020-07-04T11:53:48Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/graphql-plugin/graphql-12.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/graphql/v12/GraphqlInterceptor.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.graphql.v12;\n+\n+import graphql.execution.ExecutionPath;\n+import graphql.execution.ExecutionStrategyParameters;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class GraphqlInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        objInst.setSkyWalkingDynamicField(System.currentTimeMillis());\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return ret;\n+        }\n+        String name = parameters.getField().getSingleField().getName();\n+        long latency = System.currentTimeMillis() - (long) objInst.getSkyWalkingDynamicField();\n+        String info = buildLogicEndpointTagInfo(name, latency, null);\n+        AbstractSpan span = ContextManager.firstSpan();\n+        if (span == null || !span.isEntry()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60cf903b16bf0251193b59ccc9f31a7dcd82f965"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg0NDMyOA==", "bodyText": "i've used a localSpan to represent a Grqphql subquery", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449844328", "createdAt": "2020-07-05T07:23:21Z", "author": {"login": "IanCao"}, "path": "apm-sniffer/apm-sdk-plugin/graphql-plugin/graphql-12.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/graphql/v12/GraphqlInterceptor.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.graphql.v12;\n+\n+import graphql.execution.ExecutionPath;\n+import graphql.execution.ExecutionStrategyParameters;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class GraphqlInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        objInst.setSkyWalkingDynamicField(System.currentTimeMillis());\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return ret;\n+        }\n+        String name = parameters.getField().getSingleField().getName();\n+        long latency = System.currentTimeMillis() - (long) objInst.getSkyWalkingDynamicField();\n+        String info = buildLogicEndpointTagInfo(name, latency, null);\n+        AbstractSpan span = ContextManager.firstSpan();\n+        if (span == null || !span.isEntry()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2Njg3MA=="}, "originalCommit": {"oid": "60cf903b16bf0251193b59ccc9f31a7dcd82f965"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDU0MDE4OnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/graphql-12.x-scenario/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMzowMDoyMlrOGtCL9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMzowMDoyMlrOGtCL9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NDkzNA==", "bodyText": "Why need this?", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449874934", "createdAt": "2020-07-05T13:00:22Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/graphql-12.x-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,126 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>graphql-12.x-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>jar</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-graphql-12.x-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>\n+        <test.framework.version>9.0</test.framework.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <test.framework>graphql</test.framework>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring.boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.graphql-java</groupId>\n+            <artifactId>graphql-java</artifactId>\n+            <version>${test.framework.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>graphql-12.x-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>assemble</id>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>single</goal>\n+                        </goals>\n+                        <configuration>\n+                            <descriptors>\n+                                <descriptor>src/main/assembly/assembly.xml</descriptor>\n+                            </descriptors>\n+                            <outputDirectory>./target/</outputDirectory>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDU0MTc0OnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/graphql-8.x-scenario/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMzowMTozMlrOGtCMmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMzowMTozMlrOGtCMmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTA5OQ==", "bodyText": "Same here.", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449875099", "createdAt": "2020-07-05T13:01:32Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/graphql-8.x-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>graphql-8.x-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>jar</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-graphql-8.x-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>\n+        <test.framework.version>8.0</test.framework.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <test.framework>graphql</test.framework>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring.boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.graphql-java</groupId>\n+            <artifactId>graphql-java</artifactId>\n+            <version>${test.framework.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>graphql-8.x-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>assemble</id>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>single</goal>\n+                        </goals>\n+                        <configuration>\n+                            <descriptors>\n+                                <descriptor>src/main/assembly/assembly.xml</descriptor>\n+                            </descriptors>\n+                            <outputDirectory>./target/</outputDirectory>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDU0NDEzOnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/graphql-9.x-scenario/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMzowMzoyMVrOGtCNtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMzowMzoyMVrOGtCNtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTM4Mw==", "bodyText": "Same here.", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449875383", "createdAt": "2020-07-05T13:03:21Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/graphql-9.x-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>graphql-9.x-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>jar</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-graphql-9.x-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>\n+        <test.framework.version>9.0</test.framework.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <test.framework>graphql</test.framework>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring.boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.graphql-java</groupId>\n+            <artifactId>graphql-java</artifactId>\n+            <version>${test.framework.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>graphql-9.x-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>assemble</id>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>single</goal>\n+                        </goals>\n+                        <configuration>\n+                            <descriptors>\n+                                <descriptor>src/main/assembly/assembly.xml</descriptor>\n+                            </descriptors>\n+                            <outputDirectory>./target/</outputDirectory>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzQ2NDUyOnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/graphql-9.x-scenario/config/expectedData.yaml", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowNzoxNlrOGuWe3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDowMjoxNFrOGuXTVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA==", "bodyText": "Such kind of tags are not processable by the backend, according to the doc\n\nThe value of x-le should be JSON format\n\n@IanCao  did you check this plugin with the backend in a whole? FYI @wu-sheng", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451256030", "createdAt": "2020-07-08T03:07:16Z", "author": {"login": "kezhenxu94"}, "path": "test/plugin/scenarios/graphql-9.x-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+- serviceName: graphql-9.x-scenario\n+  segmentSize: gt 1\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: user\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: Unknown\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 92\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      skipAnalysis: false\n+      tags:\n+      - {key: x-le, value: '{logic-span=true}'}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1OTQ1MQ==", "bodyText": "Why not? I added this new feature :) It is here\nhttps://github.com/apache/skywalking/blob/310b8857b2266768ccd9e1338da13c86c313ed3f/docs/en/guides/Java-Plugin-Development-Guide.md#extension-logic-endpoint-tag-key-x-le", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451259451", "createdAt": "2020-07-08T03:21:45Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/graphql-9.x-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+- serviceName: graphql-9.x-scenario\n+  segmentSize: gt 1\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: user\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: Unknown\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 92\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      skipAnalysis: false\n+      tags:\n+      - {key: x-le, value: '{logic-span=true}'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA=="}, "originalCommit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2NDc3NQ==", "bodyText": "I mean {logic-span=true} is not JSON format, did you process this kind of format @wu-sheng ? I mean the =, it's not JSON format", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451264775", "createdAt": "2020-07-08T03:42:14Z", "author": {"login": "kezhenxu94"}, "path": "test/plugin/scenarios/graphql-9.x-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+- serviceName: graphql-9.x-scenario\n+  segmentSize: gt 1\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: user\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: Unknown\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 92\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      skipAnalysis: false\n+      tags:\n+      - {key: x-le, value: '{logic-span=true}'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA=="}, "originalCommit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2NTI5OQ==", "bodyText": "@wu-sheng do you mean this, I didn't see any clue that the map format {logic-span=true} is also supported", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451265299", "createdAt": "2020-07-08T03:44:17Z", "author": {"login": "kezhenxu94"}, "path": "test/plugin/scenarios/graphql-9.x-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+- serviceName: graphql-9.x-scenario\n+  segmentSize: gt 1\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: user\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: Unknown\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 92\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      skipAnalysis: false\n+      tags:\n+      - {key: x-le, value: '{logic-span=true}'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA=="}, "originalCommit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2OTQ2MA==", "bodyText": "Oh, I see, I didn't check that part.", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451269460", "createdAt": "2020-07-08T04:02:14Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/graphql-9.x-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+- serviceName: graphql-9.x-scenario\n+  segmentSize: gt 1\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: user\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: Unknown\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 92\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      skipAnalysis: false\n+      tags:\n+      - {key: x-le, value: '{logic-span=true}'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA=="}, "originalCommit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzQ2NjU4OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/graphql-plugin/graphql-9.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/graphql/v9/GraphqlInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowODoyMVrOGuWf_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowODoyMVrOGuWf_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjMxNg==", "bodyText": "The value of x-le should be JSON format, this is obviously not the case by simply calling toString on a Map", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451256316", "createdAt": "2020-07-08T03:08:21Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/graphql-plugin/graphql-9.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/graphql/v9/GraphqlInterceptor.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.graphql.v9;\n+\n+import graphql.execution.ExecutionPath;\n+import graphql.execution.ExecutionStrategyParameters;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class GraphqlInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        AbstractSpan span = ContextManager.createLocalSpan(parameters.getField().get(0).getName());\n+        Tags.LOGIC_ENDPOINT.set(span, buildLogicEndpointSpan());\n+        span.setComponent(ComponentsDefine.GRAPHQL);\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return ret;\n+        }\n+        ContextManager.stopSpan();\n+        return ret;\n+    }\n+\n+    @Override\n+    public void handleMethodException(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Throwable t) {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        dealException(t);\n+    }\n+\n+    private void dealException(Throwable throwable) {\n+        AbstractSpan span = ContextManager.activeSpan();\n+        span.errorOccurred();\n+        span.log(throwable);\n+    }\n+\n+    private String buildLogicEndpointSpan() {\n+        Map<String, Object> logicEndpointSpan = new HashMap<>();\n+        logicEndpointSpan.put(\"logic-span\", true);\n+        return logicEndpointSpan.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 53, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}