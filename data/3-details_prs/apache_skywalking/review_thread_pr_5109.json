{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMTYzNDkz", "number": 5109, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzoyOTo0MFrOEPVyyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjoxOToyN1rOEPXxng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTIxMTYyOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzoyOTo0MFrOGzAMnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjoxMzoyOFrOGzC_ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMzc4OA==", "bodyText": "Don't add the issue link, unless it is a very special thing.", "url": "https://github.com/apache/skywalking/pull/5109#discussion_r456133788", "createdAt": "2020-07-16T23:29:40Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java", "diffHunk": "@@ -40,15 +40,14 @@\n     public final void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments,\n                                    Class<?>[] argumentsTypes, MethodInterceptResult result) {\n         StatementEnhanceInfos cacheObject = (StatementEnhanceInfos) objInst.getSkyWalkingDynamicField();\n-        ConnectionInfo connectInfo = cacheObject.getConnectionInfo();\n         /**\n          * For avoid NPE. In this particular case, Execute sql inside the {@link com.mysql.jdbc.ConnectionImpl} constructor,\n          * before the interceptor sets the connectionInfo.\n-         *\n+         * Fixed https://github.com/apache/skywalking/issues/4965. When invoking prepareCall, cacheObject is null. Because it will determine procedures's parameter types by querying the table of proc in mysql.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7e72d937b769f40e50ec644a210bc497f2204f9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzNDUxNA==", "bodyText": "About #prepareCall, why cacheObject should be null? I prefer you should fix this NPE by having the correct ConnectionInfo rather than skipping it.", "url": "https://github.com/apache/skywalking/pull/5109#discussion_r456134514", "createdAt": "2020-07-16T23:31:39Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java", "diffHunk": "@@ -40,15 +40,14 @@\n     public final void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments,\n                                    Class<?>[] argumentsTypes, MethodInterceptResult result) {\n         StatementEnhanceInfos cacheObject = (StatementEnhanceInfos) objInst.getSkyWalkingDynamicField();\n-        ConnectionInfo connectInfo = cacheObject.getConnectionInfo();\n         /**\n          * For avoid NPE. In this particular case, Execute sql inside the {@link com.mysql.jdbc.ConnectionImpl} constructor,\n          * before the interceptor sets the connectionInfo.\n-         *\n+         * Fixed https://github.com/apache/skywalking/issues/4965. When invoking prepareCall, cacheObject is null. Because it will determine procedures's parameter types by querying the table of proc in mysql.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMzc4OA=="}, "originalCommit": {"oid": "e7e72d937b769f40e50ec644a210bc497f2204f9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzNTAzNg==", "bodyText": "You should forward the ConnectionInfo from Connection when #prepareCall called.", "url": "https://github.com/apache/skywalking/pull/5109#discussion_r456135036", "createdAt": "2020-07-16T23:33:04Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java", "diffHunk": "@@ -40,15 +40,14 @@\n     public final void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments,\n                                    Class<?>[] argumentsTypes, MethodInterceptResult result) {\n         StatementEnhanceInfos cacheObject = (StatementEnhanceInfos) objInst.getSkyWalkingDynamicField();\n-        ConnectionInfo connectInfo = cacheObject.getConnectionInfo();\n         /**\n          * For avoid NPE. In this particular case, Execute sql inside the {@link com.mysql.jdbc.ConnectionImpl} constructor,\n          * before the interceptor sets the connectionInfo.\n-         *\n+         * Fixed https://github.com/apache/skywalking/issues/4965. When invoking prepareCall, cacheObject is null. Because it will determine procedures's parameter types by querying the table of proc in mysql.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMzc4OA=="}, "originalCommit": {"oid": "e7e72d937b769f40e50ec644a210bc497f2204f9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3OTYxNA==", "bodyText": "When invoking prepareCall, it will determine procedures's parameter types by execute sql. StatementEnhanceInfos is set after prepareCall, so cacheObject is null in PreparedStatementExecuteMethodsInterceptor.beforeMethod.\nIf we don't need to record the sql which determine procedures's parameter types when invoking prepareCall, we can skip it.", "url": "https://github.com/apache/skywalking/pull/5109#discussion_r456179614", "createdAt": "2020-07-17T02:13:28Z", "author": {"login": "Patrick0308"}, "path": "apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java", "diffHunk": "@@ -40,15 +40,14 @@\n     public final void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments,\n                                    Class<?>[] argumentsTypes, MethodInterceptResult result) {\n         StatementEnhanceInfos cacheObject = (StatementEnhanceInfos) objInst.getSkyWalkingDynamicField();\n-        ConnectionInfo connectInfo = cacheObject.getConnectionInfo();\n         /**\n          * For avoid NPE. In this particular case, Execute sql inside the {@link com.mysql.jdbc.ConnectionImpl} constructor,\n          * before the interceptor sets the connectionInfo.\n-         *\n+         * Fixed https://github.com/apache/skywalking/issues/4965. When invoking prepareCall, cacheObject is null. Because it will determine procedures's parameter types by querying the table of proc in mysql.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMzc4OA=="}, "originalCommit": {"oid": "e7e72d937b769f40e50ec644a210bc497f2204f9"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTUzNjMwOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjoxOToyN1rOGzDFoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDoyMzoyN1rOGzE3vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4MTE1Mw==", "bodyText": "According to the codes here, if cacheObject.getConnectionInfo() == null), no span will be generated. My previous question is about this, why?\nAlso, on the existing codes, the check condition is different, \n  \n    \n      skywalking/apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java\n    \n    \n         Line 75\n      in\n      e7e72d9\n    \n    \n    \n    \n\n        \n          \n           if (cacheObject.getConnectionInfo() != null) { \n        \n    \n  \n\n.\nI want to make sure what is the issue of that. Because all changes in the expectedData.yml seems not related to some parts of the change.", "url": "https://github.com/apache/skywalking/pull/5109#discussion_r456181153", "createdAt": "2020-07-17T02:19:27Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java", "diffHunk": "@@ -40,15 +40,14 @@\n     public final void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments,\n                                    Class<?>[] argumentsTypes, MethodInterceptResult result) {\n         StatementEnhanceInfos cacheObject = (StatementEnhanceInfos) objInst.getSkyWalkingDynamicField();\n-        ConnectionInfo connectInfo = cacheObject.getConnectionInfo();\n         /**\n          * For avoid NPE. In this particular case, Execute sql inside the {@link com.mysql.jdbc.ConnectionImpl} constructor,\n          * before the interceptor sets the connectionInfo.\n-         *\n+         * Fixed https://github.com/apache/skywalking/issues/4965. When invoking prepareCall, cacheObject is null. Because it will determine procedures's parameter types by querying the table of proc in mysql.\n          * @see JDBCDriverInterceptor#afterMethod(EnhancedInstance, Method, Object[], Class[], Object)\n          */\n-        if (connectInfo != null) {\n-\n+        if (cacheObject != null && cacheObject.getConnectionInfo() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7e72d937b769f40e50ec644a210bc497f2204f9"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxMDM2Nw==", "bodyText": "Intercepter set connectionInfo after Driver.connect. So, in the constructor of ConnectionImpl, executing built-in SQL will don't have connectionInfo.\n\n  \n    \n      skywalking/apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java\n    \n    \n         Line 44\n      in\n      e7e72d9\n    \n    \n    \n    \n\n        \n          \n                    * For avoid NPE. In this particular case, Execute sql inside the {@link com.mysql.jdbc.ConnectionImpl} constructor, \n        \n    \n  \n\n\nBoth the condition cacheObject.getConnectionInfo() != null and the condition cacheObject != null are for not log error message and skip the jdbc's built-in SQL.\nThe NPE not affect recording user's SQL.", "url": "https://github.com/apache/skywalking/pull/5109#discussion_r456210367", "createdAt": "2020-07-17T04:23:27Z", "author": {"login": "Patrick0308"}, "path": "apm-sniffer/apm-sdk-plugin/mysql-common/src/main/java/org/apache/skywalking/apm/plugin/jdbc/mysql/PreparedStatementExecuteMethodsInterceptor.java", "diffHunk": "@@ -40,15 +40,14 @@\n     public final void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments,\n                                    Class<?>[] argumentsTypes, MethodInterceptResult result) {\n         StatementEnhanceInfos cacheObject = (StatementEnhanceInfos) objInst.getSkyWalkingDynamicField();\n-        ConnectionInfo connectInfo = cacheObject.getConnectionInfo();\n         /**\n          * For avoid NPE. In this particular case, Execute sql inside the {@link com.mysql.jdbc.ConnectionImpl} constructor,\n          * before the interceptor sets the connectionInfo.\n-         *\n+         * Fixed https://github.com/apache/skywalking/issues/4965. When invoking prepareCall, cacheObject is null. Because it will determine procedures's parameter types by querying the table of proc in mysql.\n          * @see JDBCDriverInterceptor#afterMethod(EnhancedInstance, Method, Object[], Class[], Object)\n          */\n-        if (connectInfo != null) {\n-\n+        if (cacheObject != null && cacheObject.getConnectionInfo() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4MTE1Mw=="}, "originalCommit": {"oid": "e7e72d937b769f40e50ec644a210bc497f2204f9"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 86, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}