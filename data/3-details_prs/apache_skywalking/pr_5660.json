{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNDgxODc2", "number": 5660, "title": "Fix Kafka sender blocks main thread", "bodyText": "Please answer these questions before submitting a pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n#5654\n\n\n\nBug fix\n\n\nBug description.\n\n\nHow to fix?\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.", "createdAt": "2020-10-13T15:39:40Z", "url": "https://github.com/apache/skywalking/pull/5660", "merged": true, "mergeCommit": {"oid": "7881c57023db1d861179ffa65ba6854ab8a37462"}, "closed": true, "closedAt": "2020-10-14T00:12:23Z", "author": {"login": "dmsolr"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSKXP7gH2gAyNTAyNDgxODc2OmVjMDQwYjgxZTFlNGQ2NTg3MGU2OTY4OGU1ZGU3YjJjNzJmNGY5ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSS7tfgFqTUwNzkzMTczMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/ec040b81e1e4d65870e69688e5de7b2c72f4f9e8", "committedDate": "2020-10-13T15:32:19Z", "message": "Introduct DataCarrier to avoid service blocked"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NTg4ODM4", "url": "https://github.com/apache/skywalking/pull/5660#pullrequestreview-507588838", "createdAt": "2020-10-13T15:53:14Z", "commit": {"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjI0NzM5", "url": "https://github.com/apache/skywalking/pull/5660#pullrequestreview-507624739", "createdAt": "2020-10-13T16:30:47Z", "commit": {"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozMDo0N1rOHgvfYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozMDo0N1rOHgvfYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NDU2Mw==", "bodyText": "FutureReturnValueIgnored:  Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.", "url": "https://github.com/apache/skywalking/pull/5660#discussion_r504094563", "createdAt": "2020-10-13T16:30:47Z", "author": {"login": "sonatype-lift"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentServiceClient.java", "diffHunk": "@@ -60,6 +74,39 @@ public void onComplete() {\n     @Override\n     public void shutdown() {\n         TracingContext.ListenerManager.remove(this);\n+        carrier.shutdownConsumers();\n+    }\n+\n+    @Override\n+    public void init() {\n+\n+    }\n+\n+    @Override\n+    public void consume(final List<TraceSegment> data) {\n+        data.forEach(traceSegment -> {\n+            SegmentObject upstreamSegment = traceSegment.transform();\n+            ProducerRecord<String, Bytes> record = new ProducerRecord<>(\n+                topic,\n+                upstreamSegment.getTraceSegmentId(),\n+                Bytes.wrap(upstreamSegment.toByteArray())\n+            );\n+            producer.send(record, (m, e) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTMxNzMw", "url": "https://github.com/apache/skywalking/pull/5660#pullrequestreview-507931730", "createdAt": "2020-10-14T01:21:42Z", "commit": {"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMToyMTo0MlrOHg-2Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMToyMTo0MlrOHg-2Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0NjE3MA==", "bodyText": "previous version is better\uff1f\n    @Override\n    public void afterFinished(TraceSegment traceSegment) {\n        if (traceSegment.isIgnore()) {\n            LOGGER.debug(\"Trace[TraceId={}] is ignored.\", traceSegment.getTraceSegmentId());\n            return;\n        }\n        if (!carrier.produce(traceSegment)) {\n            if (LOGGER.isDebugEnable()) {\n                LOGGER.debug(\"One trace segment has been abandoned, cause by buffer is full.\");\n            }\n        }\n    }", "url": "https://github.com/apache/skywalking/pull/5660#discussion_r504346170", "createdAt": "2020-10-14T01:21:42Z", "author": {"login": "nileblack"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentServiceClient.java", "diffHunk": "@@ -72,13 +119,7 @@ public void afterFinished(final TraceSegment traceSegment) {\n             LOGGER.debug(\"Trace[TraceId={}] is ignored.\", traceSegment.getTraceSegmentId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1829, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}