{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MjcxMTAw", "number": 5030, "title": "support Graphql Logic endpoint", "bodyText": "Please answer these questions before submitting pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n\n\n\nBug fix\n\n\nBug description.\n\n\nHow to fix?\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.", "createdAt": "2020-07-04T11:06:01Z", "url": "https://github.com/apache/skywalking/pull/5030", "merged": true, "mergeCommit": {"oid": "80a534b1bbaef6d92d3ceb1f2a6b0382a6964b40"}, "closed": true, "closedAt": "2020-07-05T15:37:10Z", "author": {"login": "IanCao"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwDWhrAH2gAyNDQ0MjcxMTAwOmVjMzMyOGE3OGM4NzAxMGRlZjFhMGUyZjFmZDY1OTU0OTZmMGI3ZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyxlRIgFqTQ0NDM4MjEwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ec3328a78c87010def1a0e2f1fd6595496f0b7e5", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/ec3328a78c87010def1a0e2f1fd6595496f0b7e5", "committedDate": "2020-06-29T16:08:46Z", "message": "Merge pull request #1 from apache/master\n\nmerge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1217cf6e95e5119ac194f90cf6de8f22e5d11972", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/1217cf6e95e5119ac194f90cf6de8f22e5d11972", "committedDate": "2020-06-29T16:16:58Z", "message": "init graphql logic_endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d932adc77b161a069b6d16abeebc0353cd7b7ebd", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/d932adc77b161a069b6d16abeebc0353cd7b7ebd", "committedDate": "2020-06-30T03:27:49Z", "message": "#4976"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63960e33e91cb22a65c8a33c203133b7ca3842b6", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/63960e33e91cb22a65c8a33c203133b7ca3842b6", "committedDate": "2020-07-01T02:31:24Z", "message": "add testcase #4996"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ab2d3adf91f6e2a103b4102d32b122d870b7aaa", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/7ab2d3adf91f6e2a103b4102d32b122d870b7aaa", "committedDate": "2020-07-02T15:05:10Z", "message": "add graphql 12"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc798e47bc37d7b6a3b875720874e021034a4693", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/dc798e47bc37d7b6a3b875720874e021034a4693", "committedDate": "2020-07-04T10:53:15Z", "message": "support graphql 8.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa9a2fc47374fd6dcf2de5d63a1574d5d2570e2e", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/fa9a2fc47374fd6dcf2de5d63a1574d5d2570e2e", "committedDate": "2020-07-04T10:57:05Z", "message": "add doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dadffff91a48edbc7a9c10a22882a8c82e21d211", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/dadffff91a48edbc7a9c10a22882a8c82e21d211", "committedDate": "2020-07-04T11:07:13Z", "message": "Merge branch 'master' into logic_endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60cf903b16bf0251193b59ccc9f31a7dcd82f965", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/60cf903b16bf0251193b59ccc9f31a7dcd82f965", "committedDate": "2020-07-04T11:10:41Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjA1NjU3", "url": "https://github.com/apache/skywalking/pull/5030#pullrequestreview-442605657", "createdAt": "2020-07-04T11:53:47Z", "commit": {"oid": "60cf903b16bf0251193b59ccc9f31a7dcd82f965"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxMTo1Mzo0OFrOGs7l1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxMTo1Mzo0OFrOGs7l1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2Njg3MA==", "bodyText": "How a GraphQL span could not be the first span? Or not an entry span? A little confused.", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449766870", "createdAt": "2020-07-04T11:53:48Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/graphql-plugin/graphql-12.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/graphql/v12/GraphqlInterceptor.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.graphql.v12;\n+\n+import graphql.execution.ExecutionPath;\n+import graphql.execution.ExecutionStrategyParameters;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class GraphqlInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        objInst.setSkyWalkingDynamicField(System.currentTimeMillis());\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return ret;\n+        }\n+        String name = parameters.getField().getSingleField().getName();\n+        long latency = System.currentTimeMillis() - (long) objInst.getSkyWalkingDynamicField();\n+        String info = buildLogicEndpointTagInfo(name, latency, null);\n+        AbstractSpan span = ContextManager.firstSpan();\n+        if (span == null || !span.isEntry()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60cf903b16bf0251193b59ccc9f31a7dcd82f965"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b4f7a47b33575548f1f283a9c2ce79513bdcd6b", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/2b4f7a47b33575548f1f283a9c2ce79513bdcd6b", "committedDate": "2020-07-04T15:23:42Z", "message": "add license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3e961928ecac5e3dc3f1d7071467e6076128df3", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/e3e961928ecac5e3dc3f1d7071467e6076128df3", "committedDate": "2020-07-04T17:13:57Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e58e8f64a37354bec48cd21f3a04fed54f933650", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/e58e8f64a37354bec48cd21f3a04fed54f933650", "committedDate": "2020-07-05T04:39:36Z", "message": "remove author & comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0fccf0d54217f99bd025530e3019306894244cd", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/f0fccf0d54217f99bd025530e3019306894244cd", "committedDate": "2020-07-05T07:09:44Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7e4a55c0c35e5a88f496cc8ec96a5c6c7787815", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/a7e4a55c0c35e5a88f496cc8ec96a5c6c7787815", "committedDate": "2020-07-05T07:11:35Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b111ce2f44d2c600ef54778d775fe510e0c8fae", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/0b111ce2f44d2c600ef54778d775fe510e0c8fae", "committedDate": "2020-07-05T07:13:20Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6d723876a631b1ee07d5fa523e83bad0be5c1fc", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/c6d723876a631b1ee07d5fa523e83bad0be5c1fc", "committedDate": "2020-07-05T10:38:58Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/4b9c8774f0d5302f0c35be12361be76f33f956d0", "committedDate": "2020-07-05T12:57:11Z", "message": "Merge branch 'master' into logic_endpoint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjc1MjAy", "url": "https://github.com/apache/skywalking/pull/5030#pullrequestreview-442675202", "createdAt": "2020-07-05T13:00:22Z", "commit": {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMzowMDoyMlrOGtCL9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxMzowMzoyMVrOGtCNtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NDkzNA==", "bodyText": "Why need this?", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449874934", "createdAt": "2020-07-05T13:00:22Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/graphql-12.x-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,126 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>graphql-12.x-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>jar</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-graphql-12.x-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>\n+        <test.framework.version>9.0</test.framework.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <test.framework>graphql</test.framework>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring.boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.graphql-java</groupId>\n+            <artifactId>graphql-java</artifactId>\n+            <version>${test.framework.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>graphql-12.x-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>assemble</id>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>single</goal>\n+                        </goals>\n+                        <configuration>\n+                            <descriptors>\n+                                <descriptor>src/main/assembly/assembly.xml</descriptor>\n+                            </descriptors>\n+                            <outputDirectory>./target/</outputDirectory>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTA5OQ==", "bodyText": "Same here.", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449875099", "createdAt": "2020-07-05T13:01:32Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/graphql-8.x-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>graphql-8.x-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>jar</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-graphql-8.x-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>\n+        <test.framework.version>8.0</test.framework.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <test.framework>graphql</test.framework>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring.boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.graphql-java</groupId>\n+            <artifactId>graphql-java</artifactId>\n+            <version>${test.framework.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>graphql-8.x-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>assemble</id>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>single</goal>\n+                        </goals>\n+                        <configuration>\n+                            <descriptors>\n+                                <descriptor>src/main/assembly/assembly.xml</descriptor>\n+                            </descriptors>\n+                            <outputDirectory>./target/</outputDirectory>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3NTM4Mw==", "bodyText": "Same here.", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r449875383", "createdAt": "2020-07-05T13:03:21Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/graphql-9.x-scenario/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <groupId>org.apache.skywalking.apm.testcase</groupId>\n+    <artifactId>graphql-9.x-scenario</artifactId>\n+    <version>1.0.0</version>\n+    <packaging>jar</packaging>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <name>skywalking-graphql-9.x-scenario</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <compiler.version>1.8</compiler.version>\n+        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>\n+        <test.framework.version>9.0</test.framework.version>\n+        <lombok.version>1.18.10</lombok.version>\n+        <test.framework>graphql</test.framework>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring.boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.graphql-java</groupId>\n+            <artifactId>graphql-java</artifactId>\n+            <version>${test.framework.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>${lombok.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <finalName>graphql-9.x-scenario</finalName>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${compiler.version}</source>\n+                    <target>${compiler.version}</target>\n+                    <encoding>${project.build.sourceEncoding}</encoding>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>assemble</id>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>single</goal>\n+                        </goals>\n+                        <configuration>\n+                            <descriptors>\n+                                <descriptor>src/main/assembly/assembly.xml</descriptor>\n+                            </descriptors>\n+                            <outputDirectory>./target/</outputDirectory>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <pluginRepositories>\n+        <pluginRepository>\n+            <id>spring-snapshots</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0"}, "originalPosition": 117}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjc2NDgz", "url": "https://github.com/apache/skywalking/pull/5030#pullrequestreview-442676483", "createdAt": "2020-07-05T13:14:57Z", "commit": {"oid": "4b9c8774f0d5302f0c35be12361be76f33f956d0"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0de7beaed58fef4eeb52327ab50152792ea86b32", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/0de7beaed58fef4eeb52327ab50152792ea86b32", "committedDate": "2020-07-05T14:25:14Z", "message": "Merge branch 'master' into logic_endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395", "author": {"user": {"login": "IanCao", "name": "caoyixiong"}}, "url": "https://github.com/apache/skywalking/commit/f9945e30474ba1375a6488e4e965fb68b1024395", "committedDate": "2020-07-05T14:48:55Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjg0MDU0", "url": "https://github.com/apache/skywalking/pull/5030#pullrequestreview-442684054", "createdAt": "2020-07-05T14:54:11Z", "commit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzgxODEx", "url": "https://github.com/apache/skywalking/pull/5030#pullrequestreview-444381811", "createdAt": "2020-07-08T03:07:15Z", "commit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowNzoxNlrOGuWe3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowNzoxNlrOGuWe3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjAzMA==", "bodyText": "Such kind of tags are not processable by the backend, according to the doc\n\nThe value of x-le should be JSON format\n\n@IanCao  did you check this plugin with the backend in a whole? FYI @wu-sheng", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451256030", "createdAt": "2020-07-08T03:07:16Z", "author": {"login": "kezhenxu94"}, "path": "test/plugin/scenarios/graphql-9.x-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+segmentItems:\n+- serviceName: graphql-9.x-scenario\n+  segmentSize: gt 1\n+  segments:\n+  - segmentId: not null\n+    spans:\n+    - operationName: user\n+      operationId: 0\n+      parentSpanId: 0\n+      spanId: 1\n+      spanLayer: Unknown\n+      startTime: nq 0\n+      endTime: nq 0\n+      componentId: 92\n+      isError: false\n+      spanType: Local\n+      peer: ''\n+      skipAnalysis: false\n+      tags:\n+      - {key: x-le, value: '{logic-span=true}'}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzgyMTA3", "url": "https://github.com/apache/skywalking/pull/5030#pullrequestreview-444382107", "createdAt": "2020-07-08T03:08:20Z", "commit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowODoyMVrOGuWf_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzowODoyMVrOGuWf_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NjMxNg==", "bodyText": "The value of x-le should be JSON format, this is obviously not the case by simply calling toString on a Map", "url": "https://github.com/apache/skywalking/pull/5030#discussion_r451256316", "createdAt": "2020-07-08T03:08:21Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/graphql-plugin/graphql-9.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/graphql/v9/GraphqlInterceptor.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.graphql.v9;\n+\n+import graphql.execution.ExecutionPath;\n+import graphql.execution.ExecutionStrategyParameters;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class GraphqlInterceptor implements InstanceMethodsAroundInterceptor {\n+\n+    @Override\n+    public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, MethodInterceptResult result) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        AbstractSpan span = ContextManager.createLocalSpan(parameters.getField().get(0).getName());\n+        Tags.LOGIC_ENDPOINT.set(span, buildLogicEndpointSpan());\n+        span.setComponent(ComponentsDefine.GRAPHQL);\n+    }\n+\n+    @Override\n+    public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Object ret) throws Throwable {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return ret;\n+        }\n+        ContextManager.stopSpan();\n+        return ret;\n+    }\n+\n+    @Override\n+    public void handleMethodException(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes, Throwable t) {\n+        ExecutionStrategyParameters parameters = (ExecutionStrategyParameters) allArguments[1];\n+        if (parameters == null || parameters.getParent().getPath() != ExecutionPath.rootPath()) {\n+            return;\n+        }\n+        dealException(t);\n+    }\n+\n+    private void dealException(Throwable throwable) {\n+        AbstractSpan span = ContextManager.activeSpan();\n+        span.errorOccurred();\n+        span.log(throwable);\n+    }\n+\n+    private String buildLogicEndpointSpan() {\n+        Map<String, Object> logicEndpointSpan = new HashMap<>();\n+        logicEndpointSpan.put(\"logic-span\", true);\n+        return logicEndpointSpan.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9945e30474ba1375a6488e4e965fb68b1024395"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2043, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}