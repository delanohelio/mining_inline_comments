{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0ODQ3NTMx", "number": 4276, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMjo0ODo1MlrODa3Y_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTowNToxNlrODbbGBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDk3MDg2OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/service-agent/java-agent/Supported-list.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMjo0ODo1MlrOFiBjiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMjo0ODo1MlrOFiBjiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTIyMTM4NQ==", "bodyText": "Use Apache Avro", "url": "https://github.com/apache/skywalking/pull/4276#discussion_r371221385", "createdAt": "2020-01-27T12:48:52Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/Supported-list.md", "diffHunk": "@@ -41,6 +41,7 @@\n   * [Apache ServiceComb Java Chassis](https://github.com/apache/servicecomb-java-chassis) 0.1 -> 0.5,1.x\n   * [SOFARPC](https://github.com/alipay/sofa-rpc) 5.4.0\n   * [Armeria](https://github.com/line/armeria) 0.63.0 -> 0.97.0\n+  * [Avro](http://avro.apache.org) 1.7.0 - 1.8.x", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7c902f14626f942c406508180e0ee0ff04867e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTA0OTg4OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzoxNzo1OFrOFiCTGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzoxNzo1OFrOFiCTGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTIzMzU2MA==", "bodyText": "Why empty string.", "url": "https://github.com/apache/skywalking/pull/4276#discussion_r371233560", "createdAt": "2020-01-27T13:17:58Z", "author": {"login": "arugal"}, "path": "apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.plugin.avro;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Method;\n+import org.apache.avro.Protocol;\n+import org.apache.avro.ipc.Requestor;\n+import org.apache.avro.ipc.Transceiver;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+\n+public abstract class AbstractRequestInterceptor implements InstanceConstructorInterceptor, InstanceMethodsAroundInterceptor {\n+    private static final ILog LOG = LogManager.getLogger(GenericRequestorInterceptor.class);\n+\n+    @Override\n+    public void onConstruct(EnhancedInstance objInst, Object[] allArguments) {\n+        if (objInst.getSkyWalkingDynamicField() == null) {\n+            Requestor requestor = (Requestor)objInst;\n+            requestor.addRPCPlugin(new SWClientRPCPlugin());\n+\n+            Protocol protocol = (Protocol)allArguments[0];\n+            Transceiver transceiver = (Transceiver)allArguments[1];\n+            try {\n+                objInst.setSkyWalkingDynamicField(new AvroInstance(\n+                    protocol.getNamespace() + \".\" + protocol.getName() + \".\",\n+                    transceiver.getRemoteName()\n+                ));\n+            } catch (IOException e) {\n+                objInst.setSkyWalkingDynamicField(new AvroInstance(\"Undefined\", \"Undefined\"));\n+                LOG.error(\"\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7c902f14626f942c406508180e0ee0ff04867e"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDgxMjIxOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDo1OToyNFrOFi5sqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDo1OToyNFrOFi5sqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE0MTIyNw==", "bodyText": "LOG to logger? I remember most codes use this.", "url": "https://github.com/apache/skywalking/pull/4276#discussion_r372141227", "createdAt": "2020-01-29T00:59:24Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.plugin.avro;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Method;\n+import org.apache.avro.Protocol;\n+import org.apache.avro.ipc.Requestor;\n+import org.apache.avro.ipc.Transceiver;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+\n+public abstract class AbstractRequestInterceptor implements InstanceConstructorInterceptor, InstanceMethodsAroundInterceptor {\n+    private static final ILog LOG = LogManager.getLogger(GenericRequestorInterceptor.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e609ecaddb1273dde4d56ca719670423c5b0b554"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDgxNzE0OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/SWClientRPCPlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTowMzowNFrOFi5v4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTowMzowNFrOFi5v4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE0MjA1MA==", "bodyText": "Is this check really meaningful? Such as in some cases, the context wouldn't be active? This Check is also a payload.", "url": "https://github.com/apache/skywalking/pull/4276#discussion_r372142050", "createdAt": "2020-01-29T01:03:04Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/SWClientRPCPlugin.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.plugin.avro;\n+\n+import org.apache.avro.ipc.RPCContext;\n+import org.apache.avro.ipc.RPCPlugin;\n+import org.apache.skywalking.apm.agent.core.context.CarrierItem;\n+import org.apache.skywalking.apm.agent.core.context.ContextCarrier;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+\n+import java.nio.ByteBuffer;\n+\n+public class SWClientRPCPlugin extends RPCPlugin {\n+\n+    @Override\n+    public void clientSendRequest(RPCContext context) {\n+        if (ContextManager.isActive()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e609ecaddb1273dde4d56ca719670423c5b0b554"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDgyMDU1OnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/avro-scenario/config/expectedData.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTowNToxNlrOFi5yCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTowNToxNlrOFi5yCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE0MjYwMQ==", "bodyText": "Don't use this kind of format. Please change it to normal one.", "url": "https://github.com/apache/skywalking/pull/4276#discussion_r372142601", "createdAt": "2020-01-29T01:05:16Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/avro-scenario/config/expectedData.yaml", "diffHunk": "@@ -0,0 +1,75 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+registryItems:\n+  applications:\n+    - {avro-server: 2}\n+    - {avro-client: 3}\n+  instances:\n+    - {avro-server: 1}\n+    - {avro-client: 1}\n+  operationNames:\n+    - avro-server: [example.proto.Greeter.hello]\n+    - avro-client: [/avro-scenario/case/healthCheck, /avro-scenario/case/avro-scenario]\n+  heartbeat: []\n+segmentItems:\n+  - applicationCode: avro-server\n+    segmentSize: 1\n+    segments:\n+      - segmentId: not null\n+        spans:\n+          - operationName: example.proto.Greeter.hello\n+            operationId: 0\n+            parentSpanId: -1\n+            spanId: 0\n+            spanLayer: RPCFramework\n+            startTime: gt 0\n+            endTime: gt 0\n+            componentId: 82\n+            componentName: ''\n+            isError: false\n+            spanType: Entry\n+            peer: ''\n+            peerId: 0\n+            refs:\n+              - {parentEndpointId: 0, parentEndpoint: /avro-scenario/case/avro-scenario, networkAddressId: 0,\n+                 entryEndpointId: 0, refType: CrossProcess, parentSpanId: 1, parentTraceSegmentId: not null,\n+                 parentServiceInstanceId: 2, networkAddress: 'localhost/127.0.0.1:9018', entryEndpoint: /avro-scenario/case/avro-scenario,\n+                 entryServiceInstanceId: 2}\n+  - applicationCode: avro-client\n+    segmentSize: ge 2\n+    segments:\n+      - segmentId: not null\n+        spans:\n+          - {operationName: example.proto.Greeter.hello, operationId: 0, parentSpanId: 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e609ecaddb1273dde4d56ca719670423c5b0b554"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4538, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}