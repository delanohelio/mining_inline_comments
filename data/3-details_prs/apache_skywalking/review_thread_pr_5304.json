{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NjY3ODk4", "number": 5304, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMToyMDoyM1rOEXlREA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzozNToxNVrOEX7pWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTYzMjgwOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/KafkaConsumerInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMToyMDoyM1rOG_c3FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMTo0MDowOVrOG_5Atg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4NjMyNA==", "bodyText": "No Context Carrier?", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469186324", "createdAt": "2020-08-12T11:20:23Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/KafkaConsumerInterceptor.java", "diffHunk": "@@ -66,9 +66,10 @@ public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allA\n         //\n         if (records.size() > 0) {\n             ConsumerEnhanceRequiredInfo requiredInfo = (ConsumerEnhanceRequiredInfo) objInst.getSkyWalkingDynamicField();\n-            if (ContextManager.getRuntimeContext().get(Constants.SPRING_KAFKA_FLAG) != null) {\n-                ContextManager.createEntrySpan(Constants.SPRING_KAFKA_POLL_AND_INVOKE_OPERATION_NAME, null);\n-                ((SpringKafkaContext) ContextManager.getRuntimeContext().get(Constants.SPRING_KAFKA_FLAG)).setNeedStop(true);\n+            KafkaContext context = (KafkaContext) ContextManager.getRuntimeContext().get(Constants.KAFKA_FLAG);\n+            if (context != null) {\n+                ContextManager.createEntrySpan(context.getOperationName(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fff6e95bf1ad3040e60023940f48165770b1fc1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY0NzU0Mg==", "bodyText": "yes", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469647542", "createdAt": "2020-08-13T01:40:09Z", "author": {"login": "zhaoyuguang"}, "path": "apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/KafkaConsumerInterceptor.java", "diffHunk": "@@ -66,9 +66,10 @@ public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allA\n         //\n         if (records.size() > 0) {\n             ConsumerEnhanceRequiredInfo requiredInfo = (ConsumerEnhanceRequiredInfo) objInst.getSkyWalkingDynamicField();\n-            if (ContextManager.getRuntimeContext().get(Constants.SPRING_KAFKA_FLAG) != null) {\n-                ContextManager.createEntrySpan(Constants.SPRING_KAFKA_POLL_AND_INVOKE_OPERATION_NAME, null);\n-                ((SpringKafkaContext) ContextManager.getRuntimeContext().get(Constants.SPRING_KAFKA_FLAG)).setNeedStop(true);\n+            KafkaContext context = (KafkaContext) ContextManager.getRuntimeContext().get(Constants.KAFKA_FLAG);\n+            if (context != null) {\n+                ContextManager.createEntrySpan(context.getOperationName(), null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4NjMyNA=="}, "originalCommit": {"oid": "5fff6e95bf1ad3040e60023940f48165770b1fc1"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTY2NDQzOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/kafka-commons/src/main/java/org/apache/skywalking/apm/plugin/kafka/define/KafkaContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMTozMDozOFrOG_dJ_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMTo0MDowMlrOG_5ApA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5MTE2NA==", "bodyText": "I rechecked the codes, this seems not necessary. You always needStop=false. Could we consider to remove it?", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469191164", "createdAt": "2020-08-12T11:30:38Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/kafka-commons/src/main/java/org/apache/skywalking/apm/plugin/kafka/define/KafkaContext.java", "diffHunk": "@@ -19,19 +19,30 @@\n \n package org.apache.skywalking.apm.plugin.kafka.define;\n \n-public class SpringKafkaContext {\n+public class KafkaContext {\n \n-    public SpringKafkaContext() {\n+    public KafkaContext(String operationName) {\n         needStop = false;\n+        this.operationName = operationName;\n     }\n \n     private boolean needStop;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fff6e95bf1ad3040e60023940f48165770b1fc1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY0NzUyNA==", "bodyText": "fixed", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469647524", "createdAt": "2020-08-13T01:40:02Z", "author": {"login": "zhaoyuguang"}, "path": "apm-sniffer/apm-sdk-plugin/kafka-commons/src/main/java/org/apache/skywalking/apm/plugin/kafka/define/KafkaContext.java", "diffHunk": "@@ -19,19 +19,30 @@\n \n package org.apache.skywalking.apm.plugin.kafka.define;\n \n-public class SpringKafkaContext {\n+public class KafkaContext {\n \n-    public SpringKafkaContext() {\n+    public KafkaContext(String operationName) {\n         needStop = false;\n+        this.operationName = operationName;\n     }\n \n     private boolean needStop;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5MTE2NA=="}, "originalCommit": {"oid": "5fff6e95bf1ad3040e60023940f48165770b1fc1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTc4MTU3OnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/kafka-scenario/src/main/java/test/org/apache/skywalking/apm/testcase/kafka/controller/CaseController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjowODo0NFrOG_eQ_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMTozOTo1NVrOG_5AhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwOTM0Mw==", "bodyText": "Are you forcing to create 2 consumer methods?", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469209343", "createdAt": "2020-08-12T12:08:44Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/kafka-scenario/src/main/java/test/org/apache/skywalking/apm/testcase/kafka/controller/CaseController.java", "diffHunk": "@@ -223,29 +235,33 @@ public void run() {\n             consumerProperties.put(\"value.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\");\n             KafkaConsumer<String, String> consumer = new KafkaConsumer<>(consumerProperties);\n             consumer.subscribe(topicPattern, new NoOpConsumerRebalanceListener());\n-            int i = 0;\n-            while (i++ <= 10) {\n-                try {\n-                    Thread.sleep(1 * 1000);\n-                } catch (InterruptedException e) {\n-                }\n+            while (true) {\n+                if (pollAndInvoke(consumer)) break;\n+            }\n+            consumer.close();\n+        }\n \n-                ConsumerRecords<String, String> records = consumer.poll(100);\n+        @KafkaPollAndInvoke\n+        private boolean pollAndInvoke(KafkaConsumer<String, String> consumer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fff6e95bf1ad3040e60023940f48165770b1fc1"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY0NzQ5Mg==", "bodyText": "yes", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469647492", "createdAt": "2020-08-13T01:39:55Z", "author": {"login": "zhaoyuguang"}, "path": "test/plugin/scenarios/kafka-scenario/src/main/java/test/org/apache/skywalking/apm/testcase/kafka/controller/CaseController.java", "diffHunk": "@@ -223,29 +235,33 @@ public void run() {\n             consumerProperties.put(\"value.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\");\n             KafkaConsumer<String, String> consumer = new KafkaConsumer<>(consumerProperties);\n             consumer.subscribe(topicPattern, new NoOpConsumerRebalanceListener());\n-            int i = 0;\n-            while (i++ <= 10) {\n-                try {\n-                    Thread.sleep(1 * 1000);\n-                } catch (InterruptedException e) {\n-                }\n+            while (true) {\n+                if (pollAndInvoke(consumer)) break;\n+            }\n+            consumer.close();\n+        }\n \n-                ConsumerRecords<String, String> records = consumer.poll(100);\n+        @KafkaPollAndInvoke\n+        private boolean pollAndInvoke(KafkaConsumer<String, String> consumer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwOTM0Mw=="}, "originalCommit": {"oid": "5fff6e95bf1ad3040e60023940f48165770b1fc1"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTI5ODUxOnYy", "diffSide": "RIGHT", "path": "apm-application-toolkit/apm-toolkit-kafka/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzozNTowM1rOG__iaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODoyNjowM1rOHABQPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NDQ3Mg==", "bodyText": "This pom seems not formated right. :)", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469754472", "createdAt": "2020-08-13T07:35:03Z", "author": {"login": "wu-sheng"}, "path": "apm-application-toolkit/apm-toolkit-kafka/pom.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+~ Licensed to the Apache Software Foundation (ASF) under one or more\n+~ contributor license agreements.  See the NOTICE file distributed with\n+~ this work for additional information regarding copyright ownership.\n+~ The ASF licenses this file to You under the Apache License, Version 2.0\n+~ (the \"License\"); you may not use this file except in compliance with\n+~ the License.  You may obtain a copy of the License at\n+~\n+~     http://www.apache.org/licenses/LICENSE-2.0\n+~\n+~ Unless required by applicable law or agreed to in writing, software\n+~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+~ See the License for the specific language governing permissions and\n+~ limitations under the License.\n+~\n+-->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<parent>\n+    <artifactId>apm-application-toolkit</artifactId>\n+    <groupId>org.apache.skywalking</groupId>\n+    <version>8.2.0-SNAPSHOT</version>\n+</parent>\n+<modelVersion>4.0.0</modelVersion>\n+\n+<artifactId>apm-toolkit-kafka</artifactId>\n+<packaging>jar</packaging>\n+\n+<url>http://maven.apache.org</url>\n+</project>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4327b47569ccad52cb649514003f66443bba226a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc4MjU5MA==", "bodyText": "fixed,  :)", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469782590", "createdAt": "2020-08-13T08:26:03Z", "author": {"login": "zhaoyuguang"}, "path": "apm-application-toolkit/apm-toolkit-kafka/pom.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+~ Licensed to the Apache Software Foundation (ASF) under one or more\n+~ contributor license agreements.  See the NOTICE file distributed with\n+~ this work for additional information regarding copyright ownership.\n+~ The ASF licenses this file to You under the Apache License, Version 2.0\n+~ (the \"License\"); you may not use this file except in compliance with\n+~ the License.  You may obtain a copy of the License at\n+~\n+~     http://www.apache.org/licenses/LICENSE-2.0\n+~\n+~ Unless required by applicable law or agreed to in writing, software\n+~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+~ See the License for the specific language governing permissions and\n+~ limitations under the License.\n+~\n+-->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<parent>\n+    <artifactId>apm-application-toolkit</artifactId>\n+    <groupId>org.apache.skywalking</groupId>\n+    <version>8.2.0-SNAPSHOT</version>\n+</parent>\n+<modelVersion>4.0.0</modelVersion>\n+\n+<artifactId>apm-toolkit-kafka</artifactId>\n+<packaging>jar</packaging>\n+\n+<url>http://maven.apache.org</url>\n+</project>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NDQ3Mg=="}, "originalCommit": {"oid": "4327b47569ccad52cb649514003f66443bba226a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTI5OTQ1OnYy", "diffSide": "RIGHT", "path": "apm-application-toolkit/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzozNToxNVrOG__i4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODoyNToxOFrOHABOxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NDU5NQ==", "bodyText": "Put in the last one.", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469754595", "createdAt": "2020-08-13T07:35:15Z", "author": {"login": "wu-sheng"}, "path": "apm-application-toolkit/pom.xml", "diffHunk": "@@ -31,6 +31,7 @@\n     </properties>\n \n     <modules>\n+        <module>apm-toolkit-kafka</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4327b47569ccad52cb649514003f66443bba226a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc4MjIxMg==", "bodyText": "fixed", "url": "https://github.com/apache/skywalking/pull/5304#discussion_r469782212", "createdAt": "2020-08-13T08:25:18Z", "author": {"login": "zhaoyuguang"}, "path": "apm-application-toolkit/pom.xml", "diffHunk": "@@ -31,6 +31,7 @@\n     </properties>\n \n     <modules>\n+        <module>apm-toolkit-kafka</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NDU5NQ=="}, "originalCommit": {"oid": "4327b47569ccad52cb649514003f66443bba226a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4939, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}