{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3Nzc2MzEw", "number": 5085, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODoxOTozN1rOEXhZ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyNToyOFrOEZF-eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTAwMDA0OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/RestMappingMethodInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODoxOTozN1rOG_W0hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODoxOTozN1rOG_W0hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4NzM2Nw==", "bodyText": "this return will cause the recursive parse to be ended\uff0c should be \u201creturn null\u201d", "url": "https://github.com/apache/skywalking/pull/5085#discussion_r469087367", "createdAt": "2020-08-12T08:19:37Z", "author": {"login": "whfjam"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/RestMappingMethodInterceptor.java", "diffHunk": "@@ -80,6 +80,20 @@ public String getRequestURL(Method method) {\n \n     @Override\n     public String getAcceptedMethodTypes(Method method) {\n-        return \"\";\n+        return ParsePathUtil.recursiveParseMethodAnnotation(method, m -> {\n+            if (AnnotationUtils.getAnnotation(m, GetMapping.class) != null) {\n+                return \"{GET}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PostMapping.class) != null) {\n+                return \"{POST}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PutMapping.class) != null) {\n+                return \"{PUT}\";\n+            } else if (AnnotationUtils.getAnnotation(m, DeleteMapping.class) != null) {\n+                return \"{DELETE}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PatchMapping.class) != null) {\n+                return \"{PATCH}\";\n+            } else {\n+                return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9818c6ee26ea12dea69d32a10c1d64ca225e20a8"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTAwMjgzOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/RestMappingMethodInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODoyMDoyMFrOG_W2Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODoyMDoyMFrOG_W2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4Nzc5NQ==", "bodyText": "consider about return RequestMethod.GET.toString(); and so on", "url": "https://github.com/apache/skywalking/pull/5085#discussion_r469087795", "createdAt": "2020-08-12T08:20:20Z", "author": {"login": "whfjam"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/RestMappingMethodInterceptor.java", "diffHunk": "@@ -80,6 +80,20 @@ public String getRequestURL(Method method) {\n \n     @Override\n     public String getAcceptedMethodTypes(Method method) {\n-        return \"\";\n+        return ParsePathUtil.recursiveParseMethodAnnotation(method, m -> {\n+            if (AnnotationUtils.getAnnotation(m, GetMapping.class) != null) {\n+                return \"{GET}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9818c6ee26ea12dea69d32a10c1d64ca225e20a8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTA5MTc0OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/RestMappingMethodInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODo0MzoxMFrOG_XtNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODo0MzoxMFrOG_XtNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwMTg3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return \"\";\n          \n          \n            \n                            return null;", "url": "https://github.com/apache/skywalking/pull/5085#discussion_r469101876", "createdAt": "2020-08-12T08:43:10Z", "author": {"login": "BFergerson"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/RestMappingMethodInterceptor.java", "diffHunk": "@@ -80,6 +80,20 @@ public String getRequestURL(Method method) {\n \n     @Override\n     public String getAcceptedMethodTypes(Method method) {\n-        return \"\";\n+        return ParsePathUtil.recursiveParseMethodAnnotation(method, m -> {\n+            if (AnnotationUtils.getAnnotation(m, GetMapping.class) != null) {\n+                return \"{GET}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PostMapping.class) != null) {\n+                return \"{POST}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PutMapping.class) != null) {\n+                return \"{PUT}\";\n+            } else if (AnnotationUtils.getAnnotation(m, DeleteMapping.class) != null) {\n+                return \"{DELETE}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PatchMapping.class) != null) {\n+                return \"{PATCH}\";\n+            } else {\n+                return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9818c6ee26ea12dea69d32a10c1d64ca225e20a8"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzQ3NzcwOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/RestMappingMethodInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyNToyOFrOHBtgTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTozOTowOVrOHBuEZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1NjE3NA==", "bodyText": "I think for safe, this should return \"\", right?", "url": "https://github.com/apache/skywalking/pull/5085#discussion_r471556174", "createdAt": "2020-08-17T15:25:28Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/RestMappingMethodInterceptor.java", "diffHunk": "@@ -80,6 +80,20 @@ public String getRequestURL(Method method) {\n \n     @Override\n     public String getAcceptedMethodTypes(Method method) {\n-        return \"\";\n+        return ParsePathUtil.recursiveParseMethodAnnotation(method, m -> {\n+            if (AnnotationUtils.getAnnotation(m, GetMapping.class) != null) {\n+                return \"{GET}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PostMapping.class) != null) {\n+                return \"{POST}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PutMapping.class) != null) {\n+                return \"{PUT}\";\n+            } else if (AnnotationUtils.getAnnotation(m, DeleteMapping.class) != null) {\n+                return \"{DELETE}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PatchMapping.class) != null) {\n+                return \"{PATCH}\";\n+            } else {\n+                return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42eba1f39a678069d546e369cd5c1369d3ca39c6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2NTQxMw==", "bodyText": "I'm sure it'll always end up being \"\" but returning null allows \n  \n    \n      skywalking/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/ParsePathUtil.java\n    \n    \n         Line 34\n      in\n      b173cde\n    \n    \n    \n    \n\n        \n          \n           if (Objects.isNull(result)) { \n        \n    \n  \n\n to execute.", "url": "https://github.com/apache/skywalking/pull/5085#discussion_r471565413", "createdAt": "2020-08-17T15:39:09Z", "author": {"login": "BFergerson"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/RestMappingMethodInterceptor.java", "diffHunk": "@@ -80,6 +80,20 @@ public String getRequestURL(Method method) {\n \n     @Override\n     public String getAcceptedMethodTypes(Method method) {\n-        return \"\";\n+        return ParsePathUtil.recursiveParseMethodAnnotation(method, m -> {\n+            if (AnnotationUtils.getAnnotation(m, GetMapping.class) != null) {\n+                return \"{GET}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PostMapping.class) != null) {\n+                return \"{POST}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PutMapping.class) != null) {\n+                return \"{PUT}\";\n+            } else if (AnnotationUtils.getAnnotation(m, DeleteMapping.class) != null) {\n+                return \"{DELETE}\";\n+            } else if (AnnotationUtils.getAnnotation(m, PatchMapping.class) != null) {\n+                return \"{PATCH}\";\n+            } else {\n+                return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1NjE3NA=="}, "originalCommit": {"oid": "42eba1f39a678069d546e369cd5c1369d3ca39c6"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 76, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}