{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMzY0ODI0", "number": 4987, "title": "support sampleRate as Dynamic Configuration (#4968)", "bodyText": "Please answer these questions before submitting pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n\n\n\nBug fix\n\n\nBug description.\n\n\nHow to fix?\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.", "createdAt": "2020-06-29T12:07:35Z", "url": "https://github.com/apache/skywalking/pull/4987", "merged": true, "mergeCommit": {"oid": "73ee3103e2158c6f723b3e146e8d27afb7c72c8f"}, "closed": true, "closedAt": "2020-07-07T00:40:45Z", "author": {"login": "killGC"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv_3ZZgH2gAyNDQxMzY0ODI0OmVjY2Q3NWFlODViYTk2NjMyMGZkMTBjNGVlYTVkNTcyZTZlZDdkMWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyaL3JgH2gAyNDQxMzY0ODI0OjA4ZDY4NmFhN2M5NDhmYjMyOThkNDU1NDlkZmIyMTMzNjFhZmI2OTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eccd75ae85ba966320fd10c4eea5d572e6ed7d1b", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/eccd75ae85ba966320fd10c4eea5d572e6ed7d1b", "committedDate": "2020-06-29T12:05:03Z", "message": "support sampleRate as Dynamic Configuration (#4968)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce7fce2825d41f286247fbca901328b4e8ad86e1", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/ce7fce2825d41f286247fbca901328b4e8ad86e1", "committedDate": "2020-06-29T12:35:03Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6b48e4c40c8bde75f3626cfe5fae26060446605", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/b6b48e4c40c8bde75f3626cfe5fae26060446605", "committedDate": "2020-06-29T16:08:20Z", "message": "add ASF License"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8135eeb14c97fc509058cc2e6d1a453708c9019c", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/8135eeb14c97fc509058cc2e6d1a453708c9019c", "committedDate": "2020-06-29T16:10:28Z", "message": "add empty line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fb00957dccd64874d0d9aff573cf6da27be4981", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/8fb00957dccd64874d0d9aff573cf6da27be4981", "committedDate": "2020-06-29T16:12:27Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc776b9a1e118771fc52c21369e42073cfaaf5b7", "author": {"user": {"login": "arugal", "name": "zhang-wei"}}, "url": "https://github.com/apache/skywalking/commit/fc776b9a1e118771fc52c21369e42073cfaaf5b7", "committedDate": "2020-06-30T01:00:34Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db74d53b781fcf9dbdca064e110d018699436b64", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/db74d53b781fcf9dbdca064e110d018699436b64", "committedDate": "2020-07-01T11:25:33Z", "message": "modify code format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13f65dcbfa2f5074bfa8d6659f5625244eed9a56", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/13f65dcbfa2f5074bfa8d6659f5625244eed9a56", "committedDate": "2020-07-01T15:11:24Z", "message": "modify code format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e16dd90a70e6924021ddc7b9af567271ba71f59", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/8e16dd90a70e6924021ddc7b9af567271ba71f59", "committedDate": "2020-07-01T15:28:37Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eff334209cd26f44c6e60dfaf36232b69989a43", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/2eff334209cd26f44c6e60dfaf36232b69989a43", "committedDate": "2020-07-01T23:17:49Z", "message": "Merge branch 'master' of https://github.com/killGC/skywalking"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjY3NDQw", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-441267440", "createdAt": "2020-07-02T00:02:49Z", "commit": {"oid": "2eff334209cd26f44c6e60dfaf36232b69989a43"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMDowMjo0OVrOGr5DUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMDoxMzo0OFrOGr5OfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3NjY5MQ==", "bodyText": "What is the expected sampling rate if the delete happens?", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r448676691", "createdAt": "2020-07-02T00:02:49Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceSampleRateWatcher.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.trace.provider;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigChangeWatcher;\n+import org.apache.skywalking.oap.server.core.Const;\n+import org.apache.skywalking.oap.server.receiver.trace.module.TraceModule;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Slf4j\n+public class TraceSampleRateWatcher extends ConfigChangeWatcher {\n+    private  AtomicReference<String> settingsString;\n+    private  AtomicReference<Integer> sampleRate;\n+\n+    public TraceSampleRateWatcher(String config, TraceModuleProvider provider) {\n+        super(TraceModule.NAME, provider, \"sampleRate\");\n+        settingsString = new AtomicReference<>(Const.EMPTY_STRING);\n+        sampleRate = new AtomicReference<>();\n+\n+        activeSetting(config);\n+    }\n+\n+    private void activeSetting(String config) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Updating using new static config: {}\", config);\n+        }\n+        settingsString.set(config);\n+        try {\n+            sampleRate.set(Integer.parseInt(config));\n+        } catch (NumberFormatException ex) {\n+            log.error(\"Cannot load sampleRate from: {}\", config, ex);\n+        }\n+    }\n+\n+    @Override\n+    public void notify(ConfigChangeEvent value) {\n+        if (EventType.DELETE.equals(value.getEventType())) {\n+            activeSetting(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2eff334209cd26f44c6e60dfaf36232b69989a43"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3OTQ0NQ==", "bodyText": "I think should not change to String here, please move this into the TraceSampleRateWatcher.", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r448679445", "createdAt": "2020-07-02T00:13:25Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceModuleProvider.java", "diffHunk": "@@ -75,8 +77,11 @@ public void prepare() throws ServiceNotProvidedException {\n \n         uninstrumentedGatewaysConfig = new UninstrumentedGatewaysConfig(this);\n \n+        traceSampleRateWatcher = new TraceSampleRateWatcher(String.valueOf(moduleConfig.getSampleRate()), this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2eff334209cd26f44c6e60dfaf36232b69989a43"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3OTU0OQ==", "bodyText": "I think you don't need settingsString", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r448679549", "createdAt": "2020-07-02T00:13:48Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceSampleRateWatcher.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.trace.provider;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigChangeWatcher;\n+import org.apache.skywalking.oap.server.core.Const;\n+import org.apache.skywalking.oap.server.receiver.trace.module.TraceModule;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Slf4j\n+public class TraceSampleRateWatcher extends ConfigChangeWatcher {\n+    private  AtomicReference<String> settingsString;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2eff334209cd26f44c6e60dfaf36232b69989a43"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82364c3039dda591534269ecf6a3d0144c063d6f", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/82364c3039dda591534269ecf6a3d0144c063d6f", "committedDate": "2020-07-02T01:27:32Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6299d5f11397d5fcf498764f2310bcb2d812d3c1", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/6299d5f11397d5fcf498764f2310bcb2d812d3c1", "committedDate": "2020-07-02T14:37:52Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f38daf176e4e1de372d49db1247509f4f8cd9ce", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/6f38daf176e4e1de372d49db1247509f4f8cd9ce", "committedDate": "2020-07-02T15:15:32Z", "message": "fix problem from review code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzkxOTM1", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-441791935", "createdAt": "2020-07-02T15:21:29Z", "commit": {"oid": "6f38daf176e4e1de372d49db1247509f4f8cd9ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNToyMToyOVrOGsRnZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNToyMToyOVrOGsRnZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3OTE0Mg==", "bodyText": "Please set up a UT for this. Test this watcher could be driven correctly.", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r449079142", "createdAt": "2020-07-02T15:21:29Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceSampleRateWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.trace.provider;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigChangeWatcher;\n+import org.apache.skywalking.oap.server.receiver.trace.module.TraceModule;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Slf4j\n+public class TraceSampleRateWatcher extends ConfigChangeWatcher {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f38daf176e4e1de372d49db1247509f4f8cd9ce"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzkyNzk5", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-441792799", "createdAt": "2020-07-02T15:22:00Z", "commit": {"oid": "6f38daf176e4e1de372d49db1247509f4f8cd9ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNToyMjowMFrOGsRoyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNToyMjowMFrOGsRoyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3OTQ5OA==", "bodyText": "Why public?", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r449079498", "createdAt": "2020-07-02T15:22:00Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceSampleRateWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.trace.provider;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigChangeWatcher;\n+import org.apache.skywalking.oap.server.receiver.trace.module.TraceModule;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Slf4j\n+public class TraceSampleRateWatcher extends ConfigChangeWatcher {\n+    private  AtomicReference<Integer> sampleRate;\n+\n+    public TraceSampleRateWatcher(TraceModuleProvider provider) {\n+        super(TraceModule.NAME, provider, \"sampleRate\");\n+        sampleRate = new AtomicReference<>();\n+        sampleRate.set(getDefaultValue());\n+    }\n+\n+    private void activeSetting(String config) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Updating using new static config: {}\", config);\n+        }\n+        try {\n+            sampleRate.set(Integer.parseInt(config));\n+        } catch (NumberFormatException ex) {\n+            log.error(\"Cannot load sampleRate from: {}\", config, ex);\n+        }\n+    }\n+\n+    @Override\n+    public void notify(ConfigChangeEvent value) {\n+        if (EventType.DELETE.equals(value.getEventType())) {\n+            activeSetting(String.valueOf(getDefaultValue()));\n+        } else {\n+            activeSetting(value.getNewValue());\n+        }\n+    }\n+\n+    @Override\n+    public String value() {\n+        return String.valueOf(sampleRate.get());\n+    }\n+\n+    public int getDefaultValue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f38daf176e4e1de372d49db1247509f4f8cd9ce"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzk0NjMw", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-441794630", "createdAt": "2020-07-02T15:23:07Z", "commit": {"oid": "6f38daf176e4e1de372d49db1247509f4f8cd9ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNToyMzowOFrOGsRrqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNToyMzowOFrOGsRrqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA4MDIzMw==", "bodyText": "I think you should use sampleRate.get() only. Why sampleRate.get() == null? In which case?", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r449080233", "createdAt": "2020-07-02T15:23:08Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceSampleRateWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.trace.provider;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigChangeWatcher;\n+import org.apache.skywalking.oap.server.receiver.trace.module.TraceModule;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Slf4j\n+public class TraceSampleRateWatcher extends ConfigChangeWatcher {\n+    private  AtomicReference<Integer> sampleRate;\n+\n+    public TraceSampleRateWatcher(TraceModuleProvider provider) {\n+        super(TraceModule.NAME, provider, \"sampleRate\");\n+        sampleRate = new AtomicReference<>();\n+        sampleRate.set(getDefaultValue());\n+    }\n+\n+    private void activeSetting(String config) {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Updating using new static config: {}\", config);\n+        }\n+        try {\n+            sampleRate.set(Integer.parseInt(config));\n+        } catch (NumberFormatException ex) {\n+            log.error(\"Cannot load sampleRate from: {}\", config, ex);\n+        }\n+    }\n+\n+    @Override\n+    public void notify(ConfigChangeEvent value) {\n+        if (EventType.DELETE.equals(value.getEventType())) {\n+            activeSetting(String.valueOf(getDefaultValue()));\n+        } else {\n+            activeSetting(value.getNewValue());\n+        }\n+    }\n+\n+    @Override\n+    public String value() {\n+        return String.valueOf(sampleRate.get());\n+    }\n+\n+    public int getDefaultValue() {\n+        return ((TraceModuleProvider) this.getProvider()).getModuleConfig().getSampleRate();\n+    }\n+\n+    public int getSampleRate() {\n+        return sampleRate.get() == null ? getDefaultValue() : sampleRate.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f38daf176e4e1de372d49db1247509f4f8cd9ce"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "989a9f792f47f6d7b83b0a6bd53c3ebb716c49b1", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/989a9f792f47f6d7b83b0a6bd53c3ebb716c49b1", "committedDate": "2020-07-02T15:44:18Z", "message": "fix problem from review code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDkxNDg3", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-442091487", "createdAt": "2020-07-03T01:02:43Z", "commit": {"oid": "989a9f792f47f6d7b83b0a6bd53c3ebb716c49b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMTowMjo0M1rOGsg0cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMTowMjo0M1rOGsg0cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyODI0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private  AtomicReference<Integer> sampleRate;\n          \n          \n            \n                private AtomicReference<Integer> sampleRate;", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r449328243", "createdAt": "2020-07-03T01:02:43Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceSampleRateWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.trace.provider;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigChangeWatcher;\n+import org.apache.skywalking.oap.server.receiver.trace.module.TraceModule;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Slf4j\n+public class TraceSampleRateWatcher extends ConfigChangeWatcher {\n+    private  AtomicReference<Integer> sampleRate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "989a9f792f47f6d7b83b0a6bd53c3ebb716c49b1"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5eb783b20d0bb07fd09f67011cdc00f119221aa", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/c5eb783b20d0bb07fd09f67011cdc00f119221aa", "committedDate": "2020-07-03T05:12:49Z", "message": "Update oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceSampleRateWatcher.java\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08780a32b7333b6d3188de4f9ff0163e447d14f2", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/08780a32b7333b6d3188de4f9ff0163e447d14f2", "committedDate": "2020-07-03T05:14:12Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a667e88abd4498db37b73f1595454e543f96610", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/2a667e88abd4498db37b73f1595454e543f96610", "committedDate": "2020-07-03T09:46:19Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d67606fd1ba3c01bfadfb7c056d38868aa8a5a28", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/d67606fd1ba3c01bfadfb7c056d38868aa8a5a28", "committedDate": "2020-07-03T15:35:24Z", "message": "add UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e27583546b40907cc29e6e527cbe50a48b3681b", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/0e27583546b40907cc29e6e527cbe50a48b3681b", "committedDate": "2020-07-03T16:04:27Z", "message": "fix code format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15ee1dd78c446c81f17bf3b4e21e68631e0fb3a4", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/15ee1dd78c446c81f17bf3b4e21e68631e0fb3a4", "committedDate": "2020-07-04T05:13:04Z", "message": "fix code format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNTk3NDc2", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-442597476", "createdAt": "2020-07-04T08:58:01Z", "commit": {"oid": "15ee1dd78c446c81f17bf3b4e21e68631e0fb3a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwODo1ODowMVrOGs616A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwODo1ODowMVrOGs616A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDYwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void TestInit() {\n          \n          \n            \n                public void testInit() {", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r449754600", "createdAt": "2020-07-04T08:58:01Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceSampleRateWatcherTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.trace.provider;\n+\n+import org.apache.skywalking.oap.server.configuration.api.ConfigChangeWatcher;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TraceSampleRateWatcherTest {\n+    private TraceModuleProvider traceModuleProvider;\n+\n+    @Before\n+    public void init() {\n+        traceModuleProvider = new TraceModuleProvider();\n+    }\n+\n+    @Test\n+    public void TestInit() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15ee1dd78c446c81f17bf3b4e21e68631e0fb3a4"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNTk3NDgz", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-442597483", "createdAt": "2020-07-04T08:58:09Z", "commit": {"oid": "15ee1dd78c446c81f17bf3b4e21e68631e0fb3a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwODo1ODowOVrOGs617g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwODo1ODowOVrOGs617g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDYwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void TestNotify() {\n          \n          \n            \n                public void testNotify() {", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r449754606", "createdAt": "2020-07-04T08:58:09Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceSampleRateWatcherTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.trace.provider;\n+\n+import org.apache.skywalking.oap.server.configuration.api.ConfigChangeWatcher;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigTable;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TraceSampleRateWatcherTest {\n+    private TraceModuleProvider traceModuleProvider;\n+\n+    @Before\n+    public void init() {\n+        traceModuleProvider = new TraceModuleProvider();\n+    }\n+\n+    @Test\n+    public void TestInit() {\n+        TraceSampleRateWatcher traceSampleRateWatcher = new TraceSampleRateWatcher(traceModuleProvider);\n+        Assert.assertEquals(traceSampleRateWatcher.getSampleRate(), 10000);\n+        Assert.assertEquals(traceSampleRateWatcher.value(), \"10000\");\n+    }\n+\n+    @Test(timeout = 20000)\n+    public void testDynamicUpdate() throws InterruptedException {\n+        ConfigWatcherRegister register = new MockConfigWatcherRegister(3);\n+\n+        TraceSampleRateWatcher watcher = new TraceSampleRateWatcher(traceModuleProvider);\n+        register.registerConfigChangeWatcher(watcher);\n+        register.start();\n+\n+        while (watcher.getSampleRate() == 10000) {\n+            Thread.sleep(2000);\n+        }\n+        assertThat(watcher.getSampleRate(), is(9000));\n+        assertThat(traceModuleProvider.getModuleConfig().getSampleRate(), is(10000));\n+    }\n+\n+    @Test\n+    public void TestNotify() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15ee1dd78c446c81f17bf3b4e21e68631e0fb3a4"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dca8cb06c65af404bbae5e280183e35cdfcb4956", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/dca8cb06c65af404bbae5e280183e35cdfcb4956", "committedDate": "2020-07-04T10:22:12Z", "message": "fix code format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6601b02dcc93ee9644eed59aad8b05b683067304", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/6601b02dcc93ee9644eed59aad8b05b683067304", "committedDate": "2020-07-06T00:39:08Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzQ4MTQ3", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-442748147", "createdAt": "2020-07-06T02:57:57Z", "commit": {"oid": "dca8cb06c65af404bbae5e280183e35cdfcb4956"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMjo1ODoyOVrOGtHcXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMjo1ODoyOVrOGtHcXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk2MTA1Mw==", "bodyText": "As TraceServiceModuleConfig#sampleRate could be changed across thread, recommend to add volatile\n\nprivate volatile int sampleRate = 10000;\n\nJust for avoiding unexpected behaviour.", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r449961053", "createdAt": "2020-07-06T02:58:29Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/parser/listener/TraceSegmentSampler.java", "diffHunk": "@@ -18,18 +18,20 @@\n \n package org.apache.skywalking.oap.server.receiver.trace.provider.parser.listener;\n \n+import org.apache.skywalking.oap.server.receiver.trace.provider.TraceServiceModuleConfig;\n+\n /**\n  * The sampler makes the sampling mechanism works at backend side. Sample result: [0,sampleRate) sampled, (sampleRate,~)\n  * ignored\n  */\n public class TraceSegmentSampler {\n-    private int sampleRate = 10000;\n+    private TraceServiceModuleConfig config;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6601b02dcc93ee9644eed59aad8b05b683067304"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f4955cbeb4b94d6666733b04af11e0ec59b3ddc", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/8f4955cbeb4b94d6666733b04af11e0ec59b3ddc", "committedDate": "2020-07-06T09:03:31Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "070f92d82f9cd45268cf89b4942cfdf3394abaf4", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/070f92d82f9cd45268cf89b4942cfdf3394abaf4", "committedDate": "2020-07-06T12:55:32Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aad7d93d99b48f742cca73e02643d74ce5219d4e", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/aad7d93d99b48f742cca73e02643d74ce5219d4e", "committedDate": "2020-07-06T13:49:28Z", "message": "fix from code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTE2MDY0", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-443116064", "createdAt": "2020-07-06T14:15:46Z", "commit": {"oid": "aad7d93d99b48f742cca73e02643d74ce5219d4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxNTo0NlrOGtZJ6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxNTo0NlrOGtZJ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1MTI0MA==", "bodyText": "This change is not right. Please read my review more carefully.", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r450251240", "createdAt": "2020-07-06T14:15:46Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/parser/listener/TraceSegmentSampler.java", "diffHunk": "@@ -25,7 +25,7 @@\n  * ignored\n  */\n public class TraceSegmentSampler {\n-    private TraceServiceModuleConfig config;\n+    private volatile TraceServiceModuleConfig config;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aad7d93d99b48f742cca73e02643d74ce5219d4e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTM3Mjc3", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-443137277", "createdAt": "2020-07-06T14:39:10Z", "commit": {"oid": "aad7d93d99b48f742cca73e02643d74ce5219d4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozOToxMFrOGtaK8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozOToxMFrOGtaK8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2Nzg5MA==", "bodyText": "Why config has reference to watcher? This is strange. Watcher should be a part of TraceSegmentSampler", "url": "https://github.com/apache/skywalking/pull/4987#discussion_r450267890", "createdAt": "2020-07-06T14:39:10Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/TraceServiceModuleConfig.java", "diffHunk": "@@ -51,6 +51,9 @@\n     @Setter\n     @Getter\n     private UninstrumentedGatewaysConfig uninstrumentedGatewaysConfig;\n+    @Setter\n+    @Getter\n+    private TraceSampleRateWatcher traceSampleRateWatcher;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aad7d93d99b48f742cca73e02643d74ce5219d4e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcc6d04de3067b767d8d11b7d1002c73e159495f", "author": {"user": {"login": "killGC", "name": null}}, "url": "https://github.com/apache/skywalking/commit/fcc6d04de3067b767d8d11b7d1002c73e159495f", "committedDate": "2020-07-06T14:59:20Z", "message": "fix from code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTY0MjQw", "url": "https://github.com/apache/skywalking/pull/4987#pullrequestreview-443164240", "createdAt": "2020-07-06T15:08:41Z", "commit": {"oid": "fcc6d04de3067b767d8d11b7d1002c73e159495f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08d686aa7c948fb3298d45549dfb213361afb691", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/08d686aa7c948fb3298d45549dfb213361afb691", "committedDate": "2020-07-06T23:52:47Z", "message": "Merge branch 'master' into master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2020, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}