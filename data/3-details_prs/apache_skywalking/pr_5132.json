{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMTQ5Mjk5", "number": 5132, "title": "Improve Es trace basic  query performance", "bodyText": "Please answer these questions before submitting pull request\n\n\nWhy submit this pull request?\n\n\n Improve performance\n\n\nRelated issues\n#5023\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.\n\nimprove trace query performance", "createdAt": "2020-07-20T07:30:51Z", "url": "https://github.com/apache/skywalking/pull/5132", "merged": true, "mergeCommit": {"oid": "197ef1e8365cbfde7e008f1f45f2aa472773cc3f"}, "closed": true, "closedAt": "2020-08-15T00:24:38Z", "author": {"login": "EvanLjp"}, "timelineItems": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchzg5-gH2gAyNDUzMTQ5Mjk5OjAwMmY0YzI1NzMzOTlhOTY2NDlhNjRmYjM5OWRjOGI3ZTgwY2QxNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-169IgFqTQ2NzY0NjM0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "002f4c2573399a96649a64fb399dc8b7e80cd175", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/002f4c2573399a96649a64fb399dc8b7e80cd175", "committedDate": "2020-05-16T09:46:41Z", "message": "add SuperDataset tag for add super size dataset shards config in es"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fead29fe6379c1784feb1e21b28888266242d69", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/3fead29fe6379c1784feb1e21b28888266242d69", "committedDate": "2020-05-16T13:40:59Z", "message": "explain the meaning of indexShardsNumber and superDatasetIndexShardsFactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f84bf3ea704ac9c0b7d751d6533d8ad25ba94625", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/f84bf3ea704ac9c0b7d751d6533d8ad25ba94625", "committedDate": "2020-05-17T08:19:36Z", "message": "code style format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9c0d17a67d7213e7426b1449410700079b0ac2a", "author": {"user": {"login": "EvanLjp", "name": "Evan"}}, "url": "https://github.com/apache/skywalking/commit/b9c0d17a67d7213e7426b1449410700079b0ac2a", "committedDate": "2020-05-17T08:35:47Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f176bdbb28a466f0683d341d7b5eb1782068438f", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/f176bdbb28a466f0683d341d7b5eb1782068438f", "committedDate": "2020-05-17T08:55:05Z", "message": "code style format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34df4295c55fb7343a4e3e3dc86ff417d44f0010", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/34df4295c55fb7343a4e3e3dc86ff417d44f0010", "committedDate": "2020-05-17T08:59:25Z", "message": "code style format and change notes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e698ddf0b0d522894d94b4f1143210afabffd8d5", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/e698ddf0b0d522894d94b4f1143210afabffd8d5", "committedDate": "2020-05-20T08:01:53Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52e21a287727aeffa241533f3c208a7b9c4fb215", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/52e21a287727aeffa241533f3c208a7b9c4fb215", "committedDate": "2020-05-27T13:54:44Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87cc6a2c405f3b31deaf8d5a47f718edd6c0eee5", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/87cc6a2c405f3b31deaf8d5a47f718edd6c0eee5", "committedDate": "2020-06-10T04:41:26Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39669e67a8b738f7cf5030b3277ddc1668a88835", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/39669e67a8b738f7cf5030b3277ddc1668a88835", "committedDate": "2020-06-22T09:47:59Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "172145bdc3ca85d0876cbd8f0b113c571fdb8c79", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/172145bdc3ca85d0876cbd8f0b113c571fdb8c79", "committedDate": "2020-07-12T14:33:34Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c32e00ae24a9f7ec30510ce292006172356a7cf", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/2c32e00ae24a9f7ec30510ce292006172356a7cf", "committedDate": "2020-07-14T07:36:38Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7be9f078d9264919eb1158e31c39fb2c5c3fdd0d", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/7be9f078d9264919eb1158e31c39fb2c5c3fdd0d", "committedDate": "2020-07-20T02:13:49Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "167119406406e4540e1599183719a9cc37f81cf9", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/167119406406e4540e1599183719a9cc37f81cf9", "committedDate": "2020-07-20T07:29:04Z", "message": "Optimize Trace es basic Query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05629316eeaa1313921fafd1b47464a796e8d508", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/05629316eeaa1313921fafd1b47464a796e8d508", "committedDate": "2020-07-20T07:36:22Z", "message": "Merge remote-tracking branch 'upstream/master' into es-query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77d95270f8a14ac429adfc28ed3bc74970a8e4da", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/77d95270f8a14ac429adfc28ed3bc74970a8e4da", "committedDate": "2020-08-01T02:41:06Z", "message": "Merge branch 'master' into es-query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTQ2MTEx", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-459546111", "createdAt": "2020-08-01T02:54:46Z", "commit": {"oid": "77d95270f8a14ac429adfc28ed3bc74970a8e4da"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMjo1NDo0NlrOG6a9JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMzowMDo0M1rOG6a_gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxMjIyOA==", "bodyText": "traceQueryIndices -> recordQueryIndices", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r463912228", "createdAt": "2020-08-01T02:54:46Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/TimeSeriesUtils.java", "diffHunk": "@@ -55,6 +56,21 @@ public static String latestWriteIndexName(Model model) {\n         }\n     }\n \n+    /**\n+     * @return split index name based on time bucket.\n+     */\n+    public static String[] traceQueryIndices(String indexName, long startSecondTB, long endSecondTB) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d95270f8a14ac429adfc28ed3bc74970a8e4da"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkxMjgzNQ==", "bodyText": "Still, the issue is, currently, we don't ask for time range because of trace id query.", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r463912835", "createdAt": "2020-08-01T03:00:43Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch7-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch7/query/TraceQueryEs7DAO.java", "diffHunk": "@@ -115,7 +116,8 @@ public TraceBrief queryBasicTraces(long startSecondTB,\n         sourceBuilder.size(limit);\n         sourceBuilder.from(from);\n \n-        SearchResponse response = getClient().search(SegmentRecord.INDEX_NAME, sourceBuilder);\n+        String[] indices = TimeSeriesUtils.traceQueryIndices(SegmentRecord.INDEX_NAME, startSecondTB, endSecondTB);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d95270f8a14ac429adfc28ed3bc74970a8e4da"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f94da95e2fe6b780d78b0b89ff37a3e6d28a5023", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/f94da95e2fe6b780d78b0b89ff37a3e6d28a5023", "committedDate": "2020-08-05T05:21:25Z", "message": "Merge remote-tracking branch 'upstream/master' into es-query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe0bcec7573de53e6941ea6ec7b7427050c5c221", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/fe0bcec7573de53e6941ea6ec7b7427050c5c221", "committedDate": "2020-08-09T14:48:31Z", "message": "es metrics record query performance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cd6e8e90a9dbb7fe68984febcac235f048f8bcd", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/4cd6e8e90a9dbb7fe68984febcac235f048f8bcd", "committedDate": "2020-08-10T06:57:04Z", "message": "Merge remote-tracking branch 'upstream/master' into es-query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "595be6d2be3bc42f77f73d130716b86646269eee", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/595be6d2be3bc42f77f73d130716b86646269eee", "committedDate": "2020-08-10T08:07:55Z", "message": "add super dataset es query client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf26352290e314e33505e688403a901b9a18a494", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/cf26352290e314e33505e688403a901b9a18a494", "committedDate": "2020-08-10T08:08:34Z", "message": "Merge branch 'es-query' of https://github.com/EvanLjp/skywalking into es-query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDgzMzM4", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-464083338", "createdAt": "2020-08-10T09:35:50Z", "commit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozNTo1MFrOG-Hn8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozNTo1MFrOG-Hn8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4OTgwOQ==", "bodyText": "So, does this means, once the time buckets don't exist, still use the alias name, right?", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r467789809", "createdAt": "2020-08-10T09:35:50Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/TimeSeriesUtils.java", "diffHunk": "@@ -60,6 +61,31 @@ public static String latestWriteIndexName(Model model) {\n         }\n     }\n \n+    /**\n+     * @return Concrete index name for super dataset index\n+     */\n+    public static String[] querySuperDatasetIndices(String indexName, long startTimeBucket, long endTimeBucket) {\n+        if (startTimeBucket == 0 || endTimeBucket == 0) {\n+            return new String[] {indexName};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDg0NTY4", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-464084568", "createdAt": "2020-08-10T09:37:53Z", "commit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozNzo1M1rOG-Hr3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozNzo1M1rOG-Hr3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc5MDgxNA==", "bodyText": "Is rangeTimeName actually timeBucketColName?", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r467790814", "createdAt": "2020-08-10T09:37:53Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/SuperDatasetRangeElasticSearchClient.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.storage.plugin.elasticsearch.base;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Optional;\n+import org.apache.skywalking.oap.server.library.client.elasticsearch.ElasticSearchClient;\n+import org.elasticsearch.action.search.SearchResponse;\n+import org.elasticsearch.index.query.BoolQueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.index.query.RangeQueryBuilder;\n+import org.elasticsearch.search.builder.SearchSourceBuilder;\n+\n+import static org.apache.skywalking.oap.server.storage.plugin.elasticsearch.base.TimeSeriesUtils.querySuperDatasetIndices;\n+\n+public class SuperDatasetRangeElasticSearchClient {\n+\n+    public static SearchResponse search(ElasticSearchClient client,\n+                                        String rangeTimeName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDg3MDU5", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-464087059", "createdAt": "2020-08-10T09:41:48Z", "commit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTo0MTo0OFrOG-HzdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTo0MTo0OFrOG-HzdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc5Mjc1Nw==", "bodyText": "Based on the implementation, is this method should be more specific about it is for searchOnSuperDataSet? In the L40, you call #querySuperDatasetIndices directly.", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r467792757", "createdAt": "2020-08-10T09:41:48Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/SuperDatasetRangeElasticSearchClient.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.storage.plugin.elasticsearch.base;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Optional;\n+import org.apache.skywalking.oap.server.library.client.elasticsearch.ElasticSearchClient;\n+import org.elasticsearch.action.search.SearchResponse;\n+import org.elasticsearch.index.query.BoolQueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.index.query.RangeQueryBuilder;\n+import org.elasticsearch.search.builder.SearchSourceBuilder;\n+\n+import static org.apache.skywalking.oap.server.storage.plugin.elasticsearch.base.TimeSeriesUtils.querySuperDatasetIndices;\n+\n+public class SuperDatasetRangeElasticSearchClient {\n+\n+    public static SearchResponse search(ElasticSearchClient client,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDkwOTk5", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-464090999", "createdAt": "2020-08-10T09:48:04Z", "commit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTo0ODowNFrOG-H_DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTo0ODowNFrOG-H_DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc5NTcyNQ==", "bodyText": "Don't add a client with static methods, that break the code style.", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r467795725", "createdAt": "2020-08-10T09:48:04Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/SuperDatasetRangeElasticSearchClient.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.storage.plugin.elasticsearch.base;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Optional;\n+import org.apache.skywalking.oap.server.library.client.elasticsearch.ElasticSearchClient;\n+import org.elasticsearch.action.search.SearchResponse;\n+import org.elasticsearch.index.query.BoolQueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.index.query.RangeQueryBuilder;\n+import org.elasticsearch.search.builder.SearchSourceBuilder;\n+\n+import static org.apache.skywalking.oap.server.storage.plugin.elasticsearch.base.TimeSeriesUtils.querySuperDatasetIndices;\n+\n+public class SuperDatasetRangeElasticSearchClient {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDkyMzAw", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-464092300", "createdAt": "2020-08-10T09:50:05Z", "commit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTo1MDowNVrOG-IDAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTo1MDowNVrOG-IDAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc5NjczOA==", "bodyText": "There is recursion, why?", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r467796738", "createdAt": "2020-08-10T09:50:05Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/SuperDatasetRangeElasticSearchClient.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.storage.plugin.elasticsearch.base;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Optional;\n+import org.apache.skywalking.oap.server.library.client.elasticsearch.ElasticSearchClient;\n+import org.elasticsearch.action.search.SearchResponse;\n+import org.elasticsearch.index.query.BoolQueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.index.query.RangeQueryBuilder;\n+import org.elasticsearch.search.builder.SearchSourceBuilder;\n+\n+import static org.apache.skywalking.oap.server.storage.plugin.elasticsearch.base.TimeSeriesUtils.querySuperDatasetIndices;\n+\n+public class SuperDatasetRangeElasticSearchClient {\n+\n+    public static SearchResponse search(ElasticSearchClient client,\n+                                        String rangeTimeName,\n+                                        String indexName,\n+                                        SearchSourceBuilder searchSourceBuilder) throws IOException {\n+        Optional<RangeQueryBuilder> timeRangeQueryBuilder = findTimeRangeQueryBuilder(searchSourceBuilder, rangeTimeName);\n+        String[] indexNames = timeRangeQueryBuilder.map(item -> querySuperDatasetIndices(indexName, (Long) item.from(), (Long) item.to()))\n+                                                   .orElseGet(() -> new String[] {indexName});\n+        return client.search(indexNames, searchSourceBuilder);\n+    }\n+\n+    /**\n+     * query rangeQueryBuilder on different query ways\n+     *\n+     * @param searchSourceBuilder es query params\n+     * @param rangeTimeName       the range time name define in es query params\n+     * @return the time range query builder\n+     */\n+    private static Optional<RangeQueryBuilder> findTimeRangeQueryBuilder(final SearchSourceBuilder searchSourceBuilder,\n+                                                                         final String rangeTimeName) {\n+        QueryBuilder query = searchSourceBuilder.query();\n+        if (query instanceof RangeQueryBuilder) {\n+            RangeQueryBuilder rangeQueryBuilder = (RangeQueryBuilder) query;\n+            return rangeQueryBuilder.fieldName().equals(rangeTimeName) ? Optional.of(rangeQueryBuilder) : Optional.empty();\n+        } else if (query instanceof BoolQueryBuilder) {\n+            return findTimeRangeQueryBuilder(rangeTimeName, ((BoolQueryBuilder) query).must(), ((BoolQueryBuilder) query).filter());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDkzMDg0", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-464093084", "createdAt": "2020-08-10T09:51:18Z", "commit": {"oid": "cf26352290e314e33505e688403a901b9a18a494"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73cf2f9d50a397d307fa941746dc6aedc0ea03a1", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/73cf2f9d50a397d307fa941746dc6aedc0ea03a1", "committedDate": "2020-08-10T15:04:20Z", "message": "add IndexNameMaker FunctionalInterface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d882fc278e2adcd41555190bb4e2f081a44cbd28", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/d882fc278e2adcd41555190bb4e2f081a44cbd28", "committedDate": "2020-08-11T08:53:18Z", "message": "Merge remote-tracking branch 'upstream/master' into es-query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d7ff376c8f9a8febac52a473e4e511abe8d3565", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/2d7ff376c8f9a8febac52a473e4e511abe8d3565", "committedDate": "2020-08-11T10:12:28Z", "message": "format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTM0NzMy", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-464934732", "createdAt": "2020-08-11T10:19:37Z", "commit": {"oid": "2d7ff376c8f9a8febac52a473e4e511abe8d3565"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMDoxOTozN1rOG-xhmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjo1OTozOFrOG-2n-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3NjMxNQ==", "bodyText": "I think we don't need this method in public, right?", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r468476315", "createdAt": "2020-08-11T10:19:37Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-library/library-client/src/main/java/org/apache/skywalking/oap/server/library/client/elasticsearch/ElasticSearchClient.java", "diffHunk": "@@ -331,9 +333,25 @@ public boolean deleteTemplate(String indexName) throws IOException {\n         return response.getStatusLine().getStatusCode() == HttpStatus.SC_OK;\n     }\n \n+    public SearchResponse search(IndexNameMaker indexNameMaker, SearchSourceBuilder searchSourceBuilder) throws IOException {\n+        String[] indexNames = Arrays.stream(indexNameMaker.make()).map(this::formatIndexName).toArray(String[]::new);\n+        return search(indexNames, searchSourceBuilder);\n+    }\n+\n     public SearchResponse search(String indexName, SearchSourceBuilder searchSourceBuilder) throws IOException {\n         indexName = formatIndexName(indexName);\n-        SearchRequest searchRequest = new SearchRequest(indexName);\n+        return doSearch(searchSourceBuilder, indexName);\n+    }\n+\n+    public SearchResponse search(String[] indexNames, SearchSourceBuilder searchSourceBuilder) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7ff376c8f9a8febac52a473e4e511abe8d3565"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ3NzY3NQ==", "bodyText": "Could you explain a little more about why we need this?", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r468477675", "createdAt": "2020-08-11T10:22:12Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-library/library-client/src/main/java/org/apache/skywalking/oap/server/library/client/elasticsearch/ElasticSearchClient.java", "diffHunk": "@@ -331,9 +333,25 @@ public boolean deleteTemplate(String indexName) throws IOException {\n         return response.getStatusLine().getStatusCode() == HttpStatus.SC_OK;\n     }\n \n+    public SearchResponse search(IndexNameMaker indexNameMaker, SearchSourceBuilder searchSourceBuilder) throws IOException {\n+        String[] indexNames = Arrays.stream(indexNameMaker.make()).map(this::formatIndexName).toArray(String[]::new);\n+        return search(indexNames, searchSourceBuilder);\n+    }\n+\n     public SearchResponse search(String indexName, SearchSourceBuilder searchSourceBuilder) throws IOException {\n         indexName = formatIndexName(indexName);\n-        SearchRequest searchRequest = new SearchRequest(indexName);\n+        return doSearch(searchSourceBuilder, indexName);\n+    }\n+\n+    public SearchResponse search(String[] indexNames, SearchSourceBuilder searchSourceBuilder) throws IOException {\n+        indexNames = Arrays.stream(indexNames).map(this::formatIndexName).toArray(String[]::new);\n+        return doSearch(searchSourceBuilder, indexNames);\n+    }\n+\n+    private SearchResponse doSearch(SearchSourceBuilder searchSourceBuilder,\n+                                    String... indexNames) throws IOException {\n+        SearchRequest searchRequest = new SearchRequest(indexNames);\n+        searchRequest.indicesOptions(IndicesOptions.fromOptions(true, true, true, false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7ff376c8f9a8febac52a473e4e511abe8d3565"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzNTA4NQ==", "bodyText": "I think this should be renamed to superDatasetIndexName, right?", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r468535085", "createdAt": "2020-08-11T12:16:01Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/TimeSeriesUtils.java", "diffHunk": "@@ -60,6 +61,31 @@ public static String latestWriteIndexName(Model model) {\n         }\n     }\n \n+    /**\n+     * @return Concrete index name for super dataset index\n+     */\n+    public static String[] querySuperDatasetIndices(String indexName, long startTimeBucket, long endTimeBucket) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7ff376c8f9a8febac52a473e4e511abe8d3565"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1Njg5Nw==", "bodyText": "I think basically, we don't need this method. Read Joda lib, such as  LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES)", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r468556897", "createdAt": "2020-08-11T12:54:48Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/TimeSeriesUtils.java", "diffHunk": "@@ -60,6 +61,31 @@ public static String latestWriteIndexName(Model model) {\n         }\n     }\n \n+    /**\n+     * @return Concrete index name for super dataset index\n+     */\n+    public static String[] querySuperDatasetIndices(String indexName, long startTimeBucket, long endTimeBucket) {\n+        if (startTimeBucket == 0 || endTimeBucket == 0) {\n+            return new String[] {indexName};\n+        }\n+        long startDay = compressTimeBucket(convert2DayTimeBucket(startTimeBucket), SUPER_DATASET_DAY_STEP);\n+        long endDay = compressTimeBucket(convert2DayTimeBucket(endTimeBucket), SUPER_DATASET_DAY_STEP);\n+        DateTime startDateTime = TIME_BUCKET_FORMATTER.parseDateTime(startDay + \"\");\n+        DateTime endDateTime = TIME_BUCKET_FORMATTER.parseDateTime(endDay + \"\");\n+\n+        int steps = Math.max((Days.daysBetween(startDateTime, endDateTime).getDays()) / SUPER_DATASET_DAY_STEP, 0);\n+        return IntStream.rangeClosed(0, steps)\n+                        .mapToObj(step -> indexName + Const.LINE + startDateTime.plusDays(Math.toIntExact(SUPER_DATASET_DAY_STEP * step)).toString(TIME_BUCKET_FORMATTER))\n+                        .toArray(String[]::new);\n+    }\n+\n+    private static long convert2DayTimeBucket(long timeBucket) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7ff376c8f9a8febac52a473e4e511abe8d3565"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1Nzg2Mg==", "bodyText": "Max with 0? Do you avoid negative value? What happens when the steps == 0?", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r468557862", "createdAt": "2020-08-11T12:56:23Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/TimeSeriesUtils.java", "diffHunk": "@@ -60,6 +61,31 @@ public static String latestWriteIndexName(Model model) {\n         }\n     }\n \n+    /**\n+     * @return Concrete index name for super dataset index\n+     */\n+    public static String[] querySuperDatasetIndices(String indexName, long startTimeBucket, long endTimeBucket) {\n+        if (startTimeBucket == 0 || endTimeBucket == 0) {\n+            return new String[] {indexName};\n+        }\n+        long startDay = compressTimeBucket(convert2DayTimeBucket(startTimeBucket), SUPER_DATASET_DAY_STEP);\n+        long endDay = compressTimeBucket(convert2DayTimeBucket(endTimeBucket), SUPER_DATASET_DAY_STEP);\n+        DateTime startDateTime = TIME_BUCKET_FORMATTER.parseDateTime(startDay + \"\");\n+        DateTime endDateTime = TIME_BUCKET_FORMATTER.parseDateTime(endDay + \"\");\n+\n+        int steps = Math.max((Days.daysBetween(startDateTime, endDateTime).getDays()) / SUPER_DATASET_DAY_STEP, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7ff376c8f9a8febac52a473e4e511abe8d3565"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1OTA1NQ==", "bodyText": "I think this method should simply follow this logic,\n\nList all days between startTime and endTime.\nUse compressTimeBucket to get all indexes(could have duplicated records)\nDistinct the list.", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r468559055", "createdAt": "2020-08-11T12:58:26Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/TimeSeriesUtils.java", "diffHunk": "@@ -60,6 +61,31 @@ public static String latestWriteIndexName(Model model) {\n         }\n     }\n \n+    /**\n+     * @return Concrete index name for super dataset index\n+     */\n+    public static String[] querySuperDatasetIndices(String indexName, long startTimeBucket, long endTimeBucket) {\n+        if (startTimeBucket == 0 || endTimeBucket == 0) {\n+            return new String[] {indexName};\n+        }\n+        long startDay = compressTimeBucket(convert2DayTimeBucket(startTimeBucket), SUPER_DATASET_DAY_STEP);\n+        long endDay = compressTimeBucket(convert2DayTimeBucket(endTimeBucket), SUPER_DATASET_DAY_STEP);\n+        DateTime startDateTime = TIME_BUCKET_FORMATTER.parseDateTime(startDay + \"\");\n+        DateTime endDateTime = TIME_BUCKET_FORMATTER.parseDateTime(endDay + \"\");\n+\n+        int steps = Math.max((Days.daysBetween(startDateTime, endDateTime).getDays()) / SUPER_DATASET_DAY_STEP, 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1Nzg2Mg=="}, "originalCommit": {"oid": "2d7ff376c8f9a8febac52a473e4e511abe8d3565"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1OTg2NQ==", "bodyText": "The above processes may need a little refactor about the compressTimeBucket method, I should be able to accept DateTime as one parameter too.", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r468559865", "createdAt": "2020-08-11T12:59:38Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/TimeSeriesUtils.java", "diffHunk": "@@ -60,6 +61,31 @@ public static String latestWriteIndexName(Model model) {\n         }\n     }\n \n+    /**\n+     * @return Concrete index name for super dataset index\n+     */\n+    public static String[] querySuperDatasetIndices(String indexName, long startTimeBucket, long endTimeBucket) {\n+        if (startTimeBucket == 0 || endTimeBucket == 0) {\n+            return new String[] {indexName};\n+        }\n+        long startDay = compressTimeBucket(convert2DayTimeBucket(startTimeBucket), SUPER_DATASET_DAY_STEP);\n+        long endDay = compressTimeBucket(convert2DayTimeBucket(endTimeBucket), SUPER_DATASET_DAY_STEP);\n+        DateTime startDateTime = TIME_BUCKET_FORMATTER.parseDateTime(startDay + \"\");\n+        DateTime endDateTime = TIME_BUCKET_FORMATTER.parseDateTime(endDay + \"\");\n+\n+        int steps = Math.max((Days.daysBetween(startDateTime, endDateTime).getDays()) / SUPER_DATASET_DAY_STEP, 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1Nzg2Mg=="}, "originalCommit": {"oid": "2d7ff376c8f9a8febac52a473e4e511abe8d3565"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d368f7dbc22ac71f565b8c979db798f705296894", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/d368f7dbc22ac71f565b8c979db798f705296894", "committedDate": "2020-08-11T15:47:26Z", "message": "refractor codes in TimeSeriesUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93faf6ad50be28c574d737114b35c902c3b87965", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/93faf6ad50be28c574d737114b35c902c3b87965", "committedDate": "2020-08-11T15:49:45Z", "message": "convert public to private in org.apache.skywalking.oap.server.library.client.elasticsearch.ElasticSearchClient.search(java.lang.String[], org.elasticsearch.search.builder.SearchSourceBuilder)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "252ff71ebad1e90d297521641bd070f134135c21", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/252ff71ebad1e90d297521641bd070f134135c21", "committedDate": "2020-08-12T05:24:46Z", "message": "Merge remote-tracking branch 'upstream/master' into es-query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Njg4NDgw", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-465688480", "createdAt": "2020-08-12T08:15:06Z", "commit": {"oid": "252ff71ebad1e90d297521641bd070f134135c21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODoxNTowNlrOG_WqqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODoxNTowNlrOG_WqqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4NDg0MQ==", "bodyText": "Why need and call search again? And in both methods, you are only doing the formatIndexName. I think the namespace would be added twice.", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r469084841", "createdAt": "2020-08-12T08:15:06Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-library/library-client/src/main/java/org/apache/skywalking/oap/server/library/client/elasticsearch/ElasticSearchClient.java", "diffHunk": "@@ -331,9 +333,25 @@ public boolean deleteTemplate(String indexName) throws IOException {\n         return response.getStatusLine().getStatusCode() == HttpStatus.SC_OK;\n     }\n \n+    public SearchResponse search(IndexNameMaker indexNameMaker, SearchSourceBuilder searchSourceBuilder) throws IOException {\n+        String[] indexNames = Arrays.stream(indexNameMaker.make()).map(this::formatIndexName).toArray(String[]::new);\n+        return search(indexNames, searchSourceBuilder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "252ff71ebad1e90d297521641bd070f134135c21"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NjkxNDkx", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-465691491", "createdAt": "2020-08-12T08:19:15Z", "commit": {"oid": "252ff71ebad1e90d297521641bd070f134135c21"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "824187d8714675f7c1d68bc0d77fd010fa9a1128", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/824187d8714675f7c1d68bc0d77fd010fa9a1128", "committedDate": "2020-08-12T08:52:21Z", "message": "fix error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c060d64f47fc77d7b83cf76a7673dde0f6e03c17", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/c060d64f47fc77d7b83cf76a7673dde0f6e03c17", "committedDate": "2020-08-12T08:55:38Z", "message": "fix error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28cfea8e5b176ac521a9bf47c39985992004c462", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/28cfea8e5b176ac521a9bf47c39985992004c462", "committedDate": "2020-08-12T23:55:28Z", "message": "Merge branch 'master' into es-query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MzcyNTg1", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-467372585", "createdAt": "2020-08-14T07:47:48Z", "commit": {"oid": "28cfea8e5b176ac521a9bf47c39985992004c462"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNzo0Nzo0OFrOHAq65A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNzo0Nzo0OFrOHAq65A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ2NTI1Mg==", "bodyText": "You refactor this method, but forgot the indexName = formatIndexName(indexName);, which is used to exist.\nI think that is the reason, your PR is not working.", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r470465252", "createdAt": "2020-08-14T07:47:48Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-library/library-client/src/main/java/org/apache/skywalking/oap/server/library/client/elasticsearch/ElasticSearchClient.java", "diffHunk": "@@ -325,15 +327,24 @@ public boolean createTemplate(String indexName, Map<String, Object> settings,\n \n     public boolean deleteTemplate(String indexName) throws IOException {\n         indexName = formatIndexName(indexName);\n-\n-        Response response = client.getLowLevelClient()\n-                                  .performRequest(HttpDelete.METHOD_NAME, \"/_template/\" + indexName);\n+        Response response = client.getLowLevelClient().performRequest(HttpDelete.METHOD_NAME, \"/_template/\" + indexName);\n         return response.getStatusLine().getStatusCode() == HttpStatus.SC_OK;\n     }\n \n+    public SearchResponse search(IndexNameMaker indexNameMaker, SearchSourceBuilder searchSourceBuilder) throws IOException {\n+        String[] indexNames = Arrays.stream(indexNameMaker.make()).map(this::formatIndexName).toArray(String[]::new);\n+        return doSearch(searchSourceBuilder, indexNames);\n+    }\n+\n     public SearchResponse search(String indexName, SearchSourceBuilder searchSourceBuilder) throws IOException {\n         indexName = formatIndexName(indexName);\n-        SearchRequest searchRequest = new SearchRequest(indexName);\n+        return doSearch(searchSourceBuilder, indexName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28cfea8e5b176ac521a9bf47c39985992004c462"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e6554e958fbfb0b2de41c43e58c1a3f4ab6d342", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/5e6554e958fbfb0b2de41c43e58c1a3f4ab6d342", "committedDate": "2020-08-14T09:50:44Z", "message": "fix bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "344593aff340085258c9624c659c9e7d6f2c8903", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/344593aff340085258c9624c659c9e7d6f2c8903", "committedDate": "2020-08-14T09:51:18Z", "message": "Merge branch 'es-query' of https://github.com/EvanLjp/skywalking into es-query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c74c91bc50cec9ad13d664798e486480104fe95", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/3c74c91bc50cec9ad13d664798e486480104fe95", "committedDate": "2020-08-14T09:53:00Z", "message": "Merge remote-tracking branch 'upstream/master' into es-query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f48bcfa85521310d2979cd2cd5d302136e9d1830", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/f48bcfa85521310d2979cd2cd5d302136e9d1830", "committedDate": "2020-08-14T10:03:47Z", "message": "Merge branch 'master' into es-query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTM3MDIw", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-467537020", "createdAt": "2020-08-14T12:31:56Z", "commit": {"oid": "f48bcfa85521310d2979cd2cd5d302136e9d1830"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjozMTo1NlrOHAy2lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjozMTo1NlrOHAy2lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU5NTIyMQ==", "bodyText": "I think ES7 and ES6 should use different ESClient implementation because of SearchResponse or more things , due to different package name or something like that. Please recheck.", "url": "https://github.com/apache/skywalking/pull/5132#discussion_r470595221", "createdAt": "2020-08-14T12:31:56Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch7-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch7/query/TraceQueryEs7DAO.java", "diffHunk": "@@ -124,8 +125,7 @@ public TraceBrief queryBasicTraces(long startSecondTB,\n         }\n         sourceBuilder.size(limit);\n         sourceBuilder.from(from);\n-\n-        SearchResponse response = getClient().search(SegmentRecord.INDEX_NAME, sourceBuilder);\n+        SearchResponse response = getClient().search(new TimeRangeIndexNameMaker(SegmentRecord.INDEX_NAME, startSecondTB, endSecondTB), sourceBuilder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f48bcfa85521310d2979cd2cd5d302136e9d1830"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd10bcd7846b8a0aeb2e89adf9b9f22c7669383c", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/cd10bcd7846b8a0aeb2e89adf9b9f22c7669383c", "committedDate": "2020-08-14T13:08:59Z", "message": "fix es7 query bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "967203cd86185b06c969a27dc25bc63be0d06185", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/967203cd86185b06c969a27dc25bc63be0d06185", "committedDate": "2020-08-14T13:09:33Z", "message": "Merge remote-tracking branch 'upstream/master' into es-query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aa09525f72c6b4eeef75511dbd61019a2753655", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/4aa09525f72c6b4eeef75511dbd61019a2753655", "committedDate": "2020-08-14T13:10:17Z", "message": "Merge branch 'es-query' of https://github.com/EvanLjp/skywalking into es-query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NjQ2MzQ0", "url": "https://github.com/apache/skywalking/pull/5132#pullrequestreview-467646344", "createdAt": "2020-08-14T14:58:45Z", "commit": {"oid": "4aa09525f72c6b4eeef75511dbd61019a2753655"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2101, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}