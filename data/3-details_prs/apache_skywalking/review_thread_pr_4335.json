{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyODE3MzY1", "number": 4335, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxMjo0Mjo0MFrODeRaKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxMjoyMlrODecoXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDY5MDk2OnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/profile/IProfileThreadSnapshotQueryDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxMjo0Mjo0MFrOFnU3qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxMjo0Mjo0MFrOFnU3qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc4MDcxMw==", "bodyText": "From your codes, count is pageSize.", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r376780713", "createdAt": "2020-02-09T12:42:40Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/profile/IProfileThreadSnapshotQueryDAO.java", "diffHunk": "@@ -38,4 +38,17 @@\n      */\n     List<BasicTrace> queryProfiledSegments(String taskId) throws IOException;\n \n+    /**\n+     * search snapshots with paging\n+     * sort by sequence\n+     * @param segmentId profiled segment id\n+     * @param start start dump time\n+     * @param end end dump time\n+     * @param minSequence search sequence start number\n+     * @param count page count\n+     * @return snapshots\n+     * @throws IOException\n+     */\n+    List<ProfileThreadSnapshotRecord> queryRecordsWithPaging(String segmentId, long start, long end, int minSequence, int count) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbabfacc6075d00e58497de3db1ca7d19515a4e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDY5MTMwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxMjo0MzoxM1rOFnU30Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxMjo0MzoxM1rOFnU30Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc4MDc1Mw==", "bodyText": "This should be open in the core configuration.", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r376780753", "createdAt": "2020-02-09T12:43:13Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "diffHunk": "@@ -34,12 +39,45 @@\n \n     private static final ProfileAnalyzeCollector ANALYZE_COLLECTOR = new ProfileAnalyzeCollector();\n \n+    private static final int THREAD_SNAPSHOT_ANALYZE_BATCH_SIZE = 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbabfacc6075d00e58497de3db1ca7d19515a4e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDY5MTUzOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-profile/e2e-profile-service/src/main/java/org/apache/skywalking/e2e/profile/TestController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxMjo0Mzo0M1rOFnU38A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxMjo0Mzo0M1rOFnU38A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc4MDc4NA==", "bodyText": "200 or 6200?", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r376780784", "createdAt": "2020-02-09T12:43:43Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-profile/e2e-profile-service/src/main/java/org/apache/skywalking/e2e/profile/TestController.java", "diffHunk": "@@ -45,8 +45,8 @@ public User createAuthor(@RequestBody final CreateUser createUser) throws Interr\n         if (!createUser.getEnableProfiling()) {\n             return user;\n         } else {\n-            // sleep 10 second\n-            TimeUnit.SECONDS.sleep(10);\n+            // sleep 200 milliseconds\n+            TimeUnit.MILLISECONDS.sleep(6200);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbabfacc6075d00e58497de3db1ca7d19515a4e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjUxODI5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzowODo0NVrOFnlYbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzowODo0NVrOFnlYbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1MTI0Nw==", "bodyText": "Out of snapshot analyze limit,  xxx snapshots found, but analysis first yyy snapshots only.", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r377051247", "createdAt": "2020-02-10T13:08:45Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "diffHunk": "@@ -32,14 +39,90 @@\n  */\n public class ProfileAnalyzer {\n \n+    private static final Logger LOGGER = LoggerFactory.getLogger(ProfileAnalyzer.class);\n+\n     private static final ProfileAnalyzeCollector ANALYZE_COLLECTOR = new ProfileAnalyzeCollector();\n \n+    private final int threadSnapshotAnalyzeBatchSize;\n+    private final int analyzeSnapshotMaxSize;\n+\n+    private final ModuleManager moduleManager;\n+    private IProfileThreadSnapshotQueryDAO profileThreadSnapshotQueryDAO;\n+\n+    public ProfileAnalyzer(ModuleManager moduleManager, int snapshotAnalyzeBatchSize, int analyzeSnapshotMaxSize) {\n+        this.moduleManager = moduleManager;\n+        this.threadSnapshotAnalyzeBatchSize = snapshotAnalyzeBatchSize;\n+        this.analyzeSnapshotMaxSize = analyzeSnapshotMaxSize;\n+    }\n+\n+    /**\n+     * search snapshots and analyze\n+     * @param segmentId\n+     * @param start\n+     * @param end\n+     * @return\n+     */\n+    public ProfileAnalyzation analyze(String segmentId, long start, long end) throws IOException {\n+        ProfileAnalyzation analyzation = new ProfileAnalyzation();\n+\n+        // query sequence range list\n+        SequenceSearch sequenceSearch = getAllSequenceRange(segmentId, start, end);\n+        if (sequenceSearch == null) {\n+            analyzation.setTip(\"Data not found\");\n+            return analyzation;\n+        }\n+        if (sequenceSearch.totalSequenceCount > analyzeSnapshotMaxSize) {\n+            analyzation.setTip(\"Out of snapshot analyze limit, current size:\" + sequenceSearch.totalSequenceCount + \", only analyze snapshot count: \" + analyzeSnapshotMaxSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0594ec1846c3cbe8edb75c04b6eaeda8d881db45"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjUyOTU5OnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxMjoyMlrOFnlfCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxMjoyMlrOFnlfCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1MjkzNw==", "bodyText": "Even for an inner class, please use set/get, rather than accessing fields directly.", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r377052937", "createdAt": "2020-02-10T13:12:22Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "diffHunk": "@@ -50,9 +133,28 @@ public static ProfileAnalyzation analyze(List<ProfileStack> stacks) {\n                 .filter(s -> CollectionUtils.isNotEmpty(s.getStack()))\n                 .collect(Collectors.groupingBy(s -> s.getStack().get(0), ANALYZE_COLLECTOR));\n \n-        ProfileAnalyzation analyzer = new ProfileAnalyzation();\n-        analyzer.setTrees(new ArrayList<>(stackTrees.values()));\n-        return analyzer;\n+        return new ArrayList<>(stackTrees.values());\n     }\n \n+    private IProfileThreadSnapshotQueryDAO getProfileThreadSnapshotQueryDAO() {\n+        if (profileThreadSnapshotQueryDAO == null) {\n+            profileThreadSnapshotQueryDAO = moduleManager.find(StorageModule.NAME).provider().getService(IProfileThreadSnapshotQueryDAO.class);\n+        }\n+        return profileThreadSnapshotQueryDAO;\n+    }\n+\n+    private static class SequenceSearch {\n+        LinkedList<SequenceRange> ranges = new LinkedList<>();\n+        int totalSequenceCount;\n+    }\n+\n+    private static class SequenceRange {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0594ec1846c3cbe8edb75c04b6eaeda8d881db45"}, "originalPosition": 132}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4568, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}