{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NjY4ODEx", "number": 4694, "title": "Provide Meter(metrics) system ", "bodyText": "Hi dev\nThis pull request introduces the meter system into the SkyWalking core. Meter system is compatible with any metrics system in theory. It shares the same streaming calculation core and still pluggable to different protocols and different metrics read modes(pull/push, grpc/http/mq).\nHere are the basic and simple usages of the MeterSystem APIs.\nMeter Creation\nNew meter could be created based on metrics name, function, scope and data type.\n\nMetrics name is still the storage entity name.\nFunctions are every similar with the OAL function, just accepting different input.\n\nfinal MeterSystem meterSystem = MeterSystem.meterSystem(getManager());\nmeterSystem.create(\"test_long_metrics\", \"avg\", ScopeType.SERVICE, Long.class);\nNOTICE, this creation should only be called in the module#prepare stage, otherwise, Can't create new metrics anymore exception will be raised after the CORE module start stage finished. You may find out, there is a chance create could be executed successfully in your own module#start stage, but it it just because of the sequence of provider loaded by the class loader, no guarantee, so please don't do that.\nRuntime Calculation\nAcceptableValue is the object created at the runtime to accept new metrics value.\n         final MeterSystem service = getManager().find(CoreModule.NAME).provider().getService(MeterSystem.class);\n        Executors.newSingleThreadScheduledExecutor().scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                final AcceptableValue<Long> value = service.buildMetrics(\"test_long_metrics\", Long.class);\n                value.accept(MeterEntity.newService(\"abc\"), 5L);\n                value.setTimeBucket(TimeBucket.getMinuteTimeBucket(System.currentTimeMillis()));\n                service.doStreamingCalculation(value);\n            }\n        }, 2, 2, TimeUnit.SECONDS);\nMeter Functions\nRight now, only avg function has been implemented. I submit this PR as soon as possible to get your feedback. I will add more functions.", "createdAt": "2020-04-23T04:13:36Z", "url": "https://github.com/apache/skywalking/pull/4694", "merged": true, "mergeCommit": {"oid": "b635e254c4b327aca22469d0551c9b3a63d991b9"}, "closed": true, "closedAt": "2020-04-24T15:33:14Z", "author": {"login": "wu-sheng"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaFNvlgH2gAyNDA3NjY4ODExOjE5MTRkMWZjMDliODAxOTAxNmM3YmMyOTI5Mzc4ZmVkM2MzNzg5M2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcawG3FgH2gAyNDA3NjY4ODExOmE5Y2EwNmIzMGE1ZmM1N2IzNDc5MjFkNzVlYjRkMzliMjAxMTJkY2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1914d1fc09b8019016c7bc2929378fed3c37893f", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/1914d1fc09b8019016c7bc2929378fed3c37893f", "committedDate": "2020-04-22T09:52:39Z", "message": "Fix meter system prototype codes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a37db8dacf5cf4ef05e18ee8c9b8fb8e27e85341", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/a37db8dacf5cf4ef05e18ee8c9b8fb8e27e85341", "committedDate": "2020-04-22T15:13:58Z", "message": "Add metrics creation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e568dd61b22fb4a1fed249a9d72b9375ab3450f7", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/e568dd61b22fb4a1fed249a9d72b9375ab3450f7", "committedDate": "2020-04-23T04:01:58Z", "message": "Shape the prototype"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261c2d6c792c0121eac9490b127c18d5b0842ad7", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/261c2d6c792c0121eac9490b127c18d5b0842ad7", "committedDate": "2020-04-23T04:11:59Z", "message": "Adjust demo codes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "552211dfb4b0d560b59fb566746a4b3017fd15b4", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/552211dfb4b0d560b59fb566746a4b3017fd15b4", "committedDate": "2020-04-23T04:21:51Z", "message": "Move the closeMeterCreationChannel to core provider level."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e03deb0334c34eb9c4bdc5e27bdf986a933cb8a7", "author": {"user": {"login": "JaredTan95", "name": "Jared Tan"}}, "url": "https://github.com/apache/skywalking/commit/e03deb0334c34eb9c4bdc5e27bdf986a933cb8a7", "committedDate": "2020-04-23T04:51:35Z", "message": "Merge branch 'master' into metrics-system"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f400de3d6b4c74c46227cf9be3760d641cf3071", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/8f400de3d6b4c74c46227cf9be3760d641cf3071", "committedDate": "2020-04-23T06:51:33Z", "message": "Fix code style issue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65feb8f570ba6d9307bd54247dd8a3ba95309670", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/65feb8f570ba6d9307bd54247dd8a3ba95309670", "committedDate": "2020-04-23T06:59:34Z", "message": "Merge branch 'metrics-system' of https://github.com/apache/skywalking into metrics-system"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7374c765f1e83daa49d5d2051fea74fc6939d9e1", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/7374c765f1e83daa49d5d2051fea74fc6939d9e1", "committedDate": "2020-04-23T08:04:31Z", "message": "Fix wrong place of MeterSystem.closeMeterCreationChannel();."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "274cdcb854a476d9d07d96d4f47da340cdab3b5c", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/274cdcb854a476d9d07d96d4f47da340cdab3b5c", "committedDate": "2020-04-23T08:48:50Z", "message": "Fix profile mock core missing service."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4OTg5NDg5", "url": "https://github.com/apache/skywalking/pull/4694#pullrequestreview-398989489", "createdAt": "2020-04-23T11:01:53Z", "commit": {"oid": "274cdcb854a476d9d07d96d4f47da340cdab3b5c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMTowMTo1NFrOGKjhOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMTowMTo1NFrOGKjhOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyMDg5MQ==", "bodyText": "Is FetchProvider a demonstration?\nThe Metrics are reported by Prometheus client or SkyWalking Agent.", "url": "https://github.com/apache/skywalking/pull/4694#discussion_r413720891", "createdAt": "2020-04-23T11:01:54Z", "author": {"login": "dmsolr"}, "path": "oap-server/server-fetcher-plugin/prometheus-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/fetcher/prometheus/provider/PrometheusFetcherProvider.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.fetcher.prometheus.provider;\n+\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.analysis.TimeBucket;\n+import org.apache.skywalking.oap.server.core.analysis.meter.MeterEntity;\n+import org.apache.skywalking.oap.server.core.analysis.meter.MeterSystem;\n+import org.apache.skywalking.oap.server.core.analysis.meter.ScopeType;\n+import org.apache.skywalking.oap.server.core.analysis.meter.function.AcceptableValue;\n+import org.apache.skywalking.oap.server.fetcher.prometheus.module.PrometheusFetcherModule;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleDefine;\n+import org.apache.skywalking.oap.server.library.module.ModuleProvider;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+import org.apache.skywalking.oap.server.library.module.ServiceNotProvidedException;\n+\n+public class PrometheusFetcherProvider extends ModuleProvider {\n+    private final PrometheusFetcherConfig config;\n+\n+    public PrometheusFetcherProvider() {\n+        config = new PrometheusFetcherConfig();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"default\";\n+    }\n+\n+    @Override\n+    public Class<? extends ModuleDefine> module() {\n+        return PrometheusFetcherModule.class;\n+    }\n+\n+    @Override\n+    public ModuleConfig createConfigBeanIfAbsent() {\n+        return config;\n+    }\n+\n+    @Override\n+    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n+        final MeterSystem meterSystem = MeterSystem.meterSystem(getManager());\n+        meterSystem.create(\"test_long_metrics\", \"avg\", ScopeType.SERVICE, Long.class);\n+    }\n+\n+    @Override\n+    public void start() throws ServiceNotProvidedException, ModuleStartException {\n+\n+    }\n+\n+    @Override\n+    public void notifyAfterCompleted() throws ServiceNotProvidedException, ModuleStartException {\n+        final MeterSystem service = getManager().find(CoreModule.NAME).provider().getService(MeterSystem.class);\n+        Executors.newSingleThreadScheduledExecutor().scheduleAtFixedRate(new Runnable() {\n+            @Override\n+            public void run() {\n+                final AcceptableValue<Long> value = service.buildMetrics(\"test_long_metrics\", Long.class);\n+                value.accept(MeterEntity.newService(\"abc\"), 5L);\n+                value.setTimeBucket(TimeBucket.getMinuteTimeBucket(System.currentTimeMillis()));\n+                service.doStreamingCalculation(value);\n+            }\n+        }, 2, 2, TimeUnit.SECONDS);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "274cdcb854a476d9d07d96d4f47da340cdab3b5c"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b8900b1e282a801bb29b8a31c67c0765ed4c7f2", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/8b8900b1e282a801bb29b8a31c67c0765ed4c7f2", "committedDate": "2020-04-23T11:21:50Z", "message": "Merge branch 'master' into metrics-system"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MTQ5Mzg4", "url": "https://github.com/apache/skywalking/pull/4694#pullrequestreview-399149388", "createdAt": "2020-04-23T14:23:08Z", "commit": {"oid": "8b8900b1e282a801bb29b8a31c67c0765ed4c7f2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd101a11e2b4e65afe1bdaff810c19e54b7e82de", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/fd101a11e2b4e65afe1bdaff810c19e54b7e82de", "committedDate": "2020-04-24T01:08:26Z", "message": "Update the document for the meter system, architecture graph, fetcher, etc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2b941c61ea7434f3a93e8b17fcbc64ac751bd2d", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/a2b941c61ea7434f3a93e8b17fcbc64ac751bd2d", "committedDate": "2020-04-24T01:09:55Z", "message": "Update graph links."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ba582bc749bb9df59e2beb132794721e649a7dc", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/2ba582bc749bb9df59e2beb132794721e649a7dc", "committedDate": "2020-04-24T01:33:21Z", "message": "Make demo codes clear."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjIxNDY5", "url": "https://github.com/apache/skywalking/pull/4694#pullrequestreview-399621469", "createdAt": "2020-04-24T03:50:05Z", "commit": {"oid": "2ba582bc749bb9df59e2beb132794721e649a7dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMzo1MDowNVrOGLFJCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMzo1MDowNVrOGLFJCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI3MTc1NQ==", "bodyText": "BTW, I'm a little confused about the \"selector\", which scenariodos do we need to provide our own Prometheus fetcher provider? \ud83e\udd14\ufe0f", "url": "https://github.com/apache/skywalking/pull/4694#discussion_r414271755", "createdAt": "2020-04-24T03:50:05Z", "author": {"login": "JaredTan95"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -0,0 +1,13 @@\n+# Open Fetcher\n+Fetcher is a concept in SkyWalking backend. It uses pulling mode rather than [receiver](backend-receivers.md), which\n+read the data from the target systems. This mode is typically in some metrics SDKs, such as Prometheus.\n+\n+## Prometheus Fetcher\n+```yaml\n+prometheus-fetcher:\n+  selector: ${SW_PROMETHEUS_FETCHER:default}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba582bc749bb9df59e2beb132794721e649a7dc"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40d0e2a33e9280665d74e0fb1793d53f6390458b", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/40d0e2a33e9280665d74e0fb1793d53f6390458b", "committedDate": "2020-04-24T08:49:39Z", "message": "Make slow trace query available in the sampled record. Logically, they are the same thing. The UI doesn't need to concern about the trace as a special case."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODQ4MDQz", "url": "https://github.com/apache/skywalking/pull/4694#pullrequestreview-399848043", "createdAt": "2020-04-24T11:02:56Z", "commit": {"oid": "40d0e2a33e9280665d74e0fb1793d53f6390458b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODQ4MTIy", "url": "https://github.com/apache/skywalking/pull/4694#pullrequestreview-399848122", "createdAt": "2020-04-24T11:03:04Z", "commit": {"oid": "40d0e2a33e9280665d74e0fb1793d53f6390458b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9ca06b30a5fc57b347921d75eb4d39b20112dcc", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/a9ca06b30a5fc57b347921d75eb4d39b20112dcc", "committedDate": "2020-04-24T11:51:03Z", "message": "Merge branch 'master' into metrics-system"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2338, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}