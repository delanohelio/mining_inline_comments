{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MjM2ODYw", "number": 4936, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozMjo1MlrOEF92Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQyMzo0MDoxOVrOEHUupw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjkxNjQyOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-test/docker/base-compose.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozMjo1MlrOGkeTPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQyMTozMjo1NFrOGmobfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg5ODM2NA==", "bodyText": "This should be able to open self-observation. But I think we should add GraphQL query to verify the metrics really have values. NOTICE, usually, metrics value should not be 0, if there are some cases of that, we could skip those metrics, such as GC count/time.", "url": "https://github.com/apache/skywalking/pull/4936#discussion_r440898364", "createdAt": "2020-06-16T14:32:52Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-test/docker/base-compose.yml", "diffHunk": "@@ -34,6 +34,8 @@ services:\n       SW_STORAGE_INFLUXDB_URL: http://influxdb:8086\n       JAVA_OPTS: >-\n         -javaagent:/jacoco/jacocoagent.jar=classdumpdir=/jacoco/classes/oap,destfile=/jacoco/oap.exec,includes=org.apache.skywalking.*,excludes=org.apache.skywalking.oap.query.*:org.apache.skywalking.oap.server.core.query.*\n+      SW_PROMETHEUS_FETCHER_ACTIVE: true\n+      SW_TELEMETRY: prometheus", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1ccc1a662e37da2a1478aefb2abe8017c568565"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2MTQ3MQ==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/4936#discussion_r443161471", "createdAt": "2020-06-20T21:32:54Z", "author": {"login": "hanahmily"}, "path": "test/e2e/e2e-test/docker/base-compose.yml", "diffHunk": "@@ -34,6 +34,8 @@ services:\n       SW_STORAGE_INFLUXDB_URL: http://influxdb:8086\n       JAVA_OPTS: >-\n         -javaagent:/jacoco/jacocoagent.jar=classdumpdir=/jacoco/classes/oap,destfile=/jacoco/oap.exec,includes=org.apache.skywalking.*,excludes=org.apache.skywalking.oap.query.*:org.apache.skywalking.oap.server.core.query.*\n+      SW_PROMETHEUS_FETCHER_ACTIVE: true\n+      SW_TELEMETRY: prometheus", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg5ODM2NA=="}, "originalCommit": {"oid": "b1ccc1a662e37da2a1478aefb2abe8017c568565"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTE1MDYwOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/simple/SimpleE2E.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQyMzozOToxNlrOGmo0hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQyMzo0OTo1NVrOGmo2Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2Nzg3Ng==", "bodyText": "What is this for?", "url": "https://github.com/apache/skywalking/pull/4936#discussion_r443167876", "createdAt": "2020-06-20T23:39:16Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/simple/SimpleE2E.java", "diffHunk": "@@ -126,11 +132,12 @@ void setUp() throws Exception {\n     public void tearDown() {\n         trafficController.stop();\n     }\n-\n+     \n     @RetryableTest\n     void services() throws Exception {\n-        final List<Service> services = graphql.services(new ServicesQuery().start(startTime).end(now()));\n+        List<Service> services = graphql.services(new ServicesQuery().start(startTime).end(now()));\n \n+        services = services.stream().filter(s -> !s.getLabel().equals(\"oap-server\")).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78274c7f842b086eb3aa9c87b8ce817bf77733da"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2ODMyMw==", "bodyText": "Oh, got it. I need to exclude the oap nodes.", "url": "https://github.com/apache/skywalking/pull/4936#discussion_r443168323", "createdAt": "2020-06-20T23:49:55Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/simple/SimpleE2E.java", "diffHunk": "@@ -126,11 +132,12 @@ void setUp() throws Exception {\n     public void tearDown() {\n         trafficController.stop();\n     }\n-\n+     \n     @RetryableTest\n     void services() throws Exception {\n-        final List<Service> services = graphql.services(new ServicesQuery().start(startTime).end(now()));\n+        List<Service> services = graphql.services(new ServicesQuery().start(startTime).end(now()));\n \n+        services = services.stream().filter(s -> !s.getLabel().equals(\"oap-server\")).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2Nzg3Ng=="}, "originalCommit": {"oid": "78274c7f842b086eb3aa9c87b8ce817bf77733da"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTE1MTExOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/storage/StorageE2E.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQyMzo0MDoxOVrOGmo0vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQyMzo0MDoxOVrOGmo0vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2NzkzMw==", "bodyText": "Same question here. You have separated so11y verification.", "url": "https://github.com/apache/skywalking/pull/4936#discussion_r443167933", "createdAt": "2020-06-20T23:40:19Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/storage/StorageE2E.java", "diffHunk": "@@ -112,8 +118,9 @@ public void tearDown() {\n \n     @RetryableTest\n     void services() throws Exception {\n-        final List<Service> services = graphql.services(new ServicesQuery().start(startTime).end(now()));\n+        List<Service> services = graphql.services(new ServicesQuery().start(startTime).end(now()));\n \n+        services = services.stream().filter(s -> !s.getLabel().equals(\"oap-server\")).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78274c7f842b086eb3aa9c87b8ce817bf77733da"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 216, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}