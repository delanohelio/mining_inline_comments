{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMzI0NTk4", "number": 5658, "title": "resttemplate plugin concurrency scenario data mistake problem  fix", "bodyText": "Please answer these questions before submitting a pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\nRelated issues\n#5657\n\n\n\nBug fix\n\nBug description:\nsometimes, we use RestTemplate as singleton ,  like this:\n\n    @Autowired\n    private RestTemplate restTemplate;\n\n    @Autowired\n    private AsyncRestTemplate asyncRestTemplate;\n\nbut  now, skywalking RestTemplate plugin use SkyWalkingDynamicField to transfer the data during the request,\nthis SkyWalkingDynamicField is a volatile field in the RestTemplate/AsyncRestTemplate object , if we use RestTemplate/AsyncRestTemplate object as singleton, we will have data mistake in concurrency scenario\n\nHow to fix?\nuse RuntimeContext implement replace SkyWalkingDynamicField implement on RestTemplate/AsyncRestTemplate object", "createdAt": "2020-10-13T13:37:47Z", "url": "https://github.com/apache/skywalking/pull/5658", "merged": true, "mergeCommit": {"oid": "f2e83bad30757ca6af91940eb53a4248c667c4cb"}, "closed": true, "closedAt": "2020-10-15T04:09:05Z", "author": {"login": "thanq"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSISwcAH2gAyNTAyMzI0NTk4OjY5YzhiMGFmYmExOTYzMTBlYWRmMTA2YmNhNTgxOThiMzM5ZmE4YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSoeX3gFqTUwODg5NjU0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "69c8b0afba196310eadf106bca58198b339fa8be", "author": {"user": {"login": "thanq", "name": "qinqiangqiang"}}, "url": "https://github.com/apache/skywalking/commit/69c8b0afba196310eadf106bca58198b339fa8be", "committedDate": "2020-10-13T13:07:36Z", "message": "resttemplate plugin concurrency scenario data mistake problem  fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NDUyODg5", "url": "https://github.com/apache/skywalking/pull/5658#pullrequestreview-507452889", "createdAt": "2020-10-13T13:46:02Z", "commit": {"oid": "69c8b0afba196310eadf106bca58198b339fa8be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMzo0NjowMlrOHgnkvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMzo0NjowMlrOHgnkvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2NDg2MA==", "bodyText": "Please put this in the finally and try{} the whole afterMethod in case it leaks.", "url": "https://github.com/apache/skywalking/pull/5658#discussion_r503964860", "createdAt": "2020-10-13T13:46:02Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/resttemplate-4.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/resttemplate/async/RestExecuteInterceptor.java", "diffHunk": "@@ -44,29 +45,30 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         String remotePeer = requestURL.getHost() + \":\" + (requestURL.getPort() > 0 ? requestURL.getPort() : \"https\".equalsIgnoreCase(requestURL\n             .getScheme()) ? 443 : 80);\n \n-        String formatURIPath = requestURL.getPath();\n-        AbstractSpan span = ContextManager.createExitSpan(formatURIPath, contextCarrier, remotePeer);\n+        String uri = requestURL.getPath();\n+        AbstractSpan span = ContextManager.createExitSpan(uri, contextCarrier, remotePeer);\n \n         span.setComponent(ComponentsDefine.SPRING_REST_TEMPLATE);\n         Tags.URL.set(span, requestURL.getScheme() + \"://\" + requestURL.getHost() + \":\" + requestURL.getPort() + requestURL\n             .getPath());\n         Tags.HTTP.METHOD.set(span, httpMethod.toString());\n         SpanLayer.asHttp(span);\n-        Object[] cacheValues = new Object[3];\n-        cacheValues[0] = formatURIPath;\n-        cacheValues[1] = contextCarrier;\n-        objInst.setSkyWalkingDynamicField(cacheValues);\n+        RestTemplateRuntimeContextHelper.addUri(uri);\n+        RestTemplateRuntimeContextHelper.addContextCarrier(contextCarrier);\n     }\n \n     @Override\n     public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n         Object ret) throws Throwable {\n-        Object[] cacheValues = (Object[]) objInst.getSkyWalkingDynamicField();\n-        cacheValues[2] = ContextManager.capture();\n+        ContextSnapshot contextSnapshot = ContextManager.capture();\n         if (ret != null) {\n-            String uri = (String) cacheValues[0];\n-            ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, (ContextSnapshot) cacheValues[2]));\n+            String uri = RestTemplateRuntimeContextHelper.getUri();\n+            ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, contextSnapshot));\n         }\n+\n+        RestTemplateRuntimeContextHelper.cleanUri();\n+        RestTemplateRuntimeContextHelper.cleanContextCarrier();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69c8b0afba196310eadf106bca58198b339fa8be"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70ceeb354b02f5ec303ed47aa613e9a735022933", "author": {"user": {"login": "thanq", "name": "qinqiangqiang"}}, "url": "https://github.com/apache/skywalking/commit/70ceeb354b02f5ec303ed47aa613e9a735022933", "committedDate": "2020-10-13T14:10:18Z", "message": " put this in the finally and try{} the whole afterMethod in case it leaks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NTA3NTE1", "url": "https://github.com/apache/skywalking/pull/5658#pullrequestreview-507507515", "createdAt": "2020-10-13T14:36:57Z", "commit": {"oid": "70ceeb354b02f5ec303ed47aa613e9a735022933"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDozNjo1OFrOHgqElw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDozNzo1OFrOHgqHtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwNTc4Mw==", "bodyText": "Don't use catch, just try/finally, please.", "url": "https://github.com/apache/skywalking/pull/5658#discussion_r504005783", "createdAt": "2020-10-13T14:36:58Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/resttemplate-4.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/resttemplate/async/RestExecuteInterceptor.java", "diffHunk": "@@ -44,30 +50,34 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         String remotePeer = requestURL.getHost() + \":\" + (requestURL.getPort() > 0 ? requestURL.getPort() : \"https\".equalsIgnoreCase(requestURL\n             .getScheme()) ? 443 : 80);\n \n-        String formatURIPath = requestURL.getPath();\n-        AbstractSpan span = ContextManager.createExitSpan(formatURIPath, contextCarrier, remotePeer);\n+        String uri = requestURL.getPath();\n+        AbstractSpan span = ContextManager.createExitSpan(uri, contextCarrier, remotePeer);\n \n         span.setComponent(ComponentsDefine.SPRING_REST_TEMPLATE);\n         Tags.URL.set(span, requestURL.getScheme() + \"://\" + requestURL.getHost() + \":\" + requestURL.getPort() + requestURL\n             .getPath());\n         Tags.HTTP.METHOD.set(span, httpMethod.toString());\n         SpanLayer.asHttp(span);\n-        Object[] cacheValues = new Object[3];\n-        cacheValues[0] = formatURIPath;\n-        cacheValues[1] = contextCarrier;\n-        objInst.setSkyWalkingDynamicField(cacheValues);\n+        RestTemplateRuntimeContextHelper.addUri(uri);\n+        RestTemplateRuntimeContextHelper.addContextCarrier(contextCarrier);\n     }\n \n     @Override\n     public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n         Object ret) throws Throwable {\n-        Object[] cacheValues = (Object[]) objInst.getSkyWalkingDynamicField();\n-        cacheValues[2] = ContextManager.capture();\n-        if (ret != null) {\n-            String uri = (String) cacheValues[0];\n-            ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, (ContextSnapshot) cacheValues[2]));\n+        try {\n+            ContextSnapshot contextSnapshot = ContextManager.capture();\n+            if (ret != null) {\n+                String uri = RestTemplateRuntimeContextHelper.getUri();\n+                ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, contextSnapshot));\n+            }\n+        } catch (Throwable e){\n+            LOGGER.warn(\"resttemplate plugin has error: \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70ceeb354b02f5ec303ed47aa613e9a735022933"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwNjU4Mw==", "bodyText": "Move this into the try. Because this could have NPE.", "url": "https://github.com/apache/skywalking/pull/5658#discussion_r504006583", "createdAt": "2020-10-13T14:37:58Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/resttemplate-4.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/resttemplate/async/RestExecuteInterceptor.java", "diffHunk": "@@ -44,30 +50,34 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         String remotePeer = requestURL.getHost() + \":\" + (requestURL.getPort() > 0 ? requestURL.getPort() : \"https\".equalsIgnoreCase(requestURL\n             .getScheme()) ? 443 : 80);\n \n-        String formatURIPath = requestURL.getPath();\n-        AbstractSpan span = ContextManager.createExitSpan(formatURIPath, contextCarrier, remotePeer);\n+        String uri = requestURL.getPath();\n+        AbstractSpan span = ContextManager.createExitSpan(uri, contextCarrier, remotePeer);\n \n         span.setComponent(ComponentsDefine.SPRING_REST_TEMPLATE);\n         Tags.URL.set(span, requestURL.getScheme() + \"://\" + requestURL.getHost() + \":\" + requestURL.getPort() + requestURL\n             .getPath());\n         Tags.HTTP.METHOD.set(span, httpMethod.toString());\n         SpanLayer.asHttp(span);\n-        Object[] cacheValues = new Object[3];\n-        cacheValues[0] = formatURIPath;\n-        cacheValues[1] = contextCarrier;\n-        objInst.setSkyWalkingDynamicField(cacheValues);\n+        RestTemplateRuntimeContextHelper.addUri(uri);\n+        RestTemplateRuntimeContextHelper.addContextCarrier(contextCarrier);\n     }\n \n     @Override\n     public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n         Object ret) throws Throwable {\n-        Object[] cacheValues = (Object[]) objInst.getSkyWalkingDynamicField();\n-        cacheValues[2] = ContextManager.capture();\n-        if (ret != null) {\n-            String uri = (String) cacheValues[0];\n-            ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, (ContextSnapshot) cacheValues[2]));\n+        try {\n+            ContextSnapshot contextSnapshot = ContextManager.capture();\n+            if (ret != null) {\n+                String uri = RestTemplateRuntimeContextHelper.getUri();\n+                ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, contextSnapshot));\n+            }\n+        } catch (Throwable e){\n+            LOGGER.warn(\"resttemplate plugin has error: \", e);\n+        } finally {\n+            ContextManager.stopSpan();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70ceeb354b02f5ec303ed47aa613e9a735022933"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db5df8c165d1e133ca0ca195975fb67b4ff7684f", "author": {"user": {"login": "thanq", "name": "qinqiangqiang"}}, "url": "https://github.com/apache/skywalking/commit/db5df8c165d1e133ca0ca195975fb67b4ff7684f", "committedDate": "2020-10-14T06:21:26Z", "message": "move stopSpan method in try code block to avoid NPE, and solve code style problem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NDYzOTYw", "url": "https://github.com/apache/skywalking/pull/5658#pullrequestreview-507463960", "createdAt": "2020-10-13T13:56:44Z", "commit": {"oid": "69c8b0afba196310eadf106bca58198b339fa8be"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMzo1Njo0NFrOHgoGoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjozMzozOFrOHhEJhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3MzUzNw==", "bodyText": "got it", "url": "https://github.com/apache/skywalking/pull/5658#discussion_r503973537", "createdAt": "2020-10-13T13:56:44Z", "author": {"login": "thanq"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/resttemplate-4.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/resttemplate/async/RestExecuteInterceptor.java", "diffHunk": "@@ -44,29 +45,30 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         String remotePeer = requestURL.getHost() + \":\" + (requestURL.getPort() > 0 ? requestURL.getPort() : \"https\".equalsIgnoreCase(requestURL\n             .getScheme()) ? 443 : 80);\n \n-        String formatURIPath = requestURL.getPath();\n-        AbstractSpan span = ContextManager.createExitSpan(formatURIPath, contextCarrier, remotePeer);\n+        String uri = requestURL.getPath();\n+        AbstractSpan span = ContextManager.createExitSpan(uri, contextCarrier, remotePeer);\n \n         span.setComponent(ComponentsDefine.SPRING_REST_TEMPLATE);\n         Tags.URL.set(span, requestURL.getScheme() + \"://\" + requestURL.getHost() + \":\" + requestURL.getPort() + requestURL\n             .getPath());\n         Tags.HTTP.METHOD.set(span, httpMethod.toString());\n         SpanLayer.asHttp(span);\n-        Object[] cacheValues = new Object[3];\n-        cacheValues[0] = formatURIPath;\n-        cacheValues[1] = contextCarrier;\n-        objInst.setSkyWalkingDynamicField(cacheValues);\n+        RestTemplateRuntimeContextHelper.addUri(uri);\n+        RestTemplateRuntimeContextHelper.addContextCarrier(contextCarrier);\n     }\n \n     @Override\n     public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n         Object ret) throws Throwable {\n-        Object[] cacheValues = (Object[]) objInst.getSkyWalkingDynamicField();\n-        cacheValues[2] = ContextManager.capture();\n+        ContextSnapshot contextSnapshot = ContextManager.capture();\n         if (ret != null) {\n-            String uri = (String) cacheValues[0];\n-            ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, (ContextSnapshot) cacheValues[2]));\n+            String uri = RestTemplateRuntimeContextHelper.getUri();\n+            ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, contextSnapshot));\n         }\n+\n+        RestTemplateRuntimeContextHelper.cleanUri();\n+        RestTemplateRuntimeContextHelper.cleanContextCarrier();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2NDg2MA=="}, "originalCommit": {"oid": "69c8b0afba196310eadf106bca58198b339fa8be"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk4OTI3Mw==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/5658#discussion_r503989273", "createdAt": "2020-10-13T14:16:33Z", "author": {"login": "thanq"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/resttemplate-4.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/resttemplate/async/RestExecuteInterceptor.java", "diffHunk": "@@ -44,29 +45,30 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         String remotePeer = requestURL.getHost() + \":\" + (requestURL.getPort() > 0 ? requestURL.getPort() : \"https\".equalsIgnoreCase(requestURL\n             .getScheme()) ? 443 : 80);\n \n-        String formatURIPath = requestURL.getPath();\n-        AbstractSpan span = ContextManager.createExitSpan(formatURIPath, contextCarrier, remotePeer);\n+        String uri = requestURL.getPath();\n+        AbstractSpan span = ContextManager.createExitSpan(uri, contextCarrier, remotePeer);\n \n         span.setComponent(ComponentsDefine.SPRING_REST_TEMPLATE);\n         Tags.URL.set(span, requestURL.getScheme() + \"://\" + requestURL.getHost() + \":\" + requestURL.getPort() + requestURL\n             .getPath());\n         Tags.HTTP.METHOD.set(span, httpMethod.toString());\n         SpanLayer.asHttp(span);\n-        Object[] cacheValues = new Object[3];\n-        cacheValues[0] = formatURIPath;\n-        cacheValues[1] = contextCarrier;\n-        objInst.setSkyWalkingDynamicField(cacheValues);\n+        RestTemplateRuntimeContextHelper.addUri(uri);\n+        RestTemplateRuntimeContextHelper.addContextCarrier(contextCarrier);\n     }\n \n     @Override\n     public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n         Object ret) throws Throwable {\n-        Object[] cacheValues = (Object[]) objInst.getSkyWalkingDynamicField();\n-        cacheValues[2] = ContextManager.capture();\n+        ContextSnapshot contextSnapshot = ContextManager.capture();\n         if (ret != null) {\n-            String uri = (String) cacheValues[0];\n-            ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, (ContextSnapshot) cacheValues[2]));\n+            String uri = RestTemplateRuntimeContextHelper.getUri();\n+            ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, contextSnapshot));\n         }\n+\n+        RestTemplateRuntimeContextHelper.cleanUri();\n+        RestTemplateRuntimeContextHelper.cleanContextCarrier();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2NDg2MA=="}, "originalCommit": {"oid": "69c8b0afba196310eadf106bca58198b339fa8be"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzMzAyOQ==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/5658#discussion_r504433029", "createdAt": "2020-10-14T06:33:38Z", "author": {"login": "thanq"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/resttemplate-4.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/resttemplate/async/RestExecuteInterceptor.java", "diffHunk": "@@ -44,30 +50,34 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         String remotePeer = requestURL.getHost() + \":\" + (requestURL.getPort() > 0 ? requestURL.getPort() : \"https\".equalsIgnoreCase(requestURL\n             .getScheme()) ? 443 : 80);\n \n-        String formatURIPath = requestURL.getPath();\n-        AbstractSpan span = ContextManager.createExitSpan(formatURIPath, contextCarrier, remotePeer);\n+        String uri = requestURL.getPath();\n+        AbstractSpan span = ContextManager.createExitSpan(uri, contextCarrier, remotePeer);\n \n         span.setComponent(ComponentsDefine.SPRING_REST_TEMPLATE);\n         Tags.URL.set(span, requestURL.getScheme() + \"://\" + requestURL.getHost() + \":\" + requestURL.getPort() + requestURL\n             .getPath());\n         Tags.HTTP.METHOD.set(span, httpMethod.toString());\n         SpanLayer.asHttp(span);\n-        Object[] cacheValues = new Object[3];\n-        cacheValues[0] = formatURIPath;\n-        cacheValues[1] = contextCarrier;\n-        objInst.setSkyWalkingDynamicField(cacheValues);\n+        RestTemplateRuntimeContextHelper.addUri(uri);\n+        RestTemplateRuntimeContextHelper.addContextCarrier(contextCarrier);\n     }\n \n     @Override\n     public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n         Object ret) throws Throwable {\n-        Object[] cacheValues = (Object[]) objInst.getSkyWalkingDynamicField();\n-        cacheValues[2] = ContextManager.capture();\n-        if (ret != null) {\n-            String uri = (String) cacheValues[0];\n-            ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, (ContextSnapshot) cacheValues[2]));\n+        try {\n+            ContextSnapshot contextSnapshot = ContextManager.capture();\n+            if (ret != null) {\n+                String uri = RestTemplateRuntimeContextHelper.getUri();\n+                ((EnhancedInstance) ret).setSkyWalkingDynamicField(new EnhanceCacheObjects(uri, ComponentsDefine.SPRING_REST_TEMPLATE, SpanLayer.HTTP, contextSnapshot));\n+            }\n+        } catch (Throwable e){\n+            LOGGER.warn(\"resttemplate plugin has error: \", e);\n+        } finally {\n+            ContextManager.stopSpan();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwNjU4Mw=="}, "originalCommit": {"oid": "70ceeb354b02f5ec303ed47aa613e9a735022933"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a439e752d36781755129e3ce44fb2350b056e258", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/a439e752d36781755129e3ce44fb2350b056e258", "committedDate": "2020-10-14T15:53:36Z", "message": "Merge branch 'master' into feature/resttemplate_plugin_concurrency_scenario_data_mistake_fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0e416a0ef77e96cb27560e31103841bceee5398", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/f0e416a0ef77e96cb27560e31103841bceee5398", "committedDate": "2020-10-15T02:30:25Z", "message": "Merge branch 'master' into feature/resttemplate_plugin_concurrency_scenario_data_mistake_fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4ODk2NTQy", "url": "https://github.com/apache/skywalking/pull/5658#pullrequestreview-508896542", "createdAt": "2020-10-15T02:37:15Z", "commit": {"oid": "f0e416a0ef77e96cb27560e31103841bceee5398"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1826, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}