{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NTA1Mjg5", "number": 4783, "title": " Ingest prometheus metrics through meter system ", "bodyText": "Signed-off-by: Gao Hongtao hanahmily@gmail.com\nPlease answer these questions before submitting pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n\n\n\nNew feature or improvement\nTasks:\n\n Parse exportation format\n Fetch metrics from exporter\n\n Gague\n Counter\n Histogram\n Percentage function (to support gc metrics)\n\n\n Transfer to metrics in meter system\n In order to support prometheus query operator, adding groovy expression\n Kubernetes endpoints discovery", "createdAt": "2020-05-13T17:24:48Z", "url": "https://github.com/apache/skywalking/pull/4783", "merged": true, "mergeCommit": {"oid": "4f0f39ffccdc9b41049903cc540b8904f7c9728e"}, "closed": true, "closedAt": "2020-06-08T01:19:35Z", "author": {"login": "hanahmily"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchCE9ygBqjMzMzQzNDczNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpGCfuAFqTQyNTg3MjcyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "513bc1dfd4ee3225a28fe15df3e6090f6d868113", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/513bc1dfd4ee3225a28fe15df3e6090f6d868113", "committedDate": "2020-05-14T00:10:35Z", "message": "Parse prometheus expostion text format\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5140463e749c46b6ebf59fb4c3d5bbe31847cdf", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/d5140463e749c46b6ebf59fb4c3d5bbe31847cdf", "committedDate": "2020-05-24T23:30:23Z", "message": "Parse prometheus expostion text format\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "702d955b99bb94c768e0d76651a15f0e7940ea25", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/702d955b99bb94c768e0d76651a15f0e7940ea25", "committedDate": "2020-05-14T03:36:53Z", "message": "Merge branch 'master' into meter/prometheus"}, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "0202791d1e03dba496293071d07f3fdf347f421d", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/0202791d1e03dba496293071d07f3fdf347f421d", "committedDate": "2020-05-24T23:39:51Z", "message": "Add fetcher prototype\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "0202791d1e03dba496293071d07f3fdf347f421d", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/0202791d1e03dba496293071d07f3fdf347f421d", "committedDate": "2020-05-24T23:39:51Z", "message": "Add fetcher prototype\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDA4NDQ5", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-417408449", "createdAt": "2020-05-25T00:37:17Z", "commit": {"oid": "0202791d1e03dba496293071d07f3fdf347f421d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDozNzoxN1rOGZyVog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDozNzoxN1rOGZyVog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5MjMyMg==", "bodyText": "Let's copy part of the Duration#parse comments here to explain the PTxx.\n     * The leading plus/minus sign, and negative values for other units are\n     * not part of the ISO-8601 standard.\n     * <p>\n     * Examples:\n     * <pre>\n     *    \"PT20.345S\" -- parses as \"20.345 seconds\"\n     *    \"PT15M\"     -- parses as \"15 minutes\" (where a minute is 60 seconds)\n     *    \"PT10H\"     -- parses as \"10 hours\" (where an hour is 3600 seconds)\n     *    \"P2D\"       -- parses as \"2 days\" (where a day is 24 hours or 86400 seconds)\n     *    \"P2DT3H4M\"  -- parses as \"2 days, 3 hours and 4 minutes\"\n     *    \"P-6H3M\"    -- parses as \"-6 hours and +3 minutes\"\n     *    \"-P6H3M\"    -- parses as \"-6 hours and -3 minutes\"\n     *    \"-P-6H+3M\"  -- parses as \"+6 hours and -3 minutes\"\n     * </pre>", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r429692322", "createdAt": "2020-05-25T00:37:17Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/fetcher-prom-rules/self.yaml", "diffHunk": "@@ -0,0 +1,66 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# Only for test.\n+fetcherInterval: PT15S\n+fetcherTimeout: PT10S\n+metricsPath: /metrics\n+staticConfig:\n+  # targets will be labeled as \"instance\"\n+  targets:\n+    - localhost:1234\n+  labels:\n+    app: test-oap\n+metricsRules:\n+  - name: instance_cpu_percentage\n+    scope: SERVICE_INSTANCE\n+    downSampling: doubleAvg\n+    sources:\n+      process_cpu_seconds_total:\n+        counterFunction: RATE\n+        range: PT1M", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0202791d1e03dba496293071d07f3fdf347f421d"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDA4NjQ1", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-417408645", "createdAt": "2020-05-25T00:38:49Z", "commit": {"oid": "0202791d1e03dba496293071d07f3fdf347f421d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDozODo0OVrOGZyWRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDozODo0OVrOGZyWRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5MjQ4Nw==", "bodyText": "Will this file be deleted eventually?", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r429692487", "createdAt": "2020-05-25T00:38:49Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/fetcher-prom-rules/self.yaml", "diffHunk": "@@ -0,0 +1,66 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# Only for test.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0202791d1e03dba496293071d07f3fdf347f421d"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDIwMjMx", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-417420231", "createdAt": "2020-05-25T01:51:28Z", "commit": {"oid": "0202791d1e03dba496293071d07f3fdf347f421d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMTo1MToyOFrOGZy8mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMTo1MToyOFrOGZy8mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwMjI5OQ==", "bodyText": "How about we change downSampling to aggregationFunc? Downsampling has a special meaning in the skywalking.", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r429702299", "createdAt": "2020-05-25T01:51:28Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/fetcher-prom-rules/self.yaml", "diffHunk": "@@ -0,0 +1,66 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# Only for test.\n+fetcherInterval: PT15S\n+fetcherTimeout: PT10S\n+metricsPath: /metrics\n+staticConfig:\n+  # targets will be labeled as \"instance\"\n+  targets:\n+    - localhost:1234\n+  labels:\n+    app: test-oap\n+metricsRules:\n+  - name: instance_cpu_percentage\n+    scope: SERVICE_INSTANCE\n+    downSampling: doubleAvg\n+    sources:\n+      process_cpu_seconds_total:\n+        counterFunction: RATE\n+        range: PT1M\n+        relabel:\n+          service:\n+            - app\n+          instance:\n+            - instance\n+  - name: service_cpu_percentage\n+    scope: SERVICE\n+    downSampling: doubleAvg", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0202791d1e03dba496293071d07f3fdf347f421d"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8974e7ca57fd62a06028e429215e6d9ed30e2715", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/8974e7ca57fd62a06028e429215e6d9ed30e2715", "committedDate": "2020-05-26T03:09:03Z", "message": "Implement irate and increase functions for counter\nand Add exception handler for streaming\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa50cc7192fcef32d079a4865041bf009a271286", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/fa50cc7192fcef32d079a4865041bf009a271286", "committedDate": "2020-05-27T09:57:07Z", "message": "Add heatmap for histogram\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef1a5fd0b79aa070b6a3d8d3bf163b401ae0010d", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/ef1a5fd0b79aa070b6a3d8d3bf163b401ae0010d", "committedDate": "2020-05-28T01:12:19Z", "message": "Add summary\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e6976dd4957255badf8b74e3563d7082d490cdb", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/2e6976dd4957255badf8b74e3563d7082d490cdb", "committedDate": "2020-06-01T06:41:24Z", "message": "Add avg downsampling to histogram and pencentile\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15f83a0e0431fc04c5a139cf8d5d6a3b86beccbd", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/15f83a0e0431fc04c5a139cf8d5d6a3b86beccbd", "committedDate": "2020-06-01T07:08:04Z", "message": "Add endpoint entity\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51be4b99640e4f4b4fb36d87a45a8f0fe29c9571", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/51be4b99640e4f4b4fb36d87a45a8f0fe29c9571", "committedDate": "2020-06-01T07:10:31Z", "message": "Merge branch 'master' into meter/prometheus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/969b4ca36deac3dec625f6f884087c2c79a83b78", "committedDate": "2020-06-01T07:17:14Z", "message": "Polish codes\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNjQxNzc4", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-421641778", "createdAt": "2020-06-01T07:23:24Z", "commit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNzoyMzoyNFrOGdBIEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNzozNjo0N1rOGdBbUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4MDMzNw==", "bodyText": "I think this app name is not correct.", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433080337", "createdAt": "2020-06-01T07:23:24Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/fetcher-prom-rules/self.yaml", "diffHunk": "@@ -0,0 +1,170 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# This will parse a textual representation of a duration. The formats\n+# accepted are based on the ISO-8601 duration format {@code PnDTnHnMn.nS}\n+# with days considered to be exactly 24 hours.\n+# <p>\n+# Examples:\n+# <pre>\n+#    \"PT20.345S\" -- parses as \"20.345 seconds\"\n+#    \"PT15M\"     -- parses as \"15 minutes\" (where a minute is 60 seconds)\n+#    \"PT10H\"     -- parses as \"10 hours\" (where an hour is 3600 seconds)\n+#    \"P2D\"       -- parses as \"2 days\" (where a day is 24 hours or 86400 seconds)\n+#    \"P2DT3H4M\"  -- parses as \"2 days, 3 hours and 4 minutes\"\n+#    \"P-6H3M\"    -- parses as \"-6 hours and +3 minutes\"\n+#    \"-P6H3M\"    -- parses as \"-6 hours and -3 minutes\"\n+#    \"-P-6H+3M\"  -- parses as \"+6 hours and -3 minutes\"\n+# </pre>\n+fetcherInterval: PT15S\n+fetcherTimeout: PT10S\n+metricsPath: /metrics\n+staticConfig:\n+  # targets will be labeled as \"instance\"\n+  targets:\n+    - localhost:1234\n+  labels:\n+    app: test-oap", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4MzgyNQ==", "bodyText": "I want to discuss whether should we remote the PercentileMetrics and HistogramMetrics? Are they still required?\nUpdated below.", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433083825", "createdAt": "2020-06-01T07:32:55Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/meter/function/AvgPercentileFunction.java", "diffHunk": "@@ -0,0 +1,328 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.analysis.meter.function;\n+\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.IntStream;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.core.Const;\n+import org.apache.skywalking.oap.server.core.UnexpectedException;\n+import org.apache.skywalking.oap.server.core.analysis.meter.MeterEntity;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.DataTable;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.IntList;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.Metrics;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.MultiIntValuesHolder;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.PercentileMetrics;\n+import org.apache.skywalking.oap.server.core.remote.grpc.proto.RemoteData;\n+import org.apache.skywalking.oap.server.core.storage.StorageBuilder;\n+import org.apache.skywalking.oap.server.core.storage.annotation.Column;\n+\n+/**\n+ * PercentileFunction is the implementation of {@link PercentileMetrics} in the meter system. The major difference is\n+ * the PercentileFunction accepts the {@link AvgPercentileArgument} as input rather than every single request.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4NDA0OQ==", "bodyText": "We have getter, why need `protected?", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433084049", "createdAt": "2020-06-01T07:33:34Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/metrics/Metrics.java", "diffHunk": "@@ -40,7 +40,7 @@\n     @Getter\n     @Setter\n     @Column(columnName = TIME_BUCKET)\n-    private long timeBucket;\n+    protected long timeBucket;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4NDA4Mg==", "bodyText": "We have getter, why need `protected?", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433084082", "createdAt": "2020-06-01T07:33:40Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/metrics/DoubleAvgMetrics.java", "diffHunk": "@@ -37,11 +37,11 @@\n     @Getter\n     @Setter\n     @Column(columnName = SUMMATION, storageOnly = true)\n-    private double summation;\n+    protected double summation;\n     @Getter\n     @Setter\n     @Column(columnName = COUNT, storageOnly = true)\n-    private long count;\n+    protected long count;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4NDIyMQ==", "bodyText": "Ping @mrproliu WDYT?", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433084221", "createdAt": "2020-06-01T07:34:04Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/meter/function/AvgPercentileFunction.java", "diffHunk": "@@ -0,0 +1,328 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.analysis.meter.function;\n+\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.IntStream;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.core.Const;\n+import org.apache.skywalking.oap.server.core.UnexpectedException;\n+import org.apache.skywalking.oap.server.core.analysis.meter.MeterEntity;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.DataTable;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.IntList;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.Metrics;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.MultiIntValuesHolder;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.PercentileMetrics;\n+import org.apache.skywalking.oap.server.core.remote.grpc.proto.RemoteData;\n+import org.apache.skywalking.oap.server.core.storage.StorageBuilder;\n+import org.apache.skywalking.oap.server.core.storage.annotation.Column;\n+\n+/**\n+ * PercentileFunction is the implementation of {@link PercentileMetrics} in the meter system. The major difference is\n+ * the PercentileFunction accepts the {@link AvgPercentileArgument} as input rather than every single request.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4MzgyNQ=="}, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4NDQ3NA==", "bodyText": "Please add comments", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433084474", "createdAt": "2020-06-01T07:34:40Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-fetcher-plugin/prometheus-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/fetcher/prometheus/provider/counter/Window.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.fetcher.prometheus.provider.counter;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.Maps;\n+import io.vavr.Function2;\n+import io.vavr.Tuple;\n+import io.vavr.Tuple2;\n+import java.time.Duration;\n+import java.util.Collections;\n+import java.util.LinkedList;\n+import java.util.Map;\n+import java.util.Queue;\n+import lombok.EqualsAndHashCode;\n+import lombok.RequiredArgsConstructor;\n+import lombok.ToString;\n+import org.apache.skywalking.oap.server.fetcher.prometheus.provider.operation.Source;\n+\n+@RequiredArgsConstructor\n+@ToString\n+@EqualsAndHashCode\n+public class Window {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4NDcwOQ==", "bodyText": "There is an org.apache.skywalking.oap.server.core.source.Source in the core. Do we have a better name?", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433084709", "createdAt": "2020-06-01T07:35:19Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-fetcher-plugin/prometheus-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/fetcher/prometheus/provider/operation/Source.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.fetcher.prometheus.provider.operation;\n+\n+import com.google.common.collect.ImmutableMap;\n+import lombok.Builder;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.ToString;\n+import org.apache.skywalking.oap.server.core.analysis.meter.MeterEntity;\n+import org.apache.skywalking.oap.server.fetcher.prometheus.provider.rule.CounterFunction;\n+\n+@EqualsAndHashCode\n+@ToString\n+@Getter\n+@Builder\n+public class Source {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4NTA0Mg==", "bodyText": "What is this? Submit by mistake?", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433085042", "createdAt": "2020-06-01T07:36:08Z", "author": {"login": "wu-sheng"}, "path": "self-modules.txt", "diffHunk": "@@ -0,0 +1,17 @@\n+apm-8.0.0-SNAPSHOT.jar\n+apm-commons-8.0.0-SNAPSHOT.jar\n+apm-util-8.0.0-SNAPSHOT.jar\n+apm-datacarrier-8.0.0-SNAPSHOT.jar\n+apm-protocol-8.0.0-SNAPSHOT.jar\n+apm-network-8.0.0-SNAPSHOT.jar\n+oap-server-8.0.0-SNAPSHOT.jar\n+[ERROR] Failed to execute goal on project server-library: Could not resolve dependencies for project org.apache.skywalking:server-library:pom:8.0.0-SNAPSHOT: Failure to find org.apache.skywalking:apm-util:jar:8.0.0-SNAPSHOT in https://repository.apache.org/snapshots was cached in the local repository, resolution will not be reattempted until the update interval of apache.snapshots has elapsed or updates are forced -> [Help 1]\n+[ERROR] \n+[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n+[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n+[ERROR] \n+[ERROR] For more information about the errors and possible solutions, please read the following articles:\n+[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n+[ERROR] \n+[ERROR] After correcting the problems, you can resume the build with the command\n+[ERROR]   mvn <goals> -rf :server-library", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA4NTI2NQ==", "bodyText": "What is this?", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433085265", "createdAt": "2020-06-01T07:36:47Z", "author": {"login": "wu-sheng"}, "path": "third-party-dependencies.txt", "diffHunk": "@@ -0,0 +1,297 @@\n+HdrHistogram-2.1.9.jar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNjY1OTY0", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-421665964", "createdAt": "2020-06-01T08:11:08Z", "commit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODoxMTowOFrOGdCQgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODoxMTowOFrOGdCQgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA5ODg4Mw==", "bodyText": "According to this method, you are calculating the avg value of all given values in the time bucket, including the downsampling. I think you should add very clear comments about what is different.", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433098883", "createdAt": "2020-06-01T08:11:08Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/meter/function/AvgPercentileFunction.java", "diffHunk": "@@ -0,0 +1,328 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.analysis.meter.function;\n+\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.IntStream;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.core.Const;\n+import org.apache.skywalking.oap.server.core.UnexpectedException;\n+import org.apache.skywalking.oap.server.core.analysis.meter.MeterEntity;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.DataTable;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.IntList;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.Metrics;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.MultiIntValuesHolder;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.PercentileMetrics;\n+import org.apache.skywalking.oap.server.core.remote.grpc.proto.RemoteData;\n+import org.apache.skywalking.oap.server.core.storage.StorageBuilder;\n+import org.apache.skywalking.oap.server.core.storage.annotation.Column;\n+\n+/**\n+ * PercentileFunction is the implementation of {@link PercentileMetrics} in the meter system. The major difference is\n+ * the PercentileFunction accepts the {@link AvgPercentileArgument} as input rather than every single request.\n+ */\n+@MeterFunction(functionName = \"avgPercentile\")\n+@Slf4j\n+public abstract class AvgPercentileFunction extends Metrics implements AcceptableValue<AvgPercentileFunction.AvgPercentileArgument>, MultiIntValuesHolder {\n+    public static final String DATASET = \"dataset\";\n+    public static final String RANKS = \"ranks\";\n+    public static final String VALUE = \"value\";\n+    protected static final String SUMMATION = \"summation\";\n+    protected static final String COUNT = \"count\";\n+\n+    @Setter\n+    @Getter\n+    @Column(columnName = ENTITY_ID)\n+    private String entityId;\n+    @Getter\n+    @Setter\n+    @Column(columnName = VALUE, dataType = Column.ValueDataType.LABELED_VALUE, storageOnly = true)\n+    private DataTable percentileValues = new DataTable(10);\n+    @Getter\n+    @Setter\n+    @Column(columnName = SUMMATION, storageOnly = true)\n+    protected DataTable summation = new DataTable(30);\n+    @Getter\n+    @Setter\n+    @Column(columnName = COUNT, storageOnly = true)\n+    protected DataTable count = new DataTable(30);\n+    @Getter\n+    @Setter\n+    @Column(columnName = DATASET, storageOnly = true)\n+    private DataTable dataset = new DataTable(30);\n+    /**\n+     * Rank\n+     */\n+    @Getter\n+    @Setter\n+    @Column(columnName = RANKS, storageOnly = true)\n+    private IntList ranks = new IntList(10);\n+\n+    private boolean isCalculated = false;\n+\n+    @Override\n+    public void accept(final MeterEntity entity, final AvgPercentileArgument value) {\n+        if (dataset.size() > 0) {\n+            if (!value.getBucketedValues().isCompatible(dataset)) {\n+                throw new IllegalArgumentException(\n+                    \"Incompatible BucketedValues [\" + value + \"] for current PercentileFunction[\" + dataset + \"]\");\n+            }\n+        }\n+\n+        for (final int rank : value.getRanks()) {\n+            if (rank <= 0) {\n+                throw new IllegalArgumentException(\"Illegal rank value \" + rank + \", must be positive\");\n+            }\n+        }\n+\n+        if (ranks.size() > 0) {\n+            if (ranks.size() != value.getRanks().length) {\n+                throw new IllegalArgumentException(\n+                    \"Incompatible ranks size = [\" + value.getRanks().length + \"] for current PercentileFunction[\" + ranks\n+                        .size() + \"]\");\n+            } else {\n+                for (final int rank : value.getRanks()) {\n+                    if (!ranks.include(rank)) {\n+                        throw new IllegalArgumentException(\n+                            \"Rank \" + rank + \" doesn't exist in the previous ranks \" + ranks);\n+                    }\n+                }\n+            }\n+        } else {\n+            for (final int rank : value.getRanks()) {\n+                ranks.add(rank);\n+            }\n+        }\n+\n+        this.entityId = entity.id();\n+\n+        final long[] values = value.getBucketedValues().getValues();\n+        for (int i = 0; i < values.length; i++) {\n+            String bucketName = String.valueOf(value.getBucketedValues().getBuckets()[i]);\n+            summation.valueAccumulation(bucketName, values[i]);\n+            count.valueAccumulation(bucketName, 1L);\n+        }\n+\n+        this.isCalculated = false;\n+    }\n+\n+    @Override\n+    public void combine(final Metrics metrics) {\n+        AvgPercentileFunction percentile = (AvgPercentileFunction) metrics;\n+\n+        if (!summation.keysEqual(percentile.getSummation())) {\n+            log.warn(\"Incompatible input [{}}] for current PercentileFunction[{}], entity {}\",\n+                     percentile, this, entityId\n+            );\n+            return;\n+        }\n+        if (ranks.size() > 0) {\n+            if (this.ranks.size() != ranks.size()) {\n+                log.warn(\"Incompatible ranks size = [{}}] for current PercentileFunction[{}]\",\n+                         ranks.size(), this.ranks.size()\n+                );\n+                return;\n+            } else {\n+                if (!this.ranks.equals(percentile.getRanks())) {\n+                    log.warn(\"Rank {} doesn't exist in the previous ranks {}\", percentile.getRanks(), ranks);\n+                    return;\n+                }\n+            }\n+        }\n+\n+        this.summation.append(percentile.summation);\n+        this.count.append(percentile.count);\n+\n+        this.isCalculated = false;\n+    }\n+\n+    @Override\n+    public void calculate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969b4ca36deac3dec625f6f884087c2c79a83b78"}, "originalPosition": 163}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8eedea9be0155fd758d01a733c4ad1c4eff8ae0", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/b8eedea9be0155fd758d01a733c4ad1c4eff8ae0", "committedDate": "2020-06-01T15:47:02Z", "message": "Polish cont'd\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "351ee221fb4f71944055cb21f2262e942dfe57c6", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/351ee221fb4f71944055cb21f2262e942dfe57c6", "committedDate": "2020-06-01T15:50:46Z", "message": "Merge branch 'master' into meter/prometheus"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjYxNzQ1", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-422261745", "createdAt": "2020-06-02T00:15:21Z", "commit": {"oid": "351ee221fb4f71944055cb21f2262e942dfe57c6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMDoxNToyMVrOGdeC3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMDoyNDoyMFrOGdeLyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1NDE0MA==", "bodyText": "I think this function, including AvgPercentile, is a quite Prometheus style. Should we consider to move this into the Prometheus fetcher only? Seems more reasonable to me.", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433554140", "createdAt": "2020-06-02T00:15:21Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/meter/function/AvgHistogramFunction.java", "diffHunk": "@@ -0,0 +1,219 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.analysis.meter.function;\n+\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.core.Const;\n+import org.apache.skywalking.oap.server.core.UnexpectedException;\n+import org.apache.skywalking.oap.server.core.analysis.meter.MeterEntity;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.DataTable;\n+import org.apache.skywalking.oap.server.core.analysis.metrics.Metrics;\n+import org.apache.skywalking.oap.server.core.remote.grpc.proto.RemoteData;\n+import org.apache.skywalking.oap.server.core.storage.StorageBuilder;\n+import org.apache.skywalking.oap.server.core.storage.annotation.Column;\n+\n+/**\n+ * AvgHistogram intends to aggregate raw values over the interval (minute, hour or day). When users query a value\n+ * from such a interval, an average over it will be sent back.\n+ *\n+ * The acceptable bucket value should be a result from one of \"increase\", \"rate\" and \"irate\" query functions.\n+ * That means the value is the increase or per-second instant rate of increase in a specific range.\n+ *\n+ * Example:\n+ * \"persistence_timer_bulk_execute_latency\" is histogram, the possible PromQL format of acceptable bucket value should be:\n+ * \"increase(persistence_timer_bulk_execute_latency{service=\"oap-server\", instance=\"localhost:1234\"}[5m])\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "351ee221fb4f71944055cb21f2262e942dfe57c6"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1NjQyNg==", "bodyText": "What is the app label used in the codes? Do we have a filterable name?(In the UI perspective) If not, I think we should consider to rename it.", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r433556426", "createdAt": "2020-06-02T00:24:20Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/fetcher-prom-rules/self.yaml", "diffHunk": "@@ -0,0 +1,170 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# This will parse a textual representation of a duration. The formats\n+# accepted are based on the ISO-8601 duration format {@code PnDTnHnMn.nS}\n+# with days considered to be exactly 24 hours.\n+# <p>\n+# Examples:\n+# <pre>\n+#    \"PT20.345S\" -- parses as \"20.345 seconds\"\n+#    \"PT15M\"     -- parses as \"15 minutes\" (where a minute is 60 seconds)\n+#    \"PT10H\"     -- parses as \"10 hours\" (where an hour is 3600 seconds)\n+#    \"P2D\"       -- parses as \"2 days\" (where a day is 24 hours or 86400 seconds)\n+#    \"P2DT3H4M\"  -- parses as \"2 days, 3 hours and 4 minutes\"\n+#    \"P-6H3M\"    -- parses as \"-6 hours and +3 minutes\"\n+#    \"-P6H3M\"    -- parses as \"-6 hours and -3 minutes\"\n+#    \"-P-6H+3M\"  -- parses as \"+6 hours and -3 minutes\"\n+# </pre>\n+fetcherInterval: PT15S\n+fetcherTimeout: PT10S\n+metricsPath: /metrics\n+staticConfig:\n+  # targets will be labeled as \"instance\"\n+  targets:\n+    - localhost:1234\n+  labels:\n+    app: oap-server\n+metricsRules:\n+  - name: instance_cpu_percentage\n+    scope: SERVICE_INSTANCE\n+    operation: avg\n+    sources:\n+      process_cpu_seconds_total:\n+        counterFunction: RATE\n+        range: PT1M\n+        scale: 2\n+        relabel:\n+          service:\n+            - app", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "351ee221fb4f71944055cb21f2262e942dfe57c6"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "655af5b01553e3cac7e34b1886854419bc8f8a01", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/655af5b01553e3cac7e34b1886854419bc8f8a01", "committedDate": "2020-06-05T00:24:51Z", "message": "Merge branch 'master' into meter/prometheus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f650cbf226d9610e3a9ec81914751584318f2907", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/f650cbf226d9610e3a9ec81914751584318f2907", "committedDate": "2020-06-05T07:13:10Z", "message": "Document prometheus fetcher and some nists\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "402bb152d60ee59d818c9006c0ec7a543e759df4", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/402bb152d60ee59d818c9006c0ec7a543e759df4", "committedDate": "2020-06-05T07:13:53Z", "message": "Merge branch 'master' into meter/prometheus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed701c15ce02767501caf342c2ca03bfd0a2a20b", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/ed701c15ce02767501caf342c2ca03bfd0a2a20b", "committedDate": "2020-06-05T07:14:20Z", "message": "Merge branch 'meter/prometheus' of github.com:apache/skywalking into meter/prometheus"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Mjk0MDk3", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-425294097", "createdAt": "2020-06-05T13:23:52Z", "commit": {"oid": "ed701c15ce02767501caf342c2ca03bfd0a2a20b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzoyMzo1MlrOGfuTMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzoyMzo1MlrOGfuTMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkxNzYxOQ==", "bodyText": "This is standard Notice of ASF. As we are both belong to the foundation. We don't need this", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r435917619", "createdAt": "2020-06-05T13:23:52Z", "author": {"login": "wu-sheng"}, "path": "dist-material/release-docs/NOTICE", "diffHunk": "@@ -914,4 +914,15 @@ MessagePackage Notice\n This product includes the software developed by third-party:\n \n  * Google Guava https://code.google.com/p/guava-libraries/  (APL2)\n- * sbt-extras: https://github.com/paulp/sbt-extras  (BSD)  (LICENSE.sbt-extras.txt)\n\\ No newline at end of file\n+ * sbt-extras: https://github.com/paulp/sbt-extras  (BSD)  (LICENSE.sbt-extras.txt)\n+\n+========================================================================", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed701c15ce02767501caf342c2ca03bfd0a2a20b"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Mjk2MzE3", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-425296317", "createdAt": "2020-06-05T13:26:36Z", "commit": {"oid": "ed701c15ce02767501caf342c2ca03bfd0a2a20b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzoyNjozNlrOGfuZoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzoyNjozNlrOGfuZoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkxOTI2NA==", "bodyText": "Why need this? Seem strange", "url": "https://github.com/apache/skywalking/pull/4783#discussion_r435919264", "createdAt": "2020-06-05T13:26:36Z", "author": {"login": "wu-sheng"}, "path": "pom.xml", "diffHunk": "@@ -492,6 +492,7 @@\n                         <exclude>**/*.pem</exclude>\n \n                         <exclude>.m2/**</exclude>\n+                        <exclude>~/.m2/**</exclude>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed701c15ce02767501caf342c2ca03bfd0a2a20b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Mjk5MjM1", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-425299235", "createdAt": "2020-06-05T13:29:56Z", "commit": {"oid": "ed701c15ce02767501caf342c2ca03bfd0a2a20b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6af1bc3a995bf1e4abe31028efda6370778dccd7", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/6af1bc3a995bf1e4abe31028efda6370778dccd7", "committedDate": "2020-06-05T14:23:33Z", "message": "Merge branch 'master' into meter/prometheus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5c460dc1c6d801fb8afaae957b798050b0aa391", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/f5c460dc1c6d801fb8afaae957b798050b0aa391", "committedDate": "2020-06-05T14:24:11Z", "message": "Remove redundant notices.\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3473ec7c42425e91dc9a749b2ab6f7859d53b2", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/ca3473ec7c42425e91dc9a749b2ab6f7859d53b2", "committedDate": "2020-06-07T08:55:02Z", "message": "Merge branch 'master' into meter/prometheus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d82b588bf6742b72866eb52661aafde1ef0688a8", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/d82b588bf6742b72866eb52661aafde1ef0688a8", "committedDate": "2020-06-07T09:01:11Z", "message": "Cleanup codes\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c2ee51b05bc236d518439132a379c377c8c8961", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/5c2ee51b05bc236d518439132a379c377c8c8961", "committedDate": "2020-06-07T16:27:16Z", "message": "Fixed oap can't list rule files\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "715d171ed543abdb69f7e8cea8c17d206bad1c67", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/715d171ed543abdb69f7e8cea8c17d206bad1c67", "committedDate": "2020-06-07T16:47:31Z", "message": "Merge branch 'master' into meter/prometheus"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODcyNzI3", "url": "https://github.com/apache/skywalking/pull/4783#pullrequestreview-425872727", "createdAt": "2020-06-08T01:19:08Z", "commit": {"oid": "715d171ed543abdb69f7e8cea8c17d206bad1c67"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2171, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}