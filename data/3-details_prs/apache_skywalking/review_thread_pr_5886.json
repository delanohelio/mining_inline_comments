{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MTMzOTQ4", "number": 5886, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNlQxMzowOToxMFrOGW562A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNlQxMzowOTo1M1rOGW578g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDI2NjcwODA4OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNlQxMzowOToxMFrOKAJTwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNlQxMzowOToxMFrOKAJTwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTI0MTE1Mw==", "bodyText": "What does pathPattern.matches(exchange.getRequest().getPath().pathWithinApplication()) mean? Could you add comments about this?", "url": "https://github.com/apache/skywalking/pull/5886#discussion_r671241153", "createdAt": "2021-07-16T13:09:10Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java", "diffHunk": "@@ -77,13 +77,14 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         exchange.getAttributes().put(\"SKYWALING_SPAN\", span);\n     }\n     \n-    private void setPattern(AbstractSpan span, ServerWebExchange exchange) {\n+    private void maybeSetPattern(AbstractSpan span, ServerWebExchange exchange) {\n         if (span != null) {\n-            Object pathPattern = exchange.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE);\n-            if (pathPattern != null) {\n-                span.setOperationName(((PathPattern) pathPattern).getPatternString());\n+            PathPattern pathPattern = exchange.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE);\n+            if (pathPattern != null && pathPattern.matches(exchange.getRequest().getPath().pathWithinApplication())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fac51ccf23ffcd981bb2ac3d8a83a9671fa51f2"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDI2NjcxMDkwOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xNlQxMzowOTo1M1rOKAJVZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xN1QwODoyMDo1NVrOKAhz5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTI0MTU3NA==", "bodyText": "Is this the right format? I am feeling not. Could you confirm? Rather than waste CI resources.", "url": "https://github.com/apache/skywalking/pull/5886#discussion_r671241574", "createdAt": "2021-07-16T13:09:53Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java", "diffHunk": "@@ -93,14 +94,11 @@ public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allA\n \n         AbstractSpan span = (AbstractSpan) exchange.getAttributes().get(\"SKYWALING_SPAN\");\n         \n-        return ((Mono) ret).flatMap(s -> {\n-                    setPattern(span, exchange);\n-                    return s;\n-                 })\n-                .doOnError(s -> setPattern(span, exchange))\n+                return ((Mono) ret)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fac51ccf23ffcd981bb2ac3d8a83a9671fa51f2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTY0MjU5Nw==", "bodyText": "slightly changed code style so to doesn't looks weird now\u3002", "url": "https://github.com/apache/skywalking/pull/5886#discussion_r671642597", "createdAt": "2021-07-17T08:20:55Z", "author": {"login": "yujiaxinlong"}, "path": "apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java", "diffHunk": "@@ -93,14 +94,11 @@ public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allA\n \n         AbstractSpan span = (AbstractSpan) exchange.getAttributes().get(\"SKYWALING_SPAN\");\n         \n-        return ((Mono) ret).flatMap(s -> {\n-                    setPattern(span, exchange);\n-                    return s;\n-                 })\n-                .doOnError(s -> setPattern(span, exchange))\n+                return ((Mono) ret)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTI0MTU3NA=="}, "originalCommit": {"oid": "9fac51ccf23ffcd981bb2ac3d8a83a9671fa51f2"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4610, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}