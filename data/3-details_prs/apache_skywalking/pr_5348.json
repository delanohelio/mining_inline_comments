{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MzE4NzE5", "number": 5348, "title": "support http header tag", "bodyText": "Please answer these questions before submitting a pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix #5329\n\n\nRelated issues\n#5329 suport show http header with tag", "createdAt": "2020-08-18T09:11:35Z", "url": "https://github.com/apache/skywalking/pull/5348", "merged": true, "mergeCommit": {"oid": "79c1c0cc76718df45e50dd68f14d7b8eee098a26"}, "closed": true, "closedAt": "2020-08-20T02:43:29Z", "author": {"login": "xbkaishui"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdACg-oAH2gAyNDY5MzE4NzE5OmE2MGFmNjcyOTZjNjVmM2U2Y2RjMDg4YzBiYzYxMWU4ODJkNzdmNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAm_qjAFqTQ3MTA4OTUzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a60af67296c65f3e6cdc088c0bc611e882d77f67", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/a60af67296c65f3e6cdc088c0bc611e882d77f67", "committedDate": "2020-08-18T08:13:04Z", "message": "support http header tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "662c6e439599eeb2880ae6b30c03597b60e59480", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/662c6e439599eeb2880ae6b30c03597b60e59480", "committedDate": "2020-08-18T09:01:36Z", "message": "fix bug guava maps not found"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MTQ0MzEy", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-469144312", "createdAt": "2020-08-18T09:18:53Z", "commit": {"oid": "a60af67296c65f3e6cdc088c0bc611e882d77f67"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToxODo1M1rOHCK72g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOToyMDo0NVrOHCLANA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzODM2Mg==", "bodyText": "Use include, rather than exclude.", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472038362", "createdAt": "2020-08-18T09:18:53Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/SpringMVCPluginConfig.java", "diffHunk": "@@ -35,16 +38,35 @@\n              * request.\n              */\n             public static boolean COLLECT_HTTP_PARAMS = false;\n+\n+            /**\n+             * This config item controls that whether the SpringMVC plugin should collect the headers of the\n+             * request.\n+             */\n+            public static boolean COLLECT_HTTP_HEADERS = false;\n         }\n \n         @PluginConfig(root = SpringMVCPluginConfig.class)\n         public static class Http {\n             /**\n              * When either {@link Plugin.SpringMVC#COLLECT_HTTP_PARAMS} is enabled, how many characters to keep and send\n              * to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is\n-             * added for the sake of performance\n+             * add for the sake of performance\n              */\n             public static int HTTP_PARAMS_LENGTH_THRESHOLD = 1024;\n+\n+            /**\n+             * When either {@link Plugin.SpringMVC#COLLECT_HTTP_HEADERS} is enabled, how many characters to keep and send\n+             * to the OAP backend, use negative values to keep and send the complete headers, NB. this config item is\n+             * add for the sake of performance\n+             */\n+            public static int HTTP_HEADERS_LENGTH_THRESHOLD = 2048;\n+\n+            /**\n+             * When either {@link Plugin.SpringMVC#COLLECT_HTTP_HEADERS} is enabled, control what header data should not\n+             * collect, this is for security purpose, values must be lowed case\n+             */\n+            public static List<String> EXCLUDE_HTTP_HEADERS = Arrays.asList(\"cookie\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a60af67296c65f3e6cdc088c0bc611e882d77f67"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzOTEzMA==", "bodyText": "Basically, I don't we don't need override=true. Do you have case to write headers more than once?", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472039130", "createdAt": "2020-08-18T09:20:11Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/tag/Tags.java", "diffHunk": "@@ -83,6 +83,8 @@ private Tags() {\n         public static final StringTag PARAMS = new StringTag(11, \"http.params\", true);\n \n         public static final StringTag BODY = new StringTag(13, \"http.body\");\n+\n+        public static final StringTag HEADERS = new StringTag(14, \"http.headers\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a60af67296c65f3e6cdc088c0bc611e882d77f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzOTQ3Ng==", "bodyText": "This should be in Before and clear in the After.", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472039476", "createdAt": "2020-08-18T09:20:45Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-4.x-plugin/src/test/java/org/apache/skywalking/apm/plugin/spring/mvc/v4/RestMappingMethodInterceptorTest.java", "diffHunk": "@@ -300,6 +303,37 @@ public void handleCase() throws Throwable {\n         SpanAssert.assertException(logDataEntities.get(0), RuntimeException.class);\n     }\n \n+    @Test\n+    public void testGetWithRequestHeaderCollected() throws Throwable {\n+        SpringMVCPluginConfig.Plugin.SpringMVC.COLLECT_HTTP_HEADERS = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a60af67296c65f3e6cdc088c0bc611e882d77f67"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/e91b03df3289923879e72fb8f93cbe1e76809b33", "committedDate": "2020-08-18T09:56:34Z", "message": "change as suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5Mzk4MTM5", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-469398139", "createdAt": "2020-08-18T12:28:44Z", "commit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyODo0NVrOHCRHEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjozMDozOFrOHCRLYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzOTUzNg==", "bodyText": "Why modify this", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472139536", "createdAt": "2020-08-18T12:28:45Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/SpringMVCPluginConfig.java", "diffHunk": "@@ -35,16 +37,35 @@\n              * request.\n              */\n             public static boolean COLLECT_HTTP_PARAMS = false;\n+\n+            /**\n+             * This config item controls that whether the SpringMVC plugin should collect the headers of the\n+             * request.\n+             */\n+            public static boolean COLLECT_HTTP_HEADERS = false;\n         }\n \n         @PluginConfig(root = SpringMVCPluginConfig.class)\n         public static class Http {\n             /**\n              * When either {@link Plugin.SpringMVC#COLLECT_HTTP_PARAMS} is enabled, how many characters to keep and send\n              * to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is\n-             * added for the sake of performance\n+             * add for the sake of performance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzOTY5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                         * add for the sake of performance\n          \n          \n            \n                         * added for the sake of performance", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472139699", "createdAt": "2020-08-18T12:29:04Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/SpringMVCPluginConfig.java", "diffHunk": "@@ -35,16 +37,35 @@\n              * request.\n              */\n             public static boolean COLLECT_HTTP_PARAMS = false;\n+\n+            /**\n+             * This config item controls that whether the SpringMVC plugin should collect the headers of the\n+             * request.\n+             */\n+            public static boolean COLLECT_HTTP_HEADERS = false;\n         }\n \n         @PluginConfig(root = SpringMVCPluginConfig.class)\n         public static class Http {\n             /**\n              * When either {@link Plugin.SpringMVC#COLLECT_HTTP_PARAMS} is enabled, how many characters to keep and send\n              * to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is\n-             * added for the sake of performance\n+             * add for the sake of performance\n              */\n             public static int HTTP_PARAMS_LENGTH_THRESHOLD = 1024;\n+\n+            /**\n+             * When either {@link Plugin.SpringMVC#COLLECT_HTTP_HEADERS} is enabled, how many characters to keep and send\n+             * to the OAP backend, use negative values to keep and send the complete headers, NB. this config item is\n+             * add for the sake of performance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0MDY0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        /**\n          \n          \n            \n                         * When either {@link Plugin.SpringMVC#COLLECT_HTTP_HEADERS} is enabled, control what header data should be\n          \n          \n            \n                         * collect, this is for security purpose, values must be lowed case\n          \n          \n            \n                         */\n          \n          \n            \n                        /**\n          \n          \n            \n                         * When {@link Plugin.SpringMVC#COLLECT_HTTP_HEADERS} is enabled, it controls what header data should be\n          \n          \n            \n                         * collected, this is for security purpose, values must be lower case\n          \n          \n            \n                         */", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472140641", "createdAt": "2020-08-18T12:30:38Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/SpringMVCPluginConfig.java", "diffHunk": "@@ -35,16 +37,35 @@\n              * request.\n              */\n             public static boolean COLLECT_HTTP_PARAMS = false;\n+\n+            /**\n+             * This config item controls that whether the SpringMVC plugin should collect the headers of the\n+             * request.\n+             */\n+            public static boolean COLLECT_HTTP_HEADERS = false;\n         }\n \n         @PluginConfig(root = SpringMVCPluginConfig.class)\n         public static class Http {\n             /**\n              * When either {@link Plugin.SpringMVC#COLLECT_HTTP_PARAMS} is enabled, how many characters to keep and send\n              * to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is\n-             * added for the sake of performance\n+             * add for the sake of performance\n              */\n             public static int HTTP_PARAMS_LENGTH_THRESHOLD = 1024;\n+\n+            /**\n+             * When either {@link Plugin.SpringMVC#COLLECT_HTTP_HEADERS} is enabled, how many characters to keep and send\n+             * to the OAP backend, use negative values to keep and send the complete headers, NB. this config item is\n+             * add for the sake of performance\n+             */\n+            public static int HTTP_HEADERS_LENGTH_THRESHOLD = 2048;\n+\n+            /**\n+             * When either {@link Plugin.SpringMVC#COLLECT_HTTP_HEADERS} is enabled, control what header data should be\n+             * collect, this is for security purpose, values must be lowed case\n+             */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NDExMDYy", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-469411062", "createdAt": "2020-08-18T12:35:35Z", "commit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjozNTozNVrOHCRYlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjo0MDoxNlrOHCRq3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0NDAyMw==", "bodyText": "COLLECT_HTTP_PARAMS <- copy/paste issue.", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472144023", "createdAt": "2020-08-18T12:35:35Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -132,6 +132,9 @@ property key | Description | Default |\n `plugin.tomcat.collect_http_params`| This config item controls that whether the Tomcat plugin should collect the parameters of the request. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.springmvc.collect_http_params`| This config item controls that whether the SpringMVC plugin should collect the parameters of the request, when your Spring application is based on Tomcat, consider only setting either `plugin.tomcat.collect_http_params` or `plugin.springmvc.collect_http_params`. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.http.http_params_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is added for the sake of performance.  | `1024` |\n+`plugin.springmvc.collect_http_headers`| This config item controls that whether the SpringMVC plugin should collect the headers of the request, activate implicitly in the profiled trace. | `false` |\n+`plugin.http.http_headers_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete headers, NB. this config item is added for the sake of performance.  | `1024` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0NDUzMg==", "bodyText": "This is not necessary. header collecting should work once the include_http_headers not empty.", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472144532", "createdAt": "2020-08-18T12:36:06Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -132,6 +132,9 @@ property key | Description | Default |\n `plugin.tomcat.collect_http_params`| This config item controls that whether the Tomcat plugin should collect the parameters of the request. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.springmvc.collect_http_params`| This config item controls that whether the SpringMVC plugin should collect the parameters of the request, when your Spring application is based on Tomcat, consider only setting either `plugin.tomcat.collect_http_params` or `plugin.springmvc.collect_http_params`. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.http.http_params_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is added for the sake of performance.  | `1024` |\n+`plugin.springmvc.collect_http_headers`| This config item controls that whether the SpringMVC plugin should collect the headers of the request, activate implicitly in the profiled trace. | `false` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0NTExNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `plugin.springmvc.collect_http_headers`| This config item controls that whether the SpringMVC plugin should collect the headers of the request, activate implicitly in the profiled trace. | `false` |", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472145116", "createdAt": "2020-08-18T12:36:41Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -132,6 +132,9 @@ property key | Description | Default |\n `plugin.tomcat.collect_http_params`| This config item controls that whether the Tomcat plugin should collect the parameters of the request. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.springmvc.collect_http_params`| This config item controls that whether the SpringMVC plugin should collect the parameters of the request, when your Spring application is based on Tomcat, consider only setting either `plugin.tomcat.collect_http_params` or `plugin.springmvc.collect_http_params`. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.http.http_params_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is added for the sake of performance.  | `1024` |\n+`plugin.springmvc.collect_http_headers`| This config item controls that whether the SpringMVC plugin should collect the headers of the request, activate implicitly in the profiled trace. | `false` |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0NDUzMg=="}, "originalCommit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0NzAxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `plugin.http.http_headers_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete headers, NB. this config item is added for the sake of performance.  | `1024` |\n          \n          \n            \n            `plugin.http.http_headers_length_threshold`| When `include_http_headers` declares header names, this threshold controls the length limitation of all header values. Note. this config item is added for the sake of performance.  | `1024` |", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472147013", "createdAt": "2020-08-18T12:38:35Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -132,6 +132,9 @@ property key | Description | Default |\n `plugin.tomcat.collect_http_params`| This config item controls that whether the Tomcat plugin should collect the parameters of the request. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.springmvc.collect_http_params`| This config item controls that whether the SpringMVC plugin should collect the parameters of the request, when your Spring application is based on Tomcat, consider only setting either `plugin.tomcat.collect_http_params` or `plugin.springmvc.collect_http_params`. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.http.http_params_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is added for the sake of performance.  | `1024` |\n+`plugin.springmvc.collect_http_headers`| This config item controls that whether the SpringMVC plugin should collect the headers of the request, activate implicitly in the profiled trace. | `false` |\n+`plugin.http.http_headers_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete headers, NB. this config item is added for the sake of performance.  | `1024` |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0NDAyMw=="}, "originalCommit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0ODcwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `plugin.http.include_http_headers`| When `COLLECT_HTTP_PARAMS` is enabled, control what header data should collect, this is for security purpose, values must be lowed case,multi values split by ,  | `` |\n          \n          \n            \n            `plugin.http.include_http_headers`| Set the header names, which should be collected by the plugin. Header name must follow `javax.servlet.http` definition. Multiple names should be split by comma.  | ``(No header would be collected) |", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472148701", "createdAt": "2020-08-18T12:40:16Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -132,6 +132,9 @@ property key | Description | Default |\n `plugin.tomcat.collect_http_params`| This config item controls that whether the Tomcat plugin should collect the parameters of the request. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.springmvc.collect_http_params`| This config item controls that whether the SpringMVC plugin should collect the parameters of the request, when your Spring application is based on Tomcat, consider only setting either `plugin.tomcat.collect_http_params` or `plugin.springmvc.collect_http_params`. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.http.http_params_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is added for the sake of performance.  | `1024` |\n+`plugin.springmvc.collect_http_headers`| This config item controls that whether the SpringMVC plugin should collect the headers of the request, activate implicitly in the profiled trace. | `false` |\n+`plugin.http.http_headers_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete headers, NB. this config item is added for the sake of performance.  | `1024` |\n+`plugin.http.include_http_headers`| When `COLLECT_HTTP_PARAMS` is enabled, control what header data should collect, this is for security purpose, values must be lowed case,multi values split by ,  | `` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e91b03df3289923879e72fb8f93cbe1e76809b33"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5334cb5a9ed1a30ab723b18fcd4b6f8b4a3bc7a3", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/5334cb5a9ed1a30ab723b18fcd4b6f8b4a3bc7a3", "committedDate": "2020-08-18T15:19:07Z", "message": "change typo as suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NTgyODI2", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-469582826", "createdAt": "2020-08-18T15:41:07Z", "commit": {"oid": "5334cb5a9ed1a30ab723b18fcd4b6f8b4a3bc7a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo0MTowN1rOHCaieg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo0MTowN1rOHCaieg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI5NDAxMA==", "bodyText": "Please use the Array list rather than Map. The map is a heavy data structure, it costs more CPU, memory, and has more chances to trigger GC", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r472294010", "createdAt": "2020-08-18T15:41:07Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java", "diffHunk": "@@ -208,4 +221,31 @@ private void collectHttpParam(HttpServletRequest request, AbstractSpan span) {\n             Tags.HTTP.PARAMS.set(span, tagValue);\n         }\n     }\n+\n+    private boolean shouldCollectHeader() {\n+        List<String> includeHeaders = SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS;\n+        return includeHeaders != null && includeHeaders.size() > 0 ;\n+    }\n+\n+    private void collectHttpHeaders(HttpServletRequest request, AbstractSpan span) {\n+        final Enumeration<String> headerNames =  request.getHeaderNames();\n+        if (headerNames == null) {\n+            return;\n+        }\n+        final Map<String, String[]> headersMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5334cb5a9ed1a30ab723b18fcd4b6f8b4a3bc7a3"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb287996a84689dd31ca0eaf3e40972ac4ad4a32", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/cb287996a84689dd31ca0eaf3e40972ac4ad4a32", "committedDate": "2020-08-18T23:33:55Z", "message": "fix bug null pointer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83a046b3183ea13492a98b4fbb8b1ee2c2e41f43", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/83a046b3183ea13492a98b4fbb8b1ee2c2e41f43", "committedDate": "2020-08-18T23:50:44Z", "message": "refactor change map to list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5OTA0NDI5", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-469904429", "createdAt": "2020-08-18T23:51:19Z", "commit": {"oid": "83a046b3183ea13492a98b4fbb8b1ee2c2e41f43"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b07813ea1d305ee97dd07880eef92367f3d823c", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/1b07813ea1d305ee97dd07880eef92367f3d823c", "committedDate": "2020-08-19T05:14:20Z", "message": "enhance spring plugin test and include collect http header test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e1449b0f532e75d7e08254b3a9759daba3012eb", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/5e1449b0f532e75d7e08254b3a9759daba3012eb", "committedDate": "2020-08-19T05:27:44Z", "message": "fix bug yaml not validate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d11df4fde3b08537542bae0850e94a6a4bdf745", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/7d11df4fde3b08537542bae0850e94a6a4bdf745", "committedDate": "2020-08-19T07:25:41Z", "message": "fix test case error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e206afd15b3536bf13d9d7e3aa78d187fb90cdcb", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/e206afd15b3536bf13d9d7e3aa78d187fb90cdcb", "committedDate": "2020-08-19T13:07:10Z", "message": "fix test case error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd039069ba03d6559e5451f52f458f61a42683c", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/8cd039069ba03d6559e5451f52f458f61a42683c", "committedDate": "2020-08-19T14:16:58Z", "message": "Merge branch 'master' into 20200818-support-http-headers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNTI2MDQ2", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-470526046", "createdAt": "2020-08-19T14:38:43Z", "commit": {"oid": "8cd039069ba03d6559e5451f52f458f61a42683c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDozODo0M1rOHDKkIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDozODo0M1rOHDKkIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA4MDg2NQ==", "bodyText": "There is CollectionUtil#isEmpty, you should use directly.", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r473080865", "createdAt": "2020-08-19T14:38:43Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java", "diffHunk": "@@ -208,4 +222,31 @@ private void collectHttpParam(HttpServletRequest request, AbstractSpan span) {\n             Tags.HTTP.PARAMS.set(span, tagValue);\n         }\n     }\n+\n+    private boolean shouldCollectHeader() {\n+        List<String> includeHeaders = SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS;\n+        return includeHeaders != null && includeHeaders.size() > 0 ;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd039069ba03d6559e5451f52f458f61a42683c"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNTI3Mzcy", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-470527372", "createdAt": "2020-08-19T14:40:06Z", "commit": {"oid": "8cd039069ba03d6559e5451f52f458f61a42683c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDo0MDowNlrOHDKoHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDo0MDowNlrOHDKoHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA4MTg4NA==", "bodyText": "SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS not empty should be at the first line of the method, to provide return fast.", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r473081884", "createdAt": "2020-08-19T14:40:06Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java", "diffHunk": "@@ -208,4 +222,31 @@ private void collectHttpParam(HttpServletRequest request, AbstractSpan span) {\n             Tags.HTTP.PARAMS.set(span, tagValue);\n         }\n     }\n+\n+    private boolean shouldCollectHeader() {\n+        List<String> includeHeaders = SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS;\n+        return includeHeaders != null && includeHeaders.size() > 0 ;\n+    }\n+\n+    private void collectHttpHeaders(HttpServletRequest request, AbstractSpan span) {\n+        final Enumeration<String> headerNames =  request.getHeaderNames();\n+        if (headerNames == null) {\n+            return;\n+        }\n+        final List<String> headersList = new LinkedList<>();\n+        Collections.list(headerNames).stream().forEach(headerName -> {\n+            Enumeration<String> headerValues = request.getHeaders(headerName);\n+            String headerValue = Collections.list(headerValues).toString();\n+            if (shouldCollectHeader() && SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS.contains(headerName.toLowerCase())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd039069ba03d6559e5451f52f458f61a42683c"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNTI4NTgz", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-470528583", "createdAt": "2020-08-19T14:41:21Z", "commit": {"oid": "8cd039069ba03d6559e5451f52f458f61a42683c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDo0MToyMVrOHDKrtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDo0MToyMVrOHDKrtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA4MjgwNg==", "bodyText": "The whole iteration should base on SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS rather than header, because you just config a subset of all headers. An HTTP request usually includes a lot of headers.", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r473082806", "createdAt": "2020-08-19T14:41:21Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java", "diffHunk": "@@ -208,4 +222,31 @@ private void collectHttpParam(HttpServletRequest request, AbstractSpan span) {\n             Tags.HTTP.PARAMS.set(span, tagValue);\n         }\n     }\n+\n+    private boolean shouldCollectHeader() {\n+        List<String> includeHeaders = SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS;\n+        return includeHeaders != null && includeHeaders.size() > 0 ;\n+    }\n+\n+    private void collectHttpHeaders(HttpServletRequest request, AbstractSpan span) {\n+        final Enumeration<String> headerNames =  request.getHeaderNames();\n+        if (headerNames == null) {\n+            return;\n+        }\n+        final List<String> headersList = new LinkedList<>();\n+        Collections.list(headerNames).stream().forEach(headerName -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd039069ba03d6559e5451f52f458f61a42683c"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81e6633df042ad69b498af0f2f13722e5426275d", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/81e6633df042ad69b498af0f2f13722e5426275d", "committedDate": "2020-08-19T15:04:57Z", "message": "change collect http header logic as suggestion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a3524173b5b49b32eea60b58b94df85e5885222", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/2a3524173b5b49b32eea60b58b94df85e5885222", "committedDate": "2020-08-19T15:06:05Z", "message": "fix test case bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9daba3e7f9ebfa70a325b4fe7553eb372ac0a740", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/9daba3e7f9ebfa70a325b4fe7553eb372ac0a740", "committedDate": "2020-08-19T15:06:41Z", "message": "Merge branch '20200818-support-http-headers' of https://hub.fastgit.org/xbkaishui/skywalking into 20200818-support-http-headers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNTgyMTY3", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-470582167", "createdAt": "2020-08-19T15:36:53Z", "commit": {"oid": "9daba3e7f9ebfa70a325b4fe7553eb372ac0a740"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNTozNjo1M1rOHDNJPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNTo0OTozNlrOHDNrkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzEyMzEzMg==", "bodyText": "Why assign again?", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r473123132", "createdAt": "2020-08-19T15:36:53Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java", "diffHunk": "@@ -208,4 +218,32 @@ private void collectHttpParam(HttpServletRequest request, AbstractSpan span) {\n             Tags.HTTP.PARAMS.set(span, tagValue);\n         }\n     }\n+\n+    private boolean shouldCollectHeader() {\n+        List<String> includeHeaders = SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9daba3e7f9ebfa70a325b4fe7553eb372ac0a740"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzEyNzI1MQ==", "bodyText": "I mean check SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS, because, you were trying to collect header in profiling, which has been removed.\nI think headerNames can't be null, right?", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r473127251", "createdAt": "2020-08-19T15:42:56Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java", "diffHunk": "@@ -208,4 +218,32 @@ private void collectHttpParam(HttpServletRequest request, AbstractSpan span) {\n             Tags.HTTP.PARAMS.set(span, tagValue);\n         }\n     }\n+\n+    private boolean shouldCollectHeader() {\n+        List<String> includeHeaders = SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS;\n+        return !CollectionUtil.isEmpty(includeHeaders) ;\n+    }\n+\n+    private void collectHttpHeaders(HttpServletRequest request, AbstractSpan span) {\n+        final Enumeration<String> headerNames =  request.getHeaderNames();\n+        if (headerNames == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9daba3e7f9ebfa70a325b4fe7553eb372ac0a740"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzEyNzkzOQ==", "bodyText": "SpringMVCPluginConfig.Plugin.Http.HTTP_HEADERS_LENGTH_THRESHOLD > 0, according to the comments, if the value < 0, then collect all, I don't find the codes.", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r473127939", "createdAt": "2020-08-19T15:43:53Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java", "diffHunk": "@@ -208,4 +218,32 @@ private void collectHttpParam(HttpServletRequest request, AbstractSpan span) {\n             Tags.HTTP.PARAMS.set(span, tagValue);\n         }\n     }\n+\n+    private boolean shouldCollectHeader() {\n+        List<String> includeHeaders = SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS;\n+        return !CollectionUtil.isEmpty(includeHeaders) ;\n+    }\n+\n+    private void collectHttpHeaders(HttpServletRequest request, AbstractSpan span) {\n+        final Enumeration<String> headerNames =  request.getHeaderNames();\n+        if (headerNames == null) {\n+            return;\n+        }\n+        final List<String> headersList = new LinkedList<>();\n+        SpringMVCPluginConfig.Plugin.Http.INCLUDE_HTTP_HEADERS.stream().filter(headerName -> request.getHeaders(headerName) != null).forEach(headerName -> {\n+            Enumeration<String> headerValues = request.getHeaders(headerName);\n+            List<String> valueList = Collections.list(headerValues);\n+            if (!CollectionUtil.isEmpty(valueList)) {\n+                String headerValue = valueList.toString();\n+                headersList.add(headerName + \"=\" + headerValue);\n+            }\n+        });\n+\n+        if (!headersList.isEmpty()) {\n+            String tagValue = headersList.stream().collect(Collectors.joining(\"\\n\"));\n+            tagValue = SpringMVCPluginConfig.Plugin.Http.HTTP_HEADERS_LENGTH_THRESHOLD > 0 ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9daba3e7f9ebfa70a325b4fe7553eb372ac0a740"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzEzMTkyMQ==", "bodyText": "This description is not same as the comments. Please recheck.", "url": "https://github.com/apache/skywalking/pull/5348#discussion_r473131921", "createdAt": "2020-08-19T15:49:36Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -132,6 +132,8 @@ property key | Description | Default |\n `plugin.tomcat.collect_http_params`| This config item controls that whether the Tomcat plugin should collect the parameters of the request. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.springmvc.collect_http_params`| This config item controls that whether the SpringMVC plugin should collect the parameters of the request, when your Spring application is based on Tomcat, consider only setting either `plugin.tomcat.collect_http_params` or `plugin.springmvc.collect_http_params`. Also, activate implicitly in the profiled trace. | `false` |\n `plugin.http.http_params_length_threshold`| When `COLLECT_HTTP_PARAMS` is enabled, how many characters to keep and send to the OAP backend, use negative values to keep and send the complete parameters, NB. this config item is added for the sake of performance.  | `1024` |\n+`plugin.http.http_headers_length_threshold`| When `include_http_headers` declares header names, this threshold controls the length limitation of all header values. Note. this config item is added for the sake of performance. | `2048` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9daba3e7f9ebfa70a325b4fe7553eb372ac0a740"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "218b90b787712c621acf3e17df898d01b0007e9d", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/skywalking/commit/218b90b787712c621acf3e17df898d01b0007e9d", "committedDate": "2020-08-20T00:25:37Z", "message": "remove the check null logic and align the comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDUzNTAy", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-471053502", "createdAt": "2020-08-20T00:39:40Z", "commit": {"oid": "218b90b787712c621acf3e17df898d01b0007e9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDg5NTM1", "url": "https://github.com/apache/skywalking/pull/5348#pullrequestreview-471089535", "createdAt": "2020-08-20T02:43:10Z", "commit": {"oid": "218b90b787712c621acf3e17df898d01b0007e9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1918, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}