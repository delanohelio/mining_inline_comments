{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMjY5NTI2", "number": 4322, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjozODozNVrODdUQ4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMzo0Njo0MlrODdjjmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDY3Mjk3OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileTaskExecutionContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjozODozNVrOFl2SLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoxMjo0NFrOFl3MiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIzMTAyMA==", "bodyText": "As using incrementAndGet, <= should be <?", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375231020", "createdAt": "2020-02-05T12:38:35Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileTaskExecutionContext.java", "diffHunk": "@@ -150,7 +150,7 @@ public ProfileTask getTask() {\n \n     public boolean isStartProfileable() {\n         // check is out of max sampling count check\n-        return totalStartedProfilingCount.incrementAndGet() > task.getMaxSamplingCount();\n+        return totalStartedProfilingCount.incrementAndGet() <= task.getMaxSamplingCount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f290673e72724501095e550ed004646402e3b484"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI0NTk2MQ==", "bodyText": "If maxSamplingCount is 2, and totalStartedProfilingCount start with 0.\nUse < to decide isStartProfileable, the second time to incrementAndGet will return false. That's not right.", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375245961", "createdAt": "2020-02-05T13:12:44Z", "author": {"login": "mrproliu"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileTaskExecutionContext.java", "diffHunk": "@@ -150,7 +150,7 @@ public ProfileTask getTask() {\n \n     public boolean isStartProfileable() {\n         // check is out of max sampling count check\n-        return totalStartedProfilingCount.incrementAndGet() > task.getMaxSamplingCount();\n+        return totalStartedProfilingCount.incrementAndGet() <= task.getMaxSamplingCount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIzMTAyMA=="}, "originalCommit": {"oid": "f290673e72724501095e550ed004646402e3b484"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDY5MTc4OnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjo0NToyMlrOFl2dig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjo0NToyMlrOFl2dig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIzMzkzMA==", "bodyText": "Refer to the specific commit id, such as https://github.com/apache/skywalking/tree/421ba88dbfba48cdc5845547381aa4763775b4b1/docs/...\nBecause we don't know whether the doc exists in the master branch.", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375233930", "createdAt": "2020-02-05T12:45:22Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "diffHunk": "@@ -28,7 +28,7 @@\n /**\n  * Analyze {@link ProfileStack} data to {@link ProfileAnalyzation}\n  *\n- * See: https://github.com/apache/skywalking/blob/docs/en/guides/backend-profile.md#thread-analyst\n+ * See:  https://github.com/apache/skywalking/blob/master/docs/en/guides/backend-profile.md#thread-analyst", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f290673e72724501095e550ed004646402e3b484"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDcxMjEwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjo1MjozM1rOFl2pag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjo1MjozM1rOFl2pag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIzNjk3MA==", "bodyText": "I think it is better to use queryProfiledSegments(String taskId) to replace this method and IProfileThreadSnapshotQueryDAO interface. There seems meaningless to add a new interface.", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375236970", "createdAt": "2020-02-05T12:52:33Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java", "diffHunk": "@@ -42,4 +42,12 @@ TraceBrief queryBasicTraces(long startSecondTB, long endSecondTB, long minDurati\n      * @throws IOException\n      */\n     List<Span> doFlexibleTraceQuery(String traceId) throws IOException;\n+\n+    /**\n+     * query trace basic info list from appoint segments\n+     * @param segmentIdList\n+     * @return\n+     * @throws IOException\n+     */\n+    List<BasicTrace> queryBySegmentIdList(List<String> segmentIdList) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f290673e72724501095e550ed004646402e3b484"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDczMjQzOnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjo1OToyOVrOFl21kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjo1OToyOVrOFl21kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI0MDA4MQ==", "bodyText": "return value should be clear, it represents the segments having profile snapshot data.", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375240081", "createdAt": "2020-02-05T12:59:29Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java", "diffHunk": "@@ -42,4 +42,12 @@ TraceBrief queryBasicTraces(long startSecondTB, long endSecondTB, long minDurati\n      * @throws IOException\n      */\n     List<Span> doFlexibleTraceQuery(String traceId) throws IOException;\n+\n+    /**\n+     * query trace basic info list from appoint segments\n+     * @param segmentIdList\n+     * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f290673e72724501095e550ed004646402e3b484"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzE3NTY1OnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMzo0NDoyOVrOFmOfaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMzo0NDoyOVrOFmOfaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNzYyNw==", "bodyText": "What is the difference? Please remove the useless one.", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375627627", "createdAt": "2020-02-06T03:44:29Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java", "diffHunk": "@@ -78,8 +75,8 @@ public void setUp() {\n         //        final String swWebappPort = System.getProperty(\"sw.webapp.port\", \"32783\");\n         final String swWebappPort = System.getProperty(\"sw.webapp.port\", \"12800\");\n         final String instrumentedServiceHost = System.getProperty(\"service.host\", \"127.0.0.1\");\n-        final String instrumentedServicePort = System.getProperty(\"service.port\", \"32782\");\n-        //        final String instrumentedServicePort = System.getProperty(\"service.port\", \"9090\");\n+//        final String instrumentedServicePort = System.getProperty(\"service.port\", \"32782\");\n+        final String instrumentedServicePort = System.getProperty(\"service.port\", \"9090\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b18fb1a36cbecaeab9340216d4dd41ee955200a7"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzE3ODUxOnYy", "diffSide": "LEFT", "path": "test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMzo0Njo0MlrOFmOhDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMzo0Njo0MlrOFmOhDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyODA0NA==", "bodyText": "You should still send traffic and verify service/instance/endpoint, just no metrics of service/instance/endpoint. If no traffic, then there is no trace to be profiled.", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375628044", "createdAt": "2020-02-06T03:46:42Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java", "diffHunk": "@@ -89,28 +86,6 @@ public void setUp() {\n     public void verify() throws Exception {\n         final LocalDateTime minutesAgo = LocalDateTime.now(ZoneOffset.UTC);\n \n-        while (true) {\n-            try {\n-                final ResponseEntity<String> responseEntity = sendRequest(false);\n-                LOGGER.info(\"responseEntity: {}\", responseEntity);\n-                assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.OK);\n-                final List<Trace> traces = profileClient.traces(\n-                        new TracesQuery()\n-                                .start(minutesAgo)\n-                                .end(LocalDateTime.now())\n-                                .orderByDuration()\n-                );\n-                if (!traces.isEmpty()) {\n-                    break;\n-                }\n-                Thread.sleep(10000L);\n-            } catch (Exception ignored) {\n-            }\n-        }\n-\n-        // verify basic info\n-        verifyServices(minutesAgo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b18fb1a36cbecaeab9340216d4dd41ee955200a7"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4558, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}