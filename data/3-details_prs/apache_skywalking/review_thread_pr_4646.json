{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjkzNDQz", "number": 4646, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTozMzo0OVrODxR-rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjowMzozNVrODxSm6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDAxMzkxOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/lua/LuaController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTozMzo0OVrOGEqWuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjowMTozNlrOGErRZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0MTQzNQ==", "bodyText": "correlation can't be tested in the e2e from my perspective.\n\n@wu-sheng maybe here is how @mrproliu he made it possible to test correlation in the E2E, get the correlation context in a service and expose them in an endpoint that can be verified in the test codes?", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407541435", "createdAt": "2020-04-13T15:33:49Z", "author": {"login": "kezhenxu94"}, "path": "test/e2e/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/lua/LuaController.java", "diffHunk": "@@ -36,8 +37,15 @@\n     @PostMapping(\"/nginx/entry/info\")\n     private String nginxEntry(String backend) throws MalformedURLException, URISyntaxException {\n         final URL url = new URL(\"http://nginx:8080/nginx/info\");\n+        TraceContext.putCorrelation(\"entry\", \"entry_value\");\n         final ResponseEntity<String> response = restTemplate.postForEntity(url.toURI(), null, String.class);\n         return response.getBody();\n     }\n \n+    @PostMapping(\"/nginx/end/info\")\n+    private String nginxEnd() throws MalformedURLException, URISyntaxException {\n+        return TraceContext.getCorrelation(\"entry\").orElse(\"\")\n+            + \"_\" + TraceContext.getCorrelation(\"nginx\").orElse(\"\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDQzNA==", "bodyText": "Here my changed, java1 -> Nginx -> java2, java1 and Nginx to put the correlation data, then I get the all correlation data in java2 and return it. So, I make a JUnit to verify the java2 result.", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407554434", "createdAt": "2020-04-13T15:57:55Z", "author": {"login": "mrproliu"}, "path": "test/e2e/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/lua/LuaController.java", "diffHunk": "@@ -36,8 +37,15 @@\n     @PostMapping(\"/nginx/entry/info\")\n     private String nginxEntry(String backend) throws MalformedURLException, URISyntaxException {\n         final URL url = new URL(\"http://nginx:8080/nginx/info\");\n+        TraceContext.putCorrelation(\"entry\", \"entry_value\");\n         final ResponseEntity<String> response = restTemplate.postForEntity(url.toURI(), null, String.class);\n         return response.getBody();\n     }\n \n+    @PostMapping(\"/nginx/end/info\")\n+    private String nginxEnd() throws MalformedURLException, URISyntaxException {\n+        return TraceContext.getCorrelation(\"entry\").orElse(\"\")\n+            + \"_\" + TraceContext.getCorrelation(\"nginx\").orElse(\"\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0MTQzNQ=="}, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NjQ1NA==", "bodyText": "/nginx/end/info is the validated endpoint name, but the response entity wouldn't be tests. Please correct me if I am wrong.", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407556454", "createdAt": "2020-04-13T16:01:36Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-service-provider/src/main/java/org/apache/skywalking/e2e/lua/LuaController.java", "diffHunk": "@@ -36,8 +37,15 @@\n     @PostMapping(\"/nginx/entry/info\")\n     private String nginxEntry(String backend) throws MalformedURLException, URISyntaxException {\n         final URL url = new URL(\"http://nginx:8080/nginx/info\");\n+        TraceContext.putCorrelation(\"entry\", \"entry_value\");\n         final ResponseEntity<String> response = restTemplate.postForEntity(url.toURI(), null, String.class);\n         return response.getBody();\n     }\n \n+    @PostMapping(\"/nginx/end/info\")\n+    private String nginxEnd() throws MalformedURLException, URISyntaxException {\n+        return TraceContext.getCorrelation(\"entry\").orElse(\"\")\n+            + \"_\" + TraceContext.getCorrelation(\"nginx\").orElse(\"\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0MTQzNQ=="}, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDAxNTYxOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/LuaE2E.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTozNDoxNVrOGEqXxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTozNDoxNVrOGEqXxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0MTcwMQ==", "bodyText": "Let's remove the public modifier, Junit 5 doesn't require this", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407541701", "createdAt": "2020-04-13T15:34:15Z", "author": {"login": "kezhenxu94"}, "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/LuaE2E.java", "diffHunk": "@@ -92,14 +95,21 @@\n     public void setUp() throws Exception {\n         queryClient(swWebappHostPort);\n \n-        trafficController(entryProvider, \"/nginx/entry/info?backend=\" + nginxHostPort.host() + \":\" + nginxHostPort.port());\n+        trafficController(entryProvider, \"/nginx/entry/info\");\n     }\n \n     @AfterAll\n     public void tearDown() {\n         trafficController.stop();\n     }\n \n+    @RetryableTest\n+    public void correlation() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDA0NjgxOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-service-provider/pom.xml", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0MzozOVrOGEqqyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjoxOToxMFrOGEr2YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NjU3MA==", "bodyText": "This will be hard to maintain, though I didn't figure out a better way", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407546570", "createdAt": "2020-04-13T15:43:39Z", "author": {"login": "kezhenxu94"}, "path": "test/e2e/e2e-service-provider/pom.xml", "diffHunk": "@@ -44,6 +44,11 @@\n             <artifactId>h2</artifactId>\n             <version>${h2.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-toolkit-trace</artifactId>\n+            <version>8.0.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1MjMwOA==", "bodyText": "Well, it also breaks the CI because we don't have this version when building this service", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407552308", "createdAt": "2020-04-13T15:54:07Z", "author": {"login": "kezhenxu94"}, "path": "test/e2e/e2e-service-provider/pom.xml", "diffHunk": "@@ -44,6 +44,11 @@\n             <artifactId>h2</artifactId>\n             <version>${h2.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-toolkit-trace</artifactId>\n+            <version>8.0.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NjU3MA=="}, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDIzMw==", "bodyText": "This will be hard to maintain, though I didn't figure out a better way\n\nYou don't need this dependency, duplicate the annotation in the test codes, then it will be enhanced by the agent. We did this in the plugin test.", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407554233", "createdAt": "2020-04-13T15:57:33Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-service-provider/pom.xml", "diffHunk": "@@ -44,6 +44,11 @@\n             <artifactId>h2</artifactId>\n             <version>${h2.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-toolkit-trace</artifactId>\n+            <version>8.0.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NjU3MA=="}, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2MjAyMw==", "bodyText": "So @mrproliu you have to copy class org.apache.skywalking.apm.toolkit.trace.TraceContext into e2e folder, and remove this dependency,", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407562023", "createdAt": "2020-04-13T16:11:59Z", "author": {"login": "kezhenxu94"}, "path": "test/e2e/e2e-service-provider/pom.xml", "diffHunk": "@@ -44,6 +44,11 @@\n             <artifactId>h2</artifactId>\n             <version>${h2.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-toolkit-trace</artifactId>\n+            <version>8.0.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NjU3MA=="}, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2NDM2Ng==", "bodyText": "Yes, I have tried on this. But When I copy on this, the IDE will give me an alert, because it also a source directory. Should I need to add the e2e project to a new IDE window?", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407564366", "createdAt": "2020-04-13T16:16:23Z", "author": {"login": "mrproliu"}, "path": "test/e2e/e2e-service-provider/pom.xml", "diffHunk": "@@ -44,6 +44,11 @@\n             <artifactId>h2</artifactId>\n             <version>${h2.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-toolkit-trace</artifactId>\n+            <version>8.0.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NjU3MA=="}, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2NTkyMA==", "bodyText": "Yes, I have tried on this. But When I copy on this, the IDE will give me an alert, because it also a source directory. Should I need to add the e2e project to a new IDE window?\n\n\nCopy the file out of the IDEA, i.e. in the Finder or Terminal, or open the e2e in a separate IDEA window and copy between the two windows (apm and e2e)", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407565920", "createdAt": "2020-04-13T16:19:10Z", "author": {"login": "kezhenxu94"}, "path": "test/e2e/e2e-service-provider/pom.xml", "diffHunk": "@@ -44,6 +44,11 @@\n             <artifactId>h2</artifactId>\n             <version>${h2.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-toolkit-trace</artifactId>\n+            <version>8.0.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NjU3MA=="}, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDA2NjcwOnYy", "diffSide": "LEFT", "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/LuaE2E.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0OToxOVrOGEq2wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0OToxOVrOGEq2wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0OTYzNA==", "bodyText": "Remove the declaration of nginxHostPort (line#89) if you don't need it anymore", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407549634", "createdAt": "2020-04-13T15:49:19Z", "author": {"login": "kezhenxu94"}, "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/LuaE2E.java", "diffHunk": "@@ -92,14 +95,21 @@\n     public void setUp() throws Exception {\n         queryClient(swWebappHostPort);\n \n-        trafficController(entryProvider, \"/nginx/entry/info?backend=\" + nginxHostPort.host() + \":\" + nginxHostPort.port());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDExNjkxOnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/LuaE2E.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjowMzozNVrOGErVaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMDo0MTowNVrOGE6FpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NzQ4Mw==", "bodyText": "@mrproliu Do you mean this check?", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407557483", "createdAt": "2020-04-13T16:03:35Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/LuaE2E.java", "diffHunk": "@@ -92,14 +95,21 @@\n     public void setUp() throws Exception {\n         queryClient(swWebappHostPort);\n \n-        trafficController(entryProvider, \"/nginx/entry/info?backend=\" + nginxHostPort.host() + \":\" + nginxHostPort.port());\n+        trafficController(entryProvider, \"/nginx/entry/info\");\n     }\n \n     @AfterAll\n     public void tearDown() {\n         trafficController.stop();\n     }\n \n+    @RetryableTest\n+    public void correlation() throws Exception {\n+        final URL url = new URL(\"http\", entryProvider.host(), entryProvider.port(), \"/nginx/entry/info\");\n+        final ResponseEntity<String> response = restTemplate.postForEntity(url.toURI(), trafficData, String.class);\n+        Assert.assertEquals(response.getBody(), \"entry_value_nginx_value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1OTA1OA==", "bodyText": "Yes, there will check all the correlation data from java2 response.", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407559058", "createdAt": "2020-04-13T16:06:25Z", "author": {"login": "mrproliu"}, "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/LuaE2E.java", "diffHunk": "@@ -92,14 +95,21 @@\n     public void setUp() throws Exception {\n         queryClient(swWebappHostPort);\n \n-        trafficController(entryProvider, \"/nginx/entry/info?backend=\" + nginxHostPort.host() + \":\" + nginxHostPort.port());\n+        trafficController(entryProvider, \"/nginx/entry/info\");\n     }\n \n     @AfterAll\n     public void tearDown() {\n         trafficController.stop();\n     }\n \n+    @RetryableTest\n+    public void correlation() throws Exception {\n+        final URL url = new URL(\"http\", entryProvider.host(), entryProvider.port(), \"/nginx/entry/info\");\n+        final ResponseEntity<String> response = restTemplate.postForEntity(url.toURI(), trafficData, String.class);\n+        Assert.assertEquals(response.getBody(), \"entry_value_nginx_value\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NzQ4Mw=="}, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc5OTIwNA==", "bodyText": "So, once the propagation fails, this e2e will fail directly. Got it.", "url": "https://github.com/apache/skywalking/pull/4646#discussion_r407799204", "createdAt": "2020-04-14T00:41:05Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/LuaE2E.java", "diffHunk": "@@ -92,14 +95,21 @@\n     public void setUp() throws Exception {\n         queryClient(swWebappHostPort);\n \n-        trafficController(entryProvider, \"/nginx/entry/info?backend=\" + nginxHostPort.host() + \":\" + nginxHostPort.port());\n+        trafficController(entryProvider, \"/nginx/entry/info\");\n     }\n \n     @AfterAll\n     public void tearDown() {\n         trafficController.stop();\n     }\n \n+    @RetryableTest\n+    public void correlation() throws Exception {\n+        final URL url = new URL(\"http\", entryProvider.host(), entryProvider.port(), \"/nginx/entry/info\");\n+        final ResponseEntity<String> response = restTemplate.postForEntity(url.toURI(), trafficData, String.class);\n+        Assert.assertEquals(response.getBody(), \"entry_value_nginx_value\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NzQ4Mw=="}, "originalCommit": {"oid": "33d9dfb148af3fabf3cb82792174f85cddff49ae"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 239, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}