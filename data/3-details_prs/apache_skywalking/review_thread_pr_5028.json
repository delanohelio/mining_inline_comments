{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MjU2OTY5", "number": 5028, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwODo1MDo0NFrOELXfRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwODo1MjowNlrOELXfkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzU0NjMwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwODo1MDo0NFrOGs6z2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNDowMDoxNVrOGtIIBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ==", "bodyText": "Why Change this?", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449754075", "createdAt": "2020-07-04T08:50:44Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDE1NQ==", "bodyText": "Keep code style uniform.", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449754155", "createdAt": "2020-07-04T08:51:53Z", "author": {"login": "Ax1an"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDQ3Ng==", "bodyText": "@hanahmily You made the decision. I am not sure whether this is a suitable change. Basically, we don't have code style guidance about this.", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449754476", "createdAt": "2020-07-04T08:56:19Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2MTI1NQ==", "bodyText": "From my perspective, some other references should be updated accordingly. One I can find is grafana.json at docs folder. But it's a bit overkill. I prefer to leave it alone", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449761255", "createdAt": "2020-07-04T10:33:05Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2MTgxMA==", "bodyText": "@Ax1an Pleasw update the Grafana config to adopt this.", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449761810", "createdAt": "2020-07-04T10:41:27Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2MjQ5MA==", "bodyText": "From my perspective, minute is better than min. Because DownSampling enum is minute.\nI prefer to adjust grafana.json.", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449762490", "createdAt": "2020-07-04T10:51:26Z", "author": {"login": "Ax1an"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2MzEyNA==", "bodyText": "@wu-sheng Updated.", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449763124", "createdAt": "2020-07-04T11:01:04Z", "author": {"login": "Ax1an"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxMjM3OA==", "bodyText": "After a talk with sheng, I agree with renaming it. Pls, to search and update other possible references more than grafana.json. Thanks.", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449812378", "createdAt": "2020-07-04T23:04:54Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3MjEwNA==", "bodyText": "@hanahmily I updated oap.yaml. Other references were not found.", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449972104", "createdAt": "2020-07-06T03:59:35Z", "author": {"login": "Ax1an"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3MjIzMQ==", "bodyText": "These are the metrics in grafana after this PR changed.", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449972231", "createdAt": "2020-07-06T04:00:15Z", "author": {"login": "Ax1an"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsAggregateWorker.java", "diffHunk": "@@ -69,7 +69,7 @@\n                                                           .getService(MetricsCreator.class);\n         aggregationCounter = metricsCreator.createCounter(\n             \"metrics_aggregation\", \"The number of rows in aggregation\",\n-            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"min\")\n+            new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(modelName, \"1\", \"minute\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDA3NQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzU0NzA2OnYy", "diffSide": "LEFT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsTransWorker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwODo1MjowNlrOGs60OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwODo1OToxMVrOGs62Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDE2OQ==", "bodyText": "Why remove all these? The downsampling is important.", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449754169", "createdAt": "2020-07-04T08:52:06Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsTransWorker.java", "diffHunk": "@@ -36,28 +32,12 @@\n     private final MetricsPersistentWorker hourPersistenceWorker;\n     private final MetricsPersistentWorker dayPersistenceWorker;\n \n-    private final CounterMetrics aggregationHourCounter;\n-    private final CounterMetrics aggregationDayCounter;\n-\n     public MetricsTransWorker(ModuleDefineHolder moduleDefineHolder,\n-                              String modelName,\n                               MetricsPersistentWorker hourPersistenceWorker,\n                               MetricsPersistentWorker dayPersistenceWorker) {\n         super(moduleDefineHolder);\n         this.hourPersistenceWorker = hourPersistenceWorker;\n         this.dayPersistenceWorker = dayPersistenceWorker;\n-\n-        MetricsCreator metricsCreator = moduleDefineHolder.find(TelemetryModule.NAME)\n-                                                          .provider()\n-                                                          .getService(MetricsCreator.class);\n-        aggregationHourCounter = metricsCreator.createCounter(\n-            \"metrics_aggregation\", \"The number of rows in aggregation\", new MetricsTag.Keys(\"metricName\", \"level\",\n-                                                                                            \"dimensionality\"\n-            ), new MetricsTag.Values(modelName, \"2\", \"hour\"));\n-        aggregationDayCounter = metricsCreator.createCounter(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDY2Mw==", "bodyText": "I didn't remove it. I used model.getDownsampling().getName() in MetricsPersistentWorker class.\nThe metrics of minutes,hours and days can be exposed.\naggregationCounter = metricsCreator.createCounter(\n                \"metrics_aggregation\", \"The number of rows in aggregation\",\n                new MetricsTag.Keys(\"metricName\", \"level\", \"dimensionality\"), new MetricsTag.Values(model.getName(), \"2\", model.getDownsampling().getName())\n        );", "url": "https://github.com/apache/skywalking/pull/5028#discussion_r449754663", "createdAt": "2020-07-04T08:59:11Z", "author": {"login": "Ax1an"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/MetricsTransWorker.java", "diffHunk": "@@ -36,28 +32,12 @@\n     private final MetricsPersistentWorker hourPersistenceWorker;\n     private final MetricsPersistentWorker dayPersistenceWorker;\n \n-    private final CounterMetrics aggregationHourCounter;\n-    private final CounterMetrics aggregationDayCounter;\n-\n     public MetricsTransWorker(ModuleDefineHolder moduleDefineHolder,\n-                              String modelName,\n                               MetricsPersistentWorker hourPersistenceWorker,\n                               MetricsPersistentWorker dayPersistenceWorker) {\n         super(moduleDefineHolder);\n         this.hourPersistenceWorker = hourPersistenceWorker;\n         this.dayPersistenceWorker = dayPersistenceWorker;\n-\n-        MetricsCreator metricsCreator = moduleDefineHolder.find(TelemetryModule.NAME)\n-                                                          .provider()\n-                                                          .getService(MetricsCreator.class);\n-        aggregationHourCounter = metricsCreator.createCounter(\n-            \"metrics_aggregation\", \"The number of rows in aggregation\", new MetricsTag.Keys(\"metricName\", \"level\",\n-                                                                                            \"dimensionality\"\n-            ), new MetricsTag.Values(modelName, \"2\", \"hour\"));\n-        aggregationDayCounter = metricsCreator.createCounter(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc1NDE2OQ=="}, "originalCommit": {"oid": "1e6fe73c178d75d16883d6b33f3c39cd07d3b48a"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 48, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}