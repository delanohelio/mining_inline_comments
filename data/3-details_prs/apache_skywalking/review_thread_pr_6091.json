{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1OTczMjY2", "number": 6091, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzozOToxOVrOFJdTqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQwNjozMDo1MFrOFKi6IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDYxNjc0OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/envoy/examples/metrics/docker-compose.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzozOToxOVrOILzVhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzozOToxOVrOILzVhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0NjM0Mg==", "bodyText": "Envoy now doesn't have a latest tag, and pinning the image version is a good practice IMO.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549246342", "createdAt": "2020-12-28T07:39:19Z", "author": {"login": "kezhenxu94"}, "path": "docs/en/setup/envoy/examples/metrics/docker-compose.yaml", "diffHunk": "@@ -17,7 +17,7 @@\n version: \"3\"\n services:\n   envoy:\n-    image: envoyproxy/envoy-alpine:latest\n+    image: envoyproxy/envoy-alpine:v1.16.2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "916e20a138a23a103ba6c498bd409f7789d8295b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDYxNzc2OnYy", "diffSide": "RIGHT", "path": "oap-server/analyzer/meter-analyzer/src/main/java/org/apache/skywalking/oap/meter/analyzer/prometheus/PrometheusMetricConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzo0MDowNlrOILzWHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzo0MDowNlrOILzWHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0NjQ5NQ==", "bodyText": "Metrics names in Envoy contain ., hence this is necessary", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549246495", "createdAt": "2020-12-28T07:40:06Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/analyzer/meter-analyzer/src/main/java/org/apache/skywalking/oap/meter/analyzer/prometheus/PrometheusMetricConverter.java", "diffHunk": "@@ -141,6 +141,11 @@ public void toMeter(Stream<Metric> metricStream) {\n         if (ss.length < 1) {\n             return Optional.empty();\n         }\n-        return Optional.of(Tuple.of(metric.getName(), SampleFamilyBuilder.newBuilder(ss).build()));\n+        return Optional.of(Tuple.of(escapedName(metric.getName()), SampleFamilyBuilder.newBuilder(ss).build()));\n+    }\n+\n+    // Returns the escaped name of the given one, with \".\" replaced by \"_\"\n+    protected String escapedName(final String name) {\n+        return name.replaceAll(\"\\\\.\", \"_\");\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "916e20a138a23a103ba6c498bd409f7789d8295b"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDYyMTI5OnYy", "diffSide": "LEFT", "path": "oap-server/server-bootstrap/src/main/resources/otel-oc-rules/istio-controlplane.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzo0MjoxNlrOILzYGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzo1MzowOVrOILzidw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0NzAwMw==", "bodyText": "Does this make sense @hanahmily ? Seems both control plane and data plane all share the same \"serviceGroup\" in \"oap-server/server-bootstrap/src/main/resources/ui-initialized-templates/istio.yml\"", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549247003", "createdAt": "2020-12-28T07:42:16Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-bootstrap/src/main/resources/otel-oc-rules/istio-controlplane.yaml", "diffHunk": "@@ -28,7 +28,7 @@\n #    \"-P6H3M\"    -- parses as \"-6 hours and -3 minutes\"\n #    \"-P-6H+3M\"  -- parses as \"+6 hours and -3 minutes\"\n # </pre>\n-expSuffix: tag({tags -> tags.cluster = 'istio-ctrl::' + tags.cluster}).service(['cluster', 'app'])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "916e20a138a23a103ba6c498bd409f7789d8295b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0OTY1NQ==", "bodyText": "This rule file intends to ingest metrics from different Kubernetes clusters, not identify control plane and data plane. There might be more than one cluster when two different OT collectors transfer metrics to the OAP cluster.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549249655", "createdAt": "2020-12-28T07:53:09Z", "author": {"login": "hanahmily"}, "path": "oap-server/server-bootstrap/src/main/resources/otel-oc-rules/istio-controlplane.yaml", "diffHunk": "@@ -28,7 +28,7 @@\n #    \"-P6H3M\"    -- parses as \"-6 hours and -3 minutes\"\n #    \"-P-6H+3M\"  -- parses as \"+6 hours and -3 minutes\"\n # </pre>\n-expSuffix: tag({tags -> tags.cluster = 'istio-ctrl::' + tags.cluster}).service(['cluster', 'app'])", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0NzAwMw=="}, "originalCommit": {"oid": "916e20a138a23a103ba6c498bd409f7789d8295b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDg3MDcyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwOTo0MDowNlrOIL1fQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNToxMzowNVrOIMdiLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4MTYwMQ==", "bodyText": "Why need this? Could we disable through SW_ENVOY_METRIC=-?", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549281601", "createdAt": "2020-12-28T09:40:06Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -266,6 +266,7 @@ envoy-metric:\n     # to append the version number to the service name.\n     # Be careful, when using environment variables to pass this configuration, use single quotes(`''`) to avoid it being evaluated by the shell.\n     k8sServiceNameRule: ${K8S_SERVICE_NAME_RULE:\"${service.metadata.name}\"}\n+    enabledMALRules: ${SW_ENVOY_METRIC_MAL_RULES:\"envoy\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44af04794a03d38f69d95a814cfd7447d7e57b9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1NDg3MA==", "bodyText": "Why need this? Could we disable through SW_ENVOY_METRIC=-?\n\nWe could disable through SW_ENVOY_METRIC=- but I thought this was not for disabling, it shares the same idea as #5853 , we may need this for the same reason as #5853 , do we?", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549754870", "createdAt": "2020-12-29T15:52:57Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -266,6 +266,7 @@ envoy-metric:\n     # to append the version number to the service name.\n     # Be careful, when using environment variables to pass this configuration, use single quotes(`''`) to avoid it being evaluated by the shell.\n     k8sServiceNameRule: ${K8S_SERVICE_NAME_RULE:\"${service.metadata.name}\"}\n+    enabledMALRules: ${SW_ENVOY_METRIC_MAL_RULES:\"envoy\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4MTYwMQ=="}, "originalCommit": {"oid": "d44af04794a03d38f69d95a814cfd7447d7e57b9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1Njc1NA==", "bodyText": "What is this related to the #5853 ? Could you be more clear? That issue is asking for adding group for all services involved in the specific dashboard.\nSuch as envoy service should include a group name in name definition, then they wouldn't show up in other dashboard's service list.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549756754", "createdAt": "2020-12-29T15:58:08Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -266,6 +266,7 @@ envoy-metric:\n     # to append the version number to the service name.\n     # Be careful, when using environment variables to pass this configuration, use single quotes(`''`) to avoid it being evaluated by the shell.\n     k8sServiceNameRule: ${K8S_SERVICE_NAME_RULE:\"${service.metadata.name}\"}\n+    enabledMALRules: ${SW_ENVOY_METRIC_MAL_RULES:\"envoy\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4MTYwMQ=="}, "originalCommit": {"oid": "d44af04794a03d38f69d95a814cfd7447d7e57b9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1OTMzOQ==", "bodyText": ":( I pasted the wrong issue number, should be #5035 and #5530", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549759339", "createdAt": "2020-12-29T16:05:33Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -266,6 +266,7 @@ envoy-metric:\n     # to append the version number to the service name.\n     # Be careful, when using environment variables to pass this configuration, use single quotes(`''`) to avoid it being evaluated by the shell.\n     k8sServiceNameRule: ${K8S_SERVICE_NAME_RULE:\"${service.metadata.name}\"}\n+    enabledMALRules: ${SW_ENVOY_METRIC_MAL_RULES:\"envoy\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4MTYwMQ=="}, "originalCommit": {"oid": "d44af04794a03d38f69d95a814cfd7447d7e57b9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2MDg3Mg==", "bodyText": "I think this would be a little different actually. I can't see the chance of multiple rule config files in metric-receiver. All those two are only general receiver, you could have data from different sources.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549760872", "createdAt": "2020-12-29T16:09:45Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -266,6 +266,7 @@ envoy-metric:\n     # to append the version number to the service name.\n     # Be careful, when using environment variables to pass this configuration, use single quotes(`''`) to avoid it being evaluated by the shell.\n     k8sServiceNameRule: ${K8S_SERVICE_NAME_RULE:\"${service.metadata.name}\"}\n+    enabledMALRules: ${SW_ENVOY_METRIC_MAL_RULES:\"envoy\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4MTYwMQ=="}, "originalCommit": {"oid": "d44af04794a03d38f69d95a814cfd7447d7e57b9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzNzcwOQ==", "bodyText": "OK, removed", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549937709", "createdAt": "2020-12-30T05:13:05Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-bootstrap/src/main/resources/application.yml", "diffHunk": "@@ -266,6 +266,7 @@ envoy-metric:\n     # to append the version number to the service name.\n     # Be careful, when using environment variables to pass this configuration, use single quotes(`''`) to avoid it being evaluated by the shell.\n     k8sServiceNameRule: ${K8S_SERVICE_NAME_RULE:\"${service.metadata.name}\"}\n+    enabledMALRules: ${SW_ENVOY_METRIC_MAL_RULES:\"envoy\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4MTYwMQ=="}, "originalCommit": {"oid": "d44af04794a03d38f69d95a814cfd7447d7e57b9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQxMzY0OnYy", "diffSide": "RIGHT", "path": "oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/metrics/adapters/ProtoMetricFamily2MetricsAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjo1NTo1MVrOIMTrPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNToxMjowOVrOIMdhrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3NjE5MA==", "bodyText": "NULL_DEREFERENCE:  object returned by ProtoMetricFamily2MetricsAdapter.metricFamily.getType() could be null and is dereferenced at line 36.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549776190", "createdAt": "2020-12-29T16:55:51Z", "author": {"login": "sonatype-lift"}, "path": "oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/metrics/adapters/ProtoMetricFamily2MetricsAdapter.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.envoy.metrics.adapters;\n+\n+import io.prometheus.client.Metrics;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+import lombok.RequiredArgsConstructor;\n+import org.apache.skywalking.oap.server.library.util.prometheus.metrics.Gauge;\n+import org.apache.skywalking.oap.server.library.util.prometheus.metrics.Metric;\n+\n+import static java.util.stream.Collectors.toMap;\n+\n+@RequiredArgsConstructor\n+public class ProtoMetricFamily2MetricsAdapter {\n+    protected final Metrics.MetricFamily metricFamily;\n+\n+    public Stream<Metric> adapt() {\n+        // TODO: should adapt more types\n+        switch (metricFamily.getType()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7659c5a8eef367306757283cc42bd2816690e013"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzNzU4Mg==", "bodyText": "Can't be null actually", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r549937582", "createdAt": "2020-12-30T05:12:09Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/metrics/adapters/ProtoMetricFamily2MetricsAdapter.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.envoy.metrics.adapters;\n+\n+import io.prometheus.client.Metrics;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+import lombok.RequiredArgsConstructor;\n+import org.apache.skywalking.oap.server.library.util.prometheus.metrics.Gauge;\n+import org.apache.skywalking.oap.server.library.util.prometheus.metrics.Metric;\n+\n+import static java.util.stream.Collectors.toMap;\n+\n+@RequiredArgsConstructor\n+public class ProtoMetricFamily2MetricsAdapter {\n+    protected final Metrics.MetricFamily metricFamily;\n+\n+    public Stream<Metric> adapt() {\n+        // TODO: should adapt more types\n+        switch (metricFamily.getType()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3NjE5MA=="}, "originalCommit": {"oid": "7659c5a8eef367306757283cc42bd2816690e013"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MzQ2MjM3OnYy", "diffSide": "RIGHT", "path": "oap-server/server-bootstrap/src/main/resources/ui-initialized-templates/istio-dp.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxNTozMjoyOFrOINAM0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxNTozMjoyOFrOINAM0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDUwNTY4Mw==", "bodyText": "I am good with this name. @hanahmily Please review from tech perspective, especially MAL integration.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550505683", "createdAt": "2020-12-31T15:32:28Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/ui-initialized-templates/istio-dp.yml", "diffHunk": "@@ -0,0 +1,82 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+templates:\n+  - name: \"Istio Data Plane\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e552dd685005ed5d2f9f3af65b8d3afdb39daa"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NTA4NjA5OnYy", "diffSide": "RIGHT", "path": "test/e2e/e2e-test/src/test/resources/expected/metricsservice/services.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQwODo1NTo0MVrOINO-8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQwOTowNDozOVrOINPBlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc0Nzg4OQ==", "bodyText": "Such as this one should be same as ALS did. \n  \n    \n      skywalking/test/e2e/e2e-test/src/test/resources/expected/als/services.yml\n    \n    \n        Lines 16 to 26\n      in\n      1b1f085\n    \n    \n    \n    \n\n        \n          \n           services: \n        \n\n        \n          \n             - key: not null \n        \n\n        \n          \n               label: re(ratings.*) \n        \n\n        \n          \n             - key: not null \n        \n\n        \n          \n               label: re(reviews.*) \n        \n\n        \n          \n             - key: not null \n        \n\n        \n          \n               label: re(productpage.*) \n        \n\n        \n          \n             - key: not null \n        \n\n        \n          \n               label: re(details.*) \n        \n\n        \n          \n             - key: not null \n        \n\n        \n          \n               label: re(istio-ingressgateway.*) \n        \n    \n  \n\n\nMore importantly, the instance name should be pod's name.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550747889", "createdAt": "2021-01-01T08:55:41Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-test/src/test/resources/expected/metricsservice/services.yml", "diffHunk": "@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+services:\n+  - key: not null\n+    label: istio-dp::ratings.default\n+  - key: not null\n+    label: istio-dp::reviews.default\n+  - key: not null\n+    label: istio-dp::productpage.default\n+  - key: not null\n+    label: istio-dp::details.default\n+  - key: not null\n+    label: istio-dp::istio-ingressgateway", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e552dd685005ed5d2f9f3af65b8d3afdb39daa"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc0ODQyNg==", "bodyText": "This is services.yaml, not instances", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550748426", "createdAt": "2021-01-01T09:03:07Z", "author": {"login": "kezhenxu94"}, "path": "test/e2e/e2e-test/src/test/resources/expected/metricsservice/services.yml", "diffHunk": "@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+services:\n+  - key: not null\n+    label: istio-dp::ratings.default\n+  - key: not null\n+    label: istio-dp::reviews.default\n+  - key: not null\n+    label: istio-dp::productpage.default\n+  - key: not null\n+    label: istio-dp::details.default\n+  - key: not null\n+    label: istio-dp::istio-ingressgateway", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc0Nzg4OQ=="}, "originalCommit": {"oid": "75e552dd685005ed5d2f9f3af65b8d3afdb39daa"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc0ODU2NQ==", "bodyText": "I know. I just take an example, because we don't verify the instance name in the test. The point is, we need ALS and MetricsService analysis results share the same naming rule.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550748565", "createdAt": "2021-01-01T09:04:39Z", "author": {"login": "wu-sheng"}, "path": "test/e2e/e2e-test/src/test/resources/expected/metricsservice/services.yml", "diffHunk": "@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+services:\n+  - key: not null\n+    label: istio-dp::ratings.default\n+  - key: not null\n+    label: istio-dp::reviews.default\n+  - key: not null\n+    label: istio-dp::productpage.default\n+  - key: not null\n+    label: istio-dp::details.default\n+  - key: not null\n+    label: istio-dp::istio-ingressgateway", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc0Nzg4OQ=="}, "originalCommit": {"oid": "75e552dd685005ed5d2f9f3af65b8d3afdb39daa"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NTA4OTQxOnYy", "diffSide": "RIGHT", "path": "oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/MetricServiceGRPCHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQwODo1OToxNlrOINPAVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxNToyMDozOFrOINQ0CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc0ODI0NQ==", "bodyText": "This is the logic we used to do, but I think we should share the ALS logic. Then in future integration, the entity names of sidecar metrics will be as same as the traffic related metrics.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550748245", "createdAt": "2021-01-01T08:59:16Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/MetricServiceGRPCHandler.java", "diffHunk": "@@ -79,17 +93,15 @@ public void onNext(StreamMetricsMessage message) {\n                     isFirst = false;\n                     StreamMetricsMessage.Identifier identifier = message.getIdentifier();\n                     Node node = identifier.getNode();\n-                    if (node != null) {\n-                        String nodeId = node.getId();\n-                        if (!StringUtil.isEmpty(nodeId)) {\n-                            serviceInstanceName = nodeId;\n-                        }\n-                        String cluster = node.getCluster();\n-                        if (!StringUtil.isEmpty(cluster)) {\n-                            serviceName = cluster;\n-                            if (serviceInstanceName == null) {\n-                                serviceInstanceName = serviceName;\n-                            }\n+                    String nodeId = node.getId();\n+                    if (!StringUtil.isEmpty(nodeId)) {\n+                        serviceInstanceName = nodeId;\n+                    }\n+                    String cluster = node.getCluster();\n+                    if (!StringUtil.isEmpty(cluster)) {\n+                        serviceName = cluster;\n+                        if (serviceInstanceName == null) {\n+                            serviceInstanceName = serviceName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e552dd685005ed5d2f9f3af65b8d3afdb39daa"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc3Nzg2NQ==", "bodyText": "The service names in metrics service have a service group prefix (istio-dp::) while those in ALS don't have, do we want to add service group in ALS as well?", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550777865", "createdAt": "2021-01-01T15:20:38Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/MetricServiceGRPCHandler.java", "diffHunk": "@@ -79,17 +93,15 @@ public void onNext(StreamMetricsMessage message) {\n                     isFirst = false;\n                     StreamMetricsMessage.Identifier identifier = message.getIdentifier();\n                     Node node = identifier.getNode();\n-                    if (node != null) {\n-                        String nodeId = node.getId();\n-                        if (!StringUtil.isEmpty(nodeId)) {\n-                            serviceInstanceName = nodeId;\n-                        }\n-                        String cluster = node.getCluster();\n-                        if (!StringUtil.isEmpty(cluster)) {\n-                            serviceName = cluster;\n-                            if (serviceInstanceName == null) {\n-                                serviceInstanceName = serviceName;\n-                            }\n+                    String nodeId = node.getId();\n+                    if (!StringUtil.isEmpty(nodeId)) {\n+                        serviceInstanceName = nodeId;\n+                    }\n+                    String cluster = node.getCluster();\n+                    if (!StringUtil.isEmpty(cluster)) {\n+                        serviceName = cluster;\n+                        if (serviceInstanceName == null) {\n+                            serviceInstanceName = serviceName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc0ODI0NQ=="}, "originalCommit": {"oid": "75e552dd685005ed5d2f9f3af65b8d3afdb39daa"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NTM4Mjg3OnYy", "diffSide": "RIGHT", "path": "oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/MetricServiceGRPCHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxNTo1NzowOFrOINQ_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxNTo1NzowOFrOINQ_Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc4MDc3MQ==", "bodyText": "ServiceMetaInfoAdapter is for meta exchange only, right? Where is the ip-mapping mechanism?", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550780771", "createdAt": "2021-01-01T15:57:08Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/MetricServiceGRPCHandler.java", "diffHunk": "@@ -60,111 +69,65 @@ public MetricServiceGRPCHandler(ModuleManager moduleManager) {\n             \"envoy_metric_in_latency\", \"The process latency of service metrics receiver\", MetricsTag.EMPTY_KEY,\n             MetricsTag.EMPTY_VALUE\n         );\n+\n+        final MeterSystem meterSystem = moduleManager.find(CoreModule.NAME).provider().getService(MeterSystem.class);\n+\n+        converters = config.rules()\n+                           .stream()\n+                           .map(rule -> new PrometheusMetricConverter(rule, meterSystem))\n+                           .collect(Collectors.toList());\n     }\n \n     @Override\n     public StreamObserver<StreamMetricsMessage> streamMetrics(StreamObserver<StreamMetricsResponse> responseObserver) {\n         return new StreamObserver<StreamMetricsMessage>() {\n             private volatile boolean isFirst = true;\n-            private String serviceName = null;\n-            private String serviceInstanceName = null;\n+            private ServiceMetaInfo service;\n \n             @Override\n+            @SneakyThrows\n             public void onNext(StreamMetricsMessage message) {\n                 if (log.isDebugEnabled()) {\n                     log.debug(\"Received msg {}\", message);\n                 }\n \n                 if (isFirst) {\n                     isFirst = false;\n-                    StreamMetricsMessage.Identifier identifier = message.getIdentifier();\n-                    Node node = identifier.getNode();\n-                    if (node != null) {\n-                        String nodeId = node.getId();\n-                        if (!StringUtil.isEmpty(nodeId)) {\n-                            serviceInstanceName = nodeId;\n-                        }\n-                        String cluster = node.getCluster();\n-                        if (!StringUtil.isEmpty(cluster)) {\n-                            serviceName = cluster;\n-                            if (serviceInstanceName == null) {\n-                                serviceInstanceName = serviceName;\n-                            }\n-                        }\n-                    }\n-\n-                    if (serviceName == null) {\n-                        serviceName = serviceInstanceName;\n-                    }\n+                    service = new ServiceMetaInfoAdapter(message.getIdentifier().getNode().getMetadata());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54efea65c22e316a8679a0f864063501f39e3279"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NTM4NTAyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/e2e.istio.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxNjowMDozNFrOINRAVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxNjowMTowNFrOINRAbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc4MTAxNQ==", "bodyText": "I assume meta-exchange is default ON by today's Istio, right? I think we need to disable it manually?", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550781015", "createdAt": "2021-01-01T16:00:34Z", "author": {"login": "wu-sheng"}, "path": ".github/workflows/e2e.istio.yaml", "diffHunk": "@@ -129,3 +129,93 @@ jobs:\n       - name: Clean up\n         if: ${{ always() }}\n         run: minikube delete\n+\n+  metrics-service:\n+    runs-on: ubuntu-16.04\n+    timeout-minutes: 60\n+    name: MetricsService\n+    steps:\n+      - uses: actions/checkout@v2\n+        with:\n+          submodules: true\n+\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: ${{ runner.os }}-maven-\n+\n+      - name: Build Docker Image\n+        run: make docker\n+\n+      - name: Prepare envrionment\n+        run: bash ${SCRIPTS_DIR}/pre.sh\n+\n+      - name: Install Minikube\n+        run: bash ${SCRIPTS_DIR}/minikube.sh start\n+\n+      - name: Install Istio\n+        run: bash ${SCRIPTS_DIR}/istio.sh --set profile=demo --set meshConfig.defaultConfig.envoyMetricsService.address=skywalking-oap.istio-system:11800", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54efea65c22e316a8679a0f864063501f39e3279"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc4MTAzNw==", "bodyText": "And e2e fails, please recheck.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550781037", "createdAt": "2021-01-01T16:01:04Z", "author": {"login": "wu-sheng"}, "path": ".github/workflows/e2e.istio.yaml", "diffHunk": "@@ -129,3 +129,93 @@ jobs:\n       - name: Clean up\n         if: ${{ always() }}\n         run: minikube delete\n+\n+  metrics-service:\n+    runs-on: ubuntu-16.04\n+    timeout-minutes: 60\n+    name: MetricsService\n+    steps:\n+      - uses: actions/checkout@v2\n+        with:\n+          submodules: true\n+\n+      - uses: actions/cache@v2\n+        with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: ${{ runner.os }}-maven-\n+\n+      - name: Build Docker Image\n+        run: make docker\n+\n+      - name: Prepare envrionment\n+        run: bash ${SCRIPTS_DIR}/pre.sh\n+\n+      - name: Install Minikube\n+        run: bash ${SCRIPTS_DIR}/minikube.sh start\n+\n+      - name: Install Istio\n+        run: bash ${SCRIPTS_DIR}/istio.sh --set profile=demo --set meshConfig.defaultConfig.envoyMetricsService.address=skywalking-oap.istio-system:11800", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc4MTAxNQ=="}, "originalCommit": {"oid": "54efea65c22e316a8679a0f864063501f39e3279"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NTczMzk2OnYy", "diffSide": "RIGHT", "path": "oap-server/analyzer/meter-analyzer/src/main/java/org/apache/skywalking/oap/meter/analyzer/dsl/SampleFamily.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQyMzoyODozMFrOINTW_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQyMzoyODozMFrOINTW_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDgxOTU4MA==", "bodyText": "Pls add more unit tests to cover these functions", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550819580", "createdAt": "2021-01-01T23:28:30Z", "author": {"login": "hanahmily"}, "path": "oap-server/analyzer/meter-analyzer/src/main/java/org/apache/skywalking/oap/meter/analyzer/dsl/SampleFamily.java", "diffHunk": "@@ -161,12 +162,32 @@ public SampleFamily div(SampleFamily another) {\n \n     /* Aggregation operators */\n     public SampleFamily sum(List<String> by) {\n+        return aggregate(by, Double::sum);\n+    }\n+\n+    public SampleFamily max(List<String> by) {\n+        return aggregate(by, Double::max);\n+    }\n+\n+    public SampleFamily min(List<String> by) {\n+        return aggregate(by, Double::min);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54efea65c22e316a8679a0f864063501f39e3279"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NjAyMDE3OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/envoy/metrics_service_setting.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQwNjozMDo1MFrOINVPIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQwNjozMDo1MFrOINVPIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg1MDMzNw==", "bodyText": "cc @hanahmily Due to share the same node id mechanism, even we don't require header exchange in the metrics service analysis. We will still depend on Istio control. We fetch the name based on that.", "url": "https://github.com/apache/skywalking/pull/6091#discussion_r550850337", "createdAt": "2021-01-02T06:30:50Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/envoy/metrics_service_setting.md", "diffHunk": "@@ -39,6 +39,17 @@ A more complete static configuration, can be observed [here](config.yaml).\n \n Note that Envoy can also be configured dynamically through [xDS Protocol](https://github.com/envoyproxy/data-plane-api/blob/master/XDS_PROTOCOL.md).\n \n+**Attention**: Only use this when Envoy is under Istio's control, because SkyWalking needs to parse the service name and service instance name from the metadata that is injected by Istio. However, if you want to use this without Istio, you need to inject the metadata yourself like this:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3224e61c8c8acec6a6e992a9b7356149cd8ca0"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4697, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}