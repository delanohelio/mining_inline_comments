{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5OTA0MDg5", "number": 5523, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMzo0MTowOVrOElbONQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjo1Mjo0MVrOEnuCRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njc4NzczOnYy", "diffSide": "RIGHT", "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMzo0MTowOVrOHU6i2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMzo0MTowOVrOHU6i2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5Mjc2Mw==", "bodyText": "I feel accepting the negative value is conflicting with the definition of the counter. a single monotonically increasing counter.\nPlease recheck.", "url": "https://github.com/apache/skywalking/pull/5523#discussion_r491692763", "createdAt": "2020-09-20T13:41:09Z", "author": {"login": "wu-sheng"}, "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "diffHunk": "@@ -443,3 +443,44 @@ Please follow there steps:\n 1. Send the pull request and ask for review. \n 1. The plugin committers approve your plugins, plugin CI-with-IT, e2e and plugin tests passed.\n 1. The plugin accepted by SkyWalking. \n+\n+### Plugin Meter reporter\n+Java agent also supports customize meter report to backend. We provide Java Agent Core level API such as [Application Toolkit meter](../setup/service-agent/java-agent/Application-toolkit-meter.md).\n+\n+* `Counter` API represents a single monotonically increasing counter, automatic collect data and report to backend.\n+```java\n+import org.apache.skywalking.apm.agent.core.meter.MeterFactory;\n+\n+Counter counter = MeterFactory.counter(meterName).tag(\"tagKey\", \"tagValue\").mode(Counter.Mode.INCREMENT).build();\n+counter.increment(1d);\n+```\n+1. `MeterFactory.counter` Create a new counter builder with the meter name.\n+1. `Counter.Builder.tag(String key, String value)` Mark a tag key/value pair.\n+1. `Counter.Builder.mode(Counter.Mode mode)` Change the counter mode, `RATE` mode means reporting rate to the backend.\n+1. `Counter.Builder.build()` Build a new `Counter` which is collected and reported to the backend.\n+1. `Counter.increment(double count)` Increment count to the `Counter`, It could be a positive/negative value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4480b115d95f1c1b3df2688adaf222719c28b23d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njc5NTcyOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/meter/builder/Histogram.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMzo1Mjo1OVrOHU6myA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMzo1Mjo1OVrOHU6myA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5Mzc2OA==", "bodyText": "What does this similar to a histogram mean? Isn't this a histogram already?", "url": "https://github.com/apache/skywalking/pull/5523#discussion_r491693768", "createdAt": "2020-09-20T13:52:59Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/meter/builder/Histogram.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.meter.builder;\n+\n+import java.util.List;\n+\n+/**\n+ * Similar to a histogram, a summary sample observations (usual things like request durations and response sizes).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4480b115d95f1c1b3df2688adaf222719c28b23d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njc5NjQzOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/meter/builder/Histogram.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMzo1NDowNVrOHU6nJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMzo1NDowNVrOHU6nJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5Mzg2Mw==", "bodyText": "Are you copying this from Prometheus or somewhere? Also, at the same time, HistogramImpl's comments don't make sense.", "url": "https://github.com/apache/skywalking/pull/5523#discussion_r491693863", "createdAt": "2020-09-20T13:54:05Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/meter/builder/Histogram.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.meter.builder;\n+\n+import java.util.List;\n+\n+/**\n+ * Similar to a histogram, a summary sample observations (usual things like request durations and response sizes).\n+ * While it also provides a total count of observations and a sum of all observed values, it calculates configurable quartiles over a sliding time window.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4480b115d95f1c1b3df2688adaf222719c28b23d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjgxMjgzOnYy", "diffSide": "RIGHT", "path": "apm-application-toolkit/apm-toolkit-meter/src/main/java/org/apache/skywalking/apm/toolkit/meter/impl/CounterImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDoxNzoxMVrOHU6u5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNTo1MTo0MVrOHVBYoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NTg0NA==", "bodyText": "Why change this name? But such as in GuageImpl, still, use get? Seems inconsistent to me.", "url": "https://github.com/apache/skywalking/pull/5523#discussion_r491695844", "createdAt": "2020-09-20T14:17:11Z", "author": {"login": "wu-sheng"}, "path": "apm-application-toolkit/apm-toolkit-meter/src/main/java/org/apache/skywalking/apm/toolkit/meter/impl/CounterImpl.java", "diffHunk": "@@ -51,30 +48,13 @@ public void increment(double count) {\n     /**\n      * Get count value\n      */\n-    public double get() {\n+    public double getCount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4480b115d95f1c1b3df2688adaf222719c28b23d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgwNDgzMg==", "bodyText": "Change them to the same function name, using getCount to get meter value. I forget to change the Gauge, has resolved.", "url": "https://github.com/apache/skywalking/pull/5523#discussion_r491804832", "createdAt": "2020-09-21T05:51:41Z", "author": {"login": "mrproliu"}, "path": "apm-application-toolkit/apm-toolkit-meter/src/main/java/org/apache/skywalking/apm/toolkit/meter/impl/CounterImpl.java", "diffHunk": "@@ -51,30 +48,13 @@ public void increment(double count) {\n     /**\n      * Get count value\n      */\n-    public double get() {\n+    public double getCount() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NTg0NA=="}, "originalCommit": {"oid": "4480b115d95f1c1b3df2688adaf222719c28b23d"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODYzNTQ0OnYy", "diffSide": "RIGHT", "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDo1MzoyMlrOHVKVXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDo1MzoyMlrOHVKVXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1MTQ1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### Plugin Meter reporter\n          \n          \n            \n            ### Plugin Meter Plugin", "url": "https://github.com/apache/skywalking/pull/5523#discussion_r491951453", "createdAt": "2020-09-21T10:53:22Z", "author": {"login": "wu-sheng"}, "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "diffHunk": "@@ -443,3 +443,44 @@ Please follow there steps:\n 1. Send the pull request and ask for review. \n 1. The plugin committers approve your plugins, plugin CI-with-IT, e2e and plugin tests passed.\n 1. The plugin accepted by SkyWalking. \n+\n+### Plugin Meter reporter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "554ac42980474b2be27b97ebf8ca888c370717b1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODYzODY3OnYy", "diffSide": "RIGHT", "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDo1NDoyMlrOHVKXVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDo1NDoyMlrOHVKXVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1MTk1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Java agent also supports customize meter report to backend. We provide Java Agent Core level API such as [Application Toolkit meter](../setup/service-agent/java-agent/Application-toolkit-meter.md).\n          \n          \n            \n            Java agent plugin could use meter APIs to collect the metrics for backend analysis.", "url": "https://github.com/apache/skywalking/pull/5523#discussion_r491951958", "createdAt": "2020-09-21T10:54:22Z", "author": {"login": "wu-sheng"}, "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "diffHunk": "@@ -443,3 +443,44 @@ Please follow there steps:\n 1. Send the pull request and ask for review. \n 1. The plugin committers approve your plugins, plugin CI-with-IT, e2e and plugin tests passed.\n 1. The plugin accepted by SkyWalking. \n+\n+### Plugin Meter reporter\n+Java agent also supports customize meter report to backend. We provide Java Agent Core level API such as [Application Toolkit meter](../setup/service-agent/java-agent/Application-toolkit-meter.md).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "554ac42980474b2be27b97ebf8ca888c370717b1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDg0MTY2OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaMeterSender.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjo1Mjo0MVrOHYeTDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjo1Mjo0MVrOHYeTDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNDI2OQ==", "bodyText": "MissingOverride:  send overrides method in MeterSender; expected @OverRide", "url": "https://github.com/apache/skywalking/pull/5523#discussion_r495424269", "createdAt": "2020-09-26T06:52:41Z", "author": {"login": "sonatype-lift"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaMeterSender.java", "diffHunk": "@@ -53,7 +53,7 @@ public void boot() {\n         producer = ServiceManager.INSTANCE.findService(KafkaProducerManager.class).getProducer();\n     }\n \n-    public void send(Map<MeterId, MeterTransformer> meterMap, MeterService meterService) {\n+    public void send(Map<MeterId, BaseMeter> meterMap, MeterService meterService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c7e6f2d31cfd18e5484a4b6d440b3774b68df6"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4823, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}