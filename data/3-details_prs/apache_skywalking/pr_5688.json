{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1ODEzODk4", "number": 5688, "title": "Add agent config `PROPERTIES_REPORT_PERIOD_FACTOR `, Avoid the instanceTraffic record properties is null.", "bodyText": "\u2026ecord properties is null.\nPlease answer these questions before submitting a pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n\n\n\nBug fix\n\n\nBug description.\n\n\nHow to fix?\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.\nbecause instanceTraffic record can be cleaned and the agent properties only send once. so some  instanceTraffic record properties is null, Add agent config TIMES_SEND_PROPERTIES for resend agent properties.", "createdAt": "2020-10-19T09:06:32Z", "url": "https://github.com/apache/skywalking/pull/5688", "merged": true, "mergeCommit": {"oid": "f5e38b88e3b2734fd7c73207e62d38ef54115a04"}, "closed": true, "closedAt": "2020-10-20T04:02:28Z", "author": {"login": "zifeihan"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUAOTygH2gAyNTA1ODEzODk4OjMyNzMzN2I4YjNjNzlmZmI2N2ViM2M3MmVjNTI1ZTZlYmZhNTYxNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUQagMgFqTUxMjMwOTUyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "327337b8b3c79ffb67eb3c72ec525e6ebfa56154", "author": {"user": {"login": "zifeihan", "name": "zifeihan"}}, "url": "https://github.com/apache/skywalking/commit/327337b8b3c79ffb67eb3c72ec525e6ebfa56154", "committedDate": "2020-10-19T08:51:21Z", "message": "Add agent config `TIMES_SEND_PROPERTIES`, Avoid the instanceTraffic record properties is null."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNTk3MTk2", "url": "https://github.com/apache/skywalking/pull/5688#pullrequestreview-511597196", "createdAt": "2020-10-19T09:55:24Z", "commit": {"oid": "327337b8b3c79ffb67eb3c72ec525e6ebfa56154"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTo1NToyNFrOHkGrLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTo1NToyNFrOHkGrLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYyMDE0Mw==", "bodyText": "FutureReturnValueIgnored:  Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.", "url": "https://github.com/apache/skywalking/pull/5688#discussion_r507620143", "createdAt": "2020-10-19T09:55:24Z", "author": {"login": "sonatype-lift"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaServiceManagementServiceClient.java", "diffHunk": "@@ -85,28 +87,32 @@ public void boot() {\n             this,\n             t -> LOGGER.error(\"unexpected exception.\", t)\n         ), 0, Config.Collector.HEARTBEAT_PERIOD, TimeUnit.SECONDS);\n-\n-        InstanceProperties instance = InstanceProperties.newBuilder()\n-                                                        .setService(Config.Agent.SERVICE_NAME)\n-                                                        .setServiceInstance(Config.Agent.INSTANCE_NAME)\n-                                                        .addAllProperties(OSUtil.buildOSInfo(\n-                                                            Config.OsInfo.IPV4_LIST_SIZE))\n-                                                        .addAllProperties(SERVICE_INSTANCE_PROPERTIES)\n-                                                        .build();\n-        producer.send(new ProducerRecord<>(topic, TOPIC_KEY_REGISTER + instance.getServiceInstance(), Bytes.wrap(instance.toByteArray())));\n-        producer.flush();\n     }\n \n     @Override\n     public void run() {\n-        InstancePingPkg ping = InstancePingPkg.newBuilder()\n-                                              .setService(Config.Agent.SERVICE_NAME)\n-                                              .setServiceInstance(Config.Agent.INSTANCE_NAME)\n-                                              .build();\n-        if (LOGGER.isDebugEnable()) {\n-            LOGGER.debug(\"Heartbeat reporting, instance: {}\", ping.getServiceInstance());\n+        if (Math.abs(sendPropertiesCounter.getAndAdd(1)) % Config.Collector.TIMES_SEND_PROPERTIES == 0) {\n+            InstanceProperties instance = InstanceProperties.newBuilder()\n+                                                            .setService(Config.Agent.SERVICE_NAME)\n+                                                            .setServiceInstance(Config.Agent.INSTANCE_NAME)\n+                                                            .addAllProperties(OSUtil.buildOSInfo(\n+                                                                Config.OsInfo.IPV4_LIST_SIZE))\n+                                                            .addAllProperties(SERVICE_INSTANCE_PROPERTIES)\n+                                                            .build();\n+            producer.send(new ProducerRecord<>(topic, TOPIC_KEY_REGISTER + instance.getServiceInstance(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327337b8b3c79ffb67eb3c72ec525e6ebfa56154"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNTk3MjEy", "url": "https://github.com/apache/skywalking/pull/5688#pullrequestreview-511597212", "createdAt": "2020-10-19T09:55:25Z", "commit": {"oid": "327337b8b3c79ffb67eb3c72ec525e6ebfa56154"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTo1NToyNVrOHkGrPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTo1NToyNVrOHkGrPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYyMDE1OA==", "bodyText": "FutureReturnValueIgnored:  Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.", "url": "https://github.com/apache/skywalking/pull/5688#discussion_r507620158", "createdAt": "2020-10-19T09:55:25Z", "author": {"login": "sonatype-lift"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaServiceManagementServiceClient.java", "diffHunk": "@@ -85,28 +87,32 @@ public void boot() {\n             this,\n             t -> LOGGER.error(\"unexpected exception.\", t)\n         ), 0, Config.Collector.HEARTBEAT_PERIOD, TimeUnit.SECONDS);\n-\n-        InstanceProperties instance = InstanceProperties.newBuilder()\n-                                                        .setService(Config.Agent.SERVICE_NAME)\n-                                                        .setServiceInstance(Config.Agent.INSTANCE_NAME)\n-                                                        .addAllProperties(OSUtil.buildOSInfo(\n-                                                            Config.OsInfo.IPV4_LIST_SIZE))\n-                                                        .addAllProperties(SERVICE_INSTANCE_PROPERTIES)\n-                                                        .build();\n-        producer.send(new ProducerRecord<>(topic, TOPIC_KEY_REGISTER + instance.getServiceInstance(), Bytes.wrap(instance.toByteArray())));\n-        producer.flush();\n     }\n \n     @Override\n     public void run() {\n-        InstancePingPkg ping = InstancePingPkg.newBuilder()\n-                                              .setService(Config.Agent.SERVICE_NAME)\n-                                              .setServiceInstance(Config.Agent.INSTANCE_NAME)\n-                                              .build();\n-        if (LOGGER.isDebugEnable()) {\n-            LOGGER.debug(\"Heartbeat reporting, instance: {}\", ping.getServiceInstance());\n+        if (Math.abs(sendPropertiesCounter.getAndAdd(1)) % Config.Collector.TIMES_SEND_PROPERTIES == 0) {\n+            InstanceProperties instance = InstanceProperties.newBuilder()\n+                                                            .setService(Config.Agent.SERVICE_NAME)\n+                                                            .setServiceInstance(Config.Agent.INSTANCE_NAME)\n+                                                            .addAllProperties(OSUtil.buildOSInfo(\n+                                                                Config.OsInfo.IPV4_LIST_SIZE))\n+                                                            .addAllProperties(SERVICE_INSTANCE_PROPERTIES)\n+                                                            .build();\n+            producer.send(new ProducerRecord<>(topic, TOPIC_KEY_REGISTER + instance.getServiceInstance(),\n+                                               Bytes.wrap(instance.toByteArray())\n+            ));\n+            producer.flush();\n+        } else {\n+            InstancePingPkg ping = InstancePingPkg.newBuilder()\n+                                                  .setService(Config.Agent.SERVICE_NAME)\n+                                                  .setServiceInstance(Config.Agent.INSTANCE_NAME)\n+                                                  .build();\n+            if (LOGGER.isDebugEnable()) {\n+                LOGGER.debug(\"Heartbeat reporting, instance: {}\", ping.getServiceInstance());\n+            }\n+            producer.send(new ProducerRecord<>(topic, ping.getServiceInstance(), Bytes.wrap(ping.toByteArray())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327337b8b3c79ffb67eb3c72ec525e6ebfa56154"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODk1OTQw", "url": "https://github.com/apache/skywalking/pull/5688#pullrequestreview-511895940", "createdAt": "2020-10-19T15:35:53Z", "commit": {"oid": "327337b8b3c79ffb67eb3c72ec525e6ebfa56154"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTozNTo1M1rOHkUxow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTozNzoyMFrOHkU18g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg1MTE3MQ==", "bodyText": "Why do you move this ping into the else block? This should be as what it was.", "url": "https://github.com/apache/skywalking/pull/5688#discussion_r507851171", "createdAt": "2020-10-19T15:35:53Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaServiceManagementServiceClient.java", "diffHunk": "@@ -85,28 +87,32 @@ public void boot() {\n             this,\n             t -> LOGGER.error(\"unexpected exception.\", t)\n         ), 0, Config.Collector.HEARTBEAT_PERIOD, TimeUnit.SECONDS);\n-\n-        InstanceProperties instance = InstanceProperties.newBuilder()\n-                                                        .setService(Config.Agent.SERVICE_NAME)\n-                                                        .setServiceInstance(Config.Agent.INSTANCE_NAME)\n-                                                        .addAllProperties(OSUtil.buildOSInfo(\n-                                                            Config.OsInfo.IPV4_LIST_SIZE))\n-                                                        .addAllProperties(SERVICE_INSTANCE_PROPERTIES)\n-                                                        .build();\n-        producer.send(new ProducerRecord<>(topic, TOPIC_KEY_REGISTER + instance.getServiceInstance(), Bytes.wrap(instance.toByteArray())));\n-        producer.flush();\n     }\n \n     @Override\n     public void run() {\n-        InstancePingPkg ping = InstancePingPkg.newBuilder()\n-                                              .setService(Config.Agent.SERVICE_NAME)\n-                                              .setServiceInstance(Config.Agent.INSTANCE_NAME)\n-                                              .build();\n-        if (LOGGER.isDebugEnable()) {\n-            LOGGER.debug(\"Heartbeat reporting, instance: {}\", ping.getServiceInstance());\n+        if (Math.abs(sendPropertiesCounter.getAndAdd(1)) % Config.Collector.TIMES_SEND_PROPERTIES == 0) {\n+            InstanceProperties instance = InstanceProperties.newBuilder()\n+                                                            .setService(Config.Agent.SERVICE_NAME)\n+                                                            .setServiceInstance(Config.Agent.INSTANCE_NAME)\n+                                                            .addAllProperties(OSUtil.buildOSInfo(\n+                                                                Config.OsInfo.IPV4_LIST_SIZE))\n+                                                            .addAllProperties(SERVICE_INSTANCE_PROPERTIES)\n+                                                            .build();\n+            producer.send(new ProducerRecord<>(topic, TOPIC_KEY_REGISTER + instance.getServiceInstance(),\n+                                               Bytes.wrap(instance.toByteArray())\n+            ));\n+            producer.flush();\n+        } else {\n+            InstancePingPkg ping = InstancePingPkg.newBuilder()\n+                                                  .setService(Config.Agent.SERVICE_NAME)\n+                                                  .setServiceInstance(Config.Agent.INSTANCE_NAME)\n+                                                  .build();\n+            if (LOGGER.isDebugEnable()) {\n+                LOGGER.debug(\"Heartbeat reporting, instance: {}\", ping.getServiceInstance());\n+            }\n+            producer.send(new ProducerRecord<>(topic, ping.getServiceInstance(), Bytes.wrap(ping.toByteArray())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327337b8b3c79ffb67eb3c72ec525e6ebfa56154"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg1MjI3NA==", "bodyText": "It's hard to express this config item properly, but this statement is abs. not what you really mean, according to the logic, it should be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `collector.times_send_properties`|How many times do report a properties to the backend, Each time interval is {@link Collector#HEARTBEAT_PERIOD} |`10`|\n          \n          \n            \n            `collector.times_send_properties`|The agent sends the instance properties to the backend every `collector.heartbeat_period * collector.times_send_properties` seconds |`10`|", "url": "https://github.com/apache/skywalking/pull/5688#discussion_r507852274", "createdAt": "2020-10-19T15:37:20Z", "author": {"login": "kezhenxu94"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -89,6 +89,7 @@ property key | Description | Default |\n `osinfo.ipv4_list_size`| Limit the length of the ipv4 list size. |`10`|\n `collector.grpc_channel_check_interval`|grpc channel status check interval.|`30`|\n `collector.heartbeat_period`|agent heartbeat report period. Unit, second.|`30`|\n+`collector.times_send_properties`|How many times do report a properties to the backend, Each time interval is {@link Collector#HEARTBEAT_PERIOD} |`10`|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327337b8b3c79ffb67eb3c72ec525e6ebfa56154"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9210c29e2e1ee4bc295d8d3583dda6016433d9a4", "author": {"user": {"login": "zifeihan", "name": "zifeihan"}}, "url": "https://github.com/apache/skywalking/commit/9210c29e2e1ee4bc295d8d3583dda6016433d9a4", "committedDate": "2020-10-20T02:19:52Z", "message": "Polishing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2981322f03748382713c60d89a328eda0394d581", "author": {"user": {"login": "zifeihan", "name": "zifeihan"}}, "url": "https://github.com/apache/skywalking/commit/2981322f03748382713c60d89a328eda0394d581", "committedDate": "2020-10-20T02:23:13Z", "message": "rename config `collector.times_send_properties` to `collector.properties_report_period_factor`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjkwMDY4", "url": "https://github.com/apache/skywalking/pull/5688#pullrequestreview-512290068", "createdAt": "2020-10-20T02:41:09Z", "commit": {"oid": "2981322f03748382713c60d89a328eda0394d581"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMjo0MTowOVrOHkofDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMjo0MTowOVrOHkofDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE3NDA5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * The agent sends the instance properties to the backend every `collector.heartbeat_period * collector.times_send_properties` seconds\n          \n          \n            \n                     * The agent sends the instance properties to the backend every `collector.heartbeat_period * collector.properties_report_period_factor` seconds", "url": "https://github.com/apache/skywalking/pull/5688#discussion_r508174094", "createdAt": "2020-10-20T02:41:09Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -142,6 +142,10 @@\n          * The period in which the agent report a heartbeat to the backend.\n          */\n         public static long HEARTBEAT_PERIOD = 30;\n+        /**\n+         * The agent sends the instance properties to the backend every `collector.heartbeat_period * collector.times_send_properties` seconds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2981322f03748382713c60d89a328eda0394d581"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1e2b8e1c28311598d87f36782f6095f818d11ac", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/b1e2b8e1c28311598d87f36782f6095f818d11ac", "committedDate": "2020-10-20T02:47:03Z", "message": "Merge remote-tracking branch 'origin/master' into hanfei"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94856f8d2ba3e14d3316ac0d14222ac60cb7ba29", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/94856f8d2ba3e14d3316ac0d14222ac60cb7ba29", "committedDate": "2020-10-20T02:48:31Z", "message": "Fix JavaDoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjkyNjQ1", "url": "https://github.com/apache/skywalking/pull/5688#pullrequestreview-512292645", "createdAt": "2020-10-20T02:49:11Z", "commit": {"oid": "94856f8d2ba3e14d3316ac0d14222ac60cb7ba29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzA5NTI3", "url": "https://github.com/apache/skywalking/pull/5688#pullrequestreview-512309527", "createdAt": "2020-10-20T03:43:09Z", "commit": {"oid": "94856f8d2ba3e14d3316ac0d14222ac60cb7ba29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1540, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}