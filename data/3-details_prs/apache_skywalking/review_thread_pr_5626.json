{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MjAwODQx", "number": 5626, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwODoyOTozMlrOEqAINQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwODozNToyNVrOEqAJSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDc3NzQ5OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/JDBCPluginConfig.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwODoyOTozMlrOHcAY2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwNDo0MjowNlrOHcFErw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODUzNw==", "bodyText": "I think we missed an annotation for this, this config would never be initialized. :)\nAlso, MySQL/POSTGRESQL/MARIADB seems the same, is there any reason to separate them? @ascrutae. I think the only case is, an app is using 2 kinds of DB, but wants to trace one but not for the other. Is this really reasonable?", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499128537", "createdAt": "2020-10-03T08:29:32Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/JDBCPluginConfig.java", "diffHunk": "@@ -53,6 +60,13 @@\n              * Set a negative number to save the complete parameter string to the tag.\n              */\n             public static int SQL_PARAMETERS_MAX_LENGTH = 512;\n+            /**\n+             * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first\n+             * {@code SQL_BODY_MAX_LENGTH} characters.\n+             * <p>\n+             * Set a negative number to save the complete sql body to the tag.\n+             */\n+            public static int SQL_BODY_MAX_LENGTH = 2048;\n         }\n \n         public static class MARIADB {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzNjI3Ng==", "bodyText": "Yes,  you found a \ud83d\udc1b , So can I uniform  MySQL/POSTGRESQL/MARIADB  config to a single one ?\nfor blew config\n\nTRACE_SQL_PARAMETERS\nSQL_PARAMETERS_MAX_LENGTH\nSQL_BODY_MAX_LENGTH", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499136276", "createdAt": "2020-10-03T10:28:27Z", "author": {"login": "xbkaishui"}, "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/JDBCPluginConfig.java", "diffHunk": "@@ -53,6 +60,13 @@\n              * Set a negative number to save the complete parameter string to the tag.\n              */\n             public static int SQL_PARAMETERS_MAX_LENGTH = 512;\n+            /**\n+             * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first\n+             * {@code SQL_BODY_MAX_LENGTH} characters.\n+             * <p>\n+             * Set a negative number to save the complete sql body to the tag.\n+             */\n+            public static int SQL_BODY_MAX_LENGTH = 2048;\n         }\n \n         public static class MARIADB {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODUzNw=="}, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MTYxMQ==", "bodyText": "I prefer so, waiting for @ascrutae 's idea.", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499141611", "createdAt": "2020-10-03T11:54:26Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/JDBCPluginConfig.java", "diffHunk": "@@ -53,6 +60,13 @@\n              * Set a negative number to save the complete parameter string to the tag.\n              */\n             public static int SQL_PARAMETERS_MAX_LENGTH = 512;\n+            /**\n+             * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first\n+             * {@code SQL_BODY_MAX_LENGTH} characters.\n+             * <p>\n+             * Set a negative number to save the complete sql body to the tag.\n+             */\n+            public static int SQL_BODY_MAX_LENGTH = 2048;\n         }\n \n         public static class MARIADB {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODUzNw=="}, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1MTY4Nw==", "bodyText": "Me too, +1", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499151687", "createdAt": "2020-10-03T14:18:27Z", "author": {"login": "ascrutae"}, "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/JDBCPluginConfig.java", "diffHunk": "@@ -53,6 +60,13 @@\n              * Set a negative number to save the complete parameter string to the tag.\n              */\n             public static int SQL_PARAMETERS_MAX_LENGTH = 512;\n+            /**\n+             * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first\n+             * {@code SQL_BODY_MAX_LENGTH} characters.\n+             * <p>\n+             * Set a negative number to save the complete sql body to the tag.\n+             */\n+            public static int SQL_BODY_MAX_LENGTH = 2048;\n         }\n \n         public static class MARIADB {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODUzNw=="}, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1MjY4Ng==", "bodyText": "@xbkaishui Seems these configs could be merged.", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499152686", "createdAt": "2020-10-03T14:31:22Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/JDBCPluginConfig.java", "diffHunk": "@@ -53,6 +60,13 @@\n              * Set a negative number to save the complete parameter string to the tag.\n              */\n             public static int SQL_PARAMETERS_MAX_LENGTH = 512;\n+            /**\n+             * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first\n+             * {@code SQL_BODY_MAX_LENGTH} characters.\n+             * <p>\n+             * Set a negative number to save the complete sql body to the tag.\n+             */\n+            public static int SQL_BODY_MAX_LENGTH = 2048;\n         }\n \n         public static class MARIADB {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODUzNw=="}, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NzAxMw==", "bodyText": "Ok, will change", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499157013", "createdAt": "2020-10-03T15:25:13Z", "author": {"login": "xbkaishui"}, "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/JDBCPluginConfig.java", "diffHunk": "@@ -53,6 +60,13 @@\n              * Set a negative number to save the complete parameter string to the tag.\n              */\n             public static int SQL_PARAMETERS_MAX_LENGTH = 512;\n+            /**\n+             * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first\n+             * {@code SQL_BODY_MAX_LENGTH} characters.\n+             * <p>\n+             * Set a negative number to save the complete sql body to the tag.\n+             */\n+            public static int SQL_BODY_MAX_LENGTH = 2048;\n         }\n \n         public static class MARIADB {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODUzNw=="}, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIwNTI5NQ==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499205295", "createdAt": "2020-10-04T04:42:06Z", "author": {"login": "xbkaishui"}, "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/JDBCPluginConfig.java", "diffHunk": "@@ -53,6 +60,13 @@\n              * Set a negative number to save the complete parameter string to the tag.\n              */\n             public static int SQL_PARAMETERS_MAX_LENGTH = 512;\n+            /**\n+             * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first\n+             * {@code SQL_BODY_MAX_LENGTH} characters.\n+             * <p>\n+             * Set a negative number to save the complete sql body to the tag.\n+             */\n+            public static int SQL_BODY_MAX_LENGTH = 2048;\n         }\n \n         public static class MARIADB {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODUzNw=="}, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDc3OTk0OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/SqlBodyBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwODozNDo0MFrOHcAaBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwNDo0MjoxM1rOHcFEtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODgzNw==", "bodyText": "If MySQL/POSTGRESQL/MARIADB configs are going to be merged, then we don't need to initial this class every time.", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499128837", "createdAt": "2020-10-03T08:34:40Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/SqlBodyBuilder.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.jdbc;\n+\n+public class SqlBodyBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIwNTMwMA==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499205300", "createdAt": "2020-10-04T04:42:13Z", "author": {"login": "xbkaishui"}, "path": "apm-sniffer/apm-sdk-plugin/jdbc-commons/src/main/java/org/apache/skywalking/apm/plugin/jdbc/SqlBodyBuilder.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.jdbc;\n+\n+public class SqlBodyBuilder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODgzNw=="}, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDc4MDI3OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/service-agent/java-agent/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwODozNToyNVrOHcAaLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQwNDo0MjoxOVrOHcFEtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODg3OQ==", "bodyText": "Config doc relates to the conclusion about the MySQL/POSTGRESQL/MARIADB config.", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499128879", "createdAt": "2020-10-03T08:35:25Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -123,10 +123,13 @@ property key | Description | Default |\n `plugin.toolit.use_qualified_name_as_operation_name`|If true, the fully qualified method name will be used as the operation name instead of the given operation name, default is false.|`false`|\n `plugin.mysql.trace_sql_parameters`|If set to true, the parameters of the sql (typically `java.sql.PreparedStatement`) would be collected.|`false`|\n `plugin.mysql.sql_parameters_max_length`|If set to positive number, the `db.sql.parameters` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`512`|\n+`plugin.mysql.sql_body_max_length`|If set to positive number, the `db.statement` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`2048`|\n `plugin.postgresql.trace_sql_parameters`|If set to true, the parameters of the sql (typically `java.sql.PreparedStatement`) would be collected.|`false`|\n `plugin.postgresql.sql_parameters_max_length`|If set to positive number, the `db.sql.parameters` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`512`|\n+`plugin.postgresql.sql_body_max_length`|If set to positive number, the `db.statement` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`2048`|\n `plugin.mariadb.trace_sql_parameters`|If set to true, the parameters of the sql (typically `java.sql.PreparedStatement`) would be collected.|`false`|\n `plugin.mariadb.sql_parameters_max_length`|If set to positive number, the `db.sql.parameters` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`512`|\n+`plugin.mariadb.sql_body_max_length`|If set to positive number, the `db.statement` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`2048`|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIwNTMwMg==", "bodyText": "done", "url": "https://github.com/apache/skywalking/pull/5626#discussion_r499205302", "createdAt": "2020-10-04T04:42:19Z", "author": {"login": "xbkaishui"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -123,10 +123,13 @@ property key | Description | Default |\n `plugin.toolit.use_qualified_name_as_operation_name`|If true, the fully qualified method name will be used as the operation name instead of the given operation name, default is false.|`false`|\n `plugin.mysql.trace_sql_parameters`|If set to true, the parameters of the sql (typically `java.sql.PreparedStatement`) would be collected.|`false`|\n `plugin.mysql.sql_parameters_max_length`|If set to positive number, the `db.sql.parameters` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`512`|\n+`plugin.mysql.sql_body_max_length`|If set to positive number, the `db.statement` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`2048`|\n `plugin.postgresql.trace_sql_parameters`|If set to true, the parameters of the sql (typically `java.sql.PreparedStatement`) would be collected.|`false`|\n `plugin.postgresql.sql_parameters_max_length`|If set to positive number, the `db.sql.parameters` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`512`|\n+`plugin.postgresql.sql_body_max_length`|If set to positive number, the `db.statement` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`2048`|\n `plugin.mariadb.trace_sql_parameters`|If set to true, the parameters of the sql (typically `java.sql.PreparedStatement`) would be collected.|`false`|\n `plugin.mariadb.sql_parameters_max_length`|If set to positive number, the `db.sql.parameters` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`512`|\n+`plugin.mariadb.sql_body_max_length`|If set to positive number, the `db.statement` would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.|`2048`|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyODg3OQ=="}, "originalCommit": {"oid": "d13f4a110845878f850913c1a0c46b572614f09c"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4876, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}