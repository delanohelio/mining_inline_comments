{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NzE3NTI3", "number": 4847, "title": "Provide kafka as collector/reporter", "bodyText": "Please answer these questions before submitting pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.\n\n\nIntroduce Kafka as Agent Reporter and OAP Receiver, which are optional plugins.\nAgent still needs GRPC when it is an interactive case. (Agent get the Profile Task List. But ProfileThreadSnapshot is reported by MQ)\nCurrently, it is missing cluster(it is coming soon) and e2e test.", "createdAt": "2020-06-01T02:31:16Z", "url": "https://github.com/apache/skywalking/pull/4847", "merged": true, "mergeCommit": {"oid": "f9257f5274f6a55e8bf8424444707aecf7a1f2c1"}, "closed": true, "closedAt": "2020-07-30T03:55:50Z", "author": {"login": "dmsolr"}, "timelineItems": {"totalCount": 129, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5NQ8HAH2gAyNDI1NzE3NTI3OjljZWRhZjg4OGI0OWFmYWRkOTZiMjQ0MDJjNGQ0MzhiMzZjOGZjOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc53b_XgFqTQ1ODA1MzY5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9cedaf888b49afadd96b24402c4d438b36c8fc93", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/9cedaf888b49afadd96b24402c4d438b36c8fc93", "committedDate": "2020-07-28T02:47:02Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dde229232c508c24468006d5bcf936957d617b28", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/dde229232c508c24468006d5bcf936957d617b28", "committedDate": "2020-07-28T03:55:02Z", "message": "test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb447cf831e48523230428496775469fca3976f1", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/bb447cf831e48523230428496775469fca3976f1", "committedDate": "2020-07-28T06:11:58Z", "message": "test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261dea10991b08ba3a940090d176709c79eeebc5", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/261dea10991b08ba3a940090d176709c79eeebc5", "committedDate": "2020-07-28T08:01:14Z", "message": "e2e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "021d6b342278019f38aea3df1b0141f6eb6ca24b", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/021d6b342278019f38aea3df1b0141f6eb6ca24b", "committedDate": "2020-07-28T09:09:58Z", "message": "fix e2e"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NDkxODc2", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-456491876", "createdAt": "2020-07-28T10:10:15Z", "commit": {"oid": "021d6b342278019f38aea3df1b0141f6eb6ca24b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDoxMDoxNVrOG4F7-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDoxMjoyN1rOG4GBEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ3MDcxNQ==", "bodyText": "This doc has not been linked from java-agent/README.md. It should be a separate section after ## Advanced Features\n## Advanced Reporters\n* Use Kafka to transport the traces, JVM metrics, instance properties, and profiled snapshots to the backend. Read the [doc](How-to-enable-kafka-reporter.md) for more details.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r461470715", "createdAt": "2020-07-28T10:10:15Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/How-to-enable-kafka-reporter.md", "diffHunk": "@@ -0,0 +1,16 @@\n+# How to enable Kafka Reporter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "021d6b342278019f38aea3df1b0141f6eb6ca24b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ3MjAxOA==", "bodyText": "After this, you should add.\nAfter you activated the Kafka reporter, you need to open [Kafka fetcher] (link to the fetcher doc) at the OAP side.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r461472018", "createdAt": "2020-07-28T10:12:27Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/How-to-enable-kafka-reporter.md", "diffHunk": "@@ -0,0 +1,16 @@\n+# How to enable Kafka Reporter\n+\n+The Kafka reporter plugin support report traces, JVM metrics, Instance Properties, and profiled snapshots to Kafka cluster, which is disabled in default. Move the jar of the plugin from `optional-reporter-plugins` to `reporter-plugins` for activating.\n+\n+Notice, currently, the agent still needs to configure GRPC receiver for delivering the task of profiling. In other words, the following configure cannot be omitted.\n+\n+```properties\n+# Backend service addresses.\n+collector.backend_service=${SW_AGENT_COLLECTOR_BACKEND_SERVICES:127.0.0.1:11800}\n+\n+# Kafka producer configuration\n+plugin.kafka.bootstrap_servers=${SW_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}\n+plugin.kafka.consumer_config[delivery.timeout.ms]=12000\n+```\n+\n+Kafka reporter plugin support to customize all configurations of listed in [here](http://kafka.apache.org/24/documentation.html#producerconfigs).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "021d6b342278019f38aea3df1b0141f6eb6ca24b"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22b3477767a80b513a16e70857dc52af8b6e37ee", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/22b3477767a80b513a16e70857dc52af8b6e37ee", "committedDate": "2020-07-28T11:26:58Z", "message": "separate meter process to analyzer module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87063ef6ce89e867e0401c04db473f079f0064e5", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/87063ef6ce89e867e0401c04db473f079f0064e5", "committedDate": "2020-07-28T11:34:32Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf12057895bfc414c817ff18cb36ebd5a341e392", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/cf12057895bfc414c817ff18cb36ebd5a341e392", "committedDate": "2020-07-28T11:59:13Z", "message": "fix service name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab1b1e47baa2693f4004dbee92972a6424e32040", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/ab1b1e47baa2693f4004dbee92972a6424e32040", "committedDate": "2020-07-28T15:48:57Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2177298ff495042a3d13ef0af2ea5ad5b7e2e052", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/2177298ff495042a3d13ef0af2ea5ad5b7e2e052", "committedDate": "2020-07-28T17:14:37Z", "message": "fix profiling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90c6e6a76a0c41248f044915a74a54b82c98dca1", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/90c6e6a76a0c41248f044915a74a54b82c98dca1", "committedDate": "2020-07-28T19:27:55Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd591f7c3539c02e997f9c1f150ba08b0a6f76d0", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/cd591f7c3539c02e997f9c1f150ba08b0a6f76d0", "committedDate": "2020-07-29T02:34:08Z", "message": "polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9d72fd72e70e104ba76ce2a6ee3f8cc7142ce95", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/f9d72fd72e70e104ba76ce2a6ee3f8cc7142ce95", "committedDate": "2020-07-29T03:29:49Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ee9545a37c48eb4090b19753a26d355afaa3ba1", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/9ee9545a37c48eb4090b19753a26d355afaa3ba1", "committedDate": "2020-07-29T04:28:56Z", "message": "submodule updated & fetch meter data in batch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6344e9d924ea42cfeeb2666c7478f137a277f3e7", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/6344e9d924ea42cfeeb2666c7478f137a277f3e7", "committedDate": "2020-07-29T06:21:31Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03fa7aa59aeb1602079d217ff8c9ede9de2a495c", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/03fa7aa59aeb1602079d217ff8c9ede9de2a495c", "committedDate": "2020-07-29T08:11:16Z", "message": "fix profiling e2e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07a89233061678201f1e36b33bd617b2f3e5b066", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/07a89233061678201f1e36b33bd617b2f3e5b066", "committedDate": "2020-07-29T09:14:57Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc3fdd9267b985c95cf86468b0105df16bac6c75", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/dc3fdd9267b985c95cf86468b0105df16bac6c75", "committedDate": "2020-07-29T10:01:34Z", "message": "typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b81d0d6e0f12c00a2067800f3a086929b3aa1eb9", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/b81d0d6e0f12c00a2067800f3a086929b3aa1eb9", "committedDate": "2020-07-29T11:26:23Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adb4744713030de17d0dd3a27dc590c69b730840", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/adb4744713030de17d0dd3a27dc590c69b730840", "committedDate": "2020-07-29T16:36:19Z", "message": "update docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b90d47077addb8392a3cb1d9fb4710a54a6f20f", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/0b90d47077addb8392a3cb1d9fb4710a54a6f20f", "committedDate": "2020-07-29T16:50:41Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b90d2ee71e1378212df073a69225a035735153c", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/1b90d2ee71e1378212df073a69225a035735153c", "committedDate": "2020-07-29T17:41:54Z", "message": "coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f8bfff27b7b3e7378d2b12ee6f038e1fabace18", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/5f8bfff27b7b3e7378d2b12ee6f038e1fabace18", "committedDate": "2020-07-29T23:33:28Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTcxMTUy", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-457971152", "createdAt": "2020-07-29T23:44:28Z", "commit": {"oid": "5f8bfff27b7b3e7378d2b12ee6f038e1fabace18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0NDoyOFrOG5OBcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo0NDoyOFrOG5OBcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MTc2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Use Kafka to transport the traces, JVM metrics, instance properties, and profiled snapshots to the backend. Read the [How to enable Kafka Reporter](How-to-enable-kafka-reporter.md) for more details.\n          \n          \n            \n            \n          \n          \n            \n            ## Advanced Reporters\n          \n          \n            \n            The advanced report provides an alternative way to submit the agent collected data to the backend. All of them are in the `optional-reporter-plugins` folder, move the one you needed into the `reporter-plugins` folder for the activation. **Notice, don't try to activate multiple reporters, that could cause unexpected fatal errors.**\n          \n          \n            \n            \n          \n          \n            \n            * Use Kafka to transport the traces, JVM metrics, instance properties, and profiled snapshots to the backend. Read the [How to enable Kafka Reporter](How-to-enable-kafka-reporter.md) for more details.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r462651760", "createdAt": "2020-07-29T23:44:28Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -172,6 +174,7 @@ Now, we have the following known bootstrap plugins.\n     * If you want to forward MicroMeter/Spring Sleuth metrics to Meter System, use [SkyWalking MicroMeter Register](Application-toolkit-micrometer.md).\n     * If you want to use OpenTracing Java APIs, try [SkyWalking OpenTracing compatible tracer](Opentracing.md). More details you could find at http://opentracing.io\n * If you want to specify the path of your agent.config file. Read [set config file through system properties](Specified-agent-config.md)\n+* Use Kafka to transport the traces, JVM metrics, instance properties, and profiled snapshots to the backend. Read the [How to enable Kafka Reporter](How-to-enable-kafka-reporter.md) for more details.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f8bfff27b7b3e7378d2b12ee6f038e1fabace18"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTg2MDE5", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-457986019", "createdAt": "2020-07-30T00:30:02Z", "commit": {"oid": "5f8bfff27b7b3e7378d2b12ee6f038e1fabace18"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "299601f76ebdac81b4697116e301782aa0692978", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/299601f76ebdac81b4697116e301782aa0692978", "committedDate": "2020-07-30T01:20:42Z", "message": "Update docs/en/setup/service-agent/java-agent/README.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MDIwNTgy", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-458020582", "createdAt": "2020-07-30T01:58:38Z", "commit": {"oid": "299601f76ebdac81b4697116e301782aa0692978"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MDUzNjk5", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-458053699", "createdAt": "2020-07-30T03:55:07Z", "commit": {"oid": "299601f76ebdac81b4697116e301782aa0692978"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be6dada18cd520e4bc9f963a6be3053d9c11d679", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/be6dada18cd520e4bc9f963a6be3053d9c11d679", "committedDate": "2020-05-31T19:22:02Z", "message": "provide kafka as collector/reporter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTcwMjUy", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-421570252", "createdAt": "2020-06-01T03:02:03Z", "commit": {"oid": "be6dada18cd520e4bc9f963a6be3053d9c11d679"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzowMjowM1rOGc9obw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzowNzowM1rOGc9rpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyMzA4Nw==", "bodyText": "I think we should share the backend service, and the kafka sender could be activated automatically through the same agent plugin activation way(copy).", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r433023087", "createdAt": "2020-06-01T03:02:03Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/config/agent.config", "diffHunk": "@@ -78,3 +78,6 @@ logging.level=${SW_LOGGING_LEVEL:INFO}\n \n # mysql plugin configuration\n # plugin.mysql.trace_sql_parameters=${SW_MYSQL_TRACE_SQL_PARAMETERS:false}\n+\n+# Kafka producer configuration\n+# collector.kafka.bootstrap_servers=${SW_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be6dada18cd520e4bc9f963a6be3053d9c11d679"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyMzM4OQ==", "bodyText": "Why this is provided? If this is provided, you wouldn't have the Kafka-clients at the runtime, as the agent core doesn't include those.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r433023389", "createdAt": "2020-06-01T03:03:47Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/optional-producer-plugins/kafka-producer-plugin/pom.xml", "diffHunk": "@@ -0,0 +1,58 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>optional-producer-plugins</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>kafka-producer-plugin</artifactId>\n+    <packaging>jar</packaging>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-agent-core</artifactId>\n+            <version>${project.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-util</artifactId>\n+            <version>${project.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-test-tools</artifactId>\n+            <version>${project.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.kafka</groupId>\n+            <artifactId>kafka-clients</artifactId>\n+            <version>2.3.1</version>\n+            <scope>provided</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be6dada18cd520e4bc9f963a6be3053d9c11d679"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyMzQ2Nw==", "bodyText": "Why remove toolkit?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r433023467", "createdAt": "2020-06-01T03:04:19Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/pom.xml", "diffHunk": "@@ -32,10 +32,8 @@\n         <module>apm-agent</module>\n         <module>apm-agent-core</module>\n         <module>apm-sdk-plugin</module>\n-        <module>apm-toolkit-activation</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be6dada18cd520e4bc9f963a6be3053d9c11d679"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyMzU3Mw==", "bodyText": "Kafka version should be managed in the oap level pom.xml", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r433023573", "createdAt": "2020-06-01T03:04:58Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/kafka-receiver-plugin/pom.xml", "diffHunk": "@@ -0,0 +1,48 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>skywalking-mq-receiver-plugins</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>kafka-receiver-plugin</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.kafka</groupId>\n+            <artifactId>kafka-clients</artifactId>\n+            <version>2.4.1</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be6dada18cd520e4bc9f963a6be3053d9c11d679"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyMzY4OA==", "bodyText": "Why shade the bytebuddy?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r433023688", "createdAt": "2020-06-01T03:05:36Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/optional-producer-plugins/pom.xml", "diffHunk": "@@ -0,0 +1,144 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>apm-sniffer</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>optional-producer-plugins</artifactId>\n+    <packaging>pom</packaging>\n+\n+    <modules>\n+        <module>kafka-producer-plugin</module>\n+    </modules>\n+\n+    <properties>\n+        <shade.net.bytebuddy.source>net.bytebuddy</shade.net.bytebuddy.source>\n+        <shade.net.bytebuddy.target>${shade.package}.${shade.net.bytebuddy.source}</shade.net.bytebuddy.target>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\n+        <sdk.plugin.related.dir/>\n+        <agent.package.dest.dir>${project.build.directory}${sdk.plugin.related.dir}/../../../../skywalking-agent\n+        </agent.package.dest.dir>\n+        <bootstrap.plugin.dest.dir>${agent.package.dest.dir}/mq-reporter-plugins</bootstrap.plugin.dest.dir>\n+\n+        <ant-contrib.version>1.0b3</ant-contrib.version>\n+        <ant-nodeps.version>1.8.1</ant-nodeps.version>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-agent-core</artifactId>\n+            <version>${project.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-util</artifactId>\n+            <version>${project.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-test-tools</artifactId>\n+            <version>${project.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <artifactId>maven-shade-plugin</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be6dada18cd520e4bc9f963a6be3053d9c11d679"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyMzkxMA==", "bodyText": "From the Config, you have implemented the JVM, trace and profile, so, I think when this plugin activated, there is no need to have grpc endpoint, right?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r433023910", "createdAt": "2020-06-01T03:07:03Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/config/agent.config", "diffHunk": "@@ -78,3 +78,6 @@ logging.level=${SW_LOGGING_LEVEL:INFO}\n \n # mysql plugin configuration\n # plugin.mysql.trace_sql_parameters=${SW_MYSQL_TRACE_SQL_PARAMETERS:false}\n+\n+# Kafka producer configuration\n+# collector.kafka.bootstrap_servers=${SW_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyMzA4Nw=="}, "originalCommit": {"oid": "be6dada18cd520e4bc9f963a6be3053d9c11d679"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16b8f7be0c067a6acb8d25d3f34465fc4daa65b9", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/16b8f7be0c067a6acb8d25d3f34465fc4daa65b9", "committedDate": "2020-06-02T12:38:21Z", "message": "fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MTMzNjU1", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-425133655", "createdAt": "2020-06-05T09:17:28Z", "commit": {"oid": "16b8f7be0c067a6acb8d25d3f34465fc4daa65b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwOToxNzoyOFrOGfm38A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwOToxNzoyOFrOGfm38A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc5NTk1Mg==", "bodyText": "need try catch exception and send trace data by async way? put to buffer, and consume to send by kafka, just advice.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r435795952", "createdAt": "2020-06-05T09:17:28Z", "author": {"login": "zifeihan"}, "path": "apm-sniffer/optional-producer-plugins/kafka-producer-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentService.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerRecord;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.agent.core.boot.BootService;\n+import org.apache.skywalking.apm.agent.core.boot.OverrideImplementor;\n+import org.apache.skywalking.apm.agent.core.boot.ServiceManager;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+import org.apache.skywalking.apm.agent.core.context.TracingContext;\n+import org.apache.skywalking.apm.agent.core.context.TracingContextListener;\n+import org.apache.skywalking.apm.agent.core.context.trace.TraceSegment;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.remote.TraceSegmentServiceClient;\n+import org.apache.skywalking.apm.network.language.agent.v3.SegmentObject;\n+\n+@OverrideImplementor(TraceSegmentServiceClient.class)\n+public class KafkaTraceSegmentService implements BootService, TracingContextListener {\n+    private static final ILog logger = LogManager.getLogger(KafkaTraceSegmentService.class);\n+\n+    private String topic;\n+    private KafkaProducer<String, Bytes> producer;\n+\n+    @Override\n+    public void prepare() throws Throwable {\n+        topic = Config.Collector.Kafka.TOPIC_SEGMENT;\n+    }\n+\n+    @Override\n+    public void boot() throws Throwable {\n+        producer = ServiceManager.INSTANCE.findService(MessageQueueServiceManagement.class).getProducer(topic);\n+    }\n+\n+    @Override\n+    public void onComplete() throws Throwable {\n+        TracingContext.ListenerManager.add(this);\n+    }\n+\n+    @Override\n+    public void shutdown() throws Throwable {\n+        TracingContext.ListenerManager.remove(this);\n+    }\n+\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16b8f7be0c067a6acb8d25d3f34465fc4daa65b9"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/cb758d229092c00475ecfd8754712731ece9a575", "committedDate": "2020-06-19T03:43:45Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzgyMDk1", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-435382095", "createdAt": "2020-06-23T01:41:09Z", "commit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMTo0MjoxM1rOGnWW5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMjoyNzo0NlrOGnXFXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxMzk1Nw==", "bodyText": "How are these topic(s) created?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443913957", "createdAt": "2020-06-23T01:42:13Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -140,6 +140,25 @@\n          * Get profile task list interval\n          */\n         public static int GET_PROFILE_TASK_INTERVAL = 20;\n+\n+        public static class Kafka {\n+\n+            public static String BOOTSTRAP_SERVERS;\n+\n+            public static int BATCH_SIZE = 1000;\n+\n+            public static String ACKS = \"1\";\n+\n+            public static String TOPIC_METRICS = \"skywalking-metrics\";\n+\n+            public static String TOPIC_PROFILING = \"skywalking-profiling\";\n+\n+            public static String TOPIC_SEGMENT = \"skywalking-segment\";\n+\n+            public static String TOPIC_MANAGEMENT = \"skywalking-management\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxNDEyNQ==", "bodyText": "Why change this? Who will create new Tracing Context?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443914125", "createdAt": "2020-06-23T01:42:47Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/TracingContext.java", "diffHunk": "@@ -116,7 +116,7 @@\n     /**\n      * Initialize all fields with default value.\n      */\n-    TracingContext(String firstOPName) {\n+    public TracingContext(String firstOPName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxNDUxNQ==", "bodyText": "Comments are required.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443914515", "createdAt": "2020-06-23T01:44:15Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/jvm/JVMServiceSender.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.jvm;\n+\n+import org.apache.skywalking.apm.agent.core.boot.BootService;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetric;\n+\n+public interface JVMServiceSender extends BootService, Runnable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxNTA2Mw==", "bodyText": "I think this should be JVMServiceGrpcSender", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443915063", "createdAt": "2020-06-23T01:46:22Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/jvm/JVMServiceSenderImpl.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.jvm;\n+\n+import io.grpc.Channel;\n+import java.util.LinkedList;\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.skywalking.apm.agent.core.boot.DefaultImplementor;\n+import org.apache.skywalking.apm.agent.core.boot.ServiceManager;\n+import org.apache.skywalking.apm.agent.core.commands.CommandService;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelListener;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelManager;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelStatus;\n+import org.apache.skywalking.apm.network.common.v3.Commands;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetric;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetricCollection;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetricReportServiceGrpc;\n+\n+import static org.apache.skywalking.apm.agent.core.conf.Config.Collector.GRPC_UPSTREAM_TIMEOUT;\n+\n+@DefaultImplementor\n+public class JVMServiceSenderImpl implements JVMServiceSender, GRPCChannelListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxNjE5MQ==", "bodyText": "Where do we shade this dependency? And dist LICENSE/NOTICE/dep license files has to update, due to you include more things.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443916191", "createdAt": "2020-06-23T01:50:52Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/optional-producer-plugins/kafka-producer-plugin/pom.xml", "diffHunk": "@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>optional-producer-plugins</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>kafka-producer-plugin</artifactId>\n+    <packaging>jar</packaging>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-agent-core</artifactId>\n+            <version>${project.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-util</artifactId>\n+            <version>${project.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>apm-test-tools</artifactId>\n+            <version>${project.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.kafka</groupId>\n+            <artifactId>kafka-clients</artifactId>\n+            <version>${kafk-clients.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxODYxOA==", "bodyText": "What does this comment mean? What Rest API? All codes below are using Kafka related tech stack. Confusing.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443918618", "createdAt": "2020-06-23T01:59:38Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/optional-producer-plugins/kafka-producer-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaProfileTaskService.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import java.util.ArrayList;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerRecord;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.agent.core.boot.DefaultNamedThreadFactory;\n+import org.apache.skywalking.apm.agent.core.boot.OverrideImplementor;\n+import org.apache.skywalking.apm.agent.core.boot.ServiceManager;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.profile.ProfileTaskChannelService;\n+import org.apache.skywalking.apm.agent.core.profile.TracingThreadSnapshot;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelManager;\n+import org.apache.skywalking.apm.network.language.profile.v3.ThreadSnapshot;\n+import org.apache.skywalking.apm.util.RunnableWithExceptionProtection;\n+\n+/**\n+ * Considering that MessageQueue belongs to a decoupled architecture, therefore we do not support this. The MQ is not\n+ * good for real-time interactive. It will be implemented through Rest API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxOTY5MQ==", "bodyText": "Comments", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443919691", "createdAt": "2020-06-23T02:03:29Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/Config.java", "diffHunk": "@@ -140,6 +140,25 @@\n          * Get profile task list interval\n          */\n         public static int GET_PROFILE_TASK_INTERVAL = 20;\n+\n+        public static class Kafka {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMTgyNg==", "bodyText": "What is this? Why is there a config not from the official way?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443921826", "createdAt": "2020-06-23T02:11:39Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/optional-producer-plugins/kafka-producer-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/MessageQueueServiceManagement.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import java.util.Properties;\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.common.serialization.BytesSerializer;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.agent.core.boot.BootService;\n+import org.apache.skywalking.apm.agent.core.boot.DefaultImplementor;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+\n+@DefaultImplementor\n+public class MessageQueueServiceManagement implements BootService, Runnable {\n+    private static final ILog logger = LogManager.getLogger(MessageQueueServiceManagement.class);\n+    private KafkaProducer<String, Bytes> producer;\n+\n+    @Override\n+    public void prepare() {\n+        Properties properties = new Properties();\n+        properties.setProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, Config.Collector.Kafka.BOOTSTRAP_SERVERS);\n+        properties.setProperty(ProducerConfig.BATCH_SIZE_CONFIG, String.valueOf(Config.Collector.Kafka.BATCH_SIZE));\n+        properties.setProperty(ProducerConfig.ACKS_CONFIG, Config.Collector.Kafka.ACKS);\n+\n+        Config.Collector.Kafka.CONSUMER_CONFIG.forEach((k, v) -> properties.setProperty(k, v));\n+\n+        if (!properties.contains(\"max.block.ms\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMjUxMA==", "bodyText": "I think once you are opening receiver, this should take the responsibility of creating topic(s), right?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443922510", "createdAt": "2020-06-23T02:14:20Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/provider/KafkaReceiverProvider.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.configuration.api.ConfigurationModule;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.cluster.ClusterModule;\n+import org.apache.skywalking.oap.server.library.module.ModuleConfig;\n+import org.apache.skywalking.oap.server.library.module.ModuleDefine;\n+import org.apache.skywalking.oap.server.library.module.ModuleProvider;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+import org.apache.skywalking.oap.server.library.module.ServiceNotProvidedException;\n+import org.apache.skywalking.oap.server.receiver.kafka.KafkaReceiveHandlerRegister;\n+import org.apache.skywalking.oap.server.receiver.kafka.module.KafkaReceiverConfig;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.handler.JVMMetricsReceiveHandler;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.handler.KafkaManagementReceiveHandler;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.handler.TraceSegmentReceiveHandler;\n+import org.apache.skywalking.oap.server.receiver.mq.ReceiveHandlerRegister;\n+import org.apache.skywalking.oap.server.receiver.mq.module.MessageQueueReceiverModule;\n+import org.apache.skywalking.oap.server.receiver.sharing.server.SharingServerModule;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.TraceServiceModuleConfig;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.parser.SegmentParserListenerManager;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.parser.listener.MultiScopesAnalysisListener;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.parser.listener.NetworkAddressAliasMappingListener;\n+import org.apache.skywalking.oap.server.receiver.trace.provider.parser.listener.SegmentAnalysisListener;\n+import org.apache.skywalking.oap.server.telemetry.TelemetryModule;\n+\n+@Slf4j\n+public class KafkaReceiverProvider extends ModuleProvider {\n+    private KafkaReceiverConfig config;\n+    private KafkaReceiveHandlerRegister handlerRegister;\n+    private TraceServiceModuleConfig traceServiceModuleConfig;\n+\n+    public KafkaReceiverProvider() {\n+        config = new KafkaReceiverConfig();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"kafka\";\n+    }\n+\n+    @Override\n+    public Class<? extends ModuleDefine> module() {\n+        return MessageQueueReceiverModule.class;\n+    }\n+\n+    @Override\n+    public ModuleConfig createConfigBeanIfAbsent() {\n+        return config;\n+    }\n+\n+    @Override\n+    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n+        handlerRegister = new KafkaReceiveHandlerRegister(config);\n+        this.registerServiceImplementation(ReceiveHandlerRegister.class, handlerRegister);\n+    }\n+\n+    @Override\n+    public void start() throws ServiceNotProvidedException, ModuleStartException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMjYwNg==", "bodyText": "Unexpected logger,", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443922606", "createdAt": "2020-06-23T02:14:47Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/provider/dispatcher/JVMSourceDispatcher.java", "diffHunk": "@@ -0,0 +1,179 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider.dispatcher;\n+\n+import java.util.List;\n+import org.apache.skywalking.apm.network.common.v3.CPU;\n+import org.apache.skywalking.apm.network.language.agent.v3.GC;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetric;\n+import org.apache.skywalking.apm.network.language.agent.v3.Memory;\n+import org.apache.skywalking.apm.network.language.agent.v3.MemoryPool;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.analysis.IDManager;\n+import org.apache.skywalking.oap.server.core.analysis.NodeType;\n+import org.apache.skywalking.oap.server.core.analysis.TimeBucket;\n+import org.apache.skywalking.oap.server.core.source.GCPhrase;\n+import org.apache.skywalking.oap.server.core.source.MemoryPoolType;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMCPU;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMGC;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMMemory;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMMemoryPool;\n+import org.apache.skywalking.oap.server.core.source.SourceReceiver;\n+import org.apache.skywalking.oap.server.library.module.ModuleManager;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Copy from other receiver\n+ */\n+public class JVMSourceDispatcher {\n+    private static final Logger logger = LoggerFactory.getLogger(JVMSourceDispatcher.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMzQ5MQ==", "bodyText": "This comment doesn't make sense. If you want to say copy, that is mostly from another project, not ourselves.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443923491", "createdAt": "2020-06-23T02:18:27Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/provider/dispatcher/JVMSourceDispatcher.java", "diffHunk": "@@ -0,0 +1,179 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider.dispatcher;\n+\n+import java.util.List;\n+import org.apache.skywalking.apm.network.common.v3.CPU;\n+import org.apache.skywalking.apm.network.language.agent.v3.GC;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetric;\n+import org.apache.skywalking.apm.network.language.agent.v3.Memory;\n+import org.apache.skywalking.apm.network.language.agent.v3.MemoryPool;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.analysis.IDManager;\n+import org.apache.skywalking.oap.server.core.analysis.NodeType;\n+import org.apache.skywalking.oap.server.core.analysis.TimeBucket;\n+import org.apache.skywalking.oap.server.core.source.GCPhrase;\n+import org.apache.skywalking.oap.server.core.source.MemoryPoolType;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMCPU;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMGC;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMMemory;\n+import org.apache.skywalking.oap.server.core.source.ServiceInstanceJVMMemoryPool;\n+import org.apache.skywalking.oap.server.core.source.SourceReceiver;\n+import org.apache.skywalking.oap.server.library.module.ModuleManager;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Copy from other receiver", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyMzc5Mw==", "bodyText": "All handler names should be renamed to KafkaConsumer, as this is what you are doing.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443923793", "createdAt": "2020-06-23T02:19:42Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/provider/handler/JVMMetricsReceiveHandler.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider.handler;\n+\n+import com.google.protobuf.InvalidProtocolBufferException;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+import org.apache.kafka.common.TopicPartition;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.network.language.agent.v3.JVMMetricCollection;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.config.NamingLengthControl;\n+import org.apache.skywalking.oap.server.library.module.ModuleManager;\n+import org.apache.skywalking.oap.server.receiver.kafka.module.KafkaReceiverConfig;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.dispatcher.JVMSourceDispatcher;\n+\n+@Slf4j\n+public class JVMMetricsReceiveHandler implements KafkaReceiveHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyNTg1Mg==", "bodyText": "What is this for? Are all MQs same? I have doubts about this. What could be reused across these?\nFrom my understanding, the MQ consumers at the OAP side are about to use MQ native client API and transport them into the source, that is alll.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r443925852", "createdAt": "2020-06-23T02:27:46Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-mq-receiver-plugins/mq-receiver-common/pom.xml", "diffHunk": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>skywalking-mq-receiver-plugins</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>mq-receiver-common</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb758d229092c00475ecfd8754712731ece9a575"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03061059ce22e56a20540c1bd3b46412e0a64401", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/03061059ce22e56a20540c1bd3b46412e0a64401", "committedDate": "2020-07-01T18:18:45Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66421465122ad58ff947805221d72e5ff59ec60e", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/66421465122ad58ff947805221d72e5ff59ec60e", "committedDate": "2020-07-01T18:19:19Z", "message": "polish && unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb2534cf00aaf381f6d3e228de15d526583a1ba0", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/bb2534cf00aaf381f6d3e228de15d526583a1ba0", "committedDate": "2020-07-01T18:20:49Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a8d837cfc07fbe993513d8f8f9618bab8bc87e5", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/7a8d837cfc07fbe993513d8f8f9618bab8bc87e5", "committedDate": "2020-07-01T18:20:54Z", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d1ff444912d9c64c53aec4cecbdb2aa5d324638", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/6d1ff444912d9c64c53aec4cecbdb2aa5d324638", "committedDate": "2020-07-05T10:18:26Z", "message": "stash"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d02e91b4f858b33a5641a00ba7ee61bfd68bba22", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/d02e91b4f858b33a5641a00ba7ee61bfd68bba22", "committedDate": "2020-07-05T18:16:36Z", "message": "relocate kafka package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8ca761742b83ad80db892abd8af40ea95a014c4", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/b8ca761742b83ad80db892abd8af40ea95a014c4", "committedDate": "2020-07-06T02:29:42Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad228f279eaf8cffeccea245f25d1575d8a1ef25", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/ad228f279eaf8cffeccea245f25d1575d8a1ef25", "committedDate": "2020-07-06T03:03:11Z", "message": "fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1340dd0644841b4ac2fe7cf488ce777f1e9fb70", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/c1340dd0644841b4ac2fe7cf488ce777f1e9fb70", "committedDate": "2020-07-06T04:53:56Z", "message": "fix ut"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3fb02e9ca6b21e5f921411f40b2aad3e9d9fcb8", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/e3fb02e9ca6b21e5f921411f40b2aad3e9d9fcb8", "committedDate": "2020-07-06T08:23:19Z", "message": "set up e2e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22fd4430f31e79cc6cb993217226d157e175b022", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/22fd4430f31e79cc6cb993217226d157e175b022", "committedDate": "2020-07-08T05:57:24Z", "message": "enable e2e"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NDExNTk1", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-445411595", "createdAt": "2020-07-09T08:46:06Z", "commit": {"oid": "22fd4430f31e79cc6cb993217226d157e175b022"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODo0NjowNlrOGvHpLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODo0NjowNlrOGvHpLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2MTQ4Nw==", "bodyText": "This should not be a service, as no one will use this out of this module", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r452061487", "createdAt": "2020-07-09T08:46:06Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-kafka-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/kafka/KafkaReceiveHandlerRegister.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.Lists;\n+import io.netty.util.concurrent.DefaultThreadFactory;\n+import java.time.Duration;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Properties;\n+import java.util.concurrent.Executors;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.kafka.clients.consumer.ConsumerConfig;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+import org.apache.kafka.clients.consumer.ConsumerRecords;\n+import org.apache.kafka.clients.consumer.KafkaConsumer;\n+import org.apache.kafka.common.TopicPartition;\n+import org.apache.kafka.common.serialization.BytesDeserializer;\n+import org.apache.kafka.common.serialization.StringDeserializer;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.oap.server.library.module.Service;\n+import org.apache.skywalking.oap.server.receiver.kafka.module.KafkaReceiverConfig;\n+import org.apache.skywalking.oap.server.receiver.kafka.provider.handler.KafkaConsumerHandler;\n+\n+/**\n+ *\n+ */\n+@Slf4j\n+public class KafkaReceiveHandlerRegister implements Service, Runnable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22fd4430f31e79cc6cb993217226d157e175b022"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba0906d727c1d47a6b60459d974863b17b48bb79", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/ba0906d727c1d47a6b60459d974863b17b48bb79", "committedDate": "2020-07-09T16:18:50Z", "message": "polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f44e4f04a3c164af4f2e046da0ea21c6a7e76909", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/f44e4f04a3c164af4f2e046da0ea21c6a7e76909", "committedDate": "2020-07-10T05:20:50Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d3515a3a49f8e3af2be2fb81571c9e4a2739ab4", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/2d3515a3a49f8e3af2be2fb81571c9e4a2739ab4", "committedDate": "2020-07-10T19:27:54Z", "message": "polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7ef24e26fc262b0c6f3bb4e66b53edca7a3f745", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/c7ef24e26fc262b0c6f3bb4e66b53edca7a3f745", "committedDate": "2020-07-11T07:00:34Z", "message": "polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34797ab0dcf2d494774dca5863748546adb70a6d", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/34797ab0dcf2d494774dca5863748546adb70a6d", "committedDate": "2020-07-12T09:45:27Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4c4b2dad283cc0f2a088597ed77969011ad7060", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/b4c4b2dad283cc0f2a088597ed77969011ad7060", "committedDate": "2020-07-12T10:54:35Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a931cb7a63e619f3ad1a7b1bcde3a1ec8cbf1163", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/a931cb7a63e619f3ad1a7b1bcde3a1ec8cbf1163", "committedDate": "2020-07-12T11:32:14Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f77e7b563f048b657415ae55156c82ad6d125f8a", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/f77e7b563f048b657415ae55156c82ad6d125f8a", "committedDate": "2020-07-12T15:13:06Z", "message": "rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a77111d7a42962dbbe24e885de195cd3b6a86aa", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/2a77111d7a42962dbbe24e885de195cd3b6a86aa", "committedDate": "2020-07-12T15:15:20Z", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20df41f0b02a3d4804eda186fe0916f5b63683c0", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/20df41f0b02a3d4804eda186fe0916f5b63683c0", "committedDate": "2020-07-12T17:37:36Z", "message": "fix ci"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e2193c1599f8627ee0648d0046aaee038d73371", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/6e2193c1599f8627ee0648d0046aaee038d73371", "committedDate": "2020-07-13T02:21:30Z", "message": "ci"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef03035d1110f5aea1757047aaa9b72bfedaa010", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/ef03035d1110f5aea1757047aaa9b72bfedaa010", "committedDate": "2020-07-13T04:02:58Z", "message": "license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3639bfc100f1b37efd96c65ca081f8cc8e152ca3", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/3639bfc100f1b37efd96c65ca081f8cc8e152ca3", "committedDate": "2020-07-14T03:50:44Z", "message": "comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c50b511c029498967aea97fcf130c45948154f27", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/c50b511c029498967aea97fcf130c45948154f27", "committedDate": "2020-07-14T06:51:03Z", "message": "fix ut"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTUwMDE1", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-446950015", "createdAt": "2020-07-13T02:44:00Z", "commit": {"oid": "6e2193c1599f8627ee0648d0046aaee038d73371"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMjo0NDowMFrOGwZv2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTozOTowOVrOGxP5nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQwNjY4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              GOAgent:\n          \n          \n            \n              Kafka:", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r453406682", "createdAt": "2020-07-13T02:44:00Z", "author": {"login": "kezhenxu94"}, "path": ".github/workflows/e2e.kafka.yaml", "diffHunk": "@@ -0,0 +1,50 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+name: E2E\n+\n+on:\n+  pull_request:\n+  push:\n+    branches:\n+      - master\n+    tags:\n+      - 'v*'\n+\n+env:\n+  SKIP_TEST: true\n+  SW_AGENT_JDK_VERSION: 8\n+\n+jobs:\n+  GOAgent:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2193c1599f8627ee0648d0046aaee038d73371"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NjUwMg==", "bodyText": "unused", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454276502", "createdAt": "2020-07-14T11:03:32Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-receiver-plugin/skywalking-kafka-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/kafka/provider/SourceReceiverPoint.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.receiver.kafka.provider;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.FIELD)\n+public @interface SourceReceiverPoint {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50b511c029498967aea97fcf130c45948154f27"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4ODA2Mg==", "bodyText": "Do you mean conflict (instead of confirmed)?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454288062", "createdAt": "2020-07-14T11:27:23Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-cluster-plugin/cluster-zookeeper-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/zookeeper/ZookeeperCoordinator.java", "diffHunk": "@@ -78,6 +84,33 @@ public synchronized void registerRemote(RemoteInstance remoteInstance) throws Se\n         }\n     }\n \n+    @Override\n+    public synchronized RemoteInstance updateRemoteNodes(String serverId) throws Exception {\n+        ServiceInstance self = null;\n+        for (ServiceInstance<RemoteInstance> service : serviceCache.getInstances()) {\n+\n+            if (service.getPayload().getAddress().equals(selfAddress)) {\n+                self = service;\n+            } else if (StringUtil.isNotEmpty(serverId) && serverId.equals(service.getPayload().getServerId())) {\n+                throw new ServiceRegisterException(\"ServerId[\" + serverId + \"] confirmed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50b511c029498967aea97fcf130c45948154f27"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MzkxNg==", "bodyText": "Is this class name general enough? Seems KafkaServiceManagementService has nothing to do with ServiceManagement, a little misleading (because there is another class KafkaServiceManagementService)", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454293916", "createdAt": "2020-07-14T11:39:09Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaServiceManagementProducer.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+import java.util.Properties;\n+import java.util.Set;\n+import java.util.concurrent.ExecutionException;\n+import java.util.stream.Collectors;\n+import org.apache.kafka.clients.admin.AdminClient;\n+import org.apache.kafka.clients.admin.DescribeTopicsResult;\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.common.serialization.BytesSerializer;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.apache.kafka.common.utils.Bytes;\n+import org.apache.skywalking.apm.agent.core.boot.BootService;\n+import org.apache.skywalking.apm.agent.core.boot.DefaultImplementor;\n+import org.apache.skywalking.apm.agent.core.conf.Config;\n+\n+/**\n+ *  Configuring, initializing and holding a KafkaProducer instance for reporters.\n+ */\n+@DefaultImplementor\n+public class KafkaServiceManagementProducer implements BootService, Runnable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50b511c029498967aea97fcf130c45948154f27"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b4e9046991e3b6d74c025566ccc95efed4565f8", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/4b4e9046991e3b6d74c025566ccc95efed4565f8", "committedDate": "2020-07-14T12:14:43Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "594bbd51f70d38a8938240bfe6014812da5b2980", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/594bbd51f70d38a8938240bfe6014812da5b2980", "committedDate": "2020-07-14T12:16:21Z", "message": "fix missing dependecies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6148083c0c3f62790d463c0f540bdd446b0c9d4d", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/6148083c0c3f62790d463c0f540bdd446b0c9d4d", "committedDate": "2020-07-14T18:26:08Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2534439f80c80303dec935358b8b808e228c9c66", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/2534439f80c80303dec935358b8b808e228c9c66", "committedDate": "2020-07-15T03:01:26Z", "message": "rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/eed50986db7c82ea5055055fe8c4e709f87906a5", "committedDate": "2020-07-15T04:02:34Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NjI2NjQz", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-448626643", "createdAt": "2020-07-15T04:50:36Z", "commit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDo1MDozNlrOGxuLPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDo1NzowNFrOGxuSBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4OTk1MQ==", "bodyText": "I suggest not to use too many different terms when you're saying the same thing\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            And we have to configure **Zookeeper** as the OAP cluster management tool.\n          \n          \n            \n            And we have to configure **Zookeeper** as the OAP cluster coordinator.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454789951", "createdAt": "2020-07-15T04:50:36Z", "author": {"login": "kezhenxu94"}, "path": "docs/en/setup/backend/backend-receivers.md", "diffHunk": "@@ -128,3 +129,20 @@ receiver-oc:\n     gRPCHost: ${SW_OC_RECEIVER_GRPC_HOST:0.0.0.0}\n     gRPCPort: ${SW_OC_RECEIVER_GRPC_PORT:55678}\n ```\n+\n+## Kafka receiver\n+\n+Kafka Receiver supports to receive `TraceSegment`, `JVMMetrics` and others of Agent reported as gRPC Receiver.\n+Currently, it has to connect to the whole topic or single partition of topic when OAP is in cluster mode.\n+And we have to configure **Zookeeper** as the OAP cluster management tool.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MDIyMw==", "bodyText": "- won't active the implementation, instead, it disables the implementation", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454790223", "createdAt": "2020-07-15T04:51:39Z", "author": {"login": "kezhenxu94"}, "path": "docs/en/setup/backend/backend-receivers.md", "diffHunk": "@@ -128,3 +129,20 @@ receiver-oc:\n     gRPCHost: ${SW_OC_RECEIVER_GRPC_HOST:0.0.0.0}\n     gRPCPort: ${SW_OC_RECEIVER_GRPC_PORT:55678}\n ```\n+\n+## Kafka receiver\n+\n+Kafka Receiver supports to receive `TraceSegment`, `JVMMetrics` and others of Agent reported as gRPC Receiver.\n+Currently, it has to connect to the whole topic or single partition of topic when OAP is in cluster mode.\n+And we have to configure **Zookeeper** as the OAP cluster management tool.\n+\n+**Suggestion and recommend**, creating the Kafka topics by self before OAP Server starting. Although OAP server\n+will create these if not exist.\n+\n+To active the `default` implementation:\n+```yaml\n+receiver-kafka:\n+  selector: ${SW_RECEIVER_KAFKA:-}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MTY4Nw==", "bodyText": "The doc on agent side is missing?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454791687", "createdAt": "2020-07-15T04:57:04Z", "author": {"login": "kezhenxu94"}, "path": "docs/en/setup/backend/backend-receivers.md", "diffHunk": "@@ -128,3 +129,20 @@ receiver-oc:\n     gRPCHost: ${SW_OC_RECEIVER_GRPC_HOST:0.0.0.0}\n     gRPCPort: ${SW_OC_RECEIVER_GRPC_PORT:55678}\n ```\n+\n+## Kafka receiver", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NjU0OTE3", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-448654917", "createdAt": "2020-07-15T06:12:10Z", "commit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNjoxMjoxMFrOGxvrEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNjoyNDozOFrOGxv9NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNDQ4Mw==", "bodyText": "Why has an empty line?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454814483", "createdAt": "2020-07-15T06:12:10Z", "author": {"login": "wu-sheng"}, "path": "dist-material/release-docs/LICENSE", "diffHunk": "@@ -380,6 +384,8 @@ The text of each license is also included at licenses/LICENSE-[project].txt.\n     proto files from gogo: https://github.com/gogo/protobuf  BSD-2\n     proto files from grpc-gateway, https://github.com/grpc-ecosystem/grpc-gateway/tree/master/protoc-gen-swagger/options BSD-3\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNDc4OA==", "bodyText": "Read my comment, this is not a receiver.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454814788", "createdAt": "2020-07-15T06:13:00Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-receivers.md", "diffHunk": "@@ -128,3 +129,20 @@ receiver-oc:\n     gRPCHost: ${SW_OC_RECEIVER_GRPC_HOST:0.0.0.0}\n     gRPCPort: ${SW_OC_RECEIVER_GRPC_PORT:55678}\n ```\n+\n+## Kafka receiver", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MTY4Nw=="}, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNTMwOQ==", "bodyText": "Trace and JVM Metrics, please use common nouns. Don't use the class name in the codes.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454815309", "createdAt": "2020-07-15T06:14:21Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-receivers.md", "diffHunk": "@@ -128,3 +129,20 @@ receiver-oc:\n     gRPCHost: ${SW_OC_RECEIVER_GRPC_HOST:0.0.0.0}\n     gRPCPort: ${SW_OC_RECEIVER_GRPC_PORT:55678}\n ```\n+\n+## Kafka receiver\n+\n+Kafka Receiver supports to receive `TraceSegment`, `JVMMetrics` and others of Agent reported as gRPC Receiver.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNTcxOA==", "bodyText": "What are the topics, and what are they for? And which are the recommend commands with parameters? We need a very clear doc about this.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454815718", "createdAt": "2020-07-15T06:15:15Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-receivers.md", "diffHunk": "@@ -128,3 +129,20 @@ receiver-oc:\n     gRPCHost: ${SW_OC_RECEIVER_GRPC_HOST:0.0.0.0}\n     gRPCPort: ${SW_OC_RECEIVER_GRPC_PORT:55678}\n ```\n+\n+## Kafka receiver\n+\n+Kafka Receiver supports to receive `TraceSegment`, `JVMMetrics` and others of Agent reported as gRPC Receiver.\n+Currently, it has to connect to the whole topic or single partition of topic when OAP is in cluster mode.\n+And we have to configure **Zookeeper** as the OAP cluster management tool.\n+\n+**Suggestion and recommend**, creating the Kafka topics by self before OAP Server starting. Although OAP server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNjA2MQ==", "bodyText": "Suggestion and recommend are not the same. Please make this part clear. Also, you have codes to create topic automatically, what they are going to do, also should be declared clearly here.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454816061", "createdAt": "2020-07-15T06:16:08Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-receivers.md", "diffHunk": "@@ -128,3 +129,20 @@ receiver-oc:\n     gRPCHost: ${SW_OC_RECEIVER_GRPC_HOST:0.0.0.0}\n     gRPCPort: ${SW_OC_RECEIVER_GRPC_PORT:55678}\n ```\n+\n+## Kafka receiver\n+\n+Kafka Receiver supports to receive `TraceSegment`, `JVMMetrics` and others of Agent reported as gRPC Receiver.\n+Currently, it has to connect to the whole topic or single partition of topic when OAP is in cluster mode.\n+And we have to configure **Zookeeper** as the OAP cluster management tool.\n+\n+**Suggestion and recommend**, creating the Kafka topics by self before OAP Server starting. Although OAP server", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNTcxOA=="}, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNjE3OQ==", "bodyText": "Why an empty line?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454816179", "createdAt": "2020-07-15T06:16:29Z", "author": {"login": "wu-sheng"}, "path": "oap-server/pom.xml", "diffHunk": "@@ -94,6 +94,8 @@\n         <zookeeper.image.version>3.5</zookeeper.image.version>\n         <protobuf-java-util.version>3.11.4</protobuf-java-util.version>\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNjc2OQ==", "bodyText": "Why we need a Zookeeping to be OAP cluster management? Which parts of codes using the this?\nThis fetcher is only taking responsibility for itself, the coordinator is for distributed aggregation. If the user wants Zookeeper for Kafka, and another coordinator, such as k8s, for OAP, I can't see the blocks. Is this?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454816769", "createdAt": "2020-07-15T06:18:15Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-receivers.md", "diffHunk": "@@ -128,3 +129,20 @@ receiver-oc:\n     gRPCHost: ${SW_OC_RECEIVER_GRPC_HOST:0.0.0.0}\n     gRPCPort: ${SW_OC_RECEIVER_GRPC_PORT:55678}\n ```\n+\n+## Kafka receiver\n+\n+Kafka Receiver supports to receive `TraceSegment`, `JVMMetrics` and others of Agent reported as gRPC Receiver.\n+Currently, it has to connect to the whole topic or single partition of topic when OAP is in cluster mode.\n+And we have to configure **Zookeeper** as the OAP cluster management tool.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4OTk1MQ=="}, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxNzExMg==", "bodyText": "I don't this is the right design, as commented above.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454817112", "createdAt": "2020-07-15T06:19:17Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/cluster/ClusterNodeUpdate.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.cluster;\n+\n+import org.apache.skywalking.oap.server.library.module.Service;\n+\n+public interface ClusterNodeUpdate extends Service {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgxOTEyNQ==", "bodyText": "Why do you depend on this? I think you should refactor the structure of the code, to separate the trace/JVM analysis codes in a separate module. Then the receiver and Kafka fetcher depend on it both.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r454819125", "createdAt": "2020-07-15T06:24:38Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-kafka-receiver-plugin/pom.xml", "diffHunk": "@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  ~\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>server-receiver-plugin</artifactId>\n+        <groupId>org.apache.skywalking</groupId>\n+        <version>8.1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>skywalking-kafka-receiver-plugin</artifactId>\n+    <packaging>jar</packaging>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.skywalking</groupId>\n+            <artifactId>skywalking-trace-receiver-plugin</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed50986db7c82ea5055055fe8c4e709f87906a5"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "142558b6c027286097760b2f879eb9bb65cff70d", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/142558b6c027286097760b2f879eb9bb65cff70d", "committedDate": "2020-07-17T09:27:51Z", "message": "refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae665a3d7f5db0239fa6c5d1444a78340525d3bd", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/ae665a3d7f5db0239fa6c5d1444a78340525d3bd", "committedDate": "2020-07-17T09:29:57Z", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97ed67a13538c6b289fb2d6053f67baa488defee", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/97ed67a13538c6b289fb2d6053f67baa488defee", "committedDate": "2020-07-17T12:03:28Z", "message": "rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb074e9e108308bc285afd97fb3bb2d7c4243166", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/eb074e9e108308bc285afd97fb3bb2d7c4243166", "committedDate": "2020-07-17T17:06:26Z", "message": "move TraceModule to analyzer-module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63b644d6ee36130058ff4db7ac71a4bc7a9236c7", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/63b644d6ee36130058ff4db7ac71a4bc7a9236c7", "committedDate": "2020-07-17T17:08:12Z", "message": "rename module name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "575dd22412d8e895f8b569f97b19be03d5ff4c35", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/575dd22412d8e895f8b569f97b19be03d5ff4c35", "committedDate": "2020-07-18T15:58:46Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cda7c9f224ffcc2e6dbdbf9b85ddbfee8df9c1e", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/0cda7c9f224ffcc2e6dbdbf9b85ddbfee8df9c1e", "committedDate": "2020-07-20T04:20:01Z", "message": "update docs and remove zookeeper coordinator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "702c5cd5df1dd0fbc087dbfd042bcd05e9b56d7a", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/702c5cd5df1dd0fbc087dbfd042bcd05e9b56d7a", "committedDate": "2020-07-20T04:20:15Z", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1029df476cc9953a572d0cafc027eac78ad93e3f", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/1029df476cc9953a572d0cafc027eac78ad93e3f", "committedDate": "2020-07-20T06:49:42Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9300f8c11e9758a1aa89fa3f9ac9ed926ca5e66a", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/9300f8c11e9758a1aa89fa3f9ac9ed926ca5e66a", "committedDate": "2020-07-20T09:37:56Z", "message": "typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0393a0e692de63f7d82341b8cad840a46adc884e", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/0393a0e692de63f7d82341b8cad840a46adc884e", "committedDate": "2020-07-20T10:44:32Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d729044ef300dc56bf7f196b2bccb7eb1ef3dd17", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/d729044ef300dc56bf7f196b2bccb7eb1ef3dd17", "committedDate": "2020-07-20T12:21:38Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b413ce93da2eb5e791ddc3caf7f1fb8605253e4a", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/b413ce93da2eb5e791ddc3caf7f1fb8605253e4a", "committedDate": "2020-07-21T06:14:52Z", "message": "typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "990cb2227e2cd8e2662f2b7c8bbd755e7c69f7e4", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/990cb2227e2cd8e2662f2b7c8bbd755e7c69f7e4", "committedDate": "2020-07-21T13:20:24Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44436221f0b3bdfd711ac419da793e6b30504dc8", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/44436221f0b3bdfd711ac419da793e6b30504dc8", "committedDate": "2020-07-21T13:32:44Z", "message": "new config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d0b4915422d424ab625b24725949b04495d38ba", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/4d0b4915422d424ab625b24725949b04495d38ba", "committedDate": "2020-07-21T16:07:56Z", "message": "profiling e2e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5a61fe5c40f075af52f2a00c16582de6734e5f3", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/a5a61fe5c40f075af52f2a00c16582de6734e5f3", "committedDate": "2020-07-21T17:19:27Z", "message": "what happend?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b058340cad3dde1da8bc88acaab5355fbdfa99e", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/4b058340cad3dde1da8bc88acaab5355fbdfa99e", "committedDate": "2020-07-22T02:23:05Z", "message": "Merge remote-tracking branch 'upstream/master' into kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed531793cd14afc21dd16df17ceac271d1e1eb39", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/ed531793cd14afc21dd16df17ceac271d1e1eb39", "committedDate": "2020-07-22T02:26:01Z", "message": "Merge branch 'kafka' into v8/devel/kafka"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTk5MDIy", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-452999022", "createdAt": "2020-07-22T05:12:53Z", "commit": {"oid": "ed531793cd14afc21dd16df17ceac271d1e1eb39"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b57397a39e1f2e0c38446df3b91c89662d3440dd", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/b57397a39e1f2e0c38446df3b91c89662d3440dd", "committedDate": "2020-07-22T09:21:01Z", "message": "reduce code redundancy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cdc365686641987789c758f2de795106b7ed4b0", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/2cdc365686641987789c758f2de795106b7ed4b0", "committedDate": "2020-07-23T12:02:48Z", "message": "revert KafkaE2E and rename name of task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59d20a57c10c7b234e960aa8dfe1bf2f55bdb8e7", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/59d20a57c10c7b234e960aa8dfe1bf2f55bdb8e7", "committedDate": "2020-07-23T23:37:17Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTY0NjIz", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-454564623", "createdAt": "2020-07-23T23:42:00Z", "commit": {"oid": "59d20a57c10c7b234e960aa8dfe1bf2f55bdb8e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzo0MjowMFrOG2fKBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzo0MjowMFrOG2fKBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4Njc1Ng==", "bodyText": "Why do this? Your context manager should be controlled by kafka connectivity. Is that possible?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r459786756", "createdAt": "2020-07-23T23:42:00Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaContextManagerExtendService.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.kafka;\n+\n+import org.apache.skywalking.apm.agent.core.boot.OverrideImplementor;\n+import org.apache.skywalking.apm.agent.core.context.ContextManagerExtendService;\n+import org.apache.skywalking.apm.agent.core.remote.GRPCChannelStatus;\n+\n+/**\n+ * For compatible with {@link ContextManagerExtendService}, don't need to manage connection status by self.\n+ */\n+@OverrideImplementor(ContextManagerExtendService.class)\n+public class KafkaContextManagerExtendService extends ContextManagerExtendService {\n+\n+    @Override\n+    public void prepare() {\n+        statusChanged(GRPCChannelStatus.CONNECTED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59d20a57c10c7b234e960aa8dfe1bf2f55bdb8e7"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c66ba76914666d36c40103f46adf572795f7970", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/1c66ba76914666d36c40103f46adf572795f7970", "committedDate": "2020-07-24T03:16:55Z", "message": "polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c579a080b2c34394e84e2b0083fca14d944fc2c9", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/c579a080b2c34394e84e2b0083fca14d944fc2c9", "committedDate": "2020-07-24T03:18:25Z", "message": "docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "febb78a2f808386edd66501071caa88c053cd1ea", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/febb78a2f808386edd66501071caa88c053cd1ea", "committedDate": "2020-07-24T08:48:35Z", "message": "comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NzI2NDY5", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-454726469", "createdAt": "2020-07-24T08:48:41Z", "commit": {"oid": "c579a080b2c34394e84e2b0083fca14d944fc2c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwODo0ODo0MVrOG2nyfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwODo0ODo0MVrOG2nyfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyODE5MA==", "bodyText": "What is this for?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r459928190", "createdAt": "2020-07-24T08:48:41Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/cluster/RemoteInstance.java", "diffHunk": "@@ -26,8 +26,15 @@\n \n     private final Address address;\n \n+    private final String serverId;\n+\n     public RemoteInstance(Address address) {\n+        this(address, null);\n+    }\n+\n+    public RemoteInstance(Address address, String serverId) {\n         this.address = address;\n+        this.serverId = serverId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c579a080b2c34394e84e2b0083fca14d944fc2c9"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d107ad8fb8e42e4cd5c763e6da2f559837fa4221", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/d107ad8fb8e42e4cd5c763e6da2f559837fa4221", "committedDate": "2020-07-24T09:31:52Z", "message": "remove reporter-plugins dir"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f8a0da04278f9da40faf8e33f06d206b9570fa0", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/0f8a0da04278f9da40faf8e33f06d206b9570fa0", "committedDate": "2020-07-24T09:34:31Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52b539363b6f5eb1cdf87e80bba268f3375d5ed4", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/skywalking/commit/52b539363b6f5eb1cdf87e80bba268f3375d5ed4", "committedDate": "2020-07-24T12:09:56Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "552355a85c010bd6c464c8a989ac97edfada3fcd", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/552355a85c010bd6c464c8a989ac97edfada3fcd", "committedDate": "2020-07-26T13:35:36Z", "message": "Fix wrong package & Separate the analysis module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02353972f4d5879c4be8e227bbf43df898ecbe3c", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/02353972f4d5879c4be8e227bbf43df898ecbe3c", "committedDate": "2020-07-26T13:43:24Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzY1ODYy", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-455365862", "createdAt": "2020-07-26T13:47:02Z", "commit": {"oid": "02353972f4d5879c4be8e227bbf43df898ecbe3c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMzo0NzowM1rOG3Mg-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNDowOTowNlrOG3MqPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyOTkxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            plugin.kafka.bootstrap_servers=${SW_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}\n          \n          \n            \n            # plugin.kafka.bootstrap_servers=${SW_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460529912", "createdAt": "2020-07-26T13:47:03Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/config/agent.config", "diffHunk": "@@ -87,3 +87,6 @@ logging.level=${SW_LOGGING_LEVEL:INFO}\n \n # mysql plugin configuration\n # plugin.mysql.trace_sql_parameters=${SW_MYSQL_TRACE_SQL_PARAMETERS:false}\n+\n+# Kafka producer configuration\n+plugin.kafka.bootstrap_servers=${SW_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02353972f4d5879c4be8e227bbf43df898ecbe3c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzMDYwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Kafka Fetcher will pull message from Kafka Broker(s) what is the Agent delivered(Currently, we only support Java Agent.) They include JVM Metrics data, Tracing Segment, and Service/Instance properties. Of course, we can also consume and process these data in other applications. Kafka Fetcher can work with GRPC Receiver at same time. It contains JVM-Receiver, Trace-Receiver etc.\n          \n          \n            \n            Kafka Fetcher pulls messages from Kafka Broker(s) what is the Agent delivered. Check the agent documentation about the details. Typically JTracing Segment, Service/Instance properties, and VM Metrics data are supported.  Kafka Fetcher can work with gRPC/HTTP Receivers at the same time for adopting different transport protocols.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460530608", "createdAt": "2020-07-26T13:54:01Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -85,3 +85,44 @@ that adds the procedure from raw data to minute rate.\n \n When you specify `avgHistogram` and `avgHistogramPercentile`, the source should be the type of `histogram`. A counterFunction\n is also needed due to the `bucket`, `sum` and `count` of histogram are counters.\n+\n+## Kafka Fetcher\n+\n+Kafka Fetcher will pull message from Kafka Broker(s) what is the Agent delivered(Currently, we only support Java Agent.) They include JVM Metrics data, Tracing Segment, and Service/Instance properties. Of course, we can also consume and process these data in other applications. Kafka Fetcher can work with GRPC Receiver at same time. It contains JVM-Receiver, Trace-Receiver etc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02353972f4d5879c4be8e227bbf43df898ecbe3c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzMDcwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            We have to create following topics of Kafka which are named `skywalking-segments`, `skywalking-metrics`, `skywalking-profile` and `skywalking-managements`, for `kafka-fetcher`.\n          \n          \n            \n            `skywalking-segments`, `skywalking-metrics`, `skywalking-profile`, and `skywalking-managements` are required by `kafka-fetcher`.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460530705", "createdAt": "2020-07-26T13:54:46Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -85,3 +85,44 @@ that adds the procedure from raw data to minute rate.\n \n When you specify `avgHistogram` and `avgHistogramPercentile`, the source should be the type of `histogram`. A counterFunction\n is also needed due to the `bucket`, `sum` and `count` of histogram are counters.\n+\n+## Kafka Fetcher\n+\n+Kafka Fetcher will pull message from Kafka Broker(s) what is the Agent delivered(Currently, we only support Java Agent.) They include JVM Metrics data, Tracing Segment, and Service/Instance properties. Of course, we can also consume and process these data in other applications. Kafka Fetcher can work with GRPC Receiver at same time. It contains JVM-Receiver, Trace-Receiver etc.\n+\n+Kafka Fetcher is disabled in default, and we configure as following to enable.\n+\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+```\n+\n+We have to create following topics of Kafka which are named `skywalking-segments`, `skywalking-metrics`, `skywalking-profile` and `skywalking-managements`, for `kafka-fetcher`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02353972f4d5879c4be8e227bbf43df898ecbe3c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzMDg2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If the OAP server automatically creates topics, you can also modify the number of partitions and replications of the topic created by default through the following configuration:\n          \n          \n            \n            Why using the OAP server automatical creation mechanism, you could modify the number of partitions and replications of the topics through the following configurations:", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460530866", "createdAt": "2020-07-26T13:56:00Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -85,3 +85,44 @@ that adds the procedure from raw data to minute rate.\n \n When you specify `avgHistogram` and `avgHistogramPercentile`, the source should be the type of `histogram`. A counterFunction\n is also needed due to the `bucket`, `sum` and `count` of histogram are counters.\n+\n+## Kafka Fetcher\n+\n+Kafka Fetcher will pull message from Kafka Broker(s) what is the Agent delivered(Currently, we only support Java Agent.) They include JVM Metrics data, Tracing Segment, and Service/Instance properties. Of course, we can also consume and process these data in other applications. Kafka Fetcher can work with GRPC Receiver at same time. It contains JVM-Receiver, Trace-Receiver etc.\n+\n+Kafka Fetcher is disabled in default, and we configure as following to enable.\n+\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+```\n+\n+We have to create following topics of Kafka which are named `skywalking-segments`, `skywalking-metrics`, `skywalking-profile` and `skywalking-managements`, for `kafka-fetcher`.\n+If they are not exist, Kafka Fetcher will create them in default. Also, you can create them by self before OAP server started.\n+\n+If the OAP server automatically creates topics, you can also modify the number of partitions and replications of the topic created by default through the following configuration:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02353972f4d5879c4be8e227bbf43df898ecbe3c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzMjI4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Kafka reporter plugin support to report Tracing, JVM Metric data, Instance Properties, and Profiling to Kafka Broker, which is disabled in default. We move the jar of the plugin from `optional-reporter-plugins` to `reporter-plugins` for activating.\n          \n          \n            \n            The Kafka reporter plugin support report traces, JVM metrics, Instance Properties, and profiled snapshots to Kafka cluster, which is disabled in default. Move the jar of the plugin from `optional-reporter-plugins` to `reporter-plugins` for activating.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460532287", "createdAt": "2020-07-26T14:09:06Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/How-to-enable-kafka-reporter.md", "diffHunk": "@@ -0,0 +1,16 @@\n+# How to enable Kafka Reporter\n+\n+The Kafka reporter plugin support to report Tracing, JVM Metric data, Instance Properties, and Profiling to Kafka Broker, which is disabled in default. We move the jar of the plugin from `optional-reporter-plugins` to `reporter-plugins` for activating.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02353972f4d5879c4be8e227bbf43df898ecbe3c"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc96b267ca1ba34ee23eaece54236e34f733e24a", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/bc96b267ca1ba34ee23eaece54236e34f733e24a", "committedDate": "2020-07-26T18:18:20Z", "message": "meter reporeter and fetcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc23fbaae8486db220c62a8ea0e3ae0f0a1827b5", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/cc23fbaae8486db220c62a8ea0e3ae0f0a1827b5", "committedDate": "2020-07-26T18:55:10Z", "message": "Update apm-sniffer/config/agent.config\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99410fa734ca6f61997ec62f5d9c8ed62497334a", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/99410fa734ca6f61997ec62f5d9c8ed62497334a", "committedDate": "2020-07-26T18:55:25Z", "message": "Update docs/en/setup/service-agent/java-agent/How-to-enable-kafka-reporter.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "306a853c18d3b86413221b4580599e83efac55ab", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/306a853c18d3b86413221b4580599e83efac55ab", "committedDate": "2020-07-26T18:55:51Z", "message": "Update docs/en/setup/backend/backend-fetcher.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5495e6f230e4a544ce2b9c28d079cbd987f9f0ee", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/5495e6f230e4a544ce2b9c28d079cbd987f9f0ee", "committedDate": "2020-07-26T18:56:07Z", "message": "Update docs/en/setup/backend/backend-fetcher.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fb2227a4613b9a146527f0141eba522321eafde", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/3fb2227a4613b9a146527f0141eba522321eafde", "committedDate": "2020-07-26T18:56:26Z", "message": "Update docs/en/setup/backend/backend-fetcher.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "506844cf3225ab8062d8cc61f2ef099133b527c2", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/506844cf3225ab8062d8cc61f2ef099133b527c2", "committedDate": "2020-07-26T18:58:21Z", "message": "enable e2e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "500059130ed01a671f57241f2402c472aa15cb8d", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/500059130ed01a671f57241f2402c472aa15cb8d", "committedDate": "2020-07-26T19:00:51Z", "message": "typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NDA3ODgw", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-455407880", "createdAt": "2020-07-27T00:01:44Z", "commit": {"oid": "500059130ed01a671f57241f2402c472aa15cb8d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMDowMTo0NFrOG3QNkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMDowMzo1OFrOG3QOiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU5MDQ4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Kafka Fetcher pulls messages from Kafka Broker(s) what is the Agent delivered. Check the agent documentation about the details. Typically JTracing Segment, Service/Instance properties, and VM Metrics data are supported.  Kafka Fetcher can work with gRPC/HTTP Receivers at the same time for adopting different transport protocols.\n          \n          \n            \n            Kafka Fetcher pulls messages from Kafka Broker(s) what is the Agent delivered. Check the agent documentation about the details. Typically Trace Segments, Service/Instance properties, JVM Metrics, and Meter system data are supported.  Kafka Fetcher can work with gRPC/HTTP Receivers at the same time for adopting different transport protocols.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460590480", "createdAt": "2020-07-27T00:01:44Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -85,3 +85,43 @@ that adds the procedure from raw data to minute rate.\n \n When you specify `avgHistogram` and `avgHistogramPercentile`, the source should be the type of `histogram`. A counterFunction\n is also needed due to the `bucket`, `sum` and `count` of histogram are counters.\n+\n+## Kafka Fetcher\n+\n+Kafka Fetcher pulls messages from Kafka Broker(s) what is the Agent delivered. Check the agent documentation about the details. Typically JTracing Segment, Service/Instance properties, and VM Metrics data are supported.  Kafka Fetcher can work with gRPC/HTTP Receivers at the same time for adopting different transport protocols.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500059130ed01a671f57241f2402c472aa15cb8d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU5MDY0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `skywalking-segments`, `skywalking-metrics`, `skywalking-profile`, and `skywalking-managements` are required by `kafka-fetcher`.\n          \n          \n            \n            `skywalking-segments`, `skywalking-metrics`, `skywalking-profile`, `skywalking-managements`, and `skywalking-meters` topics are required by `kafka-fetcher`.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460590641", "createdAt": "2020-07-27T00:03:13Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -85,3 +85,43 @@ that adds the procedure from raw data to minute rate.\n \n When you specify `avgHistogram` and `avgHistogramPercentile`, the source should be the type of `histogram`. A counterFunction\n is also needed due to the `bucket`, `sum` and `count` of histogram are counters.\n+\n+## Kafka Fetcher\n+\n+Kafka Fetcher pulls messages from Kafka Broker(s) what is the Agent delivered. Check the agent documentation about the details. Typically JTracing Segment, Service/Instance properties, and VM Metrics data are supported.  Kafka Fetcher can work with gRPC/HTTP Receivers at the same time for adopting different transport protocols.\n+\n+Kafka Fetcher is disabled in default, and we configure as following to enable.\n+\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+```\n+\n+`skywalking-segments`, `skywalking-metrics`, `skywalking-profile`, and `skywalking-managements` are required by `kafka-fetcher`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500059130ed01a671f57241f2402c472aa15cb8d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU5MDcwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If they are not exist, Kafka Fetcher will create them in default. Also, you can create them by self before OAP server started.\n          \n          \n            \n            If they do not exist, Kafka Fetcher will create them in default. Also, you can create them by yourself before the OAP server started.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460590703", "createdAt": "2020-07-27T00:03:41Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -85,3 +85,43 @@ that adds the procedure from raw data to minute rate.\n \n When you specify `avgHistogram` and `avgHistogramPercentile`, the source should be the type of `histogram`. A counterFunction\n is also needed due to the `bucket`, `sum` and `count` of histogram are counters.\n+\n+## Kafka Fetcher\n+\n+Kafka Fetcher pulls messages from Kafka Broker(s) what is the Agent delivered. Check the agent documentation about the details. Typically JTracing Segment, Service/Instance properties, and VM Metrics data are supported.  Kafka Fetcher can work with gRPC/HTTP Receivers at the same time for adopting different transport protocols.\n+\n+Kafka Fetcher is disabled in default, and we configure as following to enable.\n+\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+```\n+\n+`skywalking-segments`, `skywalking-metrics`, `skywalking-profile`, and `skywalking-managements` are required by `kafka-fetcher`.\n+If they are not exist, Kafka Fetcher will create them in default. Also, you can create them by self before OAP server started.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500059130ed01a671f57241f2402c472aa15cb8d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU5MDcyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Why using the OAP server automatical creation mechanism, you could modify the number of partitions and replications of the topics through the following configurations:\n          \n          \n            \n            When using the OAP server automatical creation mechanism, you could modify the number of partitions and replications of the topics through the following configurations:", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460590728", "createdAt": "2020-07-27T00:03:58Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -85,3 +85,43 @@ that adds the procedure from raw data to minute rate.\n \n When you specify `avgHistogram` and `avgHistogramPercentile`, the source should be the type of `histogram`. A counterFunction\n is also needed due to the `bucket`, `sum` and `count` of histogram are counters.\n+\n+## Kafka Fetcher\n+\n+Kafka Fetcher pulls messages from Kafka Broker(s) what is the Agent delivered. Check the agent documentation about the details. Typically JTracing Segment, Service/Instance properties, and VM Metrics data are supported.  Kafka Fetcher can work with gRPC/HTTP Receivers at the same time for adopting different transport protocols.\n+\n+Kafka Fetcher is disabled in default, and we configure as following to enable.\n+\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+```\n+\n+`skywalking-segments`, `skywalking-metrics`, `skywalking-profile`, and `skywalking-managements` are required by `kafka-fetcher`.\n+If they are not exist, Kafka Fetcher will create them in default. Also, you can create them by self before OAP server started.\n+\n+Why using the OAP server automatical creation mechanism, you could modify the number of partitions and replications of the topics through the following configurations:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500059130ed01a671f57241f2402c472aa15cb8d"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0f0b0332d5a760b46ecbc3e4bd1af46602cc268", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/a0f0b0332d5a760b46ecbc3e4bd1af46602cc268", "committedDate": "2020-07-27T03:17:20Z", "message": "fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3868983f98eaf04ce277543b44085cb65c1715cd", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/3868983f98eaf04ce277543b44085cb65c1715cd", "committedDate": "2020-07-27T06:37:43Z", "message": "Merge branch 'master' into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d3df0086f6d2143f363c1b657067649ad2c6562", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/1d3df0086f6d2143f363c1b657067649ad2c6562", "committedDate": "2020-07-27T07:41:13Z", "message": "fix configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b95fc220b17d4dd79ff879c5a2665e3e27a0d5d1", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/b95fc220b17d4dd79ff879c5a2665e3e27a0d5d1", "committedDate": "2020-07-27T08:01:48Z", "message": "checkstyl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NTY2NTQx", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-455566541", "createdAt": "2020-07-27T08:14:25Z", "commit": {"oid": "b95fc220b17d4dd79ff879c5a2665e3e27a0d5d1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODoxNDoyNVrOG3YGmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODoxNjowMFrOG3YJ-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTc3MA==", "bodyText": "This should be removed, right?", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460719770", "createdAt": "2020-07-27T08:14:25Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/configuration-vocabulary.md", "diffHunk": "@@ -170,6 +170,18 @@ core|default|role|Option values, `Mixed/Receiver/Aggregator`. **Receiver** mode\n | - | - | maxMessageSize | Sets the maximum message size allowed to be received on the server. Empty means 4 MiB | - | 4M(based on Netty) |\n | prometheus-fetcher | default | Read [fetcher doc](backend-fetcher.md) for more details | - | - |\n | - | - | active | Activate the Prometheus fetcher. | SW_PROMETHEUS_FETCHER_ACTIVE | false |\n+| kafka-fetcher | default | Read [fetcher doc](backend-fetcher.md) for more details | - | - |\n+| - | - | bootstrapServers | A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. | SW_KAFKA_FETCHER_SERVERS | localhost:9092 |\n+| - | - | groupId | A unique string that identifies the consumer group this consumer belongs to.| - | skywalking-consumer |\n+| - | - | serverId | It equals to PartitionId if isSharding is true. | - | -1 |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b95fc220b17d4dd79ff879c5a2665e3e27a0d5d1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDMyNw==", "bodyText": "I think we should highlight partitions value here, but with -1 as default value.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460720327", "createdAt": "2020-07-27T08:15:26Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -85,3 +85,43 @@ that adds the procedure from raw data to minute rate.\n \n When you specify `avgHistogram` and `avgHistogramPercentile`, the source should be the type of `histogram`. A counterFunction\n is also needed due to the `bucket`, `sum` and `count` of histogram are counters.\n+\n+## Kafka Fetcher\n+\n+Kafka Fetcher pulls messages from Kafka Broker(s) what is the Agent delivered. Check the agent documentation about the details. Typically Tracing Segments, Service/Instance properties, JVM Metrics, and Meter system data are supported.  Kafka Fetcher can work with gRPC/HTTP Receivers at the same time for adopting different transport protocols.\n+\n+Kafka Fetcher is disabled in default, and we configure as following to enable.\n+\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+```\n+\n+`skywalking-segments`, `skywalking-metrics`, `skywalking-profile`, `skywalking-managements` and `skywalking-meters` topics are required by `kafka-fetcher`.\n+If they do not exist, Kafka Fetcher will create them in default. Also, you can create them by yourself before the OAP server started.\n+\n+When using the OAP server automatical creation mechanism, you could modify the number of partitions and replications of the topics through the following configurations:\n+\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+    partitions: 1\n+    replicationFactor: 1\n+```\n+\n+In the cluster mode, it should be noted that the number of topic partitions is the same as that of OAP servers. In other words, each OAP can only subscribe the specified partition. Therefore, the 'serverId' must be configured to specify which partition to consume.\n+\n+Kafka Fetcher allows to configure all the Kafka producers listed [here](http://kafka.apache.org/24/documentation.html#consumerconfigs) in property `kafkaConsumerConfig`. Such as:\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+    kafkaConsumerConfig:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b95fc220b17d4dd79ff879c5a2665e3e27a0d5d1"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDYzMw==", "bodyText": "I think we should highlight partitions value here, but with -1 as default value.", "url": "https://github.com/apache/skywalking/pull/4847#discussion_r460720633", "createdAt": "2020-07-27T08:16:00Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-fetcher.md", "diffHunk": "@@ -85,3 +85,43 @@ that adds the procedure from raw data to minute rate.\n \n When you specify `avgHistogram` and `avgHistogramPercentile`, the source should be the type of `histogram`. A counterFunction\n is also needed due to the `bucket`, `sum` and `count` of histogram are counters.\n+\n+## Kafka Fetcher\n+\n+Kafka Fetcher pulls messages from Kafka Broker(s) what is the Agent delivered. Check the agent documentation about the details. Typically Tracing Segments, Service/Instance properties, JVM Metrics, and Meter system data are supported.  Kafka Fetcher can work with gRPC/HTTP Receivers at the same time for adopting different transport protocols.\n+\n+Kafka Fetcher is disabled in default, and we configure as following to enable.\n+\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+```\n+\n+`skywalking-segments`, `skywalking-metrics`, `skywalking-profile`, `skywalking-managements` and `skywalking-meters` topics are required by `kafka-fetcher`.\n+If they do not exist, Kafka Fetcher will create them in default. Also, you can create them by yourself before the OAP server started.\n+\n+When using the OAP server automatical creation mechanism, you could modify the number of partitions and replications of the topics through the following configurations:\n+\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}\n+    partitions: 1\n+    replicationFactor: 1\n+```\n+\n+In the cluster mode, it should be noted that the number of topic partitions is the same as that of OAP servers. In other words, each OAP can only subscribe the specified partition. Therefore, the 'serverId' must be configured to specify which partition to consume.\n+\n+Kafka Fetcher allows to configure all the Kafka producers listed [here](http://kafka.apache.org/24/documentation.html#consumerconfigs) in property `kafkaConsumerConfig`. Such as:\n+```yaml\n+kafka-fetcher:\n+  selector: ${SW_KAFKA_FETCHER:default}\n+  default:\n+    bootstrapServers: ${SW_KAFKA_FETCHER_SERVERS:localhost:9092}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b95fc220b17d4dd79ff879c5a2665e3e27a0d5d1"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d637b05af1fb15549ae0cfd75d9dba0309cdf9ea", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/d637b05af1fb15549ae0cfd75d9dba0309cdf9ea", "committedDate": "2020-07-27T09:19:08Z", "message": "move meter config to analyzer module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b174a171e6956c10c48b68af587b52a7ea7eaac", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/8b174a171e6956c10c48b68af587b52a7ea7eaac", "committedDate": "2020-07-27T10:10:07Z", "message": "fix ut"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NjgxOTM3", "url": "https://github.com/apache/skywalking/pull/4847#pullrequestreview-455681937", "createdAt": "2020-07-27T11:02:31Z", "commit": {"oid": "8b174a171e6956c10c48b68af587b52a7ea7eaac"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ac4ab282613e1d27a4df46f3c10fc41d58ffdd", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/48ac4ab282613e1d27a4df46f3c10fc41d58ffdd", "committedDate": "2020-07-27T12:46:37Z", "message": "update docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a962e85b777a43baadf657937e9d44cd6fe8d1fd", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/a962e85b777a43baadf657937e9d44cd6fe8d1fd", "committedDate": "2020-07-27T12:57:52Z", "message": "fix ut"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e719655ae130e18f54b0031bb316b1754d52646", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/2e719655ae130e18f54b0031bb316b1754d52646", "committedDate": "2020-07-27T13:03:00Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fd4b68c929171d7368eff0811676a6f0118ebc9", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/1fd4b68c929171d7368eff0811676a6f0118ebc9", "committedDate": "2020-07-27T16:53:38Z", "message": "fix e2e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98a8c33b578a97ddcb48dc817b798065db5bfeca", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/98a8c33b578a97ddcb48dc817b798065db5bfeca", "committedDate": "2020-07-27T16:54:11Z", "message": "Merge branch 'v8/devel/kafka' of https://github.com/dmsolr/skywalking into v8/devel/kafka"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60605033a76ec7ecad4eed8fdfe5fd69dddba9e5", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/60605033a76ec7ecad4eed8fdfe5fd69dddba9e5", "committedDate": "2020-07-27T19:06:09Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c4bd4b8f6dd95876ddc034a2c02bcce023b177f", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/3c4bd4b8f6dd95876ddc034a2c02bcce023b177f", "committedDate": "2020-07-27T19:37:42Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2d28955463fb765d98037483b753ed6028ba79f", "author": {"user": {"login": "dmsolr", "name": "Daming"}}, "url": "https://github.com/apache/skywalking/commit/f2d28955463fb765d98037483b753ed6028ba79f", "committedDate": "2020-07-27T19:41:16Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb1303ed5de3478d0d3135fe6d4cd66b47a64af3", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/eb1303ed5de3478d0d3135fe6d4cd66b47a64af3", "committedDate": "2020-07-27T23:28:42Z", "message": "Merge branch 'master' into v8/devel/kafka"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2212, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}