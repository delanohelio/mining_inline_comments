{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzYwNjI3", "number": 5760, "title": "Catch all exception when consume kafka record", "bodyText": "Fix \"Illegal Kafka record broke ConsumerThread\"\nKafkaFetcher Consume Record from kafka, but when One Record IS BAD, data has some error, or even just occur some error when process the data, it will terminate the  \"ConsumerThread\", NO data can processed anymore.\nThere is a Dirty & Quick fix, try catch all exception.", "createdAt": "2020-10-31T02:51:44Z", "url": "https://github.com/apache/skywalking/pull/5760", "merged": true, "mergeCommit": {"oid": "1c55781a85a73ccdf93cf27c83367e0c0bfade43"}, "closed": true, "closedAt": "2020-11-07T13:40:37Z", "author": {"login": "nileblack"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXyAsJAH2gAyNTEzMzYwNjI3OmUxODIxYTM2MmFiYTRjZjMwNDc5YWQ4ZDFmMTRmMWE0YmUwNWYxNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdaLOy9gFqTUyNTY1MTcwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e1821a362aba4cf30479ad8d1f14f1a4be05f147", "author": {"user": {"login": "nileblack", "name": null}}, "url": "https://github.com/apache/skywalking/commit/e1821a362aba4cf30479ad8d1f14f1a4be05f147", "committedDate": "2020-10-31T02:33:30Z", "message": "Update KafkaFetcherHandlerRegister.java\n\nconsume record maybe throws Expcption, it will terminate the \"ConsumerThread\", NO data can processed. Catch All Throwable, ignore the failed record....."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64a55c83611588d9ae658c2ca7d4ceffa6a77fe8", "author": {"user": {"login": "nileblack", "name": null}}, "url": "https://github.com/apache/skywalking/commit/64a55c83611588d9ae658c2ca7d4ceffa6a77fe8", "committedDate": "2020-10-31T02:48:40Z", "message": "Merge pull request #1 from nileblack/nileblack-patch-1\n\nCatch all exception when consume kafka record"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTA3NzIx", "url": "https://github.com/apache/skywalking/pull/5760#pullrequestreview-521107721", "createdAt": "2020-10-31T03:05:16Z", "commit": {"oid": "64a55c83611588d9ae658c2ca7d4ceffa6a77fe8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMzowNToxNlrOHrkcUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMzowNToxNlrOHrkcUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Nzg4OQ==", "bodyText": "When and why this exception happens?", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515447889", "createdAt": "2020-10-31T03:05:16Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/KafkaFetcherHandlerRegister.java", "diffHunk": "@@ -137,7 +137,11 @@ public void run() {\n                 Iterator<ConsumerRecord<String, Bytes>> iterator = consumerRecords.iterator();\n                 while (iterator.hasNext()) {\n                     ConsumerRecord<String, Bytes> record = iterator.next();\n-                    handlerMap.get(record.topic()).handle(record);\n+                    try {\n+                        handlerMap.get(record.topic()).handle(record);\n+                    } catch(Throwable t) {\n+                        log.error(\"consume record error\", t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64a55c83611588d9ae658c2ca7d4ceffa6a77fe8"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbf817ea1bc8d13481982c8a8a9370d4d4420448", "author": {"user": {"login": "nileblack", "name": null}}, "url": "https://github.com/apache/skywalking/commit/bbf817ea1bc8d13481982c8a8a9370d4d4420448", "committedDate": "2020-10-31T04:36:41Z", "message": "format fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a9724fffcacbfc266644357d1639f0ea1cd9127", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/0a9724fffcacbfc266644357d1639f0ea1cd9127", "committedDate": "2020-10-31T04:47:40Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTI1NDk3", "url": "https://github.com/apache/skywalking/pull/5760#pullrequestreview-521125497", "createdAt": "2020-10-31T09:26:46Z", "commit": {"oid": "0a9724fffcacbfc266644357d1639f0ea1cd9127"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwOToyNjo0NlrOHrmPFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwOToyNjo0NlrOHrmPFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ3NzI2OA==", "bodyText": "Why need two error lines?", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r515477268", "createdAt": "2020-10-31T09:26:46Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/KafkaFetcherHandlerRegister.java", "diffHunk": "@@ -132,14 +132,23 @@ public void start() {\n     @Override\n     public void run() {\n         while (true) {\n-            ConsumerRecords<String, Bytes> consumerRecords = consumer.poll(Duration.ofMillis(500L));\n-            if (!consumerRecords.isEmpty()) {\n-                Iterator<ConsumerRecord<String, Bytes>> iterator = consumerRecords.iterator();\n-                while (iterator.hasNext()) {\n-                    ConsumerRecord<String, Bytes> record = iterator.next();\n-                    handlerMap.get(record.topic()).handle(record);\n+            try {\n+                ConsumerRecords<String, Bytes> consumerRecords = consumer.poll(Duration.ofMillis(500L));\n+                if (!consumerRecords.isEmpty()) {\n+                    Iterator<ConsumerRecord<String, Bytes>> iterator = consumerRecords.iterator();\n+                    while (iterator.hasNext()) {\n+                        ConsumerRecord<String, Bytes> record = iterator.next();\n+                        try {\n+                            handlerMap.get(record.topic()).handle(record);\n+                        } catch (Throwable e) {\n+                            log.error(\"process record error, topic:{}, key:{}, value:{}\", record.topic(), record.key(), record.value());\n+                            log.error(\"process record error\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a9724fffcacbfc266644357d1639f0ea1cd9127"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTE4OTI3", "url": "https://github.com/apache/skywalking/pull/5760#pullrequestreview-524918927", "createdAt": "2020-11-06T07:47:50Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8a567f5c948964c6a9ff2bff0c0cf93754e6cc0", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/f8a567f5c948964c6a9ff2bff0c0cf93754e6cc0", "committedDate": "2020-11-06T07:59:40Z", "message": "catch all Exception in handlers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTMwMzA0", "url": "https://github.com/apache/skywalking/pull/5760#pullrequestreview-524930304", "createdAt": "2020-11-06T08:08:25Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODowODoyNlrOHuj04Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODowODoyNlrOHuj04Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4MzUyMQ==", "bodyText": "Logging error should be enough.", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r518583521", "createdAt": "2020-11-06T08:08:26Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/JVMMetricsHandler.java", "diffHunk": "@@ -67,8 +67,8 @@ public void handle(final ConsumerRecord<String, Bytes> record) {\n             builder.getMetricsList().forEach(jvmMetric -> {\n                 jvmSourceDispatcher.sendMetric(builder.getService(), builder.getServiceInstance(), jvmMetric);\n             });\n-        } catch (InvalidProtocolBufferException e) {\n-            log.error(\"\", e);\n+        } catch (Exception e) {\n+            log.error(\"handle record failed, record:{}\", record.toString(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "f8a567f5c948964c6a9ff2bff0c0cf93754e6cc0", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/f8a567f5c948964c6a9ff2bff0c0cf93754e6cc0", "committedDate": "2020-11-06T07:59:40Z", "message": "catch all Exception in handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7256607e9446925ee403050fa5215d62507c6739", "author": {"user": {"login": "nileblack", "name": null}}, "url": "https://github.com/apache/skywalking/commit/7256607e9446925ee403050fa5215d62507c6739", "committedDate": "2020-11-06T08:47:40Z", "message": "fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "620c7f8ba7871929d0251f89c27741a211d36d77", "author": {"user": null}, "url": "https://github.com/apache/skywalking/commit/620c7f8ba7871929d0251f89c27741a211d36d77", "committedDate": "2020-11-06T08:53:06Z", "message": "remove log data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b670fa142ee0c69efeed76a1004f9557fd1da71f", "author": {"user": {"login": "nileblack", "name": null}}, "url": "https://github.com/apache/skywalking/commit/b670fa142ee0c69efeed76a1004f9557fd1da71f", "committedDate": "2020-11-06T08:54:31Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTYyMzcz", "url": "https://github.com/apache/skywalking/pull/5760#pullrequestreview-524962373", "createdAt": "2020-11-06T08:57:04Z", "commit": {"oid": "b670fa142ee0c69efeed76a1004f9557fd1da71f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5645655a6eedb4593cc16c3bcc041e2986d5e8e", "author": {"user": {"login": "nileblack", "name": null}}, "url": "https://github.com/apache/skywalking/commit/a5645655a6eedb4593cc16c3bcc041e2986d5e8e", "committedDate": "2020-11-07T02:32:50Z", "message": "add catch all exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjQ5OTkx", "url": "https://github.com/apache/skywalking/pull/5760#pullrequestreview-525649991", "createdAt": "2020-11-07T12:31:53Z", "commit": {"oid": "a5645655a6eedb4593cc16c3bcc041e2986d5e8e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMjozMTo1M1rOHvHzXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMjozMTo1M1rOHvHzXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3Mjk1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Catch All Execption in `KafkaHandler`.\n          \n          \n            \n            * Fix the threads of the Kafka fetcher exit if some unexpected exceptions happen.", "url": "https://github.com/apache/skywalking/pull/5760#discussion_r519172958", "createdAt": "2020-11-07T12:31:53Z", "author": {"login": "wu-sheng"}, "path": "CHANGES.md", "diffHunk": "@@ -26,6 +26,7 @@ Release Notes.\n * Improve Kubernetes service registry for ALS analysis.\n * Add health checker for cluster management\n * Improve the queryable tags generation. Remove the duplicated tags to reduce the storage payload.\n+* Catch All Execption in `KafkaHandler`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5645655a6eedb4593cc16c3bcc041e2986d5e8e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjUwMDky", "url": "https://github.com/apache/skywalking/pull/5760#pullrequestreview-525650092", "createdAt": "2020-11-07T12:33:46Z", "commit": {"oid": "a5645655a6eedb4593cc16c3bcc041e2986d5e8e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d29eae62203e20cd2b898719003bd32e558648da", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/d29eae62203e20cd2b898719003bd32e558648da", "committedDate": "2020-11-07T12:37:56Z", "message": "Update CHANGES.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1332fda268e75c5da68f8aa1ca45378c6a0a94c5", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/1332fda268e75c5da68f8aa1ca45378c6a0a94c5", "committedDate": "2020-11-07T12:38:05Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjUwMzA1", "url": "https://github.com/apache/skywalking/pull/5760#pullrequestreview-525650305", "createdAt": "2020-11-07T12:38:22Z", "commit": {"oid": "1332fda268e75c5da68f8aa1ca45378c6a0a94c5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjUxNzA2", "url": "https://github.com/apache/skywalking/pull/5760#pullrequestreview-525651706", "createdAt": "2020-11-07T13:04:23Z", "commit": {"oid": "1332fda268e75c5da68f8aa1ca45378c6a0a94c5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1588, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}