{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NjM5ODA4", "number": 4857, "title": "fix hystrix plugin cause biz error ", "bodyText": "Please answer these questions before submitting pull request\n\n\nWhy submit this pull request?\n\n\n Bug fix\n\n\n New feature provided\n\n\n Improve performance\n\n\nRelated issues\n#4850\n\n\n\nBug fix\n\nBug description.\nthis problem is, origin object HystrixConcurrencyStrategyDefault is wrapped to HystrixConcurrencyStrategy. under hystrix 1.4.3 com.netflix.hystrix.HystrixRequestLog#getCurrentRequest(com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy) this method doesn't check isCurrentThreadInitialized, but checked in other high version\nHow to fix?\nlike hystrix high version, Return null if the {@link HystrixRequestContext} has not been initialized for the current thread.\n\n\nNew feature or improvement\n\nDescribe the details and related test reports.", "createdAt": "2020-06-04T07:21:29Z", "url": "https://github.com/apache/skywalking/pull/4857", "merged": true, "mergeCommit": {"oid": "f513c39d56aabd1b0b6383ccbb379a50349fb18f"}, "closed": true, "closedAt": "2020-06-07T12:13:40Z", "author": {"login": "zifeihan"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn4l_5gH2gAyNDI3NjM5ODA4OjU0ZTEwZGUyNzc3NTVlMGY4NWE1YzgxZGY3NWQwNmI2MzljYjZlYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABco49uAgH2gAyNDI3NjM5ODA4OjVlZjA4MzI3Yzk2OGJmOTQyMzAzYzk4NDQ3NDdlNzFkN2I1YWRlMGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "54e10de277755e0f85a5c81df75d06b639cb6eb3", "author": {"user": {"login": "zifeihan", "name": "zifeihan"}}, "url": "https://github.com/apache/skywalking/commit/54e10de277755e0f85a5c81df75d06b639cb6eb3", "committedDate": "2020-06-04T07:05:19Z", "message": "Enhance hystrix plugin,see https://github.com/apache/skywalking/issues/4850"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MzI0ODg2", "url": "https://github.com/apache/skywalking/pull/4857#pullrequestreview-424324886", "createdAt": "2020-06-04T10:52:14Z", "commit": {"oid": "54e10de277755e0f85a5c81df75d06b639cb6eb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDo1MjoxNFrOGfAXDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDo1MjoxNFrOGfAXDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE2NDk0Mg==", "bodyText": "So, this could be NPE, right? In some old versions.", "url": "https://github.com/apache/skywalking/pull/4857#discussion_r435164942", "createdAt": "2020-06-04T10:52:14Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-sdk-plugin/hystrix-1.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/hystrix/v1/SWHystrixLifecycleForwardingRequestVariable.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.hystrix.v1;\n+\n+import com.netflix.hystrix.strategy.concurrency.HystrixRequestContext;\n+import com.netflix.hystrix.strategy.concurrency.HystrixRequestVariable;\n+import com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableDefault;\n+import com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableLifecycle;\n+import com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy;\n+\n+/**\n+ * Implementation of {@link HystrixRequestVariable} which forwards to the wrapped\n+ * {@link HystrixRequestVariableLifecycle}.\n+ * <p>\n+ * This implementation also returns null when {@link #get()} is called while the {@link HystrixRequestContext} has not\n+ * been initialized rather than throwing an exception, allowing for use in a {@link HystrixConcurrencyStrategy} which\n+ * does not depend on an a HystrixRequestContext\n+ */\n+public class SWHystrixLifecycleForwardingRequestVariable<T> extends HystrixRequestVariableDefault<T> {\n+    private final HystrixRequestVariableLifecycle<T> lifecycle;\n+\n+    /**\n+     * Creates a HystrixRequestVariable which will return data as provided by the {@link HystrixRequestVariableLifecycle}\n+     *\n+     * @param lifecycle lifecycle used to provide values. Must have the same type parameter as the constructed instance.\n+     */\n+    public SWHystrixLifecycleForwardingRequestVariable(HystrixRequestVariableLifecycle<T> lifecycle) {\n+        this.lifecycle = lifecycle;\n+    }\n+\n+    /**\n+     * Delegates to the wrapped {@link HystrixRequestVariableLifecycle}\n+     *\n+     * @return T with initial value or null if none.\n+     */\n+    @Override\n+    public T initialValue() {\n+        return lifecycle.initialValue();\n+    }\n+\n+    /**\n+     * Delegates to the wrapped {@link HystrixRequestVariableLifecycle}\n+     *\n+     * @param value of request variable to allow cleanup activity.\n+     *              <p>\n+     *              If nothing needs to be cleaned up then nothing needs to be done in this method.\n+     */\n+    @Override\n+    public void shutdown(T value) {\n+        lifecycle.shutdown(value);\n+    }\n+\n+    /**\n+     * Return null if the {@link HystrixRequestContext} has not been initialized for the current thread.\n+     * <p>\n+     * If {@link HystrixRequestContext} has been initialized then call method in superclass:\n+     * {@link HystrixRequestVariableDefault#get()}\n+     */\n+    @Override\n+    public T get() {\n+        if (!HystrixRequestContext.isCurrentThreadInitialized()) {\n+            return null;\n+        }\n+        return super.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54e10de277755e0f85a5c81df75d06b639cb6eb3"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODA1MjQ4", "url": "https://github.com/apache/skywalking/pull/4857#pullrequestreview-425805248", "createdAt": "2020-06-07T10:04:57Z", "commit": {"oid": "54e10de277755e0f85a5c81df75d06b639cb6eb3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ef08327c968bf942303c9844747e71d7b5ade0d", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/5ef08327c968bf942303c9844747e71d7b5ade0d", "committedDate": "2020-06-07T10:05:09Z", "message": "Merge branch 'master' into master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2223, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}