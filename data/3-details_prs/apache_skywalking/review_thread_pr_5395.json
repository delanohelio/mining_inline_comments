{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MDMyMTM4", "number": 5395, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMToxMjoxN1rOEc5aCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyOToyM1rOEc87iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NzM2MTM5OnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/job/JobConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMToxMjoxN1rOHHt1kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMTo0Njo1OVrOHHwZ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg1MzA3NQ==", "bodyText": "Please don't use Chinese in the source codes. Keep all comments in English.", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r477853075", "createdAt": "2020-08-27T01:12:17Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/job/JobConfig.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.elasticjob.job;\n+\n+import com.dangdang.ddframe.job.api.simple.SimpleJob;\n+import com.dangdang.ddframe.job.config.JobCoreConfiguration;\n+import com.dangdang.ddframe.job.config.simple.SimpleJobConfiguration;\n+import com.dangdang.ddframe.job.lite.api.JobScheduler;\n+import com.dangdang.ddframe.job.lite.config.LiteJobConfiguration;\n+import com.dangdang.ddframe.job.lite.spring.api.SpringJobScheduler;\n+import com.dangdang.ddframe.job.reg.base.CoordinatorRegistryCenter;\n+import com.dangdang.ddframe.job.reg.zookeeper.ZookeeperConfiguration;\n+import com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class JobConfig {\n+\n+    private final String cron = \"0/5 * * * * ?\";\n+    private final int shardingTotalCount = 1;\n+    private final String shardingItemParameters = \"0=test\";\n+    private final String jobParameters = \"parameter\";\n+\n+    @Bean\n+    public SimpleJob simpleJob() {\n+        return new DemoSimpleJob();\n+    }\n+\n+    @Bean(initMethod = \"init\")\n+    public ZookeeperRegistryCenter regCenter(@Value(\"${elasticjob.regCenter.serverList}\") final String serverList,\n+                                             @Value(\"${elasticjob.regCenter.namespace}\") final String namespace) {\n+        return new ZookeeperRegistryCenter(new ZookeeperConfiguration(serverList, namespace));\n+    }\n+\n+    @Bean(initMethod = \"init\")\n+    public JobScheduler simpleJobScheduler(final SimpleJob simpleJob, final CoordinatorRegistryCenter regCenter) {\n+        return new SpringJobScheduler(simpleJob, regCenter,\n+                getLiteJobConfiguration(simpleJob.getClass(),\n+                cron, shardingTotalCount, shardingItemParameters, jobParameters));\n+    }\n+\n+    private LiteJobConfiguration getLiteJobConfiguration(final Class<? extends SimpleJob> jobClass,\n+                                                         final String cron,\n+                                                         final int shardingTotalCount,\n+                                                         final String shardingItemParameters,\n+                                                         final String jobParameters) {\n+        // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e58949a992cc5201f285016cb045b046bcf9eff6"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg5NTE0Ng==", "bodyText": "ok", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r477895146", "createdAt": "2020-08-27T01:46:59Z", "author": {"login": "hailin0"}, "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/job/JobConfig.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.elasticjob.job;\n+\n+import com.dangdang.ddframe.job.api.simple.SimpleJob;\n+import com.dangdang.ddframe.job.config.JobCoreConfiguration;\n+import com.dangdang.ddframe.job.config.simple.SimpleJobConfiguration;\n+import com.dangdang.ddframe.job.lite.api.JobScheduler;\n+import com.dangdang.ddframe.job.lite.config.LiteJobConfiguration;\n+import com.dangdang.ddframe.job.lite.spring.api.SpringJobScheduler;\n+import com.dangdang.ddframe.job.reg.base.CoordinatorRegistryCenter;\n+import com.dangdang.ddframe.job.reg.zookeeper.ZookeeperConfiguration;\n+import com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class JobConfig {\n+\n+    private final String cron = \"0/5 * * * * ?\";\n+    private final int shardingTotalCount = 1;\n+    private final String shardingItemParameters = \"0=test\";\n+    private final String jobParameters = \"parameter\";\n+\n+    @Bean\n+    public SimpleJob simpleJob() {\n+        return new DemoSimpleJob();\n+    }\n+\n+    @Bean(initMethod = \"init\")\n+    public ZookeeperRegistryCenter regCenter(@Value(\"${elasticjob.regCenter.serverList}\") final String serverList,\n+                                             @Value(\"${elasticjob.regCenter.namespace}\") final String namespace) {\n+        return new ZookeeperRegistryCenter(new ZookeeperConfiguration(serverList, namespace));\n+    }\n+\n+    @Bean(initMethod = \"init\")\n+    public JobScheduler simpleJobScheduler(final SimpleJob simpleJob, final CoordinatorRegistryCenter regCenter) {\n+        return new SpringJobScheduler(simpleJob, regCenter,\n+                getLiteJobConfiguration(simpleJob.getClass(),\n+                cron, shardingTotalCount, shardingItemParameters, jobParameters));\n+    }\n+\n+    private LiteJobConfiguration getLiteJobConfiguration(final Class<? extends SimpleJob> jobClass,\n+                                                         final String cron,\n+                                                         final int shardingTotalCount,\n+                                                         final String shardingItemParameters,\n+                                                         final String jobParameters) {\n+        // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg1MzA3NQ=="}, "originalCommit": {"oid": "e58949a992cc5201f285016cb045b046bcf9eff6"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NzkzNzQzOnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyOToxM1rOHH0Ang==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyOToxM1rOHH0Ang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk1NDIwNg==", "bodyText": "What is this?", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r477954206", "createdAt": "2020-08-27T02:29:13Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.elasticjob.controller;\n+\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/case\")\n+@Log4j2\n+public class CaseController {\n+\n+    private static final String SUCCESS = \"Success\";\n+\n+    @RequestMapping(\"/call\")\n+    @ResponseBody\n+    public String call() {\n+        // your codes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e58949a992cc5201f285016cb045b046bcf9eff6"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NzkzODY1OnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyOToyM1rOHH0BgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMzozNTo0M1rOHH5nNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk1NDQzMw==", "bodyText": "Same here.", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r477954433", "createdAt": "2020-08-27T02:29:23Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.elasticjob.controller;\n+\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/case\")\n+@Log4j2\n+public class CaseController {\n+\n+    private static final String SUCCESS = \"Success\";\n+\n+    @RequestMapping(\"/call\")\n+    @ResponseBody\n+    public String call() {\n+        // your codes\n+        return SUCCESS;\n+    }\n+\n+    @RequestMapping(\"/healthCheck\")\n+    @ResponseBody\n+    public String healthCheck() {\n+        // your codes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e58949a992cc5201f285016cb045b046bcf9eff6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODAyMDI2Mw==", "bodyText": "This is a template generated by test framework", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r478020263", "createdAt": "2020-08-27T03:17:01Z", "author": {"login": "hailin0"}, "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.elasticjob.controller;\n+\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/case\")\n+@Log4j2\n+public class CaseController {\n+\n+    private static final String SUCCESS = \"Success\";\n+\n+    @RequestMapping(\"/call\")\n+    @ResponseBody\n+    public String call() {\n+        // your codes\n+        return SUCCESS;\n+    }\n+\n+    @RequestMapping(\"/healthCheck\")\n+    @ResponseBody\n+    public String healthCheck() {\n+        // your codes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk1NDQzMw=="}, "originalCommit": {"oid": "e58949a992cc5201f285016cb045b046bcf9eff6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA0NjAwNg==", "bodyText": "Don't keep them. Template is for reminding you only.", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r478046006", "createdAt": "2020-08-27T03:35:43Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.elasticjob.controller;\n+\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/case\")\n+@Log4j2\n+public class CaseController {\n+\n+    private static final String SUCCESS = \"Success\";\n+\n+    @RequestMapping(\"/call\")\n+    @ResponseBody\n+    public String call() {\n+        // your codes\n+        return SUCCESS;\n+    }\n+\n+    @RequestMapping(\"/healthCheck\")\n+    @ResponseBody\n+    public String healthCheck() {\n+        // your codes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk1NDQzMw=="}, "originalCommit": {"oid": "e58949a992cc5201f285016cb045b046bcf9eff6"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4979, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}