{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNzE5MjE5", "number": 5739, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMzo1MjozMlrOE0DGTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMzo1MjozMlrOE0DGTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDEyMTczOnYy", "diffSide": "RIGHT", "path": "docs/en/concepts-and-designs/oal.md", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMzo1MjozMlrOHrnllQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNDozMzo1MFrOHrnzoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTQxMw==", "bodyText": "Hi, there is a word chosen game here. :) Take a look about this, https://ell.stackexchange.com/questions/47706/using-contain-vs-include-vs-consist-of-appropriately#:~:text=The%20distinction%20between%20'includes'%20and,container%2C%20and%20contains%20the%20hats.&text=Inside%20the%20box%20is%20a,and%20consists%20of)%20the%20hats.\nAnd check the JDK API. For a list, we should use contain. And don't use contains, if you look at the OAL scripts, tags contains is wrong in English grammar.", "url": "https://github.com/apache/skywalking/pull/5739#discussion_r515499413", "createdAt": "2020-10-31T13:52:32Z", "author": {"login": "wu-sheng"}, "path": "docs/en/concepts-and-designs/oal.md", "diffHunk": "@@ -34,7 +34,7 @@ Read [Scope Definitions](scope-definitions.md), you can find all existing Scopes\n Use filter to build the conditions for the value of fields, by using field name and expression. \n \n The expressions support to link by `and`, `or` and `(...)`. \n-The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` and `like %...%`, with type detection based of field type. Trigger compile\n+The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` , `like %...%` , `inclueds` and `excludes`, with type detection based of field type. Trigger compile", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1202e64e871440757a8b214d57792b2586cbd48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTUyOA==", "bodyText": "Do you face trouble if use not contain as an operator?", "url": "https://github.com/apache/skywalking/pull/5739#discussion_r515499528", "createdAt": "2020-10-31T13:53:56Z", "author": {"login": "wu-sheng"}, "path": "docs/en/concepts-and-designs/oal.md", "diffHunk": "@@ -34,7 +34,7 @@ Read [Scope Definitions](scope-definitions.md), you can find all existing Scopes\n Use filter to build the conditions for the value of fields, by using field name and expression. \n \n The expressions support to link by `and`, `or` and `(...)`. \n-The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` and `like %...%`, with type detection based of field type. Trigger compile\n+The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` , `like %...%` , `inclueds` and `excludes`, with type detection based of field type. Trigger compile", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTQxMw=="}, "originalCommit": {"oid": "d1202e64e871440757a8b214d57792b2586cbd48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwMjI5Ng==", "bodyText": "yes,  some segments will not have tags sometimes. So I provided excludes solving this case.", "url": "https://github.com/apache/skywalking/pull/5739#discussion_r515502296", "createdAt": "2020-10-31T14:25:58Z", "author": {"login": "EvanLjp"}, "path": "docs/en/concepts-and-designs/oal.md", "diffHunk": "@@ -34,7 +34,7 @@ Read [Scope Definitions](scope-definitions.md), you can find all existing Scopes\n Use filter to build the conditions for the value of fields, by using field name and expression. \n \n The expressions support to link by `and`, `or` and `(...)`. \n-The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` and `like %...%`, with type detection based of field type. Trigger compile\n+The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` , `like %...%` , `inclueds` and `excludes`, with type detection based of field type. Trigger compile", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTQxMw=="}, "originalCommit": {"oid": "d1202e64e871440757a8b214d57792b2586cbd48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwMjY3MQ==", "bodyText": "I actually first using Contains rather than includes. but not contains have 2 words. so I choose excludes and includes as last.", "url": "https://github.com/apache/skywalking/pull/5739#discussion_r515502671", "createdAt": "2020-10-31T14:30:24Z", "author": {"login": "EvanLjp"}, "path": "docs/en/concepts-and-designs/oal.md", "diffHunk": "@@ -34,7 +34,7 @@ Read [Scope Definitions](scope-definitions.md), you can find all existing Scopes\n Use filter to build the conditions for the value of fields, by using field name and expression. \n \n The expressions support to link by `and`, `or` and `(...)`. \n-The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` and `like %...%`, with type detection based of field type. Trigger compile\n+The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` , `like %...%` , `inclueds` and `excludes`, with type detection based of field type. Trigger compile", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTQxMw=="}, "originalCommit": {"oid": "d1202e64e871440757a8b214d57792b2586cbd48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwMjg1OQ==", "bodyText": "not contain seems very clear, in SQL, you have not in, right?", "url": "https://github.com/apache/skywalking/pull/5739#discussion_r515502859", "createdAt": "2020-10-31T14:32:07Z", "author": {"login": "wu-sheng"}, "path": "docs/en/concepts-and-designs/oal.md", "diffHunk": "@@ -34,7 +34,7 @@ Read [Scope Definitions](scope-definitions.md), you can find all existing Scopes\n Use filter to build the conditions for the value of fields, by using field name and expression. \n \n The expressions support to link by `and`, `or` and `(...)`. \n-The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` and `like %...%`, with type detection based of field type. Trigger compile\n+The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` , `like %...%` , `inclueds` and `excludes`, with type detection based of field type. Trigger compile", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTQxMw=="}, "originalCommit": {"oid": "d1202e64e871440757a8b214d57792b2586cbd48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwMzAwOQ==", "bodyText": "ok, I will change the words to contain and not contain now.", "url": "https://github.com/apache/skywalking/pull/5739#discussion_r515503009", "createdAt": "2020-10-31T14:33:50Z", "author": {"login": "EvanLjp"}, "path": "docs/en/concepts-and-designs/oal.md", "diffHunk": "@@ -34,7 +34,7 @@ Read [Scope Definitions](scope-definitions.md), you can find all existing Scopes\n Use filter to build the conditions for the value of fields, by using field name and expression. \n \n The expressions support to link by `and`, `or` and `(...)`. \n-The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` and `like %...%`, with type detection based of field type. Trigger compile\n+The OPs support `==`, `!=`, `>`, `<`, `>=`, `<=`, `in [...]` ,`like %...`, `like ...%` , `like %...%` , `inclueds` and `excludes`, with type detection based of field type. Trigger compile", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTQxMw=="}, "originalCommit": {"oid": "d1202e64e871440757a8b214d57792b2586cbd48"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4731, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}