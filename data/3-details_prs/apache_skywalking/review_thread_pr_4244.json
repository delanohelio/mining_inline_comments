{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNDc0NzY5", "number": 4244, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwMDoyOTozMVrODYrtIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwOTo1ODoxOFrODYxGAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjA4NDgxOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/context/ContextCarrierV2HeaderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwMDoyOTozMVrOFertEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwMDoyOTozMVrOFertEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcxNzY0OA==", "bodyText": "What is this TODO for?", "url": "https://github.com/apache/skywalking/pull/4244#discussion_r367717648", "createdAt": "2020-01-17T00:29:31Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/context/ContextCarrierV2HeaderTest.java", "diffHunk": "@@ -107,37 +58,19 @@ public void testSerializeV2Header() {\n         CarrierItem next = contextCarrier.items();\n         while (next.hasNext()) {\n             next = next.next();\n-            if (next.getHeadKey().equals(\"sw3\")) {\n-                Assert.assertEquals(\"\", next.getHeadValue());\n-            } else if (next.getHeadKey().equals(\"sw6\")) {\n-                /**\n-                 * sampleFlag-traceId-segmentId-spanId-parentAppInstId-entryAppInstId-peerHost-entryEndpoint-parentEndpoint\n-                 *\n-                 * \"1-3.4.5-1.2.3-4-1-1-#127.0.0.1:8080-#/portal-123\"\n-                 */\n-                Assert.assertEquals(\"1-My40LjU=-MS4yLjM=-4-1-1-IzEyNy4wLjAuMTo4MDgw-Iy9wb3J0YWw=-MTIz\", next.getHeadValue());\n-            } else {\n-                Assert.fail(\"unexpected key\");\n-            }\n+            /*\n+             * sampleFlag-traceId-segmentId-spanId-parentAppInstId-entryAppInstId-peerHost-entryEndpoint-parentEndpoint\n+             *\n+             * \"1-3.4.5-1.2.3-4-1-1-#127.0.0.1:8080-#/portal-123\"\n+             */\n+            Assert.assertEquals(\"1-My40LjU=-MS4yLjM=-4-1-1-IzEyNy4wLjAuMTo4MDgw-Iy9wb3J0YWw=-MTIz\", next.getHeadValue());\n         }\n \n-        Config.Agent.ACTIVE_V1_HEADER = true;\n-        try {\n-            next = contextCarrier.items();\n-            while (next.hasNext()) {\n-                next = next.next();\n-                if (next.getHeadKey().equals(\"sw3\")) {\n-                    Assert.assertEquals(\"1.2.3|4|1|1|#127.0.0.1:8080|#/portal|123|3.4.5\", next.getHeadValue());\n-                } else if (next.getHeadKey().equals(\"sw6\")) {\n-                    //TODO, no BASE64\n-                    Assert.assertEquals(\"1-My40LjU=-MS4yLjM=-4-1-1-IzEyNy4wLjAuMTo4MDgw-Iy9wb3J0YWw=-MTIz\", next.getHeadValue());\n-                } else {\n-                    Assert.fail(\"unexpected key\");\n-                }\n-            }\n-\n-        } finally {\n-            Config.Agent.ACTIVE_V1_HEADER = false;\n+        next = contextCarrier.items();\n+        while (next.hasNext()) {\n+            next = next.next();\n+            //TODO, no BASE64", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a8a8839e1d7ec27eba1ba9951be444ee6848ee"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3Mjk2NzY4OnYy", "diffSide": "RIGHT", "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/parser/listener/segment/SegmentSpanListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwOTo1ODoxOFrOFe0BPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwOTo1ODoxOFrOFe0BPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1Mzg4Ng==", "bodyText": "segmentCoreInfo.getVersion().number Why write in this way? .number?", "url": "https://github.com/apache/skywalking/pull/4244#discussion_r367853886", "createdAt": "2020-01-17T09:58:18Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/parser/listener/segment/SegmentSpanListener.java", "diffHunk": "@@ -81,10 +82,7 @@ public void parseFirst(SpanDecorator spanDecorator, SegmentCoreInfo segmentCoreI\n         segment.setIsError(BooleanUtils.booleanToValue(segmentCoreInfo.isError()));\n         segment.setTimeBucket(timeBucket);\n         segment.setDataBinary(segmentCoreInfo.getDataBinary());\n-        /**\n-         * Only consider v1, v2 compatible for now.\n-         */\n-        segment.setVersion(segmentCoreInfo.isV2() ? 2 : 1);\n+        segment.setVersion(segmentCoreInfo.getVersion().number);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8be7029cbcd9162220f2c68ddfd1c2e46b3f05d"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4529, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}