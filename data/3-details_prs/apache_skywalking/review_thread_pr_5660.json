{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNDgxODc2", "number": 5660, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozMDo0N1rOEtICcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMToyMTo0MlrOEtR59Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzUzMDczOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentServiceClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozMDo0N1rOHgvfYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozMDo0N1rOHgvfYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NDU2Mw==", "bodyText": "FutureReturnValueIgnored:  Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.", "url": "https://github.com/apache/skywalking/pull/5660#discussion_r504094563", "createdAt": "2020-10-13T16:30:47Z", "author": {"login": "sonatype-lift"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentServiceClient.java", "diffHunk": "@@ -60,6 +74,39 @@ public void onComplete() {\n     @Override\n     public void shutdown() {\n         TracingContext.ListenerManager.remove(this);\n+        carrier.shutdownConsumers();\n+    }\n+\n+    @Override\n+    public void init() {\n+\n+    }\n+\n+    @Override\n+    public void consume(final List<TraceSegment> data) {\n+        data.forEach(traceSegment -> {\n+            SegmentObject upstreamSegment = traceSegment.transform();\n+            ProducerRecord<String, Bytes> record = new ProducerRecord<>(\n+                topic,\n+                upstreamSegment.getTraceSegmentId(),\n+                Bytes.wrap(upstreamSegment.toByteArray())\n+            );\n+            producer.send(record, (m, e) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTE0NzQxOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentServiceClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMToyMTo0MlrOHg-2Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMTozNjo0N1rOHg_FDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0NjE3MA==", "bodyText": "previous version is better\uff1f\n    @Override\n    public void afterFinished(TraceSegment traceSegment) {\n        if (traceSegment.isIgnore()) {\n            LOGGER.debug(\"Trace[TraceId={}] is ignored.\", traceSegment.getTraceSegmentId());\n            return;\n        }\n        if (!carrier.produce(traceSegment)) {\n            if (LOGGER.isDebugEnable()) {\n                LOGGER.debug(\"One trace segment has been abandoned, cause by buffer is full.\");\n            }\n        }\n    }", "url": "https://github.com/apache/skywalking/pull/5660#discussion_r504346170", "createdAt": "2020-10-14T01:21:42Z", "author": {"login": "nileblack"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentServiceClient.java", "diffHunk": "@@ -72,13 +119,7 @@ public void afterFinished(final TraceSegment traceSegment) {\n             LOGGER.debug(\"Trace[TraceId={}] is ignored.\", traceSegment.getTraceSegmentId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0OTk2Nw==", "bodyText": "@nileblack If you want to enhance more, we are welcome you to submit pull request.", "url": "https://github.com/apache/skywalking/pull/5660#discussion_r504349967", "createdAt": "2020-10-14T01:36:47Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/optional-reporter-plugins/kafka-reporter-plugin/src/main/java/org/apache/skywalking/apm/agent/core/kafka/KafkaTraceSegmentServiceClient.java", "diffHunk": "@@ -72,13 +119,7 @@ public void afterFinished(final TraceSegment traceSegment) {\n             LOGGER.debug(\"Trace[TraceId={}] is ignored.\", traceSegment.getTraceSegmentId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM0NjE3MA=="}, "originalCommit": {"oid": "ec040b81e1e4d65870e69688e5de7b2c72f4f9e8"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4901, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}