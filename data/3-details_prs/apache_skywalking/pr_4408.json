{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODIzMTY0", "number": 4408, "title": "Support topology with multiple selected services", "bodyText": "This PR is following #4392 and adopt the latest query protocol. Include the following changes\n\nFormat codes\nAdd comments for storage interface of topology\nNarrow the scope of secondary query to get the component name. Only query the nodes as client out of the given service Ids.\nAdopt the new query parameter easily.\n\n@arugal @kezhenxu94 @dmsolr @Aderm Could any of you send a pull request to this branch to add the topology query check by using one given service id and multiple IDs? I think we missed that(given service id) before. This should only be checked in e2e-cluster-with-gateway case? WDYT?", "createdAt": "2020-02-24T05:58:43Z", "url": "https://github.com/apache/skywalking/pull/4408", "merged": true, "mergeCommit": {"oid": "d63f2c9427d7b23e55dbe7127a99662338dfb482"}, "closed": true, "closedAt": "2020-02-24T15:01:14Z", "author": {"login": "wu-sheng"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHVVVuAH2gAyMzc4ODIzMTY0OjJmOTljOGI2ZWU1MTRiOTU3ZTVhY2Q3Yzg4N2FhODVkMjQ3ZDNjZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHe176gFqTM2MzQ1MTcyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2f99c8b6ee514b957e5acd7c887aa85d247d3cf0", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/2f99c8b6ee514b957e5acd7c887aa85d247d3cf0", "committedDate": "2020-02-24T03:54:52Z", "message": "1. Format codes\n\n2. Add comments for storage interface of topology\n\n3. Narrow the scope of secondary query to get the component name. Only query the nodes as client out of the given service Ids."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f90574670355af4aa3a8794abbec99dbc80515a2", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/f90574670355af4aa3a8794abbec99dbc80515a2", "committedDate": "2020-02-24T05:53:23Z", "message": "Support topology with multiple selected services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee340cbbae4e73efe80c25475147a7ccc5981c58", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/ee340cbbae4e73efe80c25475147a7ccc5981c58", "committedDate": "2020-02-24T06:41:42Z", "message": "Sync the typo fix in the protocol"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjUxMzM2", "url": "https://github.com/apache/skywalking/pull/4408#pullrequestreview-363251336", "createdAt": "2020-02-24T09:27:30Z", "commit": {"oid": "ee340cbbae4e73efe80c25475147a7ccc5981c58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyNzozMFrOFtZ0Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyNzozMFrOFtZ0Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzE1NA==", "bodyText": "when serviceIds.size() == 0, all from client side source will query in serverside. same as before. but when serviceIds.size() != 0, this will exclude some serviceId which query from server side. There may be a node type, which requires server side to determine, and is related to the selected service.", "url": "https://github.com/apache/skywalking/pull/4408#discussion_r383153154", "createdAt": "2020-02-24T09:27:30Z", "author": null, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/query/TopologyQueryService.java", "diffHunk": "@@ -90,30 +90,44 @@ private EndpointInventoryCache getEndpointInventoryCache() {\n     }\n \n     public Topology getGlobalTopology(final Downsampling downsampling, final long startTB,\n-        final long endTB) throws IOException {\n+                                      final long endTB) throws IOException {\n         logger.debug(\"Downsampling: {}, startTimeBucket: {}, endTimeBucket: {}\", downsampling, startTB, endTB);\n-        List<Call.CallDetail> serviceRelationServerCalls = getTopologyQueryDAO().loadServerSideServiceRelations(downsampling, startTB, endTB);\n-        List<Call.CallDetail> serviceRelationClientCalls = getTopologyQueryDAO().loadClientSideServiceRelations(downsampling, startTB, endTB);\n+        List<Call.CallDetail> serviceRelationServerCalls = getTopologyQueryDAO().loadServerSideServiceRelations(\n+            downsampling, startTB, endTB);\n+        List<Call.CallDetail> serviceRelationClientCalls = getTopologyQueryDAO().loadClientSideServiceRelations(\n+            downsampling, startTB, endTB);\n \n         TopologyBuilder builder = new TopologyBuilder(moduleManager);\n         return builder.build(serviceRelationClientCalls, serviceRelationServerCalls);\n     }\n \n     public Topology getServiceTopology(final Downsampling downsampling, final long startTB, final long endTB,\n-        final int serviceId) throws IOException {\n-        List<Integer> serviceIds = new ArrayList<>();\n-        serviceIds.add(serviceId);\n-\n-        List<Call.CallDetail> serviceRelationClientCalls = getTopologyQueryDAO().loadSpecifiedClientSideServiceRelations(downsampling, startTB, endTB, serviceIds);\n-        List<Call.CallDetail> serviceRelationServerCalls = getTopologyQueryDAO().loadSpecifiedServerSideServiceRelations(downsampling, startTB, endTB, serviceIds);\n+                                       final List<Integer> serviceIds) throws IOException {\n+        List<Call.CallDetail> serviceRelationClientCalls = getTopologyQueryDAO().loadSpecifiedClientSideServiceRelations(\n+            downsampling, startTB, endTB, serviceIds);\n+        List<Call.CallDetail> serviceRelationServerCalls = getTopologyQueryDAO().loadSpecifiedServerSideServiceRelations(\n+            downsampling, startTB, endTB, serviceIds);\n \n         TopologyBuilder builder = new TopologyBuilder(moduleManager);\n         Topology topology = builder.build(serviceRelationClientCalls, serviceRelationServerCalls);\n \n-        List<Integer> sourceServiceIds = new ArrayList<>();\n-        serviceRelationClientCalls.forEach(call -> sourceServiceIds.add(call.getSource()));\n-        if (CollectionUtils.isNotEmpty(sourceServiceIds)) {\n-            List<Call.CallDetail> sourceCalls = getTopologyQueryDAO().loadSpecifiedServerSideServiceRelations(downsampling, startTB, endTB, sourceServiceIds);\n+        /**\n+         * The topology built above is complete.\n+         * There is a special case, there may be a node of the `serviceIds` call these services as and only as a client, so it is included in the topology,\n+         * its component name could be missed as not being queried before. We add another query about this.\n+         */\n+        List<Integer> outScopeSourceServiceIds = new ArrayList<>();\n+        serviceRelationClientCalls.forEach(call -> {\n+            // Client side relationships exclude the given services(#serviceIds)\n+            // The given services(#serviceIds)'s component names have been included inside `serviceRelationServerCalls`\n+            if (!serviceIds.contains(call.getSource())) {\n+                outScopeSourceServiceIds.add(call.getSource());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee340cbbae4e73efe80c25475147a7ccc5981c58"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNDUxNzIy", "url": "https://github.com/apache/skywalking/pull/4408#pullrequestreview-363451722", "createdAt": "2020-02-24T14:59:37Z", "commit": {"oid": "ee340cbbae4e73efe80c25475147a7ccc5981c58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2702, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}