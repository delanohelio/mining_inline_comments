{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2ODMwODM1", "number": 6103, "title": "new feature add witness method", "bodyText": "If this is non-trivial feature, paste the links/URLs to the design doc.\n\n\n Update the documentation to include this new feature.\n\n\n Tests(including UT, IT, E2E) are added to verify the new feature.\n\n\n If it's UI related, attach the screenshots below.\n\n\n If this pull request closes/resolves/fixes an existing issue, replace the issue number. Closes #. No issue. Original discussion happened on the mail list, https://lists.apache.org/thread.html/r4f67a7ed880a493e4e82bd2e9a0c26a6e43c37bbfcdaebe7b1a340dc%40%3Cdev.skywalking.apache.org%3E\n\n\n Update the CHANGES log.", "createdAt": "2020-12-30T07:24:05Z", "url": "https://github.com/apache/skywalking/pull/6103", "merged": true, "mergeCommit": {"oid": "e0a4c44036b33eadc0add7f91a2e5fd6caca7098"}, "closed": true, "closedAt": "2021-01-08T01:01:36Z", "author": {"login": "libinglong"}, "timelineItems": {"totalCount": 54, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrJ00agH2gAyNTQ2ODMwODM1OjNmMjRlYTJkMGQxNjJlODY3NjE5ODgzY2M2NjFiZWI1N2ZiNWVhNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdt9vf3gFqTU2MzkyNjc1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3f24ea2d0d162e867619883cc661beb57fb5ea4d", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/3f24ea2d0d162e867619883cc661beb57fb5ea4d", "committedDate": "2020-12-30T07:02:49Z", "message": "add witness method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25a3cc19b04270d3cc4a172f4c728139131c22ec", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/25a3cc19b04270d3cc4a172f4c728139131c22ec", "committedDate": "2020-12-30T07:22:54Z", "message": "add change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c25d532e3b4ec3447626837f11a361b2f068bc9c", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/c25d532e3b4ec3447626837f11a361b2f068bc9c", "committedDate": "2020-12-30T07:28:58Z", "message": "Merge branch 'master' into lbl-new-future-add-witness-method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTM1Nzkw", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559935790", "createdAt": "2020-12-30T07:27:07Z", "commit": {"oid": "25a3cc19b04270d3cc4a172f4c728139131c22ec"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoyNzowN1rOIMgXYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzozMDoxOFrOIMggLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4NDA5OA==", "bodyText": "Remove this", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r549984098", "createdAt": "2020-12-30T07:27:07Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessMethod.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+import java.util.StringJoiner;\n+\n+/**\n+ * @author binglongli217932\n+ * <a href=\"mailto:libinglong9@gmail.com\">libinglong:libinglong9@gmail.com</a>\n+ * @since 2020/12/30\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25a3cc19b04270d3cc4a172f4c728139131c22ec"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4NDE3OA==", "bodyText": "Capitalize this sentence", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r549984178", "createdAt": "2020-12-30T07:27:16Z", "author": {"login": "kezhenxu94"}, "path": "CHANGES.md", "diffHunk": "@@ -22,6 +22,7 @@ Release Notes.\n * Fix DataCarrier's `org.apache.skywalking.apm.commons.datacarrier.buffer.Buffer` implementation isn't activated in `IF_POSSIBLE` mode.\n * Fix ArrayBlockingQueueBuffer's useless `IF_POSSIBLE` mode list\n * Support building gRPC TLS channel but CA file is not required.\n+* add witness method for plugin develop.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25a3cc19b04270d3cc4a172f4c728139131c22ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4NjM1MA==", "bodyText": "code style\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(empty){\n          \n          \n            \n                            if (empty) {", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r549986350", "createdAt": "2020-12-30T07:30:18Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java", "diffHunk": "@@ -70,6 +75,25 @@\n                 }\n             }\n         }\n+        List<WitnessMethod> witnessMethods = witnessMethods();\n+        if (!CollectionUtil.isEmpty(witnessMethods)) {\n+            for (WitnessMethod witnessMethod : witnessMethods) {\n+                TypePool.Resolution resolution = WitnessClassFinder.INSTANCE.getResolution(witnessMethod.declaringClassName, classLoader);\n+                if (!resolution.isResolved()) {\n+                    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because declaringClass {} of the witness method is not existed.\", transformClassName, interceptorDefineClassName, witnessMethod.declaringClassName);\n+                    return null;\n+                }\n+                boolean empty = resolution.resolve()\n+                        .getDeclaredMethods()\n+                        .filter(witnessMethod.elementMatcher)\n+                        .isEmpty();\n+                if(empty){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c25d532e3b4ec3447626837f11a361b2f068bc9c"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da69664c8bc2b62346b7e0e8f73cb3c2edd0c563", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/da69664c8bc2b62346b7e0e8f73cb3c2edd0c563", "committedDate": "2020-12-30T07:37:07Z", "message": "change code style, file header, etc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e9d2b438250e1f4465a049706aea943f52ad39f", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/1e9d2b438250e1f4465a049706aea943f52ad39f", "committedDate": "2020-12-30T07:39:09Z", "message": "Merge branch 'lbl-new-future-add-witness-method' of https://github.com/libinglong/skywalking into lbl-new-future-add-witness-method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTM2OTMy", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559936932", "createdAt": "2020-12-30T07:31:53Z", "commit": {"oid": "c25d532e3b4ec3447626837f11a361b2f068bc9c"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzozMTo1M1rOIMgk-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzo0MjozMlrOIMhFFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4NzU3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Collections.emptyList();\n          \n          \n            \n                    return null;\n          \n      \n    \n    \n  \n\nWill be better performance.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r549987577", "createdAt": "2020-12-30T07:31:53Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java", "diffHunk": "@@ -104,6 +128,10 @@\n         return new String[] {};\n     }\n \n+    protected List<WitnessMethod> witnessMethods() {\n+        return Collections.emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c25d532e3b4ec3447626837f11a361b2f068bc9c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk5MTU3OQ==", "bodyText": "Please provide the getElementMatcher() method, don't access the fields of another class.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r549991579", "createdAt": "2020-12-30T07:37:12Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java", "diffHunk": "@@ -70,6 +75,25 @@\n                 }\n             }\n         }\n+        List<WitnessMethod> witnessMethods = witnessMethods();\n+        if (!CollectionUtil.isEmpty(witnessMethods)) {\n+            for (WitnessMethod witnessMethod : witnessMethods) {\n+                TypePool.Resolution resolution = WitnessClassFinder.INSTANCE.getResolution(witnessMethod.declaringClassName, classLoader);\n+                if (!resolution.isResolved()) {\n+                    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because declaringClass {} of the witness method is not existed.\", transformClassName, interceptorDefineClassName, witnessMethod.declaringClassName);\n+                    return null;\n+                }\n+                boolean empty = resolution.resolve()\n+                        .getDeclaredMethods()\n+                        .filter(witnessMethod.elementMatcher)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c25d532e3b4ec3447626837f11a361b2f068bc9c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk5MzU3Nw==", "bodyText": "getDeclaredMethods doesn't include the inherited methods, right?", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r549993577", "createdAt": "2020-12-30T07:39:45Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java", "diffHunk": "@@ -70,6 +75,25 @@\n                 }\n             }\n         }\n+        List<WitnessMethod> witnessMethods = witnessMethods();\n+        if (!CollectionUtil.isEmpty(witnessMethods)) {\n+            for (WitnessMethod witnessMethod : witnessMethods) {\n+                TypePool.Resolution resolution = WitnessClassFinder.INSTANCE.getResolution(witnessMethod.declaringClassName, classLoader);\n+                if (!resolution.isResolved()) {\n+                    LOGGER.warn(\"enhance class {} by plugin {} is not working. Because declaringClass {} of the witness method is not existed.\", transformClassName, interceptorDefineClassName, witnessMethod.declaringClassName);\n+                    return null;\n+                }\n+                boolean empty = resolution.resolve()\n+                        .getDeclaredMethods()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c25d532e3b4ec3447626837f11a361b2f068bc9c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk5NTAzNQ==", "bodyText": "This existing logic should move into the WitnessClassFinder from my understanding. And you should add UTs for WitnessClassFinder.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r549995035", "createdAt": "2020-12-30T07:41:32Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java", "diffHunk": "@@ -70,6 +75,25 @@\n                 }\n             }\n         }\n+        List<WitnessMethod> witnessMethods = witnessMethods();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c25d532e3b4ec3447626837f11a361b2f068bc9c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk5NTY1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Add witness method for plugin develop.\n          \n          \n            \n            * Add witness method mechanism in the agent plugin core.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r549995651", "createdAt": "2020-12-30T07:42:18Z", "author": {"login": "wu-sheng"}, "path": "CHANGES.md", "diffHunk": "@@ -22,6 +22,7 @@ Release Notes.\n * Fix DataCarrier's `org.apache.skywalking.apm.commons.datacarrier.buffer.Buffer` implementation isn't activated in `IF_POSSIBLE` mode.\n * Fix ArrayBlockingQueueBuffer's useless `IF_POSSIBLE` mode list\n * Support building gRPC TLS channel but CA file is not required.\n+* Add witness method for plugin develop.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e9d2b438250e1f4465a049706aea943f52ad39f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk5NTc5OQ==", "bodyText": "The plugin development doc is required to update too.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r549995799", "createdAt": "2020-12-30T07:42:32Z", "author": {"login": "wu-sheng"}, "path": "CHANGES.md", "diffHunk": "@@ -22,6 +22,7 @@ Release Notes.\n * Fix DataCarrier's `org.apache.skywalking.apm.commons.datacarrier.buffer.Buffer` implementation isn't activated in `IF_POSSIBLE` mode.\n * Fix ArrayBlockingQueueBuffer's useless `IF_POSSIBLE` mode list\n * Support building gRPC TLS channel but CA file is not required.\n+* Add witness method for plugin develop.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk5NTY1MQ=="}, "originalCommit": {"oid": "1e9d2b438250e1f4465a049706aea943f52ad39f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b78ef127f88e9ab5780065f8bbf81e81c45a40ff", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/b78ef127f88e9ab5780065f8bbf81e81c45a40ff", "committedDate": "2020-12-30T07:49:07Z", "message": "Update apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "859aef3bb5aad74ec262971c3490ed55cf4e5e16", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/859aef3bb5aad74ec262971c3490ed55cf4e5e16", "committedDate": "2020-12-30T07:57:14Z", "message": "Update CHANGES.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTUwMjIw", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559950220", "createdAt": "2020-12-30T08:22:32Z", "commit": {"oid": "1e9d2b438250e1f4465a049706aea943f52ad39f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODoyMjozMlrOIMi46g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODoyMjozMlrOIMi46g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAyNTQ1MA==", "bodyText": "THREAD_SAFETY_VIOLATION:  Read/Write race. Non-private method WitnessClassFinder.exist(...) indirectly reads without synchronization from container this.poolMap via call to Map.get(...). Potentially races with write in method WitnessClassFinder.getResolution(...).\nReporting because another access to the same memory occurs on a background thread, although this access may not.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550025450", "createdAt": "2020-12-30T08:22:32Z", "author": {"login": "sonatype-lift"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessClassFinder.java", "diffHunk": "@@ -36,6 +36,17 @@\n      * @return true, if the given witnessClass exists, through the given classLoader.\n      */\n     public boolean exist(String witnessClass, ClassLoader classLoader) {\n+        return getResolution(witnessClass, classLoader)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e9d2b438250e1f4465a049706aea943f52ad39f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTUwMjI1", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559950225", "createdAt": "2020-12-30T08:22:33Z", "commit": {"oid": "1e9d2b438250e1f4465a049706aea943f52ad39f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODoyMjozM1rOIMi49w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODoyMjozM1rOIMi49w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAyNTQ2Mw==", "bodyText": "THREAD_SAFETY_VIOLATION:  Read/Write race. Non-private method WitnessClassFinder.getResolution(...) reads without synchronization from container this.poolMap via call to Map.get(...). Potentially races with write in method WitnessClassFinder.getResolution(...).\nReporting because this access may occur on a background thread.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550025463", "createdAt": "2020-12-30T08:22:33Z", "author": {"login": "sonatype-lift"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessClassFinder.java", "diffHunk": "@@ -46,9 +57,9 @@ public boolean exist(String witnessClass, ClassLoader classLoader) {\n             }\n         }\n         TypePool typePool = poolMap.get(mappingKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e9d2b438250e1f4465a049706aea943f52ad39f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0efb79509909f1fdbabbc3e91f12dce8dcca2ac8", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/0efb79509909f1fdbabbc3e91f12dce8dcca2ac8", "committedDate": "2020-12-30T08:27:11Z", "message": "move the witness logic to WitnessFinder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "768840e0f4c7581f72b7b375886eb8f597907782", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/768840e0f4c7581f72b7b375886eb8f597907782", "committedDate": "2020-12-30T08:59:11Z", "message": "add doc and unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTcxNDU4", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559971458", "createdAt": "2020-12-30T09:28:58Z", "commit": {"oid": "768840e0f4c7581f72b7b375886eb8f597907782"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOToyODo1OVrOIMmBLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOToyODo1OVrOIMmBLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA3NjcxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            4. If a plugin should be activated or not in different condition.You can Override the witnessClasses or witnessMethods.\n          \n          \n            \n            4. Set up `witnessClasses` and/or `witnessMethods` if the instrumentation should be activated in specific versions.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550076718", "createdAt": "2020-12-30T09:28:59Z", "author": {"login": "wu-sheng"}, "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "diffHunk": "@@ -299,6 +299,30 @@ The following sections will tell you how to implement the interceptor.\n tomcat-7.x/8.x=TomcatInstrumentation\n ```\n \n+4. If a plugin should be activated or not in different condition.You can Override the witnessClasses or witnessMethods.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "768840e0f4c7581f72b7b375886eb8f597907782"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTcxNTg0", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559971584", "createdAt": "2020-12-30T09:29:16Z", "commit": {"oid": "768840e0f4c7581f72b7b375886eb8f597907782"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOToyOToxNlrOIMmCJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOToyOToxNlrOIMmCJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA3Njk2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               protected List<WitnessMethod> witnessClasses() {\n          \n          \n            \n               protected List<WitnessMethod> witnessMethods() {\n          \n      \n    \n    \n  \n\nCopy/paste issue?", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550076964", "createdAt": "2020-12-30T09:29:16Z", "author": {"login": "wu-sheng"}, "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "diffHunk": "@@ -299,6 +299,30 @@ The following sections will tell you how to implement the interceptor.\n tomcat-7.x/8.x=TomcatInstrumentation\n ```\n \n+4. If a plugin should be activated or not in different condition.You can Override the witnessClasses or witnessMethods.\n+\n+   Example:\n+\n+   ```java\n+   //the plugin is activated only when the foo.Bar class exists.\n+   @Override\n+   protected String[] witnessClasses() {\n+     return new String[] {\n+       \"foo.Bar\"\n+     };\n+   }\n+   \n+   //the plugin is activated only when the foo.Bar#hello method exists.\n+   @Override\n+   protected List<WitnessMethod> witnessClasses() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "768840e0f4c7581f72b7b375886eb8f597907782"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTcyMDg2", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559972086", "createdAt": "2020-12-30T09:30:31Z", "commit": {"oid": "768840e0f4c7581f72b7b375886eb8f597907782"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOTozMDozMVrOIMmGUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOTozMDozMVrOIMmGUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA3ODAzNQ==", "bodyText": "Please add more tests also could be as demo about how to set witness methods with parameter type and return value.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550078035", "createdAt": "2020-12-30T09:30:31Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/witness/WitnessTest.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package org.apache.skywalking.apm.agent.core.plugin.witness;\n+\n+import net.bytebuddy.matcher.ElementMatchers;\n+import org.apache.skywalking.apm.agent.core.plugin.WitnessFinder;\n+import org.apache.skywalking.apm.agent.core.plugin.WitnessMethod;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * witness test\n+ */\n+public class WitnessTest {\n+\n+    private String className = \"org.apache.skywalking.apm.agent.core.plugin.witness.WitnessTest\";\n+\n+    @Test\n+    public void testWitnessClass(){\n+        Assert.assertTrue(WitnessFinder.INSTANCE.exist(className, this.getClass().getClassLoader()));\n+    }\n+\n+    @Test\n+    public void testWitnessMethod(){\n+        WitnessMethod witnessMethod = new WitnessMethod(className, ElementMatchers.named(\"testWitnessMethod\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "768840e0f4c7581f72b7b375886eb8f597907782"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4991a1b166dd77a807f2c4b91b22801786b209cb", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/4991a1b166dd77a807f2c4b91b22801786b209cb", "committedDate": "2020-12-30T09:31:24Z", "message": "Update docs/en/guides/Java-Plugin-Development-Guide.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d931e0d8b8b81d84cab2ae3a3caab3d0e4317f7", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/7d931e0d8b8b81d84cab2ae3a3caab3d0e4317f7", "committedDate": "2020-12-30T09:31:50Z", "message": "Update docs/en/guides/Java-Plugin-Development-Guide.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTczODQ0", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559973844", "createdAt": "2020-12-30T09:35:34Z", "commit": {"oid": "7d931e0d8b8b81d84cab2ae3a3caab3d0e4317f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOTozNTozNFrOIMmWQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOTozNTozNFrOIMmWQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA4MjExMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    TypePool.Resolution resolution = WitnessFinder.INSTANCE.getResolution(witnessMethod.getDeclaringClassName(), classLoader);\n          \n          \n            \n                    TypePool.Resolution resolution = this.getResolution(witnessMethod.getDeclaringClassName(), classLoader);", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550082113", "createdAt": "2020-12-30T09:35:34Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessFinder.java", "diffHunk": "@@ -46,9 +57,24 @@ public boolean exist(String witnessClass, ClassLoader classLoader) {\n             }\n         }\n         TypePool typePool = poolMap.get(mappingKey);\n-        TypePool.Resolution witnessClassResolution = typePool.describe(witnessClass);\n-        return witnessClassResolution.isResolved();\n+        return typePool.describe(witnessClass);\n+    }\n+\n+    /**\n+     * @param classLoader for finding the witness method\n+     * @return true, if the given witness method exists, through the given classLoader.\n+     */\n+    public boolean exist(WitnessMethod witnessMethod, ClassLoader classLoader) {\n+        TypePool.Resolution resolution = WitnessFinder.INSTANCE.getResolution(witnessMethod.getDeclaringClassName(), classLoader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d931e0d8b8b81d84cab2ae3a3caab3d0e4317f7"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTc0MDg2", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559974086", "createdAt": "2020-12-30T09:36:15Z", "commit": {"oid": "7d931e0d8b8b81d84cab2ae3a3caab3d0e4317f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOTozNjoxNVrOIMmYig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOTozNjoxNVrOIMmYig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA4MjY5OA==", "bodyText": "Use @Getter.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550082698", "createdAt": "2020-12-30T09:36:15Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessMethod.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+import java.util.StringJoiner;\n+\n+/**\n+ * Witness Method for plugin activation\n+ */\n+public class WitnessMethod {\n+\n+    /**\n+     * java.lang.reflect.Method#getDeclaringClass()\n+     */\n+    private String declaringClassName;\n+    /**\n+     * mather fo match the witness method\n+     */\n+    private final ElementMatcher<? super MethodDescription.InDefinedShape> elementMatcher;\n+\n+    public WitnessMethod(String declaringClassName, ElementMatcher<? super MethodDescription.InDefinedShape> elementMatcher) {\n+        this.declaringClassName = declaringClassName;\n+        this.elementMatcher = elementMatcher;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return new StringJoiner(\", \", WitnessMethod.class.getSimpleName() + \"[\", \"]\")\n+                .add(\"declaringClassName='\" + declaringClassName + \"'\")\n+                .add(\"elementMatcher=\" + elementMatcher)\n+                .toString();\n+    }\n+\n+    public String getDeclaringClassName() {\n+        return declaringClassName;\n+    }\n+\n+    public ElementMatcher<? super MethodDescription.InDefinedShape> getElementMatcher() {\n+        return elementMatcher;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d931e0d8b8b81d84cab2ae3a3caab3d0e4317f7"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTc1MDAy", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-559975002", "createdAt": "2020-12-30T09:39:01Z", "commit": {"oid": "7d931e0d8b8b81d84cab2ae3a3caab3d0e4317f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOTozOTowMlrOIMmhHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwOTozOTowMlrOIMmhHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA4NDg5Mg==", "bodyText": "We could move WitnessFinder.INSTANCE as a local variable.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550084892", "createdAt": "2020-12-30T09:39:02Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java", "diffHunk": "@@ -64,12 +67,21 @@\n         String[] witnessClasses = witnessClasses();\n         if (witnessClasses != null) {\n             for (String witnessClass : witnessClasses) {\n-                if (!WitnessClassFinder.INSTANCE.exist(witnessClass, classLoader)) {\n+                if (!WitnessFinder.INSTANCE.exist(witnessClass, classLoader)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d931e0d8b8b81d84cab2ae3a3caab3d0e4317f7"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "000f6c7106463e0d6696670ad1d82e40d2cb64c3", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/000f6c7106463e0d6696670ad1d82e40d2cb64c3", "committedDate": "2020-12-30T09:42:41Z", "message": "Update apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessFinder.java\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46dc42fd0a945622a1e1e57c7ff5defdaea62c47", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/46dc42fd0a945622a1e1e57c7ff5defdaea62c47", "committedDate": "2020-12-30T10:43:01Z", "message": "WitnessFinder code optimization, Witness test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccbba8a00d6ac153a44738e7bdf34514eabe2555", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/ccbba8a00d6ac153a44738e7bdf34514eabe2555", "committedDate": "2020-12-30T10:56:35Z", "message": "add file header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb812b97fd7370647a59703e9dc359f73489749e", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/bb812b97fd7370647a59703e9dc359f73489749e", "committedDate": "2020-12-30T11:06:01Z", "message": "update the plugin develop doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMTAyNTY5", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560102569", "createdAt": "2020-12-30T15:52:16Z", "commit": {"oid": "bb812b97fd7370647a59703e9dc359f73489749e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNTo1MjoxNlrOIMv_ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNTo1MjoxNlrOIMv_ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0MDE5NQ==", "bodyText": "\ufffdPlease keep the previous version too. (name match only). It is better to have 2 test cases.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550240195", "createdAt": "2020-12-30T15:52:16Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/witness/WitnessTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.apache.skywalking.apm.agent.core.plugin.witness;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import net.bytebuddy.matcher.ElementMatchers;\n+import org.apache.skywalking.apm.agent.core.plugin.WitnessFinder;\n+import org.apache.skywalking.apm.agent.core.plugin.WitnessMethod;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * witness test\n+ */\n+public class WitnessTest {\n+\n+    private String className = \"org.apache.skywalking.apm.agent.core.plugin.witness.WitnessTest\";\n+\n+    @Test\n+    public void testWitnessClass() {\n+        Assert.assertTrue(WitnessFinder.exist(className, this.getClass().getClassLoader()));\n+    }\n+\n+    @Test\n+    public void testWitnessMethod() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb812b97fd7370647a59703e9dc359f73489749e"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c90e3f3507721081c206d3ad2157083c5f05d0b6", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/c90e3f3507721081c206d3ad2157083c5f05d0b6", "committedDate": "2020-12-30T15:54:55Z", "message": "Update WitnessTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6f7c8e0a637f75d7e9f54f14b9b070736baf5de", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/c6f7c8e0a637f75d7e9f54f14b9b070736baf5de", "committedDate": "2020-12-30T23:47:20Z", "message": "Merge branch 'master' into lbl-new-future-add-witness-method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjM1MDQy", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560235042", "createdAt": "2020-12-31T00:14:11Z", "commit": {"oid": "c6f7c8e0a637f75d7e9f54f14b9b070736baf5de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMDoxNDoxMlrOIM3boA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMDoxNDoxMlrOIM3boA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM2MjAxNg==", "bodyText": "This comment seems strange. Please fix.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550362016", "createdAt": "2020-12-31T00:14:12Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/witness/WitnessTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin.witness;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import net.bytebuddy.matcher.ElementMatchers;\n+import org.apache.skywalking.apm.agent.core.plugin.WitnessFinder;\n+import org.apache.skywalking.apm.agent.core.plugin.WitnessMethod;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * witness test\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6f7c8e0a637f75d7e9f54f14b9b070736baf5de"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjM1MDkz", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560235093", "createdAt": "2020-12-31T00:14:34Z", "commit": {"oid": "c6f7c8e0a637f75d7e9f54f14b9b070736baf5de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMDoxNDozNFrOIM3bzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMDoxNDozNFrOIM3bzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM2MjA2Mg==", "bodyText": "What does this comment means?", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550362062", "createdAt": "2020-12-31T00:14:34Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessMethod.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin;\n+\n+import lombok.Getter;\n+import lombok.ToString;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+/**\n+ * Witness Method for plugin activation\n+ */\n+@ToString\n+public class WitnessMethod {\n+\n+    /**\n+     * java.lang.reflect.Method#getDeclaringClass()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6f7c8e0a637f75d7e9f54f14b9b070736baf5de"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjM1MjQ4", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560235248", "createdAt": "2020-12-31T00:15:54Z", "commit": {"oid": "c6f7c8e0a637f75d7e9f54f14b9b070736baf5de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMDoxNTo1NFrOIM3csA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMDoxNTo1NFrOIM3csA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM2MjI4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * ClassLoader}, which helps to find the class define existed or not.\n          \n          \n            \n             * ClassLoader}, which helps to find the class declaration existed or not.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550362288", "createdAt": "2020-12-31T00:15:54Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessFinder.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import net.bytebuddy.pool.TypePool;\n+\n+/**\n+ * The <code>WitnessFinder</code> represents a pool of {@link TypePool}s, each {@link TypePool} matches a {@link\n+ * ClassLoader}, which helps to find the class define existed or not.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6f7c8e0a637f75d7e9f54f14b9b070736baf5de"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffb9961a22353081e4ad271cb1c8d21512575ae7", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/ffb9961a22353081e4ad271cb1c8d21512575ae7", "committedDate": "2020-12-31T02:38:11Z", "message": "add test method, update some javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a59b9b4d7da144999a78557592fa22728b000101", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/a59b9b4d7da144999a78557592fa22728b000101", "committedDate": "2020-12-31T02:39:05Z", "message": "Update apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessFinder.java\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjc2NjM1", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560276635", "createdAt": "2020-12-31T06:54:28Z", "commit": {"oid": "a59b9b4d7da144999a78557592fa22728b000101"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNjo1NDoyOVrOIM6e5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNjo1NDoyOVrOIM6e5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxMjAwNQ==", "bodyText": "Using WitnessTest#getClass should be better?", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550412005", "createdAt": "2020-12-31T06:54:29Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/witness/WitnessTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin.witness;\n+\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import net.bytebuddy.matcher.ElementMatchers;\n+import org.apache.skywalking.apm.agent.core.plugin.WitnessFinder;\n+import org.apache.skywalking.apm.agent.core.plugin.WitnessMethod;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * unit test for WitnessFinder\n+ */\n+public class WitnessTest {\n+\n+    private String className = \"org.apache.skywalking.apm.agent.core.plugin.witness.WitnessTest\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a59b9b4d7da144999a78557592fa22728b000101"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjc2Nzcz", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560276773", "createdAt": "2020-12-31T06:55:32Z", "commit": {"oid": "a59b9b4d7da144999a78557592fa22728b000101"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNjo1NTozMlrOIM6ffA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNjo1NTozMlrOIM6ffA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxMjE1Ng==", "bodyText": "I was not saying change this to static method. My meaning is you could get `var = WitnessFinder.INSTANCE before all loops.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550412156", "createdAt": "2020-12-31T06:55:32Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/AbstractClassEnhancePluginDefine.java", "diffHunk": "@@ -64,12 +67,21 @@\n         String[] witnessClasses = witnessClasses();\n         if (witnessClasses != null) {\n             for (String witnessClass : witnessClasses) {\n-                if (!WitnessClassFinder.INSTANCE.exist(witnessClass, classLoader)) {\n+                if (!WitnessFinder.exist(witnessClass, classLoader)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a59b9b4d7da144999a78557592fa22728b000101"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjc2ODI5", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560276829", "createdAt": "2020-12-31T06:55:56Z", "commit": {"oid": "a59b9b4d7da144999a78557592fa22728b000101"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNjo1NTo1NlrOIM6fsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNjo1NTo1NlrOIM6fsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxMjIxMA==", "bodyText": "Don't expose static method, including all methods below.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550412210", "createdAt": "2020-12-31T06:55:56Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessFinder.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import net.bytebuddy.pool.TypePool;\n+\n+/**\n+ * The <code>WitnessFinder</code> represents a pool of {@link TypePool}s, each {@link TypePool} matches a {@link\n+ * ClassLoader}, which helps to find the class declaration existed or not.\n+ */\n+public enum WitnessFinder {\n+    INSTANCE;\n+\n+    private final Map<ClassLoader, TypePool> poolMap = new HashMap<ClassLoader, TypePool>();\n+\n+    /**\n+     * @param classLoader for finding the witnessClass\n+     * @return true, if the given witnessClass exists, through the given classLoader.\n+     */\n+    public static boolean exist(String witnessClass, ClassLoader classLoader) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a59b9b4d7da144999a78557592fa22728b000101"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dea019cf76533bead1bf8440c6283bc21627e280", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/dea019cf76533bead1bf8440c6283bc21627e280", "committedDate": "2020-12-31T07:46:15Z", "message": "WitnessFinder remote the static"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63767486291e20c0f58f08a84dc5663afa2ff9a5", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/63767486291e20c0f58f08a84dc5663afa2ff9a5", "committedDate": "2020-12-31T07:46:36Z", "message": "Merge branch 'lbl-new-future-add-witness-method' of https://github.com/libinglong/skywalking into lbl-new-future-add-witness-method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjg2OTg4", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560286988", "createdAt": "2020-12-31T07:59:31Z", "commit": {"oid": "63767486291e20c0f58f08a84dc5663afa2ff9a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzo1OTozMVrOIM7IoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzo1OTozMVrOIM7IoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMjY4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * mather fo match the witness method\n          \n          \n            \n                 * matcher to match the witness method\n          \n      \n    \n    \n  \n\ntypos", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550422689", "createdAt": "2020-12-31T07:59:31Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessMethod.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin;\n+\n+import lombok.Getter;\n+import lombok.ToString;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+/**\n+ * Witness Method for plugin activation\n+ */\n+@ToString\n+public class WitnessMethod {\n+\n+    /**\n+     * the class or interface name where the witness method is declared.\n+     */\n+    @Getter\n+    private final String declaringClassName;\n+    /**\n+     * mather fo match the witness method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63767486291e20c0f58f08a84dc5663afa2ff9a5"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjg3MTMw", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560287130", "createdAt": "2020-12-31T08:00:17Z", "commit": {"oid": "63767486291e20c0f58f08a84dc5663afa2ff9a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowMDoxOFrOIM7JCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowMDoxOFrOIM7JCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMjc5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               //the plugin is activated only when the foo.Bar class exists.\n          \n          \n            \n               // The plugin is activated only when the foo.Bar class exists.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550422793", "createdAt": "2020-12-31T08:00:18Z", "author": {"login": "wu-sheng"}, "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "diffHunk": "@@ -299,6 +299,31 @@ The following sections will tell you how to implement the interceptor.\n tomcat-7.x/8.x=TomcatInstrumentation\n ```\n \n+4. Set up `witnessClasses` and/or `witnessMethods` if the instrumentation should be activated in specific versions.\n+\n+   Example:\n+\n+   ```java\n+   //the plugin is activated only when the foo.Bar class exists.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63767486291e20c0f58f08a84dc5663afa2ff9a5"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjg3MTY1", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560287165", "createdAt": "2020-12-31T08:00:31Z", "commit": {"oid": "63767486291e20c0f58f08a84dc5663afa2ff9a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowMDozMVrOIM7JMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowMDozMVrOIM7JMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMjgzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               //the plugin is activated only when the foo.Bar#hello method exists.\n          \n          \n            \n               // The plugin is activated only when the foo.Bar#hello method exists.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550422832", "createdAt": "2020-12-31T08:00:31Z", "author": {"login": "wu-sheng"}, "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "diffHunk": "@@ -299,6 +299,31 @@ The following sections will tell you how to implement the interceptor.\n tomcat-7.x/8.x=TomcatInstrumentation\n ```\n \n+4. Set up `witnessClasses` and/or `witnessMethods` if the instrumentation should be activated in specific versions.\n+\n+   Example:\n+\n+   ```java\n+   //the plugin is activated only when the foo.Bar class exists.\n+   @Override\n+   protected String[] witnessClasses() {\n+     return new String[] {\n+       \"foo.Bar\"\n+     };\n+   }\n+   \n+   //the plugin is activated only when the foo.Bar#hello method exists.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63767486291e20c0f58f08a84dc5663afa2ff9a5"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjg3MjAw", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560287200", "createdAt": "2020-12-31T08:00:45Z", "commit": {"oid": "63767486291e20c0f58f08a84dc5663afa2ff9a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowMDo0NVrOIM7JRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowMDo0NVrOIM7JRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMjg1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               For more example, See [WitnessTest.java](/apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/witness/WitnessTest.java)\n          \n          \n            \n               For more example, see [WitnessTest.java](/apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/witness/WitnessTest.java)", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550422853", "createdAt": "2020-12-31T08:00:45Z", "author": {"login": "wu-sheng"}, "path": "docs/en/guides/Java-Plugin-Development-Guide.md", "diffHunk": "@@ -299,6 +299,31 @@ The following sections will tell you how to implement the interceptor.\n tomcat-7.x/8.x=TomcatInstrumentation\n ```\n \n+4. Set up `witnessClasses` and/or `witnessMethods` if the instrumentation should be activated in specific versions.\n+\n+   Example:\n+\n+   ```java\n+   //the plugin is activated only when the foo.Bar class exists.\n+   @Override\n+   protected String[] witnessClasses() {\n+     return new String[] {\n+       \"foo.Bar\"\n+     };\n+   }\n+   \n+   //the plugin is activated only when the foo.Bar#hello method exists.\n+   @Override\n+   protected List<WitnessMethod> witnessMethods() {\n+     List<WitnessMethod> witnessMethodList = new ArrayList<>();\n+     WitnessMethod witnessMethod = new WitnessMethod(\"foo.Bar\", ElementMatchers.named(\"hello\"));\n+     witnessMethodList.add(witnessMethod);\n+     return witnessMethodList;\n+   }\n+   ```\n+   For more example, See [WitnessTest.java](/apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/witness/WitnessTest.java)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63767486291e20c0f58f08a84dc5663afa2ff9a5"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a47cf666bde7eb756694a00e899883221be424d", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/2a47cf666bde7eb756694a00e899883221be424d", "committedDate": "2020-12-31T08:01:01Z", "message": "Update apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessMethod.java\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef6ce8dd92339efd50ac316a54ee9729ca8652c3", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/ef6ce8dd92339efd50ac316a54ee9729ca8652c3", "committedDate": "2020-12-31T08:01:19Z", "message": "Update docs/en/guides/Java-Plugin-Development-Guide.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "371dc035fb080ffe3c8b34a2e02fbb6f5f30d1de", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/371dc035fb080ffe3c8b34a2e02fbb6f5f30d1de", "committedDate": "2020-12-31T08:01:45Z", "message": "Update docs/en/guides/Java-Plugin-Development-Guide.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de7ab47db3181d9f99b2829e270e9cdf58e878c6", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/de7ab47db3181d9f99b2829e270e9cdf58e878c6", "committedDate": "2020-12-31T08:02:20Z", "message": "Update docs/en/guides/Java-Plugin-Development-Guide.md\n\nCo-authored-by: \u5434\u665f Wu Sheng <wu.sheng@foxmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjkyNjQ1", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560292645", "createdAt": "2020-12-31T08:28:51Z", "commit": {"oid": "de7ab47db3181d9f99b2829e270e9cdf58e878c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODoyODo1MVrOIM7cvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODoyODo1MVrOIM7cvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyNzgzNg==", "bodyText": "INSTANCE is not necessary, I think. Or use this.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550427836", "createdAt": "2020-12-31T08:28:51Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessFinder.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import net.bytebuddy.pool.TypePool;\n+\n+/**\n+ * The <code>WitnessFinder</code> represents a pool of {@link TypePool}s, each {@link TypePool} matches a {@link\n+ * ClassLoader}, which helps to find the class declaration existed or not.\n+ */\n+public enum WitnessFinder {\n+    INSTANCE;\n+\n+    private final Map<ClassLoader, TypePool> poolMap = new HashMap<ClassLoader, TypePool>();\n+\n+    /**\n+     * @param classLoader for finding the witnessClass\n+     * @return true, if the given witnessClass exists, through the given classLoader.\n+     */\n+    public boolean exist(String witnessClass, ClassLoader classLoader) {\n+        return getResolution(witnessClass, classLoader)\n+                .isResolved();\n+    }\n+\n+    /**\n+     * get TypePool.Resolution of the witness class\n+     * @param witnessClass class name\n+     * @param classLoader classLoader for finding the witnessClass\n+     * @return TypePool.Resolution\n+     */\n+    private TypePool.Resolution getResolution(String witnessClass, ClassLoader classLoader) {\n+        ClassLoader mappingKey = classLoader == null ? NullClassLoader.INSTANCE : classLoader;\n+        if (!INSTANCE.poolMap.containsKey(mappingKey)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7ab47db3181d9f99b2829e270e9cdf58e878c6"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjkyODU0", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-560292854", "createdAt": "2020-12-31T08:30:00Z", "commit": {"oid": "de7ab47db3181d9f99b2829e270e9cdf58e878c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODozMDowMFrOIM7dkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODozMDowMFrOIM7dkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyODA1MQ==", "bodyText": "Use @RequiredArgsConstructor annotation.", "url": "https://github.com/apache/skywalking/pull/6103#discussion_r550428051", "createdAt": "2020-12-31T08:30:00Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/WitnessMethod.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.plugin;\n+\n+import lombok.Getter;\n+import lombok.ToString;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+/**\n+ * Witness Method for plugin activation\n+ */\n+@ToString\n+public class WitnessMethod {\n+\n+    /**\n+     * the class or interface name where the witness method is declared.\n+     */\n+    @Getter\n+    private final String declaringClassName;\n+    /**\n+     * matcher to match the witness method\n+     */\n+    @Getter\n+    private final ElementMatcher<? super MethodDescription.InDefinedShape> elementMatcher;\n+\n+    public WitnessMethod(String declaringClassName, ElementMatcher<? super MethodDescription.InDefinedShape> elementMatcher) {\n+        this.declaringClassName = declaringClassName;\n+        this.elementMatcher = elementMatcher;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7ab47db3181d9f99b2829e270e9cdf58e878c6"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fd287e3c8c1f06fc2235f3058876e57337c23bd", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/5fd287e3c8c1f06fc2235f3058876e57337c23bd", "committedDate": "2020-12-31T10:53:24Z", "message": "Code optimization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a21cde144b15acd8d888fce3de2b62cd45b03d75", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/a21cde144b15acd8d888fce3de2b62cd45b03d75", "committedDate": "2020-12-31T10:54:04Z", "message": "Merge branch 'lbl-new-future-add-witness-method' of https://github.com/libinglong/skywalking into lbl-new-future-add-witness-method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e08ca716bfb3bac8d28ea33c8992d30fe2cf88f7", "author": {"user": {"login": "libinglong", "name": "libinglong"}}, "url": "https://github.com/apache/skywalking/commit/e08ca716bfb3bac8d28ea33c8992d30fe2cf88f7", "committedDate": "2021-01-07T11:19:58Z", "message": "merge and resolve conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c8865b2fbd9b9014afa5ba00adc2b8dd516de86", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/7c8865b2fbd9b9014afa5ba00adc2b8dd516de86", "committedDate": "2021-01-07T16:28:08Z", "message": "Merge branch 'master' into lbl-new-future-add-witness-method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzOTE2Nzgy", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-563916782", "createdAt": "2021-01-08T00:07:44Z", "commit": {"oid": "7c8865b2fbd9b9014afa5ba00adc2b8dd516de86"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzOTI2NzU5", "url": "https://github.com/apache/skywalking/pull/6103#pullrequestreview-563926759", "createdAt": "2021-01-08T00:39:55Z", "commit": {"oid": "7c8865b2fbd9b9014afa5ba00adc2b8dd516de86"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1519, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}