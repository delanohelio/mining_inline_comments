{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MTE0MDMw", "number": 5045, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNToyMToxOVrOEL7c3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDo0NDoxM1rOENGjYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTQzODM3OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-toolkit-activation/apm-toolkit-trace-activation/src/main/java/org/apache/skywalking/apm/toolkit/activation/util/TagUtil.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNToyMToxOVrOGtve5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjowODozNFrOGvYCJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNzA2Mw==", "bodyText": "Are there possibilities that the method returns a String and the user wants to use that as a tag? In such case, es.length == 1", "url": "https://github.com/apache/skywalking/pull/5045#discussion_r450617063", "createdAt": "2020-07-07T05:21:19Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-toolkit-activation/apm-toolkit-trace-activation/src/main/java/org/apache/skywalking/apm/toolkit/activation/util/TagUtil.java", "diffHunk": "@@ -38,6 +38,6 @@ public static void tagReturnSpanSpan(final AbstractSpan span, final Map<String,\n \n     public static Boolean isReturnTag(String expression) {\n         String[] es = expression.split(\"\\\\.\");\n-        return es.length == 2 && \"returnedObj\".equals(es[0]);\n+        return \"returnedObj\".equals(es[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb45d3c2aacea5ed5c04e3c17211a24f533fa8a1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1NDc4Mg==", "bodyText": "Are there possibilities that the method returns a String and the user wants to use that as a tag? In such case, es.length == 1\n\nUh, there is a problem here. When returning objects such as numbers, strings, Boolean values, characters, etc., they need to be processed, otherwise the tag value will be null. Whether to handle only common types such as numbers, strings, Boolean values, and characters.", "url": "https://github.com/apache/skywalking/pull/5045#discussion_r450654782", "createdAt": "2020-07-07T07:10:54Z", "author": {"login": "zoumingzm"}, "path": "apm-sniffer/apm-toolkit-activation/apm-toolkit-trace-activation/src/main/java/org/apache/skywalking/apm/toolkit/activation/util/TagUtil.java", "diffHunk": "@@ -38,6 +38,6 @@ public static void tagReturnSpanSpan(final AbstractSpan span, final Map<String,\n \n     public static Boolean isReturnTag(String expression) {\n         String[] es = expression.split(\"\\\\.\");\n-        return es.length == 2 && \"returnedObj\".equals(es[0]);\n+        return \"returnedObj\".equals(es[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNzA2Mw=="}, "originalCommit": {"oid": "bb45d3c2aacea5ed5c04e3c17211a24f533fa8a1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc4ODQxNQ==", "bodyText": "Are there possibilities that the method returns a String and the user wants to use that as a tag? In such case, es.length == 1\n\nUh, there is a problem here. When returning objects such as numbers, strings, Boolean values, characters, etc., they need to be processed, otherwise the tag value will be null. Whether to handle only common types such as numbers, strings, Boolean values, and characters.\n\nWhat about simply call toString on the returnedObj", "url": "https://github.com/apache/skywalking/pull/5045#discussion_r450788415", "createdAt": "2020-07-07T11:15:22Z", "author": {"login": "kezhenxu94"}, "path": "apm-sniffer/apm-toolkit-activation/apm-toolkit-trace-activation/src/main/java/org/apache/skywalking/apm/toolkit/activation/util/TagUtil.java", "diffHunk": "@@ -38,6 +38,6 @@ public static void tagReturnSpanSpan(final AbstractSpan span, final Map<String,\n \n     public static Boolean isReturnTag(String expression) {\n         String[] es = expression.split(\"\\\\.\");\n-        return es.length == 2 && \"returnedObj\".equals(es[0]);\n+        return \"returnedObj\".equals(es[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNzA2Mw=="}, "originalCommit": {"oid": "bb45d3c2aacea5ed5c04e3c17211a24f533fa8a1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMzMDAyMg==", "bodyText": "Are there possibilities that the method returns a String and the user wants to use that as a tag? In such case, es.length == 1\n\nUh, there is a problem here. When returning objects such as numbers, strings, Boolean values, characters, etc., they need to be processed, otherwise the tag value will be null. Whether to handle only common types such as numbers, strings, Boolean values, and characters.\n\nWhat about simply call toString on the returnedObj\n\nThat's a good idea.", "url": "https://github.com/apache/skywalking/pull/5045#discussion_r452330022", "createdAt": "2020-07-09T16:08:34Z", "author": {"login": "zoumingzm"}, "path": "apm-sniffer/apm-toolkit-activation/apm-toolkit-trace-activation/src/main/java/org/apache/skywalking/apm/toolkit/activation/util/TagUtil.java", "diffHunk": "@@ -38,6 +38,6 @@ public static void tagReturnSpanSpan(final AbstractSpan span, final Map<String,\n \n     public static Boolean isReturnTag(String expression) {\n         String[] es = expression.split(\"\\\\.\");\n-        return es.length == 2 && \"returnedObj\".equals(es[0]);\n+        return \"returnedObj\".equals(es[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNzA2Mw=="}, "originalCommit": {"oid": "bb45d3c2aacea5ed5c04e3c17211a24f533fa8a1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTc0MzA2OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-toolkit-activation/apm-toolkit-trace-activation/src/test/java/org/apache/skywalking/apm/toolkit/activation/trace/TagAnnotationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDo0NDoxM1rOGvmT3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDo0NDoxM1rOGvmT3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2MzkzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testTraceWithList() throws Throwable {\n          \n          \n            \n                public void testTraceWithReturnList() throws Throwable {\n          \n      \n    \n    \n  \n\nI think the test method names are not accurate? Please confirm. Sam as other methods.", "url": "https://github.com/apache/skywalking/pull/5045#discussion_r452563935", "createdAt": "2020-07-10T00:44:13Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-toolkit-activation/apm-toolkit-trace-activation/src/test/java/org/apache/skywalking/apm/toolkit/activation/trace/TagAnnotationTest.java", "diffHunk": "@@ -138,6 +144,145 @@ public void testTraceWithTags() throws Throwable {\n \n     }\n \n+    @Test\n+    public void testTraceWithList() throws Throwable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb0a4cdc8efcfcb5c064d3399ff0307d4ae6ba6e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 60, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}