{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyNjE5MTk4", "number": 5129, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTozNDo0N1rOEP3Xgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTozMDo1MVrOEQrZlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDcxMjM0OnYy", "diffSide": "RIGHT", "path": "oap-server/server-bootstrap/src/main/resources/oal/java-agent.oal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTozNDo0N1rOGzwWVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTozODozNlrOGzwX2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyMjcxMQ==", "bodyText": "Why do you sum the count? This value could be collected multiple times, then the thread number(sum value) would be very large.", "url": "https://github.com/apache/skywalking/pull/5129#discussion_r456922711", "createdAt": "2020-07-19T15:34:47Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/oal/java-agent.oal", "diffHunk": "@@ -25,4 +25,7 @@ instance_jvm_memory_noheap_max = from(ServiceInstanceJVMMemory.max).filter(heapS\n instance_jvm_young_gc_time = from(ServiceInstanceJVMGC.time).filter(phrase == GCPhrase.NEW).sum();\n instance_jvm_old_gc_time = from(ServiceInstanceJVMGC.time).filter(phrase == GCPhrase.OLD).sum();\n instance_jvm_young_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.NEW).sum();\n-instance_jvm_old_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.OLD).sum();\n\\ No newline at end of file\n+instance_jvm_old_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.OLD).sum();\n+instance_jvm_thread_live_count = from(ServiceInstanceThreadGC.liveCount).sum();\n+instance_jvm_thread_daemon_count = from(ServiceInstanceThreadGC.daemonCount).sum();\n+instance_jvm_thread_peak_count = from(ServiceInstanceThreadGC.peakCount).sum();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e686a6df8f721a2924815bf2b13eb75e69a252"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyMzA5OA==", "bodyText": "Sorry, I was wrong here", "url": "https://github.com/apache/skywalking/pull/5129#discussion_r456923098", "createdAt": "2020-07-19T15:38:36Z", "author": {"login": "stalary"}, "path": "oap-server/server-bootstrap/src/main/resources/oal/java-agent.oal", "diffHunk": "@@ -25,4 +25,7 @@ instance_jvm_memory_noheap_max = from(ServiceInstanceJVMMemory.max).filter(heapS\n instance_jvm_young_gc_time = from(ServiceInstanceJVMGC.time).filter(phrase == GCPhrase.NEW).sum();\n instance_jvm_old_gc_time = from(ServiceInstanceJVMGC.time).filter(phrase == GCPhrase.OLD).sum();\n instance_jvm_young_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.NEW).sum();\n-instance_jvm_old_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.OLD).sum();\n\\ No newline at end of file\n+instance_jvm_old_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.OLD).sum();\n+instance_jvm_thread_live_count = from(ServiceInstanceThreadGC.liveCount).sum();\n+instance_jvm_thread_daemon_count = from(ServiceInstanceThreadGC.daemonCount).sum();\n+instance_jvm_thread_peak_count = from(ServiceInstanceThreadGC.peakCount).sum();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyMjcxMQ=="}, "originalCommit": {"oid": "c6e686a6df8f721a2924815bf2b13eb75e69a252"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDcxMjkxOnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/jvm/thread/ThreadProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTozNToxM1rOGzwWmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTozNToxM1rOGzwWmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyMjc3OA==", "bodyText": "getThreadMetric -> getThreadMetrics.", "url": "https://github.com/apache/skywalking/pull/5129#discussion_r456922778", "createdAt": "2020-07-19T15:35:13Z", "author": {"login": "wu-sheng"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/jvm/thread/ThreadProvider.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.jvm.thread;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.ThreadMXBean;\n+import org.apache.skywalking.apm.network.language.agent.v3.Thread;\n+\n+public enum ThreadProvider {\n+    INSTANCE;\n+    private final ThreadMXBean threadMXBean;\n+\n+    ThreadProvider() {\n+        this.threadMXBean = ManagementFactory.getThreadMXBean();\n+    }\n+\n+    public Thread getThreadMetric() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e686a6df8f721a2924815bf2b13eb75e69a252"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDcxMzc2OnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/source/ServiceInstanceJVMThread.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTozNjoxNFrOGzwW_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTozNjoxNFrOGzwW_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyMjg3OA==", "bodyText": "As you added a new source, scope-definitions.md doc should be added.", "url": "https://github.com/apache/skywalking/pull/5129#discussion_r456922878", "createdAt": "2020-07-19T15:36:14Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/source/ServiceInstanceJVMThread.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.oap.server.core.source;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+import static org.apache.skywalking.oap.server.core.source.DefaultScopeDefine.SERVICE_INSTANCE_CATALOG_NAME;\n+import static org.apache.skywalking.oap.server.core.source.DefaultScopeDefine.SERVICE_INSTANCE_JVM_THREAD;\n+\n+@ScopeDeclaration(id = SERVICE_INSTANCE_JVM_THREAD, name = \"ServiceInstanceJVMThread\", catalog = SERVICE_INSTANCE_CATALOG_NAME)\n+@ScopeDefaultColumn.VirtualColumnDefinition(fieldName = \"entityId\", columnName = \"entity_id\", isID = true, type = String.class)\n+public class ServiceInstanceJVMThread extends Source {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e686a6df8f721a2924815bf2b13eb75e69a252"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDczMTAyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-bootstrap/src/main/resources/oal/java-agent.oal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNTo1ODowMVrOGzwfbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxNjowNDoxOVrOGzwh9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyNTAzNw==", "bodyText": "No function? It is strange.", "url": "https://github.com/apache/skywalking/pull/5129#discussion_r456925037", "createdAt": "2020-07-19T15:58:01Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-bootstrap/src/main/resources/oal/java-agent.oal", "diffHunk": "@@ -26,6 +26,6 @@ instance_jvm_young_gc_time = from(ServiceInstanceJVMGC.time).filter(phrase == GC\n instance_jvm_old_gc_time = from(ServiceInstanceJVMGC.time).filter(phrase == GCPhrase.OLD).sum();\n instance_jvm_young_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.NEW).sum();\n instance_jvm_old_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.OLD).sum();\n-instance_jvm_thread_live_count = from(ServiceInstanceThreadGC.liveCount).sum();\n-instance_jvm_thread_daemon_count = from(ServiceInstanceThreadGC.daemonCount).sum();\n-instance_jvm_thread_peak_count = from(ServiceInstanceThreadGC.peakCount).sum();\n\\ No newline at end of file\n+instance_jvm_thread_live_count = from(ServiceInstanceThreadGC.liveCount);\n+instance_jvm_thread_daemon_count = from(ServiceInstanceThreadGC.daemonCount);\n+instance_jvm_thread_peak_count = from(ServiceInstanceThreadGC.peakCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54708da629e7386f1a4e61fc5685f9067f5a6f5c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyNTY4Nw==", "bodyText": "longAvg() looks suitable", "url": "https://github.com/apache/skywalking/pull/5129#discussion_r456925687", "createdAt": "2020-07-19T16:04:19Z", "author": {"login": "stalary"}, "path": "oap-server/server-bootstrap/src/main/resources/oal/java-agent.oal", "diffHunk": "@@ -26,6 +26,6 @@ instance_jvm_young_gc_time = from(ServiceInstanceJVMGC.time).filter(phrase == GC\n instance_jvm_old_gc_time = from(ServiceInstanceJVMGC.time).filter(phrase == GCPhrase.OLD).sum();\n instance_jvm_young_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.NEW).sum();\n instance_jvm_old_gc_count = from(ServiceInstanceJVMGC.count).filter(phrase == GCPhrase.OLD).sum();\n-instance_jvm_thread_live_count = from(ServiceInstanceThreadGC.liveCount).sum();\n-instance_jvm_thread_daemon_count = from(ServiceInstanceThreadGC.daemonCount).sum();\n-instance_jvm_thread_peak_count = from(ServiceInstanceThreadGC.peakCount).sum();\n\\ No newline at end of file\n+instance_jvm_thread_live_count = from(ServiceInstanceThreadGC.liveCount);\n+instance_jvm_thread_daemon_count = from(ServiceInstanceThreadGC.daemonCount);\n+instance_jvm_thread_peak_count = from(ServiceInstanceThreadGC.peakCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkyNTAzNw=="}, "originalCommit": {"oid": "54708da629e7386f1a4e61fc5685f9067f5a6f5c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTIzNzM1OnYy", "diffSide": "RIGHT", "path": "oap-server/server-bootstrap/src/main/resources/ui-initialized-templates.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTozMDo1MVrOG09oQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTozMTo0NlrOG09q8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE4ODg2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              \"chartType\": \"ChartBar\",\n          \n          \n            \n                              \"chartType\": \"ChartLine\",", "url": "https://github.com/apache/skywalking/pull/5129#discussion_r458188865", "createdAt": "2020-07-21T15:30:51Z", "author": {"login": "arugal"}, "path": "oap-server/server-bootstrap/src/main/resources/ui-initialized-templates.yml", "diffHunk": "@@ -359,6 +359,17 @@ templates:\n                   \"chartType\": \"ChartBar\",\n                   \"metricName\": \"instance_jvm_young_gc_count, instance_jvm_old_gc_count\"\n                 },\n+                {\n+                  \"width\": 3,\n+                  \"title\": \"JVM Thread Count (Java Service)\",\n+                  \"height\": \"250\",\n+                  \"entityType\": \"ServiceInstance\",\n+                  \"independentSelector\": false,\n+                  \"metricType\": \"REGULAR_VALUE\",\n+                  \"queryMetricType\": \"readMetricsValues\",\n+                  \"chartType\": \"ChartBar\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a7ce270924da05f6e7851f185b12659e4ed3c67"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE4OTU1Mg==", "bodyText": "screenshots", "url": "https://github.com/apache/skywalking/pull/5129#discussion_r458189552", "createdAt": "2020-07-21T15:31:46Z", "author": {"login": "arugal"}, "path": "oap-server/server-bootstrap/src/main/resources/ui-initialized-templates.yml", "diffHunk": "@@ -359,6 +359,17 @@ templates:\n                   \"chartType\": \"ChartBar\",\n                   \"metricName\": \"instance_jvm_young_gc_count, instance_jvm_old_gc_count\"\n                 },\n+                {\n+                  \"width\": 3,\n+                  \"title\": \"JVM Thread Count (Java Service)\",\n+                  \"height\": \"250\",\n+                  \"entityType\": \"ServiceInstance\",\n+                  \"independentSelector\": false,\n+                  \"metricType\": \"REGULAR_VALUE\",\n+                  \"queryMetricType\": \"readMetricsValues\",\n+                  \"chartType\": \"ChartBar\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE4ODg2NQ=="}, "originalCommit": {"oid": "1a7ce270924da05f6e7851f185b12659e4ed3c67"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 92, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}