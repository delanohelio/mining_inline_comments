{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NjI4Nzc5", "number": 4162, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMTozNzo0M1rODVbjvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzo0MDoyMlrODVczeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzNzk4MjA2OnYy", "diffSide": "RIGHT", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/util/CollectionUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMTozNzo0M1rOFZp57A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMTozNzo0M1rOFZp57A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ0NTI5Mg==", "bodyText": "As far as I know, parallelStream() could cause high latency on high requests.", "url": "https://github.com/apache/skywalking/pull/4162#discussion_r362445292", "createdAt": "2020-01-02T11:37:43Z", "author": {"login": "dmsolr"}, "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/util/CollectionUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.util;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Some utility methods for collections.\n+ * Reinvent the wheels because importing third-party libs just for some methods is not worthwhile in agent side\n+ *\n+ * @author kezhenxu94\n+ * @since 7.0.0\n+ */\n+public final class CollectionUtil {\n+    public static String toString(final Map<String, String[]> map) {\n+        return map\n+            .entrySet()\n+            .parallelStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "866e74b050af357b53797e451a2b9ab0a35b74e8"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODExNzU2OnYy", "diffSide": "RIGHT", "path": "docs/en/setup/service-agent/java-agent/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzowMjoxNlrOFZrIBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzozODozN1rOFZruuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ2NTI4NQ==", "bodyText": "Do we need to indicate this should work for UTF-8 encoding project? I think some vendors are using GBK in telecom, bank, etic", "url": "https://github.com/apache/skywalking/pull/4162#discussion_r362465285", "createdAt": "2020-01-02T13:02:16Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -118,6 +118,8 @@ property key | Description | Default |\n `plugin.opgroup.*`|Support operation name customize group rules in different plugins. Read [Group rule supported plugins](op_name_group_rule.md)|Not set|\n `plugin.springtransaction.simplify_transaction_definition_name`|If true, the transaction definition name will be simplified.|false|\n `plugin.jdkthreading.threading_class_prefixes` | Threading classes (`java.lang.Runnable` and `java.util.concurrent.Callable`) and their subclasses, including anonymous inner classes whose name match any one of the `THREADING_CLASS_PREFIXES` (splitted by `,`) will be instrumented, make sure to only specify as narrow prefixes as what you're expecting to instrument, (`java.` and `javax.` will be ignored due to safety issues) | Not set |\n+`plugin.http.collect_http_params`| This config item controls that whether the plugins related to HTTP should collect the parameters of the request. The name `plugin.http.collect_http_params` is rather general, but it doesn't guarantee that all http plugins should be under its control, unless the plugin itself takes this config item into consideration, such as Tomcat, Spring MVC, and Armeria plugin. | `false` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bae29cd59ab1d7dee6d53b8b9d7cd49a6001cc04"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NTE5NQ==", "bodyText": "Do we need to indicate this should work for UTF-8 encoding project? I think some vendors are using GBK in telecom, bank, etic\n\nI've modified the case to specify the encoding as GBK, and it works, still", "url": "https://github.com/apache/skywalking/pull/4162#discussion_r362475195", "createdAt": "2020-01-02T13:38:37Z", "author": {"login": "kezhenxu94"}, "path": "docs/en/setup/service-agent/java-agent/README.md", "diffHunk": "@@ -118,6 +118,8 @@ property key | Description | Default |\n `plugin.opgroup.*`|Support operation name customize group rules in different plugins. Read [Group rule supported plugins](op_name_group_rule.md)|Not set|\n `plugin.springtransaction.simplify_transaction_definition_name`|If true, the transaction definition name will be simplified.|false|\n `plugin.jdkthreading.threading_class_prefixes` | Threading classes (`java.lang.Runnable` and `java.util.concurrent.Callable`) and their subclasses, including anonymous inner classes whose name match any one of the `THREADING_CLASS_PREFIXES` (splitted by `,`) will be instrumented, make sure to only specify as narrow prefixes as what you're expecting to instrument, (`java.` and `javax.` will be ignored due to safety issues) | Not set |\n+`plugin.http.collect_http_params`| This config item controls that whether the plugins related to HTTP should collect the parameters of the request. The name `plugin.http.collect_http_params` is rather general, but it doesn't guarantee that all http plugins should be under its control, unless the plugin itself takes this config item into consideration, such as Tomcat, Spring MVC, and Armeria plugin. | `false` |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ2NTI4NQ=="}, "originalCommit": {"oid": "bae29cd59ab1d7dee6d53b8b9d7cd49a6001cc04"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODE4NjE3OnYy", "diffSide": "RIGHT", "path": "test/plugin/scenarios/spring-3.1.x-scenario/src/main/webapp/WEB-INF/web.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzo0MDoyMlrOFZrwlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxNTozMDowNlrOFZuFbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NTY2OA==", "bodyText": "@wu-sheng Here I meant", "url": "https://github.com/apache/skywalking/pull/4162#discussion_r362475668", "createdAt": "2020-01-02T13:40:22Z", "author": {"login": "kezhenxu94"}, "path": "test/plugin/scenarios/spring-3.1.x-scenario/src/main/webapp/WEB-INF/web.xml", "diffHunk": "@@ -23,6 +23,20 @@\n          version=\"3.1\">\n     <display-name>skywalking-spring-3.1.x-scenario</display-name>\n \n+    <filter>\n+        <filter-name>setCharacterEncodingFilter</filter-name>\n+        <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>\n+        <init-param>\n+            <param-name>encoding</param-name>\n+            <param-value>GBK</param-value>\n+        </init-param>\n+    </filter>\n+\n+    <filter-mapping>\n+        <filter-name>setCharacterEncodingFilter</filter-name>\n+        <url-pattern>/*</url-pattern>\n+    </filter-mapping>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "728d69fe4cdfaa73a45124cca3b404f8e1ca47bd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUwODc4OQ==", "bodyText": "Got it. Do we need to revert back? I don't want the GBK is a good example :)", "url": "https://github.com/apache/skywalking/pull/4162#discussion_r362508789", "createdAt": "2020-01-02T15:17:05Z", "author": {"login": "wu-sheng"}, "path": "test/plugin/scenarios/spring-3.1.x-scenario/src/main/webapp/WEB-INF/web.xml", "diffHunk": "@@ -23,6 +23,20 @@\n          version=\"3.1\">\n     <display-name>skywalking-spring-3.1.x-scenario</display-name>\n \n+    <filter>\n+        <filter-name>setCharacterEncodingFilter</filter-name>\n+        <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>\n+        <init-param>\n+            <param-name>encoding</param-name>\n+            <param-value>GBK</param-value>\n+        </init-param>\n+    </filter>\n+\n+    <filter-mapping>\n+        <filter-name>setCharacterEncodingFilter</filter-name>\n+        <url-pattern>/*</url-pattern>\n+    </filter-mapping>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NTY2OA=="}, "originalCommit": {"oid": "728d69fe4cdfaa73a45124cca3b404f8e1ca47bd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUxMzc3Mw==", "bodyText": "Got it. Do we need to revert back? I don't want the GBK is a good example :)\n\nI\u2019m ok with both situations, will revert it", "url": "https://github.com/apache/skywalking/pull/4162#discussion_r362513773", "createdAt": "2020-01-02T15:30:06Z", "author": {"login": "kezhenxu94"}, "path": "test/plugin/scenarios/spring-3.1.x-scenario/src/main/webapp/WEB-INF/web.xml", "diffHunk": "@@ -23,6 +23,20 @@\n          version=\"3.1\">\n     <display-name>skywalking-spring-3.1.x-scenario</display-name>\n \n+    <filter>\n+        <filter-name>setCharacterEncodingFilter</filter-name>\n+        <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>\n+        <init-param>\n+            <param-name>encoding</param-name>\n+            <param-value>GBK</param-value>\n+        </init-param>\n+    </filter>\n+\n+    <filter-mapping>\n+        <filter-name>setCharacterEncodingFilter</filter-name>\n+        <url-pattern>/*</url-pattern>\n+    </filter-mapping>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NTY2OA=="}, "originalCommit": {"oid": "728d69fe4cdfaa73a45124cca3b404f8e1ca47bd"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4600, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}