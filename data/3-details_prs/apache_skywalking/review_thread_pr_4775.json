{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTgxOTcy", "number": 4775, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo1OTozNFrOD7TW2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjozMTo1NlrOD77T6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTA5NzIyOnYy", "diffSide": "RIGHT", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo1OTozNFrOGTixbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo1OTozNFrOGTixbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0NTgzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\"{} isn't matches include regex {}\", meta.getName(), includeNamesRegex);\n          \n          \n            \n                                log.trace(\"{} doesn't match the include regex {}\", meta.getName(), includeNamesRegex);", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r423145836", "createdAt": "2020-05-11T15:59:34Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -115,6 +121,24 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             }\n         }\n \n+        if (StringUtil.isNotEmpty(includeNamesRegex)) {\n+            if (!meta.getName().matches(includeNamesRegex)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} isn't matches include regex {}\", meta.getName(), includeNamesRegex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTEwMzI4OnYy", "diffSide": "RIGHT", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjowMDo1NVrOGTi1Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjowMDo1NVrOGTi1Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0NjgyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\"{} is matches exclude regex {}\", meta.getName(), excludeNamesRegex);\n          \n          \n            \n                                log.trace(\"{} matches the exclude regex {}\", meta.getName(), excludeNamesRegex);", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r423146827", "createdAt": "2020-05-11T16:00:55Z", "author": {"login": "kezhenxu94"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -115,6 +121,24 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             }\n         }\n \n+        if (StringUtil.isNotEmpty(includeNamesRegex)) {\n+            if (!meta.getName().matches(includeNamesRegex)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} isn't matches include regex {}\", meta.getName(), includeNamesRegex);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (StringUtil.isNotEmpty(excludeNamesRegex)) {\n+            if (meta.getName().matches(excludeNamesRegex)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} is matches exclude regex {}\", meta.getName(), excludeNamesRegex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTEwNzYzOnYy", "diffSide": "RIGHT", "path": "dist-material/alarm-settings.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjowMjowNVrOGTi4Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDozNTozOVrOGUJyiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0NzU1NA==", "bodyText": "This default value may break existed versions, right?", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r423147554", "createdAt": "2020-05-11T16:02:05Z", "author": {"login": "kezhenxu94"}, "path": "dist-material/alarm-settings.yml", "diffHunk": "@@ -50,6 +50,7 @@ rules:\n     metrics-name: service_instance_resp_time\n     op: \">\"\n     threshold: 1000\n+    include-names-regex: instance\\_\\d+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1OTc3Ng==", "bodyText": "I write on the wrong file, I will change it into the demo file tomorrow.", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r423159776", "createdAt": "2020-05-11T16:20:59Z", "author": {"login": "mrproliu"}, "path": "dist-material/alarm-settings.yml", "diffHunk": "@@ -50,6 +50,7 @@ rules:\n     metrics-name: service_instance_resp_time\n     op: \">\"\n     threshold: 1000\n+    include-names-regex: instance\\_\\d+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0NzU1NA=="}, "originalCommit": {"oid": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4NTA5Nw==", "bodyText": "Change it into the alarm-settings-sample.yml file.", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r423785097", "createdAt": "2020-05-12T14:35:39Z", "author": {"login": "mrproliu"}, "path": "dist-material/alarm-settings.yml", "diffHunk": "@@ -50,6 +50,7 @@ rules:\n     metrics-name: service_instance_resp_time\n     op: \">\"\n     threshold: 1000\n+    include-names-regex: instance\\_\\d+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0NzU1NA=="}, "originalCommit": {"oid": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjYyNjMwOnYy", "diffSide": "RIGHT", "path": "docs/en/setup/backend/backend-alarm.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMDoyNDoyNFrOGTx4uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDozNjo0MVrOGUJ1aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5MzQ2NQ==", "bodyText": "What happens if include names and include names regex exist both? I think we should indicate in the document.", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r423393465", "createdAt": "2020-05-12T00:24:24Z", "author": {"login": "wu-sheng"}, "path": "docs/en/setup/backend/backend-alarm.md", "diffHunk": "@@ -22,6 +22,8 @@ Alarm rule is constituted by following keys\n [List of all potential metrics name](#list-of-all-potential-metrics-name).\n - **Include names**. The following entity names are included in this rule. Please follow [Entity name define](#entity-name).\n - **Exclude names**. The following entity names are excluded in this rule. Please follow [Entity name define](#entity-name).\n+- **Include names regex**. Provide a regex to include the entity names.\n+- **Exclude names regex**. Provide a regex to exclude the exclude names.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4NTgzMg==", "bodyText": "I think both will take effect.", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r423785832", "createdAt": "2020-05-12T14:36:41Z", "author": {"login": "mrproliu"}, "path": "docs/en/setup/backend/backend-alarm.md", "diffHunk": "@@ -22,6 +22,8 @@ Alarm rule is constituted by following keys\n [List of all potential metrics name](#list-of-all-potential-metrics-name).\n - **Include names**. The following entity names are included in this rule. Please follow [Entity name define](#entity-name).\n - **Exclude names**. The following entity names are excluded in this rule. Please follow [Entity name define](#entity-name).\n+- **Include names regex**. Provide a regex to include the entity names.\n+- **Exclude names regex**. Provide a regex to exclude the exclude names.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5MzQ2NQ=="}, "originalCommit": {"oid": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTI0NzIwOnYy", "diffSide": "RIGHT", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMjozNDo0NFrOGUfbqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNTowNDoxN1rOGUhiAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzOTY5MA==", "bodyText": "This string#matches includes Pattern p = Pattern.compile(regex), due to we have the regex expression before all checked, I think we should compile them first when loading the config or config changed.\nCould you run a benchmark to show the performance difference between this and the pre-compiled match?", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r424139690", "createdAt": "2020-05-13T02:34:44Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -115,6 +121,24 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             }\n         }\n \n+        if (StringUtil.isNotEmpty(includeNamesRegex)) {\n+            if (!meta.getName().matches(includeNamesRegex)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} doesn't match the include regex {}\", meta.getName(), includeNamesRegex);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (StringUtil.isNotEmpty(excludeNamesRegex)) {\n+            if (meta.getName().matches(excludeNamesRegex)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aeaad04356788560fd9d93a68f66154eb198ed4"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NDA4MA==", "bodyText": "I do a little benchmark, using regex Service\\_\\d+ to match Service_1, make a loop with 10 million times.\nString#matches: 7198 millisecond\nPattern#matcher()#matches(): 977 millisecond\nI will change to using the pre-build mode, thanks.", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r424174080", "createdAt": "2020-05-13T05:04:17Z", "author": {"login": "mrproliu"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -115,6 +121,24 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             }\n         }\n \n+        if (StringUtil.isNotEmpty(includeNamesRegex)) {\n+            if (!meta.getName().matches(includeNamesRegex)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} doesn't match the include regex {}\", meta.getName(), includeNamesRegex);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (StringUtil.isNotEmpty(excludeNamesRegex)) {\n+            if (meta.getName().matches(excludeNamesRegex)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzOTY5MA=="}, "originalCommit": {"oid": "8aeaad04356788560fd9d93a68f66154eb198ed4"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTY0MzMxOnYy", "diffSide": "RIGHT", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjozMTo1NlrOGUjMWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjo0NDoxMFrOGUjfvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMTMwNQ==", "bodyText": "Just a reminder, as we are using JDK8+, Optional could replace all these !=null. But both of these styles exist today. So, don't require change, anyway.", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r424201305", "createdAt": "2020-05-13T06:31:56Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -97,19 +106,38 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             return;\n         }\n \n+        final String metaName = meta.getName();\n         if (CollectionUtils.isNotEmpty(includeNames)) {\n-            if (!includeNames.contains(meta.getName())) {\n+            if (!includeNames.contains(metaName)) {\n                 if (log.isTraceEnabled()) {\n-                    log.trace(\"{} isn't in the including list {}\", meta.getName(), includeNames);\n+                    log.trace(\"{} isn't in the including list {}\", metaName, includeNames);\n                 }\n                 return;\n             }\n         }\n \n         if (CollectionUtils.isNotEmpty(excludeNames)) {\n-            if (excludeNames.contains(meta.getName())) {\n+            if (excludeNames.contains(metaName)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} is in the excluding list {}\", metaName, excludeNames);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (includeNamesRegex != null) {\n+            if (!includeNamesRegex.matcher(metaName).matches()) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} doesn't match the include regex {}\", metaName, includeNamesRegex);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (excludeNamesRegex != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b7bd3af4b5e5a286ce0239ebfd816fe8b55834d"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNjI3MA==", "bodyText": "Thanks, I will change to this way since next PR.", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r424206270", "createdAt": "2020-05-13T06:44:10Z", "author": {"login": "mrproliu"}, "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -97,19 +106,38 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             return;\n         }\n \n+        final String metaName = meta.getName();\n         if (CollectionUtils.isNotEmpty(includeNames)) {\n-            if (!includeNames.contains(meta.getName())) {\n+            if (!includeNames.contains(metaName)) {\n                 if (log.isTraceEnabled()) {\n-                    log.trace(\"{} isn't in the including list {}\", meta.getName(), includeNames);\n+                    log.trace(\"{} isn't in the including list {}\", metaName, includeNames);\n                 }\n                 return;\n             }\n         }\n \n         if (CollectionUtils.isNotEmpty(excludeNames)) {\n-            if (excludeNames.contains(meta.getName())) {\n+            if (excludeNames.contains(metaName)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} is in the excluding list {}\", metaName, excludeNames);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (includeNamesRegex != null) {\n+            if (!includeNamesRegex.matcher(metaName).matches()) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} doesn't match the include regex {}\", metaName, includeNamesRegex);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (excludeNamesRegex != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMTMwNQ=="}, "originalCommit": {"oid": "7b7bd3af4b5e5a286ce0239ebfd816fe8b55834d"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 142, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}