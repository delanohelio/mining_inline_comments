{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzg1MzE0", "number": 4332, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwNjoxMToyOFrODeQWYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwNjoyNzo0MlrODeQYkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDUxNzQ0OnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileStackNode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwNjoxMToyOFrOFnTfbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwNjoxMToyOFrOFnTfbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc1ODEyNg==", "bodyText": "This could be replaced by simplier foreach.", "url": "https://github.com/apache/skywalking/pull/4332#discussion_r376758126", "createdAt": "2020-02-09T06:11:28Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileStackNode.java", "diffHunk": "@@ -163,21 +166,24 @@ public ProfileStackElement buildAnalyzeResult() {\n             ProfileStackElement respElement = mergingPair.key;\n \n             // generate children node and add to stack and all node mapping\n-            respElement.setChildren(mergingPair.value.children.stream().map(c -> {\n-                ProfileStackElement element = c.buildElement();\n-                Pair<ProfileStackElement, ProfileStackNode> pair = new Pair<>(element, c);\n+            for (ProfileStackNode children : mergingPair.value.children) {\n+                ProfileStackElement element = children.buildElement(idGenerator++);\n+                element.setParentId(respElement.getId());\n+\n+                Pair<ProfileStackElement, ProfileStackNode> pair = new Pair<>(element, children);\n                 stack.add(pair);\n                 nodeMapping.add(pair);\n-\n-                return element;\n-            }).collect(Collectors.toList()));\n+            }\n         }\n \n         // calculate durations\n         nodeMapping.parallelStream().forEach(t -> t.value.calculateDuration(t.key));\n         nodeMapping.parallelStream().forEach(t -> t.value.calculateDurationExcludeChild(t.key));\n \n-        return root;\n+        ProfileStackTree tree = new ProfileStackTree();\n+        tree.setElements(nodeMapping.stream().map(p -> p.key).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52125d513fa4f1756359c2d854bfa05f199b540c"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDUyMzA1OnYy", "diffSide": "RIGHT", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileStackNode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwNjoyNzo0MlrOFnTiOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwNjoyNzo0MlrOFnTiOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc1ODg0MA==", "bodyText": "Use codes like nodeMapping.forEach(node-> tree.getElements().add(node.value));", "url": "https://github.com/apache/skywalking/pull/4332#discussion_r376758840", "createdAt": "2020-02-09T06:27:42Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileStackNode.java", "diffHunk": "@@ -163,21 +165,28 @@ public ProfileStackElement buildAnalyzeResult() {\n             ProfileStackElement respElement = mergingPair.key;\n \n             // generate children node and add to stack and all node mapping\n-            respElement.setChildren(mergingPair.value.children.stream().map(c -> {\n-                ProfileStackElement element = c.buildElement();\n-                Pair<ProfileStackElement, ProfileStackNode> pair = new Pair<>(element, c);\n+            for (ProfileStackNode children : mergingPair.value.children) {\n+                ProfileStackElement element = children.buildElement(idGenerator++);\n+                element.setParentId(respElement.getId());\n+\n+                Pair<ProfileStackElement, ProfileStackNode> pair = new Pair<>(element, children);\n                 stack.add(pair);\n                 nodeMapping.add(pair);\n-\n-                return element;\n-            }).collect(Collectors.toList()));\n+            }\n         }\n \n         // calculate durations\n         nodeMapping.parallelStream().forEach(t -> t.value.calculateDuration(t.key));\n         nodeMapping.parallelStream().forEach(t -> t.value.calculateDurationExcludeChild(t.key));\n \n-        return root;\n+        ProfileStackTree tree = new ProfileStackTree();\n+        ArrayList<ProfileStackElement> elements = new ArrayList<>(nodeMapping.size());\n+        for (Pair<ProfileStackElement, ProfileStackNode> pair : nodeMapping) {\n+            elements.add(pair.key);\n+        }\n+        tree.setElements(elements);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45df2f35bd27def7b6464eb3fbac816b0bec3cba"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4565, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}