{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NDg4Mjgw", "number": 5202, "title": "Query all of labels once selected labels condition is absent.", "bodyText": "Related to #5186", "createdAt": "2020-07-29T14:46:18Z", "url": "https://github.com/apache/skywalking/pull/5202", "merged": true, "mergeCommit": {"oid": "b0bb7cf3beb9caa0c8647227c38598b946d8e0c0"}, "closed": true, "closedAt": "2020-08-08T14:26:07Z", "author": {"login": "hanahmily"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5sF9jAH2gAyNDU4NDg4MjgwOmUzNTg2ODM5NGUxZDJjYWVlMjcwNTFlMWE2MjkxMTVmNmM4MDg3MzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc852xQgFqTQ2MzgwNjE2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e35868394e1d2caee27051e1a629115f6c808734", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/e35868394e1d2caee27051e1a629115f6c808734", "committedDate": "2020-07-29T14:42:06Z", "message": "Query all of labels once selected labels condition is absent."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NjA2MzQ1", "url": "https://github.com/apache/skywalking/pull/5202#pullrequestreview-457606345", "createdAt": "2020-07-29T14:55:33Z", "commit": {"oid": "e35868394e1d2caee27051e1a629115f6c808734"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo1NTozM1rOG48dUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDo1NTozM1rOG48dUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mzk4NQ==", "bodyText": "Others are HashMap, this is LinkedHashMap. Why?", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r462363985", "createdAt": "2020-07-29T14:55:33Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/query/MetricsQueryEsDAO.java", "diffHunk": "@@ -138,42 +139,12 @@ public MetricsValues readMetricsValues(final MetricsCondition condition,\n         });\n \n         SearchResponse response = getClient().ids(condition.getName(), ids.toArray(new String[0]));\n-        Map<String, Map<String, Object>> idMap = toMap(response);\n-\n-        Map<String, MetricsValues> labeledValues = new HashMap<>(labels.size());\n-        labels.forEach(label -> {\n-            MetricsValues labelValue = new MetricsValues();\n-            labelValue.setLabel(label);\n-\n-            labeledValues.put(label, labelValue);\n-        });\n-\n-        final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n-        for (String id : ids) {\n-            if (idMap.containsKey(id)) {\n-                Map<String, Object> source = idMap.get(id);\n-                DataTable multipleValues = new DataTable((String) source.getOrDefault(valueColumnName, \"\"));\n-\n-                labels.forEach(label -> {\n-                    final IntValues values = labeledValues.get(label).getValues();\n-                    Long data = multipleValues.get(label);\n-                    if (data == null) {\n-                        data = (long) defaultValue;\n-                    }\n-                    KVInt kv = new KVInt();\n-                    kv.setId(id);\n-                    kv.setValue(data);\n-                    values.addKVInt(kv);\n-                });\n-            }\n-\n+        Map<String, DataTable> idMap = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e35868394e1d2caee27051e1a629115f6c808734"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NjEwOTUz", "url": "https://github.com/apache/skywalking/pull/5202#pullrequestreview-457610953", "createdAt": "2020-07-29T15:00:05Z", "commit": {"oid": "e35868394e1d2caee27051e1a629115f6c808734"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowMDowNVrOG48q6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowMDowNVrOG48q6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzQ2NA==", "bodyText": "I feel like you should just copy the old codes rather than re-implement.", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r462367464", "createdAt": "2020-07-29T15:00:05Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,45 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e35868394e1d2caee27051e1a629115f6c808734"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NjExMTEz", "url": "https://github.com/apache/skywalking/pull/5202#pullrequestreview-457611113", "createdAt": "2020-07-29T15:00:14Z", "commit": {"oid": "e35868394e1d2caee27051e1a629115f6c808734"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowMDoxNVrOG48rYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowMDoxNVrOG48rYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzU4Ng==", "bodyText": "Why orElse(0L)?", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r462367586", "createdAt": "2020-07-29T15:00:15Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,45 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n+            return allLabels.stream()\n+                .flatMap(label -> ids.stream()\n+                    .map(id -> Tuple.of(\n+                        label,\n+                        id,\n+                        Optional.ofNullable(idMap.getOrDefault(id, new DataTable()).get(label)).orElse(0L))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e35868394e1d2caee27051e1a629115f6c808734"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "534cff43f42abd8a067781859880397a0341f78b", "author": {"user": {"login": "wu-sheng", "name": "\u5434\u665f Wu Sheng"}}, "url": "https://github.com/apache/skywalking/commit/534cff43f42abd8a067781859880397a0341f78b", "committedDate": "2020-07-30T03:55:59Z", "message": "Merge branch 'master' into query-labeled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f62b5c27f688ecaeb0b7f538f73c78b63007911c", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/f62b5c27f688ecaeb0b7f538f73c78b63007911c", "committedDate": "2020-08-05T23:29:33Z", "message": "Merge branch 'master' into query-labeled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cda6e2512c1eddfc5770784825ab989e449e86b1", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/cda6e2512c1eddfc5770784825ab989e449e86b1", "committedDate": "2020-08-06T15:05:07Z", "message": "Polish codes\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d44116af3d8fb39928a5066289c021e963654fed", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/d44116af3d8fb39928a5066289c021e963654fed", "committedDate": "2020-08-06T15:06:06Z", "message": "Merge branch 'master' into query-labeled"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTU4NDgx", "url": "https://github.com/apache/skywalking/pull/5202#pullrequestreview-462958481", "createdAt": "2020-08-07T00:18:04Z", "commit": {"oid": "d44116af3d8fb39928a5066289c021e963654fed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoxODowNFrOG9IUbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoxODowNFrOG9IUbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MjYyMA==", "bodyText": "According this the documents, this #newTreeSet is deprecated\n   * <p><b>Note for Java 7 and later:</b> this method is now unnecessary and should be treated as\n   * deprecated. Instead, use the {@code TreeSet} constructor directly, taking advantage of the new\n   * <a href=\"http://goo.gl/iz2Wi\">\"diamond\" syntax</a>.", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466752620", "createdAt": "2020-08-07T00:18:04Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,54 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n+            List<LabeledValue> labeledValues = Sets.newTreeSet(allLabels).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44116af3d8fb39928a5066289c021e963654fed"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTU5MjQw", "url": "https://github.com/apache/skywalking/pull/5202#pullrequestreview-462959240", "createdAt": "2020-08-07T00:20:39Z", "commit": {"oid": "d44116af3d8fb39928a5066289c021e963654fed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoyMDo0MFrOG9IXBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoyMDo0MFrOG9IXBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MzI4Nw==", "bodyText": "I think this nested expression should be better formated manually than IDE.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                new LabeledValue(label, id, Optional.ofNullable(\n          \n          \n            \n                                    idMap.getOrDefault(id, new DataTable()).get(label)).orElse((long) defaultValue))))\n          \n          \n            \n                                new LabeledValue(\n          \n          \n            \n                                    label, \n          \n          \n            \n                                    id, \n          \n          \n            \n                                    Optional.ofNullable(idMap.getOrDefault(id, new DataTable()).get(label)).orElse((long) defaultValue)))\n          \n          \n            \n                                )", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466753287", "createdAt": "2020-08-07T00:20:40Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,54 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n+            List<LabeledValue> labeledValues = Sets.newTreeSet(allLabels).stream()\n+                .flatMap(label -> ids.stream().map(id ->\n+                    new LabeledValue(label, id, Optional.ofNullable(\n+                        idMap.getOrDefault(id, new DataTable()).get(label)).orElse((long) defaultValue))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44116af3d8fb39928a5066289c021e963654fed"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTU5Njc1", "url": "https://github.com/apache/skywalking/pull/5202#pullrequestreview-462959675", "createdAt": "2020-08-07T00:22:13Z", "commit": {"oid": "d44116af3d8fb39928a5066289c021e963654fed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoyMjoxM1rOG9IYyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoyMjoxM1rOG9IYyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MzczOA==", "bodyText": "You are using each.label.equals, then !Strings.isNullOrEmpty(current.getLabel()) isn't required, right?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (!Strings.isNullOrEmpty(current.getLabel()) && each.label.equals(current.getLabel())) {\n          \n          \n            \n                            if (each.label.equals(current.getLabel())) {\n          \n      \n    \n    \n  \n\nOr you need to check each.label != null, from my understanding.", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466753738", "createdAt": "2020-08-07T00:22:13Z", "author": {"login": "wu-sheng"}, "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,54 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n+            List<LabeledValue> labeledValues = Sets.newTreeSet(allLabels).stream()\n+                .flatMap(label -> ids.stream().map(id ->\n+                    new LabeledValue(label, id, Optional.ofNullable(\n+                        idMap.getOrDefault(id, new DataTable()).get(label)).orElse((long) defaultValue))))\n+                .collect(toList());\n+            MetricsValues current = new MetricsValues();\n+            List<MetricsValues> result = new ArrayList<>();\n+            for (LabeledValue each : labeledValues) {\n+                if (!Strings.isNullOrEmpty(current.getLabel()) && each.label.equals(current.getLabel())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44116af3d8fb39928a5066289c021e963654fed"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcd7b997a2f324278b19a77a814a5c7cb7d6ffdd", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/bcd7b997a2f324278b19a77a814a5c7cb7d6ffdd", "committedDate": "2020-08-08T11:02:38Z", "message": "Merge branch 'master' into query-labeled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5564f8ca211aa39301fdb27bc5f2c99cee6abcd", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/a5564f8ca211aa39301fdb27bc5f2c99cee6abcd", "committedDate": "2020-08-08T11:11:09Z", "message": "Some nits\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "a5564f8ca211aa39301fdb27bc5f2c99cee6abcd", "author": {"user": {"login": "hanahmily", "name": "Gao Hongtao"}}, "url": "https://github.com/apache/skywalking/commit/a5564f8ca211aa39301fdb27bc5f2c99cee6abcd", "committedDate": "2020-08-08T11:11:09Z", "message": "Some nits\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODA2MTY0", "url": "https://github.com/apache/skywalking/pull/5202#pullrequestreview-463806164", "createdAt": "2020-08-08T14:25:57Z", "commit": {"oid": "a5564f8ca211aa39301fdb27bc5f2c99cee6abcd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2134, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}