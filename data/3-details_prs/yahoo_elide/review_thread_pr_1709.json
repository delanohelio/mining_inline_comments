{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjc3MTMw", "number": 1709, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0MTozMFrOFA84xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0MTozMFrOFA84xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTQxODk1OnYy", "diffSide": "LEFT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/java/example/tests/DynamicConfigTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0MTozMFrOH_fbWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOTo0Mzo0M1rOH_fgFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMzNzI0MA==", "bodyText": "We can move the filter test cases to Aggregation store IT test. But I think there may be some merit in running DynamicConfigTest.jsonApiGetTest() in Spring separately. It will help us in testing and making sure that any changes to bean configurations do not break Spring Applications.\n@aklish Thoughts?", "url": "https://github.com/yahoo/elide/pull/1709#discussion_r536337240", "createdAt": "2020-12-04T19:41:30Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/java/example/tests/DynamicConfigTest.java", "diffHunk": "@@ -1,113 +0,0 @@\n-/*\n- * Copyright 2020, Yahoo Inc.\n- * Licensed under the Apache License, Version 2.0\n- * See LICENSE file in project root for terms.\n- */\n-package example.tests;\n-\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.attr;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.attributes;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.data;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.id;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.resource;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.type;\n-import static io.restassured.RestAssured.when;\n-import static org.hamcrest.CoreMatchers.hasItems;\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import com.yahoo.elide.core.exceptions.HttpStatus;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.test.context.jdbc.Sql;\n-import org.springframework.test.context.jdbc.SqlMergeMode;\n-\n-/**\n- * Dynamic Configuration functional test.\n- * TODO - All of the tests in this file need to migrate over to AggregationDataStore so they are not duplicated\n- * here and in standalone tests.\n- */\n-@SqlMergeMode(SqlMergeMode.MergeMode.MERGE)\n-@Sql(executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD,\n-        statements = \"CREATE TABLE PlayerStats (name varchar(255) not null,\"\n-                + \"\\t\\t countryId varchar(255), createdOn timestamp, updatedOn timestamp,\"\n-                + \"\\t\\t highScore bigint, primary key (name));\"\n-                + \"CREATE TABLE PlayerCountry (id varchar(255) not null,\"\n-                + \"\\t\\t isoCode varchar(255), primary key (id));\"\n-                + \"INSERT INTO PlayerStats (name,countryId,createdOn,updatedOn) VALUES\\n\"\n-                + \"\\t\\t('SerenaWilliams','1','2000-10-10','2001-10-10');\"\n-                + \"INSERT INTO PlayerCountry (id,isoCode) VALUES\\n\"\n-                + \"\\t\\t('2','IND');\"\n-                + \"INSERT INTO PlayerCountry (id,isoCode) VALUES\\n\"\n-                + \"\\t\\t('1','USA');\")\n-@Sql(executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD,\n-statements = \"DROP TABLE PlayerStats; DROP TABLE PlayerCountry;\")\n-public class DynamicConfigTest extends IntegrationTest {\n-    /**\n-     * This test demonstrates an example test using the JSON-API DSL.\n-     * @throws InterruptedException\n-     */\n-\n-    @Test\n-    public void jsonApiGetTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c5347e35c32df5d18b5f4a59afdb6b32d6c2cab"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMzODQ1NQ==", "bodyText": "Instead of a separate java file, may be it could just run as part of ControllerTest or AggregationStoreTest", "url": "https://github.com/yahoo/elide/pull/1709#discussion_r536338455", "createdAt": "2020-12-04T19:43:43Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/java/example/tests/DynamicConfigTest.java", "diffHunk": "@@ -1,113 +0,0 @@\n-/*\n- * Copyright 2020, Yahoo Inc.\n- * Licensed under the Apache License, Version 2.0\n- * See LICENSE file in project root for terms.\n- */\n-package example.tests;\n-\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.attr;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.attributes;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.data;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.id;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.resource;\n-import static com.yahoo.elide.test.jsonapi.JsonApiDSL.type;\n-import static io.restassured.RestAssured.when;\n-import static org.hamcrest.CoreMatchers.hasItems;\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import com.yahoo.elide.core.exceptions.HttpStatus;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.test.context.jdbc.Sql;\n-import org.springframework.test.context.jdbc.SqlMergeMode;\n-\n-/**\n- * Dynamic Configuration functional test.\n- * TODO - All of the tests in this file need to migrate over to AggregationDataStore so they are not duplicated\n- * here and in standalone tests.\n- */\n-@SqlMergeMode(SqlMergeMode.MergeMode.MERGE)\n-@Sql(executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD,\n-        statements = \"CREATE TABLE PlayerStats (name varchar(255) not null,\"\n-                + \"\\t\\t countryId varchar(255), createdOn timestamp, updatedOn timestamp,\"\n-                + \"\\t\\t highScore bigint, primary key (name));\"\n-                + \"CREATE TABLE PlayerCountry (id varchar(255) not null,\"\n-                + \"\\t\\t isoCode varchar(255), primary key (id));\"\n-                + \"INSERT INTO PlayerStats (name,countryId,createdOn,updatedOn) VALUES\\n\"\n-                + \"\\t\\t('SerenaWilliams','1','2000-10-10','2001-10-10');\"\n-                + \"INSERT INTO PlayerCountry (id,isoCode) VALUES\\n\"\n-                + \"\\t\\t('2','IND');\"\n-                + \"INSERT INTO PlayerCountry (id,isoCode) VALUES\\n\"\n-                + \"\\t\\t('1','USA');\")\n-@Sql(executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD,\n-statements = \"DROP TABLE PlayerStats; DROP TABLE PlayerCountry;\")\n-public class DynamicConfigTest extends IntegrationTest {\n-    /**\n-     * This test demonstrates an example test using the JSON-API DSL.\n-     * @throws InterruptedException\n-     */\n-\n-    @Test\n-    public void jsonApiGetTest() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMzNzI0MA=="}, "originalCommit": {"oid": "8c5347e35c32df5d18b5f4a59afdb6b32d6c2cab"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 879, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}