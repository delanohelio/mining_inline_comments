{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjU3OTEz", "number": 1662, "title": "Display user friendly messages for Json Schema validation failures", "bodyText": "Description\nDisplay user friendly messages for Json Schema validation failures\nHow Has This Been Tested?\nExisting tests pass.\nAdditional tests included.\nLicense\nI confirm that this contribution is made under an Apache 2.0 license and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-11-13T15:44:20Z", "url": "https://github.com/yahoo/elide/pull/1662", "merged": true, "mergeCommit": {"oid": "d17e0b16e2f0e3571b058d0d0d91570cb4e7db2e"}, "closed": true, "closedAt": "2020-11-17T15:46:22Z", "author": {"login": "rishi-aga"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddIbxkgBqjQwMDE0OTUzOTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddbibkgFqTUzMjUwODg1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2dd6cef72d85087b26b49fc03ef9c670ce1dc325", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/2dd6cef72d85087b26b49fc03ef9c670ce1dc325", "committedDate": "2020-11-13T15:39:04Z", "message": "test custom errors"}, "afterCommit": {"oid": "8d69525ca1df092abc91c9c3b698b308b4ab076c", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/8d69525ca1df092abc91c9c3b698b308b4ab076c", "committedDate": "2020-11-16T17:30:14Z", "message": "test custom errors"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d69525ca1df092abc91c9c3b698b308b4ab076c", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/8d69525ca1df092abc91c9c3b698b308b4ab076c", "committedDate": "2020-11-16T17:30:14Z", "message": "test custom errors"}, "afterCommit": {"oid": "cd3dee4c4e435e0e605493e446f8d0a164395a99", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/cd3dee4c4e435e0e605493e446f8d0a164395a99", "committedDate": "2020-11-16T18:14:00Z", "message": "aa"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd3dee4c4e435e0e605493e446f8d0a164395a99", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/cd3dee4c4e435e0e605493e446f8d0a164395a99", "committedDate": "2020-11-16T18:14:00Z", "message": "aa"}, "afterCommit": {"oid": "4baeb6f87029a165de57dc903948e6363537408a", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/4baeb6f87029a165de57dc903948e6363537408a", "committedDate": "2020-11-16T19:05:48Z", "message": "aa"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4baeb6f87029a165de57dc903948e6363537408a", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/4baeb6f87029a165de57dc903948e6363537408a", "committedDate": "2020-11-16T19:05:48Z", "message": "aa"}, "afterCommit": {"oid": "6962c198b5c540530bdb98c857b27910d2390148", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/6962c198b5c540530bdb98c857b27910d2390148", "committedDate": "2020-11-16T19:28:23Z", "message": "Display user friendly messages for Json Schema validation failures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6962c198b5c540530bdb98c857b27910d2390148", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/6962c198b5c540530bdb98c857b27910d2390148", "committedDate": "2020-11-16T19:28:23Z", "message": "Display user friendly messages for Json Schema validation failures"}, "afterCommit": {"oid": "3b45a410cdb1081e67f936bf2fab0ff01e248964", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/3b45a410cdb1081e67f936bf2fab0ff01e248964", "committedDate": "2020-11-16T21:51:35Z", "message": "Display user friendly messages for Json Schema validation failures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b45a410cdb1081e67f936bf2fab0ff01e248964", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/3b45a410cdb1081e67f936bf2fab0ff01e248964", "committedDate": "2020-11-16T21:51:35Z", "message": "Display user friendly messages for Json Schema validation failures"}, "afterCommit": {"oid": "52141a9f7ad01a068373470e7f1f48823a19efdb", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/52141a9f7ad01a068373470e7f1f48823a19efdb", "committedDate": "2020-11-16T21:58:28Z", "message": "Display user friendly messages for Json Schema validation failures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52141a9f7ad01a068373470e7f1f48823a19efdb", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/52141a9f7ad01a068373470e7f1f48823a19efdb", "committedDate": "2020-11-16T21:58:28Z", "message": "Display user friendly messages for Json Schema validation failures"}, "afterCommit": {"oid": "676ec8ec04b1d64b4e63f74a8b487a22524a591d", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/676ec8ec04b1d64b4e63f74a8b487a22524a591d", "committedDate": "2020-11-16T21:59:59Z", "message": "Display user friendly messages for Json Schema validation failures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "676ec8ec04b1d64b4e63f74a8b487a22524a591d", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/676ec8ec04b1d64b4e63f74a8b487a22524a591d", "committedDate": "2020-11-16T21:59:59Z", "message": "Display user friendly messages for Json Schema validation failures"}, "afterCommit": {"oid": "fd1dd43a477afc4a91a6ff2d9f5ca8e51484c09e", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/fd1dd43a477afc4a91a6ff2d9f5ca8e51484c09e", "committedDate": "2020-11-16T22:08:11Z", "message": "Display user friendly messages for Json Schema validation failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/9a97b49ee862de53288184e76db6b6be704d2789", "committedDate": "2020-11-16T22:10:01Z", "message": "Display user friendly messages for Json Schema validation failures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd1dd43a477afc4a91a6ff2d9f5ca8e51484c09e", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/fd1dd43a477afc4a91a6ff2d9f5ca8e51484c09e", "committedDate": "2020-11-16T22:08:11Z", "message": "Display user friendly messages for Json Schema validation failures"}, "afterCommit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/9a97b49ee862de53288184e76db6b6be704d2789", "committedDate": "2020-11-16T22:10:01Z", "message": "Display user friendly messages for Json Schema validation failures"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxODY1NDg3", "url": "https://github.com/yahoo/elide/pull/1662#pullrequestreview-531865487", "createdAt": "2020-11-16T22:56:40Z", "commit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMjo1Njo0MFrOH0ZwYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMjo1Njo0MFrOH0ZwYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDcwOTk4Nw==", "bodyText": "This should probably have a format restriction.", "url": "https://github.com/yahoo/elide/pull/1662#discussion_r524709987", "createdAt": "2020-11-16T22:56:40Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/resources/elideTableSchema.json", "diffHunk": "@@ -1,454 +1,426 @@\n {\n-  \"$schema\": \"https://json-schema.org/draft-06/schema#\",\n-  \"$id\": \"https://elide.io/schemas/table_schema_v1#\",\n-  \"description\": \"Elide Table config json/hjson schema\",\n-  \"definitions\": {\n-    \"grain\": {\n-      \"title\": \"Grains\",\n-      \"description\": \"Grains can have SQL expressions that can substitute column with the dimension definition expression\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"type\": {\n-          \"title\": \"Time granularity\",\n-          \"description\": \"Indicates grain time granularity\",\n-          \"type\": \"string\",\n-          \"anyOf\": [\n-            { \"pattern\": \"^[Ss][Ee][Cc][Oo][Nn][Dd]$\" },\n-            { \"pattern\": \"^[Mm][Ii][Nn][Uu][Tt][Ee]$\" },\n-            { \"pattern\": \"^[Hh][Oo][Uu][Rr]$\" },\n-            { \"pattern\": \"^[Dd][Aa][Yy]$\" },\n-            { \"pattern\": \"^[Ii][Ss][Oo][Ww][Ee][Ee][Kk]$\" },\n-            { \"pattern\": \"^[Ww][Ee][Ee][Kk]$\" },\n-            { \"pattern\": \"^[Mm][Oo][Nn][Tt][Hh]$\" },\n-            { \"pattern\": \"^[Qq][Uu][Aa][Rr][Tt][Ee][Rr]$\" },\n-            { \"pattern\": \"^[Yy][Ee][Aa][Rr]$\" }\n-          ]\n-        },\n-        \"sql\": {\n-          \"title\": \"Grain SQL\",\n-          \"description\": \"Grain SQL query\",\n-          \"type\": \"string\"\n-        }\n-      },\n-      \"additionalProperties\": false\n-    },\n-    \"join\": {\n-      \"title\": \"Join\",\n-      \"description\": \"Joins describe the SQL expression necessary to join two physical tables. Joins can be used when defining dimension columns that reference other tables.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Join name\",\n-          \"description\": \"The name of the join relationship.\",\n-          \"type\": \"string\"\n-        },\n-        \"to\": {\n-          \"title\": \"Join table name\",\n-          \"description\": \"The name of the table that is being joined to\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"type\": {\n-          \"title\": \"Type of Join\",\n-          \"description\": \"Type of the join - toOne or toMany\",\n-          \"type\": \"string\",\n-          \"anyOf\": [\n-            { \"pattern\": \"^[Tt][Oo][Oo][Nn][Ee]$\" },\n-            { \"pattern\": \"^[Tt][Oo][Mm][Aa][Nn][Yy]$\" }\n-          ]\n-        },\n-        \"definition\": {\n-          \"title\": \"Join definition SQL\",\n-          \"description\": \"Templated SQL expression that represents the ON clause of the join\",\n-          \"type\": \"string\"\n-        }\n-      },\n-      \"required\": [\n-        \"name\",\n-        \"to\",\n-        \"type\",\n-        \"definition\"\n-      ],\n-      \"additionalProperties\": false\n-    },\n-    \"columnTypes\": {\n-      \"title\": \"Dimension field type\",\n-      \"description\": \"The data type of the dimension field\",\n-      \"type\": \"string\",\n-      \"anyOf\": [\n-        { \"pattern\": \"^[Ii][Nn][Tt][Ee][Gg][Ee][Rr]$\" },\n-        { \"pattern\": \"^[Dd][Ee][Cc][Ii][Mm][Aa][Ll]$\" },\n-        { \"pattern\": \"^[Mm][Oo][Nn][Ee][Yy]$\" },\n-        { \"pattern\": \"^[Tt][Ee][Xx][Tt]$\" },\n-        { \"pattern\": \"^[Cc][Oo][Oo][Rr][Dd][Ii][Nn][Aa][Tt][Ee]$\" },\n-        { \"pattern\": \"^[Bb][Oo][Oo][Ll][Ee][Aa][Nn]$\" }\n-      ]\n-    },\n-    \"cardinalityTypes\": {\n-      \"title\": \"Table/Dimension cardinality\",\n-      \"description\": \"Table/Dimension cardinality: (tiny, small, medium, large, huge). The relative sizes are decided by the table designer(s).\",\n-      \"type\": \"string\",\n-      \"anyOf\": [\n-        { \"pattern\": \"^[Tt][Ii][Nn][Yy]$\" },\n-        { \"pattern\": \"^[Ss][Mm][Aa][Ll][Ll]$\" },\n-        { \"pattern\": \"^[Mm][Ee][Dd][Ii][Uu][Mm]$\" },\n-        { \"pattern\": \"^[Ll][Aa][Rr][Gg][Ee]$\" },\n-        { \"pattern\": \"^[Hh][Uu][Gg][Ee]$\" }\n-      ]\n-    },\n-    \"measure\": {\n-      \"title\": \"Measure\",\n-      \"description\": \"Metric definitions are extensible objects that contain a type field and one or more additional attributes. Each type is tied to logic in Elide that generates a metric function.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Metric name\",\n-          \"description\": \"The name of the metric. This will be the same as the POJO field name.\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"description\": {\n-          \"title\": \"Metric description\",\n-          \"description\": \"A long description of the metric.\",\n-          \"type\": \"string\"\n-        },\n-        \"category\": {\n-          \"title\": \"Measure group category\",\n-          \"description\": \"Category for grouping\",\n-          \"type\": \"string\"\n-        },\n-        \"hidden\": {\n-          \"title\": \"Hide/Show measure\",\n-          \"description\": \"Whether this metric is exposed via API metadata\",\n-          \"type\": \"boolean\",\n-          \"default\": false\n-        },\n-        \"readAccess\": {\n-          \"title\": \"Measure read access\",\n-          \"description\": \"Read permission for the metric.\",\n-          \"type\": \"string\",\n-          \"default\": \"Prefab.Role.All\"\n-        },\n-        \"definition\": {\n-          \"title\": \"Metric definition\",\n-          \"description\": \"The definition of the metric\",\n-          \"type\": \"string\"\n-        },\n-        \"queryPlanResolver\": {\n-          \"title\": \"query plan resolver class\",\n-          \"description\": \"The JVM function class which maps a metric to a query plan\",\n-          \"pattern\": \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class\",\n-          \"type\": \"string\"\n-        },\n-        \"type\": { \"$ref\": \"#/definitions/columnTypes\" },\n-        \"tags\": {\n-          \"title\": \"Measure tags\",\n-          \"description\": \"An array of string based tags for measures\",\n-          \"type\": \"array\",\n-          \"uniqueItems\": true,\n-          \"items\": {\n-            \"type\": \"string\"\n-          },\n-          \"default\": []\n-        }\n-      },\n-      \"required\": [\n-        \"name\",\n-        \"definition\"\n-      ],\n-      \"additionalProperties\": false\n-    },\n-    \"dimensionRef\": {\n-      \"title\": \"Dimension\",\n-      \"description\": \"Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Dimension name\",\n-          \"description\": \"The name of the dimension. This will be the same as the POJO field name.\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"description\": {\n-          \"title\": \"Dimension description\",\n-          \"description\": \"A long description of the dimension.\",\n-          \"type\": \"string\"\n-        },\n-        \"category\": {\n-          \"title\": \"Dimension group category\",\n-          \"description\": \"Category for grouping dimension\",\n-          \"type\": \"string\"\n-        },\n-        \"hidden\": {\n-          \"title\": \"Hide/Show dimension\",\n-          \"description\": \"Whether this dimension is exposed via API metadata\",\n-          \"type\": \"boolean\",\n-          \"default\": false\n-        },\n-        \"readAccess\": {\n-          \"title\": \"Dimension read access\",\n-          \"description\": \"Read permission for the dimension.\",\n-          \"type\": \"string\",\n-          \"default\": \"Prefab.Role.All\"\n-        },\n-        \"definition\": {\n-          \"title\": \"Dimension definition\",\n-          \"description\": \"The definition of the dimension\",\n-          \"type\": \"string\",\n-          \"default\": \"\"\n-        },\n-        \"cardinality\": {\n-          \"$ref\": \"#/definitions/cardinalityTypes\"\n+    \"definitions\": {\n+        \"join\": {\n+            \"title\": \"Join\",\n+            \"description\": \"Joins describe the SQL expression necessary to join two physical tables. Joins can be used when defining dimension columns that reference other tables.\",\n+            \"type\": \"object\",\n+            \"properties\": {\n+                \"name\": {\n+                    \"title\": \"Join name\",\n+                    \"description\": \"The name of the join relationship.\",\n+                    \"type\": \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789"}, "originalPosition": 211}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxODY4NjQw", "url": "https://github.com/yahoo/elide/pull/1662#pullrequestreview-531868640", "createdAt": "2020-11-16T22:58:17Z", "commit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMjo1ODoxN1rOH0Z2uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMzoxMjozNFrOH0axaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDcxMTYwOQ==", "bodyText": "Why did you remove the header boilerplate here?", "url": "https://github.com/yahoo/elide/pull/1662#discussion_r524711609", "createdAt": "2020-11-16T22:58:17Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/resources/elideTableSchema.json", "diffHunk": "@@ -1,454 +1,426 @@\n {\n-  \"$schema\": \"https://json-schema.org/draft-06/schema#\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDcxNDIzMA==", "bodyText": "Do we validate these at all?", "url": "https://github.com/yahoo/elide/pull/1662#discussion_r524714230", "createdAt": "2020-11-16T23:00:50Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/resources/elideTableSchema.json", "diffHunk": "@@ -1,454 +1,426 @@\n {\n-  \"$schema\": \"https://json-schema.org/draft-06/schema#\",\n-  \"$id\": \"https://elide.io/schemas/table_schema_v1#\",\n-  \"description\": \"Elide Table config json/hjson schema\",\n-  \"definitions\": {\n-    \"grain\": {\n-      \"title\": \"Grains\",\n-      \"description\": \"Grains can have SQL expressions that can substitute column with the dimension definition expression\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"type\": {\n-          \"title\": \"Time granularity\",\n-          \"description\": \"Indicates grain time granularity\",\n-          \"type\": \"string\",\n-          \"anyOf\": [\n-            { \"pattern\": \"^[Ss][Ee][Cc][Oo][Nn][Dd]$\" },\n-            { \"pattern\": \"^[Mm][Ii][Nn][Uu][Tt][Ee]$\" },\n-            { \"pattern\": \"^[Hh][Oo][Uu][Rr]$\" },\n-            { \"pattern\": \"^[Dd][Aa][Yy]$\" },\n-            { \"pattern\": \"^[Ii][Ss][Oo][Ww][Ee][Ee][Kk]$\" },\n-            { \"pattern\": \"^[Ww][Ee][Ee][Kk]$\" },\n-            { \"pattern\": \"^[Mm][Oo][Nn][Tt][Hh]$\" },\n-            { \"pattern\": \"^[Qq][Uu][Aa][Rr][Tt][Ee][Rr]$\" },\n-            { \"pattern\": \"^[Yy][Ee][Aa][Rr]$\" }\n-          ]\n-        },\n-        \"sql\": {\n-          \"title\": \"Grain SQL\",\n-          \"description\": \"Grain SQL query\",\n-          \"type\": \"string\"\n-        }\n-      },\n-      \"additionalProperties\": false\n-    },\n-    \"join\": {\n-      \"title\": \"Join\",\n-      \"description\": \"Joins describe the SQL expression necessary to join two physical tables. Joins can be used when defining dimension columns that reference other tables.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Join name\",\n-          \"description\": \"The name of the join relationship.\",\n-          \"type\": \"string\"\n-        },\n-        \"to\": {\n-          \"title\": \"Join table name\",\n-          \"description\": \"The name of the table that is being joined to\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"type\": {\n-          \"title\": \"Type of Join\",\n-          \"description\": \"Type of the join - toOne or toMany\",\n-          \"type\": \"string\",\n-          \"anyOf\": [\n-            { \"pattern\": \"^[Tt][Oo][Oo][Nn][Ee]$\" },\n-            { \"pattern\": \"^[Tt][Oo][Mm][Aa][Nn][Yy]$\" }\n-          ]\n-        },\n-        \"definition\": {\n-          \"title\": \"Join definition SQL\",\n-          \"description\": \"Templated SQL expression that represents the ON clause of the join\",\n-          \"type\": \"string\"\n-        }\n-      },\n-      \"required\": [\n-        \"name\",\n-        \"to\",\n-        \"type\",\n-        \"definition\"\n-      ],\n-      \"additionalProperties\": false\n-    },\n-    \"columnTypes\": {\n-      \"title\": \"Dimension field type\",\n-      \"description\": \"The data type of the dimension field\",\n-      \"type\": \"string\",\n-      \"anyOf\": [\n-        { \"pattern\": \"^[Ii][Nn][Tt][Ee][Gg][Ee][Rr]$\" },\n-        { \"pattern\": \"^[Dd][Ee][Cc][Ii][Mm][Aa][Ll]$\" },\n-        { \"pattern\": \"^[Mm][Oo][Nn][Ee][Yy]$\" },\n-        { \"pattern\": \"^[Tt][Ee][Xx][Tt]$\" },\n-        { \"pattern\": \"^[Cc][Oo][Oo][Rr][Dd][Ii][Nn][Aa][Tt][Ee]$\" },\n-        { \"pattern\": \"^[Bb][Oo][Oo][Ll][Ee][Aa][Nn]$\" }\n-      ]\n-    },\n-    \"cardinalityTypes\": {\n-      \"title\": \"Table/Dimension cardinality\",\n-      \"description\": \"Table/Dimension cardinality: (tiny, small, medium, large, huge). The relative sizes are decided by the table designer(s).\",\n-      \"type\": \"string\",\n-      \"anyOf\": [\n-        { \"pattern\": \"^[Tt][Ii][Nn][Yy]$\" },\n-        { \"pattern\": \"^[Ss][Mm][Aa][Ll][Ll]$\" },\n-        { \"pattern\": \"^[Mm][Ee][Dd][Ii][Uu][Mm]$\" },\n-        { \"pattern\": \"^[Ll][Aa][Rr][Gg][Ee]$\" },\n-        { \"pattern\": \"^[Hh][Uu][Gg][Ee]$\" }\n-      ]\n-    },\n-    \"measure\": {\n-      \"title\": \"Measure\",\n-      \"description\": \"Metric definitions are extensible objects that contain a type field and one or more additional attributes. Each type is tied to logic in Elide that generates a metric function.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Metric name\",\n-          \"description\": \"The name of the metric. This will be the same as the POJO field name.\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"description\": {\n-          \"title\": \"Metric description\",\n-          \"description\": \"A long description of the metric.\",\n-          \"type\": \"string\"\n-        },\n-        \"category\": {\n-          \"title\": \"Measure group category\",\n-          \"description\": \"Category for grouping\",\n-          \"type\": \"string\"\n-        },\n-        \"hidden\": {\n-          \"title\": \"Hide/Show measure\",\n-          \"description\": \"Whether this metric is exposed via API metadata\",\n-          \"type\": \"boolean\",\n-          \"default\": false\n-        },\n-        \"readAccess\": {\n-          \"title\": \"Measure read access\",\n-          \"description\": \"Read permission for the metric.\",\n-          \"type\": \"string\",\n-          \"default\": \"Prefab.Role.All\"\n-        },\n-        \"definition\": {\n-          \"title\": \"Metric definition\",\n-          \"description\": \"The definition of the metric\",\n-          \"type\": \"string\"\n-        },\n-        \"queryPlanResolver\": {\n-          \"title\": \"query plan resolver class\",\n-          \"description\": \"The JVM function class which maps a metric to a query plan\",\n-          \"pattern\": \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class\",\n-          \"type\": \"string\"\n-        },\n-        \"type\": { \"$ref\": \"#/definitions/columnTypes\" },\n-        \"tags\": {\n-          \"title\": \"Measure tags\",\n-          \"description\": \"An array of string based tags for measures\",\n-          \"type\": \"array\",\n-          \"uniqueItems\": true,\n-          \"items\": {\n-            \"type\": \"string\"\n-          },\n-          \"default\": []\n-        }\n-      },\n-      \"required\": [\n-        \"name\",\n-        \"definition\"\n-      ],\n-      \"additionalProperties\": false\n-    },\n-    \"dimensionRef\": {\n-      \"title\": \"Dimension\",\n-      \"description\": \"Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Dimension name\",\n-          \"description\": \"The name of the dimension. This will be the same as the POJO field name.\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"description\": {\n-          \"title\": \"Dimension description\",\n-          \"description\": \"A long description of the dimension.\",\n-          \"type\": \"string\"\n-        },\n-        \"category\": {\n-          \"title\": \"Dimension group category\",\n-          \"description\": \"Category for grouping dimension\",\n-          \"type\": \"string\"\n-        },\n-        \"hidden\": {\n-          \"title\": \"Hide/Show dimension\",\n-          \"description\": \"Whether this dimension is exposed via API metadata\",\n-          \"type\": \"boolean\",\n-          \"default\": false\n-        },\n-        \"readAccess\": {\n-          \"title\": \"Dimension read access\",\n-          \"description\": \"Read permission for the dimension.\",\n-          \"type\": \"string\",\n-          \"default\": \"Prefab.Role.All\"\n-        },\n-        \"definition\": {\n-          \"title\": \"Dimension definition\",\n-          \"description\": \"The definition of the dimension\",\n-          \"type\": \"string\",\n-          \"default\": \"\"\n-        },\n-        \"cardinality\": {\n-          \"$ref\": \"#/definitions/cardinalityTypes\"\n+    \"definitions\": {\n+        \"join\": {\n+            \"title\": \"Join\",\n+            \"description\": \"Joins describe the SQL expression necessary to join two physical tables. Joins can be used when defining dimension columns that reference other tables.\",\n+            \"type\": \"object\",\n+            \"properties\": {\n+                \"name\": {\n+                    \"title\": \"Join name\",\n+                    \"description\": \"The name of the join relationship.\",\n+                    \"type\": \"string\"\n+                },\n+                \"to\": {\n+                    \"title\": \"Join table name\",\n+                    \"description\": \"The name of the table that is being joined to\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideName\"\n+                },\n+                \"type\": {\n+                    \"title\": \"Type of Join\",\n+                    \"description\": \"Type of the join - toOne or toMany\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideJoinType\"\n+                },\n+                \"definition\": {\n+                    \"title\": \"Join definition SQL\",\n+                    \"description\": \"Templated SQL expression that represents the ON clause of the join\",\n+                    \"type\": \"string\"\n+                }\n+            },\n+            \"required\": [\n+                \"name\",\n+                \"to\",\n+                \"type\",\n+                \"definition\"\n+            ],\n+            \"additionalProperties\": false\n         },\n-        \"tags\": {\n-          \"title\": \"Dimension tags\",\n-          \"description\": \"An array of string based tags for dimensions\",\n-          \"type\": \"array\",\n-          \"uniqueItems\": true,\n-          \"items\": {\n-            \"type\": \"string\"\n-          },\n-          \"default\": []\n-        }\n-\n-      }\n-    },\n-    \"dimension\": {\n-      \"title\": \"Dimension\",\n-      \"description\": \"Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n-      \"type\": \"object\",\n-      \"allOf\": [\n-        { \"$ref\": \"#/definitions/dimensionRef\" },\n-        {\n-          \"properties\": {\n-            \"type\": { \"$ref\": \"#/definitions/columnTypes\" },\n-            \"values\": {\n-              \"title\": \"Dimension values\",\n-              \"description\": \"An array of valid string values for this dimension\",\n-              \"type\": \"array\",\n-              \"uniqueItems\": true,\n-              \"items\": {\n-                \"type\": \"string\"\n-              },\n-              \"default\": []\n+        \"measure\": {\n+            \"title\": \"Measure\",\n+            \"description\": \"Metric definitions are extensible objects that contain a type field and one or more additional attributes. Each type is tied to logic in Elide that generates a metric function.\",\n+            \"type\": \"object\",\n+            \"properties\": {\n+                \"name\": {\n+                    \"title\": \"Metric name\",\n+                    \"description\": \"The name of the metric. This will be the same as the POJO field name.\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideFieldName\"\n+                },\n+                \"description\": {\n+                    \"title\": \"Metric description\",\n+                    \"description\": \"A long description of the metric.\",\n+                    \"type\": \"string\"\n+                },\n+                \"category\": {\n+                    \"title\": \"Measure group category\",\n+                    \"description\": \"Category for grouping\",\n+                    \"type\": \"string\"\n+                },\n+                \"hidden\": {\n+                    \"title\": \"Hide/Show measure\",\n+                    \"description\": \"Whether this metric is exposed via API metadata\",\n+                    \"type\": \"boolean\",\n+                    \"default\": false\n+                },\n+                \"readAccess\": {\n+                    \"title\": \"Measure read access\",\n+                    \"description\": \"Read permission for the metric.\",\n+                    \"type\": \"string\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789"}, "originalPosition": 300}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDcxNDk3MQ==", "bodyText": "Do we need a format for this as well?", "url": "https://github.com/yahoo/elide/pull/1662#discussion_r524714971", "createdAt": "2020-11-16T23:01:31Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/resources/elideTableSchema.json", "diffHunk": "@@ -1,454 +1,426 @@\n {\n-  \"$schema\": \"https://json-schema.org/draft-06/schema#\",\n-  \"$id\": \"https://elide.io/schemas/table_schema_v1#\",\n-  \"description\": \"Elide Table config json/hjson schema\",\n-  \"definitions\": {\n-    \"grain\": {\n-      \"title\": \"Grains\",\n-      \"description\": \"Grains can have SQL expressions that can substitute column with the dimension definition expression\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"type\": {\n-          \"title\": \"Time granularity\",\n-          \"description\": \"Indicates grain time granularity\",\n-          \"type\": \"string\",\n-          \"anyOf\": [\n-            { \"pattern\": \"^[Ss][Ee][Cc][Oo][Nn][Dd]$\" },\n-            { \"pattern\": \"^[Mm][Ii][Nn][Uu][Tt][Ee]$\" },\n-            { \"pattern\": \"^[Hh][Oo][Uu][Rr]$\" },\n-            { \"pattern\": \"^[Dd][Aa][Yy]$\" },\n-            { \"pattern\": \"^[Ii][Ss][Oo][Ww][Ee][Ee][Kk]$\" },\n-            { \"pattern\": \"^[Ww][Ee][Ee][Kk]$\" },\n-            { \"pattern\": \"^[Mm][Oo][Nn][Tt][Hh]$\" },\n-            { \"pattern\": \"^[Qq][Uu][Aa][Rr][Tt][Ee][Rr]$\" },\n-            { \"pattern\": \"^[Yy][Ee][Aa][Rr]$\" }\n-          ]\n-        },\n-        \"sql\": {\n-          \"title\": \"Grain SQL\",\n-          \"description\": \"Grain SQL query\",\n-          \"type\": \"string\"\n-        }\n-      },\n-      \"additionalProperties\": false\n-    },\n-    \"join\": {\n-      \"title\": \"Join\",\n-      \"description\": \"Joins describe the SQL expression necessary to join two physical tables. Joins can be used when defining dimension columns that reference other tables.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Join name\",\n-          \"description\": \"The name of the join relationship.\",\n-          \"type\": \"string\"\n-        },\n-        \"to\": {\n-          \"title\": \"Join table name\",\n-          \"description\": \"The name of the table that is being joined to\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"type\": {\n-          \"title\": \"Type of Join\",\n-          \"description\": \"Type of the join - toOne or toMany\",\n-          \"type\": \"string\",\n-          \"anyOf\": [\n-            { \"pattern\": \"^[Tt][Oo][Oo][Nn][Ee]$\" },\n-            { \"pattern\": \"^[Tt][Oo][Mm][Aa][Nn][Yy]$\" }\n-          ]\n-        },\n-        \"definition\": {\n-          \"title\": \"Join definition SQL\",\n-          \"description\": \"Templated SQL expression that represents the ON clause of the join\",\n-          \"type\": \"string\"\n-        }\n-      },\n-      \"required\": [\n-        \"name\",\n-        \"to\",\n-        \"type\",\n-        \"definition\"\n-      ],\n-      \"additionalProperties\": false\n-    },\n-    \"columnTypes\": {\n-      \"title\": \"Dimension field type\",\n-      \"description\": \"The data type of the dimension field\",\n-      \"type\": \"string\",\n-      \"anyOf\": [\n-        { \"pattern\": \"^[Ii][Nn][Tt][Ee][Gg][Ee][Rr]$\" },\n-        { \"pattern\": \"^[Dd][Ee][Cc][Ii][Mm][Aa][Ll]$\" },\n-        { \"pattern\": \"^[Mm][Oo][Nn][Ee][Yy]$\" },\n-        { \"pattern\": \"^[Tt][Ee][Xx][Tt]$\" },\n-        { \"pattern\": \"^[Cc][Oo][Oo][Rr][Dd][Ii][Nn][Aa][Tt][Ee]$\" },\n-        { \"pattern\": \"^[Bb][Oo][Oo][Ll][Ee][Aa][Nn]$\" }\n-      ]\n-    },\n-    \"cardinalityTypes\": {\n-      \"title\": \"Table/Dimension cardinality\",\n-      \"description\": \"Table/Dimension cardinality: (tiny, small, medium, large, huge). The relative sizes are decided by the table designer(s).\",\n-      \"type\": \"string\",\n-      \"anyOf\": [\n-        { \"pattern\": \"^[Tt][Ii][Nn][Yy]$\" },\n-        { \"pattern\": \"^[Ss][Mm][Aa][Ll][Ll]$\" },\n-        { \"pattern\": \"^[Mm][Ee][Dd][Ii][Uu][Mm]$\" },\n-        { \"pattern\": \"^[Ll][Aa][Rr][Gg][Ee]$\" },\n-        { \"pattern\": \"^[Hh][Uu][Gg][Ee]$\" }\n-      ]\n-    },\n-    \"measure\": {\n-      \"title\": \"Measure\",\n-      \"description\": \"Metric definitions are extensible objects that contain a type field and one or more additional attributes. Each type is tied to logic in Elide that generates a metric function.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Metric name\",\n-          \"description\": \"The name of the metric. This will be the same as the POJO field name.\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"description\": {\n-          \"title\": \"Metric description\",\n-          \"description\": \"A long description of the metric.\",\n-          \"type\": \"string\"\n-        },\n-        \"category\": {\n-          \"title\": \"Measure group category\",\n-          \"description\": \"Category for grouping\",\n-          \"type\": \"string\"\n-        },\n-        \"hidden\": {\n-          \"title\": \"Hide/Show measure\",\n-          \"description\": \"Whether this metric is exposed via API metadata\",\n-          \"type\": \"boolean\",\n-          \"default\": false\n-        },\n-        \"readAccess\": {\n-          \"title\": \"Measure read access\",\n-          \"description\": \"Read permission for the metric.\",\n-          \"type\": \"string\",\n-          \"default\": \"Prefab.Role.All\"\n-        },\n-        \"definition\": {\n-          \"title\": \"Metric definition\",\n-          \"description\": \"The definition of the metric\",\n-          \"type\": \"string\"\n-        },\n-        \"queryPlanResolver\": {\n-          \"title\": \"query plan resolver class\",\n-          \"description\": \"The JVM function class which maps a metric to a query plan\",\n-          \"pattern\": \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class\",\n-          \"type\": \"string\"\n-        },\n-        \"type\": { \"$ref\": \"#/definitions/columnTypes\" },\n-        \"tags\": {\n-          \"title\": \"Measure tags\",\n-          \"description\": \"An array of string based tags for measures\",\n-          \"type\": \"array\",\n-          \"uniqueItems\": true,\n-          \"items\": {\n-            \"type\": \"string\"\n-          },\n-          \"default\": []\n-        }\n-      },\n-      \"required\": [\n-        \"name\",\n-        \"definition\"\n-      ],\n-      \"additionalProperties\": false\n-    },\n-    \"dimensionRef\": {\n-      \"title\": \"Dimension\",\n-      \"description\": \"Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Dimension name\",\n-          \"description\": \"The name of the dimension. This will be the same as the POJO field name.\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"description\": {\n-          \"title\": \"Dimension description\",\n-          \"description\": \"A long description of the dimension.\",\n-          \"type\": \"string\"\n-        },\n-        \"category\": {\n-          \"title\": \"Dimension group category\",\n-          \"description\": \"Category for grouping dimension\",\n-          \"type\": \"string\"\n-        },\n-        \"hidden\": {\n-          \"title\": \"Hide/Show dimension\",\n-          \"description\": \"Whether this dimension is exposed via API metadata\",\n-          \"type\": \"boolean\",\n-          \"default\": false\n-        },\n-        \"readAccess\": {\n-          \"title\": \"Dimension read access\",\n-          \"description\": \"Read permission for the dimension.\",\n-          \"type\": \"string\",\n-          \"default\": \"Prefab.Role.All\"\n-        },\n-        \"definition\": {\n-          \"title\": \"Dimension definition\",\n-          \"description\": \"The definition of the dimension\",\n-          \"type\": \"string\",\n-          \"default\": \"\"\n-        },\n-        \"cardinality\": {\n-          \"$ref\": \"#/definitions/cardinalityTypes\"\n+    \"definitions\": {\n+        \"join\": {\n+            \"title\": \"Join\",\n+            \"description\": \"Joins describe the SQL expression necessary to join two physical tables. Joins can be used when defining dimension columns that reference other tables.\",\n+            \"type\": \"object\",\n+            \"properties\": {\n+                \"name\": {\n+                    \"title\": \"Join name\",\n+                    \"description\": \"The name of the join relationship.\",\n+                    \"type\": \"string\"\n+                },\n+                \"to\": {\n+                    \"title\": \"Join table name\",\n+                    \"description\": \"The name of the table that is being joined to\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideName\"\n+                },\n+                \"type\": {\n+                    \"title\": \"Type of Join\",\n+                    \"description\": \"Type of the join - toOne or toMany\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideJoinType\"\n+                },\n+                \"definition\": {\n+                    \"title\": \"Join definition SQL\",\n+                    \"description\": \"Templated SQL expression that represents the ON clause of the join\",\n+                    \"type\": \"string\"\n+                }\n+            },\n+            \"required\": [\n+                \"name\",\n+                \"to\",\n+                \"type\",\n+                \"definition\"\n+            ],\n+            \"additionalProperties\": false\n         },\n-        \"tags\": {\n-          \"title\": \"Dimension tags\",\n-          \"description\": \"An array of string based tags for dimensions\",\n-          \"type\": \"array\",\n-          \"uniqueItems\": true,\n-          \"items\": {\n-            \"type\": \"string\"\n-          },\n-          \"default\": []\n-        }\n-\n-      }\n-    },\n-    \"dimension\": {\n-      \"title\": \"Dimension\",\n-      \"description\": \"Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n-      \"type\": \"object\",\n-      \"allOf\": [\n-        { \"$ref\": \"#/definitions/dimensionRef\" },\n-        {\n-          \"properties\": {\n-            \"type\": { \"$ref\": \"#/definitions/columnTypes\" },\n-            \"values\": {\n-              \"title\": \"Dimension values\",\n-              \"description\": \"An array of valid string values for this dimension\",\n-              \"type\": \"array\",\n-              \"uniqueItems\": true,\n-              \"items\": {\n-                \"type\": \"string\"\n-              },\n-              \"default\": []\n+        \"measure\": {\n+            \"title\": \"Measure\",\n+            \"description\": \"Metric definitions are extensible objects that contain a type field and one or more additional attributes. Each type is tied to logic in Elide that generates a metric function.\",\n+            \"type\": \"object\",\n+            \"properties\": {\n+                \"name\": {\n+                    \"title\": \"Metric name\",\n+                    \"description\": \"The name of the metric. This will be the same as the POJO field name.\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideFieldName\"\n+                },\n+                \"description\": {\n+                    \"title\": \"Metric description\",\n+                    \"description\": \"A long description of the metric.\",\n+                    \"type\": \"string\"\n+                },\n+                \"category\": {\n+                    \"title\": \"Measure group category\",\n+                    \"description\": \"Category for grouping\",\n+                    \"type\": \"string\"\n+                },\n+                \"hidden\": {\n+                    \"title\": \"Hide/Show measure\",\n+                    \"description\": \"Whether this metric is exposed via API metadata\",\n+                    \"type\": \"boolean\",\n+                    \"default\": false\n+                },\n+                \"readAccess\": {\n+                    \"title\": \"Measure read access\",\n+                    \"description\": \"Read permission for the metric.\",\n+                    \"type\": \"string\",\n+                    \"default\": \"Prefab.Role.All\"\n+                },\n+                \"definition\": {\n+                    \"title\": \"Metric definition\",\n+                    \"description\": \"The definition of the metric\",\n+                    \"type\": \"string\"\n+                },\n+                \"queryPlanResolver\": {\n+                    \"title\": \"query plan resolver class\",\n+                    \"description\": \"The JVM function class which maps a metric to a query plan\",\n+                    \"pattern\": \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789"}, "originalPosition": 311}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDcxODE3NA==", "bodyText": "Should we make a format for this?", "url": "https://github.com/yahoo/elide/pull/1662#discussion_r524718174", "createdAt": "2020-11-16T23:04:38Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/resources/elideTableSchema.json", "diffHunk": "@@ -1,454 +1,426 @@\n {\n-  \"$schema\": \"https://json-schema.org/draft-06/schema#\",\n-  \"$id\": \"https://elide.io/schemas/table_schema_v1#\",\n-  \"description\": \"Elide Table config json/hjson schema\",\n-  \"definitions\": {\n-    \"grain\": {\n-      \"title\": \"Grains\",\n-      \"description\": \"Grains can have SQL expressions that can substitute column with the dimension definition expression\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"type\": {\n-          \"title\": \"Time granularity\",\n-          \"description\": \"Indicates grain time granularity\",\n-          \"type\": \"string\",\n-          \"anyOf\": [\n-            { \"pattern\": \"^[Ss][Ee][Cc][Oo][Nn][Dd]$\" },\n-            { \"pattern\": \"^[Mm][Ii][Nn][Uu][Tt][Ee]$\" },\n-            { \"pattern\": \"^[Hh][Oo][Uu][Rr]$\" },\n-            { \"pattern\": \"^[Dd][Aa][Yy]$\" },\n-            { \"pattern\": \"^[Ii][Ss][Oo][Ww][Ee][Ee][Kk]$\" },\n-            { \"pattern\": \"^[Ww][Ee][Ee][Kk]$\" },\n-            { \"pattern\": \"^[Mm][Oo][Nn][Tt][Hh]$\" },\n-            { \"pattern\": \"^[Qq][Uu][Aa][Rr][Tt][Ee][Rr]$\" },\n-            { \"pattern\": \"^[Yy][Ee][Aa][Rr]$\" }\n-          ]\n-        },\n-        \"sql\": {\n-          \"title\": \"Grain SQL\",\n-          \"description\": \"Grain SQL query\",\n-          \"type\": \"string\"\n-        }\n-      },\n-      \"additionalProperties\": false\n-    },\n-    \"join\": {\n-      \"title\": \"Join\",\n-      \"description\": \"Joins describe the SQL expression necessary to join two physical tables. Joins can be used when defining dimension columns that reference other tables.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Join name\",\n-          \"description\": \"The name of the join relationship.\",\n-          \"type\": \"string\"\n-        },\n-        \"to\": {\n-          \"title\": \"Join table name\",\n-          \"description\": \"The name of the table that is being joined to\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"type\": {\n-          \"title\": \"Type of Join\",\n-          \"description\": \"Type of the join - toOne or toMany\",\n-          \"type\": \"string\",\n-          \"anyOf\": [\n-            { \"pattern\": \"^[Tt][Oo][Oo][Nn][Ee]$\" },\n-            { \"pattern\": \"^[Tt][Oo][Mm][Aa][Nn][Yy]$\" }\n-          ]\n-        },\n-        \"definition\": {\n-          \"title\": \"Join definition SQL\",\n-          \"description\": \"Templated SQL expression that represents the ON clause of the join\",\n-          \"type\": \"string\"\n-        }\n-      },\n-      \"required\": [\n-        \"name\",\n-        \"to\",\n-        \"type\",\n-        \"definition\"\n-      ],\n-      \"additionalProperties\": false\n-    },\n-    \"columnTypes\": {\n-      \"title\": \"Dimension field type\",\n-      \"description\": \"The data type of the dimension field\",\n-      \"type\": \"string\",\n-      \"anyOf\": [\n-        { \"pattern\": \"^[Ii][Nn][Tt][Ee][Gg][Ee][Rr]$\" },\n-        { \"pattern\": \"^[Dd][Ee][Cc][Ii][Mm][Aa][Ll]$\" },\n-        { \"pattern\": \"^[Mm][Oo][Nn][Ee][Yy]$\" },\n-        { \"pattern\": \"^[Tt][Ee][Xx][Tt]$\" },\n-        { \"pattern\": \"^[Cc][Oo][Oo][Rr][Dd][Ii][Nn][Aa][Tt][Ee]$\" },\n-        { \"pattern\": \"^[Bb][Oo][Oo][Ll][Ee][Aa][Nn]$\" }\n-      ]\n-    },\n-    \"cardinalityTypes\": {\n-      \"title\": \"Table/Dimension cardinality\",\n-      \"description\": \"Table/Dimension cardinality: (tiny, small, medium, large, huge). The relative sizes are decided by the table designer(s).\",\n-      \"type\": \"string\",\n-      \"anyOf\": [\n-        { \"pattern\": \"^[Tt][Ii][Nn][Yy]$\" },\n-        { \"pattern\": \"^[Ss][Mm][Aa][Ll][Ll]$\" },\n-        { \"pattern\": \"^[Mm][Ee][Dd][Ii][Uu][Mm]$\" },\n-        { \"pattern\": \"^[Ll][Aa][Rr][Gg][Ee]$\" },\n-        { \"pattern\": \"^[Hh][Uu][Gg][Ee]$\" }\n-      ]\n-    },\n-    \"measure\": {\n-      \"title\": \"Measure\",\n-      \"description\": \"Metric definitions are extensible objects that contain a type field and one or more additional attributes. Each type is tied to logic in Elide that generates a metric function.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Metric name\",\n-          \"description\": \"The name of the metric. This will be the same as the POJO field name.\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"description\": {\n-          \"title\": \"Metric description\",\n-          \"description\": \"A long description of the metric.\",\n-          \"type\": \"string\"\n-        },\n-        \"category\": {\n-          \"title\": \"Measure group category\",\n-          \"description\": \"Category for grouping\",\n-          \"type\": \"string\"\n-        },\n-        \"hidden\": {\n-          \"title\": \"Hide/Show measure\",\n-          \"description\": \"Whether this metric is exposed via API metadata\",\n-          \"type\": \"boolean\",\n-          \"default\": false\n-        },\n-        \"readAccess\": {\n-          \"title\": \"Measure read access\",\n-          \"description\": \"Read permission for the metric.\",\n-          \"type\": \"string\",\n-          \"default\": \"Prefab.Role.All\"\n-        },\n-        \"definition\": {\n-          \"title\": \"Metric definition\",\n-          \"description\": \"The definition of the metric\",\n-          \"type\": \"string\"\n-        },\n-        \"queryPlanResolver\": {\n-          \"title\": \"query plan resolver class\",\n-          \"description\": \"The JVM function class which maps a metric to a query plan\",\n-          \"pattern\": \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class\",\n-          \"type\": \"string\"\n-        },\n-        \"type\": { \"$ref\": \"#/definitions/columnTypes\" },\n-        \"tags\": {\n-          \"title\": \"Measure tags\",\n-          \"description\": \"An array of string based tags for measures\",\n-          \"type\": \"array\",\n-          \"uniqueItems\": true,\n-          \"items\": {\n-            \"type\": \"string\"\n-          },\n-          \"default\": []\n-        }\n-      },\n-      \"required\": [\n-        \"name\",\n-        \"definition\"\n-      ],\n-      \"additionalProperties\": false\n-    },\n-    \"dimensionRef\": {\n-      \"title\": \"Dimension\",\n-      \"description\": \"Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n-      \"type\": \"object\",\n-      \"properties\": {\n-        \"name\": {\n-          \"title\": \"Dimension name\",\n-          \"description\": \"The name of the dimension. This will be the same as the POJO field name.\",\n-          \"type\": \"string\",\n-          \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\"\n-        },\n-        \"description\": {\n-          \"title\": \"Dimension description\",\n-          \"description\": \"A long description of the dimension.\",\n-          \"type\": \"string\"\n-        },\n-        \"category\": {\n-          \"title\": \"Dimension group category\",\n-          \"description\": \"Category for grouping dimension\",\n-          \"type\": \"string\"\n-        },\n-        \"hidden\": {\n-          \"title\": \"Hide/Show dimension\",\n-          \"description\": \"Whether this dimension is exposed via API metadata\",\n-          \"type\": \"boolean\",\n-          \"default\": false\n-        },\n-        \"readAccess\": {\n-          \"title\": \"Dimension read access\",\n-          \"description\": \"Read permission for the dimension.\",\n-          \"type\": \"string\",\n-          \"default\": \"Prefab.Role.All\"\n-        },\n-        \"definition\": {\n-          \"title\": \"Dimension definition\",\n-          \"description\": \"The definition of the dimension\",\n-          \"type\": \"string\",\n-          \"default\": \"\"\n-        },\n-        \"cardinality\": {\n-          \"$ref\": \"#/definitions/cardinalityTypes\"\n+    \"definitions\": {\n+        \"join\": {\n+            \"title\": \"Join\",\n+            \"description\": \"Joins describe the SQL expression necessary to join two physical tables. Joins can be used when defining dimension columns that reference other tables.\",\n+            \"type\": \"object\",\n+            \"properties\": {\n+                \"name\": {\n+                    \"title\": \"Join name\",\n+                    \"description\": \"The name of the join relationship.\",\n+                    \"type\": \"string\"\n+                },\n+                \"to\": {\n+                    \"title\": \"Join table name\",\n+                    \"description\": \"The name of the table that is being joined to\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideName\"\n+                },\n+                \"type\": {\n+                    \"title\": \"Type of Join\",\n+                    \"description\": \"Type of the join - toOne or toMany\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideJoinType\"\n+                },\n+                \"definition\": {\n+                    \"title\": \"Join definition SQL\",\n+                    \"description\": \"Templated SQL expression that represents the ON clause of the join\",\n+                    \"type\": \"string\"\n+                }\n+            },\n+            \"required\": [\n+                \"name\",\n+                \"to\",\n+                \"type\",\n+                \"definition\"\n+            ],\n+            \"additionalProperties\": false\n         },\n-        \"tags\": {\n-          \"title\": \"Dimension tags\",\n-          \"description\": \"An array of string based tags for dimensions\",\n-          \"type\": \"array\",\n-          \"uniqueItems\": true,\n-          \"items\": {\n-            \"type\": \"string\"\n-          },\n-          \"default\": []\n-        }\n-\n-      }\n-    },\n-    \"dimension\": {\n-      \"title\": \"Dimension\",\n-      \"description\": \"Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n-      \"type\": \"object\",\n-      \"allOf\": [\n-        { \"$ref\": \"#/definitions/dimensionRef\" },\n-        {\n-          \"properties\": {\n-            \"type\": { \"$ref\": \"#/definitions/columnTypes\" },\n-            \"values\": {\n-              \"title\": \"Dimension values\",\n-              \"description\": \"An array of valid string values for this dimension\",\n-              \"type\": \"array\",\n-              \"uniqueItems\": true,\n-              \"items\": {\n-                \"type\": \"string\"\n-              },\n-              \"default\": []\n+        \"measure\": {\n+            \"title\": \"Measure\",\n+            \"description\": \"Metric definitions are extensible objects that contain a type field and one or more additional attributes. Each type is tied to logic in Elide that generates a metric function.\",\n+            \"type\": \"object\",\n+            \"properties\": {\n+                \"name\": {\n+                    \"title\": \"Metric name\",\n+                    \"description\": \"The name of the metric. This will be the same as the POJO field name.\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideFieldName\"\n+                },\n+                \"description\": {\n+                    \"title\": \"Metric description\",\n+                    \"description\": \"A long description of the metric.\",\n+                    \"type\": \"string\"\n+                },\n+                \"category\": {\n+                    \"title\": \"Measure group category\",\n+                    \"description\": \"Category for grouping\",\n+                    \"type\": \"string\"\n+                },\n+                \"hidden\": {\n+                    \"title\": \"Hide/Show measure\",\n+                    \"description\": \"Whether this metric is exposed via API metadata\",\n+                    \"type\": \"boolean\",\n+                    \"default\": false\n+                },\n+                \"readAccess\": {\n+                    \"title\": \"Measure read access\",\n+                    \"description\": \"Read permission for the metric.\",\n+                    \"type\": \"string\",\n+                    \"default\": \"Prefab.Role.All\"\n+                },\n+                \"definition\": {\n+                    \"title\": \"Metric definition\",\n+                    \"description\": \"The definition of the metric\",\n+                    \"type\": \"string\"\n+                },\n+                \"queryPlanResolver\": {\n+                    \"title\": \"query plan resolver class\",\n+                    \"description\": \"The JVM function class which maps a metric to a query plan\",\n+                    \"pattern\": \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class\",\n+                    \"type\": \"string\"\n+                },\n+                \"type\": {\n+                    \"title\": \"Measure field type\",\n+                    \"description\": \"The data type of the measure field\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideFieldType\"\n+                },\n+                \"tags\": {\n+                    \"title\": \"Measure tags\",\n+                    \"description\": \"An array of string based tags for measures\",\n+                    \"type\": \"array\",\n+                    \"uniqueItems\": true,\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    }\n+                }\n             },\n-            \"tableSource\": {\n-              \"title\": \"Table stores dimension values\",\n-              \"description\": \"Table and column name where to find the values : tableName.columnName\",\n-              \"type\": \"string\"\n+            \"required\": [\n+                \"name\",\n+                \"type\",\n+                \"definition\"\n+            ],\n+            \"additionalProperties\": false\n+        },\n+        \"dimensionRef\": {\n+            \"title\": \"Dimension\",\n+            \"description\": \"Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n+            \"type\": \"object\",\n+            \"properties\": {\n+                \"name\": {\n+                    \"title\": \"Dimension name\",\n+                    \"description\": \"The name of the dimension. This will be the same as the POJO field name.\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideFieldName\"\n+                },\n+                \"description\": {\n+                    \"title\": \"Dimension description\",\n+                    \"description\": \"A long description of the dimension.\",\n+                    \"type\": \"string\"\n+                },\n+                \"category\": {\n+                    \"title\": \"Dimension group category\",\n+                    \"description\": \"Category for grouping dimension\",\n+                    \"type\": \"string\"\n+                },\n+                \"hidden\": {\n+                    \"title\": \"Hide/Show dimension\",\n+                    \"description\": \"Whether this dimension is exposed via API metadata\",\n+                    \"type\": \"boolean\",\n+                    \"default\": false\n+                },\n+                \"readAccess\": {\n+                    \"title\": \"Dimension read access\",\n+                    \"description\": \"Read permission for the dimension.\",\n+                    \"type\": \"string\",\n+                    \"default\": \"Prefab.Role.All\"\n+                },\n+                \"definition\": {\n+                    \"title\": \"Dimension definition\",\n+                    \"description\": \"The definition of the dimension\",\n+                    \"type\": \"string\"\n+                },\n+                \"cardinality\": {\n+                    \"title\": \"Dimension cardinality\",\n+                    \"description\": \"Dimension cardinality: (tiny, small, medium, large, huge). The relative sizes are decided by the table designer(s).\",\n+                    \"type\": \"string\",\n+                    \"format\": \"elideCardiality\"\n+                },\n+                \"tags\": {\n+                    \"title\": \"Dimension tags\",\n+                    \"description\": \"An array of string based tags for dimensions\",\n+                    \"type\": \"array\",\n+                    \"uniqueItems\": true,\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    }\n+                }\n             }\n-          }\n-        }\n-      ],\n-      \"required\": [\n-        \"name\",\n-        \"type\",\n-        \"definition\"\n-      ],\n-      \"oneOf\" : [\n-        {\n-          \"required\" : [\"values\"]\n         },\n-        {\n-          \"required\" : [\"tableSource\"]\n+        \"dimension\": {\n+            \"title\": \"Dimension\",\n+            \"description\": \"Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n+            \"type\": \"object\",\n+            \"allOf\": [\n+                {\n+                    \"$ref\": \"#/definitions/dimensionRef\"\n+                },\n+                {\n+                    \"properties\": {\n+                        \"type\": {\n+                            \"title\": \"Dimension field type\",\n+                            \"description\": \"The data type of the dimension field\",\n+                            \"type\": \"string\",\n+                            \"format\": \"elideFieldType\"\n+                        },\n+                        \"values\": {\n+                            \"title\": \"Dimension values\",\n+                            \"description\": \"An array of valid string values for this dimension\",\n+                            \"type\": \"array\",\n+                            \"uniqueItems\": true,\n+                            \"items\": {\n+                                \"type\": \"string\"\n+                            }\n+                        },\n+                        \"tableSource\": {\n+                            \"title\": \"Table stores dimension values\",\n+                            \"description\": \"Table and column name where to find the values : tableName.columnName\",\n+                            \"type\": \"string\"\n+                        }\n+                    },\n+                    \"dependencies\": {\n+                        \"values\": {\n+                            \"not\": {\n+                                \"required\": [\n+                                    \"tableSource\"\n+                                ]\n+                            }\n+                        },\n+                        \"tableSource\": {\n+                            \"not\": {\n+                                \"required\": [\n+                                    \"values\"\n+                                ]\n+                            }\n+                        }\n+                    }\n+                }\n+            ],\n+            \"required\": [\n+                \"name\",\n+                \"type\",\n+                \"definition\"\n+            ]\n         },\n-        {\n-          \"not\" : {\n-            \"anyOf\" : [\n-              { \"required\" : [\"values\"] },\n-              { \"required\" : [\"tableSource\"] }\n+        \"timeDimension\": {\n+            \"title\": \"Time Dimension\",\n+            \"description\": \"Time Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n+            \"type\": \"object\",\n+            \"allOf\": [\n+                {\n+                    \"$ref\": \"#/definitions/dimensionRef\"\n+                },\n+                {\n+                    \"properties\": {\n+                        \"type\": {\n+                            \"title\": \"Dimension field type\",\n+                            \"description\": \"The data type of the dimension field\",\n+                            \"type\": \"string\",\n+                            \"format\": \"elideTimeFieldType\"\n+                        },\n+                        \"grain\": {\n+                            \"title\": \"Grains\",\n+                            \"description\": \"Grains can have SQL expressions that can substitute column with the dimension definition expression\",\n+                            \"type\": \"object\",\n+                            \"properties\": {\n+                                \"type\": {\n+                                    \"title\": \"Time granularity\",\n+                                    \"description\": \"Indicates grain time granularity\",\n+                                    \"type\": \"string\",\n+                                    \"format\": \"elideGrainType\"\n+                                },\n+                                \"sql\": {\n+                                    \"title\": \"Grain SQL\",\n+                                    \"description\": \"Grain SQL query\",\n+                                    \"type\": \"string\"\n+                                }\n+                            },\n+                            \"additionalProperties\": false\n+                        }\n+                    }\n+                }\n+            ],\n+            \"required\": [\n+                \"name\",\n+                \"type\",\n+                \"definition\"\n             ]\n-          }\n         }\n-      ]\n     },\n-    \"timeDimension\": {\n-      \"title\": \"Time Dimension\",\n-      \"description\": \"Time Dimensions represent labels for measures. Dimensions are used to filter and group measures.\",\n-      \"type\": \"object\",\n-      \"allOf\": [\n-        { \"$ref\": \"#/definitions/dimensionRef\" },\n-        {\n-          \"properties\": {\n-            \"type\": {\n-              \"title\": \"Dimension field type\",\n-              \"description\": \"The data type of the dimension field\",\n-              \"type\": \"string\",\n-              \"pattern\": \"^[Tt][Ii][Mm][Ee]$\"\n-            },\n-            \"grain\": {\n-              \"$ref\":\"#/definitions/grain\"\n-            }\n-          }\n-        }\n-      ],\n-      \"required\": [\n-        \"name\",\n-        \"type\",\n-        \"definition\"\n-      ]\n-    }\n-  },\n-  \"type\": \"object\",\n-  \"properties\": {\n-    \"tables\": {\n-      \"title\": \"Elide Table Models\",\n-      \"description\": \"Array of elide Table Models\",\n-      \"type\": \"array\",\n-      \"uniqueItems\": true,\n-      \"items\": {\n-        \"title\": \"Elide Table Models\",\n-        \"description\": \"Array of elide Table Models\",\n-        \"type\": \"object\",\n-        \"properties\": {\n-          \"name\": {\n-            \"title\": \"Table Model Name\",\n-            \"description\": \"The name of the model. This will be the same as the POJO class name.\",\n-            \"type\": \"string\",\n-            \"pattern\": \"^[A-Za-z][0-9A-Za-z]*$\"\n-          },\n-          \"schema\": {\n-            \"title\": \"Table Schema\",\n-            \"description\": \"The database or schema where the model lives.\",\n-            \"type\": \"string\",\n-            \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\",\n-            \"default\": \"\"\n-          },\n-          \"dbConnectionName\": {\n-            \"title\": \"DB Connection Name\",\n-            \"description\": \"The database connection name for this model.\",\n-            \"type\": \"string\",\n-            \"pattern\": \"^[A-Za-z][0-9A-Za-z_]*$\",\n-            \"default\": \"\"\n-          },\n-          \"filterTemplate\": {\n-            \"title\": \"Required RSQL Filter Template\",\n-            \"description\": \"Client queries must include a filter conforming to this RSQL template.\",\n-            \"type\": \"string\",\n-            \"pattern\": \"^[A-Za-z][0-9A-Za-z_]*(==|!=|>=|>|<|<=|=[a-z]+=)(.*)\",\n-            \"default\": \"\"\n-          },\n-          \"isFact\": {\n-            \"title\": \"Is Fact Table\",\n-            \"description\": \"Whether this table is a fact\",\n-            \"type\": \"boolean\",\n-            \"default\": true\n-          },\n-          \"hidden\": {\n-            \"title\": \"Hide/Show Table\",\n-            \"description\": \"Whether this table is exposed via API metadata\",\n-            \"type\": \"boolean\",\n-            \"default\": false\n-          },\n-          \"description\": {\n-            \"title\": \"Table Model description\",\n-            \"description\": \"A long description of the model.\",\n-            \"type\": \"string\"\n-          },\n-          \"cardinality\": {\n-            \"$ref\": \"#/definitions/cardinalityTypes\"\n-          },\n-          \"readAccess\": {\n-            \"title\": \"Table read access\",\n-            \"description\": \"Read permission for the table.\",\n-            \"type\": \"string\",\n-            \"default\": \"Prefab.Role.All\"\n-          },\n-          \"joins\": {\n-            \"title\": \"Table joins\",\n-            \"description\": \"Describes SQL joins to other tables for column references.\",\n-            \"type\": \"array\",\n-            \"items\": {\n-              \"$ref\": \"#/definitions/join\"\n-            },\n-            \"default\": []\n-          },\n-          \"measures\": {\n-            \"title\": \"Table measures\",\n-            \"description\": \"Zero or more metric definitions.\",\n-            \"type\": \"array\",\n-            \"items\": {\n-              \"$ref\": \"#/definitions/measure\"\n-            },\n-            \"default\": []\n-          },\n-          \"dimensions\": {\n-            \"title\": \"Table dimensions\",\n-            \"description\": \"One or more dimension definitions.\",\n-            \"type\": \"array\",\n-            \"items\": {\n-              \"anyOf\": [\n-                {\"$ref\": \"#/definitions/dimension\"} ,\n-                {\"$ref\": \"#/definitions/timeDimension\"}\n-              ]\n-            },\n-            \"default\": []\n-          },\n-          \"tags\": {\n-            \"title\": \"Table tags\",\n-            \"description\": \"An array of string based tags\",\n+    \"type\": \"object\",\n+    \"title\": \"Elide Table Root Schema\",\n+    \"description\": \"Elide Table config json/hjson schema\",\n+    \"properties\": {\n+        \"tables\": {\n             \"type\": \"array\",\n+            \"title\": \"Elide Model Collection\",\n+            \"description\": \"An array of Elide table configs.\",\n             \"uniqueItems\": true,\n+            \"minItems\": 1,\n             \"items\": {\n-              \"type\": \"string\"\n-            },\n-            \"default\": []\n-          }\n-        },\n-        \"oneOf\": [\n-          {\n-            \"properties\": {\n-              \"sql\": {\n-                \"title\": \"Table SQL\",\n-                \"description\": \"SQL query which is used to populate the table.\",\n-                \"type\": \"string\",\n-                \"default\": \"\"\n-              }\n-            },\n-            \"required\": [\n-              \"name\",\n-              \"sql\",\n-              \"dimensions\"\n-            ]\n-          } ,\n-          {\n-            \"properties\": {\n-              \"table\": {\n-                \"title\": \"Table name\",\n-                \"description\": \"The physical table name where the model lives.\",\n-                \"type\": \"string\",\n-                \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\",\n-                \"default\": \"\"\n-              }\n-            },\n-            \"required\": [\n-              \"name\",\n-              \"table\",\n-              \"dimensions\"\n-            ]\n-          },\n-          {\n-            \"properties\": {\n-              \"extend\": {\n-                \"title\": \"Table Extends\",\n-                \"description\": \"Extends another logical table.\",\n-                \"type\": \"string\",\n-                \"pattern\": \"^[A-Za-z]([0-9A-Za-z]*_?[0-9A-Za-z]*)*$\",\n-                \"default\": \"\"\n-              }\n-            },\n-            \"required\": [\n-              \"name\",\n-              \"extend\"\n-            ]\n-          }\n-        ]\n-      }\n-    }\n-  },\n-  \"minProperties\": 1,\n-  \"required\": [\n-    \"tables\"\n-  ],\n-  \"additionalProperties\": false\n+                \"type\": \"object\",\n+                \"title\": \"Elide Model\",\n+                \"description\": \"Elide Table Config\",\n+                \"properties\": {\n+                    \"name\": {\n+                        \"title\": \"Table Model Name\",\n+                        \"description\": \"The name of the model. This will be the same as the POJO class name.\",\n+                        \"type\": \"string\",\n+                        \"format\": \"elideName\"\n+                    },\n+                    \"filterTemplate\": {\n+                        \"title\": \"Required RSQL Filter Template\",\n+                        \"description\": \"Client queries must include a filter conforming to this RSQL template.\",\n+                        \"type\": \"string\",\n+                        \"pattern\": \"^[A-Za-z][0-9A-Za-z_]*(==|!=|>=|>|<|<=|=[a-z]+=)(.*)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789"}, "originalPosition": 727}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDcyNjYzMg==", "bodyText": "Any reason not to build this once in the constructor of the DynamicConfigSchemaValidator?", "url": "https://github.com/yahoo/elide/pull/1662#discussion_r524726632", "createdAt": "2020-11-16T23:12:34Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigSchemaValidator.java", "diffHunk": "@@ -122,11 +123,36 @@ private static void addEmbeddedMessages(JsonNode root, List<String> list, int de\n         }\n     }\n \n+    private static String extractPointer(JsonNode root, String fieldName) {\n+        String pointer = null;\n+        if (root.has(fieldName)) {\n+            JsonNode node = root.get(fieldName);\n+            if (node.has(\"pointer\")) {\n+                pointer = node.get(\"pointer\").asText();\n+            }\n+        }\n+\n+        return pointer;\n+    }\n+\n     private JsonSchema loadSchema(String resource) {\n-        ObjectMapper objectMapper = new ObjectMapper();\n-        Reader reader = new InputStreamReader(DynamicConfigHelpers.class.getResourceAsStream(resource));\n+\n+        Library library = DraftV4LibraryWithElideFormatAttr.getInstance();\n+\n+        MessageBundle bundle = MessageBundleWithElideMessages.getInstance();\n+\n+        ValidationConfiguration cfg = ValidationConfiguration.newBuilder()\n+                        .setDefaultLibrary(\"http://my.site/myschema#\", library)\n+                        .setValidationMessages(bundle)\n+                        .freeze();\n+\n+        JsonSchemaFactory factory = JsonSchemaFactory.newBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a97b49ee862de53288184e76db6b6be704d2789"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32320789e53827486c6f89b10569af877483e6b1", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/32320789e53827486c6f89b10569af877483e6b1", "committedDate": "2020-11-16T23:38:53Z", "message": "Review Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTA4ODU5", "url": "https://github.com/yahoo/elide/pull/1662#pullrequestreview-532508859", "createdAt": "2020-11-17T15:46:06Z", "commit": {"oid": "32320789e53827486c6f89b10569af877483e6b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 775, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}