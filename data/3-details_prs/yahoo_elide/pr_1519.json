{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NTU1ODQ5", "number": 1519, "title": "Introduce case insensitive equality rsql operator. Default is case sensitive", "bodyText": "Description\nRSQL default operations are made case sensitive. Case Insensitive Equality operators are added.\n== and =in= are now Case Sensitive\n=ini= is the case insensitive equivalent.\nUsage :\n=ini='val' -> IN_INSENSITIVE\n=ini='*val' -> PREFIX_CASE_INSENSITIVE\n=ini='*val*' -> INFIX_CASE_INSENSITIVE\n=ini='val*' -> POSTFIX_CASE_INSENSITIVE\n=in='val' or =='val' -> IN\n=in='*val' or =='*val' -> PREFIX\n=in='*val*' or =='*val*' -> INFIX\n=in='val*' or =='val*' -> POSTFIX\nMotivation and Context\nHaving a default case insensitive filter bypasses the datastore index (if exist) thereby making queries slow. User needs to select whether they want CI or CS filter.\nHow Has This Been Tested?\nIntegration test and Unit Test\nLicense\nI confirm that this contribution is made under an Apache 2.0 license and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-08-31T21:40:33Z", "url": "https://github.com/yahoo/elide/pull/1519", "merged": true, "mergeCommit": {"oid": "d80e1818bab0462a342b17bc0d5eade000566794"}, "closed": true, "closedAt": "2020-09-01T21:40:22Z", "author": {"login": "Chandrasekar-Rajasekar"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEZugCgH2gAyNDc2NTU1ODQ5OjcwOWE1YjI3ZTA5ZDI4ZTUyZTAzZDM5MjQ0NGRhZjQyMzkyN2JmNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEubNSgFqTQ4MDEzNTk3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "709a5b27e09d28e52e03d392444daf423927bf4f", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/709a5b27e09d28e52e03d392444daf423927bf4f", "committedDate": "2020-08-31T21:31:21Z", "message": "introduce case insensitive equality rsql operator. Default is case sensitive"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTkwNTg4", "url": "https://github.com/yahoo/elide/pull/1519#pullrequestreview-479990588", "createdAt": "2020-09-01T18:01:38Z", "commit": {"oid": "709a5b27e09d28e52e03d392444daf423927bf4f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODowMTozOFrOHLCKyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODoxMTowOFrOHLCevg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzMTkxNQ==", "bodyText": "Looks good, but we should add all the insensitive operators here as well (PREFIXI, INFIXI, etc)", "url": "https://github.com/yahoo/elide/pull/1519#discussion_r481331915", "createdAt": "2020-09-01T18:01:38Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/filter/dialect/RSQLFilterDialect.java", "diffHunk": "@@ -59,6 +60,8 @@\n     private static final String SINGLE_PARAMETER_ONLY = \"There can only be a single filter query parameter\";\n     private static final String INVALID_QUERY_PARAMETER = \"Invalid query parameter: \";\n     private static final Pattern TYPED_FILTER_PATTERN = Pattern.compile(\"filter\\\\[([^\\\\]]+)\\\\]\");\n+    private static final ComparisonOperator INI = new ComparisonOperator(\"=ini=\", true);\n+    private static final ComparisonOperator NOT_INI = new ComparisonOperator(\"=outi=\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709a5b27e09d28e52e03d392444daf423927bf4f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzMjM4OA==", "bodyText": "Let's make these else if statements.", "url": "https://github.com/yahoo/elide/pull/1519#discussion_r481332388", "createdAt": "2020-09-01T18:02:32Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/filter/dialect/RSQLFilterDialect.java", "diffHunk": "@@ -343,10 +348,16 @@ public FilterExpression visit(ComparisonNode node, Class entityType) {\n                     .collect(Collectors.toList());\n \n             if (op.equals(RSQLOperators.EQUAL) || op.equals(RSQLOperators.IN)) {\n-                return equalityExpression(arguments.get(0), path, values);\n+                return equalityExpression(arguments.get(0), path, values, true);\n+            }\n+            if (op.equals(INI)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709a5b27e09d28e52e03d392444daf423927bf4f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNzAyMg==", "bodyText": "I believe we need to add explicit conditions for INFIXI, PREFIX, etc.", "url": "https://github.com/yahoo/elide/pull/1519#discussion_r481337022", "createdAt": "2020-09-01T18:11:08Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/filter/dialect/RSQLFilterDialect.java", "diffHunk": "@@ -343,10 +348,16 @@ public FilterExpression visit(ComparisonNode node, Class entityType) {\n                     .collect(Collectors.toList());\n \n             if (op.equals(RSQLOperators.EQUAL) || op.equals(RSQLOperators.IN)) {\n-                return equalityExpression(arguments.get(0), path, values);\n+                return equalityExpression(arguments.get(0), path, values, true);\n+            }\n+            if (op.equals(INI)) {\n+                return equalityExpression(arguments.get(0), path, values, false);\n             }\n             if (op.equals(RSQLOperators.NOT_EQUAL) || op.equals(RSQLOperators.NOT_IN)) {\n-                return new NotFilterExpression(equalityExpression(arguments.get(0), path, values));\n+                return new NotFilterExpression(equalityExpression(arguments.get(0), path, values, true));\n+            }\n+            if (op.equals(NOT_INI)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709a5b27e09d28e52e03d392444daf423927bf4f"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d4d4ea16de55cc2b1515efbb0f20aadee8c16d6", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/3d4d4ea16de55cc2b1515efbb0f20aadee8c16d6", "committedDate": "2020-09-01T20:09:36Z", "message": "refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTM1OTcy", "url": "https://github.com/yahoo/elide/pull/1519#pullrequestreview-480135972", "createdAt": "2020-09-01T21:38:17Z", "commit": {"oid": "3d4d4ea16de55cc2b1515efbb0f20aadee8c16d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 811, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}