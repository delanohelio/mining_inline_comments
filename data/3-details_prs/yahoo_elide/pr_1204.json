{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTQ0Mjgx", "number": 1204, "title": "Elide 5.x elide-async integration in elide-spring", "bodyText": "Co-authored-by: Abhino\nDepends On: #1203\nDescription\n\nIntegrating with elide-async.\nNew properties class for Async related properties like enable/disable, number of threads for executing the async queries in parallel, the maximum run time for individual threads before they are automatically killed, number of instances hosting the elide service in parallel (to avoid all hosts trying to update status of orphan queries in parallel).\nNew Async Configuration for binding AsyncExecutor Service when Async is enabled. It also adds Async Models to the dictionary.\nAdds the Async models to Swagger if Async and Swagger are enabled. The Async models are available on /swagger/doc/async path\nAdded EntityScan to Main class with model packages path since earlier it will bind all models with @Entity annotation, but we don't want Async models to be bound if async is not enabled.\n\nMotivation and Context\nTo allow submission of queries that will be executed asynchronously.\nHow Has This Been Tested?\n\nUsed elide-spring-boot-example with the updated version of the elide-spring artifact and verify query submissions and executions.\n\nScreenshots (if appropriate):\nNA\nLicense\nI confirm that this contribution is made under an Apache 2.0 license and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-02-26T22:41:40Z", "url": "https://github.com/yahoo/elide/pull/1204", "merged": true, "mergeCommit": {"oid": "98c5c3ce85b133dd7c8962a94e6b788e6dfbe205"}, "closed": true, "closedAt": "2020-03-26T19:37:24Z", "author": {"login": "moizarafat"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIOr11ABqjMwNzU3MTY1NzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRhZMlgFqTM4MjM1MTM5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "716a587de8f7463f8920e6a6a32acbfbc5d0be3f", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/716a587de8f7463f8920e6a6a32acbfbc5d0be3f", "committedDate": "2020-02-26T20:34:43Z", "message": "Integrating elide-async.\nCo-authored-by: Abhino<abhino@gmail.com>"}, "afterCommit": {"oid": "3fe537ee18d074f39aa34e62bb8798e3337cb2a8", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/3fe537ee18d074f39aa34e62bb8798e3337cb2a8", "committedDate": "2020-02-26T22:43:50Z", "message": "Integrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/03f9b8186f24af1e92315d18b204196f81a8f169", "committedDate": "2020-02-26T22:46:48Z", "message": "Integrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>\n\nIntegrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fe537ee18d074f39aa34e62bb8798e3337cb2a8", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/3fe537ee18d074f39aa34e62bb8798e3337cb2a8", "committedDate": "2020-02-26T22:43:50Z", "message": "Integrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>"}, "afterCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/03f9b8186f24af1e92315d18b204196f81a8f169", "committedDate": "2020-02-26T22:46:48Z", "message": "Integrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>\n\nIntegrating elide-async.\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1ODU2NDIw", "url": "https://github.com/yahoo/elide/pull/1204#pullrequestreview-365856420", "createdAt": "2020-02-27T17:28:41Z", "commit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyODo0MVrOFvaaCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzozMzowMlrOFvaj1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDA0Mw==", "bodyText": "Time variables should always include Units in their name so they are unambiguous.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385260043", "createdAt": "2020-02-27T17:28:41Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTime = 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDM3OA==", "bodyText": "I think we'll want two times here - one for the timeout and one for cleanup (deletion).  Both should be configurable.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385260378", "createdAt": "2020-02-27T17:29:04Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTime = 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDU3Mg==", "bodyText": "Do we need this?", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385260572", "createdAt": "2020-02-27T17:29:29Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTime = 60;\n+\n+    /**\n+     * Default number of hosts running Elide.\n+     */\n+    private int numberOfHosts = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDkwMw==", "bodyText": "If we are using the JpaDataStore, these classes are automatically discovered.  There is no need to explicitly bind them.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385260903", "createdAt": "2020-02-27T17:30:09Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.models.AsyncQuery;\n+import com.yahoo.elide.async.models.AsyncQueryResult;\n+import com.yahoo.elide.async.service.AsyncExecutorService;\n+import com.yahoo.elide.core.EntityDictionary;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EntityScan(basePackageClasses = AsyncQuery.class)\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.enabled:false}\")\n+public class ElideAsyncConfiguration {\n+\n+    /**\n+     * Updates the entity dictionary for Elide by binding the Async Models.\n+     * @param dictionary Contains the static metadata about Elide models.\n+     * @return updated instance of dictionary.\n+     */\n+    public EntityDictionary bindAsyncDictionary(EntityDictionary dictionary) {\n+\n+        dictionary.bindEntity(AsyncQuery.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MTQ3NQ==", "bodyText": "We should be able to remove this function", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385261475", "createdAt": "2020-02-27T17:31:08Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.models.AsyncQuery;\n+import com.yahoo.elide.async.models.AsyncQueryResult;\n+import com.yahoo.elide.async.service.AsyncExecutorService;\n+import com.yahoo.elide.core.EntityDictionary;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EntityScan(basePackageClasses = AsyncQuery.class)\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.enabled:false}\")\n+public class ElideAsyncConfiguration {\n+\n+    /**\n+     * Updates the entity dictionary for Elide by binding the Async Models.\n+     * @param dictionary Contains the static metadata about Elide models.\n+     * @return updated instance of dictionary.\n+     */\n+    public EntityDictionary bindAsyncDictionary(EntityDictionary dictionary) {\n+\n+        dictionary.bindEntity(AsyncQuery.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDkwMw=="}, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MjU0OA==", "bodyText": "I don't think we need this.  Why did we add?", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385262548", "createdAt": "2020-02-27T17:33:02Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/java/com/yahoo/elide/spring/App.java", "diffHunk": "@@ -15,6 +16,7 @@\n  */\n @Slf4j\n @SpringBootApplication\n+@EntityScan(basePackages = {\"${elide.modelPackage}\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18f4c74a0ae3d5313aece0e909c5a8cd8969607c", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/18f4c74a0ae3d5313aece0e909c5a8cd8969607c", "committedDate": "2020-03-01T23:11:54Z", "message": "Removing unwanted params.\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d9d96b148fa17b6bf9ed5d5e73c657f298cccf9", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/4d9d96b148fa17b6bf9ed5d5e73c657f298cccf9", "committedDate": "2020-03-02T18:30:23Z", "message": "Binding Cleaner service.\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "305c7197ec34edd4d02a009d690347ac1d614525", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/305c7197ec34edd4d02a009d690347ac1d614525", "committedDate": "2020-03-03T01:33:58Z", "message": "Adding query result retention.\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "305c7197ec34edd4d02a009d690347ac1d614525", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/305c7197ec34edd4d02a009d690347ac1d614525", "committedDate": "2020-03-03T01:33:58Z", "message": "Adding query result retention.\n\nCo-authored-by: Abhino <abhino@gmail.com>"}, "afterCommit": {"oid": "d26a2e895fd2cfdc9d0ce62bfcc4afad97c5fe62", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/d26a2e895fd2cfdc9d0ce62bfcc4afad97c5fe62", "committedDate": "2020-03-08T00:41:48Z", "message": "Adding query result retention.\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad2a2eb6b8c98167d3a45361edb777aa402e806c", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/ad2a2eb6b8c98167d3a45361edb777aa402e806c", "committedDate": "2020-03-11T14:59:01Z", "message": "Fixing integration issues\n\nCo-authored-by: Abhino <abhino@gmail.com>"}, "afterCommit": {"oid": "fee5acee48de035ebc852e9a578237744a29d8af", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/fee5acee48de035ebc852e9a578237744a29d8af", "committedDate": "2020-03-11T15:51:29Z", "message": "Fixing integration issues\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07a4f1f577b54aaf5912e727681c786f86c63d6b", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/07a4f1f577b54aaf5912e727681c786f86c63d6b", "committedDate": "2020-03-11T16:05:02Z", "message": "Merge branch 'elide-5.x-async-spring' of github.com:yahoo/elide into elide-5.x-async-spring"}, "afterCommit": {"oid": "fee5acee48de035ebc852e9a578237744a29d8af", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/fee5acee48de035ebc852e9a578237744a29d8af", "committedDate": "2020-03-11T15:51:29Z", "message": "Fixing integration issues\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "760d353d6d2aab16802335a6e7e3eb22d31145bc", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/760d353d6d2aab16802335a6e7e3eb22d31145bc", "committedDate": "2020-03-11T16:49:26Z", "message": "Adding DAO configuration\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/f4fc324b4c503a1ac41d8dec88db4f3268646ec5", "committedDate": "2020-03-11T16:54:03Z", "message": "Checkstyle error\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fee5acee48de035ebc852e9a578237744a29d8af", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/fee5acee48de035ebc852e9a578237744a29d8af", "committedDate": "2020-03-11T15:51:29Z", "message": "Fixing integration issues\n\nCo-authored-by: Abhino <abhino@gmail.com>"}, "afterCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/f4fc324b4c503a1ac41d8dec88db4f3268646ec5", "committedDate": "2020-03-11T16:54:03Z", "message": "Checkstyle error\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "374f1c5b0b60f515e3d592584d99db17f3b16ec5", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/374f1c5b0b60f515e3d592584d99db17f3b16ec5", "committedDate": "2020-03-11T16:59:15Z", "message": "Conflict\n\nCo-authored-by: Abhino <abhino@gmail.com>"}, "afterCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/f4fc324b4c503a1ac41d8dec88db4f3268646ec5", "committedDate": "2020-03-11T16:54:03Z", "message": "Checkstyle error\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDU0MTY1", "url": "https://github.com/yahoo/elide/pull/1204#pullrequestreview-373054165", "createdAt": "2020-03-11T19:18:49Z", "commit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxODo1MFrOF1FSqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToyMjozNFrOF1FaHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNTU0NA==", "bodyText": "This should also be conditional on async being enabled (no point to have the cleaner in that case).", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391205544", "createdAt": "2020-03-11T19:18:50Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncCleanupConfiguration.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.service.AsyncCleanerService;\n+import com.yahoo.elide.async.service.AsyncQueryDAO;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.cleanupEnabled:false}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNTg1NA==", "bodyText": "In auto-configuration, I thought this was done with ConditionalOnMissingBean annotations rather than config.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391205854", "createdAt": "2020-03-11T19:19:20Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTimeMinutes = 60;\n+\n+    /**\n+     * Whether or not the cleanup is enabled.\n+     */\n+    private boolean cleanupEnabled = false;\n+\n+    /**\n+     * Default retention of async query and results.\n+     */\n+    private int queryCleanupDays = 7;\n+\n+    /**\n+     * Whether or not to use the default implementation of AsyncQueryDAO.\n+     * If false, the user will provide custom implementation of AsyncQueryDAO.\n+     */\n+    private boolean defaultAsyncQueryDAO = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNjcyMg==", "bodyText": "We need a URL path for this as well.   Async should probably inherit from the other endpoint configs.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391206722", "createdAt": "2020-03-11T19:21:04Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/resources/application.yaml", "diffHunk": "@@ -13,6 +13,13 @@ elide:\n     path: /doc\n     enabled: true\n     version: \"1.0\"\n+  async:\n+    enabled: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNzIxMQ==", "bodyText": "ConditionalOnMissingBean should suffice.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391207211", "createdAt": "2020-03-11T19:22:04Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncQueryDAOConfiguration.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.service.AsyncQueryDAO;\n+import com.yahoo.elide.async.service.DefaultAsyncQueryDAO;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.defaultAsyncQueryDAO:true}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNzQ1Mg==", "bodyText": "Instead of breaking out all of these beans into separate files - why not just put them in a single ElideAsyncConfiguration class?", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391207452", "createdAt": "2020-03-11T19:22:34Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.models.AsyncQuery;\n+import com.yahoo.elide.async.service.AsyncExecutorService;\n+import com.yahoo.elide.async.service.AsyncQueryDAO;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EntityScan(basePackageClasses = AsyncQuery.class)\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.enabled:false}\")\n+public class ElideAsyncConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ee041e3773b9ba15818e9b89184c0c71ce12d29", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/9ee041e3773b9ba15818e9b89184c0c71ce12d29", "committedDate": "2020-03-12T16:07:27Z", "message": "Review comments\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fdad1b1b5c2053fbec736031c032f574082a541", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/6fdad1b1b5c2053fbec736031c032f574082a541", "committedDate": "2020-03-12T16:40:32Z", "message": "Review comments\n\nCo-authored-by: Abhino <abhino@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzM1Mjcy", "url": "https://github.com/yahoo/elide/pull/1204#pullrequestreview-380735272", "createdAt": "2020-03-24T22:14:04Z", "commit": {"oid": "6fdad1b1b5c2053fbec736031c032f574082a541"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoxNDowNFrOF7FGug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoxNDowNFrOF7FGug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5Mzk0Ng==", "bodyText": "We can remove DAOConfiguration now", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r397493946", "createdAt": "2020-03-24T22:14:04Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories", "diffHunk": "@@ -1,5 +1,7 @@\n org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n  com.yahoo.elide.spring.config.ElideAutoConfiguration, \\\n+ com.yahoo.elide.spring.config.ElideAsyncQueryDAOConfiguration, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fdad1b1b5c2053fbec736031c032f574082a541"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b38086471c4de41fb783562de03f89749e639e7e", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/b38086471c4de41fb783562de03f89749e639e7e", "committedDate": "2020-03-25T15:56:29Z", "message": "Review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8fbdfcd17abfde07df1609ced32d19906884a4a", "author": {"user": {"login": "moizarafat", "name": "Moiz Arafat"}}, "url": "https://github.com/yahoo/elide/commit/b8fbdfcd17abfde07df1609ced32d19906884a4a", "committedDate": "2020-03-26T17:15:19Z", "message": "Merge branch 'elide-5.x-async' into elide-5.x-async-spring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzUxMzk3", "url": "https://github.com/yahoo/elide/pull/1204#pullrequestreview-382351397", "createdAt": "2020-03-26T19:37:11Z", "commit": {"oid": "b8fbdfcd17abfde07df1609ced32d19906884a4a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 646, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}