{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MDc1NDY2", "number": 1482, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMToxODoxOVrOEWg5SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMToxOToxNFrOEWg5fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMDQzMDgxOnYy", "diffSide": "LEFT", "path": "elide-core/src/main/java/com/yahoo/elide/core/filter/FilterPredicate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMToxODoxOVrOG92P4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMToxODoxOVrOG92P4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwNTEyMQ==", "bodyText": "FYI: replaceAll is not a direct replacement for replace.\nIf the target is a literal String always use replace.\nHowever, if you had to use it, it would have to be:\nreturn value.toString().replaceAll(\"%\", \"\\\\\\\\%\");", "url": "https://github.com/yahoo/elide/pull/1482#discussion_r467505121", "createdAt": "2020-08-08T21:18:19Z", "author": {"login": "wcekan"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/filter/FilterPredicate.java", "diffHunk": "@@ -199,7 +199,6 @@ public String getPlaceholder() {\n         }\n \n         public String escapeMatching() {\n-            // It is unclear why replaceAll here breaks our tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1fc15875f09d3f7c19d7abcf39dac0ec30542c3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMDQzMTMzOnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/parsers/JsonApiParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMToxOToxNFrOG92QGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMToxOToxNFrOG92QGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwNTE3Nw==", "bodyText": "We want to replace 2 or more slashes.  No need to waste time matching a single slash.", "url": "https://github.com/yahoo/elide/pull/1482#discussion_r467505177", "createdAt": "2020-08-08T21:19:14Z", "author": {"login": "wcekan"}, "path": "elide-core/src/main/java/com/yahoo/elide/parsers/JsonApiParser.java", "diffHunk": "@@ -25,7 +26,7 @@\n  */\n public class JsonApiParser {\n \n-    private final static Pattern DUPLICATE_SEPARATOR_PATTERN = Pattern.compile(\"/+\");\n+    private final static Pattern DUPLICATE_SEPARATOR_PATTERN = Pattern.compile(\"//+\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1fc15875f09d3f7c19d7abcf39dac0ec30542c3"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 941, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}