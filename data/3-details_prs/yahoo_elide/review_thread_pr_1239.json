{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0Mzc1NTAw", "number": 1239, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDowMzozMlrODr0CAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMjoxODoxMVrODr2tgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjY3ODQzOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/query/TimeDimensionProjection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDowMzozMlrOF8YRmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTowMTowOFrOF81FCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1NjYwMQ==", "bodyText": "return this instead?  DO we need this function?", "url": "https://github.com/yahoo/elide/pull/1239#discussion_r398856601", "createdAt": "2020-03-26T20:03:32Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/query/TimeDimensionProjection.java", "diffHunk": "@@ -55,16 +47,17 @@ default Column getColumn() {\n      * @return a new projection\n      */\n     default TimeDimensionProjection toTimeGrain(TimeGrain newGrain) {\n-        if (getTimeDimension().getSupportedGrains().stream()\n+        if (getColumn().getSupportedGrains().stream()\n                 .noneMatch(supportedGrain -> supportedGrain.getGrain().equals(newGrain))) {\n-            throw new InvalidValueException(getTimeDimension().getId() + \" doesn't support grain \" + newGrain);\n+            throw new InvalidValueException(getColumn().getId() + \" doesn't support grain \" + newGrain);\n         }\n \n         TimeDimensionProjection projection = this;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df1d658611d8b3049bd82b2a79bb88f7ff14a46"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyODUyMQ==", "bodyText": "TimeDimensionProjection is just an interface, so I return a new implementation here.", "url": "https://github.com/yahoo/elide/pull/1239#discussion_r399328521", "createdAt": "2020-03-27T15:01:08Z", "author": {"login": "hellohanchen"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/query/TimeDimensionProjection.java", "diffHunk": "@@ -55,16 +47,17 @@ default Column getColumn() {\n      * @return a new projection\n      */\n     default TimeDimensionProjection toTimeGrain(TimeGrain newGrain) {\n-        if (getTimeDimension().getSupportedGrains().stream()\n+        if (getColumn().getSupportedGrains().stream()\n                 .noneMatch(supportedGrain -> supportedGrain.getGrain().equals(newGrain))) {\n-            throw new InvalidValueException(getTimeDimension().getId() + \" doesn't support grain \" + newGrain);\n+            throw new InvalidValueException(getColumn().getId() + \" doesn't support grain \" + newGrain);\n         }\n \n         TimeDimensionProjection projection = this;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1NjYwMQ=="}, "originalCommit": {"oid": "0df1d658611d8b3049bd82b2a79bb88f7ff14a46"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzExNzQ0OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/query/MetricProjection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMjoxODoxMVrOF8ciWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMjoxODoxMVrOF8ciWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkyNjQyNg==", "bodyText": "We could probably use generics here.", "url": "https://github.com/yahoo/elide/pull/1239#discussion_r398926426", "createdAt": "2020-03-26T22:18:11Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/query/MetricProjection.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.datastores.aggregation.query;\n+\n+import com.yahoo.elide.datastores.aggregation.metadata.models.Metric;\n+\n+/**\n+ * Represents a projected metric column as an alias in a query.\n+ */\n+public interface MetricProjection extends ColumnProjection {\n+    /**\n+     * Get the projected metric.\n+     *\n+     * @return metric column\n+     */\n+    @Override\n+    Metric getColumn();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df1d658611d8b3049bd82b2a79bb88f7ff14a46"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1084, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}