{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDU1Mzcx", "number": 1196, "title": "sourceColumn", "bodyText": "Resolves #1005\nDescription\n\nAdd sourceColumn field into Column model.\nQueryEngine would call MetaDataStore to resolve source columns.\n\nHow Has This Been Tested?\nMetadata integration test is updated.\nLicense\nI confirm that this contribution is made under an Apache 2.0 license and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-02-19T23:50:52Z", "url": "https://github.com/yahoo/elide/pull/1196", "merged": true, "mergeCommit": {"oid": "68cfaf98020f0c8bdf5022af7d234b1bd1c713e3"}, "closed": true, "closedAt": "2020-02-25T16:52:06Z", "author": {"login": "hellohanchen"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF_acCAH2gAyMzc3NDU1MzcxOjliNDY5OTk2YTQ5ZmM3M2E5YmIyMTNiYWMwOTE5M2I4YTRmNmNkZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH1CpsgFqTM2NDI4OTkyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9b469996a49fc73a9bb213bac09193b8a4f6cdd4", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/9b469996a49fc73a9bb213bac09193b8a4f6cdd4", "committedDate": "2020-02-19T23:48:36Z", "message": "sourceColumn"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTczMDky", "url": "https://github.com/yahoo/elide/pull/1196#pullrequestreview-361973092", "createdAt": "2020-02-20T15:01:54Z", "commit": {"oid": "9b469996a49fc73a9bb213bac09193b8a4f6cdd4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowMTo1NFrOFsWyNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjoxNjoyMVrOFsZ1KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NDk2NQ==", "bodyText": "I wonder if this could be implemented as a mixin so we don't have to duplicate this code.", "url": "https://github.com/yahoo/elide/pull/1196#discussion_r382054965", "createdAt": "2020-02-20T15:01:54Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/metadata/SQLTimeDimension.java", "diffHunk": "@@ -40,5 +44,17 @@ public SQLTimeDimension(Table table, String fieldName, EntityDictionary dictiona\n             this.reference = generateColumnReference(path, dictionary);\n             this.joinPath = path;\n         }\n+\n+        this.metadataDictionary = dictionary;\n+    }\n+\n+    @Override\n+    public Pair<String, String> getSourceTableAndColumn() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b469996a49fc73a9bb213bac09193b8a4f6cdd4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwNDg3Mw==", "bodyText": "I'm not a huge fan of Pair as a function result.  Another option - not sure which one I like better yet.  We could override getSourceColumn.\nRather than a two pass building phase, getSourceColumn can lazy initialize:\n    Column getSourceColumn() {\n        if (joinColumn == null || sourceColumn != null) {\n            return sourceColumn;\n        }\n\n        sourceColumn = getJoinPath()....  //Do lookup logic here\n        return sourceColumn;\n    }", "url": "https://github.com/yahoo/elide/pull/1196#discussion_r382104873", "createdAt": "2020-02-20T16:16:21Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/metadata/SQLTimeDimension.java", "diffHunk": "@@ -40,5 +44,17 @@ public SQLTimeDimension(Table table, String fieldName, EntityDictionary dictiona\n             this.reference = generateColumnReference(path, dictionary);\n             this.joinPath = path;\n         }\n+\n+        this.metadataDictionary = dictionary;\n+    }\n+\n+    @Override\n+    public Pair<String, String> getSourceTableAndColumn() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NDk2NQ=="}, "originalCommit": {"oid": "9b469996a49fc73a9bb213bac09193b8a4f6cdd4"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0f481646a50edd5f342d2de8f1a9ab58538aedb", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/a0f481646a50edd5f342d2de8f1a9ab58538aedb", "committedDate": "2020-02-20T21:33:37Z", "message": "address comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94e4d9d0eb78082a47d88bd66a3df2f782f1d389", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/94e4d9d0eb78082a47d88bd66a3df2f782f1d389", "committedDate": "2020-02-20T22:48:41Z", "message": "change to sourcePath"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0Mjg5OTIx", "url": "https://github.com/yahoo/elide/pull/1196#pullrequestreview-364289921", "createdAt": "2020-02-25T16:51:25Z", "commit": {"oid": "94e4d9d0eb78082a47d88bd66a3df2f782f1d389"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 638, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}