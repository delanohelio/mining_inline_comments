{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDU3MDQ3", "number": 1154, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0OTo0NFrODcvJ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowMDoxNFrODdwkJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDU5Mjg0OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/MetaDataStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0OTo0NFrOFk7-7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0OTo0NFrOFk7-7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NTgyMw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/yahoo/elide/pull/1154#discussion_r374275823", "createdAt": "2020-02-03T18:49:44Z", "author": {"login": "wcekan"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/MetaDataStore.java", "diffHunk": "@@ -33,8 +33,7 @@\n  * MetaDataStore is a in-memory data store that manage data models for an {@link AggregationDataStore}.\n  */\n public class MetaDataStore extends HashMapDataStore {\n-    public static final Package META_DATA_PACKAGE =\n-            Package.getPackage(\"com.yahoo.elide.datastores.aggregation.metadata.models\");\n+    public static final Package META_DATA_PACKAGE = Table.class.getPackage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62ecd46806153a4c766cc90d1f4d2e41eef2c268"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDcwODg2OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/EntityDictionary.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOToyNzoyMVrOFk9HPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOToyNzoyMVrOFk9HPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NDMzNQ==", "bodyText": "== false looks strange.  Can we say\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (nonTransferable == null || nonTransferable.enabled() == false);\n          \n          \n            \n                    return (nonTransferable == null || ! nonTransferable.enabled());", "url": "https://github.com/yahoo/elide/pull/1154#discussion_r374294335", "createdAt": "2020-02-03T19:27:21Z", "author": {"login": "wcekan"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/EntityDictionary.java", "diffHunk": "@@ -830,9 +830,10 @@ public String getNameFromAlias(Object entity, String alias) {\n      * @param entityClass the entity type to check for the shareable permissions\n      * @return true if entityClass is shareable.  False otherwise.\n      */\n-    public boolean isShareable(Class<?> entityClass) {\n-        return getAnnotation(entityClass, SharePermission.class) != null\n-                && getAnnotation(entityClass, SharePermission.class).sharable();\n+    public boolean isTransferable(Class<?> entityClass) {\n+        NonTransferable nonTransferable = getAnnotation(entityClass, NonTransferable.class);\n+\n+        return (nonTransferable == null || nonTransferable.enabled() == false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62ecd46806153a4c766cc90d1f4d2e41eef2c268"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTI5ODM5OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/EntityDictionary.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjo1NzoxMFrOFmit8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjo1NzoxMFrOFmit8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1OTAyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (nonTransferable == null || ! nonTransferable.enabled());\n          \n          \n            \n                    return (nonTransferable == null || !nonTransferable.enabled());", "url": "https://github.com/yahoo/elide/pull/1154#discussion_r375959027", "createdAt": "2020-02-06T16:57:10Z", "author": {"login": "jkusa"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/EntityDictionary.java", "diffHunk": "@@ -830,9 +830,10 @@ public String getNameFromAlias(Object entity, String alias) {\n      * @param entityClass the entity type to check for the shareable permissions\n      * @return true if entityClass is shareable.  False otherwise.\n      */\n-    public boolean isShareable(Class<?> entityClass) {\n-        return getAnnotation(entityClass, SharePermission.class) != null\n-                && getAnnotation(entityClass, SharePermission.class).sharable();\n+    public boolean isTransferable(Class<?> entityClass) {\n+        NonTransferable nonTransferable = getAnnotation(entityClass, NonTransferable.class);\n+\n+        return (nonTransferable == null || ! nonTransferable.enabled());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b79d6b1e5aeb2ef5650c16d6775091aa7e7d7ca5"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTMwMTI1OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/pagination/PaginationImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjo1Nzo1M1rOFmivng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjo1Nzo1M1rOFmivng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1OTQ1NA==", "bodyText": "Rebase issue?", "url": "https://github.com/yahoo/elide/pull/1154#discussion_r375959454", "createdAt": "2020-02-06T16:57:53Z", "author": {"login": "jkusa"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/pagination/PaginationImpl.java", "diffHunk": "@@ -33,6 +33,10 @@\n      */\n     public enum PaginationKey { offset, number, size, limit, totals }\n \n+    public static final int DEFAULT_OFFSET = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b79d6b1e5aeb2ef5650c16d6775091aa7e7d7ca5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTMwOTgzOnYy", "diffSide": "RIGHT", "path": "elide-core/src/test/java/example/packageshareable/package-info.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowMDoxNFrOFmi1BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowMDoxNFrOFmi1BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2MDgzNw==", "bodyText": "If this is @NonTransferable then it isn't packageshareable correct?", "url": "https://github.com/yahoo/elide/pull/1154#discussion_r375960837", "createdAt": "2020-02-06T17:00:14Z", "author": {"login": "jkusa"}, "path": "elide-core/src/test/java/example/packageshareable/package-info.java", "diffHunk": "@@ -3,7 +3,7 @@\n  * Licensed under the Apache License, Version 2.0\n  * See LICENSE file in project root for terms.\n  */\n-@SharePermission\n+@NonTransferable\n package example.packageshareable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b79d6b1e5aeb2ef5650c16d6775091aa7e7d7ca5"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1046, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}