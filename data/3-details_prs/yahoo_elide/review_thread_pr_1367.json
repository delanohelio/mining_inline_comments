{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NDkwNjI4", "number": 1367, "reviewThreads": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzo1Njo0OFrOECkwRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDozN1rOEGZXqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTM0NzkwOnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/CancelSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzo1Njo0OFrOGfHQJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzo1Njo0OFrOGfHQJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI3Nzg2MA==", "bodyText": "Elide core should not depend directly on Hibernate.  Only the data stores that use hibernate should have this dependency.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435277860", "createdAt": "2020-06-04T13:56:48Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/CancelSession.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+import org.hibernate.Session;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0492ff9887bf3ead882e6676f8d4b6bef2fbc12"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTM2OTY1OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/CancelSession.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDowMTozNlrOGfHecw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDoxMzo1NVrOGfIDMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4MTUyMw==", "bodyText": "Instead of creating an abstract class - create a functional interface (with no dependencies on things like hibernate).", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435281523", "createdAt": "2020-06-04T14:01:36Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/CancelSession.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+import org.hibernate.Session;\n+\n+/**\n+ * Cancel Session implementation.\n+ */\n+\n+public abstract class CancelSession {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0492ff9887bf3ead882e6676f8d4b6bef2fbc12"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI5MDkzMQ==", "bodyText": "I think the functionalInterface will require an entityManager as an argument - and as such - it should probably live in the Aggregation Store and JpaStore respectively.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435290931", "createdAt": "2020-06-04T14:13:55Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/CancelSession.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+import org.hibernate.Session;\n+\n+/**\n+ * Cancel Session implementation.\n+ */\n+\n+public abstract class CancelSession {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4MTUyMw=="}, "originalCommit": {"oid": "c0492ff9887bf3ead882e6676f8d4b6bef2fbc12"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTQwMzA1OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDowODozNlrOGfHz8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDoxMDoyMlrOGfH49Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4NzAyNQ==", "bodyText": "YOu can make this a local variable and use it multiple places.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435287025", "createdAt": "2020-06-04T14:08:36Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -376,10 +378,10 @@ default AuditLogger getAuditLogger() {\n      */\n     default DataStore getDataStore(MetaDataStore metaDataStore, AggregationDataStore aggregationDataStore,\n             EntityManagerFactory entityManagerFactory) {\n-\n+\tCancelSession cancelSession = new CancelSession(entityManagerFactory.get().unwrap(Session.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0492ff9887bf3ead882e6676f8d4b6bef2fbc12"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4ODMwOQ==", "bodyText": "Another issue - you are unwrapping the factory - not the entity manager.  I don't think that is correct.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435288309", "createdAt": "2020-06-04T14:10:22Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -376,10 +378,10 @@ default AuditLogger getAuditLogger() {\n      */\n     default DataStore getDataStore(MetaDataStore metaDataStore, AggregationDataStore aggregationDataStore,\n             EntityManagerFactory entityManagerFactory) {\n-\n+\tCancelSession cancelSession = new CancelSession(entityManagerFactory.get().unwrap(Session.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4NzAyNQ=="}, "originalCommit": {"oid": "c0492ff9887bf3ead882e6676f8d4b6bef2fbc12"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzEyMzc0OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozNzo1N1rOGfY7Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozNzo1N1rOGfY7Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2NzQ0Nw==", "bodyText": "Don't create an entityManager here.  Let the transaction create the entity manager.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435567447", "createdAt": "2020-06-04T21:37:57Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStore.java", "diffHunk": "@@ -75,6 +83,23 @@ public void populateEntityDictionary(EntityDictionary dictionary) {\n \n     @Override\n     public DataStoreTransaction beginTransaction() {\n-        return new AggregationDataStoreTransaction(queryEngine);\n+\tEntityManager entityManager = entityManagerSupplier.get();        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzEyNDgzOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozODoyNFrOGfY8Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozODoyNFrOGfY8Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2NzYyMg==", "bodyText": "Let's not add an EntityManagerSupplier to the constructor.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435567622", "createdAt": "2020-06-04T21:38:24Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStore.java", "diffHunk": "@@ -22,26 +22,34 @@\n import java.util.List;\n import java.util.Set;\n \n+import javax.persistence.EntityManager;\n+\n /**\n  * DataStore that supports Aggregation. Uses {@link QueryEngine} to return results.\n  */\n public class AggregationDataStore implements DataStore {\n     private QueryEngine queryEngine;\n     private Set<Class<?>> dynamicCompiledClasses;\n+    protected final AggregationDataStoreTransactionCancel aggregationDataStoreTransactionCancel;\n+    protected final EntityManagerSupplier entityManagerSupplier;\n \n     /**\n      * These are the classes the Aggregation Store manages.\n      */\n     private static final List<Class<? extends Annotation>> AGGREGATION_STORE_CLASSES =\n             Arrays.asList(FromTable.class, FromSubquery.class);\n \n-    public AggregationDataStore(QueryEngine queryEngine) {\n+    public AggregationDataStore(EntityManagerSupplier entityManagerSupplier, QueryEngine queryEngine, AggregationDataStoreTransactionCancel aggregationDataStoreTransactionCancel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzEyNTI4OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozODozNVrOGfY8SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozODozNVrOGfY8SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2NzY4OA==", "bodyText": "Remove", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435567688", "createdAt": "2020-06-04T21:38:35Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStore.java", "diffHunk": "@@ -75,6 +83,23 @@ public void populateEntityDictionary(EntityDictionary dictionary) {\n \n     @Override\n     public DataStoreTransaction beginTransaction() {\n-        return new AggregationDataStoreTransaction(queryEngine);\n+\tEntityManager entityManager = entityManagerSupplier.get();        \n+        return new AggregationDataStoreTransaction(entityManager, queryEngine, aggregationDataStoreTransactionCancel);\n+    }\n+\n+    /**\n+     * Functional interface for describing a method to supply EntityManager.\n+     */\n+    @FunctionalInterface\n+    public interface EntityManagerSupplier {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzEyNzAxOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozOToxNFrOGfY9aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozOToxNFrOGfY9aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2Nzk3OQ==", "bodyText": "Can we shorten the name of this interface (we already know this is for the AggregationDataStore since it is an inner class).", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435567979", "createdAt": "2020-06-04T21:39:14Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStore.java", "diffHunk": "@@ -75,6 +83,23 @@ public void populateEntityDictionary(EntityDictionary dictionary) {\n \n     @Override\n     public DataStoreTransaction beginTransaction() {\n-        return new AggregationDataStoreTransaction(queryEngine);\n+\tEntityManager entityManager = entityManagerSupplier.get();        \n+        return new AggregationDataStoreTransaction(entityManager, queryEngine, aggregationDataStoreTransactionCancel);\n+    }\n+\n+    /**\n+     * Functional interface for describing a method to supply EntityManager.\n+     */\n+    @FunctionalInterface\n+    public interface EntityManagerSupplier {\n+        EntityManager get();\n+    }\n+\n+    /**\n+     * Functional interface for describing a method to supply AggregationDataStoreTransaction.\n+     */\n+    @FunctionalInterface\n+    public interface  AggregationDataStoreTransactionCancel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzEyOTk3OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0MDoyM1rOGfY_NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0MDoyM1rOGfY_NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2ODQzNg==", "bodyText": "Remove the entity manager from the constructor.  The AggregationStore (other than the SQLQueryEngine) should not have a direct dependency on the EntityManager", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435568436", "createdAt": "2020-06-04T21:40:23Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStoreTransaction.java", "diffHunk": "@@ -15,13 +15,20 @@\n import com.google.common.annotations.VisibleForTesting;\n \n import java.io.IOException;\n+\n+import javax.persistence.EntityManager;\n+\n /**\n  * Transaction handler for {@link AggregationDataStore}.\n  */\n public class AggregationDataStoreTransaction extends DataStoreTransactionImplementation {\n+    private EntityManager em;\n     private QueryEngine queryEngine;\n-    public AggregationDataStoreTransaction(QueryEngine queryEngine) {\n-        this.queryEngine = queryEngine;\n+    private AggregationDataStore.AggregationDataStoreTransactionCancel aggregationDataStoreTransactionCancel;\n+    public AggregationDataStoreTransaction(EntityManager em, QueryEngine queryEngine, AggregationDataStore.AggregationDataStoreTransactionCancel aggregationDataStoreTransactionCancel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzEzOTU5OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/transaction/NonJtaTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0NDoxMlrOGfZFYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0NDoxMlrOGfZFYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MDAxOQ==", "bodyText": "Instead of implementing cancel here, why not move this to the super class?", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435570019", "createdAt": "2020-06-04T21:44:12Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/transaction/NonJtaTransaction.java", "diffHunk": "@@ -61,4 +63,9 @@ public void close() throws IOException {\n     public boolean isOpen() {\n         return transaction.isActive();\n     }\n+\n+    @Override\n+    public void cancel() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzE0MDY3OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/transaction/AbstractJpaTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0NDozNVrOGfZGAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0NDozNVrOGfZGAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MDE3Nw==", "bodyText": "Why not implement cancel here so we don't have to redefine it in each subclass.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435570177", "createdAt": "2020-06-04T21:44:35Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/transaction/AbstractJpaTransaction.java", "diffHunk": "@@ -55,10 +56,12 @@\n     protected final EntityManager em;\n     private final EntityManagerWrapper emWrapper;\n     private final LinkedHashSet<Runnable> deferredTasks = new LinkedHashSet<>();\n+    private final JpaDataStore.JpaTransactionCancel jpaTransactionCancel;\n \n-    protected AbstractJpaTransaction(EntityManager em) {\n+    protected AbstractJpaTransaction(EntityManager em, JpaDataStore.JpaTransactionCancel jpaTransactionCancel) {\n         this.em = em;\n         this.emWrapper = new EntityManagerWrapper(em);\n+\tthis.jpaTransactionCancel = jpaTransactionCancel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzE0MzU4OnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0NTo0MVrOGfZH3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0NTo0MVrOGfZH3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MDY1NA==", "bodyText": "This can be assigned like:\njpaTransactionCancel = (entityManager) -> { entityManager.unwrap(Session.class).cancelQuery();};\nand then you can reuse jpaTransactionCancel below.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435570654", "createdAt": "2020-06-04T21:45:41Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java", "diffHunk": "@@ -170,19 +171,25 @@ public DataStore buildDataStore(EntityManagerFactory entityManagerFactory, Query\n             ObjectProvider<ElideDynamicEntityCompiler> dynamicCompiler, ElideConfigProperties settings)\n             throws ClassNotFoundException {\n         AggregationDataStore aggregationDataStore = null;\n+\tJpaDataStore.JpaTransactionCancel jpaTransactionCancel = null;\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzE0OTQ2OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0Nzo0NFrOGfZLfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo0Nzo0NFrOGfZLfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MTU4MQ==", "bodyText": "This doesn't look right - why are we defining the cancel method twice here and passing it through two separate functions?", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435571581", "createdAt": "2020-06-04T21:47:44Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -376,11 +377,10 @@ default AuditLogger getAuditLogger() {\n      */\n     default DataStore getDataStore(MetaDataStore metaDataStore, AggregationDataStore aggregationDataStore,\n             EntityManagerFactory entityManagerFactory) {\n-\n         DataStore jpaDataStore = new JpaDataStore(\n                 () -> { return entityManagerFactory.createEntityManager(); },\n-                (em -> { return new NonJtaTransaction(em); }));\n-\n+\t\t(em -> { return new NonJtaTransaction(em, em.unwrap(Session.class).cancelQuery()); }),\n+                     (entityManager -> { entityManager.unwrap(Session.class).cancelQuery();}));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzIxNDk2OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoxMzo1NlrOGfZzvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoxMzo1NlrOGfZzvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4MTg4Ng==", "bodyText": "Remove entityManagerFactory as an argument.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435581886", "createdAt": "2020-06-04T22:13:56Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -393,18 +393,19 @@ default DataStore getDataStore(MetaDataStore metaDataStore, AggregationDataStore\n      * @return AggregationDataStore object initialized.\n      */\n     default AggregationDataStore getAggregationDataStore(QueryEngine queryEngine,\n-            Optional<ElideDynamicEntityCompiler> optionalCompiler) {\n+            Optional<ElideDynamicEntityCompiler> optionalCompiler, EntityManagerFactory entityManagerFactory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzIxNjc1OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoxNDozOVrOGfZ03A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoxNDozOVrOGfZ03A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4MjE3Mg==", "bodyText": "We define the transaction cancel method four times.  Let's define this once with a static, final variable and just use that everywhere.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r435582172", "createdAt": "2020-06-04T22:14:39Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -393,18 +393,19 @@ default DataStore getDataStore(MetaDataStore metaDataStore, AggregationDataStore\n      * @return AggregationDataStore object initialized.\n      */\n     default AggregationDataStore getAggregationDataStore(QueryEngine queryEngine,\n-            Optional<ElideDynamicEntityCompiler> optionalCompiler) {\n+            Optional<ElideDynamicEntityCompiler> optionalCompiler, EntityManagerFactory entityManagerFactory) {\n         AggregationDataStore aggregationDataStore = null;\n-\n         if (enableDynamicModelConfig()) {\n             Set<Class<?>> annotatedClasses = getDynamicClassesIfAvailable(optionalCompiler, FromTable.class);\n             annotatedClasses.addAll(getDynamicClassesIfAvailable(optionalCompiler, FromSubquery.class));\n-            aggregationDataStore = new AggregationDataStore(queryEngine, annotatedClasses);\n+\t    aggregationDataStore = new AggregationDataStore(\n+            \t() -> { return entityManagerFactory.createEntityManager(); },\n+                queryEngine, annotatedClass, (entityManager -> { entityManager.unwrap(Session.class).cancelQuery();}));\n         } else {\n-            aggregationDataStore = new AggregationDataStore(queryEngine);\n+            aggregationDataStore = new AggregationDataStore(\n+            \t() -> { return entityManagerFactory.createEntityManager(); },\n+                queryEngine, (entityManager -> { entityManager.unwrap(Session.class).cancelQuery();}));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b916ca0a64e0659854cd15ae47b1b35b0c1260ce"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjQ0NTE1OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/QueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0MDo1OFrOGf5dKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0MDo1OFrOGf5dKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwMDM5Mg==", "bodyText": "Just return a Future here instead of the Implementation.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r436100392", "createdAt": "2020-06-05T18:40:58Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/QueryEngine.java", "diffHunk": "@@ -163,7 +163,7 @@ private void populateMetaData(MetaDataStore metaDataStore) {\n      * @param query The query customized for a particular persistent storage or storage client\n      * @return query results\n      */\n-    public abstract QueryResult executeQuery(Query query);\n+    public abstract FutureImplementation<QueryResult> executeQuery(Query query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9013381cc2c3b0e5c639b3d61dba7211a7c9af33"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjQ0NzY0OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/FutureImplementation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0MTozOVrOGf5eog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo0MTozOVrOGf5eog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwMDc3MA==", "bodyText": "You could make this an inner class of the SQLQueryEngine - not abstract - and it can just call the TransactionCancel member.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r436100770", "createdAt": "2020-06-05T18:41:39Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/FutureImplementation.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+import com.yahoo.elide.datastores.aggregation.query.QueryResult;\n+import com.yahoo.elide.datastores.aggregation.queryengines.sql.query.SQLQueryEngine;\n+\n+import java.util.concurrent.Future;\n+\n+public abstract class FutureImplementation implements Future<QueryResult> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9013381cc2c3b0e5c639b3d61dba7211a7c9af33"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjkwMjgzOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozNToyOFrOGf9-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozNToyOFrOGf9-9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE3NDU4MA==", "bodyText": "So this line creates a new session and then immediately cancels it.  We want to close the existing session - not a new one.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r436174580", "createdAt": "2020-06-05T21:35:28Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -289,4 +291,28 @@ private SQLQuery toPageTotalSQL(SQLQuery sql) {\n     public static String getClassAlias(Class<?> entityClass) {\n         return getTypeAlias(entityClass);\n     }\n+\n+    /**\n+     * Functional interface for describing a method to supply JpaTransaction.\n+     */\n+    @FunctionalInterface\n+    public interface TransactionCancel {\n+        public void cancel(EntityManager entityManager);\n+    }\n+  \n+    public class FutureImplementation implements Future<QueryResult> {\n+        private final TransactionCancel transactionCancel;\n+\tprivate final EntityManagerFactory entityManagerFactory;\n+        /**\n+\t * Cancels transaction\n+         */\n+    \t@Override\n+\tprotected FutureImplementation(EntityManagerFactory entityManagerFactory, TransactionCancel transactionCancel) {\n+\t    this.transactionCancel = transactionCancel;\n+\t    this.entityManagerFactory = entityManagerFactory;\n+\t}\n+    \tpublic boolean cancel(boolean mayInterruptIfRunning) {\n+            transactionCancel.cancel(entityManagerFactory.createEntityManager());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97a518992f9a15ef4ce2c6a9d48fbacabaa1d0"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjkwMzYyOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozNTo1MFrOGf9_dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozNTo1MFrOGf9_dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE3NDcwOA==", "bodyText": "There are several places where spacing is off.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r436174708", "createdAt": "2020-06-05T21:35:50Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -60,13 +61,14 @@\n @Slf4j\n public class SQLQueryEngine extends QueryEngine {\n     private final EntityManagerFactory entityManagerFactory;\n-\n+    private final TransactionCancel transactionCancel;\n     private final SQLReferenceTable referenceTable;\n \n-    public SQLQueryEngine(MetaDataStore metaDataStore, EntityManagerFactory entityManagerFactory, Cache cache) {\n+    public SQLQueryEngine(MetaDataStore metaDataStore, EntityManagerFactory entityManagerFactory, Cache cache, TransactionCancel transactionCancel) {\n         super(metaDataStore, cache);\n         this.entityManagerFactory = entityManagerFactory;\n         this.referenceTable = new SQLReferenceTable(metaDataStore);\n+\tthis.transactionCancel = transactionCancel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97a518992f9a15ef4ce2c6a9d48fbacabaa1d0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjkwNTc2OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozNjo1MlrOGf-A1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozNjo1MlrOGf-A1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE3NTA2MA==", "bodyText": "An inner class can reference the members of the outer class if it is not static.  There is no need to:\n\nDefine private members\nHave a constructor with arguments.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r436175060", "createdAt": "2020-06-05T21:36:52Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -289,4 +291,28 @@ private SQLQuery toPageTotalSQL(SQLQuery sql) {\n     public static String getClassAlias(Class<?> entityClass) {\n         return getTypeAlias(entityClass);\n     }\n+\n+    /**\n+     * Functional interface for describing a method to supply JpaTransaction.\n+     */\n+    @FunctionalInterface\n+    public interface TransactionCancel {\n+        public void cancel(EntityManager entityManager);\n+    }\n+  \n+    public class FutureImplementation implements Future<QueryResult> {\n+        private final TransactionCancel transactionCancel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97a518992f9a15ef4ce2c6a9d48fbacabaa1d0"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjkwODY0OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozODowNlrOGf-CrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozODowNlrOGf-CrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE3NTUzMw==", "bodyText": "Let's find a better name than FutureImplementation.  How about QueryResultFuture?", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r436175533", "createdAt": "2020-06-05T21:38:06Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -289,4 +291,28 @@ private SQLQuery toPageTotalSQL(SQLQuery sql) {\n     public static String getClassAlias(Class<?> entityClass) {\n         return getTypeAlias(entityClass);\n     }\n+\n+    /**\n+     * Functional interface for describing a method to supply JpaTransaction.\n+     */\n+    @FunctionalInterface\n+    public interface TransactionCancel {\n+        public void cancel(EntityManager entityManager);\n+    }\n+  \n+    public class FutureImplementation implements Future<QueryResult> {\n+        private final TransactionCancel transactionCancel;\n+\tprivate final EntityManagerFactory entityManagerFactory;\n+        /**\n+\t * Cancels transaction\n+         */\n+    \t@Override\n+\tprotected FutureImplementation(EntityManagerFactory entityManagerFactory, TransactionCancel transactionCancel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97a518992f9a15ef4ce2c6a9d48fbacabaa1d0"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjkwOTU0OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozODozM1rOGf-DSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTozODozM1rOGf-DSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE3NTY4OQ==", "bodyText": "Add @Override.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r436175689", "createdAt": "2020-06-05T21:38:33Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -289,4 +291,28 @@ private SQLQuery toPageTotalSQL(SQLQuery sql) {\n     public static String getClassAlias(Class<?> entityClass) {\n         return getTypeAlias(entityClass);\n     }\n+\n+    /**\n+     * Functional interface for describing a method to supply JpaTransaction.\n+     */\n+    @FunctionalInterface\n+    public interface TransactionCancel {\n+        public void cancel(EntityManager entityManager);\n+    }\n+  \n+    public class FutureImplementation implements Future<QueryResult> {\n+        private final TransactionCancel transactionCancel;\n+\tprivate final EntityManagerFactory entityManagerFactory;\n+        /**\n+\t * Cancels transaction\n+         */\n+    \t@Override\n+\tprotected FutureImplementation(EntityManagerFactory entityManagerFactory, TransactionCancel transactionCancel) {\n+\t    this.transactionCancel = transactionCancel;\n+\t    this.entityManagerFactory = entityManagerFactory;\n+\t}\n+    \tpublic boolean cancel(boolean mayInterruptIfRunning) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97a518992f9a15ef4ce2c6a9d48fbacabaa1d0"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjkxMzA1OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTo0MDoyNlrOGf-FrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTo0MDoyNlrOGf-FrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE3NjMwMA==", "bodyText": "I don't see the implementation of executeQuery that returns a Future here.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r436176300", "createdAt": "2020-06-05T21:40:26Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -60,13 +61,14 @@\n @Slf4j\n public class SQLQueryEngine extends QueryEngine {\n     private final EntityManagerFactory entityManagerFactory;\n-\n+    private final TransactionCancel transactionCancel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97a518992f9a15ef4ce2c6a9d48fbacabaa1d0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjkxNjgxOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTo0MjoxMFrOGf-H9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTo0MjoxMFrOGf-H9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE3Njg4NQ==", "bodyText": "You are missing a lot of the other Future functions.  There is more than just cancel.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r436176885", "createdAt": "2020-06-05T21:42:10Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -289,4 +291,28 @@ private SQLQuery toPageTotalSQL(SQLQuery sql) {\n     public static String getClassAlias(Class<?> entityClass) {\n         return getTypeAlias(entityClass);\n     }\n+\n+    /**\n+     * Functional interface for describing a method to supply JpaTransaction.\n+     */\n+    @FunctionalInterface\n+    public interface TransactionCancel {\n+        public void cancel(EntityManager entityManager);\n+    }\n+  \n+    public class FutureImplementation implements Future<QueryResult> {\n+        private final TransactionCancel transactionCancel;\n+\tprivate final EntityManagerFactory entityManagerFactory;\n+        /**\n+\t * Cancels transaction\n+         */\n+    \t@Override\n+\tprotected FutureImplementation(EntityManagerFactory entityManagerFactory, TransactionCancel transactionCancel) {\n+\t    this.transactionCancel = transactionCancel;\n+\t    this.entityManagerFactory = entityManagerFactory;\n+\t}\n+    \tpublic boolean cancel(boolean mayInterruptIfRunning) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e97a518992f9a15ef4ce2c6a9d48fbacabaa1d0"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzg1MjIwOnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTozNDo1NVrOGjIdvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTozNDo1NVrOGjIdvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5MjAyOQ==", "bodyText": "Can you mention in the comments that the implementation must be thread-safe?", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439492029", "createdAt": "2020-06-12T15:34:55Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "diffHunk": "@@ -267,4 +267,9 @@ default boolean supportsPagination(Class<?> entityClass, FilterExpression expres\n      * @return UUID id\n      */\n     UUID getRequestId();\n+\n+    /**\n+     * cancel running transaction", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzg1NDkyOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTozNTo0NFrOGjIffQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTozNTo0NFrOGjIffQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5MjQ3Nw==", "bodyText": "You don't need to call run() here.  Calling queryResult.get() should invoke queryResult.run()", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439492477", "createdAt": "2020-06-12T15:35:44Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStoreTransaction.java", "diffHunk": "@@ -52,11 +56,21 @@ public void createObject(Object entity, RequestScope scope) {\n     @Override\n     public Iterable<Object> loadObjects(EntityProjection entityProjection, RequestScope scope) {\n         Query query = buildQuery(entityProjection, scope);\n-        QueryResult result = queryEngine.executeQuery(query);\n-        if (entityProjection.getPagination() != null && entityProjection.getPagination().returnPageTotals()) {\n-            entityProjection.getPagination().setPageTotals(result.getPageTotals());\n+        queryResult = queryEngine.executeQuery(query);\n+        queryResult.run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzg1NzYyOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTozNjozNlrOGjIhUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTozNjozNlrOGjIhUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5Mjk0NA==", "bodyText": "Don't set null here.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439492944", "createdAt": "2020-06-12T15:36:36Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStoreTransaction.java", "diffHunk": "@@ -52,11 +56,21 @@ public void createObject(Object entity, RequestScope scope) {\n     @Override\n     public Iterable<Object> loadObjects(EntityProjection entityProjection, RequestScope scope) {\n         Query query = buildQuery(entityProjection, scope);\n-        QueryResult result = queryEngine.executeQuery(query);\n-        if (entityProjection.getPagination() != null && entityProjection.getPagination().returnPageTotals()) {\n-            entityProjection.getPagination().setPageTotals(result.getPageTotals());\n+        queryResult = queryEngine.executeQuery(query);\n+        queryResult.run();\n+        try {\n+            QueryResult result = queryResult.get();\n+            if (entityProjection.getPagination() != null && entityProjection.getPagination().returnPageTotals()) {\n+                entityProjection.getPagination().setPageTotals(result.getPageTotals());\n+            }\n+            return result.getData();\n+        } catch (TransactionException e) {\n+            throw new TransactionException(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzg2NDExOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTozODoyM1rOGjIlQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTozODozOVrOGjIl2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5Mzk1NQ==", "bodyText": "cache is much more readable than cx.  Can you revert back to the more readable variable names?", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439493955", "createdAt": "2020-06-12T15:38:23Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -60,13 +62,15 @@\n @Slf4j\n public class SQLQueryEngine extends QueryEngine {\n     private final EntityManagerFactory entityManagerFactory;\n-\n+    private final TransactionCancel transactionCancel;\n     private final SQLReferenceTable referenceTable;\n+    private EntityManager entityManager;\n \n-    public SQLQueryEngine(MetaDataStore metaDataStore, EntityManagerFactory entityManagerFactory, Cache cache) {\n-        super(metaDataStore, cache);\n-        this.entityManagerFactory = entityManagerFactory;\n-        this.referenceTable = new SQLReferenceTable(metaDataStore);\n+    public SQLQueryEngine(MetaDataStore mDStore, EntityManagerFactory emFactory, Cache cx, TransactionCancel txCancel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5NDEwNA==", "bodyText": "Same for mDStore, qEngine, emFactory, etc.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439494104", "createdAt": "2020-06-12T15:38:39Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -60,13 +62,15 @@\n @Slf4j\n public class SQLQueryEngine extends QueryEngine {\n     private final EntityManagerFactory entityManagerFactory;\n-\n+    private final TransactionCancel transactionCancel;\n     private final SQLReferenceTable referenceTable;\n+    private EntityManager entityManager;\n \n-    public SQLQueryEngine(MetaDataStore metaDataStore, EntityManagerFactory entityManagerFactory, Cache cache) {\n-        super(metaDataStore, cache);\n-        this.entityManagerFactory = entityManagerFactory;\n-        this.referenceTable = new SQLReferenceTable(metaDataStore);\n+    public SQLQueryEngine(MetaDataStore mDStore, EntityManagerFactory emFactory, Cache cx, TransactionCancel txCancel) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5Mzk1NQ=="}, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzg3NDgzOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0MToyMVrOGjIr-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0MToyMVrOGjIr-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5NTY3Mg==", "bodyText": "This inner class is missing javadoc.  The linter will complain.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439495672", "createdAt": "2020-06-12T15:41:21Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SQLQueryEngine.java", "diffHunk": "@@ -289,4 +302,27 @@ private SQLQuery toPageTotalSQL(SQLQuery sql) {\n     public static String getClassAlias(Class<?> entityClass) {\n         return getTypeAlias(entityClass);\n     }\n+\n+    /**\n+     * Functional interface for describing a method to supply JpaTransaction.\n+     */\n+    @FunctionalInterface\n+    public interface TransactionCancel {\n+        public void cancel(EntityManager entityManager);\n+    }\n+\n+    public class QueryResultFuture<V> extends FutureTask<V> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzg4NTY3OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/QueryEngineTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0NDo0NFrOGjIyyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0NDo0NFrOGjIyyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5NzQxOQ==", "bodyText": "This code is violating DRY (do not repeat yourself).  Make a function in this class to avoid repeating the same block over and over.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439497419", "createdAt": "2020-06-12T15:44:44Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/QueryEngineTest.java", "diffHunk": "@@ -55,8 +58,20 @@ public void testFullTableLoad() {\n                 .timeDimension(toProjection(playerStatsTable.getTimeDimension(\"recordedDate\"), TimeGrain.DAY))\n                 .build();\n \n-        List<Object> results = StreamSupport.stream(engine.executeQuery(query).getData().spliterator(), false)\n+        List<Object> results;\n+        FutureTask<QueryResult> queryResult = engine.executeQuery(query);\n+        queryResult.run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzg4Nzg2OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SubselectTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0NToyNVrOGjI0Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0NjoyNVrOGjI2gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5Nzc5MA==", "bodyText": "Remove all references to queryResult.run() in this PR.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439497790", "createdAt": "2020-06-12T15:45:25Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SubselectTest.java", "diffHunk": "@@ -87,7 +92,10 @@ public void testJoinToFilter() throws Exception {\n                         PlayerStats.class, false))\n                 .build();\n \n-        List<Object> results = StreamSupport.stream(engine.executeQuery(query).getData().spliterator(), false)\n+        FutureTask<QueryResult> queryResult = engine.executeQuery(query);\n+        queryResult.run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5ODM3MA==", "bodyText": "The delta between the original line and your modifications can be just 4 characters:\nList<Object> results = StreamSupport.stream(engine.executeQuery(query).get().getData().spliterator(), false)", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439498370", "createdAt": "2020-06-12T15:46:25Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/SubselectTest.java", "diffHunk": "@@ -87,7 +92,10 @@ public void testJoinToFilter() throws Exception {\n                         PlayerStats.class, false))\n                 .build();\n \n-        List<Object> results = StreamSupport.stream(engine.executeQuery(query).getData().spliterator(), false)\n+        FutureTask<QueryResult> queryResult = engine.executeQuery(query);\n+        queryResult.run();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5Nzc5MA=="}, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzg5NTU1OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/ViewTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0Nzo0MFrOGjI4-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0Nzo0MFrOGjI4-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5OTAwMg==", "bodyText": "For UnitTests, you can simply have the test throw Exception and avoid all these try catch blocks.\nLook at my prior comments - all of this can be changed by just adding 4 characters - without these large blocks of duplicate code.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439499002", "createdAt": "2020-06-12T15:47:40Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/ViewTest.java", "diffHunk": "@@ -46,8 +50,20 @@ public void testViewAttribute() {\n                 .sorting(new SortingImpl(sortMap, PlayerStatsWithView.class, dictionary))\n                 .build();\n \n-        List<Object> results = StreamSupport.stream(engine.executeQuery(query).getData().spliterator(), false)\n+        List<Object> results;\n+        FutureTask<QueryResult> queryResult = engine.executeQuery(query);\n+        queryResult.run();\n+        try {\n+            QueryResult result = queryResult.get();\n+            results = StreamSupport.stream(result.getData().spliterator(), false)\n                 .collect(Collectors.toList());\n+        } catch (TransactionException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzkwMjc2OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/JpaDataStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0OTo0N1rOGjI9gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo0OTo0N1rOGjI9gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwMDE2MQ==", "bodyText": "You shouldn't need to pass transactionCancel as an argument to the supplier.  When the supplier is created, it can have a reference to transactionSupplier through closure.  Remove this extra argument.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439500161", "createdAt": "2020-06-12T15:49:47Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/JpaDataStore.java", "diffHunk": "@@ -73,15 +78,15 @@ public void populateEntityDictionary(EntityDictionary dictionary) {\n     @Override\n     public DataStoreTransaction beginReadTransaction() {\n         EntityManager entityManager = entityManagerSupplier.get();\n-        JpaTransaction transaction = readTransactionSupplier.get(entityManager);\n+        JpaTransaction transaction = readTransactionSupplier.get(entityManager, jpaTransactionCancel);\n         transaction.begin();\n         return transaction;\n     }\n \n     @Override\n     public DataStoreTransaction beginTransaction() {\n         EntityManager entityManager = entityManagerSupplier.get();\n-        JpaTransaction transaction = writeTransactionSupplier.get(entityManager);\n+        JpaTransaction transaction = writeTransactionSupplier.get(entityManager, jpaTransactionCancel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzkwOTIyOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-jpa/src/test/java/com/yahoo/elide/datastores/jpa/JpaDataStoreHarness.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo1MTo0M1rOGjJBlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo1MTo0M1rOGjJBlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwMTIwNQ==", "bodyText": "So for example, there is no need to include txCancel as a parameter to the supplier.  Rewrite like:\n(entityManager) -> { return new NonJtaTransaction(entityManager, jpaTransactionCancel); }", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439501205", "createdAt": "2020-06-12T15:51:43Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-jpa/src/test/java/com/yahoo/elide/datastores/jpa/JpaDataStoreHarness.java", "diffHunk": "@@ -96,7 +99,8 @@ public JpaDataStoreHarness() {\n \n         store = new JpaDataStore(\n                 () -> { return emf.createEntityManager(); },\n-                (entityManager) -> { return new NonJtaTransaction(entityManager); }\n+                (entityManager, txCancel) -> { return new NonJtaTransaction(entityManager, txCancel); },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzkxNjU3OnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo1NDowMVrOGjJGXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo1NDowMVrOGjJGXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwMjQzMQ==", "bodyText": "Because the signatures are the same, you may be able to define this once as a Function rather than the concrete types above - and just use the single reference below.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439502431", "createdAt": "2020-06-12T15:54:01Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java", "diffHunk": "@@ -56,6 +58,10 @@\n      * @return An instance of ElideDynamicEntityCompiler.\n      * @throws Exception Exception thrown.\n      */\n+\n+     private final AbstractJpaTransaction.JpaTransactionCancel jTC = (e) -> { e.unwrap(Session.class).cancelQuery(); };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzkxOTY5OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo1NDo1OVrOGjJIYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo1NDo1OVrOGjJIYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwMjk0NA==", "bodyText": "Remove txCancel from the supplier.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439502944", "createdAt": "2020-06-12T15:54:59Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -376,10 +382,10 @@ default AuditLogger getAuditLogger() {\n      */\n     default DataStore getDataStore(MetaDataStore metaDataStore, AggregationDataStore aggregationDataStore,\n             EntityManagerFactory entityManagerFactory) {\n-\n         DataStore jpaDataStore = new JpaDataStore(\n                 () -> { return entityManagerFactory.createEntityManager(); },\n-                (em -> { return new NonJtaTransaction(em); }));\n+                ((em, txCancel) -> { return new NonJtaTransaction(em, txCancel); }),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzkyMTIxOnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo1NToyMlrOGjJJUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTo1NToyMlrOGjJJUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwMzE4Ng==", "bodyText": "See if these can be consolidated into a single variable using one of Java's built in Function classes.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r439503186", "createdAt": "2020-06-12T15:55:22Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -56,6 +58,10 @@\n  */\n public interface ElideStandaloneSettings {\n     /* Elide settings */\n+\n+     public final AbstractJpaTransaction.JpaTransactionCancel JTC = (m) -> { m.unwrap(Session.class).cancelQuery(); };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ce9e801ed051344593d1af60db17481904b045"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTM5NjU3OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/JpaDataStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowODo0MVrOGlKXSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowODo0MVrOGlKXSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMDI5Ng==", "bodyText": "Remove this comment.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r441620296", "createdAt": "2020-06-17T15:08:41Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/JpaDataStore.java", "diffHunk": "@@ -8,7 +8,7 @@\n import com.yahoo.elide.core.DataStoreTransaction;\n import com.yahoo.elide.core.EntityDictionary;\n import com.yahoo.elide.core.datastore.JPQLDataStore;\n-import com.yahoo.elide.datastores.jpa.transaction.AbstractJpaTransaction;\n+//import com.yahoo.elide.datastores.jpa.transaction.AbstractJpaTransaction;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b08031c01a3228c6f335ba5b1d51b0da68f8e6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTQwMjc1OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/transaction/JtaTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowOTo1N1rOGlKbMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowOTo1N1rOGlKbMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMTI5Ng==", "bodyText": "Unify the variable names txCancel and jpaTransactionCancel.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r441621296", "createdAt": "2020-06-17T15:09:57Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-jpa/src/main/java/com/yahoo/elide/datastores/jpa/transaction/JtaTransaction.java", "diffHunk": "@@ -22,11 +23,11 @@\n @Slf4j\n public class JtaTransaction extends AbstractJpaTransaction {\n     private final UserTransaction transaction;\n-    public JtaTransaction(EntityManager entityManager, JpaTransactionCancel jpaTransactionCancel) {\n+    public JtaTransaction(EntityManager entityManager, Consumer<EntityManager> jpaTransactionCancel) {\n         this(entityManager, lookupUserTransaction(), jpaTransactionCancel);\n     }\n \n-    public JtaTransaction(EntityManager entityManager, UserTransaction transaction, JpaTransactionCancel txCancel) {\n+    public JtaTransaction(EntityManager entityManager, UserTransaction transaction, Consumer<EntityManager> txCancel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b08031c01a3228c6f335ba5b1d51b0da68f8e6"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTQxNjQ3OnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxMjo0M1rOGlKkFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxMjo0M1rOGlKkFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMzU3Mg==", "bodyText": "txCancel was a better name than func.  I would change everywhere.", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r441623572", "createdAt": "2020-06-17T15:12:43Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java", "diffHunk": "@@ -59,8 +60,7 @@\n      * @throws Exception Exception thrown.\n      */\n \n-     private final AbstractJpaTransaction.JpaTransactionCancel jTC = (e) -> { e.unwrap(Session.class).cancelQuery(); };\n-     private final SQLQueryEngine.TransactionCancel txCancel = (em) -> { em.unwrap(Session.class).cancelQuery(); };\n+     private final Consumer<EntityManager> func = (em) -> { em.unwrap(Session.class).cancelQuery(); };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b08031c01a3228c6f335ba5b1d51b0da68f8e6"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTQyMTI3OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxMzozM1rOGlKm5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxMzozM1rOGlKm5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNDI5NQ==", "bodyText": "Rename to TXCANCEL", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r441624295", "createdAt": "2020-06-17T15:13:33Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -59,8 +59,7 @@\n public interface ElideStandaloneSettings {\n     /* Elide settings */\n \n-     public final AbstractJpaTransaction.JpaTransactionCancel JTC = (m) -> { m.unwrap(Session.class).cancelQuery(); };\n-     public final SQLQueryEngine.TransactionCancel TXCANCEL = (m) -> { m.unwrap(Session.class).cancelQuery(); };\n+     public final Consumer<EntityManager> FUNC = (em) -> { em.unwrap(Session.class).cancelQuery(); };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b08031c01a3228c6f335ba5b1d51b0da68f8e6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTQyNTY4OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/QueryEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDozN1rOGlKp1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDozN1rOGlKp1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNTA0NA==", "bodyText": "Let's add javadoc for cancel (close isn't needed because it is an Override).", "url": "https://github.com/yahoo/elide/pull/1367#discussion_r441625044", "createdAt": "2020-06-17T15:14:37Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/QueryEngine.java", "diffHunk": "@@ -157,6 +156,7 @@ private void populateMetaData(MetaDataStore metaDataStore) {\n     public interface Transaction extends AutoCloseable {\n         @Override\n         void close();\n+        void cancel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b08031c01a3228c6f335ba5b1d51b0da68f8e6"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 990, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}