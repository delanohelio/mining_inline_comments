{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTgwOTg3", "number": 1363, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMDozMzo1MVrOEBjlOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwOToxNjoyOVrOEBqa-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDY3MDAzOnYy", "diffSide": "RIGHT", "path": "elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMDozMzo1MVrOGdeVcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTowODozM1rOGd2ONA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1ODg5Nw==", "bodyText": "Since this is a builder, why is there no\n    . supportLegacyDialect(boolean)", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433558897", "createdAt": "2020-06-02T00:33:51Z", "author": {"login": "wcekan"}, "path": "elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java", "diffHunk": "@@ -604,7 +607,17 @@ private boolean lineageContainsType(PathMetaData other) {\n      * @param info Basic service information that cannot be generated\n      */\n     public SwaggerBuilder(EntityDictionary dictionary, Info info) {\n+        this(dictionary, info, true);\n+    }\n+\n+    /**\n+     * @param dictionary The entity dictionary\n+     * @param info Basic service information that cannot be generated\n+     * @param supportLegacyDialect Whether or not to support the legacy dialect\n+     */\n+    public SwaggerBuilder(EntityDictionary dictionary, Info info, boolean supportLegacyDialect) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efd93dc06c3e819917c7c07c7b931d18dbe4deba"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzczNTczNw==", "bodyText": "So does this also need to be exposed as an configuration option for elide-spring-boot-starter or change the autoconfiguration to disable the legacy dialect?", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433735737", "createdAt": "2020-06-02T09:15:51Z", "author": {"login": "whgibbo"}, "path": "elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java", "diffHunk": "@@ -604,7 +607,17 @@ private boolean lineageContainsType(PathMetaData other) {\n      * @param info Basic service information that cannot be generated\n      */\n     public SwaggerBuilder(EntityDictionary dictionary, Info info) {\n+        this(dictionary, info, true);\n+    }\n+\n+    /**\n+     * @param dictionary The entity dictionary\n+     * @param info Basic service information that cannot be generated\n+     * @param supportLegacyDialect Whether or not to support the legacy dialect\n+     */\n+    public SwaggerBuilder(EntityDictionary dictionary, Info info, boolean supportLegacyDialect) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1ODg5Nw=="}, "originalCommit": {"oid": "efd93dc06c3e819917c7c07c7b931d18dbe4deba"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MDI2MA==", "bodyText": "The auto-configuration has the legacy dialect disabled by default.  Also, you can auto-configure the Swagger object construction to turn on/off the dialects you want.", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433950260", "createdAt": "2020-06-02T15:08:33Z", "author": {"login": "aklish"}, "path": "elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java", "diffHunk": "@@ -604,7 +607,17 @@ private boolean lineageContainsType(PathMetaData other) {\n      * @param info Basic service information that cannot be generated\n      */\n     public SwaggerBuilder(EntityDictionary dictionary, Info info) {\n+        this(dictionary, info, true);\n+    }\n+\n+    /**\n+     * @param dictionary The entity dictionary\n+     * @param info Basic service information that cannot be generated\n+     * @param supportLegacyDialect Whether or not to support the legacy dialect\n+     */\n+    public SwaggerBuilder(EntityDictionary dictionary, Info info, boolean supportLegacyDialect) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1ODg5Nw=="}, "originalCommit": {"oid": "efd93dc06c3e819917c7c07c7b931d18dbe4deba"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTc5MDY1OnYy", "diffSide": "RIGHT", "path": "elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwOToxNjoyOVrOGdpJpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTowOToxOVrOGd2Qaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzczNjEwMg==", "bodyText": "I'm new to Elide, but would I be right in thinking that it only supports one dialect..  So for users that want to use the legacy dialect, then the RSQL examples should not be displayed.", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433736102", "createdAt": "2020-06-02T09:16:29Z", "author": {"login": "whgibbo"}, "path": "elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java", "diffHunk": "@@ -509,19 +510,21 @@ private Parameter getSortParameter() {\n                         .description(\"Filters the collection of \" + typeName + \" using a 'joined' RSQL expression\"));\n             }\n \n-            for (Operator op : filterOperators) {\n-                attributeNames.forEach((name) -> {\n-                    Class<?> attributeClass = dictionary.getType(type, name);\n-\n-                    /* Only filter attributes that can be assigned to strings or primitives */\n-                    if (attributeClass.isPrimitive() || String.class.isAssignableFrom(attributeClass)) {\n-                        params.add(new QueryParameter()\n-                                .type(\"string\")\n-                                .name(\"filter[\" + typeName + \".\" + name + \"][\" + op.getNotation() + \"]\")\n-                                .description(\"Filters the collection of \" + typeName + \" by the attribute \"\n-                                        + name + \" \" + \"using the operator \" + op.getNotation()));\n-                    }\n-                });\n+            if (supportLegacyDialect) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efd93dc06c3e819917c7c07c7b931d18dbe4deba"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MDgyNw==", "bodyText": "Elide supports multiple dialects enabled at the same time.", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433950827", "createdAt": "2020-06-02T15:09:19Z", "author": {"login": "aklish"}, "path": "elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java", "diffHunk": "@@ -509,19 +510,21 @@ private Parameter getSortParameter() {\n                         .description(\"Filters the collection of \" + typeName + \" using a 'joined' RSQL expression\"));\n             }\n \n-            for (Operator op : filterOperators) {\n-                attributeNames.forEach((name) -> {\n-                    Class<?> attributeClass = dictionary.getType(type, name);\n-\n-                    /* Only filter attributes that can be assigned to strings or primitives */\n-                    if (attributeClass.isPrimitive() || String.class.isAssignableFrom(attributeClass)) {\n-                        params.add(new QueryParameter()\n-                                .type(\"string\")\n-                                .name(\"filter[\" + typeName + \".\" + name + \"][\" + op.getNotation() + \"]\")\n-                                .description(\"Filters the collection of \" + typeName + \" by the attribute \"\n-                                        + name + \" \" + \"using the operator \" + op.getNotation()));\n-                    }\n-                });\n+            if (supportLegacyDialect) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzczNjEwMg=="}, "originalCommit": {"oid": "efd93dc06c3e819917c7c07c7b931d18dbe4deba"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 986, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}