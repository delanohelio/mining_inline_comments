{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyNzY1MjQ3", "number": 1449, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMjowMTowMlrOET3BEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozNDoxNlrOEWR7XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjU5NzkzOnYy", "diffSide": "RIGHT", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigHelpers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMjowMTowMlrOG51WCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMjowMTowMlrOG51WCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5NjAxMQ==", "bodyText": "I think we can remove this function and also readConfigFile (see later comment).", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r463296011", "createdAt": "2020-07-30T22:01:02Z", "author": {"login": "aklish"}, "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigHelpers.java", "diffHunk": "@@ -190,4 +156,40 @@ public static String readConfigFile(File configFile) {\n         }\n         return sb.toString();\n     }\n+\n+    /**\n+     * Read config from classpath.\n+     * @param resourcePath : path to resource\n+     * @return content of resource\n+     * @throws IOException\n+     */\n+    public static String readResource(String resourcePath) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a61ba91f0205090b43eeacff867b01d7f4805b"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjYwNDk2OnYy", "diffSide": "RIGHT", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMjowMzozNVrOG51aMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMjowMzozNVrOG51aMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5NzA3NQ==", "bodyText": "I feel like this is the best place to construct the spring resource URL with either file:// or resource://.\nthis.configDir value could actually be a URL containing file:// or resource:// and then used for loading security, variables, and tables (all using spring resource loader).", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r463297075", "createdAt": "2020-07-30T22:03:35Z", "author": {"login": "aklish"}, "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "diffHunk": "@@ -53,11 +53,28 @@\n     private static final String SQL_SPLIT_REGEX = \"\\\\s+\";\n     private static final String SEMI_COLON = \";\";\n     private static final Pattern HANDLEBAR_REGEX = Pattern.compile(\"<%(.*?)%>\");\n+    private static final String RESOURCES = \"resources\";\n+    private static final int RESOURCE_LENGTH = 10; //\"resources/\".length()\n+    private static final String CLASSPATH_PATTERN = \"classpath*:\";\n+    private static final String FILEPATH_PATTERN = \"file://\";\n+    private static final String HJSON_EXTN = \"*.hjson\";\n \n     private ElideTableConfig elideTableConfig;\n     private ElideSecurityConfig elideSecurityConfig;\n     private Map<String, Object> variables;\n     private String configDir;\n+    private boolean configInClassPath;\n+\n+    public DynamicConfigValidator(String configDir) {\n+        File config = new File(configDir);\n+\n+        if (config.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a61ba91f0205090b43eeacff867b01d7f4805b"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzk2ODkwOnYy", "diffSide": "RIGHT", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/Config.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMTowNVrOG9gTzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMTowNVrOG9gTzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NTY3OQ==", "bodyText": "Should forward slash here also be File.separator?", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r467145679", "createdAt": "2020-08-07T16:31:05Z", "author": {"login": "aklish"}, "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/Config.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers;\n+\n+import java.io.File;\n+/**\n+ * Dynamic Config enum.\n+ */\n+public enum Config {\n+\n+    TABLE(\"table\",\n+          \"tables\" + File.separator,\n+          \"/elideTableSchema.json\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c2f93de2eed911a6f58e3dfff04b6548ded94d8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzk3MjIwOnYy", "diffSide": "RIGHT", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigSchemaValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMjowN1rOG9gV2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMjowN1rOG9gV2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NjIwMg==", "bodyText": "A method like this should either return false or throw an exception but not both.  Otherwise the contract is confusing.", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r467146202", "createdAt": "2020-08-07T16:32:07Z", "author": {"login": "aklish"}, "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigSchemaValidator.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.main.JsonSchema;\n+import com.github.fge.jsonschema.main.JsonSchemaFactory;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+\n+/**\n+ * Dynamic Model Schema validation.\n+ */\n+@Slf4j\n+public class DynamicConfigSchemaValidator {\n+\n+    private static final JsonSchemaFactory FACTORY = JsonSchemaFactory.byDefault();\n+    private JsonSchema tableSchema;\n+    private JsonSchema securitySchema;\n+    private JsonSchema variableSchema;\n+\n+    public DynamicConfigSchemaValidator() {\n+        tableSchema = loadSchema(Config.TABLE.getConfigSchema());\n+        securitySchema = loadSchema(Config.SECURITY.getConfigSchema());\n+        variableSchema = loadSchema(Config.VARIABLE.getConfigSchema());\n+    }\n+    /**\n+     *  Verify config against schema.\n+     * @param configType\n+     * @param jsonConfig\n+     * @return whether config is valid\n+     * @throws IOException\n+     * @throws ProcessingException\n+     */\n+    public boolean verifySchema(Config configType, String jsonConfig) throws IOException, ProcessingException {\n+        ProcessingReport results = null;\n+        boolean isSuccess = false;\n+\n+        switch (configType) {\n+        case TABLE :\n+            results = this.tableSchema.validate(new ObjectMapper().readTree(jsonConfig));\n+            break;\n+        case SECURITY :\n+            results = this.securitySchema.validate(new ObjectMapper().readTree(jsonConfig));\n+            break;\n+        case VARIABLE :\n+            results = this.variableSchema.validate(new ObjectMapper().readTree(jsonConfig));\n+            break;\n+        default :\n+            log.error(\"Not a valid config type :\" + configType);\n+            return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c2f93de2eed911a6f58e3dfff04b6548ded94d8"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzk3ODUyOnYy", "diffSide": "RIGHT", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozNDoxNlrOG9gZ6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozNDoxNlrOG9gZ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NzI0MA==", "bodyText": "Why not just new HashMap<>?", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r467147240", "createdAt": "2020-08-07T16:34:16Z", "author": {"login": "aklish"}, "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "diffHunk": "@@ -53,11 +56,29 @@\n     private static final String SQL_SPLIT_REGEX = \"\\\\s+\";\n     private static final String SEMI_COLON = \";\";\n     private static final Pattern HANDLEBAR_REGEX = Pattern.compile(\"<%(.*?)%>\");\n+    private static final String RESOURCES = \"resources\";\n+    private static final int RESOURCE_LENGTH = 10; //\"resources/\".length()\n+    private static final String CLASSPATH_PATTERN = \"classpath*:\";\n+    private static final String FILEPATH_PATTERN = \"file:\";\n+    private static final String HJSON_EXTN = \"**/*.hjson\";\n \n-    private ElideTableConfig elideTableConfig;\n-    private ElideSecurityConfig elideSecurityConfig;\n-    private Map<String, Object> variables;\n+    private ElideTableConfig elideTableConfig = new ElideTableConfig();\n+    private ElideSecurityConfig elideSecurityConfig = new ElideSecurityConfig();\n+    private Map<String, Object> variables = Collections.<String, Object>emptyMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c2f93de2eed911a6f58e3dfff04b6548ded94d8"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1015, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}