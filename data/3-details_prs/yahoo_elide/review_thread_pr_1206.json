{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNDk1MzMy", "number": 1206, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzowNzo0M1rODkdRuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDozODowNFrODlMcUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTU1MDAwOnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/security/AuthenticationUser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzowNzo0M1rOFwyqyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzowNzo0M1rOFwyqyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcwNjEyMw==", "bodyText": "Technically Spring Security", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r386706123", "createdAt": "2020-03-02T23:07:43Z", "author": {"login": "codingwhatever"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/security/AuthenticationUser.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+package com.yahoo.elide.spring.security;\n+\n+import com.yahoo.elide.security.User;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.GrantedAuthority;\n+\n+/**\n+ * Elide User object for Spring Boot.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24267aeadf35624972e842ac7db815c2ffde59"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTU5NjgzOnYy", "diffSide": "RIGHT", "path": "elide-annotations/src/main/java/com/yahoo/elide/security/checks/prefab/Role.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzoyODowMFrOFwzG7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjo1Mjo0M1rOFxOKSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcxMzMyNQ==", "bodyText": "How (if at all) will the Role class here relate to https://docs.spring.io/spring-security/site/docs/4.2.12.RELEASE/apidocs/org/springframework/security/core/GrantedAuthority.html in https://docs.spring.io/spring-security/site/docs/4.2.12.RELEASE/apidocs/org/springframework/security/core/Authentication.html for the spring security use case?", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r386713325", "createdAt": "2020-03-02T23:28:00Z", "author": {"login": "codingwhatever"}, "path": "elide-annotations/src/main/java/com/yahoo/elide/security/checks/prefab/Role.java", "diffHunk": "@@ -31,4 +31,19 @@ public boolean ok(User user) {\n             return false;\n         }\n     }\n+\n+    /**\n+     * Check which verifies if the user is a member of a particular role.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24267aeadf35624972e842ac7db815c2ffde59"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE1NjU1Mw==", "bodyText": "GrantedAuthority can be mapped to a string.  You would pass in the string representation of the GrantedAuthority in that case.", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387156553", "createdAt": "2020-03-03T16:52:43Z", "author": {"login": "aklish"}, "path": "elide-annotations/src/main/java/com/yahoo/elide/security/checks/prefab/Role.java", "diffHunk": "@@ -31,4 +31,19 @@ public boolean ok(User user) {\n             return false;\n         }\n     }\n+\n+    /**\n+     * Check which verifies if the user is a member of a particular role.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcxMzMyNQ=="}, "originalCommit": {"oid": "4d24267aeadf35624972e842ac7db815c2ffde59"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTYxNTU0OnYy", "diffSide": "LEFT", "path": "elide-annotations/src/main/java/com/yahoo/elide/security/User.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzozNjo0M1rOFwzSrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjo1Mzo0NFrOFxOM7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcxNjMzMw==", "bodyText": "Are there any known use cases that would not be supported by Principal?", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r386716333", "createdAt": "2020-03-02T23:36:43Z", "author": {"login": "codingwhatever"}, "path": "elide-annotations/src/main/java/com/yahoo/elide/security/User.java", "diffHunk": "@@ -1,19 +1,28 @@\n /*\n- * Copyright 2016, Yahoo Inc.\n+ * Copyright 2020, Yahoo Inc.\n  * Licensed under the Apache License, Version 2.0\n  * See LICENSE file in project root for terms.\n  */\n package com.yahoo.elide.security;\n \n import lombok.Getter;\n+import java.security.Principal;\n \n /**\n  * Wrapper for opaque user passed in every request.\n  */\n public class User {\n-    @Getter private final Object opaqueUser;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24267aeadf35624972e842ac7db815c2ffde59"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE1NzIzMQ==", "bodyText": "Not that I can think of.  Spring maps everything down to a subclass of Principal. JAXRS has both the SecurityContext and the Principal.  Where we have used JAXRS - we tend to put all the user bits into a subclass of Principal.", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387157231", "createdAt": "2020-03-03T16:53:44Z", "author": {"login": "aklish"}, "path": "elide-annotations/src/main/java/com/yahoo/elide/security/User.java", "diffHunk": "@@ -1,19 +1,28 @@\n /*\n- * Copyright 2016, Yahoo Inc.\n+ * Copyright 2020, Yahoo Inc.\n  * Licensed under the Apache License, Version 2.0\n  * See LICENSE file in project root for terms.\n  */\n package com.yahoo.elide.security;\n \n import lombok.Getter;\n+import java.security.Principal;\n \n /**\n  * Wrapper for opaque user passed in every request.\n  */\n public class User {\n-    @Getter private final Object opaqueUser;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcxNjMzMw=="}, "originalCommit": {"oid": "4d24267aeadf35624972e842ac7db815c2ffde59"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjU2OTc1OnYy", "diffSide": "RIGHT", "path": "elide-annotations/src/main/java/com/yahoo/elide/security/RequestScope.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzowMjo1N1rOFx1wVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoyNDowMVrOFx2fdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNTI3MA==", "bodyText": "@aklish Is this all that is left in RequestScope?", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387805270", "createdAt": "2020-03-04T17:02:57Z", "author": {"login": "wcekan"}, "path": "elide-annotations/src/main/java/com/yahoo/elide/security/RequestScope.java", "diffHunk": "@@ -1,16 +1,13 @@\n /*\n- * Copyright 2016, Yahoo Inc.\n+ * Copyright 2020, Yahoo Inc.\n  * Licensed under the Apache License, Version 2.0\n  * See LICENSE file in project root for terms.\n  */\n package com.yahoo.elide.security;\n \n-import java.util.Set;\n-\n /**\n  * The request scope interface passed to checks.\n  */\n public interface RequestScope {\n     User getUser();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNzMzMw==", "bodyText": "For now - yes.", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387817333", "createdAt": "2020-03-04T17:24:01Z", "author": {"login": "aklish"}, "path": "elide-annotations/src/main/java/com/yahoo/elide/security/RequestScope.java", "diffHunk": "@@ -1,16 +1,13 @@\n /*\n- * Copyright 2016, Yahoo Inc.\n+ * Copyright 2020, Yahoo Inc.\n  * Licensed under the Apache License, Version 2.0\n  * See LICENSE file in project root for terms.\n  */\n package com.yahoo.elide.security;\n \n-import java.util.Set;\n-\n /**\n  * The request scope interface passed to checks.\n  */\n public interface RequestScope {\n     User getUser();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNTI3MA=="}, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjYwMzUxOnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoxMjo0M1rOFx2Frg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoyNDozMVrOFx2gdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxMDczNA==", "bodyText": "Should this be Principal?", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387810734", "createdAt": "2020-03-04T17:12:43Z", "author": {"login": "wcekan"}, "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "diffHunk": "@@ -155,7 +155,7 @@ public void serialize(Object obj, JsonGenerator jsonGenerator,\n      * @param opaqueUser the opaque user\n      * @return Elide response object\n      */\n-    public ElideResponse get(String path, MultivaluedMap<String, String> queryParams, Object opaqueUser) {\n+    public ElideResponse get(String path, MultivaluedMap<String, String> queryParams, User opaqueUser) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNzU5MQ==", "bodyText": "Elide deals with User directly so it can provide common checks (like role checks out of the box).", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387817591", "createdAt": "2020-03-04T17:24:31Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "diffHunk": "@@ -155,7 +155,7 @@ public void serialize(Object obj, JsonGenerator jsonGenerator,\n      * @param opaqueUser the opaque user\n      * @return Elide response object\n      */\n-    public ElideResponse get(String path, MultivaluedMap<String, String> queryParams, Object opaqueUser) {\n+    public ElideResponse get(String path, MultivaluedMap<String, String> queryParams, User opaqueUser) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxMDczNA=="}, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjYwOTYyOnYy", "diffSide": "LEFT", "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoxNDoyMFrOFx2JVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoxNDoyMFrOFx2JVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxMTY3MA==", "bodyText": "@aklish We used this for hydrating the opaqueUser bean in the context of the current Hibernate transaction.\nHow will lifecycle work then without this?  The transaction is not created by us when we call Elide.", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387811670", "createdAt": "2020-03-04T17:14:20Z", "author": {"login": "wcekan"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "diffHunk": "@@ -33,16 +32,6 @@\n         NONE\n     }\n \n-    /**\n-     * Wrap the opaque user.\n-     *\n-     * @param opaqueUser the opaque user\n-     * @return wrapped user context\n-     */\n-    default User accessUser(Object opaqueUser) {\n-        return new User(opaqueUser);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjYxODQ0OnYy", "diffSide": "LEFT", "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoxNjo1MVrOFx2PEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoxNjo1MVrOFx2PEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxMzEzOA==", "bodyText": "User cannot be hydrated before the transaction is available.", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387813138", "createdAt": "2020-03-04T17:16:51Z", "author": {"login": "wcekan"}, "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "diffHunk": "@@ -259,17 +259,16 @@ public HandlerResult visit(String path, RequestScope requestScope, BaseVisitor v\n      * Handle JSON API requests.\n      *\n      * @param isReadOnly if the transaction is read only\n-     * @param opaqueUser the user object from the container\n+     * @param user the user object from the container\n      * @param transaction a transaction supplier\n      * @param handler a function that creates the request scope and request handler\n      * @return the response\n      */\n-    protected ElideResponse handleRequest(boolean isReadOnly, Object opaqueUser,\n+    protected ElideResponse handleRequest(boolean isReadOnly, User user,\n                                           Supplier<DataStoreTransaction> transaction,\n                                           Handler<DataStoreTransaction, User, HandlerResult> handler) {\n         boolean isVerbose = false;\n         try (DataStoreTransaction tx = transaction.get()) {\n-            final User user = tx.accessUser(opaqueUser);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzIxMjk4OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/audit/LogMessageImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxNTo0N1rOFx8JtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToxMjozOVrOFx90Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMDA2OQ==", "bodyText": "Will this work?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        final Object user = getUser().getPrincipal();\n          \n          \n            \n                        final Principal user = getUser().getPrincipal();", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387910069", "createdAt": "2020-03-04T20:15:47Z", "author": {"login": "jkusa"}, "path": "elide-core/src/main/java/com/yahoo/elide/audit/LogMessageImpl.java", "diffHunk": "@@ -125,7 +125,7 @@ public String getMessage() {\n                 singleElementContext.setVariable(name, singleElementExpression);\n             }\n \n-            final Object user = getUser().getOpaqueUser();\n+            final Object user = getUser().getPrincipal();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzNzMyMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387937322", "createdAt": "2020-03-04T21:12:39Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/audit/LogMessageImpl.java", "diffHunk": "@@ -125,7 +125,7 @@ public String getMessage() {\n                 singleElementContext.setVariable(name, singleElementExpression);\n             }\n \n-            final Object user = getUser().getOpaqueUser();\n+            final Object user = getUser().getPrincipal();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMDA2OQ=="}, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzI2MDM1OnYy", "diffSide": "RIGHT", "path": "elide-core/src/test/java/com/yahoo/elide/security/TestUser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDozMjowM1rOFx8nDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToxMzozOVrOFx915Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNzU4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    super(new Principal() {\n          \n          \n            \n                        @Override\n          \n          \n            \n                        public String getName() {\n          \n          \n            \n                            return name;\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n                    super(() -> name);", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387917582", "createdAt": "2020-03-04T20:32:03Z", "author": {"login": "jkusa"}, "path": "elide-core/src/test/java/com/yahoo/elide/security/TestUser.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+package com.yahoo.elide.security;\n+\n+import java.security.Principal;\n+\n+/**\n+ * Elide user for testing.\n+ */\n+public class TestUser extends User {\n+\n+    public TestUser(String name) {\n+        super(new Principal() {\n+            @Override\n+            public String getName() {\n+                return name;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzNzc2NQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387937765", "createdAt": "2020-03-04T21:13:39Z", "author": {"login": "aklish"}, "path": "elide-core/src/test/java/com/yahoo/elide/security/TestUser.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+package com.yahoo.elide.security;\n+\n+import java.security.Principal;\n+\n+/**\n+ * Elide user for testing.\n+ */\n+public class TestUser extends User {\n+\n+    public TestUser(String name) {\n+        super(new Principal() {\n+            @Override\n+            public String getName() {\n+                return name;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxNzU4Mg=="}, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzI2MzE1OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-hibernate3/src/test/java/com/yahoo/elide/tests/DataStoreIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDozMzowN1rOFx8o2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToxNjo1NFrOFx97tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxODA0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    goodUser = new User(new Principal() {\n          \n          \n            \n                        @Override\n          \n          \n            \n                        public String getName() {\n          \n          \n            \n                            return \"1\";\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n                    goodUser = new User(() -> \"1\");", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387918041", "createdAt": "2020-03-04T20:33:07Z", "author": {"login": "jkusa"}, "path": "elide-datastore/elide-datastore-hibernate3/src/test/java/com/yahoo/elide/tests/DataStoreIT.java", "diffHunk": "@@ -61,6 +65,20 @@\n     private static final int ALL_BOOKS_COUNT = 3;\n \n     public DataStoreIT() {\n+        goodUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"1\";\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzOTI1Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387939253", "createdAt": "2020-03-04T21:16:54Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-hibernate3/src/test/java/com/yahoo/elide/tests/DataStoreIT.java", "diffHunk": "@@ -61,6 +65,20 @@\n     private static final int ALL_BOOKS_COUNT = 3;\n \n     public DataStoreIT() {\n+        goodUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"1\";\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxODA0MQ=="}, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzI2NDgwOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-hibernate3/src/test/java/com/yahoo/elide/tests/DataStoreIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDozMzozOVrOFx8p3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToxNzowNlrOFx98Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxODMwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    badUser = new User(new Principal() {\n          \n          \n            \n                        @Override\n          \n          \n            \n                        public String getName() {\n          \n          \n            \n                            return \"-1\";\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n                    badUser = new User(() -> \"-1\");", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387918303", "createdAt": "2020-03-04T20:33:39Z", "author": {"login": "jkusa"}, "path": "elide-datastore/elide-datastore-hibernate3/src/test/java/com/yahoo/elide/tests/DataStoreIT.java", "diffHunk": "@@ -61,6 +65,20 @@\n     private static final int ALL_BOOKS_COUNT = 3;\n \n     public DataStoreIT() {\n+        goodUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"1\";\n+            }\n+        });\n+\n+        badUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"-1\";\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzOTM1NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387939354", "createdAt": "2020-03-04T21:17:06Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-hibernate3/src/test/java/com/yahoo/elide/tests/DataStoreIT.java", "diffHunk": "@@ -61,6 +65,20 @@\n     private static final int ALL_BOOKS_COUNT = 3;\n \n     public DataStoreIT() {\n+        goodUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"1\";\n+            }\n+        });\n+\n+        badUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"-1\";\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxODMwMw=="}, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzI2Nzk3OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-hibernate5/src/test/java/com/yahoo/elide/tests/DataStoreIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDozNDo1NVrOFx8r1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToxODoyMFrOFx9-Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxODgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    goodUser = new User(new Principal() {\n          \n          \n            \n                        @Override\n          \n          \n            \n                        public String getName() {\n          \n          \n            \n                            return \"1\";\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n            \n          \n          \n            \n                    badUser = new User(new Principal() {\n          \n          \n            \n                        @Override\n          \n          \n            \n                        public String getName() {\n          \n          \n            \n                            return \"-1\";\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n                    goodUser = new User(() -> \"1\");\n          \n          \n            \n                    badUser = new User(() -> \"-1\");", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387918806", "createdAt": "2020-03-04T20:34:55Z", "author": {"login": "jkusa"}, "path": "elide-datastore/elide-datastore-hibernate5/src/test/java/com/yahoo/elide/tests/DataStoreIT.java", "diffHunk": "@@ -61,6 +65,19 @@\n     private static final int ALL_BOOKS_COUNT = 3;\n \n     public DataStoreIT() {\n+        goodUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"1\";\n+            }\n+        });\n+\n+        badUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"-1\";\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzOTg5OQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387939899", "createdAt": "2020-03-04T21:18:20Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-hibernate5/src/test/java/com/yahoo/elide/tests/DataStoreIT.java", "diffHunk": "@@ -61,6 +65,19 @@\n     private static final int ALL_BOOKS_COUNT = 3;\n \n     public DataStoreIT() {\n+        goodUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"1\";\n+            }\n+        });\n+\n+        badUser = new User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"-1\";\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxODgwNg=="}, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzI3NTE0OnYy", "diffSide": "RIGHT", "path": "elide-integration-tests/src/test/java/com/yahoo/elide/initialization/TestAuthFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDozNzoxNFrOFx8wOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToxOTowMlrOFx9_zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxOTkyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return new Principal() {\n          \n          \n            \n                                @Override\n          \n          \n            \n                                public String getName() {\n          \n          \n            \n                                    return \"1\";\n          \n          \n            \n                                }\n          \n          \n            \n                            };\n          \n          \n            \n                            return () -> \"1\";", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387919928", "createdAt": "2020-03-04T20:37:14Z", "author": {"login": "jkusa"}, "path": "elide-integration-tests/src/test/java/com/yahoo/elide/initialization/TestAuthFilter.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+package com.yahoo.elide.initialization;\n+\n+import java.io.IOException;\n+import java.security.Principal;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.core.SecurityContext;\n+\n+/**\n+ * JAX-RS Filter that creates a test principal with ID 1.\n+ */\n+public class TestAuthFilter implements ContainerRequestFilter {\n+    @Override\n+    public void filter(ContainerRequestContext containerRequestContext) throws IOException {\n+        containerRequestContext.setSecurityContext(new SecurityContext() {\n+            @Override\n+            public Principal getUserPrincipal() {\n+                return new Principal() {\n+                    @Override\n+                    public String getName() {\n+                        return \"1\";\n+                    }\n+                };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0MDMwMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387940302", "createdAt": "2020-03-04T21:19:02Z", "author": {"login": "aklish"}, "path": "elide-integration-tests/src/test/java/com/yahoo/elide/initialization/TestAuthFilter.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+package com.yahoo.elide.initialization;\n+\n+import java.io.IOException;\n+import java.security.Principal;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.core.SecurityContext;\n+\n+/**\n+ * JAX-RS Filter that creates a test principal with ID 1.\n+ */\n+public class TestAuthFilter implements ContainerRequestFilter {\n+    @Override\n+    public void filter(ContainerRequestContext containerRequestContext) throws IOException {\n+        containerRequestContext.setSecurityContext(new SecurityContext() {\n+            @Override\n+            public Principal getUserPrincipal() {\n+                return new Principal() {\n+                    @Override\n+                    public String getName() {\n+                        return \"1\";\n+                    }\n+                };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxOTkyOA=="}, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzI3NzYxOnYy", "diffSide": "RIGHT", "path": "elide-integration-tests/src/test/java/com/yahoo/elide/tests/ResourceIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDozODowNFrOFx8xtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToxOTo0MlrOFx-BIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMDMwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    com.yahoo.elide.security.User user = new com.yahoo.elide.security.User(new Principal() {\n          \n          \n            \n                        @Override\n          \n          \n            \n                        public String getName() {\n          \n          \n            \n                            return \"-1\";\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n                    com.yahoo.elide.security.User user = new com.yahoo.elide.security.User(() -> \"-1\");", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387920309", "createdAt": "2020-03-04T20:38:04Z", "author": {"login": "jkusa"}, "path": "elide-integration-tests/src/test/java/com/yahoo/elide/tests/ResourceIT.java", "diffHunk": "@@ -2475,7 +2476,14 @@ public void elideSecurityEnabled() {\n                 .withEntityDictionary(new EntityDictionary(TestCheckMappings.MAPPINGS))\n                 .withAuditLogger(new TestAuditLogger())\n                 .build());\n-        ElideResponse response = elide.get(\"parent/1/children\", new MultivaluedHashMap<>(), -1);\n+\n+        com.yahoo.elide.security.User user = new com.yahoo.elide.security.User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"-1\";\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0MDY0MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/yahoo/elide/pull/1206#discussion_r387940641", "createdAt": "2020-03-04T21:19:42Z", "author": {"login": "aklish"}, "path": "elide-integration-tests/src/test/java/com/yahoo/elide/tests/ResourceIT.java", "diffHunk": "@@ -2475,7 +2476,14 @@ public void elideSecurityEnabled() {\n                 .withEntityDictionary(new EntityDictionary(TestCheckMappings.MAPPINGS))\n                 .withAuditLogger(new TestAuditLogger())\n                 .build());\n-        ElideResponse response = elide.get(\"parent/1/children\", new MultivaluedHashMap<>(), -1);\n+\n+        com.yahoo.elide.security.User user = new com.yahoo.elide.security.User(new Principal() {\n+            @Override\n+            public String getName() {\n+                return \"-1\";\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMDMwOQ=="}, "originalCommit": {"oid": "69f64f25b0d65dbb9b7fa00ea229987c961ead54"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1071, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}