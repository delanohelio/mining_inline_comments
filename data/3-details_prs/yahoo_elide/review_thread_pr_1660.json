{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMTM5NDY0", "number": 1660, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDoyOTozNlrOE4V6DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDoyOTozNlrOE4V6DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTE0NjM3OnYy", "diffSide": "RIGHT", "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDoyOTozNlrOHyNLqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDoyOTozNlrOHyNLqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNjgyNg==", "bodyText": "log.info", "url": "https://github.com/yahoo/elide/pull/1660#discussion_r522406826", "createdAt": "2020-11-12T20:29:36Z", "author": {"login": "moizarafat"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "diffHunk": "@@ -99,25 +97,31 @@ public DynamicConfigValidator(String configDir) {\n         }\n     }\n \n-    public static void main(String[] args) throws IOException, ParseException {\n-\n+    public static void main(String[] args) {\n         Options options = prepareOptions();\n-        CommandLine cli = new DefaultParser().parse(options, args);\n \n-        if (cli.hasOption(\"help\")) {\n-            printHelp(options);\n-            return;\n-        }\n-        if (!cli.hasOption(\"configDir\")) {\n-            printHelp(options);\n-            throw new MissingOptionException(\"Missing required option\");\n-        }\n-        String configDir = cli.getOptionValue(\"configDir\");\n+        try {\n+            CommandLine cli = new DefaultParser().parse(options, args);\n \n-        DynamicConfigValidator dynamicConfigValidator = new DynamicConfigValidator(configDir);\n-        dynamicConfigValidator.readAndValidateConfigs();\n+            if (cli.hasOption(\"help\")) {\n+                printHelp(options);\n+                return;\n+            }\n+            if (!cli.hasOption(\"configDir\")) {\n+                printHelp(options);\n+                System.err.println(\"Missing required option\");\n+                System.exit(1);\n+            }\n+            String configDir = cli.getOptionValue(\"configDir\");\n+\n+            DynamicConfigValidator dynamicConfigValidator = new DynamicConfigValidator(configDir);\n+            dynamicConfigValidator.readAndValidateConfigs();\n+        } catch (Exception e) {\n+            System.err.println(e.getMessage());\n+            System.exit(2);\n+        }\n \n-        log.info(\"Configs Validation Passed!\");\n+        System.out.println(\"Configs Validation Passed!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "059a6cad1e8778b73968563d7b8f206ea351e28a"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 928, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}