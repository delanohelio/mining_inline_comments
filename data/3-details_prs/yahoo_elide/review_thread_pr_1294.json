{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNzIwODM4", "number": 1294, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozNzo0NVrOD3ys5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozOTowOFrOD3yupQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODI4OTY2OnYy", "diffSide": "LEFT", "path": "elide-async/src/main/java/com/yahoo/elide/async/models/AsyncQuery.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozNzo0NVrOGOQDEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozNzo0NVrOGOQDEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU5NjE3OA==", "bodyText": "Might as well make this consistent - let's remove all life cycle hook annotations from this class.", "url": "https://github.com/yahoo/elide/pull/1294#discussion_r417596178", "createdAt": "2020-04-29T20:37:45Z", "author": {"login": "aklish"}, "path": "elide-async/src/main/java/com/yahoo/elide/async/models/AsyncQuery.java", "diffHunk": "@@ -30,14 +28,15 @@\n \n /**\n  * Model for Async Query.\n+ * ExecuteQueryHook is binded manually during the elide startup,\n+ * after asyncexecutorservice is initialized.\n  */\n @Entity\n @Include(type = \"asyncQuery\", rootLevel = true)\n @ReadPermission(expression = \"Principal is Owner\")\n @UpdatePermission(expression = \"Prefab.Role.None\")\n @DeletePermission(expression = \"Prefab.Role.None\")\n @LifeCycleHookBinding(hook = UpdatePrincipalNameHook.class, operation = CREATE, phase = PRESECURITY)\n-@LifeCycleHookBinding(hook = ExecuteQueryHook.class, operation = CREATE, phase = POSTCOMMIT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e041368669469b86db7e4ca950a9e0cdcf7f2fb0"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODI5MjAxOnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozODozNVrOGOQEjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozODozNVrOGOQEjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU5NjU1Ng==", "bodyText": "I thought we were going to do all of this logic in the AsyncExecutorService bean?", "url": "https://github.com/yahoo/elide/pull/1294#discussion_r417596556", "createdAt": "2020-04-29T20:38:35Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -72,4 +70,10 @@ public AsyncCleanerService buildAsyncCleanerService(Elide elide, ElideConfigProp\n     public AsyncQueryDAO buildAsyncQueryDAO(Elide elide) {\n         return new DefaultAsyncQueryDAO(elide, elide.getDataStore());\n     }\n+\n+    @Override\n+    public void afterPropertiesSet() {\n+        ExecuteQueryHook executeQueryHook = new ExecuteQueryHook(asyncExecutorService);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e041368669469b86db7e4ca950a9e0cdcf7f2fb0"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODI5NDEzOnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozOTowOVrOGOQF1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozOTowOVrOGOQF1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU5Njg4NA==", "bodyText": "Why not leave this in the ElideAsyncConfiguration file?", "url": "https://github.com/yahoo/elide/pull/1294#discussion_r417596884", "createdAt": "2020-04-29T20:39:09Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java", "diffHunk": "@@ -144,4 +147,20 @@ public Swagger buildSwagger(EntityDictionary dictionary, ElideConfigProperties s\n \n         return swagger;\n     }\n+\n+    /**\n+     * Configure the AsyncExecutorService used for submitting async query requests.\n+     * @param elide elideObject.\n+     * @param settings Elide settings.\n+     * @return a AsyncExecutorService.\n+     */\n+    @Bean\n+    @ConditionalOnMissingBean\n+    @ConditionalOnProperty(prefix = \"elide.async\", name = \"enabled\", matchIfMissing = false)\n+    public AsyncExecutorService buildAsyncExecutorService(Elide elide, ElideConfigProperties settings,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e041368669469b86db7e4ca950a9e0cdcf7f2fb0"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1029, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}