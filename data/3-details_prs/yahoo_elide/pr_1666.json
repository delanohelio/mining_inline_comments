{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTkzMDE3", "number": 1666, "title": "Display user friendly messages for Json Schema validation failures", "bodyText": "related to PR: #1662\nDescription\nRemove singletons. Add Javadoc.\nAdd custom messages for queryPlanResolver & filterTemplate.\nEnforce no additional properties for dimensions and time dimensions.\nHow Has This Been Tested?\nExisting tests pass.\nAdditional tests included.\nLicense\nI confirm that this contribution is made under an Apache 2.0 license and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-11-17T17:50:33Z", "url": "https://github.com/yahoo/elide/pull/1666", "merged": true, "mergeCommit": {"oid": "725eb92dac19c2853fc4d82cbc524ecffb6f9fcc"}, "closed": true, "closedAt": "2020-11-19T15:37:24Z", "author": {"login": "rishi-aga"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdde9VVgFqTUzMjcyNDYxMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeEiziAFqTUzNDU2ODA0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNzI0NjEz", "url": "https://github.com/yahoo/elide/pull/1666#pullrequestreview-532724613", "createdAt": "2020-11-17T19:24:57Z", "commit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOToyNDo1N1rOH1FkRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo0NDozMFrOH1Gr5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyNzc4MA==", "bodyText": "Let's add javadoc for all of these new classes.", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525427780", "createdAt": "2020-11-17T19:24:57Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DraftV4LibraryWithElideFormatAttr.java", "diffHunk": "@@ -5,46 +5,41 @@\n  */\n package com.yahoo.elide.contrib.dynamicconfighelpers;\n \n+import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.EitherTableSourceOrValuesKeyword;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideCardinalityFormatAttr;\n+import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideClassNameFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideFieldNameFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideFieldTypeFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideGrainTypeFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideJoinTypeFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideNameFormatAttr;\n+import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideRSQLFilterFormatAttr;\n import com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats.ElideTimeFieldTypeFormatAttr;\n-\n import com.github.fge.jsonschema.library.DraftV4Library;\n import com.github.fge.jsonschema.library.Library;\n import com.github.fge.jsonschema.library.LibraryBuilder;\n \n-import lombok.NoArgsConstructor;\n+import lombok.Getter;\n \n-@NoArgsConstructor(access = lombok.AccessLevel.PRIVATE)\n public class DraftV4LibraryWithElideFormatAttr {\n-    private static Library LIBRARY = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyOTcxNA==", "bodyText": "Why did we do this swap?  Was the error hard to follow?", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525429714", "createdAt": "2020-11-17T19:28:02Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/resources/elideTableSchema.json", "diffHunk": "@@ -191,22 +191,7 @@\n                             \"type\": \"string\"\n                         }\n                     },\n-                    \"dependencies\": {\n-                        \"values\": {\n-                            \"not\": {\n-                                \"required\": [\n-                                    \"tableSource\"\n-                                ]\n-                            }\n-                        },\n-                        \"tableSource\": {\n-                            \"not\": {\n-                                \"required\": [\n-                                    \"values\"\n-                                ]\n-                            }\n-                        }\n-                    }\n+                    \"eitherTableSourceOrValues\": {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzNDgwNA==", "bodyText": "I wonder if we can do something stronger here.  I wonder if we can parse the expression with FIQL/RSQL parser.  A regex is not expressive enough to capture all the legal values.", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525434804", "createdAt": "2020-11-17T19:35:07Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideRSQLFilterFormatAttr.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+public class ElideRSQLFilterFormatAttr extends AbstractFormatAttribute {\n+    private static final String RSQL_FILTER_FORMAT_REGEX = \"^[A-Za-z][0-9A-Za-z_]*(==|!=|>=|>|<|<=|=[a-z]+=)(.*)$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzNjMwOQ==", "bodyText": "This comment doesn't capture the breadth of what the user can define.  The semi-colon can also be a comma.  Each operator has its own rules.\nI think a pointer to the RSQL documentation might be better than trying to redefine here.", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525436309", "createdAt": "2020-11-17T19:36:22Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideRSQLFilterFormatAttr.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+public class ElideRSQLFilterFormatAttr extends AbstractFormatAttribute {\n+    private static final String RSQL_FILTER_FORMAT_REGEX = \"^[A-Za-z][0-9A-Za-z_]*(==|!=|>=|>|<|<=|=[a-z]+=)(.*)$\";\n+\n+    public static final String FORMAT_NAME = \"elideRSQLFilter\";\n+    public static final String FORMAT_KEY = \"elideRSQLFilter.error.format\";\n+    public static final String FORMAT_MSG = \"filterTemplate [%s] is not allowed. \"\n+                    + \"RSQL filter Template must follow the format 'XoperatorY;XoperatorY;XoperatorY'. \"\n+                    + \"Here `X` must start with an alphabet and can include alaphabets, numbers and '_' only. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzOTY1OA==", "bodyText": "This might have been too simplistic.  Check out:\nhttps://stackoverflow.com/questions/5205339/regular-expression-matching-fully-qualified-class-names", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525439658", "createdAt": "2020-11-17T19:39:13Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideClassNameFormatAttr.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+public class ElideClassNameFormatAttr extends AbstractFormatAttribute {\n+    private static final String CLASS_NAME_FORMAT_REGEX = \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MDg2Ng==", "bodyText": "Something simple here might be better:  \"[%s] is not a valid Java class name.\"", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525440866", "createdAt": "2020-11-17T19:40:10Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideClassNameFormatAttr.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+public class ElideClassNameFormatAttr extends AbstractFormatAttribute {\n+    private static final String CLASS_NAME_FORMAT_REGEX = \"^([a-zA-Z]+[a-zA-Z0-9_]*\\\\.)+class$\";\n+\n+    public static final String FORMAT_NAME = \"elideClassName\";\n+    public static final String FORMAT_KEY = \"elideClassName.error.format\";\n+    public static final String FORMAT_MSG = \"Class Name [%s] is not allowed. \"\n+                    + \"Class name must follow the format 'X.X.X.X.class'. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MjYwMQ==", "bodyText": "Neither of them is also an option.\nI would reword: \"tableSource and values cannot both be defined for a dimension.  Choose one or none.\"", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525442601", "createdAt": "2020-11-17T19:41:37Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/EitherTableSourceOrValuesValidator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.processing.Processor;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.keyword.validator.AbstractKeywordValidator;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+import com.google.common.collect.Sets;\n+\n+import java.util.Set;\n+\n+public class EitherTableSourceOrValuesValidator extends AbstractKeywordValidator {\n+\n+    public static final String KEYWORD = \"eitherTableSourceOrValues\";\n+    public static final String ERROR_KEY = \"eitherTableSourceOrValues.error\";\n+    public static final String ERROR_MSG =\n+                    \"Either tableSource or values should be defined for a dimension, Both are not allowed.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0MzI2MQ==", "bodyText": "Why do we define toString here but nowhere else?", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525443261", "createdAt": "2020-11-17T19:42:12Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/EitherTableSourceOrValuesValidator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.processing.Processor;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.keyword.validator.AbstractKeywordValidator;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+import com.google.common.collect.Sets;\n+\n+import java.util.Set;\n+\n+public class EitherTableSourceOrValuesValidator extends AbstractKeywordValidator {\n+\n+    public static final String KEYWORD = \"eitherTableSourceOrValues\";\n+    public static final String ERROR_KEY = \"eitherTableSourceOrValues.error\";\n+    public static final String ERROR_MSG =\n+                    \"Either tableSource or values should be defined for a dimension, Both are not allowed.\";\n+\n+    public EitherTableSourceOrValuesValidator(final JsonNode digest) {\n+        super(KEYWORD);\n+    }\n+\n+    @Override\n+    public void validate(Processor<FullData, FullData> processor, ProcessingReport report, MessageBundle bundle,\n+                    FullData data) throws ProcessingException {\n+\n+        JsonNode instance = data.getInstance().getNode();\n+        Set<String> fields = Sets.newHashSet(instance.fieldNames());\n+\n+        if (fields.contains(\"values\") && fields.contains(\"tableSource\")) {\n+            report.error(newMsg(data, bundle, ERROR_KEY));\n+        }\n+    }\n+\n+    @Override\n+    public String toString() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0NjExNw==", "bodyText": "Do we need to validate that we have an object node here?  Do we need to check for fields that are not tableSource or values?", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r525446117", "createdAt": "2020-11-17T19:44:30Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/EitherTableSourceOrValuesKeyword.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jackson.jsonpointer.JsonPointer;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.keyword.syntax.checkers.AbstractSyntaxChecker;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.core.tree.SchemaTree;\n+import com.github.fge.jsonschema.keyword.digest.AbstractDigester;\n+import com.github.fge.jsonschema.library.Keyword;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+import lombok.Getter;\n+\n+import java.util.Collection;\n+\n+public class EitherTableSourceOrValuesKeyword {\n+\n+    @Getter\n+    private Keyword keyword;\n+\n+    public EitherTableSourceOrValuesKeyword() {\n+        keyword = Keyword.newBuilder(EitherTableSourceOrValuesValidator.KEYWORD)\n+                        .withSyntaxChecker(new EitherTableSourceOrValuesSyntaxChecker())\n+                        .withDigester(new EitherTableSourceOrValuesDigesters())\n+                        .withValidatorClass(EitherTableSourceOrValuesValidator.class)\n+                        .freeze();\n+    }\n+\n+    private class EitherTableSourceOrValuesSyntaxChecker extends AbstractSyntaxChecker {\n+\n+        public EitherTableSourceOrValuesSyntaxChecker() {\n+            super(EitherTableSourceOrValuesValidator.KEYWORD, NodeType.OBJECT);\n+        }\n+\n+        @Override\n+        protected void checkValue(Collection<JsonPointer> pointers, MessageBundle bundle, ProcessingReport report,\n+                        SchemaTree tree) throws ProcessingException {\n+            // No Checks Required", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a41358110f78732b686dad10525387de1f1e710c", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/a41358110f78732b686dad10525387de1f1e710c", "committedDate": "2020-11-17T17:47:54Z", "message": "Display user friendly messages for Json Schema validation failures"}, "afterCommit": {"oid": "4edc7a6cb330ee46ae4c65398d7c89ee407ef777", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/4edc7a6cb330ee46ae4c65398d7c89ee407ef777", "committedDate": "2020-11-18T19:17:01Z", "message": "Review Comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "faceb02ac2588217262a3fa394d1bfba4637b563", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/faceb02ac2588217262a3fa394d1bfba4637b563", "committedDate": "2020-11-18T19:47:18Z", "message": "minor fixes"}, "afterCommit": {"oid": "1bf2988aaa313cc51b24e698642a1e0c29134038", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/1bf2988aaa313cc51b24e698642a1e0c29134038", "committedDate": "2020-11-18T21:07:14Z", "message": "RSQL validator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzOTU5ODI5", "url": "https://github.com/yahoo/elide/pull/1666#pullrequestreview-533959829", "createdAt": "2020-11-18T23:18:35Z", "commit": {"oid": "1bf2988aaa313cc51b24e698642a1e0c29134038"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzoxODozNVrOH2GO2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzoxODozNVrOH2GO2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NzI1Ng==", "bodyText": "You can provide a URL fragment (https://something.com#fragment) to link to a section in the documentation.", "url": "https://github.com/yahoo/elide/pull/1666#discussion_r526487256", "createdAt": "2020-11-18T23:18:35Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/jsonformats/ElideRSQLFilterFormatAttr.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers.jsonformats;\n+\n+import static com.yahoo.elide.core.filter.dialect.RSQLFilterDialect.getDefaultOperatorsWithIsnull;\n+import com.github.fge.jackson.NodeType;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.format.AbstractFormatAttribute;\n+import com.github.fge.jsonschema.processors.data.FullData;\n+import com.github.fge.msgsimple.bundle.MessageBundle;\n+\n+import cz.jirutka.rsql.parser.RSQLParser;\n+import cz.jirutka.rsql.parser.RSQLParserException;\n+\n+/**\n+ * Format specifier for {@code elideRSQLFilter} format attribute.\n+ * <p>\n+ * This specifier will check if a string instance is a valid RSQL filter.\n+ * </p>\n+ */\n+public class ElideRSQLFilterFormatAttr extends AbstractFormatAttribute {\n+\n+    public static final String FORMAT_NAME = \"elideRSQLFilter\";\n+    public static final String FORMAT_KEY = \"elideRSQLFilter.error.format\";\n+    public static final String FORMAT_MSG = \"Input value[%s] is not a valid RSQL filter expression. Please visit page \"\n+                    + \"https://elide.io/pages/guide/v5/11-graphql.html and search 'RSQL operators' for samples.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bf2988aaa313cc51b24e698642a1e0c29134038"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfe17c89bb21472289177790144a87405dc89c09", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/bfe17c89bb21472289177790144a87405dc89c09", "committedDate": "2020-11-19T14:27:42Z", "message": "Display user friendly messages for Json Schema validation failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a833594d7d1d10dba5e470e4927510d76e96313e", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/a833594d7d1d10dba5e470e4927510d76e96313e", "committedDate": "2020-11-19T14:27:42Z", "message": "Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6ced6b0450ab4d8d4162b946e56f517f8dedaf8", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/b6ced6b0450ab4d8d4162b946e56f517f8dedaf8", "committedDate": "2020-11-19T14:27:42Z", "message": "minor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cd3d24e7091f091b827717dcfda71ed8185c625", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/1cd3d24e7091f091b827717dcfda71ed8185c625", "committedDate": "2020-11-19T14:27:42Z", "message": "RSQL validator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16ea8154377c0569f71a619be56d8a413d282a2b", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/16ea8154377c0569f71a619be56d8a413d282a2b", "committedDate": "2020-11-19T14:27:42Z", "message": "Review Comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bf2988aaa313cc51b24e698642a1e0c29134038", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/1bf2988aaa313cc51b24e698642a1e0c29134038", "committedDate": "2020-11-18T21:07:14Z", "message": "RSQL validator"}, "afterCommit": {"oid": "16ea8154377c0569f71a619be56d8a413d282a2b", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/16ea8154377c0569f71a619be56d8a413d282a2b", "committedDate": "2020-11-19T14:27:42Z", "message": "Review Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NTY4MDQ0", "url": "https://github.com/yahoo/elide/pull/1666#pullrequestreview-534568044", "createdAt": "2020-11-19T15:32:36Z", "commit": {"oid": "16ea8154377c0569f71a619be56d8a413d282a2b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 777, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}