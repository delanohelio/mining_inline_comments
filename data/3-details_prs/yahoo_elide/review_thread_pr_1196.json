{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDU1Mzcx", "number": 1196, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowMTo1NFrODhjweQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowMTo1NFrODhjweQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE1NDQ5OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/metadata/SQLTimeDimension.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowMTo1NFrOFsWyNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTozMjo0OFrOFsj31g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NDk2NQ==", "bodyText": "I wonder if this could be implemented as a mixin so we don't have to duplicate this code.", "url": "https://github.com/yahoo/elide/pull/1196#discussion_r382054965", "createdAt": "2020-02-20T15:01:54Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/metadata/SQLTimeDimension.java", "diffHunk": "@@ -40,5 +44,17 @@ public SQLTimeDimension(Table table, String fieldName, EntityDictionary dictiona\n             this.reference = generateColumnReference(path, dictionary);\n             this.joinPath = path;\n         }\n+\n+        this.metadataDictionary = dictionary;\n+    }\n+\n+    @Override\n+    public Pair<String, String> getSourceTableAndColumn() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b469996a49fc73a9bb213bac09193b8a4f6cdd4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwNDg3Mw==", "bodyText": "I'm not a huge fan of Pair as a function result.  Another option - not sure which one I like better yet.  We could override getSourceColumn.\nRather than a two pass building phase, getSourceColumn can lazy initialize:\n    Column getSourceColumn() {\n        if (joinColumn == null || sourceColumn != null) {\n            return sourceColumn;\n        }\n\n        sourceColumn = getJoinPath()....  //Do lookup logic here\n        return sourceColumn;\n    }", "url": "https://github.com/yahoo/elide/pull/1196#discussion_r382104873", "createdAt": "2020-02-20T16:16:21Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/metadata/SQLTimeDimension.java", "diffHunk": "@@ -40,5 +44,17 @@ public SQLTimeDimension(Table table, String fieldName, EntityDictionary dictiona\n             this.reference = generateColumnReference(path, dictionary);\n             this.joinPath = path;\n         }\n+\n+        this.metadataDictionary = dictionary;\n+    }\n+\n+    @Override\n+    public Pair<String, String> getSourceTableAndColumn() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NDk2NQ=="}, "originalCommit": {"oid": "9b469996a49fc73a9bb213bac09193b8a4f6cdd4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI2OTM5OA==", "bodyText": "Currently the JoinTo concept is only in SQLQueryEngine, so that joinColumn doesn't exist in the common aggregation data store. I think we don't have to avoid two pass building phase now.", "url": "https://github.com/yahoo/elide/pull/1196#discussion_r382269398", "createdAt": "2020-02-20T21:32:48Z", "author": {"login": "hellohanchen"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/queryengines/sql/metadata/SQLTimeDimension.java", "diffHunk": "@@ -40,5 +44,17 @@ public SQLTimeDimension(Table table, String fieldName, EntityDictionary dictiona\n             this.reference = generateColumnReference(path, dictionary);\n             this.joinPath = path;\n         }\n+\n+        this.metadataDictionary = dictionary;\n+    }\n+\n+    @Override\n+    public Pair<String, String> getSourceTableAndColumn() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NDk2NQ=="}, "originalCommit": {"oid": "9b469996a49fc73a9bb213bac09193b8a4f6cdd4"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1060, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}