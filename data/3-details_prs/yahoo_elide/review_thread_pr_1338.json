{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNTk3ODAy", "number": 1338, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNTowODozNFrOD--9gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoyNjo0NVrOEAS9Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzY5ODU2OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNTowODozNFrOGZamjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNTo1MDo1NFrOGZb_Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMwMzQzNg==", "bodyText": "We are storing requestId as a string in requestScope. Can we do the same here? or is there an advantage to storing it like this?\nhttps://github.com/yahoo/elide/pull/1331/files", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r429303436", "createdAt": "2020-05-22T15:08:34Z", "author": {"login": "AshishAg24"}, "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "diffHunk": "@@ -278,7 +283,10 @@ protected ElideResponse handleRequest(boolean isReadOnly, User user,\n                                           Supplier<DataStoreTransaction> transaction,\n                                           Handler<DataStoreTransaction, User, HandlerResult> handler) {\n         boolean isVerbose = false;\n+        UUID requestId = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcfdcb6e61f86d52716b750a44b99b75fd642bad"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMyNjEzNQ==", "bodyText": "We are using it as a key in a Map so I  guess we can store it either way", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r429326135", "createdAt": "2020-05-22T15:50:54Z", "author": {"login": "Rkr1992"}, "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "diffHunk": "@@ -278,7 +283,10 @@ protected ElideResponse handleRequest(boolean isReadOnly, User user,\n                                           Supplier<DataStoreTransaction> transaction,\n                                           Handler<DataStoreTransaction, User, HandlerResult> handler) {\n         boolean isVerbose = false;\n+        UUID requestId = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMwMzQzNg=="}, "originalCommit": {"oid": "fcfdcb6e61f86d52716b750a44b99b75fd642bad"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDE3MTU3OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzo1Mzo0N1rOGZfW4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzo1Mzo0N1rOGZfW4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM4MTM0Nw==", "bodyText": "Can we move this outside Elide into its own file?", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r429381347", "createdAt": "2020-05-22T17:53:47Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "diffHunk": "@@ -412,4 +421,31 @@ public RequestScope getRequestScope() {\n             return requestScope;\n         }\n     }\n+\n+     /**\n+      * Transaction Registry class.\n+      */\n+    @Getter\n+    public static class TransactionRegistry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d7f912cacd5fbe16112f25bdfb04dde0d52b04"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDE3NTU1OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzo1NToyNFrOGZfZYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzo1NToyNFrOGZfZYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM4MTk4Nw==", "bodyText": "You can write this more directly as\ntransactions = transactionMap.values().stream().collect(Collectors.toSet())\nor something similar to that.", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r429381987", "createdAt": "2020-05-22T17:55:24Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/Elide.java", "diffHunk": "@@ -412,4 +421,31 @@ public RequestScope getRequestScope() {\n             return requestScope;\n         }\n     }\n+\n+     /**\n+      * Transaction Registry class.\n+      */\n+    @Getter\n+    public static class TransactionRegistry {\n+        private Map<UUID, DataStoreTransaction> transactionMap = new HashMap<>();\n+        public Set<DataStoreTransaction> getRunningTransactions() {\n+            Set<DataStoreTransaction> transactions = new HashSet<DataStoreTransaction>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d7f912cacd5fbe16112f25bdfb04dde0d52b04"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDE4MDcyOnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzo1NzoyOVrOGZfcuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzo1NzoyOVrOGZfcuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM4Mjg0MQ==", "bodyText": "Won't this be static?  This doesn't look right to me.", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r429382841", "createdAt": "2020-05-22T17:57:29Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "diffHunk": "@@ -31,7 +32,7 @@\n         PARTIAL,\n         NONE\n     }\n-\n+    UUID TRANSACTION_ID = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d7f912cacd5fbe16112f25bdfb04dde0d52b04"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjQyNTc0OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToyOTowNVrOGatDow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToyOTowNVrOGatDow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY1NDM3MQ==", "bodyText": "Given that this is an interface, I'm not sure a default implementation makes sense here. You can leave the method, but remove default and the implementation.", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r430654371", "createdAt": "2020-05-26T19:29:05Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "diffHunk": "@@ -263,4 +263,12 @@ default boolean supportsSorting(Class<?> entityClass, Sorting sorting) {\n     default boolean supportsPagination(Class<?> entityClass, FilterExpression expression) {\n         return true;\n     }\n+\n+    /**\n+     * @return UUID of transaction\n+     *\n+     */\n+    default UUID getId() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53966a2b8a74b850bc7f3f8fa8d4896b180e00e3"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzQ1MzU4OnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoyMzo0MFrOGbfQZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoyMzo0MFrOGbfQZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ3NjgzNw==", "bodyText": "Needs javadoc.", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r431476837", "createdAt": "2020-05-27T22:23:40Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransaction.java", "diffHunk": "@@ -263,4 +262,6 @@ default boolean supportsSorting(Class<?> entityClass, Sorting sorting) {\n     default boolean supportsPagination(Class<?> entityClass, FilterExpression expression) {\n         return true;\n     }\n+\n+    UUID getRequestId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c2708dc8520ae10cd1f15592126895c53369fe"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzQ1NDMyOnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransactionImplementation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoyMzo1NVrOGbfQzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoyMzo1NVrOGbfQzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ3Njk0Mw==", "bodyText": "Class needs javadoc.", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r431476943", "createdAt": "2020-05-27T22:23:55Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/DataStoreTransactionImplementation.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.core;\n+\n+import lombok.Getter;\n+\n+import java.util.UUID;\n+\n+public abstract class DataStoreTransactionImplementation implements DataStoreTransaction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c2708dc8520ae10cd1f15592126895c53369fe"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzQ1OTAzOnYy", "diffSide": "RIGHT", "path": "elide-core/src/main/java/com/yahoo/elide/core/datastore/inmemory/InMemoryStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoyNTo1NlrOGbfTzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoyNTo1NlrOGbfTzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ3NzcxMQ==", "bodyText": "I think this is wrong.  This was calling the default method defined in the interface. You changed this to call the super class - which is something else - and will cause problems.", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r431477711", "createdAt": "2020-05-27T22:25:56Z", "author": {"login": "aklish"}, "path": "elide-core/src/main/java/com/yahoo/elide/core/datastore/inmemory/InMemoryStoreTransaction.java", "diffHunk": "@@ -119,7 +119,7 @@ public Object loadObject(EntityProjection projection,\n                 projection.getFilterExpression()) == FeatureSupport.FULL) {\n             return tx.loadObject(projection, id, scope);\n         } else {\n-            return DataStoreTransaction.super.loadObject(projection, id, scope);\n+            return super.loadObject(projection, id, scope);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c2708dc8520ae10cd1f15592126895c53369fe"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzQ2MDU0OnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStoreTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoyNjo0NVrOGbfU0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoyNjo0NVrOGbfU0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ3Nzk2OA==", "bodyText": "Is there a reason this can't extend DataStoreTransactionImpl?", "url": "https://github.com/yahoo/elide/pull/1338#discussion_r431477968", "createdAt": "2020-05-27T22:26:45Z", "author": {"login": "aklish"}, "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/AggregationDataStoreTransaction.java", "diffHunk": "@@ -14,14 +14,16 @@\n \n import com.google.common.annotations.VisibleForTesting;\n \n-import java.io.IOException;\n+import lombok.Getter;\n \n+import java.io.IOException;\n+import java.util.UUID;\n /**\n  * Transaction handler for {@link AggregationDataStore}.\n  */\n public class AggregationDataStoreTransaction implements DataStoreTransaction {\n     private QueryEngine queryEngine;\n-\n+    @Getter private final UUID requestId = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c2708dc8520ae10cd1f15592126895c53369fe"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 980, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}