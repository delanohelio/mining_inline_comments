{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMTM5NDY0", "number": 1660, "title": "Switched command line schema validator to use system.exit instead of \u2026", "bodyText": "\u2026throwing exceptions\nLicense\nI confirm that this contribution is made under an Apache 2.0 license and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-11-12T20:26:55Z", "url": "https://github.com/yahoo/elide/pull/1660", "merged": true, "mergeCommit": {"oid": "b5523f171749e36d5acfc0988c9d37779f4b35e9"}, "closed": true, "closedAt": "2020-11-12T20:53:17Z", "author": {"login": "aklish"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb4jBwAH2gAyNTIwMTM5NDY0OjA1OWE2Y2FkMWU4Nzc4YjczOTY4NTYzZDdiOGYyMDZlYTM1MWUyOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdb4qZbgFqTUyOTQ3NTc2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "059a6cad1e8778b73968563d7b8f206ea351e28a", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/059a6cad1e8778b73968563d7b8f206ea351e28a", "committedDate": "2020-11-12T20:26:08Z", "message": "Switched command line schema validator to use system.exit instead of throwing exceptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NDcyNTcw", "url": "https://github.com/yahoo/elide/pull/1660#pullrequestreview-529472570", "createdAt": "2020-11-12T20:29:35Z", "commit": {"oid": "059a6cad1e8778b73968563d7b8f206ea351e28a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDoyOTozNlrOHyNLqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDoyOTozNlrOHyNLqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNjgyNg==", "bodyText": "log.info", "url": "https://github.com/yahoo/elide/pull/1660#discussion_r522406826", "createdAt": "2020-11-12T20:29:36Z", "author": {"login": "moizarafat"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "diffHunk": "@@ -99,25 +97,31 @@ public DynamicConfigValidator(String configDir) {\n         }\n     }\n \n-    public static void main(String[] args) throws IOException, ParseException {\n-\n+    public static void main(String[] args) {\n         Options options = prepareOptions();\n-        CommandLine cli = new DefaultParser().parse(options, args);\n \n-        if (cli.hasOption(\"help\")) {\n-            printHelp(options);\n-            return;\n-        }\n-        if (!cli.hasOption(\"configDir\")) {\n-            printHelp(options);\n-            throw new MissingOptionException(\"Missing required option\");\n-        }\n-        String configDir = cli.getOptionValue(\"configDir\");\n+        try {\n+            CommandLine cli = new DefaultParser().parse(options, args);\n \n-        DynamicConfigValidator dynamicConfigValidator = new DynamicConfigValidator(configDir);\n-        dynamicConfigValidator.readAndValidateConfigs();\n+            if (cli.hasOption(\"help\")) {\n+                printHelp(options);\n+                return;\n+            }\n+            if (!cli.hasOption(\"configDir\")) {\n+                printHelp(options);\n+                System.err.println(\"Missing required option\");\n+                System.exit(1);\n+            }\n+            String configDir = cli.getOptionValue(\"configDir\");\n+\n+            DynamicConfigValidator dynamicConfigValidator = new DynamicConfigValidator(configDir);\n+            dynamicConfigValidator.readAndValidateConfigs();\n+        } catch (Exception e) {\n+            System.err.println(e.getMessage());\n+            System.exit(2);\n+        }\n \n-        log.info(\"Configs Validation Passed!\");\n+        System.out.println(\"Configs Validation Passed!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "059a6cad1e8778b73968563d7b8f206ea351e28a"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NDc1NDkx", "url": "https://github.com/yahoo/elide/pull/1660#pullrequestreview-529475491", "createdAt": "2020-11-12T20:33:47Z", "commit": {"oid": "059a6cad1e8778b73968563d7b8f206ea351e28a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NDc1NzY3", "url": "https://github.com/yahoo/elide/pull/1660#pullrequestreview-529475767", "createdAt": "2020-11-12T20:34:11Z", "commit": {"oid": "059a6cad1e8778b73968563d7b8f206ea351e28a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 773, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}