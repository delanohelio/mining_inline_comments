{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NDg4NzM0", "number": 1568, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxMzoxM1rOEpneFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxMzoxM1rOEpneFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDczNzUwOnYy", "diffSide": "RIGHT", "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/core/SqlReferenceVisitorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxMzoxM1rOHbZVZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxMzoxM1rOHbZVZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ4ODY3OQ==", "bodyText": "Looking at the test case, should this be join_table?", "url": "https://github.com/yahoo/elide/pull/1568#discussion_r498488679", "createdAt": "2020-10-01T20:13:13Z", "author": {"login": "moizarafat"}, "path": "elide-datastore/elide-datastore-aggregation/src/test/java/com/yahoo/elide/datastores/aggregation/core/SqlReferenceVisitorTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+\n+package com.yahoo.elide.datastores.aggregation.core;\n+\n+import com.google.common.collect.Sets;\n+import com.yahoo.elide.annotation.Include;\n+import com.yahoo.elide.datastores.aggregation.annotation.DimensionFormula;\n+import com.yahoo.elide.datastores.aggregation.annotation.Join;\n+import com.yahoo.elide.datastores.aggregation.metadata.MetaDataStore;\n+import com.yahoo.elide.datastores.aggregation.metadata.models.Column;\n+import com.yahoo.elide.datastores.aggregation.metadata.models.Table;\n+import com.yahoo.elide.datastores.aggregation.queryengines.sql.annotation.FromTable;\n+import com.yahoo.elide.datastores.aggregation.queryengines.sql.metadata.SQLReferenceVisitor;\n+import com.yahoo.elide.datastores.aggregation.queryengines.sql.metadata.SQLTable;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInstance;\n+\n+import javax.persistence.Id;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n+public class SqlReferenceVisitorTest {\n+\n+    private MetaDataStore store;\n+\n+    @FromTable(name = \"test_table\")\n+    @Include\n+    public class TestModel {\n+        @Id\n+        private long id;\n+\n+        @Join(\"%from.dimension1 = %join.dimension1\")\n+        private JoinModel joinModel;\n+\n+        //Logical name matches physical name\n+        @DimensionFormula(\"{{dimension1}}\")\n+        private String dimension1;\n+\n+        //Logical name does not match physical name\n+        @DimensionFormula(\"{{someColumn}}\")\n+        private String dimension2;\n+\n+        //Test a join to another table with a matching column name.\n+        @DimensionFormula(\"{{joinModel.dimension3}}\")\n+        private String dimension3;\n+    }\n+\n+    @FromTable(name = \"join_model\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a469dc8c37e135271d73e3cb33f38aa0a7a7c1e"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 977, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}