{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTQwNDQ3", "number": 1680, "title": "Dynamic Model Inheritance", "bodyText": "Description\nInferred inheritance for Dynamic model Child class.\nMotivation and Context\nChild class will be able to 'Override' parent class dimension / measure.\nHow Has This Been Tested?\nAdded Unit test\nScreenshots (if appropriate):\nLicense\nI confirm that this contribution is made under an Apache 2.0 license and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-11-20T08:35:37Z", "url": "https://github.com/yahoo/elide/pull/1680", "merged": true, "mergeCommit": {"oid": "5910f193a732920038779d2e8a1267387d6b39e6"}, "closed": true, "closedAt": "2020-11-23T17:40:07Z", "author": {"login": "AvaniMakwana"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeTIiUgH2gAyNTI0NTQwNDQ3OjI2OTJmNDI3NDE4OWEzOWUwYTdlNTI2ZDQ0OGFkMWEzYTA5YmM4YTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfYwsqAFqTUzNjcwNDUyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2692f4274189a39e0a7e526d448ad1a3a09bc8a4", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/2692f4274189a39e0a7e526d448ad1a3a09bc8a4", "committedDate": "2020-11-20T08:32:29Z", "message": "dynami model inheritance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "005c02798efd3c2f242eeed88ccb8e64dc515713", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/005c02798efd3c2f242eeed88ccb8e64dc515713", "committedDate": "2020-11-20T15:22:27Z", "message": "set to map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "719120626378566b841b0b918227d6b26f03f48f", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/719120626378566b841b0b918227d6b26f03f48f", "committedDate": "2020-11-20T15:38:32Z", "message": "Merge branch 'elide-5.x' into elide-5.x-dynamic-model-inheritance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ecbb9c2df32e01cacab3f93b7431d28d0987d9d", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/4ecbb9c2df32e01cacab3f93b7431d28d0987d9d", "committedDate": "2020-11-20T16:20:59Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60be3695193f40fd8c2c6f2a6d2c6a169ddc8bd8", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/60be3695193f40fd8c2c6f2a6d2c6a169ddc8bd8", "committedDate": "2020-11-20T19:16:29Z", "message": "override measure/dim"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1ODE3OTI4", "url": "https://github.com/yahoo/elide/pull/1680#pullrequestreview-535817928", "createdAt": "2020-11-20T22:26:27Z", "commit": {"oid": "60be3695193f40fd8c2c6f2a6d2c6a169ddc8bd8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1ODE4MjAz", "url": "https://github.com/yahoo/elide/pull/1680#pullrequestreview-535818203", "createdAt": "2020-11-20T22:27:07Z", "commit": {"oid": "60be3695193f40fd8c2c6f2a6d2c6a169ddc8bd8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjoyNzowOFrOH3izgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjoyNzowOFrOH3izgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAwMzk3MA==", "bodyText": "Might be nice to write some unit tests for these functions.", "url": "https://github.com/yahoo/elide/pull/1680#discussion_r528003970", "createdAt": "2020-11-20T22:27:08Z", "author": {"login": "aklish"}, "path": "elide-model-config/src/main/java/com/yahoo/elide/modelconfig/validator/DynamicConfigValidator.java", "diffHunk": "@@ -137,32 +140,63 @@ public void readAndValidateConfigs() throws IOException {\n         validateRequiredConfigsProvided();\n         validateNameUniqueness(this.elideSQLDBConfig.getDbconfigs());\n         validateNameUniqueness(this.elideTableConfig.getTables());\n+        populateInheritance(this.elideTableConfig);\n         validateTableConfig(this.elideTableConfig);\n         validateJoinedTablesDBConnectionName(this.elideTableConfig);\n-        populateInheritanceHierarchy(this.elideTableConfig);\n     }\n \n-    private static void populateInheritanceHierarchy(ElideTableConfig elideTableConfig) {\n+    private void populateInheritance(ElideTableConfig elideTableConfig) {\n         for (Table table : elideTableConfig.getTables()) {\n-\n             if (table.hasParent()) {\n-                Table parent = table.getParent(elideTableConfig);\n-\n-                table.getMeasures().forEach(measure -> {\n-                    if (parent.hasField(elideTableConfig, measure.getName())) {\n-                        measure.setOverride(true);\n-                    }\n-                });\n-\n-                table.getDimensions().forEach(dimension -> {\n-                    if (parent.hasField(elideTableConfig, dimension.getName())) {\n-                        dimension.setOverride(true);\n-                    }\n-                });\n+                Map<String, Measure> measures = getInheritedMeasures(table, new HashMap<String, Measure>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60be3695193f40fd8c2c6f2a6d2c6a169ddc8bd8"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b924e761ab6cbbd8cd0c801a2e356af447b7b4a4", "author": {"user": null}, "url": "https://github.com/yahoo/elide/commit/b924e761ab6cbbd8cd0c801a2e356af447b7b4a4", "committedDate": "2020-11-23T16:30:38Z", "message": "unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NzA0NTIx", "url": "https://github.com/yahoo/elide/pull/1680#pullrequestreview-536704521", "createdAt": "2020-11-23T17:39:48Z", "commit": {"oid": "b924e761ab6cbbd8cd0c801a2e356af447b7b4a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 695, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}