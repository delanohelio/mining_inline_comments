{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTQ0Mjgx", "number": 1204, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyODo0MVrODji5oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoxNDowNFrODq_aDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTk4NTYxOnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyODo0MVrOFvaaCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyODo0MVrOFvaaCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDA0Mw==", "bodyText": "Time variables should always include Units in their name so they are unambiguous.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385260043", "createdAt": "2020-02-27T17:28:41Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTime = 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTk4NzQwOnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyOTowNFrOFvabWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTo0Mzo1MFrOFveyeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDM3OA==", "bodyText": "I think we'll want two times here - one for the timeout and one for cleanup (deletion).  Both should be configurable.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385260378", "createdAt": "2020-02-27T17:29:04Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTime = 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyOTQ2Nw==", "bodyText": "We are calculating the cleanup time in elide-async based on provided maxRunTime. It's set to the maximum of 6 Hours or Twice of the maxRunTime provided by the user.  If we pass both params then we will have to do checks to make sure cleanup time is not less than the timeout.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385329467", "createdAt": "2020-02-27T19:39:12Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTime = 60;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDM3OA=="}, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzMTgzNA==", "bodyText": "elide/elide-async/src/main/java/com/yahoo/elide/async/service/AsyncExecutorService.java\n    \n    \n         Line 63\n      in\n      c88d08a\n    \n    \n    \n    \n\n        \n          \n           cleaner.scheduleWithFixedDelay(cleanUpTask, initialDelay, Math.max(DEFAULT_CLEANUP_DELAY, maxRunTime * 2), TimeUnit.MINUTES);", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385331834", "createdAt": "2020-02-27T19:43:50Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTime = 60;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDM3OA=="}, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTk4ODU2OnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyOToyOVrOFvacHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTo0MzowMVrOFvewxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDU3Mg==", "bodyText": "Do we need this?", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385260572", "createdAt": "2020-02-27T17:29:29Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTime = 60;\n+\n+    /**\n+     * Default number of hosts running Elide.\n+     */\n+    private int numberOfHosts = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzMTM5OQ==", "bodyText": "so we are using this param to randomize the start-up time for cleanup executor. If we have more than 1 hosts running and then if all of them have the cleanup service executing at the same time they could possibly try to update/delete the record at the same time and have lock error etc.  so this is how we are using it here. \n  \n    \n      elide/elide-async/src/main/java/com/yahoo/elide/async/service/AsyncExecutorService.java\n    \n    \n        Lines 59 to 63\n      in\n      c88d08a\n    \n    \n    \n    \n\n        \n          \n           Random random = new Random(); \n        \n\n        \n          \n           int initialDelay = random.ints(0, numberOfNodes * 2).limit(1).findFirst().getAsInt(); \n        \n\n        \n          \n            \n        \n\n        \n          \n           //Having a delay of at least DEFAULT_CLEANUP_DELAY between two cleanup attempts. \n        \n\n        \n          \n           cleaner.scheduleWithFixedDelay(cleanUpTask, initialDelay, Math.max(DEFAULT_CLEANUP_DELAY, maxRunTime * 2), TimeUnit.MINUTES);", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385331399", "createdAt": "2020-02-27T19:43:01Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTime = 60;\n+\n+    /**\n+     * Default number of hosts running Elide.\n+     */\n+    private int numberOfHosts = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDU3Mg=="}, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTk5MDU0OnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzozMDowOVrOFvadZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMjozOTozOVrOFwQlYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDkwMw==", "bodyText": "If we are using the JpaDataStore, these classes are automatically discovered.  There is no need to explicitly bind them.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385260903", "createdAt": "2020-02-27T17:30:09Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.models.AsyncQuery;\n+import com.yahoo.elide.async.models.AsyncQueryResult;\n+import com.yahoo.elide.async.service.AsyncExecutorService;\n+import com.yahoo.elide.core.EntityDictionary;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EntityScan(basePackageClasses = AsyncQuery.class)\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.enabled:false}\")\n+public class ElideAsyncConfiguration {\n+\n+    /**\n+     * Updates the entity dictionary for Elide by binding the Async Models.\n+     * @param dictionary Contains the static metadata about Elide models.\n+     * @return updated instance of dictionary.\n+     */\n+    public EntityDictionary bindAsyncDictionary(EntityDictionary dictionary) {\n+\n+        dictionary.bindEntity(AsyncQuery.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MTQ3NQ==", "bodyText": "We should be able to remove this function", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385261475", "createdAt": "2020-02-27T17:31:08Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.models.AsyncQuery;\n+import com.yahoo.elide.async.models.AsyncQueryResult;\n+import com.yahoo.elide.async.service.AsyncExecutorService;\n+import com.yahoo.elide.core.EntityDictionary;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EntityScan(basePackageClasses = AsyncQuery.class)\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.enabled:false}\")\n+public class ElideAsyncConfiguration {\n+\n+    /**\n+     * Updates the entity dictionary for Elide by binding the Async Models.\n+     * @param dictionary Contains the static metadata about Elide models.\n+     * @return updated instance of dictionary.\n+     */\n+    public EntityDictionary bindAsyncDictionary(EntityDictionary dictionary) {\n+\n+        dictionary.bindEntity(AsyncQuery.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDkwMw=="}, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzMjMwNQ==", "bodyText": "Did this because we did not want the Async Models to be discovered/binded if the enableAsync is set to false.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385332305", "createdAt": "2020-02-27T19:44:41Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.models.AsyncQuery;\n+import com.yahoo.elide.async.models.AsyncQueryResult;\n+import com.yahoo.elide.async.service.AsyncExecutorService;\n+import com.yahoo.elide.core.EntityDictionary;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EntityScan(basePackageClasses = AsyncQuery.class)\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.enabled:false}\")\n+public class ElideAsyncConfiguration {\n+\n+    /**\n+     * Updates the entity dictionary for Elide by binding the Async Models.\n+     * @param dictionary Contains the static metadata about Elide models.\n+     * @return updated instance of dictionary.\n+     */\n+    public EntityDictionary bindAsyncDictionary(EntityDictionary dictionary) {\n+\n+        dictionary.bindEntity(AsyncQuery.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDkwMw=="}, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0NzY4MA==", "bodyText": "@aklish will remove this. but we still need to include @EntityScan(basePackageClasses = AsyncQuery.class) for them to be discovered. Please see my response on the next comment.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r386147680", "createdAt": "2020-03-01T22:39:39Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.models.AsyncQuery;\n+import com.yahoo.elide.async.models.AsyncQueryResult;\n+import com.yahoo.elide.async.service.AsyncExecutorService;\n+import com.yahoo.elide.core.EntityDictionary;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EntityScan(basePackageClasses = AsyncQuery.class)\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.enabled:false}\")\n+public class ElideAsyncConfiguration {\n+\n+    /**\n+     * Updates the entity dictionary for Elide by binding the Async Models.\n+     * @param dictionary Contains the static metadata about Elide models.\n+     * @return updated instance of dictionary.\n+     */\n+    public EntityDictionary bindAsyncDictionary(EntityDictionary dictionary) {\n+\n+        dictionary.bindEntity(AsyncQuery.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDkwMw=="}, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjAwMTUyOnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/java/com/yahoo/elide/spring/App.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzozMzowMlrOFvaj1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMjo0NjozMFrOFwQneQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MjU0OA==", "bodyText": "I don't think we need this.  Why did we add?", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385262548", "createdAt": "2020-02-27T17:33:02Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/java/com/yahoo/elide/spring/App.java", "diffHunk": "@@ -15,6 +16,7 @@\n  */\n @Slf4j\n @SpringBootApplication\n+@EntityScan(basePackages = {\"${elide.modelPackage}\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMzMzI4MQ==", "bodyText": "If we don't this, the Async Models are bound by default to API and swagger as they have @Entity annotation. We wanted to avoid that and are explicitly telling it to bind/discover the entities in the provided package. We bind the Async Models separately based on if enableAsync is true/false.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r385333281", "createdAt": "2020-02-27T19:46:32Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/java/com/yahoo/elide/spring/App.java", "diffHunk": "@@ -15,6 +16,7 @@\n  */\n @Slf4j\n @SpringBootApplication\n+@EntityScan(basePackages = {\"${elide.modelPackage}\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MjU0OA=="}, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0ODIxNw==", "bodyText": "@aklish Since we are putting @EntityScan(basePackageClasses = AsyncQuery.class) in the ElideAsyncConfiguration.java, it overrides the default behavior of spring to scan all the entities in the package where App.java (with annotation @SpringBootApplication) will be placed. In my testing, I found that we can change @EntityScan(basePackages = {\"${elide.modelPackage}\"}) to @EntityScan in this class and it should work fine. This will be a simple change for users that can be included in the documentation.\nThe other option would be as suggested by you that we include the logic from the dynamic config design to use our own implementation of LocalContainerEntityManagerFactoryBean and add the Async models ourselves but it could potentially take time to implement and test out fullt. Let me know your thoughts.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r386148217", "createdAt": "2020-03-01T22:46:30Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/java/com/yahoo/elide/spring/App.java", "diffHunk": "@@ -15,6 +16,7 @@\n  */\n @Slf4j\n @SpringBootApplication\n+@EntityScan(basePackages = {\"${elide.modelPackage}\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MjU0OA=="}, "originalCommit": {"oid": "03f9b8186f24af1e92315d18b204196f81a8f169"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQ1MDE1OnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncCleanupConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxODo1MFrOF1FSqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxODo1MFrOF1FSqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNTU0NA==", "bodyText": "This should also be conditional on async being enabled (no point to have the cleaner in that case).", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391205544", "createdAt": "2020-03-11T19:18:50Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncCleanupConfiguration.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.service.AsyncCleanerService;\n+import com.yahoo.elide.async.service.AsyncQueryDAO;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.cleanupEnabled:false}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQ1MjIzOnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxOToyMFrOF1FT3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjowNDo1OFrOF1lCUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNTg1NA==", "bodyText": "In auto-configuration, I thought this was done with ConditionalOnMissingBean annotations rather than config.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391205854", "createdAt": "2020-03-11T19:19:20Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTimeMinutes = 60;\n+\n+    /**\n+     * Whether or not the cleanup is enabled.\n+     */\n+    private boolean cleanupEnabled = false;\n+\n+    /**\n+     * Default retention of async query and results.\n+     */\n+    private int queryCleanupDays = 7;\n+\n+    /**\n+     * Whether or not to use the default implementation of AsyncQueryDAO.\n+     * If false, the user will provide custom implementation of AsyncQueryDAO.\n+     */\n+    private boolean defaultAsyncQueryDAO = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNTY0OA==", "bodyText": "If the user provides his bean we will not be able to control the injection order so we should disable our injection using this param and also be consistent with standalone where the user overrides the getAsyncQueryDAO method.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391725648", "createdAt": "2020-03-12T16:04:58Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/AsyncProperties.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import lombok.Data;\n+\n+/**\n+ * Extra properties for setting up async query support.\n+ */\n+@Data\n+public class AsyncProperties extends ControllerProperties {\n+\n+    /**\n+     * Default thread pool size.\n+     */\n+    private int threadPoolSize = 6;\n+\n+    /**\n+     * Default max query run time.\n+     */\n+    private int maxRunTimeMinutes = 60;\n+\n+    /**\n+     * Whether or not the cleanup is enabled.\n+     */\n+    private boolean cleanupEnabled = false;\n+\n+    /**\n+     * Default retention of async query and results.\n+     */\n+    private int queryCleanupDays = 7;\n+\n+    /**\n+     * Whether or not to use the default implementation of AsyncQueryDAO.\n+     * If false, the user will provide custom implementation of AsyncQueryDAO.\n+     */\n+    private boolean defaultAsyncQueryDAO = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNTg1NA=="}, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQ1NzY3OnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/resources/application.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToyMTowNFrOF1FXQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjowNTo0MlrOF1lD8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNjcyMg==", "bodyText": "We need a URL path for this as well.   Async should probably inherit from the other endpoint configs.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391206722", "createdAt": "2020-03-11T19:21:04Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/resources/application.yaml", "diffHunk": "@@ -13,6 +13,13 @@ elide:\n     path: /doc\n     enabled: true\n     version: \"1.0\"\n+  async:\n+    enabled: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNjA2Nw==", "bodyText": "As discussed we will leave this param as is\n\nThe url param does exist but I have not set it specifically in application.yaml because the swagger documentation for async models is available at /doc, and the models are also accessible via jsonapi and graphgl so i did not set it specifically to something there.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391726067", "createdAt": "2020-03-12T16:05:42Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/test/resources/application.yaml", "diffHunk": "@@ -13,6 +13,13 @@ elide:\n     path: /doc\n     enabled: true\n     version: \"1.0\"\n+  async:\n+    enabled: true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNjcyMg=="}, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQ2MDc1OnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncQueryDAOConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToyMjowNFrOF1FZKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjowNjoyN1rOF1lF8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNzIxMQ==", "bodyText": "ConditionalOnMissingBean should suffice.", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391207211", "createdAt": "2020-03-11T19:22:04Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncQueryDAOConfiguration.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.service.AsyncQueryDAO;\n+import com.yahoo.elide.async.service.DefaultAsyncQueryDAO;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.defaultAsyncQueryDAO:true}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNjU3OA==", "bodyText": "see previous comment on AsyncProperties.java about adding defaultAsyncQueryDAO", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391726578", "createdAt": "2020-03-12T16:06:27Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncQueryDAOConfiguration.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.service.AsyncQueryDAO;\n+import com.yahoo.elide.async.service.DefaultAsyncQueryDAO;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.defaultAsyncQueryDAO:true}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNzIxMQ=="}, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQ2MjMxOnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToyMjozNFrOF1FaHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjowNjo0MVrOF1lGqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNzQ1Mg==", "bodyText": "Instead of breaking out all of these beans into separate files - why not just put them in a single ElideAsyncConfiguration class?", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391207452", "createdAt": "2020-03-11T19:22:34Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.models.AsyncQuery;\n+import com.yahoo.elide.async.service.AsyncExecutorService;\n+import com.yahoo.elide.async.service.AsyncQueryDAO;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EntityScan(basePackageClasses = AsyncQuery.class)\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.enabled:false}\")\n+public class ElideAsyncConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNjc2Mg==", "bodyText": "Merging them into one config now", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r391726762", "createdAt": "2020-03-12T16:06:41Z", "author": {"login": "moizarafat"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.spring.config;\n+\n+import com.yahoo.elide.Elide;\n+import com.yahoo.elide.async.models.AsyncQuery;\n+import com.yahoo.elide.async.service.AsyncExecutorService;\n+import com.yahoo.elide.async.service.AsyncQueryDAO;\n+\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Async Configuration For Elide Services.  Override any of the beans (by defining your own) to change\n+ * the default behavior.\n+ */\n+@Configuration\n+@EntityScan(basePackageClasses = AsyncQuery.class)\n+@EnableConfigurationProperties(ElideConfigProperties.class)\n+@ConditionalOnExpression(\"${elide.async.enabled:false}\")\n+public class ElideAsyncConfiguration {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNzQ1Mg=="}, "originalCommit": {"oid": "f4fc324b4c503a1ac41d8dec88db4f3268646ec5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDA1NjQ1OnYy", "diffSide": "RIGHT", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoxNDowNFrOF7FGug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoxNDowNFrOF7FGug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5Mzk0Ng==", "bodyText": "We can remove DAOConfiguration now", "url": "https://github.com/yahoo/elide/pull/1204#discussion_r397493946", "createdAt": "2020-03-24T22:14:04Z", "author": {"login": "aklish"}, "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories", "diffHunk": "@@ -1,5 +1,7 @@\n org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n  com.yahoo.elide.spring.config.ElideAutoConfiguration, \\\n+ com.yahoo.elide.spring.config.ElideAsyncQueryDAOConfiguration, \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fdad1b1b5c2053fbec736031c032f574082a541"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1066, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}