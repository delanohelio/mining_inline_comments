{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTY1ODU0", "number": 1281, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNDozMzoyNVrOD2VhJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNDozMzoyNVrOD2VhJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MzAyMjQ3OnYy", "diffSide": "RIGHT", "path": "elide-integration-tests/src/test/java/com/yahoo/elide/tests/ResourceIT.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNDozMzoyNVrOGMFYAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjoxMzo1OVrOGNb_uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMyNDE2MA==", "bodyText": "@aklish any idea why detail is now treated as an array here?", "url": "https://github.com/yahoo/elide/pull/1281#discussion_r415324160", "createdAt": "2020-04-26T14:33:25Z", "author": {"login": "wcekan"}, "path": "elide-integration-tests/src/test/java/com/yahoo/elide/tests/ResourceIT.java", "diffHunk": "@@ -1393,6 +1394,23 @@ public void createChildRelateExisting() {\n                 .body(equalTo(expected));\n     }\n \n+    @Test\n+    public void invalidPatchMissingId() {\n+        String request = jsonParser.getJson(\"/ResourceIT/invalidPatchMissingId.req.json\");\n+\n+        String detail = \"Bad Request Body'Patch extension requires all objects to have an assigned \"\n+                + \"ID (temporary or permanent) when assigning relationships.'\";\n+\n+        given()\n+                .contentType(JSONAPI_CONTENT_TYPE_WITH_JSON_PATCH_EXTENSION)\n+                .accept(JSONAPI_CONTENT_TYPE_WITH_JSON_PATCH_EXTENSION)\n+                .body(request)\n+                .patch(\"/\")\n+                .then()\n+                .statusCode(HttpStatus.SC_BAD_REQUEST)\n+                .body(\"errors[0].detail[0]\", equalTo(Encode.forHtml(detail)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e643c54998e18c10e71468c1b2a589f0334f74"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczNTkxNg==", "bodyText": "That might be a bug.  I checked JSON-API spec - and I think that should just be a string.", "url": "https://github.com/yahoo/elide/pull/1281#discussion_r416735916", "createdAt": "2020-04-28T16:03:29Z", "author": {"login": "aklish"}, "path": "elide-integration-tests/src/test/java/com/yahoo/elide/tests/ResourceIT.java", "diffHunk": "@@ -1393,6 +1394,23 @@ public void createChildRelateExisting() {\n                 .body(equalTo(expected));\n     }\n \n+    @Test\n+    public void invalidPatchMissingId() {\n+        String request = jsonParser.getJson(\"/ResourceIT/invalidPatchMissingId.req.json\");\n+\n+        String detail = \"Bad Request Body'Patch extension requires all objects to have an assigned \"\n+                + \"ID (temporary or permanent) when assigning relationships.'\";\n+\n+        given()\n+                .contentType(JSONAPI_CONTENT_TYPE_WITH_JSON_PATCH_EXTENSION)\n+                .accept(JSONAPI_CONTENT_TYPE_WITH_JSON_PATCH_EXTENSION)\n+                .body(request)\n+                .patch(\"/\")\n+                .then()\n+                .statusCode(HttpStatus.SC_BAD_REQUEST)\n+                .body(\"errors[0].detail[0]\", equalTo(Encode.forHtml(detail)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMyNDE2MA=="}, "originalCommit": {"oid": "f8e643c54998e18c10e71468c1b2a589f0334f74"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc0MzM1Mg==", "bodyText": "Yes, I suspect it might be processed as\n(errors[0].detail)[0] due to the outer and inner arrays.", "url": "https://github.com/yahoo/elide/pull/1281#discussion_r416743352", "createdAt": "2020-04-28T16:13:59Z", "author": {"login": "wcekan"}, "path": "elide-integration-tests/src/test/java/com/yahoo/elide/tests/ResourceIT.java", "diffHunk": "@@ -1393,6 +1394,23 @@ public void createChildRelateExisting() {\n                 .body(equalTo(expected));\n     }\n \n+    @Test\n+    public void invalidPatchMissingId() {\n+        String request = jsonParser.getJson(\"/ResourceIT/invalidPatchMissingId.req.json\");\n+\n+        String detail = \"Bad Request Body'Patch extension requires all objects to have an assigned \"\n+                + \"ID (temporary or permanent) when assigning relationships.'\";\n+\n+        given()\n+                .contentType(JSONAPI_CONTENT_TYPE_WITH_JSON_PATCH_EXTENSION)\n+                .accept(JSONAPI_CONTENT_TYPE_WITH_JSON_PATCH_EXTENSION)\n+                .body(request)\n+                .patch(\"/\")\n+                .then()\n+                .statusCode(HttpStatus.SC_BAD_REQUEST)\n+                .body(\"errors[0].detail[0]\", equalTo(Encode.forHtml(detail)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMyNDE2MA=="}, "originalCommit": {"oid": "f8e643c54998e18c10e71468c1b2a589f0334f74"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1025, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}