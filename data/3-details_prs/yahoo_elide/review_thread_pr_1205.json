{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTQ0MzY4", "number": 1205, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzozNDo0NVrODjjB6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMToyNjowNlrODq-gKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjAwNjgyOnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzozNDo0NVrOFvanJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMjowNjo0N1rOFwQbcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzM5OQ==", "bodyText": "I don't think we need this.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385263399", "createdAt": "2020-02-27T17:34:45Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -179,6 +195,42 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTime() {\n+        return 60;\n+    }\n+\n+    /**\n+     * Number of hosts running Elide Service.\n+     *\n+     * @return Default: 1\n+     */\n+    default Integer getNumberOfHosts() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0NjA2NQ==", "bodyText": "We are using this param to randomize the start-up time for the cleanup executor. If we have more than 1 host running and then if all of them have the cleanup service executing at the same time they could possibly try to update/delete the record at the same time and have lock error etc.  so this is how we are using it here. \n  \n    \n      elide/elide-async/src/main/java/com/yahoo/elide/async/service/AsyncExecutorService.java\n    \n    \n        Lines 59 to 63\n      in\n      c88d08a\n    \n    \n    \n    \n\n        \n          \n           Random random = new Random(); \n        \n\n        \n          \n           int initialDelay = random.ints(0, numberOfNodes * 2).limit(1).findFirst().getAsInt(); \n        \n\n        \n          \n            \n        \n\n        \n          \n           //Having a delay of at least DEFAULT_CLEANUP_DELAY between two cleanup attempts. \n        \n\n        \n          \n           cleaner.scheduleWithFixedDelay(cleanUpTask, initialDelay, Math.max(DEFAULT_CLEANUP_DELAY, maxRunTime * 2), TimeUnit.MINUTES);", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385346065", "createdAt": "2020-02-27T20:11:41Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -179,6 +195,42 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTime() {\n+        return 60;\n+    }\n+\n+    /**\n+     * Number of hosts running Elide Service.\n+     *\n+     * @return Default: 1\n+     */\n+    default Integer getNumberOfHosts() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzM5OQ=="}, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0NTEzNw==", "bodyText": "done", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r386145137", "createdAt": "2020-03-01T22:06:47Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -179,6 +195,42 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTime() {\n+        return 60;\n+    }\n+\n+    /**\n+     * Number of hosts running Elide Service.\n+     *\n+     * @return Default: 1\n+     */\n+    default Integer getNumberOfHosts() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzM5OQ=="}, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjAwODc1OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzozNToyMlrOFvaoUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTowNTozNFrOFvhK1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzY5OA==", "bodyText": "See comments I Had on Spring in general.  Settings that involve time should have units in their name.  We need two time settings (timeout and delete).", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385263698", "createdAt": "2020-02-27T17:35:22Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -179,6 +195,42 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTime() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDgzNg==", "bodyText": "Done", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370836", "createdAt": "2020-02-27T21:05:34Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -179,6 +195,42 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTime() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzY5OA=="}, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjAxMDA4OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzozNTo0OVrOFvapNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTowNDoxM1rOFvhIdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzkyNg==", "bodyText": "We don't need a setting for this.  The package name is fixed (by us).", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385263926", "createdAt": "2020-02-27T17:35:49Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -131,6 +132,21 @@ default int getPort() {\n     default String getModelPackageName() {\n         return \"com.yourcompany.elide.models\";\n     }\n+    \n+    /**\n+     * Package name containing the Async models to support the Async query feature. This package will be \n+     * recursively scanned for @Entity's and registered with Elide.\n+     *\n+     * NOTE: This will scan for all entities in that package and bind this data to a set named \"elideAllModels\".\n+     *       If providing a custom ElideSettings object, you can inject this data into your class by using:\n+     *\n+     *       <strong>@Inject @Named(\"elideAllModels\") Set&lt;Class&gt; entities;</strong>\n+     *\n+     * @return\n+     */\n+    default String getAsyncModelPackageName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDIzMQ==", "bodyText": "Done", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370231", "createdAt": "2020-02-27T21:04:13Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -131,6 +132,21 @@ default int getPort() {\n     default String getModelPackageName() {\n         return \"com.yourcompany.elide.models\";\n     }\n+    \n+    /**\n+     * Package name containing the Async models to support the Async query feature. This package will be \n+     * recursively scanned for @Entity's and registered with Elide.\n+     *\n+     * NOTE: This will scan for all entities in that package and bind this data to a set named \"elideAllModels\".\n+     *       If providing a custom ElideSettings object, you can inject this data into your class by using:\n+     *\n+     *       <strong>@Inject @Named(\"elideAllModels\") Set&lt;Class&gt; entities;</strong>\n+     *\n+     * @return\n+     */\n+    default String getAsyncModelPackageName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzkyNg=="}, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjAxOTAyOnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/Util.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzozODoyNFrOFvaunw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTowNDowN1rOFvhIUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NTMxMQ==", "bodyText": "Instead of passing the package name for async here (which Elide already knows), you could just pass a flag about whether or not to include async models.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385265311", "createdAt": "2020-02-27T17:38:24Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/Util.java", "diffHunk": "@@ -23,7 +23,8 @@\n  */\n public class Util {\n \n-    public static EntityManagerFactory getEntityManagerFactory(String modelPackageName, Properties options) {\n+    public static EntityManagerFactory getEntityManagerFactory(String modelPackageName, String asyncModelPackageName, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDE5Mg==", "bodyText": "Done", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370192", "createdAt": "2020-02-27T21:04:07Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/Util.java", "diffHunk": "@@ -23,7 +23,8 @@\n  */\n public class Util {\n \n-    public static EntityManagerFactory getEntityManagerFactory(String modelPackageName, Properties options) {\n+    public static EntityManagerFactory getEntityManagerFactory(String modelPackageName, String asyncModelPackageName, ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NTMxMQ=="}, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjAyNTI3OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/Util.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo0MDoyMFrOFvayow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTowNDowMFrOFvhIHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NjMzOQ==", "bodyText": "asyncModelPackageName can just be AsyncQuery.class.getPackage().getName()", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385266339", "createdAt": "2020-02-27T17:40:20Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/Util.java", "diffHunk": "@@ -52,13 +53,31 @@ public static EntityManagerFactory getEntityManagerFactory(String modelPackageNa\n         }\n \n         PersistenceUnitInfo persistenceUnitInfo = new PersistenceUnitInfoImpl(\"elide-stand-alone\",\n-                getAllEntities(modelPackageName), options);\n+                combineModelEntities(modelPackageName, asyncModelPackageName), options);\n \n         return new EntityManagerFactoryBuilderImpl(\n                 new PersistenceUnitInfoDescriptor(persistenceUnitInfo), new HashMap<>())\n                 .build();\n     }\n \n+    /**\n+     * Combine the model entities with Async model.\n+     *\n+     * @param modelPackageName Package name\n+     * @param asyncModelPackageName Async model package Name\n+     * @return All entities combined from both package.\n+     */\n+    public static List<String> combineModelEntities(String modelPackageName, String asyncModelPackageName) {\n+\n+        List<String> modelEntities = getAllEntities(modelPackageName);\n+\n+        if (asyncModelPackageName != null) {\n+            modelEntities.addAll(getAllEntities(asyncModelPackageName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDE0Mw==", "bodyText": "Done", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370143", "createdAt": "2020-02-27T21:04:00Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/Util.java", "diffHunk": "@@ -52,13 +53,31 @@ public static EntityManagerFactory getEntityManagerFactory(String modelPackageNa\n         }\n \n         PersistenceUnitInfo persistenceUnitInfo = new PersistenceUnitInfoImpl(\"elide-stand-alone\",\n-                getAllEntities(modelPackageName), options);\n+                combineModelEntities(modelPackageName, asyncModelPackageName), options);\n \n         return new EntityManagerFactoryBuilderImpl(\n                 new PersistenceUnitInfoDescriptor(persistenceUnitInfo), new HashMap<>())\n                 .build();\n     }\n \n+    /**\n+     * Combine the model entities with Async model.\n+     *\n+     * @param modelPackageName Package name\n+     * @param asyncModelPackageName Async model package Name\n+     * @return All entities combined from both package.\n+     */\n+    public static List<String> combineModelEntities(String modelPackageName, String asyncModelPackageName) {\n+\n+        List<String> modelEntities = getAllEntities(modelPackageName);\n+\n+        if (asyncModelPackageName != null) {\n+            modelEntities.addAll(getAllEntities(asyncModelPackageName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NjMzOQ=="}, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjAzMzc3OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo0Mjo1MVrOFva37w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTowMzo1NlrOFvhIBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NzY5NQ==", "bodyText": "See my earlier comment here.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385267695", "createdAt": "2020-02-27T17:42:51Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "diffHunk": "@@ -58,7 +63,8 @@ public ElideResourceConfig(ServiceLocator injector, @Context ServletContext serv\n         register(new AbstractBinder() {\n             @Override\n             protected void configure() {\n-                bind(Util.getAllEntities(settings.getModelPackageName())).to(Set.class).named(\"elideAllModels\");\n+                bind(Util.combineModelEntities(settings.getModelPackageName(), settings.getAsyncModelPackageName())).to(Set.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDExNw==", "bodyText": "Done", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370117", "createdAt": "2020-02-27T21:03:56Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "diffHunk": "@@ -58,7 +63,8 @@ public ElideResourceConfig(ServiceLocator injector, @Context ServletContext serv\n         register(new AbstractBinder() {\n             @Override\n             protected void configure() {\n-                bind(Util.getAllEntities(settings.getModelPackageName())).to(Set.class).named(\"elideAllModels\");\n+                bind(Util.combineModelEntities(settings.getModelPackageName(), settings.getAsyncModelPackageName())).to(Set.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NzY5NQ=="}, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjAzNDY3OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo0MzowN1rOFva4fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTowMzo1MlrOFvhH3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NzgzOA==", "bodyText": "See my earlier comment here.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385267838", "createdAt": "2020-02-27T17:43:07Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -64,7 +65,7 @@\n      */\n     default ElideSettings getElideSettings(ServiceLocator injector) {\n         EntityManagerFactory entityManagerFactory = Util.getEntityManagerFactory(getModelPackageName(),\n-                getDatabaseProperties());\n+                getAsyncModelPackageName(), getDatabaseProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MDA3OA==", "bodyText": "Done", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r385370078", "createdAt": "2020-02-27T21:03:52Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -64,7 +65,7 @@\n      */\n     default ElideSettings getElideSettings(ServiceLocator injector) {\n         EntityManagerFactory entityManagerFactory = Util.getEntityManagerFactory(getModelPackageName(),\n-                getDatabaseProperties());\n+                getAsyncModelPackageName(), getDatabaseProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NzgzOA=="}, "originalCommit": {"oid": "5a15ded7ff2f761b8d916065d9b689edfa5fc88a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQyNjYxOnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxMToxMVrOF1FDgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxMToxMVrOF1FDgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMTY2NA==", "bodyText": "This should be qualified with Async", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391201664", "createdAt": "2020-03-11T19:11:11Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -167,6 +169,60 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Enable the support for cleaning up Async query history. If false, the async cleanup feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsyncCleanup() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTimeMinutes() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2678b3fb6d869e159b4d038fa825457e15e3ebd3"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQyNzAzOnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxMToyMFrOF1FDwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxMToyMFrOF1FDwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMTcyOQ==", "bodyText": "Same comment.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391201729", "createdAt": "2020-03-11T19:11:20Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -167,6 +169,60 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Enable the support for cleaning up Async query history. If false, the async cleanup feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsyncCleanup() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTimeMinutes() {\n+        return 60;\n+    }\n+\n+    /**\n+     * Number of days history to retain for async query executions and results.\n+     *\n+     * @return Default: 7\n+     */\n+    default Integer getQueryCleanupDays() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2678b3fb6d869e159b4d038fa825457e15e3ebd3"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQyOTg4OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxMjoxOFrOF1FFjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjo1Mjo1M1rOF1m8qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMjE4OA==", "bodyText": "Instead of resolving this as a setting - this can be injected into the async code (either via lifecycle hook or bean).", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391202188", "createdAt": "2020-03-11T19:12:18Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -167,6 +169,60 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Enable the support for cleaning up Async query history. If false, the async cleanup feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsyncCleanup() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTimeMinutes() {\n+        return 60;\n+    }\n+\n+    /**\n+     * Number of days history to retain for async query executions and results.\n+     *\n+     * @return Default: 7\n+     */\n+    default Integer getQueryCleanupDays() {\n+        return 7;\n+    }\n+\n+    /**\n+     * Implementation of AsyncQueryDAO to use.\n+     *\n+     * @return AsyncQueryDAO type object.\n+     */\n+    default AsyncQueryDAO getAsyncQueryDAO() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2678b3fb6d869e159b4d038fa825457e15e3ebd3"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1Njk2OA==", "bodyText": "As discussed will leave it as is.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391756968", "createdAt": "2020-03-12T16:52:53Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -167,6 +169,60 @@ default boolean enableJSONAPI() {\n     default boolean enableGraphQL() {\n         return true;\n     }\n+    \n+    /**\n+     * Enable the support for Async querying feature. If false, the async feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsync() {\n+        return false;\n+    }\n+\n+    /**\n+     * Enable the support for cleaning up Async query history. If false, the async cleanup feature will be disabled.\n+     *\n+     * @return Default: False\n+     */\n+    default boolean enableAsyncCleanup() {\n+        return false;\n+    }\n+\n+    /**\n+     * Thread Size for Async queries to run in parallel.\n+     *\n+     * @return Default: 5\n+     */\n+    default Integer getAsyncThreadSize() {\n+        return 5;\n+    }\n+\n+    /**\n+     * Maximum Query Run time for Async Queries to mark as TIMEDOUT.\n+     *\n+     * @return Default: 60\n+     */\n+    default Integer getMaxRunTimeMinutes() {\n+        return 60;\n+    }\n+\n+    /**\n+     * Number of days history to retain for async query executions and results.\n+     *\n+     * @return Default: 7\n+     */\n+    default Integer getQueryCleanupDays() {\n+        return 7;\n+    }\n+\n+    /**\n+     * Implementation of AsyncQueryDAO to use.\n+     *\n+     * @return AsyncQueryDAO type object.\n+     */\n+    default AsyncQueryDAO getAsyncQueryDAO() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMjE4OA=="}, "originalCommit": {"oid": "2678b3fb6d869e159b4d038fa825457e15e3ebd3"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQzMjk2OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxMzoyMlrOF1FHow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDo1MDowN1rOF1InLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMjcyMw==", "bodyText": "Most of the other APIs have a config setting for the base path.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391202723", "createdAt": "2020-03-11T19:13:22Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "diffHunk": "@@ -85,6 +112,21 @@ protected void configure() {\n             protected void configure() {\n                 Map<String, Swagger> swaggerDocs = settings.enableSwagger();\n                 if (!swaggerDocs.isEmpty()) {\n+                    // Include the async models in swagger docs\n+                    if(settings.enableAsync()) {\n+                        EntityDictionary dictionary = new EntityDictionary(new HashMap());\n+                        dictionary.bindEntity(AsyncQuery.class);\n+                        dictionary.bindEntity(AsyncQueryResult.class);\n+                         \n+                        Info info = new Info().title(\"Async Service\").version(\"1.0\");\n+\n+                        SwaggerBuilder builder = new SwaggerBuilder(dictionary, info);\n+\n+                        Swagger swagger = builder.build().basePath(\"/api/v1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2678b3fb6d869e159b4d038fa825457e15e3ebd3"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1OTk0OQ==", "bodyText": "As discussed no config setting exists will add a new one.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391259949", "createdAt": "2020-03-11T20:50:07Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "diffHunk": "@@ -85,6 +112,21 @@ protected void configure() {\n             protected void configure() {\n                 Map<String, Swagger> swaggerDocs = settings.enableSwagger();\n                 if (!swaggerDocs.isEmpty()) {\n+                    // Include the async models in swagger docs\n+                    if(settings.enableAsync()) {\n+                        EntityDictionary dictionary = new EntityDictionary(new HashMap());\n+                        dictionary.bindEntity(AsyncQuery.class);\n+                        dictionary.bindEntity(AsyncQueryResult.class);\n+                         \n+                        Info info = new Info().title(\"Async Service\").version(\"1.0\");\n+\n+                        SwaggerBuilder builder = new SwaggerBuilder(dictionary, info);\n+\n+                        Swagger swagger = builder.build().basePath(\"/api/v1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMjcyMw=="}, "originalCommit": {"oid": "2678b3fb6d869e159b4d038fa825457e15e3ebd3"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQzNzI4OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxNDo0MFrOF1FKQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjo1NjowOVrOF1nE9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMzM5Mw==", "bodyText": "Just create the DAO here.  We don't need a setting.  Users can override this function if they want something different.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391203393", "createdAt": "2020-03-11T19:14:40Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "diffHunk": "@@ -76,6 +84,25 @@ protected void configure() {\n                 bind(elideSettings).to(ElideSettings.class);\n                 bind(elideSettings.getDictionary()).to(EntityDictionary.class);\n                 bind(elideSettings.getDataStore()).to(DataStore.class).named(\"elideDataStore\");\n+\n+                // Binding async service\n+                if(settings.enableAsync()) {\n+                    AsyncQueryDAO asyncQueryDao = settings.getAsyncQueryDAO();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2678b3fb6d869e159b4d038fa825457e15e3ebd3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1OTA5Mg==", "bodyText": "As discussed will leave this as is.", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r391759092", "createdAt": "2020-03-12T16:56:09Z", "author": {"login": "moizarafat"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideResourceConfig.java", "diffHunk": "@@ -76,6 +84,25 @@ protected void configure() {\n                 bind(elideSettings).to(ElideSettings.class);\n                 bind(elideSettings.getDictionary()).to(EntityDictionary.class);\n                 bind(elideSettings.getDataStore()).to(DataStore.class).named(\"elideDataStore\");\n+\n+                // Binding async service\n+                if(settings.enableAsync()) {\n+                    AsyncQueryDAO asyncQueryDao = settings.getAsyncQueryDAO();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwMzM5Mw=="}, "originalCommit": {"oid": "2678b3fb6d869e159b4d038fa825457e15e3ebd3"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzkwODI1OnYy", "diffSide": "RIGHT", "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMToyNjowNlrOF7DtAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoxODowMVrOF7FNgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ3MDk3Ng==", "bodyText": "Instead of making this the async swagger path - how about a config setting for swagger in general (including non-asyc models)?", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r397470976", "createdAt": "2020-03-24T21:26:06Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -211,17 +211,26 @@ default Integer getMaxRunTimeMinutes() {\n      *\n      * @return Default: 7\n      */\n-    default Integer getQueryCleanupDays() {\n+    default Integer getAsyncQueryCleanupDays() {\n         return 7;\n     }\n \n+    /**\n+     *  Root path specification for the Async Models Swagger endpoint.\n+     *\n+     * @return Default: /api/v1\n+     */\n+    default String getAsyncSwaggerPath() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a34233254173fc009f4c3e7661a4e313e7277ef"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5NTY4MA==", "bodyText": "This should just come from getJsonApiPathSpec()", "url": "https://github.com/yahoo/elide/pull/1205#discussion_r397495680", "createdAt": "2020-03-24T22:18:01Z", "author": {"login": "aklish"}, "path": "elide-standalone/src/main/java/com/yahoo/elide/standalone/config/ElideStandaloneSettings.java", "diffHunk": "@@ -211,17 +211,26 @@ default Integer getMaxRunTimeMinutes() {\n      *\n      * @return Default: 7\n      */\n-    default Integer getQueryCleanupDays() {\n+    default Integer getAsyncQueryCleanupDays() {\n         return 7;\n     }\n \n+    /**\n+     *  Root path specification for the Async Models Swagger endpoint.\n+     *\n+     * @return Default: /api/v1\n+     */\n+    default String getAsyncSwaggerPath() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ3MDk3Ng=="}, "originalCommit": {"oid": "9a34233254173fc009f4c3e7661a4e313e7277ef"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1068, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}