{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTc4MjQ3", "number": 1163, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQyMDozMzoyMlrODavWdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQyMDozMzoyMlrODavWdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzY1MzY0OnYy", "diffSide": "RIGHT", "path": "elide-core/src/test/java/com/yahoo/elide/jsonapi/JsonApiTest.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQyMDozMzoyMlrOFh1t1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNToyNjo1OFrOFh4MoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw==", "bodyText": "Why do we do this?", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371027413", "createdAt": "2020-01-26T20:33:22Z", "author": {"login": "aklish"}, "path": "elide-core/src/test/java/com/yahoo/elide/jsonapi/JsonApiTest.java", "diffHunk": "@@ -326,5 +339,21 @@ public void readListWithMeta() throws IOException {\n         assertEquals(attributes.get(\"firstName\"), \"bob\");\n         assertEquals(data.getRelationships().get(\"children\").getData().getSingleValue().getId(), \"2\");\n         assertNull(included);\n+        checkEquality(jsonApiDocument);\n+    }\n+\n+    private void checkEquality(JsonApiDocument doc1) {\n+        JsonApiDocument doc2;\n+        try {\n+            String json = mapper.writeJsonApiDocument(doc1);\n+            doc2 = mapper.readJsonApiDocument(json);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        if (doc2.getData() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ab1f6734066acc63ebfa7b0bb56c6e0f266bd41"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0NTYwNg==", "bodyText": "Good question.  Seems the null is not handled well.\nI found the problem. Somehow serializing changes the value of doc.data!", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371045606", "createdAt": "2020-01-27T01:44:19Z", "author": {"login": "wcekan"}, "path": "elide-core/src/test/java/com/yahoo/elide/jsonapi/JsonApiTest.java", "diffHunk": "@@ -326,5 +339,21 @@ public void readListWithMeta() throws IOException {\n         assertEquals(attributes.get(\"firstName\"), \"bob\");\n         assertEquals(data.getRelationships().get(\"children\").getData().getSingleValue().getId(), \"2\");\n         assertNull(included);\n+        checkEquality(jsonApiDocument);\n+    }\n+\n+    private void checkEquality(JsonApiDocument doc1) {\n+        JsonApiDocument doc2;\n+        try {\n+            String json = mapper.writeJsonApiDocument(doc1);\n+            doc2 = mapper.readJsonApiDocument(json);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        if (doc2.getData() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}, "originalCommit": {"oid": "3ab1f6734066acc63ebfa7b0bb56c6e0f266bd41"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA0NjM3Nw==", "bodyText": "I removed this hack and added a verification that data is unchanged after serialization, which fails \ud83d\ude1e", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371046377", "createdAt": "2020-01-27T01:52:27Z", "author": {"login": "wcekan"}, "path": "elide-core/src/test/java/com/yahoo/elide/jsonapi/JsonApiTest.java", "diffHunk": "@@ -326,5 +339,21 @@ public void readListWithMeta() throws IOException {\n         assertEquals(attributes.get(\"firstName\"), \"bob\");\n         assertEquals(data.getRelationships().get(\"children\").getData().getSingleValue().getId(), \"2\");\n         assertNull(included);\n+        checkEquality(jsonApiDocument);\n+    }\n+\n+    private void checkEquality(JsonApiDocument doc1) {\n+        JsonApiDocument doc2;\n+        try {\n+            String json = mapper.writeJsonApiDocument(doc1);\n+            doc2 = mapper.readJsonApiDocument(json);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        if (doc2.getData() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}, "originalCommit": {"oid": "3ab1f6734066acc63ebfa7b0bb56c6e0f266bd41"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1MDIyNg==", "bodyText": "It seems \"Empty\" object and Null object are written the same, but read differently.", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371050226", "createdAt": "2020-01-27T02:32:45Z", "author": {"login": "wcekan"}, "path": "elide-core/src/test/java/com/yahoo/elide/jsonapi/JsonApiTest.java", "diffHunk": "@@ -326,5 +339,21 @@ public void readListWithMeta() throws IOException {\n         assertEquals(attributes.get(\"firstName\"), \"bob\");\n         assertEquals(data.getRelationships().get(\"children\").getData().getSingleValue().getId(), \"2\");\n         assertNull(included);\n+        checkEquality(jsonApiDocument);\n+    }\n+\n+    private void checkEquality(JsonApiDocument doc1) {\n+        JsonApiDocument doc2;\n+        try {\n+            String json = mapper.writeJsonApiDocument(doc1);\n+            doc2 = mapper.readJsonApiDocument(json);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        if (doc2.getData() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}, "originalCommit": {"oid": "3ab1f6734066acc63ebfa7b0bb56c6e0f266bd41"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1MDU2OQ==", "bodyText": "expected:\n<JsonApiDocument(data=Data(values=[], relationshipType=MANY_TO_ONE), meta=null, links=null, includedRecs=[], included=null)>\nbut was:\n<JsonApiDocument(data=null, meta=null, links=null, includedRecs=[], included=null)>", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371050569", "createdAt": "2020-01-27T02:36:02Z", "author": {"login": "wcekan"}, "path": "elide-core/src/test/java/com/yahoo/elide/jsonapi/JsonApiTest.java", "diffHunk": "@@ -326,5 +339,21 @@ public void readListWithMeta() throws IOException {\n         assertEquals(attributes.get(\"firstName\"), \"bob\");\n         assertEquals(data.getRelationships().get(\"children\").getData().getSingleValue().getId(), \"2\");\n         assertNull(included);\n+        checkEquality(jsonApiDocument);\n+    }\n+\n+    private void checkEquality(JsonApiDocument doc1) {\n+        JsonApiDocument doc2;\n+        try {\n+            String json = mapper.writeJsonApiDocument(doc1);\n+            doc2 = mapper.readJsonApiDocument(json);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        if (doc2.getData() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}, "originalCommit": {"oid": "3ab1f6734066acc63ebfa7b0bb56c6e0f266bd41"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2ODA2NQ==", "bodyText": "Will now treat \"Empty\" object and Null data object as equal.", "url": "https://github.com/yahoo/elide/pull/1163#discussion_r371068065", "createdAt": "2020-01-27T05:26:58Z", "author": {"login": "wcekan"}, "path": "elide-core/src/test/java/com/yahoo/elide/jsonapi/JsonApiTest.java", "diffHunk": "@@ -326,5 +339,21 @@ public void readListWithMeta() throws IOException {\n         assertEquals(attributes.get(\"firstName\"), \"bob\");\n         assertEquals(data.getRelationships().get(\"children\").getData().getSingleValue().getId(), \"2\");\n         assertNull(included);\n+        checkEquality(jsonApiDocument);\n+    }\n+\n+    private void checkEquality(JsonApiDocument doc1) {\n+        JsonApiDocument doc2;\n+        try {\n+            String json = mapper.writeJsonApiDocument(doc1);\n+            doc2 = mapper.readJsonApiDocument(json);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        if (doc2.getData() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyNzQxMw=="}, "originalCommit": {"oid": "3ab1f6734066acc63ebfa7b0bb56c6e0f266bd41"}, "originalPosition": 119}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1051, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}