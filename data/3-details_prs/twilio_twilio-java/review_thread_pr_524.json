{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDI1OTQ1", "number": 524, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjoxNzo0MVrOD0_zQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTozODo1MlrOD17TVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODk3ODU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/twilio/exception/ApiException.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjoxNzo0MVrOGKOI9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMzo0MToyMlrOGKQTOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM3MDYxNQ==", "bodyText": "Getting this warning from SonarLint: https://rules.sonarsource.com/java/RSPEC-1948", "url": "https://github.com/twilio/twilio-java/pull/524#discussion_r413370615", "createdAt": "2020-04-22T22:17:41Z", "author": {"login": "thinkingserious"}, "path": "src/main/java/com/twilio/exception/ApiException.java", "diffHunk": "@@ -1,20 +1,23 @@\n package com.twilio.exception;\n \n+import java.util.Map;\n+\n public class ApiException extends TwilioException {\n \n     private static final long serialVersionUID = -3228320166955630014L;\n \n     private final Integer code;\n     private final String moreInfo;\n     private final Integer status;\n+    private final Map<String, Object> details;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2c95f0f266cc6f53c9e2c40393d6fdd456b8e2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQwNjAwOA==", "bodyText": "I can see the issue, why it is complaining, but the concrete type creation is in Jackson, and i wouldn't want to override that. Fwiw, jackson creates LinkedHashMap<> and its serializable", "url": "https://github.com/twilio/twilio-java/pull/524#discussion_r413406008", "createdAt": "2020-04-22T23:41:22Z", "author": {"login": "ashish-s"}, "path": "src/main/java/com/twilio/exception/ApiException.java", "diffHunk": "@@ -1,20 +1,23 @@\n package com.twilio.exception;\n \n+import java.util.Map;\n+\n public class ApiException extends TwilioException {\n \n     private static final long serialVersionUID = -3228320166955630014L;\n \n     private final Integer code;\n     private final String moreInfo;\n     private final Integer status;\n+    private final Map<String, Object> details;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM3MDYxNQ=="}, "originalCommit": {"oid": "5a2c95f0f266cc6f53c9e2c40393d6fdd456b8e2"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODQ1NTMzOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/twilio/exception/ApiExceptionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODoyNTo1MlrOGLj-3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTozMzo0MVrOGLmR9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3NzA1Mw==", "bodyText": "nit: assertEquals(\"Details\", details, error.getDetails());", "url": "https://github.com/twilio/twilio-java/pull/524#discussion_r414777053", "createdAt": "2020-04-24T18:25:52Z", "author": {"login": "thinkingserious"}, "path": "src/test/java/com/twilio/exception/ApiExceptionTest.java", "diffHunk": "@@ -29,13 +33,25 @@ public void twoArgConstructorShouldPreserveMessageAndCause() {\n     }\n \n     @Test\n-    public void fullConstructorShouldPreserveAllValues() {\n+    public void fiveArgConstructorShouldPreserveAllValues() {\n         ApiException error = new ApiException(anyMessage, anyErrorCode, anyMoreInfo, anyHttpStatus, anyCause);\n         assertEquals(\"Message\", anyMessage, error.getMessage());\n         assertSame(\"Cause\", anyCause, error.getCause());\n         assertEquals(\"More info\", anyMoreInfo, error.getMoreInfo());\n         assertEquals(\"Error code\", anyErrorCode, error.getCode().intValue());\n         assertEquals(\"Status code\", anyHttpStatus, error.getStatusCode().intValue());\n+        assertNull(\"Details\", error.getDetails());\n+    }\n+\n+    @Test\n+    public void fullConstructorShouldPreserveAllValues() {\n+        ApiException error = new ApiException(anyMessage, anyErrorCode, anyMoreInfo, anyHttpStatus, details, anyCause);\n+        assertEquals(\"Message\", anyMessage, error.getMessage());\n+        assertSame(\"Cause\", anyCause, error.getCause());\n+        assertEquals(\"More info\", anyMoreInfo, error.getMoreInfo());\n+        assertEquals(\"Error code\", anyErrorCode, error.getCode().intValue());\n+        assertEquals(\"Status code\", anyHttpStatus, error.getStatusCode().intValue());\n+        assertEquals(\"Details\", error.getDetails(), details);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3afd34928b3cb219d15428ae0661bc01dfbf2b4"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgxNDcxMQ==", "bodyText": "removed that constructor", "url": "https://github.com/twilio/twilio-java/pull/524#discussion_r414814711", "createdAt": "2020-04-24T19:33:41Z", "author": {"login": "ashish-s"}, "path": "src/test/java/com/twilio/exception/ApiExceptionTest.java", "diffHunk": "@@ -29,13 +33,25 @@ public void twoArgConstructorShouldPreserveMessageAndCause() {\n     }\n \n     @Test\n-    public void fullConstructorShouldPreserveAllValues() {\n+    public void fiveArgConstructorShouldPreserveAllValues() {\n         ApiException error = new ApiException(anyMessage, anyErrorCode, anyMoreInfo, anyHttpStatus, anyCause);\n         assertEquals(\"Message\", anyMessage, error.getMessage());\n         assertSame(\"Cause\", anyCause, error.getCause());\n         assertEquals(\"More info\", anyMoreInfo, error.getMoreInfo());\n         assertEquals(\"Error code\", anyErrorCode, error.getCode().intValue());\n         assertEquals(\"Status code\", anyHttpStatus, error.getStatusCode().intValue());\n+        assertNull(\"Details\", error.getDetails());\n+    }\n+\n+    @Test\n+    public void fullConstructorShouldPreserveAllValues() {\n+        ApiException error = new ApiException(anyMessage, anyErrorCode, anyMoreInfo, anyHttpStatus, details, anyCause);\n+        assertEquals(\"Message\", anyMessage, error.getMessage());\n+        assertSame(\"Cause\", anyCause, error.getCause());\n+        assertEquals(\"More info\", anyMoreInfo, error.getMoreInfo());\n+        assertEquals(\"Error code\", anyErrorCode, error.getCode().intValue());\n+        assertEquals(\"Status code\", anyHttpStatus, error.getStatusCode().intValue());\n+        assertEquals(\"Details\", error.getDetails(), details);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3NzA1Mw=="}, "originalCommit": {"oid": "b3afd34928b3cb219d15428ae0661bc01dfbf2b4"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODQ4NDc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/twilio/rest/accounts/v1/credential/AwsCreator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODozMzoxNlrOGLkQFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTozNDowOVrOGLmTBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4MTQ2MA==", "bodyText": "Can't we just pass restException into an ApiException constructor? Then future changes won't update so many files.", "url": "https://github.com/twilio/twilio-java/pull/524#discussion_r414781460", "createdAt": "2020-04-24T18:33:16Z", "author": {"login": "childish-sambino"}, "path": "src/main/java/com/twilio/rest/accounts/v1/credential/AwsCreator.java", "diffHunk": "@@ -89,6 +89,7 @@ public Aws create(final TwilioRestClient client) {\n                 restException.getCode(),\n                 restException.getMoreInfo(),\n                 restException.getStatus(),\n+                restException.getDetails(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3afd34928b3cb219d15428ae0661bc01dfbf2b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4MzA3OA==", "bodyText": "yeah thats a good idea, let me do that instead", "url": "https://github.com/twilio/twilio-java/pull/524#discussion_r414783078", "createdAt": "2020-04-24T18:36:11Z", "author": {"login": "ashish-s"}, "path": "src/main/java/com/twilio/rest/accounts/v1/credential/AwsCreator.java", "diffHunk": "@@ -89,6 +89,7 @@ public Aws create(final TwilioRestClient client) {\n                 restException.getCode(),\n                 restException.getMoreInfo(),\n                 restException.getStatus(),\n+                restException.getDetails(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4MTQ2MA=="}, "originalCommit": {"oid": "b3afd34928b3cb219d15428ae0661bc01dfbf2b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgxNDk4Mw==", "bodyText": "@childish-sambino removed the old constructor and added a new one with restException", "url": "https://github.com/twilio/twilio-java/pull/524#discussion_r414814983", "createdAt": "2020-04-24T19:34:09Z", "author": {"login": "ashish-s"}, "path": "src/main/java/com/twilio/rest/accounts/v1/credential/AwsCreator.java", "diffHunk": "@@ -89,6 +89,7 @@ public Aws create(final TwilioRestClient client) {\n                 restException.getCode(),\n                 restException.getMoreInfo(),\n                 restException.getStatus(),\n+                restException.getDetails(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4MTQ2MA=="}, "originalCommit": {"oid": "b3afd34928b3cb219d15428ae0661bc01dfbf2b4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODcyNDg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/twilio/exception/ApiException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTozODoxNVrOGLmb0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTozODoxNVrOGLmb0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgxNzIzNQ==", "bodyText": "nit: spacing String, Object", "url": "https://github.com/twilio/twilio-java/pull/524#discussion_r414817235", "createdAt": "2020-04-24T19:38:15Z", "author": {"login": "childish-sambino"}, "path": "src/main/java/com/twilio/exception/ApiException.java", "diffHunk": "@@ -1,12 +1,15 @@\n package com.twilio.exception;\n \n+import java.util.Map;\n+\n public class ApiException extends TwilioException {\n \n     private static final long serialVersionUID = -3228320166955630014L;\n \n     private final Integer code;\n     private final String moreInfo;\n     private final Integer status;\n+    private final Map<String,Object> details;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3eabcd0ebb667e521c5ba506f05a7f5f332366c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODcyNzI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/twilio/exception/RestException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTozODo1MlrOGLmdLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTozODo1MlrOGLmdLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgxNzU4Mw==", "bodyText": "Same nit.", "url": "https://github.com/twilio/twilio-java/pull/524#discussion_r414817583", "createdAt": "2020-04-24T19:38:52Z", "author": {"login": "childish-sambino"}, "path": "src/main/java/com/twilio/exception/RestException.java", "diffHunk": "@@ -31,11 +33,13 @@\n      */\n     @JsonCreator\n     private RestException(@JsonProperty(\"status\") final int status, @JsonProperty(\"message\") final String message,\n-                          @JsonProperty(\"code\") final Integer code, @JsonProperty(\"more_info\") final String moreInfo) {\n+                          @JsonProperty(\"code\") final Integer code, @JsonProperty(\"more_info\") final String moreInfo,\n+                          @JsonProperty(\"details\") final Map<String,Object> details) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3eabcd0ebb667e521c5ba506f05a7f5f332366c"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1907, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}