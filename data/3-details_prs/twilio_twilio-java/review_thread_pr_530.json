{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODE5NTU4", "number": 530, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo1MDoxM1rOEB8fGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo1NDowOFrOEB8iEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc1MDM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/twilio/http/Request.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo1MDoxM1rOGeGgvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNToxNDoxN1rOGegnIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNzE0OA==", "bodyText": "Why are we removing the try/catch? Concerned we are breaking someone's implementation expecting this exception, though that seems unlikely and/or rare.", "url": "https://github.com/twilio/twilio-java/pull/530#discussion_r434217148", "createdAt": "2020-06-02T22:50:13Z", "author": {"login": "thinkingserious"}, "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -86,23 +92,23 @@ public void setAuth(final String username, final String password) {\n         this.password = password;\n     }\n \n+    public void setRegion(final String region) {\n+        this.region = region;\n+    }\n+\n+    public void setEdge(final String edge) {\n+        this.edge = edge;\n+    }\n+\n     /**\n      * Create auth string from username and password.\n      *\n      * @return basic authentication string\n      */\n     public String getAuthString() {\n-        String credentials = this.username + \":\" + this.password;\n-        try {\n-\n-            String encoded = DatatypeConverter.printBase64Binary(credentials.getBytes(\"ascii\"));\n-            return \"Basic \" + encoded;\n-\n-        } catch (final UnsupportedEncodingException e) {\n-\n-            throw new InvalidRequestException(\"It must be possible to encode credentials as ascii\", credentials, e);\n-\n-        }\n+        final String credentials = this.username + \":\" + this.password;\n+        final String encoded = DatatypeConverter.printBase64Binary(credentials.getBytes(StandardCharsets.US_ASCII));\n+        return \"Basic \" + encoded;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c0d85eacafe634bb864a02a713059a138fb8557"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMTkwMA==", "bodyText": "It's no longer possible the throw UnsupportedEncodingException here because we're using StandardCharsets.US_ASCII instead of \"ascii\".", "url": "https://github.com/twilio/twilio-java/pull/530#discussion_r434601900", "createdAt": "2020-06-03T14:16:52Z", "author": {"login": "childish-sambino"}, "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -86,23 +92,23 @@ public void setAuth(final String username, final String password) {\n         this.password = password;\n     }\n \n+    public void setRegion(final String region) {\n+        this.region = region;\n+    }\n+\n+    public void setEdge(final String edge) {\n+        this.edge = edge;\n+    }\n+\n     /**\n      * Create auth string from username and password.\n      *\n      * @return basic authentication string\n      */\n     public String getAuthString() {\n-        String credentials = this.username + \":\" + this.password;\n-        try {\n-\n-            String encoded = DatatypeConverter.printBase64Binary(credentials.getBytes(\"ascii\"));\n-            return \"Basic \" + encoded;\n-\n-        } catch (final UnsupportedEncodingException e) {\n-\n-            throw new InvalidRequestException(\"It must be possible to encode credentials as ascii\", credentials, e);\n-\n-        }\n+        final String credentials = this.username + \":\" + this.password;\n+        final String encoded = DatatypeConverter.printBase64Binary(credentials.getBytes(StandardCharsets.US_ASCII));\n+        return \"Basic \" + encoded;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNzE0OA=="}, "originalCommit": {"oid": "7c0d85eacafe634bb864a02a713059a138fb8557"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY0MDY2OA==", "bodyText": "Should we mark this as a breaking change?", "url": "https://github.com/twilio/twilio-java/pull/530#discussion_r434640668", "createdAt": "2020-06-03T15:08:32Z", "author": {"login": "thinkingserious"}, "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -86,23 +92,23 @@ public void setAuth(final String username, final String password) {\n         this.password = password;\n     }\n \n+    public void setRegion(final String region) {\n+        this.region = region;\n+    }\n+\n+    public void setEdge(final String edge) {\n+        this.edge = edge;\n+    }\n+\n     /**\n      * Create auth string from username and password.\n      *\n      * @return basic authentication string\n      */\n     public String getAuthString() {\n-        String credentials = this.username + \":\" + this.password;\n-        try {\n-\n-            String encoded = DatatypeConverter.printBase64Binary(credentials.getBytes(\"ascii\"));\n-            return \"Basic \" + encoded;\n-\n-        } catch (final UnsupportedEncodingException e) {\n-\n-            throw new InvalidRequestException(\"It must be possible to encode credentials as ascii\", credentials, e);\n-\n-        }\n+        final String credentials = this.username + \":\" + this.password;\n+        final String encoded = DatatypeConverter.printBase64Binary(credentials.getBytes(StandardCharsets.US_ASCII));\n+        return \"Basic \" + encoded;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNzE0OA=="}, "originalCommit": {"oid": "7c0d85eacafe634bb864a02a713059a138fb8557"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY0NDc2OQ==", "bodyText": "It's not breaking. The exception should never have been thrown to begin with. It's meant to catch cases where the charset was not know until runtime.", "url": "https://github.com/twilio/twilio-java/pull/530#discussion_r434644769", "createdAt": "2020-06-03T15:14:17Z", "author": {"login": "childish-sambino"}, "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -86,23 +92,23 @@ public void setAuth(final String username, final String password) {\n         this.password = password;\n     }\n \n+    public void setRegion(final String region) {\n+        this.region = region;\n+    }\n+\n+    public void setEdge(final String edge) {\n+        this.edge = edge;\n+    }\n+\n     /**\n      * Create auth string from username and password.\n      *\n      * @return basic authentication string\n      */\n     public String getAuthString() {\n-        String credentials = this.username + \":\" + this.password;\n-        try {\n-\n-            String encoded = DatatypeConverter.printBase64Binary(credentials.getBytes(\"ascii\"));\n-            return \"Basic \" + encoded;\n-\n-        } catch (final UnsupportedEncodingException e) {\n-\n-            throw new InvalidRequestException(\"It must be possible to encode credentials as ascii\", credentials, e);\n-\n-        }\n+        final String credentials = this.username + \":\" + this.password;\n+        final String encoded = DatatypeConverter.printBase64Binary(credentials.getBytes(StandardCharsets.US_ASCII));\n+        return \"Basic \" + encoded;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNzE0OA=="}, "originalCommit": {"oid": "7c0d85eacafe634bb864a02a713059a138fb8557"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDc1NzkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/twilio/http/Request.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjo1NDowOFrOGeGlbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNToxNDozM1rOGegn4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxODM0OQ==", "bodyText": "nit - might be good to hold the other pieces in nicely named variables.", "url": "https://github.com/twilio/twilio-java/pull/530#discussion_r434218349", "createdAt": "2020-06-02T22:54:08Z", "author": {"login": "thinkingserious"}, "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -141,10 +146,42 @@ public URL constructURL() {\n         }\n     }\n \n+    private String buildURL() {\n+        if (region != null || edge != null) {\n+            try {\n+                final URL parsedUrl = new URL(url);\n+                final String[] pieces = parsedUrl.getHost().split(\"\\\\.\");\n+                final String product = pieces[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c0d85eacafe634bb864a02a713059a138fb8557"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMjQyMg==", "bodyText": "That's what L160-165 do below.", "url": "https://github.com/twilio/twilio-java/pull/530#discussion_r434602422", "createdAt": "2020-06-03T14:17:33Z", "author": {"login": "childish-sambino"}, "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -141,10 +146,42 @@ public URL constructURL() {\n         }\n     }\n \n+    private String buildURL() {\n+        if (region != null || edge != null) {\n+            try {\n+                final URL parsedUrl = new URL(url);\n+                final String[] pieces = parsedUrl.getHost().split(\"\\\\.\");\n+                final String product = pieces[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxODM0OQ=="}, "originalCommit": {"oid": "7c0d85eacafe634bb864a02a713059a138fb8557"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY0MTY2OQ==", "bodyText": "Ah, yes. How about pieces[pieces.length - 2]?", "url": "https://github.com/twilio/twilio-java/pull/530#discussion_r434641669", "createdAt": "2020-06-03T15:09:57Z", "author": {"login": "thinkingserious"}, "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -141,10 +146,42 @@ public URL constructURL() {\n         }\n     }\n \n+    private String buildURL() {\n+        if (region != null || edge != null) {\n+            try {\n+                final URL parsedUrl = new URL(url);\n+                final String[] pieces = parsedUrl.getHost().split(\"\\\\.\");\n+                final String product = pieces[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxODM0OQ=="}, "originalCommit": {"oid": "7c0d85eacafe634bb864a02a713059a138fb8557"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY0NDk2Mw==", "bodyText": "Meh, we haven't done that elsewhere.", "url": "https://github.com/twilio/twilio-java/pull/530#discussion_r434644963", "createdAt": "2020-06-03T15:14:33Z", "author": {"login": "childish-sambino"}, "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -141,10 +146,42 @@ public URL constructURL() {\n         }\n     }\n \n+    private String buildURL() {\n+        if (region != null || edge != null) {\n+            try {\n+                final URL parsedUrl = new URL(url);\n+                final String[] pieces = parsedUrl.getHost().split(\"\\\\.\");\n+                final String product = pieces[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxODM0OQ=="}, "originalCommit": {"oid": "7c0d85eacafe634bb864a02a713059a138fb8557"}, "originalPosition": 126}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1910, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}