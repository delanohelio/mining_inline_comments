{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MDYxOTk0", "number": 606, "title": "feat: add http logging for Java", "bodyText": "Fixes\nhttps://issues.corp.twilio.com/browse/DI-944\nChecklist\n\n I acknowledge that all my contributions will be made under the project's license\n I have made a material change to the repo (functionality, testing, spelling, grammar)\n I have titled the PR appropriately\n I have updated my branch with the main branch\n I have added tests that prove my fix is effective or that my feature works\n I have added the necessary documentation about the functionality in the appropriate .md file\n I have added inline documentation to the code I modified", "createdAt": "2020-11-23T23:41:31Z", "url": "https://github.com/twilio/twilio-java/pull/606", "merged": true, "mergeCommit": {"oid": "91441cd94b09b2a82a0cb71109962662e12cf34b"}, "closed": true, "closedAt": "2020-12-01T17:27:43Z", "author": {"login": "JenniferMah"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfd21tAH2gAyNTI2MDYxOTk0OjJiYzgzMzUyZWY1NzBkYmZhYzdmY2EwMjkxY2MzYzY5ZDFiNzA0NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh8f1sgFqTU0MjA3NTM3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2bc83352ef570dbfac7fca0291cc3c69d1b70464", "author": {"user": {"login": "JenniferMah", "name": "Jennifer Mah"}}, "url": "https://github.com/twilio/twilio-java/commit/2bc83352ef570dbfac7fca0291cc3c69d1b70464", "committedDate": "2020-11-23T23:36:02Z", "message": "feat: add http logging for Java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "773192aa7486a39e00c1ec6fc4eca8d3a185ca9f", "author": {"user": {"login": "JenniferMah", "name": "Jennifer Mah"}}, "url": "https://github.com/twilio/twilio-java/commit/773192aa7486a39e00c1ec6fc4eca8d3a185ca9f", "committedDate": "2020-11-23T23:40:12Z", "message": "Update pom.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f73a300fd46612bc367670a99b9cd304d3083bc7", "author": {"user": {"login": "JenniferMah", "name": "Jennifer Mah"}}, "url": "https://github.com/twilio/twilio-java/commit/f73a300fd46612bc367670a99b9cd304d3083bc7", "committedDate": "2020-11-23T23:41:39Z", "message": "Merge branch 'main' into DI-944"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3ODAxMzIy", "url": "https://github.com/twilio/twilio-java/pull/606#pullrequestreview-537801322", "createdAt": "2020-11-24T18:37:34Z", "commit": {"oid": "f73a300fd46612bc367670a99b9cd304d3083bc7"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODozNzozNFrOH5QNLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo0MjozMVrOH5QY8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5NjM5OQ==", "bodyText": "I prefer the format \"path/to/log4j2.xml\" in situations like these", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r529796399", "createdAt": "2020-11-24T18:37:34Z", "author": {"login": "eshanholtz"}, "path": "README.md", "diffHunk": "@@ -92,6 +92,13 @@ Twilio.setEdge(\"sydney\");\n \n This will result in the `hostname` transforming from `api.twilio.com` to `api.sydney.au1.twilio.com`.\n \n+### Enable Debug Logging\n+In order to enable debug logging, create a configuration file named log4j2.xml that defines the logger at the root level to at least 'debug'. An example of the configuration file can be found [here](src/main/java/com/twilio/example/log4j2.xml). For more configuration options please see the log4j configuration [documentation](https://logging.apache.org/log4j/2.x/manual/configuration.html).\n+```java\n+Twilio.init(accountSid, authToken);\n+Twilio.setLoggerConfiguration(\"path_to_log4j2.xml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f73a300fd46612bc367670a99b9cd304d3083bc7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5NzQ5Ng==", "bodyText": "nit: can we make the input variable name a smidge more specific. Maybe filePath?", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r529797496", "createdAt": "2020-11-24T18:39:32Z", "author": {"login": "eshanholtz"}, "path": "src/main/java/com/twilio/Twilio.java", "diffHunk": "@@ -150,6 +154,17 @@ public static synchronized void setEdge(final String edge) {\n         Twilio.edge = edge;\n     }\n \n+    /**\n+     * Set the logger configuration file path.\n+     *\n+     * @param path path to logging configuration file\n+     */\n+    public static synchronized void setLoggerConfiguration(final String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f73a300fd46612bc367670a99b9cd304d3083bc7"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5ODgzNw==", "bodyText": "What happens if there's no logger configured?", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r529798837", "createdAt": "2020-11-24T18:41:34Z", "author": {"login": "eshanholtz"}, "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -50,7 +57,16 @@ public Response request(final Request request) {\n         if (edge != null)\n             request.setEdge(edge);\n \n-        return httpClient.reliableRequest(request);\n+        logRequest(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f73a300fd46612bc367670a99b9cd304d3083bc7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5OTQwOQ==", "bodyText": "If behavior is different when no logger is configured (i.e. no output), can we add a test for that scenario?", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r529799409", "createdAt": "2020-11-24T18:42:31Z", "author": {"login": "eshanholtz"}, "path": "src/test/java/com/twilio/http/LoggingTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.twilio.http;\n+\n+import com.twilio.Twilio;\n+import com.twilio.rest.Domains;\n+import com.twilio.rest.api.v2010.account.Message;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.Assert;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+\n+public class LoggingTest {\n+    @Before\n+    public void setUp() throws Exception {\n+        Twilio.init(\"AC123\", \"AUTH TOKEN\");\n+    }\n+\n+    @Test\n+    public void testDebuggingLogging() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f73a300fd46612bc367670a99b9cd304d3083bc7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce2fbe6d24d0a1e9bd4d089c56536015a57dda77", "author": {"user": {"login": "JenniferMah", "name": "Jennifer Mah"}}, "url": "https://github.com/twilio/twilio-java/commit/ce2fbe6d24d0a1e9bd4d089c56536015a57dda77", "committedDate": "2020-11-24T19:29:40Z", "message": "add test for no logger configured, fix readme, and path name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99f5d209d5e71b146247fe0b217807e37621971b", "author": {"user": {"login": "JenniferMah", "name": "Jennifer Mah"}}, "url": "https://github.com/twilio/twilio-java/commit/99f5d209d5e71b146247fe0b217807e37621971b", "committedDate": "2020-11-24T20:06:58Z", "message": "rename test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjU4NDI1", "url": "https://github.com/twilio/twilio-java/pull/606#pullrequestreview-541258425", "createdAt": "2020-11-30T20:12:53Z", "commit": {"oid": "99f5d209d5e71b146247fe0b217807e37621971b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDoxMjo1NFrOH8MHNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDoxMzowM1rOH8MHkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg3NTA2Mg==", "bodyText": "nit: can this be if (!queryParams.isEmpty()) {?", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r532875062", "createdAt": "2020-11-30T20:12:54Z", "author": {"login": "eshanholtz"}, "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -126,4 +142,29 @@ public TwilioRestClient build() {\n         }\n     }\n \n+    /**\n+     * Logging debug information about HTTP request.\n+     */\n+    public void logRequest(final Request request) {\n+        logger.debug(\"-- BEGIN Twilio API Request --\");\n+        logger.debug(\"request method: \" + request.getMethod());\n+        logger.debug(\"request URL: \" + request.getUrl());\n+        final Map<String, List<String>> queryParams = request.getQueryParams();\n+        final Map<String, List<String>> headerParams = request.getHeaderParams();\n+\n+        if (queryParams.isEmpty() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f5d209d5e71b146247fe0b217807e37621971b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg3NTE1Mw==", "bodyText": "nit: same as above ^", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r532875153", "createdAt": "2020-11-30T20:13:03Z", "author": {"login": "eshanholtz"}, "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -126,4 +142,29 @@ public TwilioRestClient build() {\n         }\n     }\n \n+    /**\n+     * Logging debug information about HTTP request.\n+     */\n+    public void logRequest(final Request request) {\n+        logger.debug(\"-- BEGIN Twilio API Request --\");\n+        logger.debug(\"request method: \" + request.getMethod());\n+        logger.debug(\"request URL: \" + request.getUrl());\n+        final Map<String, List<String>> queryParams = request.getQueryParams();\n+        final Map<String, List<String>> headerParams = request.getHeaderParams();\n+\n+        if (queryParams.isEmpty() == false) {\n+            logger.debug(\"query parameters: \" + queryParams);\n+        }\n+\n+        if (headerParams.isEmpty() == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f5d209d5e71b146247fe0b217807e37621971b"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "340d780da8298c07ba765c47b042852c6b6c23f5", "author": {"user": {"login": "JenniferMah", "name": "Jennifer Mah"}}, "url": "https://github.com/twilio/twilio-java/commit/340d780da8298c07ba765c47b042852c6b6c23f5", "committedDate": "2020-11-30T20:25:21Z", "message": "fix check for empty headers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzk4NTAy", "url": "https://github.com/twilio/twilio-java/pull/606#pullrequestreview-541398502", "createdAt": "2020-12-01T00:23:14Z", "commit": {"oid": "340d780da8298c07ba765c47b042852c6b6c23f5"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoyMzoxNFrOH8TMHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMToxMzo1MFrOH8UO9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTAwNw==", "bodyText": "We may want to expose the parameter for getContext with a default set to false in setLoggerConfiguration.", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r532991007", "createdAt": "2020-12-01T00:23:14Z", "author": {"login": "thinkingserious"}, "path": "src/main/java/com/twilio/Twilio.java", "diffHunk": "@@ -150,6 +154,17 @@ public static synchronized void setEdge(final String edge) {\n         Twilio.edge = edge;\n     }\n \n+    /**\n+     * Set the logger configuration file path.\n+     *\n+     * @param filePath path to logging configuration file\n+     */\n+    public static synchronized void setLoggerConfiguration(final String filePath) {\n+        LoggerContext context = (org.apache.logging.log4j.core.LoggerContext) LogManager.getContext(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340d780da8298c07ba765c47b042852c6b6c23f5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MjI4OQ==", "bodyText": "Can we avoid wildcard imports here?", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r532992289", "createdAt": "2020-12-01T00:26:47Z", "author": {"login": "thinkingserious"}, "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -4,6 +4,12 @@\n import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n \n import java.util.function.Predicate;\n+import java.io.*;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340d780da8298c07ba765c47b042852c6b6c23f5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjQ5OQ==", "bodyText": "Should \"TwilioRestClient\" be configurable?", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r533006499", "createdAt": "2020-12-01T01:08:47Z", "author": {"login": "thinkingserious"}, "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -19,6 +25,7 @@\n     private final String region;\n     private final String edge;\n     private final HttpClient httpClient;\n+    private static final Logger logger = LogManager.getLogger(\"TwilioRestClient\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340d780da8298c07ba765c47b042852c6b6c23f5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjY1MQ==", "bodyText": "respone/response", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r533006651", "createdAt": "2020-12-01T01:09:16Z", "author": {"login": "thinkingserious"}, "path": "src/main/java/com/twilio/http/TwilioRestClient.java", "diffHunk": "@@ -50,7 +57,16 @@ public Response request(final Request request) {\n         if (edge != null)\n             request.setEdge(edge);\n \n-        return httpClient.reliableRequest(request);\n+        logRequest(request);\n+        Response response = httpClient.reliableRequest(request);\n+        logger.debug(\"status code: \" + response.getStatusCode());\n+        org.apache.http.Header[] responseHeaders = response.getHeaders();\n+        logger.debug(\"respone headers:\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340d780da8298c07ba765c47b042852c6b6c23f5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwODExOQ==", "bodyText": "nit: duplicate code in these two tests:\nByteArrayOutputStream output = new ByteArrayOutputStream();\nPrintStream outputStream = new PrintStream(output);\nPrintStream originalStream = System.out;\nSystem.setOut(outputStream);\nTwilioRestClient twilioRestClient = Twilio.getRestClient();\ntwilioRestClient.logRequest(request);\nSystem.out.flush();\nSystem.setOut(originalStream);", "url": "https://github.com/twilio/twilio-java/pull/606#discussion_r533008119", "createdAt": "2020-12-01T01:13:50Z", "author": {"login": "thinkingserious"}, "path": "src/test/java/com/twilio/http/LoggingTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.twilio.http;\n+\n+import com.twilio.Twilio;\n+import com.twilio.rest.Domains;\n+import com.twilio.rest.api.v2010.account.Message;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.Assert;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+\n+public class LoggingTest {\n+    @Before\n+    public void setUp() throws Exception {\n+        Twilio.init(\"AC123\", \"AUTH TOKEN\");\n+    }\n+\n+    @Test\n+    public void testDebugLogging() {\n+        ByteArrayOutputStream output = new ByteArrayOutputStream();\n+        PrintStream outputStream = new PrintStream(output);\n+        PrintStream originalStream = System.out;\n+        System.setOut(outputStream);\n+        Twilio.setLoggerConfiguration(\"src/main/java/com/twilio/example/log4j2.xml\");\n+        final Request request = new Request(HttpMethod.GET, Domains.API.toString(),\n+                \"/2010-04-01/Accounts/AC123/Messages/MM123.json\");\n+        request.addHeaderParam(\"Authorization\", \"authorization value\");\n+        request.addHeaderParam(\"Test Header\", \"test value\");\n+        TwilioRestClient twilioRestClient = Twilio.getRestClient();\n+        twilioRestClient.logRequest(request);\n+        System.out.flush();\n+        System.setOut(originalStream);\n+        Assert.assertTrue(output.toString().contains(\"GET\"));\n+        Assert.assertFalse(output.toString().contains(\"Authorization\"));\n+    }\n+\n+    @Test\n+    public void testUsingDefaultConfigurationFileDebugLogging() {\n+        ByteArrayOutputStream output = new ByteArrayOutputStream();\n+        PrintStream outputStream = new PrintStream(output);\n+        PrintStream originalStream = System.out;\n+        System.setOut(outputStream);\n+        final Request request = new Request(HttpMethod.GET, Domains.API.toString(),\n+                \"/2010-04-01/Accounts/AC123/Messages/MM123.json\");\n+        request.addHeaderParam(\"Authorization\", \"authorization value\");\n+        request.addHeaderParam(\"Test Header\", \"test value\");\n+        TwilioRestClient twilioRestClient = Twilio.getRestClient();\n+        twilioRestClient.logRequest(request);\n+        System.out.flush();\n+        System.setOut(originalStream);\n+        Assert.assertTrue(output.toString().isEmpty());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340d780da8298c07ba765c47b042852c6b6c23f5"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0060282f5401b2ca642ebdb870dc10016ce025fb", "author": {"user": {"login": "JenniferMah", "name": "Jennifer Mah"}}, "url": "https://github.com/twilio/twilio-java/commit/0060282f5401b2ca642ebdb870dc10016ce025fb", "committedDate": "2020-12-01T04:46:11Z", "message": "fix imports, setLoggerConfiguration, and logging tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMDc1Mzc2", "url": "https://github.com/twilio/twilio-java/pull/606#pullrequestreview-542075376", "createdAt": "2020-12-01T16:25:49Z", "commit": {"oid": "0060282f5401b2ca642ebdb870dc10016ce025fb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3170, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}