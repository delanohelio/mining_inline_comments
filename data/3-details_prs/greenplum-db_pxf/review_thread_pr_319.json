{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNTc2NDQ4", "number": 319, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyMToyNVrODqipVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyMTo0MlrODqipkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTM0NDIzOnYy", "diffSide": "RIGHT", "path": "server/pxf-api/src/test/java/org/greenplum/pxf/api/security/SecureLoginTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyMToyNVrOF6Wpow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyMToyNVrOF6Wpow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMjgzNQ==", "bodyText": "minor: private methods should go after public/protected", "url": "https://github.com/greenplum-db/pxf/pull/319#discussion_r396732835", "createdAt": "2020-03-23T20:21:25Z", "author": {"login": "frankgh"}, "path": "server/pxf-api/src/test/java/org/greenplum/pxf/api/security/SecureLoginTest.java", "diffHunk": "@@ -34,10 +36,45 @@\n     private static final String PROPERTY_KEY_USER_IMPERSONATION = \"pxf.service.user.impersonation.enabled\";\n     private static final String PROPERTY_KEY_SERVICE_PRINCIPAL = \"pxf.service.kerberos.principal\";\n     private static final String PROPERTY_KEY_SERVICE_KEYTAB = \"pxf.service.kerberos.keytab\";\n+    private static final String PROPERTY_KEY_KERBEROS_KDC = \"java.security.krb5.kdc\";\n+    private static final String PROPERTY_KEY_KERBEROS_REALM = \"java.security.krb5.realm\";\n+    private static String userImpersonationEnabled;\n+    private static String kerberosPrincipal;\n+    private static String kerberosKeytab;\n+    private static String kdcDefault;\n+    private static String realmDefault;\n+\n+    @BeforeClass\n+    public static void setProperties() {\n+        userImpersonationEnabled = System.clearProperty(PROPERTY_KEY_USER_IMPERSONATION);\n+        kerberosPrincipal = System.clearProperty(PROPERTY_KEY_SERVICE_PRINCIPAL);\n+        kerberosKeytab = System.clearProperty(PROPERTY_KEY_SERVICE_KEYTAB);\n+        // simulate presence of krb.conf file\n+        kdcDefault = System.setProperty(PROPERTY_KEY_KERBEROS_KDC, \"localhost\");\n+        realmDefault = System.setProperty(PROPERTY_KEY_KERBEROS_REALM, \"DEFAULT_REALM\");\n+    }\n+\n+    @AfterClass\n+    public static void resetProperties() {\n+        resetProperty(PROPERTY_KEY_USER_IMPERSONATION, userImpersonationEnabled);\n+        resetProperty(PROPERTY_KEY_SERVICE_PRINCIPAL, kerberosPrincipal);\n+        resetProperty(PROPERTY_KEY_SERVICE_KEYTAB, kerberosKeytab);\n+        resetProperty(PROPERTY_KEY_KERBEROS_KDC, kdcDefault);\n+        resetProperty(PROPERTY_KEY_KERBEROS_REALM, realmDefault);\n+    }\n+\n+    private static void resetProperty(String key, String val) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e6650e514f2729b7e088b4ac0acd97abb28ded2"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTM0NDgzOnYy", "diffSide": "RIGHT", "path": "server/pxf-api/src/test/java/org/apache/hadoop/security/PxfUserGroupInformationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyMTo0MlrOF6WqIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyMTo0MlrOF6WqIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMjk2Mg==", "bodyText": "minor: private methods should go after public/protected", "url": "https://github.com/greenplum-db/pxf/pull/319#discussion_r396732962", "createdAt": "2020-03-23T20:21:42Z", "author": {"login": "frankgh"}, "path": "server/pxf-api/src/test/java/org/apache/hadoop/security/PxfUserGroupInformationTest.java", "diffHunk": "@@ -51,6 +53,32 @@\n     @Rule\n     public ExpectedException expectedException = ExpectedException.none();\n \n+    private static final String PROPERTY_KEY_KERBEROS_KDC = \"java.security.krb5.kdc\";\n+    private static final String PROPERTY_KEY_KERBEROS_REALM = \"java.security.krb5.realm\";\n+    private static String kdcDefault;\n+    private static String realmDefault;\n+\n+    @BeforeClass\n+    public static void setProperties() {\n+        // simulate presence of krb.conf file\n+        kdcDefault = System.setProperty(PROPERTY_KEY_KERBEROS_KDC, \"localhost\");\n+        realmDefault = System.setProperty(PROPERTY_KEY_KERBEROS_REALM, \"DEFAULT_REALM\");\n+    }\n+\n+    @AfterClass\n+    public static void resetProperties() {\n+        resetProperty(PROPERTY_KEY_KERBEROS_KDC, kdcDefault);\n+        resetProperty(PROPERTY_KEY_KERBEROS_REALM, realmDefault);\n+    }\n+\n+    private static void resetProperty(String key, String val) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e6650e514f2729b7e088b4ac0acd97abb28ded2"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3603, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}