{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODE3ODYx", "number": 490, "title": "Update pxf-build-base dependency building after Spring Boot merge", "bodyText": "", "createdAt": "2020-11-13T19:56:47Z", "url": "https://github.com/greenplum-db/pxf/pull/490", "merged": true, "mergeCommit": {"oid": "440f6ff52c70d26f227e09213c8bd3c9228417c3"}, "closed": true, "closedAt": "2020-11-18T20:35:45Z", "author": {"login": "frankgh"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcMq6jgH2gAyNTIwODE3ODYxOmQyN2Y5NTY1ZWNhZGI2NGRhMzhlZTA4NzM2ZGQ0NTRmYTI5Njg4ZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddz-n-AFqTUzMzgzNzQ4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/d27f9565ecadb64da38ee08736dd454fa29688f0", "committedDate": "2020-11-13T19:52:51Z", "message": "Update pxf-build-base dependency building after Spring Boot merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzMxMzA3", "url": "https://github.com/greenplum-db/pxf/pull/490#pullrequestreview-533731307", "createdAt": "2020-11-18T17:58:06Z", "commit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzo1ODowNlrOH17Krg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNDowNFrOH17yQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwNTk2Ng==", "bodyText": "this will probably change when we move to Go modules instead of dep tool ?", "url": "https://github.com/greenplum-db/pxf/pull/490#discussion_r526305966", "createdAt": "2020-11-18T17:58:06Z", "author": {"login": "denalex"}, "path": "concourse/docker/pxf-build-base/cloudbuild.yaml", "diffHunk": "@@ -5,40 +5,108 @@\n timeout: 1200s\n \n steps:\n-# Write the PXF commit SHA-1 to a file\n-- name: 'gcr.io/cloud-builders/docker'\n-  entrypoint: 'bash'\n-  args:\n-    - '-c'\n-    - |\n-      echo \"${COMMIT_SHA}\" > pxf_commit_sha\n-\n-# Build the docker image\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies\n-  args:\n-  - 'build'\n-  - '--tag=pxf-build-dev'\n-  - '-f'\n-  - 'concourse/docker/pxf-build-base/Dockerfile'\n-  - '.'\n-\n-# Copy the pxf-build-dependencies.tar.gz to the host\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies-copy\n-  entrypoint: 'bash'\n-  args:\n-  - '-c'\n-  - |\n-    mkdir /workspace/build\n-    docker run --rm -v /workspace/build:/tmp/build/ pxf-build-dev /bin/bash -c \"cp /tmp/pxf-{build,automation}-dependencies.tar.gz /tmp/build/\"\n-\n-# Push the pxf-build-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-build-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-build-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz']\n-\n-# Push the pxf-automation-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-automation-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-automation-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz']\n+  # download and extract the existing dependencies\n+  - name: 'gcr.io/cloud-builders/gsutil'\n+    id: retrieve-pxf-build-dependencies\n+    args: [ 'cp', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz', 'pxf-build-dependencies.tar.gz' ]\n+    waitFor: [ '-' ]\n+  - name: 'gcr.io/$PROJECT_ID/tar'\n+    id: untar-pxf-build-dependencies\n+    args: [ '-xzf', 'pxf-build-dependencies.tar.gz' ]\n+    waitFor: [ 'retrieve-pxf-build-dependencies' ]\n+\n+  - name: 'gcr.io/cloud-builders/gsutil'\n+    id: retrieve-pxf-automation-dependencies\n+    args: [ 'cp', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz', 'pxf-automation-dependencies.tar.gz' ]\n+    waitFor: [ '-' ]\n+  - name: 'gcr.io/$PROJECT_ID/tar'\n+    id: untar-pxf-automation-dependencies\n+    args: [ '-xzf', 'pxf-automation-dependencies.tar.gz' ]\n+    waitFor: [ 'retrieve-pxf-automation-dependencies' ]\n+\n+  # use gradle image with JDK8 to build the project\n+  - name: gradle:6.6.1-jdk8\n+    id: gradle-build\n+    entrypoint: gradle\n+    args: [ '--gradle-user-home=/workspace/.gradle', '-Dorg.gradle.daemon=false', '-b', './server/build.gradle', 'test', 'stage' ]\n+    waitFor: [ 'untar-pxf-build-dependencies' ]\n+\n+  - name: golang:1.15.3\n+    id: golang-build\n+    entrypoint: 'bash'\n+    args:\n+      - '-c'\n+      - |\n+        mkdir -p ./.go-dep-cached-sources\n+        cp ./.go-dep-cached-sources ./cli/go/pkg/dep/sources\n+        go get github.com/golang/dep/cmd/dep", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNDc4MQ==", "bodyText": "how would we solve the problem of getting rid of obsolete versions / dependencies, if we always download existing ones to start with ? Not essential, just wonder if we can think of smth.", "url": "https://github.com/greenplum-db/pxf/pull/490#discussion_r526314781", "createdAt": "2020-11-18T18:11:55Z", "author": {"login": "denalex"}, "path": "concourse/docker/pxf-build-base/cloudbuild.yaml", "diffHunk": "@@ -5,40 +5,108 @@\n timeout: 1200s\n \n steps:\n-# Write the PXF commit SHA-1 to a file\n-- name: 'gcr.io/cloud-builders/docker'\n-  entrypoint: 'bash'\n-  args:\n-    - '-c'\n-    - |\n-      echo \"${COMMIT_SHA}\" > pxf_commit_sha\n-\n-# Build the docker image\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies\n-  args:\n-  - 'build'\n-  - '--tag=pxf-build-dev'\n-  - '-f'\n-  - 'concourse/docker/pxf-build-base/Dockerfile'\n-  - '.'\n-\n-# Copy the pxf-build-dependencies.tar.gz to the host\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies-copy\n-  entrypoint: 'bash'\n-  args:\n-  - '-c'\n-  - |\n-    mkdir /workspace/build\n-    docker run --rm -v /workspace/build:/tmp/build/ pxf-build-dev /bin/bash -c \"cp /tmp/pxf-{build,automation}-dependencies.tar.gz /tmp/build/\"\n-\n-# Push the pxf-build-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-build-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-build-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz']\n-\n-# Push the pxf-automation-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-automation-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-automation-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz']\n+  # download and extract the existing dependencies", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNjA5OA==", "bodyText": "I think this is ok for capturing dependencies, otherwise we probably should be using the Makefile to build the \"official\" product ?", "url": "https://github.com/greenplum-db/pxf/pull/490#discussion_r526316098", "createdAt": "2020-11-18T18:14:04Z", "author": {"login": "denalex"}, "path": "concourse/docker/pxf-build-base/cloudbuild.yaml", "diffHunk": "@@ -5,40 +5,108 @@\n timeout: 1200s\n \n steps:\n-# Write the PXF commit SHA-1 to a file\n-- name: 'gcr.io/cloud-builders/docker'\n-  entrypoint: 'bash'\n-  args:\n-    - '-c'\n-    - |\n-      echo \"${COMMIT_SHA}\" > pxf_commit_sha\n-\n-# Build the docker image\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies\n-  args:\n-  - 'build'\n-  - '--tag=pxf-build-dev'\n-  - '-f'\n-  - 'concourse/docker/pxf-build-base/Dockerfile'\n-  - '.'\n-\n-# Copy the pxf-build-dependencies.tar.gz to the host\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies-copy\n-  entrypoint: 'bash'\n-  args:\n-  - '-c'\n-  - |\n-    mkdir /workspace/build\n-    docker run --rm -v /workspace/build:/tmp/build/ pxf-build-dev /bin/bash -c \"cp /tmp/pxf-{build,automation}-dependencies.tar.gz /tmp/build/\"\n-\n-# Push the pxf-build-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-build-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-build-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz']\n-\n-# Push the pxf-automation-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-automation-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-automation-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz']\n+  # download and extract the existing dependencies\n+  - name: 'gcr.io/cloud-builders/gsutil'\n+    id: retrieve-pxf-build-dependencies\n+    args: [ 'cp', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz', 'pxf-build-dependencies.tar.gz' ]\n+    waitFor: [ '-' ]\n+  - name: 'gcr.io/$PROJECT_ID/tar'\n+    id: untar-pxf-build-dependencies\n+    args: [ '-xzf', 'pxf-build-dependencies.tar.gz' ]\n+    waitFor: [ 'retrieve-pxf-build-dependencies' ]\n+\n+  - name: 'gcr.io/cloud-builders/gsutil'\n+    id: retrieve-pxf-automation-dependencies\n+    args: [ 'cp', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz', 'pxf-automation-dependencies.tar.gz' ]\n+    waitFor: [ '-' ]\n+  - name: 'gcr.io/$PROJECT_ID/tar'\n+    id: untar-pxf-automation-dependencies\n+    args: [ '-xzf', 'pxf-automation-dependencies.tar.gz' ]\n+    waitFor: [ 'retrieve-pxf-automation-dependencies' ]\n+\n+  # use gradle image with JDK8 to build the project\n+  - name: gradle:6.6.1-jdk8\n+    id: gradle-build\n+    entrypoint: gradle\n+    args: [ '--gradle-user-home=/workspace/.gradle', '-Dorg.gradle.daemon=false', '-b', './server/build.gradle', 'test', 'stage' ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzkzMjcx", "url": "https://github.com/greenplum-db/pxf/pull/490#pullrequestreview-533793271", "createdAt": "2020-11-18T19:16:11Z", "commit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToxNjoxMlrOH1-JiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToyNDoxNFrOH1-c9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM1NDgyNA==", "bodyText": "Is this a one of image that we've built? Would it be better for us to use an upstream base image like alpine or bash? One less thing that we need to own.", "url": "https://github.com/greenplum-db/pxf/pull/490#discussion_r526354824", "createdAt": "2020-11-18T19:16:12Z", "author": {"login": "bradfordb-vmware"}, "path": "concourse/docker/pxf-build-base/cloudbuild.yaml", "diffHunk": "@@ -5,40 +5,108 @@\n timeout: 1200s\n \n steps:\n-# Write the PXF commit SHA-1 to a file\n-- name: 'gcr.io/cloud-builders/docker'\n-  entrypoint: 'bash'\n-  args:\n-    - '-c'\n-    - |\n-      echo \"${COMMIT_SHA}\" > pxf_commit_sha\n-\n-# Build the docker image\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies\n-  args:\n-  - 'build'\n-  - '--tag=pxf-build-dev'\n-  - '-f'\n-  - 'concourse/docker/pxf-build-base/Dockerfile'\n-  - '.'\n-\n-# Copy the pxf-build-dependencies.tar.gz to the host\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies-copy\n-  entrypoint: 'bash'\n-  args:\n-  - '-c'\n-  - |\n-    mkdir /workspace/build\n-    docker run --rm -v /workspace/build:/tmp/build/ pxf-build-dev /bin/bash -c \"cp /tmp/pxf-{build,automation}-dependencies.tar.gz /tmp/build/\"\n-\n-# Push the pxf-build-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-build-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-build-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz']\n-\n-# Push the pxf-automation-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-automation-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-automation-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz']\n+  # download and extract the existing dependencies\n+  - name: 'gcr.io/cloud-builders/gsutil'\n+    id: retrieve-pxf-build-dependencies\n+    args: [ 'cp', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz', 'pxf-build-dependencies.tar.gz' ]\n+    waitFor: [ '-' ]\n+  - name: 'gcr.io/$PROJECT_ID/tar'\n+    id: untar-pxf-build-dependencies\n+    args: [ '-xzf', 'pxf-build-dependencies.tar.gz' ]\n+    waitFor: [ 'retrieve-pxf-build-dependencies' ]\n+\n+  - name: 'gcr.io/cloud-builders/gsutil'\n+    id: retrieve-pxf-automation-dependencies\n+    args: [ 'cp', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz', 'pxf-automation-dependencies.tar.gz' ]\n+    waitFor: [ '-' ]\n+  - name: 'gcr.io/$PROJECT_ID/tar'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM1NjgxMg==", "bodyText": "It looks like we are also updating the version of golang used to build PXF cli. Is that intentional?", "url": "https://github.com/greenplum-db/pxf/pull/490#discussion_r526356812", "createdAt": "2020-11-18T19:19:28Z", "author": {"login": "bradfordb-vmware"}, "path": "concourse/docker/pxf-build-base/cloudbuild.yaml", "diffHunk": "@@ -5,40 +5,108 @@\n timeout: 1200s\n \n steps:\n-# Write the PXF commit SHA-1 to a file\n-- name: 'gcr.io/cloud-builders/docker'\n-  entrypoint: 'bash'\n-  args:\n-    - '-c'\n-    - |\n-      echo \"${COMMIT_SHA}\" > pxf_commit_sha\n-\n-# Build the docker image\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies\n-  args:\n-  - 'build'\n-  - '--tag=pxf-build-dev'\n-  - '-f'\n-  - 'concourse/docker/pxf-build-base/Dockerfile'\n-  - '.'\n-\n-# Copy the pxf-build-dependencies.tar.gz to the host\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies-copy\n-  entrypoint: 'bash'\n-  args:\n-  - '-c'\n-  - |\n-    mkdir /workspace/build\n-    docker run --rm -v /workspace/build:/tmp/build/ pxf-build-dev /bin/bash -c \"cp /tmp/pxf-{build,automation}-dependencies.tar.gz /tmp/build/\"\n-\n-# Push the pxf-build-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-build-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-build-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz']\n-\n-# Push the pxf-automation-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-automation-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-automation-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz']\n+  # download and extract the existing dependencies\n+  - name: 'gcr.io/cloud-builders/gsutil'\n+    id: retrieve-pxf-build-dependencies\n+    args: [ 'cp', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz', 'pxf-build-dependencies.tar.gz' ]\n+    waitFor: [ '-' ]\n+  - name: 'gcr.io/$PROJECT_ID/tar'\n+    id: untar-pxf-build-dependencies\n+    args: [ '-xzf', 'pxf-build-dependencies.tar.gz' ]\n+    waitFor: [ 'retrieve-pxf-build-dependencies' ]\n+\n+  - name: 'gcr.io/cloud-builders/gsutil'\n+    id: retrieve-pxf-automation-dependencies\n+    args: [ 'cp', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz', 'pxf-automation-dependencies.tar.gz' ]\n+    waitFor: [ '-' ]\n+  - name: 'gcr.io/$PROJECT_ID/tar'\n+    id: untar-pxf-automation-dependencies\n+    args: [ '-xzf', 'pxf-automation-dependencies.tar.gz' ]\n+    waitFor: [ 'retrieve-pxf-automation-dependencies' ]\n+\n+  # use gradle image with JDK8 to build the project\n+  - name: gradle:6.6.1-jdk8\n+    id: gradle-build\n+    entrypoint: gradle\n+    args: [ '--gradle-user-home=/workspace/.gradle', '-Dorg.gradle.daemon=false', '-b', './server/build.gradle', 'test', 'stage' ]\n+    waitFor: [ 'untar-pxf-build-dependencies' ]\n+\n+  - name: golang:1.15.3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM1OTc5OA==", "bodyText": "This looks like a bit of a bootstrap paradox -- we're using a tarball that is created by this cloudbuild. I know that this already existed from the previous workflow where it was created by scratch from the Dockerfile, but it took me a minute and looking at the diff to understand where it was coming from.\nMaybe it's worth keeping the Dockerfile that creates the tarball from scratch to avoid this confusion and address Alex's point about old deps.", "url": "https://github.com/greenplum-db/pxf/pull/490#discussion_r526359798", "createdAt": "2020-11-18T19:24:14Z", "author": {"login": "bradfordb-vmware"}, "path": "concourse/docker/pxf-build-base/cloudbuild.yaml", "diffHunk": "@@ -5,40 +5,108 @@\n timeout: 1200s\n \n steps:\n-# Write the PXF commit SHA-1 to a file\n-- name: 'gcr.io/cloud-builders/docker'\n-  entrypoint: 'bash'\n-  args:\n-    - '-c'\n-    - |\n-      echo \"${COMMIT_SHA}\" > pxf_commit_sha\n-\n-# Build the docker image\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies\n-  args:\n-  - 'build'\n-  - '--tag=pxf-build-dev'\n-  - '-f'\n-  - 'concourse/docker/pxf-build-base/Dockerfile'\n-  - '.'\n-\n-# Copy the pxf-build-dependencies.tar.gz to the host\n-- name: 'gcr.io/cloud-builders/docker'\n-  id: pxf-build-dependencies-copy\n-  entrypoint: 'bash'\n-  args:\n-  - '-c'\n-  - |\n-    mkdir /workspace/build\n-    docker run --rm -v /workspace/build:/tmp/build/ pxf-build-dev /bin/bash -c \"cp /tmp/pxf-{build,automation}-dependencies.tar.gz /tmp/build/\"\n-\n-# Push the pxf-build-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-build-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-build-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/build-dependencies/pxf-build-dependencies.tar.gz']\n-\n-# Push the pxf-automation-dependencies.tar.gz tarball to Google Cloud Storage\n-- name: 'gcr.io/cloud-builders/gsutil'\n-  id: pxf-automation-dependencies-tarball\n-  args: ['cp', '/workspace/build/pxf-automation-dependencies.tar.gz', 'gs://${_PXF_BUILD_BUCKET}/automation-dependencies/pxf-automation-dependencies.tar.gz']\n+  # download and extract the existing dependencies", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNDc4MQ=="}, "originalCommit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODM3NDgx", "url": "https://github.com/greenplum-db/pxf/pull/490#pullrequestreview-533837481", "createdAt": "2020-11-18T20:14:36Z", "commit": {"oid": "d27f9565ecadb64da38ee08736dd454fa29688f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4949, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}