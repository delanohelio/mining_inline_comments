{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MjY1Njk2", "number": 396, "title": "Address Feedback fix spring boot TODOs", "bodyText": "install-dev -> install-server\nfix expected output on some files\nrefactor trace/hint information on the c-side\nremove path from Writable/stream endpoint as it is no longer used\nrefactor PxfErrorAttributes\naddress spring_boot_todo\nexpose only a few endpoints (health, info, shutdown)", "createdAt": "2020-06-24T14:58:47Z", "url": "https://github.com/greenplum-db/pxf/pull/396", "merged": true, "mergeCommit": {"oid": "e2b1f31d4b066532130605b660ed246f8d5d0b74"}, "closed": true, "closedAt": "2020-06-24T19:33:12Z", "author": {"login": "frankgh"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcubhO2ABqjM0Nzc5ODU2MTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcufPvfgH2gAyNDM5MjY1Njk2OmJmMTAzMDQyYWUwNzllZmExYTkzYjlhNTdjYjE0ZjM1YzExYTc5YjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6acada96fb7668fec7316413303a2695b2eefdf7", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/6acada96fb7668fec7316413303a2695b2eefdf7", "committedDate": "2020-06-24T14:55:40Z", "message": "Address Feedback fix spring boot TODOs\n\n- install-dev -> install-server\n- fix expected output on some files\n- refactor trace/hint information on the c-side\n- remove path from Writable/stream endpoint as it is no longer used\n- refactor PxfErrorAttributes\n- address spring_boot_todo\n- expose only a few endpoints (health, info, shutdown)"}, "afterCommit": {"oid": "2f39cdecf2a969ea1f65995e6d106141079d2267", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/2f39cdecf2a969ea1f65995e6d106141079d2267", "committedDate": "2020-06-24T15:10:12Z", "message": "Address Feedback fix spring boot TODOs\n\n- install-dev -> install-server\n- fix expected output on some files\n- refactor trace/hint information on the c-side\n- remove path from Writable/stream endpoint as it is no longer used\n- refactor PxfErrorAttributes\n- address spring_boot_todo\n- expose only a few endpoints (health, info, shutdown)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b01d6cd2fd2265dfb01492b76b1d4d886cdce479", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/b01d6cd2fd2265dfb01492b76b1d4d886cdce479", "committedDate": "2020-06-24T15:11:31Z", "message": "Address Feedback fix spring boot TODOs\n\n- install-dev -> install-server\n- fix expected output on some files\n- refactor trace/hint information on the c-side\n- remove path from Writable/stream endpoint as it is no longer used\n- refactor PxfErrorAttributes\n- address spring_boot_todo\n- expose only a few endpoints (health, info, shutdown)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f39cdecf2a969ea1f65995e6d106141079d2267", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/2f39cdecf2a969ea1f65995e6d106141079d2267", "committedDate": "2020-06-24T15:10:12Z", "message": "Address Feedback fix spring boot TODOs\n\n- install-dev -> install-server\n- fix expected output on some files\n- refactor trace/hint information on the c-side\n- remove path from Writable/stream endpoint as it is no longer used\n- refactor PxfErrorAttributes\n- address spring_boot_todo\n- expose only a few endpoints (health, info, shutdown)"}, "afterCommit": {"oid": "b01d6cd2fd2265dfb01492b76b1d4d886cdce479", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/b01d6cd2fd2265dfb01492b76b1d4d886cdce479", "committedDate": "2020-06-24T15:11:31Z", "message": "Address Feedback fix spring boot TODOs\n\n- install-dev -> install-server\n- fix expected output on some files\n- refactor trace/hint information on the c-side\n- remove path from Writable/stream endpoint as it is no longer used\n- refactor PxfErrorAttributes\n- address spring_boot_todo\n- expose only a few endpoints (health, info, shutdown)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "273edaac04ffca972dba27ae9b4e221420bcf966", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/273edaac04ffca972dba27ae9b4e221420bcf966", "committedDate": "2020-06-24T17:16:17Z", "message": "PxfThreadPoolTaskExecutor: Create as a bean\n\nBy creating PxfThreadPoolTaskExecutor as a bean, we guarantee that the\nshutdown method will be closed when the application is shutting down,\nbecause beans have a destroy method, and in the case of\nPxfThreadPoolTaskExecutor the destroy method calls shutdown when the\napplication is shutting down."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe78c2e3eb000097b44160ee67042578d810b382", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/fe78c2e3eb000097b44160ee67042578d810b382", "committedDate": "2020-06-24T15:51:44Z", "message": "Shutdown task executor"}, "afterCommit": {"oid": "273edaac04ffca972dba27ae9b4e221420bcf966", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/273edaac04ffca972dba27ae9b4e221420bcf966", "committedDate": "2020-06-24T17:16:17Z", "message": "PxfThreadPoolTaskExecutor: Create as a bean\n\nBy creating PxfThreadPoolTaskExecutor as a bean, we guarantee that the\nshutdown method will be closed when the application is shutting down,\nbecause beans have a destroy method, and in the case of\nPxfThreadPoolTaskExecutor the destroy method calls shutdown when the\napplication is shutting down."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODYxODM1", "url": "https://github.com/greenplum-db/pxf/pull/396#pullrequestreview-436861835", "createdAt": "2020-06-24T17:32:50Z", "commit": {"oid": "273edaac04ffca972dba27ae9b4e221420bcf966"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzozMjo1MFrOGocNYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzo1MzowMFrOGoc55g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA1ODQwMQ==", "bodyText": "wonder why this was needed", "url": "https://github.com/greenplum-db/pxf/pull/396#discussion_r445058401", "createdAt": "2020-06-24T17:32:50Z", "author": {"login": "denalex"}, "path": "external-table/src/libchurl.c", "diffHunk": "@@ -640,12 +640,12 @@ flush_internal_buffer(churl_context *context)\n \t\tmulti_perform(context);\n \t}\n \n+\tcheck_response(context);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273edaac04ffca972dba27ae9b4e221420bcf966"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MTAyMg==", "bodyText": "the comment above lines 21-24 is no longer relevant (registerSecurityServletFilter)", "url": "https://github.com/greenplum-db/pxf/pull/396#discussion_r445061022", "createdAt": "2020-06-24T17:37:40Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/PxfConfiguration.java", "diffHunk": "@@ -9,30 +10,64 @@\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Lazy;\n+import org.springframework.core.task.AsyncTaskExecutor;\n import org.springframework.core.task.TaskDecorator;\n+import org.springframework.core.task.TaskExecutor;\n import org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor;\n import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n-\n-import static org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration.APPLICATION_TASK_EXECUTOR_BEAN_NAME;\n+import org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n \n /**\n  * Declares the registerSecurityServletFilter bean method to be processed by\n  * the Spring container\n  */\n @Configuration\n @EnableConfigurationProperties(PxfServerProperties.class)\n-public class PxfConfiguration {\n+public class PxfConfiguration implements WebMvcConfigurer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273edaac04ffca972dba27ae9b4e221420bcf966"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MTQwNw==", "bodyText": "I thought we did not want lazy init unless absolutely required", "url": "https://github.com/greenplum-db/pxf/pull/396#discussion_r445061407", "createdAt": "2020-06-24T17:38:24Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/PxfConfiguration.java", "diffHunk": "@@ -9,30 +10,64 @@\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Lazy;\n+import org.springframework.core.task.AsyncTaskExecutor;\n import org.springframework.core.task.TaskDecorator;\n+import org.springframework.core.task.TaskExecutor;\n import org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor;\n import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n-\n-import static org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration.APPLICATION_TASK_EXECUTOR_BEAN_NAME;\n+import org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n \n /**\n  * Declares the registerSecurityServletFilter bean method to be processed by\n  * the Spring container\n  */\n @Configuration\n @EnableConfigurationProperties(PxfServerProperties.class)\n-public class PxfConfiguration {\n+public class PxfConfiguration implements WebMvcConfigurer {\n+\n+    /**\n+     * Bean name of PXF's {@link TaskExecutor}.\n+     */\n+    public static final String PXF_APPLICATION_TASK_EXECUTOR_BEAN_NAME = \"pxfApplicationTaskExecutor\";\n+\n+    private final ListableBeanFactory beanFactory;\n+\n+    /**\n+     * Constructs a PXF Configuration object with the provided\n+     * {@link ListableBeanFactory}\n+     *\n+     * @param beanFactory the beanFactory\n+     */\n+    public PxfConfiguration(ListableBeanFactory beanFactory) {\n+        this.beanFactory = beanFactory;\n+    }\n \n     /**\n-     * Configures the TaskExecutorBuilder to be used for async requests (i.e. Bridge\n+     * Configures the TaskExecutor to be used for async requests (i.e. Bridge\n      * Read).\n+     */\n+    @Override\n+    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n+        Object taskExecutor = this.beanFactory\n+                .getBean(PXF_APPLICATION_TASK_EXECUTOR_BEAN_NAME);\n+        if (taskExecutor instanceof AsyncTaskExecutor) {\n+            configurer.setTaskExecutor(((AsyncTaskExecutor) taskExecutor));\n+        }\n+    }\n+\n+    /**\n+     * Configures and builds the {@link ThreadPoolTaskExecutor}\n      *\n-     * @return the {@link TaskExecutorBuilder} object\n+     * @return the {@link ThreadPoolTaskExecutor}\n      */\n-    @Bean\n-    public TaskExecutorBuilder taskExecutorBuilder(PxfServerProperties pxfServerProperties,\n-                                                   ObjectProvider<TaskExecutorCustomizer> taskExecutorCustomizers,\n-                                                   ObjectProvider<TaskDecorator> taskDecorator) {\n+    @Lazy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273edaac04ffca972dba27ae9b4e221420bcf966"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2ODcxOQ==", "bodyText": "can we fine-tune a name -- it is not executing any arbitrary pxf tasks, this is for async response streaming only, in other words we should not be submitting any arbitrary async work here, right ? Maybe pxfResponseStreamTaskExecutor or smith even simpler", "url": "https://github.com/greenplum-db/pxf/pull/396#discussion_r445068719", "createdAt": "2020-06-24T17:50:59Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/PxfConfiguration.java", "diffHunk": "@@ -9,30 +10,64 @@\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Lazy;\n+import org.springframework.core.task.AsyncTaskExecutor;\n import org.springframework.core.task.TaskDecorator;\n+import org.springframework.core.task.TaskExecutor;\n import org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor;\n import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n-\n-import static org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration.APPLICATION_TASK_EXECUTOR_BEAN_NAME;\n+import org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n \n /**\n  * Declares the registerSecurityServletFilter bean method to be processed by\n  * the Spring container\n  */\n @Configuration\n @EnableConfigurationProperties(PxfServerProperties.class)\n-public class PxfConfiguration {\n+public class PxfConfiguration implements WebMvcConfigurer {\n+\n+    /**\n+     * Bean name of PXF's {@link TaskExecutor}.\n+     */\n+    public static final String PXF_APPLICATION_TASK_EXECUTOR_BEAN_NAME = \"pxfApplicationTaskExecutor\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273edaac04ffca972dba27ae9b4e221420bcf966"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2OTc5OA==", "bodyText": "why if ? We expect our own bean here, so cast or let it fail the startup if somehow misconfigured", "url": "https://github.com/greenplum-db/pxf/pull/396#discussion_r445069798", "createdAt": "2020-06-24T17:53:00Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/PxfConfiguration.java", "diffHunk": "@@ -9,30 +10,64 @@\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.Lazy;\n+import org.springframework.core.task.AsyncTaskExecutor;\n import org.springframework.core.task.TaskDecorator;\n+import org.springframework.core.task.TaskExecutor;\n import org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor;\n import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n-\n-import static org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration.APPLICATION_TASK_EXECUTOR_BEAN_NAME;\n+import org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n \n /**\n  * Declares the registerSecurityServletFilter bean method to be processed by\n  * the Spring container\n  */\n @Configuration\n @EnableConfigurationProperties(PxfServerProperties.class)\n-public class PxfConfiguration {\n+public class PxfConfiguration implements WebMvcConfigurer {\n+\n+    /**\n+     * Bean name of PXF's {@link TaskExecutor}.\n+     */\n+    public static final String PXF_APPLICATION_TASK_EXECUTOR_BEAN_NAME = \"pxfApplicationTaskExecutor\";\n+\n+    private final ListableBeanFactory beanFactory;\n+\n+    /**\n+     * Constructs a PXF Configuration object with the provided\n+     * {@link ListableBeanFactory}\n+     *\n+     * @param beanFactory the beanFactory\n+     */\n+    public PxfConfiguration(ListableBeanFactory beanFactory) {\n+        this.beanFactory = beanFactory;\n+    }\n \n     /**\n-     * Configures the TaskExecutorBuilder to be used for async requests (i.e. Bridge\n+     * Configures the TaskExecutor to be used for async requests (i.e. Bridge\n      * Read).\n+     */\n+    @Override\n+    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n+        Object taskExecutor = this.beanFactory\n+                .getBean(PXF_APPLICATION_TASK_EXECUTOR_BEAN_NAME);\n+        if (taskExecutor instanceof AsyncTaskExecutor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273edaac04ffca972dba27ae9b4e221420bcf966"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0082592a6544d20336e06a2de25829265fae4adb", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/0082592a6544d20336e06a2de25829265fae4adb", "committedDate": "2020-06-24T18:02:35Z", "message": "Change the hint to require set client_min_messages=DEBUG1\n\nAsk users to set client_min_messages=LOG instead, because DEBUG1 prints\nout too much information, and LOG seems like a good level where not too\nmuch is printed, but we print the stack trace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8baaf859dcfa59f44bd894eb9b6b3ec62cc489d2", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/8baaf859dcfa59f44bd894eb9b6b3ec62cc489d2", "committedDate": "2020-06-24T18:07:24Z", "message": "Address PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2OTMzODky", "url": "https://github.com/greenplum-db/pxf/pull/396#pullrequestreview-436933892", "createdAt": "2020-06-24T19:14:37Z", "commit": {"oid": "8baaf859dcfa59f44bd894eb9b6b3ec62cc489d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf103042ae079efa1a93b9a57cb14f35c11a79b2", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/bf103042ae079efa1a93b9a57cb14f35c11a79b2", "committedDate": "2020-06-24T19:30:51Z", "message": "PXF_APPLICATION_TASK_EXECUTOR_BEAN_NAME -> PXF_RESPONSE_STREAM_TASK_EXECUTOR"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4798, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}