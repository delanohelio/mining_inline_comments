{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTY4NTc2", "number": 315, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjoxOTo1MFrODm4GrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo1ODoyNlrODnI5Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDkxNjkzOnYy", "diffSide": "RIGHT", "path": "cli/go/src/pxf-cli/cmd/cluster.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjoxOTo1MFrOF0jEvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjo0MzozNlrOF2VV-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0NDkyNA==", "bodyText": "Is title case recommended for go projects?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            func generateStatusReport(cmd *command, clusterData *ClusterData) string {\n          \n          \n            \n            func GenerateStatusReport(cmd *command, clusterData *ClusterData) string {", "url": "https://github.com/greenplum-db/pxf/pull/315#discussion_r390644924", "createdAt": "2020-03-10T22:19:50Z", "author": {"login": "frankgh"}, "path": "cli/go/src/pxf-cli/cmd/cluster.go", "diffHunk": "@@ -69,43 +69,29 @@ func exitWithReturnCode(err error) {\n \tos.Exit(0)\n }\n \n-// CountHostsExcludingMaster is exported for testing\n-func (c *ClusterData) CountHostsExcludingMaster() error {\n-\thostSegMap := make(map[string]int, 0)\n-\tfor contentID, seg := range c.Cluster.Segments {\n-\t\tif contentID == -1 {\n-\t\t\tcontinue\n-\t\t}\n-\t\thostSegMap[seg.Hostname]++\n-\t}\n-\tc.NumHosts = len(hostSegMap)\n-\treturn nil\n-}\n-\n-// GenerateStatusReport is exported for testing\n-func GenerateStatusReport(cmd *command, clusterData *ClusterData) string {\n+func generateStatusReport(cmd *command, clusterData *ClusterData) string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b59924823a82231215cb53cf0ebf154178eaf70"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxNzExMw==", "bodyText": "yeah in Go, the case of the first letter of the func or var indicates whether it's exported for use outside of the package. So in this case I am making that function private.", "url": "https://github.com/greenplum-db/pxf/pull/315#discussion_r392517113", "createdAt": "2020-03-13T22:43:36Z", "author": {"login": "oliverralbertini"}, "path": "cli/go/src/pxf-cli/cmd/cluster.go", "diffHunk": "@@ -69,43 +69,29 @@ func exitWithReturnCode(err error) {\n \tos.Exit(0)\n }\n \n-// CountHostsExcludingMaster is exported for testing\n-func (c *ClusterData) CountHostsExcludingMaster() error {\n-\thostSegMap := make(map[string]int, 0)\n-\tfor contentID, seg := range c.Cluster.Segments {\n-\t\tif contentID == -1 {\n-\t\t\tcontinue\n-\t\t}\n-\t\thostSegMap[seg.Hostname]++\n-\t}\n-\tc.NumHosts = len(hostSegMap)\n-\treturn nil\n-}\n-\n-// GenerateStatusReport is exported for testing\n-func GenerateStatusReport(cmd *command, clusterData *ClusterData) string {\n+func generateStatusReport(cmd *command, clusterData *ClusterData) string {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0NDkyNA=="}, "originalCommit": {"oid": "6b59924823a82231215cb53cf0ebf154178eaf70"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzY0OTI4OnYy", "diffSide": "RIGHT", "path": "cli/go/src/pxf-cli/cmd/pxf.go", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo1NDoyN1rOF09ZUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMjozMDoyMlrOF2XSDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3NjE3Ng==", "bodyText": "Can we say\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tstatus:  \"Initializing PXF on %d hosts including master...\\n\",\n          \n          \n            \n            \t\t\tstatus:  \"Initializing PXF on master and %d host%s...\\n\",\n          \n      \n    \n    \n  \n\ninstead?\nFor example, Initializing PXF on master and 1 host for 1 master and 1 host, and\nInitializing PXF on master and 3 hosts", "url": "https://github.com/greenplum-db/pxf/pull/315#discussion_r391076176", "createdAt": "2020-03-11T15:54:27Z", "author": {"login": "frankgh"}, "path": "cli/go/src/pxf-cli/cmd/pxf.go", "diffHunk": "@@ -108,12 +108,12 @@ var (\n \t\tname: pxfInit,\n \t\tmessages: map[messageType]string{\n \t\t\tsuccess: \"PXF initialized successfully on %d out of %d hosts\\n\",\n-\t\t\tstatus:  \"Initializing PXF on master and %d other hosts...\\n\",\n+\t\t\tstatus:  \"Initializing PXF on %d hosts including master...\\n\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd5de72a267b7425f3f6b68ff5c4446c16094614"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxODM1Ng==", "bodyText": "The number that comes to that command will have to be subtracted by one, so let me see what I can do.", "url": "https://github.com/greenplum-db/pxf/pull/315#discussion_r392518356", "createdAt": "2020-03-13T22:48:50Z", "author": {"login": "oliverralbertini"}, "path": "cli/go/src/pxf-cli/cmd/pxf.go", "diffHunk": "@@ -108,12 +108,12 @@ var (\n \t\tname: pxfInit,\n \t\tmessages: map[messageType]string{\n \t\t\tsuccess: \"PXF initialized successfully on %d out of %d hosts\\n\",\n-\t\t\tstatus:  \"Initializing PXF on master and %d other hosts...\\n\",\n+\t\t\tstatus:  \"Initializing PXF on %d hosts including master...\\n\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3NjE3Ng=="}, "originalCommit": {"oid": "fd5de72a267b7425f3f6b68ff5c4446c16094614"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0ODg3OA==", "bodyText": "What about standby master?", "url": "https://github.com/greenplum-db/pxf/pull/315#discussion_r392548878", "createdAt": "2020-03-14T02:30:22Z", "author": {"login": "oliverralbertini"}, "path": "cli/go/src/pxf-cli/cmd/pxf.go", "diffHunk": "@@ -108,12 +108,12 @@ var (\n \t\tname: pxfInit,\n \t\tmessages: map[messageType]string{\n \t\t\tsuccess: \"PXF initialized successfully on %d out of %d hosts\\n\",\n-\t\t\tstatus:  \"Initializing PXF on master and %d other hosts...\\n\",\n+\t\t\tstatus:  \"Initializing PXF on %d hosts including master...\\n\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3NjE3Ng=="}, "originalCommit": {"oid": "fd5de72a267b7425f3f6b68ff5c4446c16094614"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzY2MDU3OnYy", "diffSide": "RIGHT", "path": "cli/go/src/pxf-cli/cmd/pxf.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo1Njo1MlrOF09gdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjo0NDoxOFrOF2VWqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3ODAwNA==", "bodyText": "Is cluster.INCLUDE_MIRRORS needed in case the mirrors are not collocated with segments?", "url": "https://github.com/greenplum-db/pxf/pull/315#discussion_r391078004", "createdAt": "2020-03-11T15:56:52Z", "author": {"login": "frankgh"}, "path": "cli/go/src/pxf-cli/cmd/pxf.go", "diffHunk": "@@ -108,12 +108,12 @@ var (\n \t\tname: pxfInit,\n \t\tmessages: map[messageType]string{\n \t\t\tsuccess: \"PXF initialized successfully on %d out of %d hosts\\n\",\n-\t\t\tstatus:  \"Initializing PXF on master and %d other hosts...\\n\",\n+\t\t\tstatus:  \"Initializing PXF on %d hosts including master...\\n\",\n \t\t\terr:     \"PXF failed to initialize on %d out of %d hosts\\n\",\n \t\t},\n \t\twarn:       false,\n \t\tenvVars:    []envVar{gphome, pxfConf, javaHome},\n-\t\twhereToRun: cluster.ON_HOSTS_AND_MASTER,\n+\t\twhereToRun: cluster.ON_REMOTE | cluster.ON_HOSTS | cluster.INCLUDE_MASTER | cluster.INCLUDE_MIRRORS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd5de72a267b7425f3f6b68ff5c4446c16094614"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxNzI5MA==", "bodyText": "In this case what cluster.INCLUDE_MIRRORS does is include standby master host.", "url": "https://github.com/greenplum-db/pxf/pull/315#discussion_r392517290", "createdAt": "2020-03-13T22:44:18Z", "author": {"login": "oliverralbertini"}, "path": "cli/go/src/pxf-cli/cmd/pxf.go", "diffHunk": "@@ -108,12 +108,12 @@ var (\n \t\tname: pxfInit,\n \t\tmessages: map[messageType]string{\n \t\t\tsuccess: \"PXF initialized successfully on %d out of %d hosts\\n\",\n-\t\t\tstatus:  \"Initializing PXF on master and %d other hosts...\\n\",\n+\t\t\tstatus:  \"Initializing PXF on %d hosts including master...\\n\",\n \t\t\terr:     \"PXF failed to initialize on %d out of %d hosts\\n\",\n \t\t},\n \t\twarn:       false,\n \t\tenvVars:    []envVar{gphome, pxfConf, javaHome},\n-\t\twhereToRun: cluster.ON_HOSTS_AND_MASTER,\n+\t\twhereToRun: cluster.ON_REMOTE | cluster.ON_HOSTS | cluster.INCLUDE_MASTER | cluster.INCLUDE_MIRRORS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3ODAwNA=="}, "originalCommit": {"oid": "fd5de72a267b7425f3f6b68ff5c4446c16094614"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzY2ODA3OnYy", "diffSide": "RIGHT", "path": "cli/go/src/pxf-cli/cmd/pxf.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo1ODoyNlrOF09lSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjo0NzoyMVrOF2VZgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3OTI0MA==", "bodyText": "do you need to explicitly exclude master and mirrors here? What's the whereToRun behavior? all enabled by default?", "url": "https://github.com/greenplum-db/pxf/pull/315#discussion_r391079240", "createdAt": "2020-03-11T15:58:26Z", "author": {"login": "frankgh"}, "path": "cli/go/src/pxf-cli/cmd/pxf.go", "diffHunk": "@@ -124,7 +124,7 @@ var (\n \t\t},\n \t\twarn:       false,\n \t\tenvVars:    []envVar{gphome},\n-\t\twhereToRun: cluster.ON_HOSTS,\n+\t\twhereToRun: cluster.ON_REMOTE | cluster.ON_HOSTS | cluster.EXCLUDE_MASTER | cluster.EXCLUDE_MIRRORS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd5de72a267b7425f3f6b68ff5c4446c16094614"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxODAxNw==", "bodyText": "No, I just added it for clarity.\nDefault behavior is cluster.ON_SEGMENTS | cluster.EXCLUDE_MASTER | cluster.EXCLUDE_MIRRORS | cluster.ON_REMOTE which means that an ssh command is generated for each segment in the cluster not including master or mirrors.", "url": "https://github.com/greenplum-db/pxf/pull/315#discussion_r392518017", "createdAt": "2020-03-13T22:47:21Z", "author": {"login": "oliverralbertini"}, "path": "cli/go/src/pxf-cli/cmd/pxf.go", "diffHunk": "@@ -124,7 +124,7 @@ var (\n \t\t},\n \t\twarn:       false,\n \t\tenvVars:    []envVar{gphome},\n-\t\twhereToRun: cluster.ON_HOSTS,\n+\t\twhereToRun: cluster.ON_REMOTE | cluster.ON_HOSTS | cluster.EXCLUDE_MASTER | cluster.EXCLUDE_MIRRORS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3OTI0MA=="}, "originalCommit": {"oid": "fd5de72a267b7425f3f6b68ff5c4446c16094614"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3597, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}