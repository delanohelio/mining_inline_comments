{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MjM2NTU2", "number": 430, "title": "Reduce the amount of @RequestScope components", "bodyText": "While running performance tests in the spring boot branch we noticed a 50% performance degradation in some tests. The profiler showed that most of the additional cost was coming from CGlib proxies, and the main contributor to the proxy calls was RequestContext#getTupleDescription which was being called inside two loops. The first loop iterates over the tuples, and the second loop iterates over every column. We then decided to rollback our dependency for @RequestScope components and use either regular objects or singletons instead. Other minor sources of performance opportunities were identified later by looking at the hotspots in the profiler.", "createdAt": "2020-08-26T22:28:15Z", "url": "https://github.com/greenplum-db/pxf/pull/430", "merged": true, "mergeCommit": {"oid": "f5f3b2531800a89752b5792fbf9324894effa43a"}, "closed": true, "closedAt": "2020-09-14T21:10:06Z", "author": {"login": "frankgh"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCZ92YAH2gAyNDc0MjM2NTU2OmRlNGFkNGUzMWVlM2VhMDUxMDUwNjZiODY4MGM3ZmE0NTI4Mzk5ZTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI5vf9AFqTQ4ODE0MDM1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "de4ad4e31ee3ea05105066b8680c7fa4528399e2", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/de4ad4e31ee3ea05105066b8680c7fa4528399e2", "committedDate": "2020-08-25T16:40:16Z", "message": "Disable proxy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa63764c4a02900dea3232fec3aa1384866b3dd5", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/aa63764c4a02900dea3232fec3aa1384866b3dd5", "committedDate": "2020-08-25T17:54:13Z", "message": "Optimize context.getTupleDescription calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc8c1e2265a41f60b805de3dfbb3ba096241e323", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/bc8c1e2265a41f60b805de3dfbb3ba096241e323", "committedDate": "2020-08-25T18:15:50Z", "message": "fix unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d8c48a41b43e3e562f0497c48f19cbf899e340c", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/2d8c48a41b43e3e562f0497c48f19cbf899e340c", "committedDate": "2020-08-25T20:14:01Z", "message": "Make fewer things RequestScoped beans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "040ef852115273b2a5f979db03188962959921ce", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/040ef852115273b2a5f979db03188962959921ce", "committedDate": "2020-08-25T20:29:05Z", "message": "minor improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "275b17c83d2a0008f03131eac71b63e65400a934", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/275b17c83d2a0008f03131eac71b63e65400a934", "committedDate": "2020-08-25T21:47:15Z", "message": "More optimizations after looking at hotspots"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95276e8ba733d18512cfec557bffd77943a69ee1", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/95276e8ba733d18512cfec557bffd77943a69ee1", "committedDate": "2020-08-26T19:22:13Z", "message": "Accessors / Resolvers are no longer Components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b4ebc01a68647c30bcde3a7db01c6a639d175ce", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/3b4ebc01a68647c30bcde3a7db01c6a639d175ce", "committedDate": "2020-08-26T20:40:18Z", "message": "Fragmenters are no longer Components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bc271d53ac7b82e94411d4e81b6121aa1ea9844", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/4bc271d53ac7b82e94411d4e81b6121aa1ea9844", "committedDate": "2020-08-26T21:30:25Z", "message": "Improve BridgeOutputBuilder to avoid proxy calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77b91dcd5c2d277dce530b18cdf8cf63192cb0ed", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/77b91dcd5c2d277dce530b18cdf8cf63192cb0ed", "committedDate": "2020-08-26T21:49:27Z", "message": "Don't use LinkedList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b55077c36e8bc4061e447fbbdb6be99c07ae41f4", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/b55077c36e8bc4061e447fbbdb6be99c07ae41f4", "committedDate": "2020-08-26T22:20:56Z", "message": "Fix avro"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d9246f997288f7d119856d1dde645a05877f1d6", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/7d9246f997288f7d119856d1dde645a05877f1d6", "committedDate": "2020-08-26T22:53:27Z", "message": "fix initialization issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "259b4abbc2287afa3b814903b31a6ba30b30913a", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/259b4abbc2287afa3b814903b31a6ba30b30913a", "committedDate": "2020-08-27T20:02:52Z", "message": "Fix Hive and Jdbc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fe2a28cc6a52ef2a7164138cb02c4ff4728c1c3", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/0fe2a28cc6a52ef2a7164138cb02c4ff4728c1c3", "committedDate": "2020-08-27T23:36:09Z", "message": "Use SpringContext to access beans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2adf69ab588789cbe326ef65c7c68fba561d8648", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/2adf69ab588789cbe326ef65c7c68fba561d8648", "committedDate": "2020-08-28T00:59:38Z", "message": "Add PxfUserGroupInformation to the list of scanned classes for SpringBoot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/665e894c64142f63ea4f15c2f1a4252feab450a4", "committedDate": "2020-08-28T14:13:33Z", "message": "Remove the remnants of singletons in the pxf code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NDQ0MzQ5", "url": "https://github.com/greenplum-db/pxf/pull/430#pullrequestreview-486444349", "createdAt": "2020-09-11T03:11:34Z", "commit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzoxMTozNFrOHQMu7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNjozMDoyNFrOHQQAtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0Nzg4Ng==", "bodyText": "formatting ?", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486747886", "createdAt": "2020-09-11T03:11:34Z", "author": {"login": "denalex"}, "path": "server/pxf-api/src/main/java/org/apache/hadoop/security/PxfUserGroupInformation.java", "diffHunk": "@@ -84,11 +69,10 @@ public static PxfUserGroupInformation getInstance() {\n      * @param configDirectory the path to the configuration files for the external system\n      * @param principal       the principal name to load from the keytab\n      * @param keytabFilename  the path to the keytab file\n-     * @throws IOException\n+     * @throws IOException           when an IO error occurs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0ODI3OQ==", "bodyText": "formatting ?", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486748279", "createdAt": "2020-09-11T03:13:05Z", "author": {"login": "denalex"}, "path": "server/pxf-api/src/main/java/org/apache/hadoop/security/PxfUserGroupInformation.java", "diffHunk": "@@ -137,7 +121,7 @@ LoginSession loginUserFromKeytab(Configuration configuration, String serverName,\n      *\n      * @param serverName   the name of the server\n      * @param loginSession the login session\n-     * @throws IOException\n+     * @throws IOException           when an IO error occurs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1MDEyMw==", "bodyText": "if you're inside enum type already, do you need EnumSet or can you use smith like:\nfor (DataType type : DataType.values())  ?", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486750123", "createdAt": "2020-09-11T03:20:37Z", "author": {"login": "denalex"}, "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/io/DataType.java", "diffHunk": "@@ -61,20 +59,27 @@\n \n     UNSUPPORTED_TYPE(-1);\n \n-    private static final Map<Integer, DataType> lookup = new HashMap<>();\n+    private static final int[] OID_ARRAY;\n+    private static final DataType[] DATA_TYPES;\n     private static final int[] NOT_TEXT = {BIGINT.OID, BOOLEAN.OID, BYTEA.OID,\n             FLOAT8.OID, INTEGER.OID, REAL.OID, SMALLINT.OID};\n \n     static {\n-\n         INT2ARRAY.typeElem = SMALLINT;\n         INT4ARRAY.typeElem = INTEGER;\n         INT8ARRAY.typeElem = BIGINT;\n         BOOLARRAY.typeElem = BOOLEAN;\n         TEXTARRAY.typeElem = TEXT;\n \n-        for (DataType dt : EnumSet.allOf(DataType.class)) {\n-            lookup.put(dt.getOID(), dt);\n+        EnumSet<DataType> set = EnumSet.allOf(DataType.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1Mjc1OQ==", "bodyText": "let's put a comment here that performance profiling proved this is faster than a map lookup so it does not get refactored later.", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486752759", "createdAt": "2020-09-11T03:31:39Z", "author": {"login": "denalex"}, "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/io/DataType.java", "diffHunk": "@@ -92,13 +97,17 @@\n      * @return the corresponding DataType if exists, else returns {@link #UNSUPPORTED_TYPE}\n      */\n     public static DataType get(int OID) {\n-        DataType type = lookup.get(OID);\n-        return type == null ? UNSUPPORTED_TYPE : type;\n+        for (int i = 0; i < OID_ARRAY.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1NDM4Mw==", "bodyText": "technically, UNSUPPORTED_TYPE.typeElem == null so this check is redundant", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486754383", "createdAt": "2020-09-11T03:38:34Z", "author": {"login": "denalex"}, "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/io/DataType.java", "diffHunk": "@@ -92,13 +97,17 @@\n      * @return the corresponding DataType if exists, else returns {@link #UNSUPPORTED_TYPE}\n      */\n     public static DataType get(int OID) {\n-        DataType type = lookup.get(OID);\n-        return type == null ? UNSUPPORTED_TYPE : type;\n+        for (int i = 0; i < OID_ARRAY.length; i++) {\n+            if (OID == OID_ARRAY[i]) {\n+                return DATA_TYPES[i];\n+            }\n+        }\n+        return UNSUPPORTED_TYPE;\n     }\n \n     public static boolean isArrayType(int OID) {\n-        DataType type = lookup.get(OID);\n-        return type != null && type.typeElem != null;\n+        DataType type = get(OID);\n+        return type != UNSUPPORTED_TYPE && type.typeElem != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1NDg5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private PxfUserGroupInformation pxfUserGroupInformation;\n          \n          \n            \n                private final PxfUserGroupInformation pxfUserGroupInformation;", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486754892", "createdAt": "2020-09-11T03:40:39Z", "author": {"login": "denalex"}, "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/security/SecureLogin.java", "diffHunk": "@@ -69,7 +69,12 @@\n     /**\n      * Package-private for testing\n      */\n-    static PxfUserGroupInformation pxfUserGroupInformation = PxfUserGroupInformation.getInstance();\n+    private PxfUserGroupInformation pxfUserGroupInformation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1NTI4OQ==", "bodyText": "should this be private ?", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486755289", "createdAt": "2020-09-11T03:42:21Z", "author": {"login": "denalex"}, "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/utilities/FragmentMetadataSerDe.java", "diffHunk": "@@ -6,42 +6,29 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.SerializerProvider;\n import com.fasterxml.jackson.databind.ser.std.StdSerializer;\n+import org.springframework.stereotype.Component;\n \n import java.io.IOException;\n \n /**\n  * This class serializes and deserializes {@link FragmentMetadata} objects into\n  * JSON.\n  */\n+@Component\n public class FragmentMetadataSerDe extends StdSerializer<FragmentMetadata> {\n \n     private static final long serialVersionUID = 123173996615107417L;\n     private static final String CLASSNAME = \"className\";\n-\n-    /**\n-     * Singleton instance of the FragmentMetadataSerDe\n-     */\n-    private static final FragmentMetadataSerDe INSTANCE = new FragmentMetadataSerDe();\n-\n     public final ObjectMapper mapper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1NjkxMg==", "bodyText": "what is this for ?", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486756912", "createdAt": "2020-09-11T03:48:44Z", "author": {"login": "denalex"}, "path": "server/pxf-hdfs/build.gradle", "diffHunk": "@@ -82,6 +82,7 @@ dependencies {\n      *******************************/\n \n     testCompileOnly(\"org.apache.hadoop:hadoop-annotations:${hadoopVersion}\")\n+    testImplementation(\"io.airlift:aircompressor:0.8\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1ODM1MQ==", "bodyText": "if this is for testing, should it be package visibility ?", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486758351", "createdAt": "2020-09-11T03:54:32Z", "author": {"login": "denalex"}, "path": "server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/LineBreakAccessor.java", "diffHunk": "@@ -62,8 +59,12 @@\n      * Constructs a LineBreakAccessor.\n      */\n     public LineBreakAccessor() {\n+        this(SpringContext.getBean(CodecFactory.class));\n+    }\n+\n+    public LineBreakAccessor(CodecFactory codecFactory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc4OTQwNw==", "bodyText": "how is this still a Component when it has RequestContext as a member ?", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486789407", "createdAt": "2020-09-11T05:54:36Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/HttpRequestParser.java", "diffHunk": "@@ -55,6 +55,11 @@ public HttpRequestParser(PluginConf pluginConf, RequestContext context) {\n         this.context = context;\n     }\n \n+    @Autowired\n+    public void setMetadataSerDe(FragmentMetadataSerDe metadataSerDe) {\n+        this.metadataSerDe = metadataSerDe;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5OTE2OA==", "bodyText": "better to use constructor dependency injection and final fields", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486799168", "createdAt": "2020-09-11T06:23:35Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/rest/FragmentsResponseFormatter.java", "diffHunk": "@@ -32,9 +35,17 @@\n  * Utility class for converting Fragments into a {@link FragmentsResponse} that\n  * will serialize them into JSON format.\n  */\n+@Component\n public class FragmentsResponseFormatter {\n \n-    private static final Log LOG = LogFactory.getLog(FragmentsResponseFormatter.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(FragmentsResponseFormatter.class);\n+\n+    private FragmentMetadataSerDe metadataSerDe;\n+\n+    @Autowired\n+    public void setMetadataSerDe(FragmentMetadataSerDe metadataSerDe) {\n+        this.metadataSerDe = metadataSerDe;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwMTU5MQ==", "bodyText": "not even sure we need this interface anymore", "url": "https://github.com/greenplum-db/pxf/pull/430#discussion_r486801591", "createdAt": "2020-09-11T06:30:24Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/utilities/PluginFactory.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.greenplum.pxf.service.utilities;\n+\n+import org.greenplum.pxf.api.model.Plugin;\n+import org.greenplum.pxf.api.model.RequestContext;\n+\n+/**\n+ * Factory interface for getting instances of the plugins based on their class names.\n+ *\n+ * @param <T> interface that the resulting plugin should implement\n+ */\n+public interface PluginFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e894c64142f63ea4f15c2f1a4252feab450a4"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e21b75fd22c882a1743dcff079a17ed8419b258a", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/e21b75fd22c882a1743dcff079a17ed8419b258a", "committedDate": "2020-09-11T19:35:48Z", "message": "Address PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a1e921d95a1f9b92a6618316763d0345810350f", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/8a1e921d95a1f9b92a6618316763d0345810350f", "committedDate": "2020-09-11T23:24:50Z", "message": "Address PR feedback: Remove PluginFactory interface"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MTQwMzU4", "url": "https://github.com/greenplum-db/pxf/pull/430#pullrequestreview-488140358", "createdAt": "2020-09-14T21:05:06Z", "commit": {"oid": "8a1e921d95a1f9b92a6618316763d0345810350f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4860, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}