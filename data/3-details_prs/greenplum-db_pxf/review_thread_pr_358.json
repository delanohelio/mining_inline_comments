{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4Njg2ODMw", "number": 358, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMToyMzo1NVrOD-wV9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMToyNzowNFrOD-waMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTMwMzU4OnYy", "diffSide": "RIGHT", "path": "server/pxf-api/src/test/java/org/greenplum/pxf/api/utilities/UtilitiesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMToyMzo1NVrOGZDXnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo0MDowM1rOGZD5RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyMjc4MQ==", "bodyText": "nice test, would be good to also see smith starting with a slash /foo/bar and variations", "url": "https://github.com/greenplum-db/pxf/pull/358#discussion_r428922781", "createdAt": "2020-05-21T21:23:55Z", "author": {"login": "denalex"}, "path": "server/pxf-api/src/test/java/org/greenplum/pxf/api/utilities/UtilitiesTest.java", "diffHunk": "@@ -413,4 +413,48 @@ public void testSecurityIsEnabledWithKerberosAuthentication() {\n         configuration.set(\"hadoop.security.authentication\", \"kerberos\");\n         assertTrue(Utilities.isSecurityEnabled(configuration));\n     }\n+\n+    @Test\n+    public void testGetHost() {\n+\n+        assertNull(Utilities.getHost(null));\n+        assertNull(Utilities.getHost(\"\"));\n+        assertNull(Utilities.getHost(\"  \"));\n+        assertNull(Utilities.getHost(\":\"));\n+        assertNull(Utilities.getHost(\"#\"));\n+        assertNull(Utilities.getHost(\"/\"));\n+\n+        assertEquals(\"www.google.com\", Utilities.getHost(\"https://www.google.com/\"));\n+        assertEquals(\"www.google.com\", Utilities.getHost(\"http://www.google.com/\"));\n+\n+        assertEquals(\"www.blog.classroom.me.uk\", Utilities.getHost(\"http://www.blog.classroom.me.uk/index.php\"));\n+        assertEquals(\"www.youtube.com\", Utilities.getHost(\"http://www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"www.youtube.com\", Utilities.getHost(\"https://www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"www.youtube.com\", Utilities.getHost(\"www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"ftp.websitename.com\", Utilities.getHost(\"ftps://ftp.websitename.com/dir/file.txt\"));\n+        assertEquals(\"websitename.com\", Utilities.getHost(\"websitename.com:1234/dir/file.txt\"));\n+        assertEquals(\"websitename.com\", Utilities.getHost(\"ftps://websitename.com:1234/dir/file.txt\"));\n+        assertEquals(\"example.com\", Utilities.getHost(\"example.com?param=value\"));\n+        assertEquals(\"facebook.github.io\", Utilities.getHost(\"https://facebook.github.io/jest/\"));\n+        assertEquals(\"youtube.com\", Utilities.getHost(\"//youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"localhost\", Utilities.getHost(\"http://localhost:4200/watch?v=ClkQA2Lb_iE\"));\n+\n+        assertEquals(\"127.0.0.1\", Utilities.getHost(\"hdfs://127.0.0.1:8020\"));\n+        assertEquals(\"my-bucket\", Utilities.getHost(\"s3a://my-bucket/foo/ba[rc]\"));\n+        assertEquals(\"foo\", Utilities.getHost(\"s3://foo/bar.txt\"));\n+        assertEquals(\"foo.azuredatalakestore.net\", Utilities.getHost(\"adl://foo.azuredatalakestore.net/foo/bar.txt\"));\n+        assertEquals(\"foo\", Utilities.getHost(\"xyz://foo/bar.txt\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"xyz://0.0.0.0:80/foo/bar.txt\"));\n+        assertEquals(\"abc\", Utilities.getHost(\"xyz://abc/foo/bar.txt\"));\n+        assertNull(Utilities.getHost(\"file:///foo/bar.txt\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0:8020\"));\n+        assertEquals(\"abc\", Utilities.getHost(\"hdfs://abc:8020/foo/bar.txt\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0:8020/tmp/issues/172848577/[a-b].csv\"));\n+\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0#anchor\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0/p\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0?PROFILE=foo\"));\n+        assertEquals(\"www.example.com\", Utilities.getHost(\"www.example.com\"));\n+        assertEquals(\"10.0.0.15\", Utilities.getHost(\"10.0.0.15\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62cda9291f992f9d71dd612f0b79915952a171b3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzMTM5Ng==", "bodyText": "I just added one like that! Oliver also pointed it out.", "url": "https://github.com/greenplum-db/pxf/pull/358#discussion_r428931396", "createdAt": "2020-05-21T21:40:03Z", "author": {"login": "frankgh"}, "path": "server/pxf-api/src/test/java/org/greenplum/pxf/api/utilities/UtilitiesTest.java", "diffHunk": "@@ -413,4 +413,48 @@ public void testSecurityIsEnabledWithKerberosAuthentication() {\n         configuration.set(\"hadoop.security.authentication\", \"kerberos\");\n         assertTrue(Utilities.isSecurityEnabled(configuration));\n     }\n+\n+    @Test\n+    public void testGetHost() {\n+\n+        assertNull(Utilities.getHost(null));\n+        assertNull(Utilities.getHost(\"\"));\n+        assertNull(Utilities.getHost(\"  \"));\n+        assertNull(Utilities.getHost(\":\"));\n+        assertNull(Utilities.getHost(\"#\"));\n+        assertNull(Utilities.getHost(\"/\"));\n+\n+        assertEquals(\"www.google.com\", Utilities.getHost(\"https://www.google.com/\"));\n+        assertEquals(\"www.google.com\", Utilities.getHost(\"http://www.google.com/\"));\n+\n+        assertEquals(\"www.blog.classroom.me.uk\", Utilities.getHost(\"http://www.blog.classroom.me.uk/index.php\"));\n+        assertEquals(\"www.youtube.com\", Utilities.getHost(\"http://www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"www.youtube.com\", Utilities.getHost(\"https://www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"www.youtube.com\", Utilities.getHost(\"www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"ftp.websitename.com\", Utilities.getHost(\"ftps://ftp.websitename.com/dir/file.txt\"));\n+        assertEquals(\"websitename.com\", Utilities.getHost(\"websitename.com:1234/dir/file.txt\"));\n+        assertEquals(\"websitename.com\", Utilities.getHost(\"ftps://websitename.com:1234/dir/file.txt\"));\n+        assertEquals(\"example.com\", Utilities.getHost(\"example.com?param=value\"));\n+        assertEquals(\"facebook.github.io\", Utilities.getHost(\"https://facebook.github.io/jest/\"));\n+        assertEquals(\"youtube.com\", Utilities.getHost(\"//youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"localhost\", Utilities.getHost(\"http://localhost:4200/watch?v=ClkQA2Lb_iE\"));\n+\n+        assertEquals(\"127.0.0.1\", Utilities.getHost(\"hdfs://127.0.0.1:8020\"));\n+        assertEquals(\"my-bucket\", Utilities.getHost(\"s3a://my-bucket/foo/ba[rc]\"));\n+        assertEquals(\"foo\", Utilities.getHost(\"s3://foo/bar.txt\"));\n+        assertEquals(\"foo.azuredatalakestore.net\", Utilities.getHost(\"adl://foo.azuredatalakestore.net/foo/bar.txt\"));\n+        assertEquals(\"foo\", Utilities.getHost(\"xyz://foo/bar.txt\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"xyz://0.0.0.0:80/foo/bar.txt\"));\n+        assertEquals(\"abc\", Utilities.getHost(\"xyz://abc/foo/bar.txt\"));\n+        assertNull(Utilities.getHost(\"file:///foo/bar.txt\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0:8020\"));\n+        assertEquals(\"abc\", Utilities.getHost(\"hdfs://abc:8020/foo/bar.txt\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0:8020/tmp/issues/172848577/[a-b].csv\"));\n+\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0#anchor\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0/p\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0?PROFILE=foo\"));\n+        assertEquals(\"www.example.com\", Utilities.getHost(\"www.example.com\"));\n+        assertEquals(\"10.0.0.15\", Utilities.getHost(\"10.0.0.15\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyMjc4MQ=="}, "originalCommit": {"oid": "62cda9291f992f9d71dd612f0b79915952a171b3"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTMxNDQyOnYy", "diffSide": "RIGHT", "path": "server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/HcfsType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMToyNzowNFrOGZDeCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo0MDoxN1rOGZD5tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyNDQyNg==", "bodyText": "I would like to preserve the comment on why we are finding the hostname in the first place", "url": "https://github.com/greenplum-db/pxf/pull/358#discussion_r428924426", "createdAt": "2020-05-21T21:27:04Z", "author": {"login": "denalex"}, "path": "server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/HcfsType.java", "diffHunk": "@@ -235,15 +233,12 @@ protected String getDataUriForPrefix(Configuration configuration, String dataSou\n      * @param configuration configuration used for HCFS operations\n      */\n     protected void disableSecureTokenRenewal(String uri, Configuration configuration) {\n-        if (Utilities.isSecurityEnabled(configuration))\n+        if (Utilities.isSecurityEnabled(configuration) || StringUtils.isBlank(uri))\n             return;\n \n-        // find the \"host\" that TokenCache will check against the exclusion list, for cloud file systems (like S3)\n-        // it might actually be a bucket in the full resource path\n-        String host = URI.create(StringUtils.replace(uri, \" \", \"%20\")).getHost();\n-        // String host = URI.create(uri).getHost();\n-        LOG.debug(\"Disabling token renewal for host {} for path {}\", host, uri);\n+        String host = Utilities.getHost(uri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62cda9291f992f9d71dd612f0b79915952a171b3"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzMTUwOA==", "bodyText": "good catch. Didn't mean to remove it", "url": "https://github.com/greenplum-db/pxf/pull/358#discussion_r428931508", "createdAt": "2020-05-21T21:40:17Z", "author": {"login": "frankgh"}, "path": "server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/HcfsType.java", "diffHunk": "@@ -235,15 +233,12 @@ protected String getDataUriForPrefix(Configuration configuration, String dataSou\n      * @param configuration configuration used for HCFS operations\n      */\n     protected void disableSecureTokenRenewal(String uri, Configuration configuration) {\n-        if (Utilities.isSecurityEnabled(configuration))\n+        if (Utilities.isSecurityEnabled(configuration) || StringUtils.isBlank(uri))\n             return;\n \n-        // find the \"host\" that TokenCache will check against the exclusion list, for cloud file systems (like S3)\n-        // it might actually be a bucket in the full resource path\n-        String host = URI.create(StringUtils.replace(uri, \" \", \"%20\")).getHost();\n-        // String host = URI.create(uri).getHost();\n-        LOG.debug(\"Disabling token renewal for host {} for path {}\", host, uri);\n+        String host = Utilities.getHost(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyNDQyNg=="}, "originalCommit": {"oid": "62cda9291f992f9d71dd612f0b79915952a171b3"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3656, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}