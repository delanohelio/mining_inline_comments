{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwOTk5ODUx", "number": 453, "title": "Release UGI if there is an error during the filter execution", "bodyText": "When the filter execution fails, for example when accessing a\nnon-existing HCFS path, the fragmenter call will throw an\nInvalidInputException. This causes all segments to leave the UGI entry\navailable, and the FileSystem associated to the UGI does not get closed\nuntil the UGI entry is expired 15 minutes earlier. This commit eagerly\ncloses UGI resources when an exception occurs.", "createdAt": "2020-09-22T14:54:30Z", "url": "https://github.com/greenplum-db/pxf/pull/453", "merged": true, "mergeCommit": {"oid": "545377195ba9e63ca15727dfedbb7a5eeaeb3ab5"}, "closed": true, "closedAt": "2020-09-23T00:53:33Z", "author": {"login": "frankgh"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLbqUqAFqTQ5MzY5NzkzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLhXCdABqjM3OTU2NjMyNzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNjk3OTM1", "url": "https://github.com/greenplum-db/pxf/pull/453#pullrequestreview-493697935", "createdAt": "2020-09-22T17:37:31Z", "commit": {"oid": "37beefa671d533141a6571645c2a020df0880a83"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNzozNzozMVrOHWFQWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNzo0MzoyNFrOHWFeCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkxNjgyNg==", "bodyText": "I'd prefer to leave this line as before to capture the semantic meaning of the incoming header. we can tie it to releaseUGI logic elsewhere", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r492916826", "createdAt": "2020-09-22T17:37:31Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -101,7 +101,7 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n         final String gpdbUser = getHeaderValue(request, USER_HEADER, true);\n         final String transactionId = getHeaderValue(request, TRANSACTION_ID_HEADER, true);\n         final Integer segmentId = getHeaderValueInt(request, SEGMENT_ID_HEADER, true);\n-        final boolean lastCallForSegment = getHeaderValueBoolean(request, LAST_FRAGMENT_HEADER, false);\n+        boolean releaseUgi = getHeaderValueBoolean(request, LAST_FRAGMENT_HEADER, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37beefa671d533141a6571645c2a020df0880a83"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyMDMyOA==", "bodyText": "this semantic is not clear now. It would log \"Last fragment call\" if that was indeed last request for fragment data. We don't want to have this printed on error, so maybe have 2 conditions for UGI release - last call and error ?", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r492920328", "createdAt": "2020-09-22T17:43:24Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -157,20 +157,22 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n             // Execute the servlet chain as that user\n             userGroupInformation.doAs(action);\n         } catch (UndeclaredThrowableException ute) {\n+            releaseUgi = true;\n             // unwrap the real exception thrown by the action\n             throw new ServletException(ute.getCause());\n         } catch (InterruptedException ie) {\n+            releaseUgi = true;\n             throw new ServletException(ie);\n         } finally {\n             // Optimization to cleanup the cache if it is the last fragment\n             LOG.debug(\"Releasing proxy user for session: {}. {}\",\n-                    session, lastCallForSegment ? \" Last fragment call\" : \"\");\n+                    session, releaseUgi ? \" Last fragment call\" : \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37beefa671d533141a6571645c2a020df0880a83"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzODg1NDQx", "url": "https://github.com/greenplum-db/pxf/pull/453#pullrequestreview-493885441", "createdAt": "2020-09-22T22:18:52Z", "commit": {"oid": "b3a21957e1e74366e5a3c1e3fc155993591f404a"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjoxOToxMlrOHWOU-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjozMTo0N1rOHWOnSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2NTQ2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        releaseUgi = true;\n          \n          \n            \n                        exceptionDetected = true;", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r493065467", "createdAt": "2020-09-22T22:19:12Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -157,20 +157,22 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n             // Execute the servlet chain as that user\n             userGroupInformation.doAs(action);\n         } catch (UndeclaredThrowableException ute) {\n+            releaseUgi = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a21957e1e74366e5a3c1e3fc155993591f404a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2NTU0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        releaseUgi = true;\n          \n          \n            \n                        exceptionDetected = true;", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r493065544", "createdAt": "2020-09-22T22:19:24Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -157,20 +157,22 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n             // Execute the servlet chain as that user\n             userGroupInformation.doAs(action);\n         } catch (UndeclaredThrowableException ute) {\n+            releaseUgi = true;\n             // unwrap the real exception thrown by the action\n             throw new ServletException(ute.getCause());\n         } catch (InterruptedException ie) {\n+            releaseUgi = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a21957e1e74366e5a3c1e3fc155993591f404a"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2NjYxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean releaseUgi = lastCallForSegment;\n          \n          \n            \n                    boolean exceptionDetected = false;", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r493066612", "createdAt": "2020-09-22T22:22:11Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -147,6 +146,7 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n             return true;\n         };\n \n+        boolean releaseUgi = lastCallForSegment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a21957e1e74366e5a3c1e3fc155993591f404a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2Njk4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Optimization to cleanup the cache if it is the last fragment\n          \n          \n            \n                        boolean releaseUgi = lastCallForSegment || exceptionDetected;\n          \n          \n            \n                        // Optimization to cleanup the cache if it is the last fragment", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r493066984", "createdAt": "2020-09-22T22:23:17Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -157,20 +157,22 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n             // Execute the servlet chain as that user\n             userGroupInformation.doAs(action);\n         } catch (UndeclaredThrowableException ute) {\n+            releaseUgi = true;\n             // unwrap the real exception thrown by the action\n             throw new ServletException(ute.getCause());\n         } catch (InterruptedException ie) {\n+            releaseUgi = true;\n             throw new ServletException(ie);\n         } finally {\n             // Optimization to cleanup the cache if it is the last fragment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a21957e1e74366e5a3c1e3fc155993591f404a"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2NzcxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOG.debug(\"Releasing proxy user for session: {}. {}\",\n          \n          \n            \n                        LOG.debug(\"Releasing UGI from cache for session: {}. {}\",", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r493067712", "createdAt": "2020-09-22T22:25:19Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -157,20 +157,22 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n             // Execute the servlet chain as that user\n             userGroupInformation.doAs(action);\n         } catch (UndeclaredThrowableException ute) {\n+            releaseUgi = true;\n             // unwrap the real exception thrown by the action\n             throw new ServletException(ute.getCause());\n         } catch (InterruptedException ie) {\n+            releaseUgi = true;\n             throw new ServletException(ie);\n         } finally {\n             // Optimization to cleanup the cache if it is the last fragment\n             LOG.debug(\"Releasing proxy user for session: {}. {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a21957e1e74366e5a3c1e3fc155993591f404a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2Nzg4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG.error(\"Error releasing UGICache for session: {}\", session, t);\n          \n          \n            \n                            LOG.error(\"Error releasing UGI from cache for session: {}\", session, t);", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r493067889", "createdAt": "2020-09-22T22:25:42Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -157,20 +157,22 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n             // Execute the servlet chain as that user\n             userGroupInformation.doAs(action);\n         } catch (UndeclaredThrowableException ute) {\n+            releaseUgi = true;\n             // unwrap the real exception thrown by the action\n             throw new ServletException(ute.getCause());\n         } catch (InterruptedException ie) {\n+            releaseUgi = true;\n             throw new ServletException(ie);\n         } finally {\n             // Optimization to cleanup the cache if it is the last fragment\n             LOG.debug(\"Releasing proxy user for session: {}. {}\",\n-                    session, lastCallForSegment ? \" Last fragment call\" : \"\");\n+                    session, releaseUgi ? \" Cleaning UGI immediately from UGICache if there are no other references to this UGI entry.\" : \"\");\n             try {\n-                ugiCache.release(session, lastCallForSegment);\n+                ugiCache.release(session, releaseUgi);\n             } catch (Throwable t) {\n                 LOG.error(\"Error releasing UGICache for session: {}\", session, t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a21957e1e74366e5a3c1e3fc155993591f404a"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2OTU4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                session, releaseUgi ? \" Cleaning UGI immediately from UGICache if there are no other references to this UGI entry.\" : \"\");\n          \n          \n            \n                                session, exceptionDetected ? \" Exception while processing\" : (lastCallForSegment ? \" Processed last fragment for segment\" : \"\"));", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r493069589", "createdAt": "2020-09-22T22:30:13Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -157,20 +157,22 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n             // Execute the servlet chain as that user\n             userGroupInformation.doAs(action);\n         } catch (UndeclaredThrowableException ute) {\n+            releaseUgi = true;\n             // unwrap the real exception thrown by the action\n             throw new ServletException(ute.getCause());\n         } catch (InterruptedException ie) {\n+            releaseUgi = true;\n             throw new ServletException(ie);\n         } finally {\n             // Optimization to cleanup the cache if it is the last fragment\n             LOG.debug(\"Releasing proxy user for session: {}. {}\",\n-                    session, lastCallForSegment ? \" Last fragment call\" : \"\");\n+                    session, releaseUgi ? \" Cleaning UGI immediately from UGICache if there are no other references to this UGI entry.\" : \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a21957e1e74366e5a3c1e3fc155993591f404a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA3MDE1NQ==", "bodyText": "we don't need to explain in the DEBUG log statement, but we need to reflect which path our logic took for troubleshooting, so would like to know why we are calling this -- due to exception or receiving last fragment flag", "url": "https://github.com/greenplum-db/pxf/pull/453#discussion_r493070155", "createdAt": "2020-09-22T22:31:47Z", "author": {"login": "denalex"}, "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/servlet/SecurityServletFilter.java", "diffHunk": "@@ -157,20 +157,22 @@ public void doFilter(final ServletRequest request, final ServletResponse respons\n             // Execute the servlet chain as that user\n             userGroupInformation.doAs(action);\n         } catch (UndeclaredThrowableException ute) {\n+            releaseUgi = true;\n             // unwrap the real exception thrown by the action\n             throw new ServletException(ute.getCause());\n         } catch (InterruptedException ie) {\n+            releaseUgi = true;\n             throw new ServletException(ie);\n         } finally {\n             // Optimization to cleanup the cache if it is the last fragment\n             LOG.debug(\"Releasing proxy user for session: {}. {}\",\n-                    session, lastCallForSegment ? \" Last fragment call\" : \"\");\n+                    session, releaseUgi ? \" Cleaning UGI immediately from UGICache if there are no other references to this UGI entry.\" : \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2OTU4OQ=="}, "originalCommit": {"oid": "b3a21957e1e74366e5a3c1e3fc155993591f404a"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTE4MjI2", "url": "https://github.com/greenplum-db/pxf/pull/453#pullrequestreview-493918226", "createdAt": "2020-09-22T23:43:58Z", "commit": {"oid": "e01cf052c2d5012f669a52ed76f2810b46a585cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f8888cad39c3ccfd03ed0bc2fa60a9944216ec3", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/2f8888cad39c3ccfd03ed0bc2fa60a9944216ec3", "committedDate": "2020-09-23T00:06:14Z", "message": "Release UGI if there is an error during the filter execution\n\nWhen the filter execution fails, for example when accessing a\nnon-existing HCFS path, the fragmenter call will throw an\nInvalidInputException. This causes all segments to leave the UGI entry\navailable, and the FileSystem associated to the UGI does not get closed\nuntil the UGI entry is expired 15 minutes earlier. This commit eagerly\ncloses UGI resources when an exception occurs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b82f329da2dbe7825fed367a3570aff3aab6595e", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/b82f329da2dbe7825fed367a3570aff3aab6595e", "committedDate": "2020-09-23T00:06:22Z", "message": "Remove Configuration from SessionId\n\nThe Configuration in SessionId was only being used to check whether\nsecurity is enabled for the given server. But the Configuration being in\nthe SessionId brings a lot of issues, because when SessionIds are being\nkept in the UGICache, they would retain a lot of associated objects in\nmemory. This would cause in some cases hundreds of megabytes in memory\njust for the purpose of keeping a single field from Configuration. This\ncommit we only store the `isSecurityEnabled` boolean in the SessionId,\nas it is the only piece of information that we need to keep."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e01cf052c2d5012f669a52ed76f2810b46a585cc", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/e01cf052c2d5012f669a52ed76f2810b46a585cc", "committedDate": "2020-09-22T22:39:23Z", "message": "Address additional PR feedback"}, "afterCommit": {"oid": "b82f329da2dbe7825fed367a3570aff3aab6595e", "author": {"user": null}, "url": "https://github.com/greenplum-db/pxf/commit/b82f329da2dbe7825fed367a3570aff3aab6595e", "committedDate": "2020-09-23T00:06:22Z", "message": "Remove Configuration from SessionId\n\nThe Configuration in SessionId was only being used to check whether\nsecurity is enabled for the given server. But the Configuration being in\nthe SessionId brings a lot of issues, because when SessionIds are being\nkept in the UGICache, they would retain a lot of associated objects in\nmemory. This would cause in some cases hundreds of megabytes in memory\njust for the purpose of keeping a single field from Configuration. This\ncommit we only store the `isSecurityEnabled` boolean in the SessionId,\nas it is the only piece of information that we need to keep."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4885, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}