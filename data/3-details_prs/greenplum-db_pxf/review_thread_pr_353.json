{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MzYzNTAz", "number": 353, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo1Mzo0MFrOD6Qnqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzozNDoyNFrOD6uDUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDE2Mjk5OnYy", "diffSide": "RIGHT", "path": "Makefile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo1Mzo0MFrOGR_qew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzoyODowM1rOGSIzDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyMjA0Mw==", "bodyText": "how about cleaning instead of doing a rm -rf build/stage?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            stage:\n          \n          \n            \n            \trm -rf build/stage\n          \n          \n            \n            stage: clean", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421522043", "createdAt": "2020-05-07T13:53:40Z", "author": {"login": "frankgh"}, "path": "Makefile", "diffHunk": "@@ -37,6 +40,7 @@ install:\n \tmake -C server install\n \n stage:\n+\trm -rf build/stage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MTY5NA==", "bodyText": "clean will wipe out all built artifacts in subprojects, here we are just making sure that the stage directory is clean and ready to receive new artifacts.", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421671694", "createdAt": "2020-05-07T17:28:03Z", "author": {"login": "denalex"}, "path": "Makefile", "diffHunk": "@@ -37,6 +40,7 @@ install:\n \tmake -C server install\n \n stage:\n+\trm -rf build/stage", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyMjA0Mw=="}, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDU4MzQzOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToyMjozOFrOGSD0SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzoyOTowM1rOGSI10A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5MDA4OQ==", "bodyText": "I think we deprecated the reference guide a long time ago no?", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421590089", "createdAt": "2020-05-07T15:22:38Z", "author": {"login": "frankgh"}, "path": "README.md", "diffHunk": "@@ -7,14 +7,19 @@\n Introduction\n ============\n \n-PXF is an extensible framework that allows a distributed database like GPDB to query external data files, whose metadata is not managed by the database.\n-PXF includes built-in connectors for accessing data that exists inside HDFS files, Hive tables, HBase tables and more.\n-Users can also create their own connectors to other data storages or processing engines.\n-To create these connectors using JAVA plugins, see the PXF API and Reference Guide onGPDB.\n+PXF is an extensible framework that allows a distributed database like Greenplum to query external data files, whose metadata is not managed by the database.\n+PXF includes built-in connectors for accessing data that exists inside HDFS files, Hive tables, HBase tables, JDBC-accessible databases and more.\n+Users can also create their own connectors to other data storage or processing engines.\n+To create these connectors using JAVA plugins, see the PXF API and Reference Guide on GPDB.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MjQwMA==", "bodyText": "probably, I can remove this line.", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421672400", "createdAt": "2020-05-07T17:29:03Z", "author": {"login": "denalex"}, "path": "README.md", "diffHunk": "@@ -7,14 +7,19 @@\n Introduction\n ============\n \n-PXF is an extensible framework that allows a distributed database like GPDB to query external data files, whose metadata is not managed by the database.\n-PXF includes built-in connectors for accessing data that exists inside HDFS files, Hive tables, HBase tables and more.\n-Users can also create their own connectors to other data storages or processing engines.\n-To create these connectors using JAVA plugins, see the PXF API and Reference Guide onGPDB.\n+PXF is an extensible framework that allows a distributed database like Greenplum to query external data files, whose metadata is not managed by the database.\n+PXF includes built-in connectors for accessing data that exists inside HDFS files, Hive tables, HBase tables, JDBC-accessible databases and more.\n+Users can also create their own connectors to other data storage or processing engines.\n+To create these connectors using JAVA plugins, see the PXF API and Reference Guide on GPDB.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5MDA4OQ=="}, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDYxMjY5OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToyODozNFrOGSEGCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToyODozNFrOGSEGCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5NDYzMg==", "bodyText": "so maven is another dependency required to run automation, we install it in our docker images, maybe add it in this list also?", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421594632", "createdAt": "2020-05-07T15:28:34Z", "author": {"login": "frankgh"}, "path": "README.md", "diffHunk": "@@ -58,50 +63,53 @@ ln -s ~/<git_repos_root> ~/workspace\n \n To build PXF, you must have:\n \n-- JDK 1.8 to compile (PXF runs on Java 8 and Java 11)\n-- Go (1.9 or later)\n-- unzip\n-\n-Export your `JAVA_HOME`.\n-\n-```\n-export JAVA_HOME=<PATH_TO_YOUR_JAVA_HOME>\n-```\n-\n-To install Go on CentOS, `sudo yum install go`.\n-\n-For other platforms, see the [Go downloads page](https://golang.org/dl/).\n-\n-Make sure to export your `GOPATH` and add go to your `PATH`. For example:\n-\n-```\n-export GOPATH=$HOME/go\n-export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin\n-```\n-\n-Once you have installed Go, you will need the `dep` and `ginkgo` tools, which install Go dependencies and run Go tests,\n-respectively. Assuming `go` is on your `PATH`, you can run:\n-\n-```\n-go get github.com/golang/dep/cmd/dep\n-go get github.com/onsi/ginkgo/ginkgo\n-```\n-\n-to install them.\n-\n-## How to Build\n-PXF uses gradle for build and has a wrapper makefile for abstraction\n+1. GCC compiler, `make` system, `unzip` package ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDYxODM4OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToyOTo0MVrOGSEJeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToyOTo0MVrOGSEJeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5NTUxMw==", "bodyText": "should we make the dev image public? since we already were doing that for the other image", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421595513", "createdAt": "2020-05-07T15:29:41Z", "author": {"login": "frankgh"}, "path": "README.md", "diffHunk": "@@ -124,30 +129,34 @@ cd ~/workspace\n tar xzf singlecluster-HDP.tar.gz\n ```\n \n-### GPDB\n-```\n-git clone https://github.com/greenplum-db/gpdb.git\n-```\n \n-You'll end up with a directory structure like this:\n+# Development With Docker\n+NOTE: Since the docker container will house all Single cluster Hadoop, Greenplum and PXF, we recommend that you have at least 4 cpus and 6GB memory allocated to Docker. These settings are available under docker preferences.\n \n-```\n-~\n-\u2514\u2500\u2500 workspace\n-    \u251c\u2500\u2500 pxf\n-    \u251c\u2500\u2500 singlecluster-HDP\n-    \u2514\u2500\u2500 gpdb\n-```\n+The following commands run the docker container and set up and switch to user gpadmin.\n \n-If you already have GPDB installed and running using the instructions shown in the [GPDB README](https://github.com/greenplum-db/gpdb), \n-you can ignore the `Setup GPDB` section below and simply follow the steps in  `Setup Hadoop` and `Setup PXF`\n+```bash\n+# Get the latest image\n+export GCR_PROJECT=<YOUR-GOOGLE_CONTAINER_REGISTRY-PROJECT-NAME>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDYyNTc5OnYy", "diffSide": "RIGHT", "path": "dev/bootstrap.bash", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTozMTozMVrOGSEOVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTozMTozMVrOGSEOVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5Njc1Nw==", "bodyText": "should we bake this into the container during docker build instead?", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421596757", "createdAt": "2020-05-07T15:31:31Z", "author": {"login": "frankgh"}, "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDYzNjIyOnYy", "diffSide": "RIGHT", "path": "dev/bootstrap.bash", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTozNDowNlrOGSEVJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozNTozOFrOGSJE3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5ODUwMQ==", "bodyText": "this doesn't look too good , too hacky no?", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421598501", "createdAt": "2020-05-07T15:34:06Z", "author": {"login": "frankgh"}, "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF\n+gpadmin soft core unlimited\n+gpadmin soft nproc 131072\n+gpadmin soft nofile 65536\n+EOF\n+fi\n+\n+# setup environment for gpadmin\n+>>/home/gpadmin/.bash_profile cat <<EOF\n+GPHOME=\\$(find /usr/local/ -name 'greenplum-db-*')\n+if [[ -f \\${GPHOME}/greenplum_path.sh ]]; then\n+    PYTHONHOME='' source \\${GPHOME}/greenplum_path.sh\n+fi\n+\n+export PS1=\"[\\u@\\h \\W]\\$ \"\n+export HADOOP_ROOT=~/workspace/singlecluster\n+export PXF_HOME=\\${GPHOME}/pxf\n+export PXF_CONF=~gpadmin/pxf\n+export PXF_JVM_OPTS=\"-Xmx512m -Xms256m\"\n+export GPHD_ROOT=~/workspace/singlecluster\n+#export BUILD_PARAMS=\"-x test\"\n+export LANG=en_US.UTF-8\n+export JAVA_HOME=/etc/alternatives/java_sdk\n+export SLAVES=1\n+export GOPATH=/opt/go\n+export PATH=~gpadmin/workspace/pxf/dev:\\${PXF_HOME}/bin:\\${GPHD_ROOT}/hadoop/bin:\\${GOPATH}/bin:/usr/local/go/bin:\\$PATH\n+export PGPORT=5432\n+EOF\n+\n+# install and init Greenplum as gpadmin user\n+su - gpadmin -c ${SCRIPT_DIR}/install_greenplum.bash\n+\n+# rename python distro shipped with Greenplum so that system python is used for Tinc tests\n+mv /usr/local/greenplum-db/ext/python/ /usr/local/greenplum-db/ext/python2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NjI1Mg==", "bodyText": "I agree, but the need to source greenplum_path.sh causes us here to \"unvendor\" Python. I'm open to better solutions", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421676252", "createdAt": "2020-05-07T17:35:38Z", "author": {"login": "denalex"}, "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF\n+gpadmin soft core unlimited\n+gpadmin soft nproc 131072\n+gpadmin soft nofile 65536\n+EOF\n+fi\n+\n+# setup environment for gpadmin\n+>>/home/gpadmin/.bash_profile cat <<EOF\n+GPHOME=\\$(find /usr/local/ -name 'greenplum-db-*')\n+if [[ -f \\${GPHOME}/greenplum_path.sh ]]; then\n+    PYTHONHOME='' source \\${GPHOME}/greenplum_path.sh\n+fi\n+\n+export PS1=\"[\\u@\\h \\W]\\$ \"\n+export HADOOP_ROOT=~/workspace/singlecluster\n+export PXF_HOME=\\${GPHOME}/pxf\n+export PXF_CONF=~gpadmin/pxf\n+export PXF_JVM_OPTS=\"-Xmx512m -Xms256m\"\n+export GPHD_ROOT=~/workspace/singlecluster\n+#export BUILD_PARAMS=\"-x test\"\n+export LANG=en_US.UTF-8\n+export JAVA_HOME=/etc/alternatives/java_sdk\n+export SLAVES=1\n+export GOPATH=/opt/go\n+export PATH=~gpadmin/workspace/pxf/dev:\\${PXF_HOME}/bin:\\${GPHD_ROOT}/hadoop/bin:\\${GOPATH}/bin:/usr/local/go/bin:\\$PATH\n+export PGPORT=5432\n+EOF\n+\n+# install and init Greenplum as gpadmin user\n+su - gpadmin -c ${SCRIPT_DIR}/install_greenplum.bash\n+\n+# rename python distro shipped with Greenplum so that system python is used for Tinc tests\n+mv /usr/local/greenplum-db/ext/python/ /usr/local/greenplum-db/ext/python2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5ODUwMQ=="}, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDY0MDcwOnYy", "diffSide": "RIGHT", "path": "dev/bootstrap.bash", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTozNTowM1rOGSEX8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozNjo0NFrOGSJHdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5OTIxOA==", "bodyText": "this path assumes greenplum was installed from rpm, what if they build from source? should we use find instead of hardcoding the path?", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421599218", "createdAt": "2020-05-07T15:35:03Z", "author": {"login": "frankgh"}, "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF\n+gpadmin soft core unlimited\n+gpadmin soft nproc 131072\n+gpadmin soft nofile 65536\n+EOF\n+fi\n+\n+# setup environment for gpadmin\n+>>/home/gpadmin/.bash_profile cat <<EOF\n+GPHOME=\\$(find /usr/local/ -name 'greenplum-db-*')\n+if [[ -f \\${GPHOME}/greenplum_path.sh ]]; then\n+    PYTHONHOME='' source \\${GPHOME}/greenplum_path.sh\n+fi\n+\n+export PS1=\"[\\u@\\h \\W]\\$ \"\n+export HADOOP_ROOT=~/workspace/singlecluster\n+export PXF_HOME=\\${GPHOME}/pxf\n+export PXF_CONF=~gpadmin/pxf\n+export PXF_JVM_OPTS=\"-Xmx512m -Xms256m\"\n+export GPHD_ROOT=~/workspace/singlecluster\n+#export BUILD_PARAMS=\"-x test\"\n+export LANG=en_US.UTF-8\n+export JAVA_HOME=/etc/alternatives/java_sdk\n+export SLAVES=1\n+export GOPATH=/opt/go\n+export PATH=~gpadmin/workspace/pxf/dev:\\${PXF_HOME}/bin:\\${GPHD_ROOT}/hadoop/bin:\\${GOPATH}/bin:/usr/local/go/bin:\\$PATH\n+export PGPORT=5432\n+EOF\n+\n+# install and init Greenplum as gpadmin user\n+su - gpadmin -c ${SCRIPT_DIR}/install_greenplum.bash\n+\n+# rename python distro shipped with Greenplum so that system python is used for Tinc tests\n+mv /usr/local/greenplum-db/ext/python/ /usr/local/greenplum-db/ext/python2\n+\n+# remove existing PXF, if any, that could come pre-installed with Greenplum RPM\n+#source /usr/local/greenplum-db*/greenplum_path.sh\n+\n+GPH=/usr/local/greenplum-db", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NjkxNw==", "bodyText": "probably, this is still WIP", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421676917", "createdAt": "2020-05-07T17:36:44Z", "author": {"login": "denalex"}, "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF\n+gpadmin soft core unlimited\n+gpadmin soft nproc 131072\n+gpadmin soft nofile 65536\n+EOF\n+fi\n+\n+# setup environment for gpadmin\n+>>/home/gpadmin/.bash_profile cat <<EOF\n+GPHOME=\\$(find /usr/local/ -name 'greenplum-db-*')\n+if [[ -f \\${GPHOME}/greenplum_path.sh ]]; then\n+    PYTHONHOME='' source \\${GPHOME}/greenplum_path.sh\n+fi\n+\n+export PS1=\"[\\u@\\h \\W]\\$ \"\n+export HADOOP_ROOT=~/workspace/singlecluster\n+export PXF_HOME=\\${GPHOME}/pxf\n+export PXF_CONF=~gpadmin/pxf\n+export PXF_JVM_OPTS=\"-Xmx512m -Xms256m\"\n+export GPHD_ROOT=~/workspace/singlecluster\n+#export BUILD_PARAMS=\"-x test\"\n+export LANG=en_US.UTF-8\n+export JAVA_HOME=/etc/alternatives/java_sdk\n+export SLAVES=1\n+export GOPATH=/opt/go\n+export PATH=~gpadmin/workspace/pxf/dev:\\${PXF_HOME}/bin:\\${GPHD_ROOT}/hadoop/bin:\\${GOPATH}/bin:/usr/local/go/bin:\\$PATH\n+export PGPORT=5432\n+EOF\n+\n+# install and init Greenplum as gpadmin user\n+su - gpadmin -c ${SCRIPT_DIR}/install_greenplum.bash\n+\n+# rename python distro shipped with Greenplum so that system python is used for Tinc tests\n+mv /usr/local/greenplum-db/ext/python/ /usr/local/greenplum-db/ext/python2\n+\n+# remove existing PXF, if any, that could come pre-installed with Greenplum RPM\n+#source /usr/local/greenplum-db*/greenplum_path.sh\n+\n+GPH=/usr/local/greenplum-db", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5OTIxOA=="}, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDY0NDIzOnYy", "diffSide": "RIGHT", "path": "dev/bootstrap.bash", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTozNTo1NVrOGSEaOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTozNTo1NVrOGSEaOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5OTgwMw==", "bodyText": "any reason why indentation is different here from previous line?", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421599803", "createdAt": "2020-05-07T15:35:55Z", "author": {"login": "frankgh"}, "path": "dev/bootstrap.bash", "diffHunk": "@@ -0,0 +1,68 @@\n+#!/bin/bash\n+\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+#mkdir -p /usr/local/greenplum-db\n+#chown -R gpadmin:gpadmin /usr/local/greenplum-db\n+\n+# setup limits for gpadmin\n+if [[ ! -f /etc/security/limits.d/gpadmin-limits.conf ]]; then\n+>/etc/security/limits.d/gpadmin-limits.conf cat <<-EOF\n+gpadmin soft core unlimited\n+gpadmin soft nproc 131072\n+gpadmin soft nofile 65536\n+EOF\n+fi\n+\n+# setup environment for gpadmin\n+>>/home/gpadmin/.bash_profile cat <<EOF\n+GPHOME=\\$(find /usr/local/ -name 'greenplum-db-*')\n+if [[ -f \\${GPHOME}/greenplum_path.sh ]]; then\n+    PYTHONHOME='' source \\${GPHOME}/greenplum_path.sh\n+fi\n+\n+export PS1=\"[\\u@\\h \\W]\\$ \"\n+export HADOOP_ROOT=~/workspace/singlecluster\n+export PXF_HOME=\\${GPHOME}/pxf\n+export PXF_CONF=~gpadmin/pxf\n+export PXF_JVM_OPTS=\"-Xmx512m -Xms256m\"\n+export GPHD_ROOT=~/workspace/singlecluster\n+#export BUILD_PARAMS=\"-x test\"\n+export LANG=en_US.UTF-8\n+export JAVA_HOME=/etc/alternatives/java_sdk\n+export SLAVES=1\n+export GOPATH=/opt/go\n+export PATH=~gpadmin/workspace/pxf/dev:\\${PXF_HOME}/bin:\\${GPHD_ROOT}/hadoop/bin:\\${GOPATH}/bin:/usr/local/go/bin:\\$PATH\n+export PGPORT=5432\n+EOF\n+\n+# install and init Greenplum as gpadmin user\n+su - gpadmin -c ${SCRIPT_DIR}/install_greenplum.bash\n+\n+# rename python distro shipped with Greenplum so that system python is used for Tinc tests\n+mv /usr/local/greenplum-db/ext/python/ /usr/local/greenplum-db/ext/python2\n+\n+# remove existing PXF, if any, that could come pre-installed with Greenplum RPM\n+#source /usr/local/greenplum-db*/greenplum_path.sh\n+\n+GPH=/usr/local/greenplum-db\n+if [[ -d ${GPH}/pxf ]]; then\n+    rm -rf ${GPH}/pxf\n+    rm ${GPH}/lib/postgresql/pxf.so\n+\trm ${GPH}/share/postgresql/extension/pxf.control", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDY0OTQ1OnYy", "diffSide": "RIGHT", "path": "dev/init_hadoop.bash", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTozNzowMlrOGSEdgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzozOTo1NlrOGSJPOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwMDY0Mg==", "bodyText": "can't we just copy this files from /singlecluster?", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421600642", "createdAt": "2020-05-07T15:37:02Z", "author": {"login": "frankgh"}, "path": "dev/init_hadoop.bash", "diffHunk": "@@ -0,0 +1,198 @@\n+#!/usr/bin/env bash\n+\n+>~/workspace/singlecluster/hadoop/etc/hadoop/core-site.xml cat <<EOF", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3ODkwNQ==", "bodyText": "It is now re-mapped into workspace in start.sh:\n-v ~/workspace/singlecluster-HDP:/home/gpadmin/workspace/singlecluster\n\nIf you mapped singlecluster into /singlecluster in dev docker image, I can change this", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421678905", "createdAt": "2020-05-07T17:39:56Z", "author": {"login": "denalex"}, "path": "dev/init_hadoop.bash", "diffHunk": "@@ -0,0 +1,198 @@\n+#!/usr/bin/env bash\n+\n+>~/workspace/singlecluster/hadoop/etc/hadoop/core-site.xml cat <<EOF", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwMDY0Mg=="}, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDcyNjA2OnYy", "diffSide": "RIGHT", "path": "package/pxf-gp6.spec", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTo1NDoxM1rOGSFNhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzo0MTo0OVrOGSJTdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxMjkzNA==", "bodyText": "do we know why we need this?", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421612934", "createdAt": "2020-05-07T15:54:13Z", "author": {"login": "frankgh"}, "path": "package/pxf-gp6.spec", "diffHunk": "@@ -0,0 +1,48 @@\n+# Disable repacking of jars, since it takes forever\n+%define __jar_repack %{nil}\n+\n+# Disable automatic dependency processing both for requirements and provides\n+AutoReqProv: no\n+\n+Name: pxf-gp6\n+Version: %{pxf_version}\n+Release: %{pxf_release}%{?dist}\n+Summary: Greenplum PXF framework for external data access\n+License: %{license}\n+URL: https://github.com/greenplum-db/pxf\n+Vendor: %{vendor}\n+\n+Prefix: /usr/local/%{name}\n+\n+# .so file makes sense only when installing on Greenplum node, so inherit Greenplum's dependencies implicitly\n+# Java server can be installed on a new node, only bash is needed for management scripts\n+Requires: bash\n+\n+%if 0%{?rhel} == 7\n+Requires: openssl-libs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3OTk4OQ==", "bodyText": "not sure, maybe I can remove this.", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r421679989", "createdAt": "2020-05-07T17:41:49Z", "author": {"login": "denalex"}, "path": "package/pxf-gp6.spec", "diffHunk": "@@ -0,0 +1,48 @@\n+# Disable repacking of jars, since it takes forever\n+%define __jar_repack %{nil}\n+\n+# Disable automatic dependency processing both for requirements and provides\n+AutoReqProv: no\n+\n+Name: pxf-gp6\n+Version: %{pxf_version}\n+Release: %{pxf_release}%{?dist}\n+Summary: Greenplum PXF framework for external data access\n+License: %{license}\n+URL: https://github.com/greenplum-db/pxf\n+Vendor: %{vendor}\n+\n+Prefix: /usr/local/%{name}\n+\n+# .so file makes sense only when installing on Greenplum node, so inherit Greenplum's dependencies implicitly\n+# Java server can be installed on a new node, only bash is needed for management scripts\n+Requires: bash\n+\n+%if 0%{?rhel} == 7\n+Requires: openssl-libs", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxMjkzNA=="}, "originalCommit": {"oid": "af1f4f4b1aa437c690f293377702c4a917db2afb"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODk0NzM5OnYy", "diffSide": "RIGHT", "path": "package/install_rpm", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzoyMjozMVrOGStLNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzoyMjozMVrOGStLNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2NzcwMQ==", "bodyText": "${INSTALL_COMPONENT_SCRIPT_DIR} should be quoted", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r422267701", "createdAt": "2020-05-08T17:22:31Z", "author": {"login": "oliverralbertini"}, "path": "package/install_rpm", "diffHunk": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+\n+set -euo pipefail\n+\n+INSTALL_COMPONENT_SCRIPT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\n+RPM_FILE=$(basename $(find ${INSTALL_COMPONENT_SCRIPT_DIR} -name '*.rpm'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566781adcab88d86180103a2cfaa9e94a6dbe0bc"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODk2NDUxOnYy", "diffSide": "RIGHT", "path": "package/install_rpm", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzoyNzozOVrOGStVyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzoyNzozOVrOGStVyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MDQwOQ==", "bodyText": "I'd rather have something like\n(( $(id -u) == 0 )) || sudo_if_needed=sudo", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r422270409", "createdAt": "2020-05-08T17:27:39Z", "author": {"login": "oliverralbertini"}, "path": "package/install_rpm", "diffHunk": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+\n+set -euo pipefail\n+\n+INSTALL_COMPONENT_SCRIPT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\n+RPM_FILE=$(basename $(find ${INSTALL_COMPONENT_SCRIPT_DIR} -name '*.rpm'))\n+\n+echo \"Installing PXF RPM ${RPM_FILE} ...\"\n+\n+owner=$(whoami)\n+sudo_if_needed=''\n+if [[ \"${owner}\" != \"root\" ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566781adcab88d86180103a2cfaa9e94a6dbe0bc"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODk3NDI2OnYy", "diffSide": "RIGHT", "path": "dev/init_greenplum.bash", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzozMDo0OFrOGStcDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzozMDo0OFrOGStcDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MjAxMg==", "bodyText": "we recently found that 6 primary segs is probably overkill", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r422272012", "createdAt": "2020-05-08T17:30:48Z", "author": {"login": "oliverralbertini"}, "path": "dev/init_greenplum.bash", "diffHunk": "@@ -0,0 +1,41 @@\n+#!/usr/bin/env bash\n+\n+set -euo pipefail\n+\n+GPHOME=${GPHOME:=/usr/local/greenplum-db}\n+PYTHONHOME='' source \"${GPHOME}/greenplum_path.sh\"\n+\n+# Create config and data dirs.\n+data_dirs=(~gpadmin/data{1..6}/primary)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566781adcab88d86180103a2cfaa9e94a6dbe0bc"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODk4NTEyOnYy", "diffSide": "RIGHT", "path": "Makefile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzozNDoyNFrOGStitA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzozNDoyNFrOGStitA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MzcxNg==", "bodyText": "whitespace issue", "url": "https://github.com/greenplum-db/pxf/pull/353#discussion_r422273716", "createdAt": "2020-05-08T17:34:24Z", "author": {"login": "oliverralbertini"}, "path": "Makefile", "diffHunk": "@@ -49,12 +53,50 @@ stage:\n \tcp -a cli/build/stage/* build/stage/$${PXF_PACKAGE_NAME} ;\\\n \tcp -a server/build/stage/* build/stage/$${PXF_PACKAGE_NAME} ;\\\n \techo $$(git rev-parse --verify HEAD) > build/stage/$${PXF_PACKAGE_NAME}/pxf/commit.sha ;\\\n-\tcp package/install_component build/stage/$${PXF_PACKAGE_NAME} ;\\\n+\tcp package/install_binary build/stage/$${PXF_PACKAGE_NAME}/install_component\n \n tar: stage\n+\trm -rf build/dist\n \tmkdir -p build/dist\n \ttar -czf build/dist/$(shell ls build/stage).tar.gz -C build/stage $(shell ls build/stage)\n \n+rpm:\n+\tmake -C external-table stage\n+\tmake -C cli/go/src/pxf-cli stage\n+\tmake -C server stage\n+\tset -e ;\\\n+\tGP_MAJOR_VERSION=$$(cat external-table/build/metadata/gp_major_version) ;\\\n+\tPXF_MAIN_VERSION=$${PXF_VERSION//-SNAPSHOT/} ;\\\n+\tif [[ $${PXF_VERSION} == *\"-SNAPSHOT\" ]]; then PXF_RELEASE=SNAPSHOT; else PXF_RELEASE=1; fi ;\\\n+\trm -rf build/rpmbuild ;\\\n+\tmkdir -p build/rpmbuild/{BUILD,RPMS,SOURCES,SPECS} ;\\\n+\tmkdir -p build/rpmbuild/SOURCES/gpextable ;\\\n+\tcp -a external-table/build/stage/* build/rpmbuild/SOURCES/gpextable ;\\\n+    cp -a cli/build/stage/pxf/* build/rpmbuild/SOURCES ;\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566781adcab88d86180103a2cfaa9e94a6dbe0bc"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3645, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}