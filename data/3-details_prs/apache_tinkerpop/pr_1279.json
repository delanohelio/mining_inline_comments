{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NDY5Mjgy", "number": 1279, "title": "TINKERPOP-2288 Replace closed connections directly", "bodyText": "https://issues.apache.org/jira/browse/TINKERPOP-2288\nThere were already some comments on the earlier commit which are now unfortunately lost as I force pushed on that branch after rebasing on 3.4-dev again.\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\nThese changes should ensure that:\n\nA connection is still returned quickly if one is available.\nClosed connections are replaced immediately, without needing to wait\nfor the next incoming request.\nIf the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced.\n\nTODO:\n\n Make the retry policy configurable\n Document changes", "createdAt": "2020-04-16T15:32:22Z", "url": "https://github.com/apache/tinkerpop/pull/1279", "merged": true, "mergeCommit": {"oid": "f51cdfa9b6d3fcd3e40ec933df94664cbe205f5f"}, "closed": true, "closedAt": "2020-06-09T10:46:06Z", "author": {"login": "FlorianHockmann"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYOraMgFqTM5NDc2NjMzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABclauvgABqjMzNzg2NDM1Mjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzY2MzMz", "url": "https://github.com/apache/tinkerpop/pull/1279#pullrequestreview-394766333", "createdAt": "2020-04-16T15:46:20Z", "commit": {"oid": "3fde9ee5d9eba167ec803f877f6e18afdffcfd48"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0NjoyMFrOGGruzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0NjoyMFrOGGruzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MTEzNA==", "bodyText": "There we some comments for this line on an earlier commit. I just want to sum them up here so we can include them in the review process of the PR:\n@idzmitry mentioned that adding a new dependency on Polly could be avoided by implementing the retry policy by ourselves.\n@spzSource suggested that it could make sense to add a random jitter to the exponential back-off here to avoid overloading the server when multiple clients try to reconnect at exactly the same intervals.", "url": "https://github.com/apache/tinkerpop/pull/1279#discussion_r409661134", "createdAt": "2020-04-16T15:46:20Z", "author": {"login": "FlorianHockmann"}, "path": "gremlin-dotnet/src/Gremlin.Net/Driver/ConnectionPool.cs", "diffHunk": "@@ -22,117 +22,156 @@\n #endregion\n \n using System;\n+using System.Collections.Concurrent;\n using System.Collections.Generic;\n using System.Threading;\n using System.Threading.Tasks;\n using Gremlin.Net.Driver.Exceptions;\n using Gremlin.Net.Process;\n+using Polly;\n \n namespace Gremlin.Net.Driver\n {\n     internal class ConnectionPool : IDisposable\n     {\n         private const int ConnectionIndexOverflowLimit = int.MaxValue - 1000000;\n         \n-        private readonly ConnectionFactory _connectionFactory;\n-        private readonly CopyOnWriteCollection<Connection> _connections = new CopyOnWriteCollection<Connection>();\n+        private readonly IConnectionFactory _connectionFactory;\n+        private readonly CopyOnWriteCollection<IConnection> _connections = new CopyOnWriteCollection<IConnection>();\n+\n+        private readonly ConcurrentDictionary<IConnection, byte> _deadConnections =\n+            new ConcurrentDictionary<IConnection, byte>();\n         private readonly int _poolSize;\n         private readonly int _maxInProcessPerConnection;\n         private int _connectionIndex;\n         private int _poolState;\n         private const int PoolIdle = 0;\n         private const int PoolPopulationInProgress = 1;\n \n-        public ConnectionPool(ConnectionFactory connectionFactory, ConnectionPoolSettings settings)\n+        public ConnectionPool(IConnectionFactory connectionFactory, ConnectionPoolSettings settings)\n         {\n             _connectionFactory = connectionFactory;\n             _poolSize = settings.PoolSize;\n             _maxInProcessPerConnection = settings.MaxInProcessPerConnection;\n-            PopulatePoolAsync().WaitUnwrap();\n+            ReplaceDeadConnectionsAsync().WaitUnwrap();\n         }\n         \n         public int NrConnections => _connections.Count;\n \n-        public async Task<IConnection> GetAvailableConnectionAsync()\n+        public IConnection GetAvailableConnection()\n         {\n-            await EnsurePoolIsPopulatedAsync().ConfigureAwait(false);\n-            return ProxiedConnection(GetConnectionFromPool());\n+            var connection = Policy.Handle<ServerUnavailableException>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fde9ee5d9eba167ec803f877f6e18afdffcfd48"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzcwMTA1", "url": "https://github.com/apache/tinkerpop/pull/1279#pullrequestreview-394770105", "createdAt": "2020-04-16T15:50:28Z", "commit": {"oid": "3fde9ee5d9eba167ec803f877f6e18afdffcfd48"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1MDoyOFrOGGr6Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1MDoyOFrOGGr6Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2NDA3NA==", "bodyText": "There was also a comment on this line in the earlier commit where @spzSource asked whether this recursive call could lead to a stack overflow. I answered also inline at that commit with an explanation of why I think that a stack overflow cannot happen here.", "url": "https://github.com/apache/tinkerpop/pull/1279#discussion_r409664074", "createdAt": "2020-04-16T15:50:28Z", "author": {"login": "FlorianHockmann"}, "path": "gremlin-dotnet/src/Gremlin.Net/Driver/ConnectionPool.cs", "diffHunk": "@@ -148,26 +187,39 @@ private void ProtectIndexFromOverflowing(int currentIndex)\n                 Interlocked.Exchange(ref _connectionIndex, 0);\n         }\n \n-        private void RemoveConnectionFromPool(Connection connection)\n+        private void ReplaceConnection(IConnection connection)\n         {\n-            if (_connections.TryRemove(connection))\n-                DefinitelyDestroyConnection(connection);\n+            RemoveConnectionFromPool(connection);\n+            TriggerReplacementOfDeadConnections();\n         }\n         \n-        private IConnection ProxiedConnection(Connection connection)\n+        private void RemoveConnectionFromPool(IConnection connection)\n         {\n-            return new ProxyConnection(connection, ReturnConnectionIfOpen);\n+            _deadConnections.TryAdd(connection, 0);\n         }\n \n-        private void ReturnConnectionIfOpen(Connection connection)\n+        private void TriggerReplacementOfDeadConnections()\n         {\n-            if (connection.IsOpen) return;\n-            ConsiderUnavailable();\n+            ReplaceClosedConnectionsAsync().Forget();\n         }\n \n-        private void ConsiderUnavailable()\n+        private async Task ReplaceClosedConnectionsAsync()\n         {\n-            CloseAndRemoveAllConnectionsAsync().WaitUnwrap();\n+            var poolWasPopulated = await EnsurePoolIsHealthyAsync().ConfigureAwait(false);\n+            // Another connection could have been removed already, check if another population is necessary\n+            if (poolWasPopulated)\n+                await ReplaceClosedConnectionsAsync().ConfigureAwait(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fde9ee5d9eba167ec803f877f6e18afdffcfd48"}, "originalPosition": 214}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b77adb2e23df6318732b648ad16e5314e0df578", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/7b77adb2e23df6318732b648ad16e5314e0df578", "committedDate": "2020-04-22T16:28:57Z", "message": "TINKERPOP-2288 Make retry policy configurable"}, "afterCommit": {"oid": "fc1c5cfdcd1159cdde76864a3a89a4d17ff597c0", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/fc1c5cfdcd1159cdde76864a3a89a4d17ff597c0", "committedDate": "2020-05-06T15:07:02Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc1c5cfdcd1159cdde76864a3a89a4d17ff597c0", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/fc1c5cfdcd1159cdde76864a3a89a4d17ff597c0", "committedDate": "2020-05-06T15:07:02Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}, "afterCommit": {"oid": "fea8373329f682e86cf0f07a94d7623c9282aad5", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/fea8373329f682e86cf0f07a94d7623c9282aad5", "committedDate": "2020-05-06T15:22:19Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fea8373329f682e86cf0f07a94d7623c9282aad5", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/fea8373329f682e86cf0f07a94d7623c9282aad5", "committedDate": "2020-05-06T15:22:19Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}, "afterCommit": {"oid": "8c7bc256400e34955d92cf3ce33ed40cde4ecc65", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/8c7bc256400e34955d92cf3ce33ed40cde4ecc65", "committedDate": "2020-05-07T07:49:46Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c7bc256400e34955d92cf3ce33ed40cde4ecc65", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/8c7bc256400e34955d92cf3ce33ed40cde4ecc65", "committedDate": "2020-05-07T07:49:46Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}, "afterCommit": {"oid": "cb0a071ea5bb6087e555008af44042731ad2b963", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/cb0a071ea5bb6087e555008af44042731ad2b963", "committedDate": "2020-05-07T07:52:54Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb0a071ea5bb6087e555008af44042731ad2b963", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/cb0a071ea5bb6087e555008af44042731ad2b963", "committedDate": "2020-05-07T07:52:54Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}, "afterCommit": {"oid": "21dc440293171473687381c964331bdc3a4ccfaf", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/21dc440293171473687381c964331bdc3a4ccfaf", "committedDate": "2020-05-07T07:55:20Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21dc440293171473687381c964331bdc3a4ccfaf", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/21dc440293171473687381c964331bdc3a4ccfaf", "committedDate": "2020-05-07T07:55:20Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}, "afterCommit": {"oid": "741deb71b0898e2af3e90161f601173e26dbdcbe", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/741deb71b0898e2af3e90161f601173e26dbdcbe", "committedDate": "2020-05-07T08:16:08Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzY5MjMw", "url": "https://github.com/apache/tinkerpop/pull/1279#pullrequestreview-415369230", "createdAt": "2020-05-20T14:03:18Z", "commit": {"oid": "741deb71b0898e2af3e90161f601173e26dbdcbe"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowMzoxOFrOGYNXWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowMzoxOFrOGYNXWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzNzk3OA==", "bodyText": "NIT: Maybe we could use GetReconnectionAttempts() as a name?\nInstead of a number, it could return an IEnumerable<int>, that represents milliseconds to wait between each attempt.", "url": "https://github.com/apache/tinkerpop/pull/1279#discussion_r428037978", "createdAt": "2020-05-20T14:03:18Z", "author": {"login": "jorgebay"}, "path": "docs/src/reference/gremlin-variants.asciidoc", "diffHunk": "@@ -1090,10 +1090,13 @@ on the `ConnectionPoolSettings` instance that can be passed to the `GremlinClien\n |Key |Description |Default\n |PoolSize |The size of the connection pool. |4\n |MaxInProcessPerConnection |The maximum number of in-flight requests that can occur on a connection. |32\n+|GetOpenConnectionRetries |The number of retries to get an open connection from the pool to submit a request. |4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "741deb71b0898e2af3e90161f601173e26dbdcbe"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e9eda76d52269ec44314268fc11fa82e93e5de3", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/1e9eda76d52269ec44314268fc11fa82e93e5de3", "committedDate": "2020-05-27T15:09:25Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "741deb71b0898e2af3e90161f601173e26dbdcbe", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/741deb71b0898e2af3e90161f601173e26dbdcbe", "committedDate": "2020-05-07T08:16:08Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}, "afterCommit": {"oid": "1e9eda76d52269ec44314268fc11fa82e93e5de3", "author": {"user": {"login": "FlorianHockmann", "name": "Florian Hockmann"}}, "url": "https://github.com/apache/tinkerpop/commit/1e9eda76d52269ec44314268fc11fa82e93e5de3", "committedDate": "2020-05-27T15:09:25Z", "message": "TINKERPOP-2288 Replace closed connections directly\n\nClosed connections are now replaced automatically in the background.\nIf no open connection is available to answer a request, then the pool\ntries it again after some time. It uses a retry policy with exponential\nbackoff for that, implemented with Polly.\nThis change also ensures that only one task performs a pool resizing\noperation at a time.\n\nThese changes should ensure that:\n- A connection is still returned quickly if one is available.\n- Closed connections are replaced immediately, without needing to wait\n    for the next incoming request.\n- If the server is only unavailable temporarily (or it just closed\nopen connections for some reason), then the user should should not get\nan exception.\nHe only has to wait until the connections are replaced."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4435, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}