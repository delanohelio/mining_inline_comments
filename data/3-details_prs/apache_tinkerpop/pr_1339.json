{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NDM0ODcz", "number": 1339, "title": "TINKERPOP-2420 Per Request Options in .NET", "bodyText": "https://issues.apache.org/jira/browse/TINKERPOP-2420\nAdded per request options in .NET. Opted to not create RequestOptions like functionality in .NET since the way the client is exposed allows you to construct a bare RequestMessage with reasonable niceness - documented that approach a bit better. Also added documentation for the old GLVs that recently got this feature.\nVOTE +1", "createdAt": "2020-10-06T10:30:07Z", "url": "https://github.com/apache/tinkerpop/pull/1339", "merged": true, "mergeCommit": {"oid": "8156a51496f563b9a3c5c7c782490dd7fc105b53"}, "closed": true, "closedAt": "2020-10-13T20:21:09Z", "author": {"login": "spmallette"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQ2ctFgFqTUwNTY0OTcyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRvW8mgFqTUwNjM4MzA0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NjQ5NzI3", "url": "https://github.com/apache/tinkerpop/pull/1339#pullrequestreview-505649727", "createdAt": "2020-10-09T13:01:18Z", "commit": {"oid": "4b85179fbbbedd78260224e394ae493f9fc1bb0f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzowMToxOFrOHfItZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzozNToxN1rOHfJ-Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxMDU5Nw==", "bodyText": "(nitpick) allows to definition doesn't sound right to me (?)", "url": "https://github.com/apache/tinkerpop/pull/1339#discussion_r502410597", "createdAt": "2020-10-09T13:01:18Z", "author": {"login": "FlorianHockmann"}, "path": "gremlin-dotnet/src/Gremlin.Net/Driver/Tokens.cs", "diffHunk": "@@ -74,24 +79,25 @@ public class Tokens\n         public static string ProcessorSession = \"session\";\n \n         /// <summary>\n-        ///     Argument name that allows to defines the number of iterations each ResponseMessage should contain - overrides the\n-        ///     resultIterationBatchSize server setting.\n+        ///     Argument name that allows to definition of the number of iterations each ResponseMessage should", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b85179fbbbedd78260224e394ae493f9fc1bb0f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyMDQyNA==", "bodyText": "(nitpick) I think it's easier to read and understand this when the two asserts are separated:\nvar responseException = Assert.Throws<ResponseException>(() =>\n    g.With(\"y\").With(\"x\", \"test\").With(Tokens.ArgsEvalTimeout, 10).Inject(1)\n        .SideEffect(Lambda.Groovy(\"Thread.sleep(10000)\")).Iterate());\nAssert.Equal(ResponseStatusCode.ServerTimeout, responseException.StatusCode);", "url": "https://github.com/apache/tinkerpop/pull/1339#discussion_r502420424", "createdAt": "2020-10-09T13:17:55Z", "author": {"login": "FlorianHockmann"}, "path": "gremlin-dotnet/test/Gremlin.Net.IntegrationTest/Process/Traversal/DriverRemoteConnection/GraphTraversalTests.cs", "diffHunk": "@@ -201,22 +204,21 @@ public void ShouldUseBindingsInTraversal()\n         [Fact]\n         public void ShouldUseOptionsInTraversal()\n         {\n-            // smoke test to validate serialization of OptionsStrategy. no way to really validate this from an integration\n-            // test perspective because there's no way to access the internals of the strategy via bytecode\n             var connection = _connectionFactory.CreateRemoteConnection();\n             var options = new Dictionary<string,object>\n             {\n                 {\"x\", \"test\"},\n                 {\"y\", true}\n             };\n             var g = AnonymousTraversalSource.Traversal().WithRemote(connection);\n-\n-            var b = new Bindings();\n+            \n             var countWithStrategy = g.WithStrategies(new OptionsStrategy(options)).V().Count().Next();\n             Assert.Equal(6, countWithStrategy);\n+            \n+            Assert.Equal(ResponseStatusCode.ServerTimeout, Assert.Throws<ResponseException>(() => ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b85179fbbbedd78260224e394ae493f9fc1bb0f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyNTYwNw==", "bodyText": "the using With() step -> using the With() step", "url": "https://github.com/apache/tinkerpop/pull/1339#discussion_r502425607", "createdAt": "2020-10-09T13:26:19Z", "author": {"login": "FlorianHockmann"}, "path": "docs/src/reference/gremlin-variants.asciidoc", "diffHunk": "@@ -1121,6 +1121,18 @@ the remote end.\n include::../../../gremlin-dotnet/test/Gremlin.Net.IntegrationTest/Docs/Reference/GremlinVariantsTests.cs[tags=connecting]\n ----\n \n+Some connection options can also be set on individual requests made through the using `With()` step on the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b85179fbbbedd78260224e394ae493f9fc1bb0f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQzMDMyNQ==", "bodyText": "I'm not sure about this but shouldn't we use a terminal step here to actually get the count(s)? Especially new users would probably expect here to have the count stored in the variable and not a traversal object.", "url": "https://github.com/apache/tinkerpop/pull/1339#discussion_r502430325", "createdAt": "2020-10-09T13:33:53Z", "author": {"login": "FlorianHockmann"}, "path": "docs/src/reference/gremlin-variants.asciidoc", "diffHunk": "@@ -1121,6 +1121,18 @@ the remote end.\n include::../../../gremlin-dotnet/test/Gremlin.Net.IntegrationTest/Docs/Reference/GremlinVariantsTests.cs[tags=connecting]\n ----\n \n+Some connection options can also be set on individual requests made through the using `With()` step on the\n+`TraversalSource`. For instance to set request timeout to 500 milliseconds:\n+\n+[source,csharp]\n+----\n+var l = g.With(Tokens.ArgsEvalTimeout, 500).V().Out(\"knows\").Count();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b85179fbbbedd78260224e394ae493f9fc1bb0f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQzMTI0Mw==", "bodyText": "(nitpick) Submit (to stay with the .NET naming conventions)", "url": "https://github.com/apache/tinkerpop/pull/1339#discussion_r502431243", "createdAt": "2020-10-09T13:35:17Z", "author": {"login": "FlorianHockmann"}, "path": "docs/src/reference/gremlin-variants.asciidoc", "diffHunk": "@@ -1246,6 +1258,20 @@ var gremlinServer = new GremlinServer(\"localhost\", 8182);\n var client = new GremlinClient(gremlinServer, sessionId: Guid.NewGuid().ToString()))\n ----\n \n+==== Per Request Settings\n+\n+The `GremlinClient.submit()` functions accept an option to build a raw `RequestMessage`. A good use-case for this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b85179fbbbedd78260224e394ae493f9fc1bb0f"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec5a4206a6e336d3df1f3d48c5f1db0ee5a96ae3", "author": {"user": {"login": "spmallette", "name": "stephen mallette"}}, "url": "https://github.com/apache/tinkerpop/commit/ec5a4206a6e336d3df1f3d48c5f1db0ee5a96ae3", "committedDate": "2020-10-09T16:55:38Z", "message": "TINKERPOP-2420 Added with() support for request options in C#"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28456f50555ff024ba0face688a591f4772e973b", "author": {"user": {"login": "spmallette", "name": "stephen mallette"}}, "url": "https://github.com/apache/tinkerpop/commit/28456f50555ff024ba0face688a591f4772e973b", "committedDate": "2020-10-09T17:50:01Z", "message": "TINKERPOP-2420 Added docs for request options to all GLVs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b85179fbbbedd78260224e394ae493f9fc1bb0f", "author": {"user": {"login": "spmallette", "name": "stephen mallette"}}, "url": "https://github.com/apache/tinkerpop/commit/4b85179fbbbedd78260224e394ae493f9fc1bb0f", "committedDate": "2020-10-06T10:26:39Z", "message": "TINKERPOP-2420 Added docs for request options to all GLVs"}, "afterCommit": {"oid": "28456f50555ff024ba0face688a591f4772e973b", "author": {"user": {"login": "spmallette", "name": "stephen mallette"}}, "url": "https://github.com/apache/tinkerpop/commit/28456f50555ff024ba0face688a591f4772e973b", "committedDate": "2020-10-09T17:50:01Z", "message": "TINKERPOP-2420 Added docs for request options to all GLVs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzgzMDQ2", "url": "https://github.com/apache/tinkerpop/pull/1339#pullrequestreview-506383046", "createdAt": "2020-10-12T08:04:33Z", "commit": {"oid": "28456f50555ff024ba0face688a591f4772e973b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4383, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}