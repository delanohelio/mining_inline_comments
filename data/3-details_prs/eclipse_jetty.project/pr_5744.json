{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMzQxMDIy", "number": 5744, "title": "Issue #5086 Review and rework o.e.j.util.Scanner", "bodyText": "Closes #5086\nThe issue task was review the locking strategy for the Scanner. I've done that, made changes to hopefully remove any necessity for locking, and also removed some methods that were deprecated in jetty-9.4.  As part of the refactoring of the code, there were some behaviour changes in the reporting of file changes, which I don't believe will make any substantive difference ( I can't even remember why I put those specific behaviours in there in the first place) but I'll call them out here anyway:\n\npreviously, we never reported a file as having been REMOVED until it had been missing for 2 scan cycles. I think that's unnecessary: when any scan detects a file has been deleted, a REMOVED event is issued for it.\npreviously, if a file was added and then deleted in the next scan then subsequently popped back into existence it was reported as CHANGED.  Now, if the file pops back into existence, it will reported as ADDED when it stabilizes, and REMOVED when it is deleted.\n\nNote when reviewing: as a reminder of how the Scanner works, it is still the case that it takes at least 2 scan cycles to report a file as being ADDED: the first to detect the addition of the file, and the second to check that the file size or last modified time hasn't changed.  Similarly, it takes at lesat 2 scan cycles to report a file as CHANGED: the first to detect the change, and the second to check the file size or last modified time hasn't changed.", "createdAt": "2020-12-01T14:28:34Z", "url": "https://github.com/eclipse/jetty.project/pull/5744", "merged": true, "mergeCommit": {"oid": "0eccddececf5a5a393ebb4e132a54b70b024043c"}, "closed": true, "closedAt": "2020-12-02T18:25:38Z", "author": {"login": "janbartel"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdh6YyJAH2gAyNTMwMzQxMDIyOjQ4ODMzMzI1OTMzOGE0ODkwNDU0MTY0MmYxZTYyZTI0ZjA5MzFmNTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiSysDgH2gAyNTMwMzQxMDIyOjljODgyZWU3OTY2ZWQyYzg5MGU4MDc5ZGI1YTgxNTk2Y2YwY2IyYzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "488333259338a48904541642f1e62e24f0931f53", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/488333259338a48904541642f1e62e24f0931f53", "committedDate": "2020-12-01T13:58:18Z", "message": "Issue #5086 Review and rework o.e.j.util.Scanner\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4304c7861cf6a4cc5efdfbf286bd226f85b0d318", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/4304c7861cf6a4cc5efdfbf286bd226f85b0d318", "committedDate": "2020-12-01T14:55:45Z", "message": "Issue #5086 Improve ScannerTest\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "115a72da6562646b5bbc8ffb3aafd6830d7a165f", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/115a72da6562646b5bbc8ffb3aafd6830d7a165f", "committedDate": "2020-12-01T16:19:46Z", "message": "Issue #5086 Fix checkstyle in test\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/90e48ba0b5d6fa58aafbcb89d333e436f5455261", "committedDate": "2020-12-01T16:44:33Z", "message": "Issue #5086 Fix javadoc\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMTQ0OTc3", "url": "https://github.com/eclipse/jetty.project/pull/5744#pullrequestreview-542144977", "createdAt": "2020-12-01T17:41:43Z", "commit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzo0MTo0M1rOH84apA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxNDoyMlrOH85rnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwMDkzMg==", "bodyText": "Don't like this. File names are unique by definition, so there is no risk of duplicates. I would not add additional randomness caused by Set. If I really don't care, I'd use Collection -- the Set is supposed to be immutable anyway, right?", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533600932", "createdAt": "2020-12-01T17:41:43Z", "author": {"login": "sbordet"}, "path": "jetty-ant/src/main/java/org/eclipse/jetty/ant/ServerProxyImpl.java", "diffHunk": "@@ -135,7 +136,7 @@ public WebAppScannerListener(AntWebAppContext awc)\n         }\n \n         @Override\n-        public void filesChanged(List<String> changedFileNames)\n+        public void filesChanged(Set<String> changedFileNames)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwMjgwNA==", "bodyText": "Scanner.setRecursive() was deprecated, but there is no Javadoc about why.\nThis is the only usage of ScanningAppProvider._recursive which then should also be deprecated and removed?", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533602804", "createdAt": "2020-12-01T17:44:33Z", "author": {"login": "sbordet"}, "path": "jetty-deploy/src/main/java/org/eclipse/jetty/deploy/providers/ScanningAppProvider.java", "diffHunk": "@@ -140,7 +140,6 @@ protected void doStart() throws Exception\n         _scanner = new Scanner();\n         _scanner.setScanDirs(files);\n         _scanner.setScanInterval(_scanInterval);\n-        _scanner.setRecursive(_recursive);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwODMzMQ==", "bodyText": "Add correspondent hashCode(). Use Objects.hash(...) if possible.", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533608331", "createdAt": "2020-12-01T17:52:53Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/test/java/org/eclipse/jetty/util/ScannerTest.java", "diffHunk": "@@ -120,6 +122,18 @@ public Event(String filename, Notification notification)\n             _filename = filename;\n             _notification = notification;\n         }\n+\n+        @Override\n+        public boolean equals(Object obj)\n+        {\n+            return ((Event)obj)._filename.equals(_filename) && ((Event)obj)._notification == _notification;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwOTMxNw==", "bodyText": "Spaces!", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533609317", "createdAt": "2020-12-01T17:54:27Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/test/java/org/eclipse/jetty/util/ScannerTest.java", "diffHunk": "@@ -296,31 +309,31 @@ public void testAddedChangeRemove() throws Exception\n         // not stable after 1 scan so should not be seen yet.\n         _scanner.scan();\n         event = _queue.poll();\n-        assertTrue(event == null);\n+        assertNull(event);\n \n-        // Keep a2 unstable and remove a3 before it stabalized\n+        // Keep a2 unstable and remove a3 before it stabilized\n         Thread.sleep(1100); // make sure time in seconds changes\n         touch(\"a2\");\n         delete(\"a3\");\n \n-        // only a1 is stable so it should be seen.\n+        // only a1 is stable so it should be seen, a3 is deleted\n         _scanner.scan();\n-        event = _queue.poll();\n-        assertTrue(event != null);\n-        assertEquals(_directory + \"/a1\", event._filename);\n-        assertEquals(Notification.ADDED, event._notification);\n+        List<Event> actualEvents = new ArrayList<>();\n+        _queue.drainTo(actualEvents);\n+        assertEquals(2, actualEvents.size());\n+        Event a1 = new Event(_directory + \"/a1\", Notification.ADDED);\n+        Event a3 = new Event(_directory + \"/a3\", Notification.REMOVED);\n+        assertThat(actualEvents, Matchers.containsInAnyOrder(a1, a3));\n         assertTrue(_queue.isEmpty());\n-\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxNDc0Ng==", "bodyText": "Make it final.", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533614746", "createdAt": "2020-12-01T18:02:52Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Scanner.java", "diffHunk": "@@ -67,27 +66,27 @@\n     private static final Logger LOG = LoggerFactory.getLogger(Scanner.class);\n     private static int __scannerId = 0;\n \n-    private final AutoLock _lock = new AutoLock();\n     private int _scanInterval;\n-    private int _scanCount = 0;\n-    private final List<Listener> _listeners = new ArrayList<>();\n-    private final Map<String, TimeNSize> _prevScan = new HashMap<>();\n-    private final Map<String, TimeNSize> _currentScan = new HashMap<>();\n+    private AtomicInteger _scanCount = new AtomicInteger(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxNTk3MA==", "bodyText": "Make it private because MetaData is package private.\nMaybe make MetaData a private class too?", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533615970", "createdAt": "2020-12-01T18:04:54Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Scanner.java", "diffHunk": "@@ -661,146 +609,116 @@ public boolean exists(String path)\n      */\n     public void scan()\n     {\n-        try (AutoLock l = _lock.lock())\n-        {\n-            reportScanStart(++_scanCount);\n-            scanFiles();\n-            reportDifferences(_currentScan, _prevScan);\n-            _prevScan.clear();\n-            _prevScan.putAll(_currentScan);\n-            reportScanEnd(_scanCount);\n-\n-            for (Listener listener : _listeners)\n-            {\n-                try\n-                {\n-                    if (listener instanceof ScanListener)\n-                        ((ScanListener)listener).scan();\n-                }\n-                catch (Throwable e)\n-                {\n-                    LOG.warn(\"Unable to scan\", e);\n-                }\n-            }\n-        }\n+        int cycle = _scanCount.incrementAndGet();\n+        reportScanStart(cycle);\n+        Map<String, MetaData> currentScan = scanFiles();\n+        reportDifferences(currentScan, _prevScan == null ? Collections.emptyMap() : Collections.unmodifiableMap(_prevScan));\n+        _prevScan = currentScan;\n+        reportScanEnd(cycle);\n     }\n \n     /**\n      * Scan all of the given paths.\n      */\n-    public void scanFiles()\n+    public Map<String, MetaData> scanFiles()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 589}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxNzMxOA==", "bodyText": "Remove extra newline.", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533617318", "createdAt": "2020-12-01T18:07:02Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Scanner.java", "diffHunk": "@@ -271,9 +270,13 @@ public FileVisitResult postVisitDirectory(Path dir, IOException exc) throws IOEx\n         public void fileRemoved(String filename) throws Exception;\n     }\n \n+    /**\n+     * Notification of files that changed in the last scan.\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxNzQ0NQ==", "bodyText": "Spaces.", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533617445", "createdAt": "2020-12-01T18:07:13Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Scanner.java", "diffHunk": "@@ -312,125 +312,111 @@ public int getScanInterval()\n      * @param scanInterval pause between scans in seconds, or 0 for no scan after the initial scan.\n      */\n     public void setScanInterval(int scanInterval)\n-    {\n-        try (AutoLock l = _lock.lock())\n-        {\n-            _scanInterval = scanInterval;\n-            schedule();\n-        }\n+    {        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMDU5Mw==", "bodyText": "Make it private and replace with Jetty's Scheduler.", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533620593", "createdAt": "2020-12-01T18:12:31Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Scanner.java", "diffHunk": "@@ -544,30 +508,22 @@ public void removeListener(Listener listener)\n     @Override\n     public void doStart()\n     {\n-        try (AutoLock l = _lock.lock())\n-        {\n-            if (_running)\n-                return;\n-\n-            _running = true;\n-            if (LOG.isDebugEnabled())\n-                LOG.debug(\"Scanner start: rprtExists={}, depth={}, rprtDirs={}, interval={}, filter={}, scannables={}\",\n-                    _reportExisting, _scanDepth, _reportDirs, _scanInterval, _filter, _scannables);\n+        if (LOG.isDebugEnabled())\n+            LOG.debug(\"Scanner start: rprtExists={}, depth={}, rprtDirs={}, interval={}, filter={}, scannables={}\",\n+                _reportExisting, _scanDepth, _reportDirs, _scanInterval, _filter, _scannables);\n \n-            if (_reportExisting)\n-            {\n-                // if files exist at startup, report them\n-                scan();\n-                scan(); // scan twice so files reported as stable\n-            }\n-            else\n-            {\n-                //just register the list of existing files and only report changes\n-                scanFiles();\n-                _prevScan.putAll(_currentScan);\n-            }\n-            schedule();\n+        if (_reportExisting)\n+        {\n+            // if files exist at startup, report them\n+            scan();\n+            scan(); // scan twice so files reported as stable\n+        }\n+        else\n+        {\n+            //just register the list of existing files and only report changes\n+            _prevScan = scanFiles();\n         }\n+        schedule();\n     }\n \n     public TimerTask newTimerTask()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 495}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMTY2MA==", "bodyText": "Still worth to keep around Deprecated method?", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r533621660", "createdAt": "2020-12-01T18:14:22Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Scanner.java", "diffHunk": "@@ -312,125 +312,111 @@ public int getScanInterval()\n      * @param scanInterval pause between scans in seconds, or 0 for no scan after the initial scan.\n      */\n     public void setScanInterval(int scanInterval)\n-    {\n-        try (AutoLock l = _lock.lock())\n-        {\n-            _scanInterval = scanInterval;\n-            schedule();\n-        }\n+    {        \n+        if (isRunning())\n+            throw new IllegalStateException(\"Scanner started\");\n+        \n+        _scanInterval = scanInterval;\n+        schedule();\n     }\n \n     public void setScanDirs(List<File> dirs)\n     {\n+        if (isRunning())\n+            throw new IllegalStateException(\"Scanner started\");\n+\n         _scannables.clear();\n         if (dirs == null)\n             return;\n-\n-        for (File f:dirs)\n+        for (File f :dirs)\n         {\n-            addScanDir(f);\n-        }\n-    }\n-\n-    @Deprecated\n-    public void addScanDir(File dir)\n-    {\n-        if (dir == null)\n-            return;\n-        try (AutoLock l = _lock.lock())\n-        {\n-            if (dir.isDirectory())\n-                addDirectory(dir.toPath());\n+            if (f.isDirectory())\n+                addDirectory(f.toPath());\n             else\n-                addFile(dir.toPath());\n-        }\n-        catch (Exception e)\n-        {\n-            LOG.warn(\"Unable to add: {}\", dir, e);\n+                addFile(f.toPath());\n         }\n     }\n-    \n+\n     /**\n      * Add a file to be scanned. The file must not be null, and must exist.\n      * \n      * @param p the Path of the file to scan.\n-     * @throws IOException \n      */\n-    public void addFile(Path p) throws IOException\n+    public void addFile(Path p)\n     {\n+        if (isRunning())\n+            throw new IllegalStateException(\"Scanner started\");\n+        \n         if (p == null)\n             throw new IllegalStateException(\"Null path\");\n \n         File f = p.toFile();\n         if (!f.exists() || f.isDirectory())\n-            throw new IllegalStateException(\"Not file or doesn't exist: \" + f.getCanonicalPath());\n+            throw new IllegalStateException(\"Not file or doesn't exist: \" + p);\n \n-        try (AutoLock l = _lock.lock())\n-        {\n-            _scannables.put(p, null);\n-        }\n+        _scannables.putIfAbsent(p, null);\n     }\n \n     /**\n      * Add a directory to be scanned. The directory must not be null and must exist.\n      * \n      * @param p the directory to scan.\n      * @return an IncludeExcludeSet to which the caller can add PathMatcher patterns to match\n-     * @throws IOException\n      */\n-    public IncludeExcludeSet<PathMatcher, Path> addDirectory(Path p) throws IOException\n+    public IncludeExcludeSet<PathMatcher, Path> addDirectory(Path p)\n     {\n+        if (isRunning())\n+            throw new IllegalStateException(\"Scanner started\");\n+        \n         if (p == null)\n             throw new IllegalStateException(\"Null path\");\n \n         File f = p.toFile();\n         if (!f.exists() || !f.isDirectory())\n-            throw new IllegalStateException(\"Not directory or doesn't exist: \" + f.getCanonicalPath());\n+            throw new IllegalStateException(\"Not directory or doesn't exist: \" + p);\n \n-        try (AutoLock l = _lock.lock())\n+        try\n         {\n-            IncludeExcludeSet<PathMatcher, Path> includesExcludes = _scannables.get(p);\n-            if (includesExcludes == null)\n-            {\n-                includesExcludes = new IncludeExcludeSet<>(PathMatcherSet.class);\n-                _scannables.put(p.toRealPath(), includesExcludes);\n-            }\n+            Path real = p.toRealPath();\n+            IncludeExcludeSet<PathMatcher, Path> includesExcludes = new IncludeExcludeSet<>(PathMatcherSet.class);\n+            IncludeExcludeSet<PathMatcher, Path> prev = _scannables.putIfAbsent(real, includesExcludes);\n+            if (prev != null)\n+                includesExcludes = prev;\n             return includesExcludes;\n         }\n-    }\n-\n-    @Deprecated\n-    public List<File> getScanDirs()\n-    {\n-        ArrayList<File> files = new ArrayList<>();\n-        for (Path p : _scannables.keySet())\n-            files.add(p.toFile());\n-        return Collections.unmodifiableList(files);\n+        catch (IOException e)\n+        {\n+            throw new IllegalStateException(e);\n+        }\n     }\n     \n-    public Set<Path> getScannables()\n-    {\n-        return _scannables.keySet();\n-    }\n \n     /**\n-     * @param recursive True if scanning is recursive\n-     * @see #setScanDepth(int)\n+     * Apply a filter to files found in the scan directory.\n+     * Only files matching the filter will be reported as added/changed/removed.\n+     *\n+     * @param filter the filename filter to use\n      */\n     @Deprecated\n-    public void setRecursive(boolean recursive)\n+    public void setFilenameFilter(FilenameFilter filter)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90e48ba0b5d6fa58aafbcb89d333e436f5455261"}, "originalPosition": 346}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31cc29898758197f7a4c7643a4b353cc2ca2cbee", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/31cc29898758197f7a4c7643a4b353cc2ca2cbee", "committedDate": "2020-12-01T21:05:33Z", "message": "Issue #5086 Changes after review\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e39ec6cab4c153d1c7e9fe03a956b0937975fc65", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/e39ec6cab4c153d1c7e9fe03a956b0937975fc65", "committedDate": "2020-12-02T07:02:09Z", "message": "Issue #5086 Fix error on addFile\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c776eeb838bfcc5913bbfaab4ef1043e22fe018f", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/c776eeb838bfcc5913bbfaab4ef1043e22fe018f", "committedDate": "2020-12-02T08:03:46Z", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-5086-review-scanner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fe8cb8c27c2f42802fd7b6623b8b284e65adbc7", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/8fe8cb8c27c2f42802fd7b6623b8b284e65adbc7", "committedDate": "2020-12-02T09:27:08Z", "message": "Issue #5086 Add blocking method for immediate scan.\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97b3f262ab9cbf7401765d8703e5a015decc1688", "author": {"user": {"login": "sbordet", "name": "Simone Bordet"}}, "url": "https://github.com/eclipse/jetty.project/commit/97b3f262ab9cbf7401765d8703e5a015decc1688", "committedDate": "2020-12-02T11:53:23Z", "message": "Fixed scan(Callback) bug, returning early in case of failures.\n\nMore cleanups in code adding more privateness, getting rid of unnecessary exceptions, making fields final, etc.\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODI3MzYw", "url": "https://github.com/eclipse/jetty.project/pull/5744#pullrequestreview-542827360", "createdAt": "2020-12-02T13:21:56Z", "commit": {"oid": "97b3f262ab9cbf7401765d8703e5a015decc1688"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzoyMTo1NlrOH9apPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzoyMTo1NlrOH9apPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE2MTcyNA==", "bodyText": "@sbordet this will return true even if the callback fails, which  is a bit strange.", "url": "https://github.com/eclipse/jetty.project/pull/5744#discussion_r534161724", "createdAt": "2020-12-02T13:21:56Z", "author": {"login": "gregw"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/ssl/KeyStoreScanner.java", "diffHunk": "@@ -135,8 +135,7 @@ public void scan()\n \n             _scanner.scan(callback);\n             _scanner.scan(callback);\n-            complete.await(10, TimeUnit.SECONDS);\n-\n+            return complete.await(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b3f262ab9cbf7401765d8703e5a015decc1688"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe0e076055a02d4659a345cbef18a8d2ead07ad0", "author": {"user": {"login": "sbordet", "name": "Simone Bordet"}}, "url": "https://github.com/eclipse/jetty.project/commit/fe0e076055a02d4659a345cbef18a8d2ead07ad0", "committedDate": "2020-12-02T16:47:56Z", "message": "Using capital case for static final field.\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDM1OTU1", "url": "https://github.com/eclipse/jetty.project/pull/5744#pullrequestreview-543035955", "createdAt": "2020-12-02T16:49:43Z", "commit": {"oid": "97b3f262ab9cbf7401765d8703e5a015decc1688"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c882ee7966ed2c890e8079db5a81596cf0cb2c8", "author": {"user": {"login": "sbordet", "name": "Simone Bordet"}}, "url": "https://github.com/eclipse/jetty.project/commit/9c882ee7966ed2c890e8079db5a81596cf0cb2c8", "committedDate": "2020-12-02T18:24:19Z", "message": "Improved KeyStoreScanner.scan().\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 592, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}