{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0Mjg0MzAy", "number": 5026, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNTo1NDo0OVrOELY_6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDozMDowN1rOEM67xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzc5MzY5OnYy", "diffSide": "RIGHT", "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNTo1NDo0OVrOGs8oSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTozNzoyOFrOGx2TOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4Mzg4MQ==", "bodyText": "This should be GET /context/gateway/ HTTP/1.0\\r\\n\\r\\n as you are requesting content belonging to the url-pattern of /gateway/* which the request to /gateway will not match.", "url": "https://github.com/eclipse/jetty.project/pull/5026#discussion_r449783881", "createdAt": "2020-07-04T15:54:49Z", "author": {"login": "joakime"}, "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "diffHunk": "@@ -813,6 +815,46 @@ public void testWelcomeMultipleBasesBase() throws Exception\n         }\n     }\n \n+    @Test\n+    public void testIncludedWelcomeDifferentBase() throws Exception\n+    {\n+        Path altRoot = workDir.getPath().resolve(\"altroot\");\n+        FS.ensureDirExists(altRoot);\n+        Path altIndex = altRoot.resolve(\"index.html\");\n+\n+        ServletHolder defholder = context.addServlet(DefaultServlet.class, \"/alt/*\");\n+        defholder.setInitParameter(\"resourceBase\", altRoot.toUri().toASCIIString());\n+        defholder.setInitParameter(\"dirAllowed\", \"false\");\n+        defholder.setInitParameter(\"redirectWelcome\", \"false\");\n+        defholder.setInitParameter(\"welcomeServlets\", \"true\");\n+        defholder.setInitParameter(\"pathInfoOnly\", \"true\");\n+\n+        ServletHolder gwholder = new ServletHolder(\"gateway\", new HttpServlet() {\n+            @Override\n+            protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n+                    throws ServletException, IOException {\n+                req.getRequestDispatcher(\"/alt/\").include(req, resp);\n+            }\n+        });\n+        context.addServlet(gwholder, \"/gateway/*\");\n+\n+        String rawResponse;\n+        HttpTester.Response response;\n+\n+        // Test included alt default\n+        rawResponse = connector.getResponse(\"GET /context/gateway HTTP/1.0\\r\\n\\r\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72d3d1d6034cd267e78adb8acc7b02f2312e0089"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4NDc2Mg==", "bodyText": "I checked org.eclipse.jetty.http.pathmap.PathMappings#getMatch() and /p request is successfully matched for servlet mapped to /p/* - it's kept in org.eclipse.jetty.http.pathmap.PathMappings#_prefixMap:\n_prefixMap = {org.eclipse.jetty.util.ArrayTernaryTrie@2636} \"{/p=MappedResource[pathSpec=ServletPathSpec[\"/p/*\",pathDepth=2,group=PREFIX_GLOB],resource=default-servlet@2c16bab9==org.ops4j.pax.web.service.jetty.internal.EmbeddedJettyTest$11,jsp=null,order=-1,inst=true,async=true]}\"\n LO: int  = 1 (0x1)\n EQ: int  = 2 (0x2)\n HI: int  = 3 (0x3)\n ROW_SIZE: int  = 4 (0x4)\n _tree: char[]  = {char[512]@2893} \n _key: java.lang.String[]  = {java.lang.String[128]@2894} \n  2 = \"/p\"\n _value: java.lang.Object[]  = {java.lang.Object[128]@2895} \n  2 = {org.eclipse.jetty.http.pathmap.MappedResource@2643} \"MappedResource[pathSpec=ServletPathSpec[\"/p/*\",pathDepth=2,group=PREFIX_GLOB],resource=default-servlet@2c16bab9==org.ops4j.pax.web.service.jetty.internal.EmbeddedJettyTest$11,jsp=null,order=-1,inst=true,async=true]\"\n   pathSpec: org.eclipse.jetty.http.pathmap.PathSpec  = {org.eclipse.jetty.http.pathmap.ServletPathSpec@2897} \"ServletPathSpec[\"/p/*\",pathDepth=2,group=PREFIX_GLOB]\"\n   resource: java.lang.Object  = {org.eclipse.jetty.servlet.ServletHolder@2656} \"default-servlet@2c16bab9==org.ops4j.pax.web.service.jetty.internal.EmbeddedJettyTest$11,jsp=null,order=-1,inst=true,async=true\"", "url": "https://github.com/eclipse/jetty.project/pull/5026#discussion_r449784762", "createdAt": "2020-07-04T16:06:22Z", "author": {"login": "grgrzybek"}, "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "diffHunk": "@@ -813,6 +815,46 @@ public void testWelcomeMultipleBasesBase() throws Exception\n         }\n     }\n \n+    @Test\n+    public void testIncludedWelcomeDifferentBase() throws Exception\n+    {\n+        Path altRoot = workDir.getPath().resolve(\"altroot\");\n+        FS.ensureDirExists(altRoot);\n+        Path altIndex = altRoot.resolve(\"index.html\");\n+\n+        ServletHolder defholder = context.addServlet(DefaultServlet.class, \"/alt/*\");\n+        defholder.setInitParameter(\"resourceBase\", altRoot.toUri().toASCIIString());\n+        defholder.setInitParameter(\"dirAllowed\", \"false\");\n+        defholder.setInitParameter(\"redirectWelcome\", \"false\");\n+        defholder.setInitParameter(\"welcomeServlets\", \"true\");\n+        defholder.setInitParameter(\"pathInfoOnly\", \"true\");\n+\n+        ServletHolder gwholder = new ServletHolder(\"gateway\", new HttpServlet() {\n+            @Override\n+            protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n+                    throws ServletException, IOException {\n+                req.getRequestDispatcher(\"/alt/\").include(req, resp);\n+            }\n+        });\n+        context.addServlet(gwholder, \"/gateway/*\");\n+\n+        String rawResponse;\n+        HttpTester.Response response;\n+\n+        // Test included alt default\n+        rawResponse = connector.getResponse(\"GET /context/gateway HTTP/1.0\\r\\n\\r\\n\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4Mzg4MQ=="}, "originalCommit": {"oid": "72d3d1d6034cd267e78adb8acc7b02f2312e0089"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2MzYzMQ==", "bodyText": "I think you've got 2 differents tests to do here:\n\n\nurl is /context/gateway  WITHOUT the trailing slash, which will go to line 377 of ResourceService that does a 302 redirect to url that adds the trailing slash\n\n\nurl is /context/gateway/  WITH the trailing slash, which will go to the code at line 402 of ResourceService", "url": "https://github.com/eclipse/jetty.project/pull/5026#discussion_r452263631", "createdAt": "2020-07-09T14:33:51Z", "author": {"login": "janbartel"}, "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "diffHunk": "@@ -813,6 +815,46 @@ public void testWelcomeMultipleBasesBase() throws Exception\n         }\n     }\n \n+    @Test\n+    public void testIncludedWelcomeDifferentBase() throws Exception\n+    {\n+        Path altRoot = workDir.getPath().resolve(\"altroot\");\n+        FS.ensureDirExists(altRoot);\n+        Path altIndex = altRoot.resolve(\"index.html\");\n+\n+        ServletHolder defholder = context.addServlet(DefaultServlet.class, \"/alt/*\");\n+        defholder.setInitParameter(\"resourceBase\", altRoot.toUri().toASCIIString());\n+        defholder.setInitParameter(\"dirAllowed\", \"false\");\n+        defholder.setInitParameter(\"redirectWelcome\", \"false\");\n+        defholder.setInitParameter(\"welcomeServlets\", \"true\");\n+        defholder.setInitParameter(\"pathInfoOnly\", \"true\");\n+\n+        ServletHolder gwholder = new ServletHolder(\"gateway\", new HttpServlet() {\n+            @Override\n+            protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n+                    throws ServletException, IOException {\n+                req.getRequestDispatcher(\"/alt/\").include(req, resp);\n+            }\n+        });\n+        context.addServlet(gwholder, \"/gateway/*\");\n+\n+        String rawResponse;\n+        HttpTester.Response response;\n+\n+        // Test included alt default\n+        rawResponse = connector.getResponse(\"GET /context/gateway HTTP/1.0\\r\\n\\r\\n\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4Mzg4MQ=="}, "originalCommit": {"oid": "72d3d1d6034cd267e78adb8acc7b02f2312e0089"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyMzA2Nw==", "bodyText": "@grgrzybek I'd still like to see one request with GET /context/gateway and one with GET /context/gateway/, because the first one will do a redirect before doing the new include path handling: I just want to ensure that we've exercised both codepaths.", "url": "https://github.com/eclipse/jetty.project/pull/5026#discussion_r454923067", "createdAt": "2020-07-15T09:37:28Z", "author": {"login": "janbartel"}, "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "diffHunk": "@@ -813,6 +815,46 @@ public void testWelcomeMultipleBasesBase() throws Exception\n         }\n     }\n \n+    @Test\n+    public void testIncludedWelcomeDifferentBase() throws Exception\n+    {\n+        Path altRoot = workDir.getPath().resolve(\"altroot\");\n+        FS.ensureDirExists(altRoot);\n+        Path altIndex = altRoot.resolve(\"index.html\");\n+\n+        ServletHolder defholder = context.addServlet(DefaultServlet.class, \"/alt/*\");\n+        defholder.setInitParameter(\"resourceBase\", altRoot.toUri().toASCIIString());\n+        defholder.setInitParameter(\"dirAllowed\", \"false\");\n+        defholder.setInitParameter(\"redirectWelcome\", \"false\");\n+        defholder.setInitParameter(\"welcomeServlets\", \"true\");\n+        defholder.setInitParameter(\"pathInfoOnly\", \"true\");\n+\n+        ServletHolder gwholder = new ServletHolder(\"gateway\", new HttpServlet() {\n+            @Override\n+            protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n+                    throws ServletException, IOException {\n+                req.getRequestDispatcher(\"/alt/\").include(req, resp);\n+            }\n+        });\n+        context.addServlet(gwholder, \"/gateway/*\");\n+\n+        String rawResponse;\n+        HttpTester.Response response;\n+\n+        // Test included alt default\n+        rawResponse = connector.getResponse(\"GET /context/gateway HTTP/1.0\\r\\n\\r\\n\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4Mzg4MQ=="}, "originalCommit": {"oid": "72d3d1d6034cd267e78adb8acc7b02f2312e0089"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzc5NjA0OnYy", "diffSide": "RIGHT", "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNTo1ODo0MlrOGs8pbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNjowODoxNVrOGs8sMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4NDE3NQ==", "bodyText": "This addServlet should be done before Server.start()", "url": "https://github.com/eclipse/jetty.project/pull/5026#discussion_r449784175", "createdAt": "2020-07-04T15:58:42Z", "author": {"login": "joakime"}, "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "diffHunk": "@@ -813,6 +815,48 @@ public void testWelcomeMultipleBasesBase() throws Exception\n         }\n     }\n \n+    @Test\n+    public void testIncludedWelcomeDifferentBase() throws Exception\n+    {\n+        Path altRoot = workDir.getPath().resolve(\"altroot\");\n+        FS.ensureDirExists(altRoot);\n+        Path altIndex = altRoot.resolve(\"index.html\");\n+\n+        ServletHolder defholder = context.addServlet(DefaultServlet.class, \"/alt/*\");\n+        defholder.setInitParameter(\"resourceBase\", altRoot.toUri().toASCIIString());\n+        defholder.setInitParameter(\"dirAllowed\", \"false\");\n+        defholder.setInitParameter(\"redirectWelcome\", \"false\");\n+        defholder.setInitParameter(\"welcomeServlets\", \"true\");\n+        defholder.setInitParameter(\"pathInfoOnly\", \"true\");\n+\n+        ServletHolder gwholder = new ServletHolder(\"gateway\", new HttpServlet()\n+        {\n+            @Override\n+            protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n+                    throws ServletException, IOException\n+            {\n+                req.getRequestDispatcher(\"/alt/\").include(req, resp);\n+            }\n+        });\n+        context.addServlet(gwholder, \"/gateway/*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a14a665af6587eabe82c621690eb77956d9641d8"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4NDg4Mw==", "bodyText": "I don't think it's the case in other tests inside org.eclipse.jetty.servlet.DefaultServletTest...", "url": "https://github.com/eclipse/jetty.project/pull/5026#discussion_r449784883", "createdAt": "2020-07-04T16:08:15Z", "author": {"login": "grgrzybek"}, "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "diffHunk": "@@ -813,6 +815,48 @@ public void testWelcomeMultipleBasesBase() throws Exception\n         }\n     }\n \n+    @Test\n+    public void testIncludedWelcomeDifferentBase() throws Exception\n+    {\n+        Path altRoot = workDir.getPath().resolve(\"altroot\");\n+        FS.ensureDirExists(altRoot);\n+        Path altIndex = altRoot.resolve(\"index.html\");\n+\n+        ServletHolder defholder = context.addServlet(DefaultServlet.class, \"/alt/*\");\n+        defholder.setInitParameter(\"resourceBase\", altRoot.toUri().toASCIIString());\n+        defholder.setInitParameter(\"dirAllowed\", \"false\");\n+        defholder.setInitParameter(\"redirectWelcome\", \"false\");\n+        defholder.setInitParameter(\"welcomeServlets\", \"true\");\n+        defholder.setInitParameter(\"pathInfoOnly\", \"true\");\n+\n+        ServletHolder gwholder = new ServletHolder(\"gateway\", new HttpServlet()\n+        {\n+            @Override\n+            protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n+                    throws ServletException, IOException\n+            {\n+                req.getRequestDispatcher(\"/alt/\").include(req, resp);\n+            }\n+        });\n+        context.addServlet(gwholder, \"/gateway/*\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4NDE3NQ=="}, "originalCommit": {"oid": "a14a665af6587eabe82c621690eb77956d9641d8"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzc5NjE2OnYy", "diffSide": "RIGHT", "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNTo1ODo0OFrOGs8pfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNTo1ODo0OFrOGs8pfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4NDE4OA==", "bodyText": "This addServlet should be done before Server.start()", "url": "https://github.com/eclipse/jetty.project/pull/5026#discussion_r449784188", "createdAt": "2020-07-04T15:58:48Z", "author": {"login": "joakime"}, "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/DefaultServletTest.java", "diffHunk": "@@ -813,6 +815,48 @@ public void testWelcomeMultipleBasesBase() throws Exception\n         }\n     }\n \n+    @Test\n+    public void testIncludedWelcomeDifferentBase() throws Exception\n+    {\n+        Path altRoot = workDir.getPath().resolve(\"altroot\");\n+        FS.ensureDirExists(altRoot);\n+        Path altIndex = altRoot.resolve(\"index.html\");\n+\n+        ServletHolder defholder = context.addServlet(DefaultServlet.class, \"/alt/*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a14a665af6587eabe82c621690eb77956d9641d8"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTgzOTQzOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ResourceService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDozMDowN1rOGvT0NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDozMDowN1rOGvT0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2MDkxNg==", "bodyText": "I think this is a good solution. I would delete the extra \"if\" at line 406 because that can never happen, unless there's a bug in jetty :)", "url": "https://github.com/eclipse/jetty.project/pull/5026#discussion_r452260916", "createdAt": "2020-07-09T14:30:07Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ResourceService.java", "diffHunk": "@@ -401,8 +401,13 @@ protected void sendWelcome(HttpContent content, String pathInContext, boolean en\n \n         if (welcome != null)\n         {\n+            String servletPath = included ? (String)request.getAttribute(RequestDispatcher.INCLUDE_SERVLET_PATH)\n+                    : request.getServletPath();\n+            if (servletPath == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a14a665af6587eabe82c621690eb77956d9641d8"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2407, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}