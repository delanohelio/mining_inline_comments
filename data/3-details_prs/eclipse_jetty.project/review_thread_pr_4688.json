{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxODU5Mjg4", "number": 4688, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjowOToxMFrODrgL-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoyNTozMVrODrq4cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTQyNzEzOnYy", "diffSide": "RIGHT", "path": "tests/test-sessions/test-jdbc-sessions/src/test/java/org/eclipse/jetty/server/session/JdbcTestHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjowOToxMFrOF74hrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjowOToxMFrOF74hrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzNjQzMA==", "bodyText": "maybe use logging :)", "url": "https://github.com/eclipse/jetty.project/pull/4688#discussion_r398336430", "createdAt": "2020-03-26T06:09:10Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-jdbc-sessions/src/test/java/org/eclipse/jetty/server/session/JdbcTestHelper.java", "diffHunk": "@@ -131,6 +130,35 @@ public static void prepareTables() throws SQLException\n \n         sessionTableSchema.prepareTables();\n     }\n+    \n+    public static void dumpRow(ResultSet row) throws SQLException\n+    {\n+        if (row != null)\n+        {\n+            String id = row.getString(ID_COL);\n+            long created = row.getLong(CREATE_COL);\n+            long accessed = row.getLong(ACCESS_COL);\n+            long lastAccessed = row.getLong(LAST_ACCESS_COL);\n+            long maxIdle = row.getLong(MAX_IDLE_COL);\n+            long cookieSet = row.getLong(COOKIE_COL);\n+            String node = row.getString(LAST_NODE_COL);\n+            long expires = row.getLong(EXPIRY_COL);\n+            long lastSaved = row.getLong(LAST_SAVE_COL);\n+            String context = row.getString(CONTEXT_COL);\n+            Blob blob = row.getBlob(MAP_COL);\n+            \n+            String dump = \"id=\" + id +\n+                          \" ctxt=\" + context +\n+                          \" node=\" + node +\n+                          \" exp=\" + expires +\n+                          \" acc=\" + accessed +\n+                          \" lacc=\" + lastAccessed +\n+                          \" ck=\" + cookieSet +\n+                          \" lsv=\" + lastSaved +\n+                          \" blob length=\" + blob.length();\n+            System.err.println(dump);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f41e63b68e6144708c9ea985cdebd352517acf9"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTE3MjE3OnYy", "diffSide": "RIGHT", "path": "tests/test-sessions/test-jdbc-sessions/src/test/java/org/eclipse/jetty/server/session/JdbcTestHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoyNDowMFrOF8JYaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoyNDowMFrOF8JYaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYxMjU4NQ==", "bodyText": "Want to leave this System.err.println here?", "url": "https://github.com/eclipse/jetty.project/pull/4688#discussion_r398612585", "createdAt": "2020-03-26T14:24:00Z", "author": {"login": "joakime"}, "path": "tests/test-sessions/test-jdbc-sessions/src/test/java/org/eclipse/jetty/server/session/JdbcTestHelper.java", "diffHunk": "@@ -151,6 +179,7 @@ public static boolean existsInSessionTable(String id, boolean verbose)\n                 while (result.next())\n                 {\n                     results = true;\n+                    dumpRow(result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f41e63b68e6144708c9ea985cdebd352517acf9"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTE3OTM4OnYy", "diffSide": "RIGHT", "path": "tests/test-sessions/test-jdbc-sessions/src/test/java/org/eclipse/jetty/server/session/JdbcTestHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoyNTozMVrOF8JdEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoyNTozMVrOF8JdEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYxMzc3Nw==", "bodyText": "Any reason why \", virtualHost, \" is not just \", \" + VHOST_COL + \", \" ?", "url": "https://github.com/eclipse/jetty.project/pull/4688#discussion_r398613777", "createdAt": "2020-03-26T14:25:31Z", "author": {"login": "joakime"}, "path": "tests/test-sessions/test-jdbc-sessions/src/test/java/org/eclipse/jetty/server/session/JdbcTestHelper.java", "diffHunk": "@@ -232,41 +261,53 @@ public static boolean checkSessionPersisted(SessionData data)\n \n         return true;\n     }\n-\n-    public static void insertSession(String id, String contextPath, String vhost)\n-        throws Exception\n+    \n+    public static void insertSession(SessionData data) throws Exception\n     {\n+\n         Class.forName(DRIVER_CLASS);\n         try (Connection con = DriverManager.getConnection(DEFAULT_CONNECTION_URL);)\n         {\n             PreparedStatement statement = con.prepareStatement(\"insert into \" + TABLE +\n                 \" (\" + ID_COL + \", \" + CONTEXT_COL + \", virtualHost, \" + LAST_NODE_COL +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f41e63b68e6144708c9ea985cdebd352517acf9"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2686, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}