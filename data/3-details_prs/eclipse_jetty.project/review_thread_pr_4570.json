{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDY2MTA5", "number": 4570, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxMDo1Nzo1NVrODgJ3og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjowMzowMVrODhPQVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDQyNzIyOnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxMDo1Nzo1NVrOFqOqGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo0Nzo0MFrOFrKHyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgyNDY2Ng==", "bodyText": "Should we do this IFF the number of args is +1 the number of args in the format string?", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379824666", "createdAt": "2020-02-15T10:57:55Z", "author": {"login": "gregw"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -426,50 +431,57 @@ public void debug(Throwable thrown)\n     @Override\n     public void debug(String msg, Throwable thrown)\n     {\n-        if (_level <= LEVEL_DEBUG)\n+        if (isDebugEnabled())\n         {\n-            StringBuilder buffer = new StringBuilder(64);\n-            format(buffer, \":DBUG:\", msg, thrown);\n-            (_stderr == null ? System.err : _stderr).println(buffer);\n+            StringBuilder builder = new StringBuilder(64);\n+            format(builder, \":DBUG:\", msg, thrown);\n+            println(builder);\n         }\n     }\n \n-    private void format(StringBuilder buffer, String level, String msg, Object... args)\n+    private void println(StringBuilder builder)\n+    {\n+        _stderr.println(builder);\n+    }\n+\n+    private void format(StringBuilder builder, String level, String msg, Object... inArgs)\n     {\n         long now = System.currentTimeMillis();\n         int ms = (int)(now % 1000);\n         String d = _dateCache.formatNow(now);\n-        tag(buffer, d, ms, level);\n-        format(buffer, msg, args);\n-    }\n+        tag(builder, d, ms, level);\n \n-    private void format(StringBuilder buffer, String level, String msg, Throwable thrown)\n-    {\n-        format(buffer, level, msg);\n-        if (isHideStacks())\n-        {\n-            format(buffer, \": \" + String.valueOf(thrown));\n-        }\n-        else\n+        Object[] msgArgs = EMPTY_ARGS;\n+        int msgArgsLen = 0;\n+        Throwable cause = null;\n+\n+        if (inArgs != null)\n         {\n-            format(buffer, thrown);\n+            msgArgs = inArgs;\n+            msgArgsLen = inArgs.length;\n+            if (msgArgsLen > 0)\n+            {\n+                if (inArgs[msgArgsLen - 1] instanceof Throwable)\n+                {\n+                    cause = (Throwable)inArgs[msgArgsLen - 1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 303}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5ODkyMw==", "bodyText": "mismatched placeholders and arguments are usually an error in most IDEs.\nscanning the placeholders each and every time isn't a great idea.\nI would prefer that we just use the MessageFormatters as-is, and don't reinvent the wheel here.\nalso, if the logger is using a org.slf4j.spi.LocationAwareLogger then the formatting is done with ...\nFormattingTuple ft = MessageFormatter.arrayFormat(msg, argArray);\nlogger.log(level, ft.getMessage());", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380798923", "createdAt": "2020-02-18T16:47:40Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -426,50 +431,57 @@ public void debug(Throwable thrown)\n     @Override\n     public void debug(String msg, Throwable thrown)\n     {\n-        if (_level <= LEVEL_DEBUG)\n+        if (isDebugEnabled())\n         {\n-            StringBuilder buffer = new StringBuilder(64);\n-            format(buffer, \":DBUG:\", msg, thrown);\n-            (_stderr == null ? System.err : _stderr).println(buffer);\n+            StringBuilder builder = new StringBuilder(64);\n+            format(builder, \":DBUG:\", msg, thrown);\n+            println(builder);\n         }\n     }\n \n-    private void format(StringBuilder buffer, String level, String msg, Object... args)\n+    private void println(StringBuilder builder)\n+    {\n+        _stderr.println(builder);\n+    }\n+\n+    private void format(StringBuilder builder, String level, String msg, Object... inArgs)\n     {\n         long now = System.currentTimeMillis();\n         int ms = (int)(now % 1000);\n         String d = _dateCache.formatNow(now);\n-        tag(buffer, d, ms, level);\n-        format(buffer, msg, args);\n-    }\n+        tag(builder, d, ms, level);\n \n-    private void format(StringBuilder buffer, String level, String msg, Throwable thrown)\n-    {\n-        format(buffer, level, msg);\n-        if (isHideStacks())\n-        {\n-            format(buffer, \": \" + String.valueOf(thrown));\n-        }\n-        else\n+        Object[] msgArgs = EMPTY_ARGS;\n+        int msgArgsLen = 0;\n+        Throwable cause = null;\n+\n+        if (inArgs != null)\n         {\n-            format(buffer, thrown);\n+            msgArgs = inArgs;\n+            msgArgsLen = inArgs.length;\n+            if (msgArgsLen > 0)\n+            {\n+                if (inArgs[msgArgsLen - 1] instanceof Throwable)\n+                {\n+                    cause = (Throwable)inArgs[msgArgsLen - 1];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgyNDY2Ng=="}, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 303}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDQyNzQzOnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxMDo1ODoyNlrOFqOqNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo1NDowN1rOFrKX3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgyNDY5Mw==", "bodyText": "merge the two ifs into a single && clause.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379824693", "createdAt": "2020-02-15T10:58:26Z", "author": {"login": "gregw"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -426,50 +431,57 @@ public void debug(Throwable thrown)\n     @Override\n     public void debug(String msg, Throwable thrown)\n     {\n-        if (_level <= LEVEL_DEBUG)\n+        if (isDebugEnabled())\n         {\n-            StringBuilder buffer = new StringBuilder(64);\n-            format(buffer, \":DBUG:\", msg, thrown);\n-            (_stderr == null ? System.err : _stderr).println(buffer);\n+            StringBuilder builder = new StringBuilder(64);\n+            format(builder, \":DBUG:\", msg, thrown);\n+            println(builder);\n         }\n     }\n \n-    private void format(StringBuilder buffer, String level, String msg, Object... args)\n+    private void println(StringBuilder builder)\n+    {\n+        _stderr.println(builder);\n+    }\n+\n+    private void format(StringBuilder builder, String level, String msg, Object... inArgs)\n     {\n         long now = System.currentTimeMillis();\n         int ms = (int)(now % 1000);\n         String d = _dateCache.formatNow(now);\n-        tag(buffer, d, ms, level);\n-        format(buffer, msg, args);\n-    }\n+        tag(builder, d, ms, level);\n \n-    private void format(StringBuilder buffer, String level, String msg, Throwable thrown)\n-    {\n-        format(buffer, level, msg);\n-        if (isHideStacks())\n-        {\n-            format(buffer, \": \" + String.valueOf(thrown));\n-        }\n-        else\n+        Object[] msgArgs = EMPTY_ARGS;\n+        int msgArgsLen = 0;\n+        Throwable cause = null;\n+\n+        if (inArgs != null)\n         {\n-            format(buffer, thrown);\n+            msgArgs = inArgs;\n+            msgArgsLen = inArgs.length;\n+            if (msgArgsLen > 0)\n+            {\n+                if (inArgs[msgArgsLen - 1] instanceof Throwable)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 301}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMzAzOA==", "bodyText": "Done", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380803038", "createdAt": "2020-02-18T16:54:07Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -426,50 +431,57 @@ public void debug(Throwable thrown)\n     @Override\n     public void debug(String msg, Throwable thrown)\n     {\n-        if (_level <= LEVEL_DEBUG)\n+        if (isDebugEnabled())\n         {\n-            StringBuilder buffer = new StringBuilder(64);\n-            format(buffer, \":DBUG:\", msg, thrown);\n-            (_stderr == null ? System.err : _stderr).println(buffer);\n+            StringBuilder builder = new StringBuilder(64);\n+            format(builder, \":DBUG:\", msg, thrown);\n+            println(builder);\n         }\n     }\n \n-    private void format(StringBuilder buffer, String level, String msg, Object... args)\n+    private void println(StringBuilder builder)\n+    {\n+        _stderr.println(builder);\n+    }\n+\n+    private void format(StringBuilder builder, String level, String msg, Object... inArgs)\n     {\n         long now = System.currentTimeMillis();\n         int ms = (int)(now % 1000);\n         String d = _dateCache.formatNow(now);\n-        tag(buffer, d, ms, level);\n-        format(buffer, msg, args);\n-    }\n+        tag(builder, d, ms, level);\n \n-    private void format(StringBuilder buffer, String level, String msg, Throwable thrown)\n-    {\n-        format(buffer, level, msg);\n-        if (isHideStacks())\n-        {\n-            format(buffer, \": \" + String.valueOf(thrown));\n-        }\n-        else\n+        Object[] msgArgs = EMPTY_ARGS;\n+        int msgArgsLen = 0;\n+        Throwable cause = null;\n+\n+        if (inArgs != null)\n         {\n-            format(buffer, thrown);\n+            msgArgs = inArgs;\n+            msgArgsLen = inArgs.length;\n+            if (msgArgsLen > 0)\n+            {\n+                if (inArgs[msgArgsLen - 1] instanceof Throwable)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgyNDY5Mw=="}, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 301}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTE1MzA2OnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzowOTo0NVrOFqUW1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo1NTowMFrOFrKaTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODAzNw==", "bodyText": "Should not this be SOURCE since it's a static final constant?", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918037", "createdAt": "2020-02-16T17:09:45Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();\n     private static final boolean __source =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMzY2Mg==", "bodyText": "done.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380803662", "createdAt": "2020-02-18T16:55:00Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();\n     private static final boolean __source =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODAzNw=="}, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTE1MzYwOnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzoxMDo0N1rOFqUXGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo1NTowOFrOFrKakg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODEwNg==", "bodyText": "This constant is ever used once, so it can just be inlined.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918106", "createdAt": "2020-02-16T17:10:47Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMzczMA==", "bodyText": "Done.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380803730", "createdAt": "2020-02-18T16:55:08Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODEwNg=="}, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTE1NDI5OnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzoxMjowMlrOFqUXbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzowNToyMlrOFrKy4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODE5MQ==", "bodyText": "Why this static has just 1 _ while the same in Log has 2 __?", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918191", "createdAt": "2020-02-16T17:12:02Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();\n     private static final boolean __source =\n-        Boolean.parseBoolean(Log.__props.getProperty(\"org.eclipse.jetty.util.log.SOURCE\",\n-            Log.__props.getProperty(\"org.eclipse.jetty.util.log.javautil.SOURCE\", \"true\")));\n+        Boolean.parseBoolean(Log.getProperty(\"org.eclipse.jetty.util.log.SOURCE\",\n+            Log.getProperty(\"org.eclipse.jetty.util.log.javautil.SOURCE\", \"true\")));\n \n     private static boolean _initialized = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwNjkzNw==", "bodyText": "It was __<constant> (aka static final) and _<field> (aka a field).\nBut a static alone didn't have a old-school jetty syntax/format.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380806937", "createdAt": "2020-02-18T17:00:17Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();\n     private static final boolean __source =\n-        Boolean.parseBoolean(Log.__props.getProperty(\"org.eclipse.jetty.util.log.SOURCE\",\n-            Log.__props.getProperty(\"org.eclipse.jetty.util.log.javautil.SOURCE\", \"true\")));\n+        Boolean.parseBoolean(Log.getProperty(\"org.eclipse.jetty.util.log.SOURCE\",\n+            Log.getProperty(\"org.eclipse.jetty.util.log.javautil.SOURCE\", \"true\")));\n \n     private static boolean _initialized = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODE5MQ=="}, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwOTk1Mg==", "bodyText": "I'll fix it anyway.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380809952", "createdAt": "2020-02-18T17:05:22Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();\n     private static final boolean __source =\n-        Boolean.parseBoolean(Log.__props.getProperty(\"org.eclipse.jetty.util.log.SOURCE\",\n-            Log.__props.getProperty(\"org.eclipse.jetty.util.log.javautil.SOURCE\", \"true\")));\n+        Boolean.parseBoolean(Log.getProperty(\"org.eclipse.jetty.util.log.SOURCE\",\n+            Log.getProperty(\"org.eclipse.jetty.util.log.javautil.SOURCE\", \"true\")));\n \n     private static boolean _initialized = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODE5MQ=="}, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTE1NDQ3OnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/Log.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzoxMjoyMVrOFqUXiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzowNToxM1rOFrKygw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODIxNw==", "bodyText": "See above, one or two _?", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918217", "createdAt": "2020-02-16T17:12:21Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/Log.java", "diffHunk": "@@ -67,8 +67,8 @@\n     /**\n      * Logging Configuration Properties\n      */\n-    protected static final Properties __props = new Properties();\n-    private static final ConcurrentMap<String, Logger> __loggers = new ConcurrentHashMap<>();\n+    protected static final Properties PROPS = new Properties();\n+    private static final ConcurrentMap<String, Logger> LOGGERS = new ConcurrentHashMap<>();\n     private static boolean __initialized;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwOTg1OQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380809859", "createdAt": "2020-02-18T17:05:13Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/Log.java", "diffHunk": "@@ -67,8 +67,8 @@\n     /**\n      * Logging Configuration Properties\n      */\n-    protected static final Properties __props = new Properties();\n-    private static final ConcurrentMap<String, Logger> __loggers = new ConcurrentHashMap<>();\n+    protected static final Properties PROPS = new Properties();\n+    private static final ConcurrentMap<String, Logger> LOGGERS = new ConcurrentHashMap<>();\n     private static boolean __initialized;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODIxNw=="}, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTE1NTM1OnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzoxMzo1OFrOFqUX-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzowMzoyOFrOFrKuYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODMyOQ==", "bodyText": "This is not final, so not a constant, so it should be __threadNamePadding.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918329", "createdAt": "2020-02-16T17:13:58Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -92,30 +93,20 @@\n @ManagedObject(\"Jetty StdErr Logging Implementation\")\n public class StdErrLog extends AbstractLogger\n {\n-    private static final String EOL = System.getProperty(\"line.separator\");\n+    private static final String EOL = System.lineSeparator();\n+    private static final Object[] EMPTY_ARGS = new Object[0];\n     // Do not change output format lightly, people rely on this output format now.\n-    private static int __tagpad = Integer.parseInt(Log.__props.getProperty(\"org.eclipse.jetty.util.log.StdErrLog.TAG_PAD\", \"0\"));\n+    private static int THREADNAME_PADDING = Integer.parseInt(Log.getProperty(\"org.eclipse.jetty.util.log.StdErrLog.TAG_PAD\", \"0\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwODgwMA==", "bodyText": "Done.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380808800", "createdAt": "2020-02-18T17:03:28Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -92,30 +93,20 @@\n @ManagedObject(\"Jetty StdErr Logging Implementation\")\n public class StdErrLog extends AbstractLogger\n {\n-    private static final String EOL = System.getProperty(\"line.separator\");\n+    private static final String EOL = System.lineSeparator();\n+    private static final Object[] EMPTY_ARGS = new Object[0];\n     // Do not change output format lightly, people rely on this output format now.\n-    private static int __tagpad = Integer.parseInt(Log.__props.getProperty(\"org.eclipse.jetty.util.log.StdErrLog.TAG_PAD\", \"0\"));\n+    private static int THREADNAME_PADDING = Integer.parseInt(Log.getProperty(\"org.eclipse.jetty.util.log.StdErrLog.TAG_PAD\", \"0\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODMyOQ=="}, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTE2MTU3OnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzoyNjowNVrOFqUbIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzowNTowNlrOFrKyPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxOTEzOQ==", "bodyText": "This seems to me more complicated than it needs to.\nWas not enough to use a local variable?\nStdErrLog logger = (StdErrLog)log;\nint level = enabled ? LEVEL_DEBUG : logger.getConfiguredLevel();\nlogger.setLevel(level);", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379919139", "createdAt": "2020-02-16T17:26:05Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -350,28 +341,35 @@ public boolean isDebugEnabled()\n     @Override\n     public void setDebugEnabled(boolean enabled)\n     {\n+        Function<StdErrLog, Integer> lvlFunc;\n+\n         if (enabled)\n         {\n-            this._level = LEVEL_DEBUG;\n-\n-            for (Logger log : Log.getLoggers().values())\n-            {\n-                if (log.getName().startsWith(getName()) && log instanceof StdErrLog)\n-                    ((StdErrLog)log).setLevel(LEVEL_DEBUG);\n-            }\n+            lvlFunc = (logger) -> LEVEL_DEBUG;\n         }\n         else\n         {\n-            this._level = this._configuredLevel;\n+            lvlFunc = (logger) -> logger.getConfiguredLevel();\n+        }\n+\n+        this.setLevel(lvlFunc.apply(this));\n \n-            for (Logger log : Log.getLoggers().values())\n+        String name = getName();\n+        for (Logger log : Log.getLoggers().values())\n+        {\n+            if (log.getName().startsWith(name) && log instanceof StdErrLog)\n             {\n-                if (log.getName().startsWith(getName()) && log instanceof StdErrLog)\n-                    ((StdErrLog)log).setLevel(((StdErrLog)log)._configuredLevel);\n+                StdErrLog logger = (StdErrLog)log;\n+                logger.setLevel(lvlFunc.apply(logger));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwOTc5MA==", "bodyText": "Done.", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380809790", "createdAt": "2020-02-18T17:05:06Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -350,28 +341,35 @@ public boolean isDebugEnabled()\n     @Override\n     public void setDebugEnabled(boolean enabled)\n     {\n+        Function<StdErrLog, Integer> lvlFunc;\n+\n         if (enabled)\n         {\n-            this._level = LEVEL_DEBUG;\n-\n-            for (Logger log : Log.getLoggers().values())\n-            {\n-                if (log.getName().startsWith(getName()) && log instanceof StdErrLog)\n-                    ((StdErrLog)log).setLevel(LEVEL_DEBUG);\n-            }\n+            lvlFunc = (logger) -> LEVEL_DEBUG;\n         }\n         else\n         {\n-            this._level = this._configuredLevel;\n+            lvlFunc = (logger) -> logger.getConfiguredLevel();\n+        }\n+\n+        this.setLevel(lvlFunc.apply(this));\n \n-            for (Logger log : Log.getLoggers().values())\n+        String name = getName();\n+        for (Logger log : Log.getLoggers().values())\n+        {\n+            if (log.getName().startsWith(name) && log instanceof StdErrLog)\n             {\n-                if (log.getName().startsWith(getName()) && log instanceof StdErrLog)\n-                    ((StdErrLog)log).setLevel(((StdErrLog)log)._configuredLevel);\n+                StdErrLog logger = (StdErrLog)log;\n+                logger.setLevel(lvlFunc.apply(logger));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxOTEzOQ=="}, "originalCommit": {"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836"}, "originalPosition": 194}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTc5NTQwOnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjowMzowMVrOFr5Sfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjowMzowMVrOFr5Sfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU3MTcxMQ==", "bodyText": "Small nit, this should be builder.append(\": \").append(cause);", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r381571711", "createdAt": "2020-02-19T22:03:01Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -426,112 +421,118 @@ public void debug(Throwable thrown)\n     @Override\n     public void debug(String msg, Throwable thrown)\n     {\n-        if (_level <= LEVEL_DEBUG)\n+        if (isDebugEnabled())\n         {\n-            StringBuilder buffer = new StringBuilder(64);\n-            format(buffer, \":DBUG:\", msg, thrown);\n-            (_stderr == null ? System.err : _stderr).println(buffer);\n+            StringBuilder builder = new StringBuilder(64);\n+            format(builder, \":DBUG:\", msg, thrown);\n+            println(builder);\n         }\n     }\n \n-    private void format(StringBuilder buffer, String level, String msg, Object... args)\n+    private void println(StringBuilder builder)\n+    {\n+        _stderr.println(builder);\n+    }\n+\n+    private void format(StringBuilder builder, String level, String msg, Object... inArgs)\n     {\n         long now = System.currentTimeMillis();\n         int ms = (int)(now % 1000);\n         String d = _dateCache.formatNow(now);\n-        tag(buffer, d, ms, level);\n-        format(buffer, msg, args);\n-    }\n+        tag(builder, d, ms, level);\n \n-    private void format(StringBuilder buffer, String level, String msg, Throwable thrown)\n-    {\n-        format(buffer, level, msg);\n-        if (isHideStacks())\n-        {\n-            format(buffer, \": \" + String.valueOf(thrown));\n-        }\n-        else\n+        Object[] msgArgs = EMPTY_ARGS;\n+        int msgArgsLen = 0;\n+        Throwable cause = null;\n+\n+        if (inArgs != null)\n         {\n-            format(buffer, thrown);\n+            msgArgs = inArgs;\n+            msgArgsLen = inArgs.length;\n+            if (msgArgsLen > 0 && inArgs[msgArgsLen - 1] instanceof Throwable)\n+            {\n+                cause = (Throwable)inArgs[msgArgsLen - 1];\n+                msgArgsLen--;\n+            }\n         }\n-    }\n \n-    private void format(StringBuilder builder, String msg, Object... args)\n-    {\n         if (msg == null)\n         {\n             msg = \"\";\n-            for (int i = 0; i < args.length; i++)\n+            for (int i = 0; i < msgArgsLen; i++)\n             {\n                 msg += \"{} \";\n             }\n         }\n         String braces = \"{}\";\n         int start = 0;\n-        for (Object arg : args)\n+        for (int i = 0; i < msgArgsLen; i++)\n         {\n+            Object arg = msgArgs[i];\n             int bracesIndex = msg.indexOf(braces, start);\n             if (bracesIndex < 0)\n             {\n                 escape(builder, msg.substring(start));\n                 builder.append(\" \");\n-                builder.append(arg);\n+                if (arg != null)\n+                    builder.append(arg);\n                 start = msg.length();\n             }\n             else\n             {\n                 escape(builder, msg.substring(start, bracesIndex));\n-                builder.append(String.valueOf(arg));\n+                if (arg != null)\n+                    builder.append(arg);\n                 start = bracesIndex + braces.length();\n             }\n         }\n         escape(builder, msg.substring(start));\n-    }\n \n-    protected void format(StringBuilder buffer, Throwable thrown)\n-    {\n-        format(buffer, thrown, \"\");\n+        if (cause != null)\n+        {\n+            if (isHideStacks())\n+            {\n+                builder.append(\": \" + cause);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5df8b0532754ce86a81d1e233b0f3fa87c986223"}, "originalPosition": 340}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2615, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}