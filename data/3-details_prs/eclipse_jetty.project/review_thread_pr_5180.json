{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNDIzMTAx", "number": 5180, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMjo1MDowN1rOEbjNYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNTo1OToxOFrOEbozMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MzIzODcyOnYy", "diffSide": "RIGHT", "path": "examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneServletContextJmxStats.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMjo1MDowN1rOHFiwqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDozMDoyMFrOHFnq9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU3NDQ0Mg==", "bodyText": "maybe addBeanToAllConnectors()", "url": "https://github.com/eclipse/jetty.project/pull/5180#discussion_r475574442", "createdAt": "2020-08-24T12:50:07Z", "author": {"login": "gregw"}, "path": "examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneServletContextJmxStats.java", "diffHunk": "@@ -45,7 +45,7 @@ public static Server createServer(int port)\n         context.addServlet(DefaultServlet.class, \"/\");\n \n         // Add Connector Statistics tracking to all connectors\n-        ServerConnectionStatistics.addToAllConnectors(server);\n+        server.addToAllConnectors(new ConnectionStatistics());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "623d1be7c716cc7a8c90f5d0c3e28f276bb93aa5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYzMDg1OA==", "bodyText": "The method currently takes a Connection.Listener so what about addListenerToAllConnectors()?\nOr should I generalise it to addBeanToAllConnectors(Object o).", "url": "https://github.com/eclipse/jetty.project/pull/5180#discussion_r475630858", "createdAt": "2020-08-24T13:58:01Z", "author": {"login": "lachlan-roberts"}, "path": "examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneServletContextJmxStats.java", "diffHunk": "@@ -45,7 +45,7 @@ public static Server createServer(int port)\n         context.addServlet(DefaultServlet.class, \"/\");\n \n         // Add Connector Statistics tracking to all connectors\n-        ServerConnectionStatistics.addToAllConnectors(server);\n+        server.addToAllConnectors(new ConnectionStatistics());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU3NDQ0Mg=="}, "originalCommit": {"oid": "623d1be7c716cc7a8c90f5d0c3e28f276bb93aa5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY1NDkwMw==", "bodyText": "I think the impl just does an addBean, so addBeanToAllConnectors(Object) is best.   If I missed something and it is about Listeners, then `addListenerToAllConnectors(Listener)", "url": "https://github.com/eclipse/jetty.project/pull/5180#discussion_r475654903", "createdAt": "2020-08-24T14:30:20Z", "author": {"login": "gregw"}, "path": "examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneServletContextJmxStats.java", "diffHunk": "@@ -45,7 +45,7 @@ public static Server createServer(int port)\n         context.addServlet(DefaultServlet.class, \"/\");\n \n         // Add Connector Statistics tracking to all connectors\n-        ServerConnectionStatistics.addToAllConnectors(server);\n+        server.addToAllConnectors(new ConnectionStatistics());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU3NDQ0Mg=="}, "originalCommit": {"oid": "623d1be7c716cc7a8c90f5d0c3e28f276bb93aa5"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Mzg2NjU4OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Server.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDo1NjozNlrOHFo5Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNTo1OTo0MlrOHFruBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY3NDk2Mg==", "bodyText": "@gregw changing this to addBeanToAllConnectors will make this javadoc irrelevant.\nMaybe it is worth keeping it as a Listener method to keep this documentation around, it doesn't seem obvious that adding a Listener as a bean on a connector would add it for all new connections. Only other place I can see this mentioned is the javadoc for ConnectionStatistics which doesn't seem the right place.", "url": "https://github.com/eclipse/jetty.project/pull/5180#discussion_r475674962", "createdAt": "2020-08-24T14:56:36Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Server.java", "diffHunk": "@@ -265,6 +266,19 @@ public void setConnectors(Connector[] connectors)\n             _connectors.addAll(Arrays.asList(connectors));\n     }\n \n+    /**\n+     * Add a {@link Connection.Listener} as a bean to all connectors on the server, this\n+     * will register the listener with all connections accepted by the connectors.\n+     * @param listener the listener to be added.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "623d1be7c716cc7a8c90f5d0c3e28f276bb93aa5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcyMTIyMA==", "bodyText": "See my suggestion for the javadoc below.", "url": "https://github.com/eclipse/jetty.project/pull/5180#discussion_r475721220", "createdAt": "2020-08-24T15:59:42Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Server.java", "diffHunk": "@@ -265,6 +266,19 @@ public void setConnectors(Connector[] connectors)\n             _connectors.addAll(Arrays.asList(connectors));\n     }\n \n+    /**\n+     * Add a {@link Connection.Listener} as a bean to all connectors on the server, this\n+     * will register the listener with all connections accepted by the connectors.\n+     * @param listener the listener to be added.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY3NDk2Mg=="}, "originalCommit": {"oid": "623d1be7c716cc7a8c90f5d0c3e28f276bb93aa5"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDE1NDc1OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Server.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNTo1OToxOVrOHFrs-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNTo1OToxOVrOHFrs-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcyMDk1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Add a {@link Connection.Listener} as a bean to all connectors on the server, this\n          \n          \n            \n                 * will register the listener with all connections accepted by the connectors.\n          \n          \n            \n                 * @param listener the listener to be added.\n          \n          \n            \n                 */\n          \n          \n            \n                public void addToAllConnectors(Connection.Listener listener)\n          \n          \n            \n                {\n          \n          \n            \n                    for (Connector connector : getConnectors())\n          \n          \n            \n                    {\n          \n          \n            \n                        connector.addBean(listener);\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n          \n            \n                /**\n          \n          \n            \n                 * Add a bean to all connectors on the server.\n          \n          \n            \n                 * If the bean is an instance of {@link Connection.Listener} it will also be \n          \n          \n            \n                 * registered as a listener on all connections accepted by the connectors.\n          \n          \n            \n                 * @param bean the bean to be added.\n          \n          \n            \n                 */\n          \n          \n            \n                public void addBeanToAllConnectors(Object bean)\n          \n          \n            \n                {\n          \n          \n            \n                    for (Connector connector : getConnectors())\n          \n          \n            \n                    {\n          \n          \n            \n                        connector.addBean(bean);\n          \n          \n            \n                    }\n          \n          \n            \n                }", "url": "https://github.com/eclipse/jetty.project/pull/5180#discussion_r475720953", "createdAt": "2020-08-24T15:59:19Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Server.java", "diffHunk": "@@ -265,6 +266,19 @@ public void setConnectors(Connector[] connectors)\n             _connectors.addAll(Arrays.asList(connectors));\n     }\n \n+    /**\n+     * Add a {@link Connection.Listener} as a bean to all connectors on the server, this\n+     * will register the listener with all connections accepted by the connectors.\n+     * @param listener the listener to be added.\n+     */\n+    public void addToAllConnectors(Connection.Listener listener)\n+    {\n+        for (Connector connector : getConnectors())\n+        {\n+            connector.addBean(listener);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "623d1be7c716cc7a8c90f5d0c3e28f276bb93aa5"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2327, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}