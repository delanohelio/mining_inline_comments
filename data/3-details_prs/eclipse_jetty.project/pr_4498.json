{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0Nzk1ODEw", "number": 4498, "title": "Issue #4383 - synchronize multiparts for cleanup from different thread", "bodyText": "Signed-off-by: Lachlan Roberts lachlan@webtide.com\nIssue #4383\nChanges from #4388 for jetty-10.0.x after we decided to merge only the minimal NPE fix to jetty-9.4.x and bring the rest of the changes to 10.\nThis fixes issues caused when the parsing is done in a different thread to the part cleanup.", "createdAt": "2020-01-20T11:54:00Z", "url": "https://github.com/eclipse/jetty.project/pull/4498", "merged": true, "mergeCommit": {"oid": "681d0bee3c7290b019256c7da6cb930055e92e0c"}, "closed": true, "closedAt": "2020-01-24T00:43:00Z", "author": {"login": "lachlan-roberts"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8K9StgH2gAyMzY0Nzk1ODEwOmM1ZDA3NGU1ZjJmZTU3NzFjNDMzYWE0YjAxMTM0ODFlM2NlMjNhZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9TfbZABqjI5NzU3MTU0Mzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5d074e5f2fe5771c433aa4b0113481e3ce23add", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/c5d074e5f2fe5771c433aa4b0113481e3ce23add", "committedDate": "2020-01-20T11:36:23Z", "message": "Issue #4383 - atomic state to MultiPart for multi-thread synchronization\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MzQ4Njcz", "url": "https://github.com/eclipse/jetty.project/pull/4498#pullrequestreview-345348673", "createdAt": "2020-01-20T14:34:44Z", "commit": {"oid": "c5d074e5f2fe5771c433aa4b0113481e3ce23add"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDozNDo0NFrOFfgP_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoxMDo0MlrOFfjNMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU3ODU1Nw==", "bodyText": "But if the input stream has no content then we didn't actually parse it, so the state is UNPARSED isn't it?", "url": "https://github.com/eclipse/jetty.project/pull/4498#discussion_r368578557", "createdAt": "2020-01-20T14:34:44Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -333,39 +340,33 @@ public String getContentDispositionFilename()\n     public MultiPartFormInputStream(InputStream in, String contentType, MultipartConfigElement config, File contextTmpDir)\n     {\n         _contentType = contentType;\n-        _config = config;\n-        _contextTmpDir = contextTmpDir;\n-        if (_contextTmpDir == null)\n-            _contextTmpDir = new File(System.getProperty(\"java.io.tmpdir\"));\n-\n-        if (_config == null)\n-            _config = new MultipartConfigElement(_contextTmpDir.getAbsolutePath());\n-\n-        MultiMap parts = new MultiMap();\n+        _contextTmpDir =  (contextTmpDir != null) ? contextTmpDir : new File(System.getProperty(\"java.io.tmpdir\"));\n+        _config = (config != null) ? config : new MultipartConfigElement(_contextTmpDir.getAbsolutePath());\n \n         if (in instanceof ServletInputStream)\n         {\n             if (((ServletInputStream)in).isFinished())\n             {\n-                parts = EMPTY_MAP;\n-                _parsed = true;\n+                _in = null;\n+                state = State.PARSED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d074e5f2fe5771c433aa4b0113481e3ce23add"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYyMjc1OQ==", "bodyText": "Closing and closed aren't terms that really apply here, its whether the content has been deleted or not. Can I suggest the following states, all of which except for PARSING are terminal states:\nUNPARSED - before any methods are called\nPARSING - first call to parse() but before all content successfully read\nPARSED - all content successfully read\nERRORED - problem reading content\nDELETED - first call to deleteParts()\nThe only situation we have to guard against is deleteParts() being called while parse() is still happening. It is not possible for 2 threads to be in parse() nor 2 threads to be in deleteParts(), so this makes the state transitions a little simpler. I'm not even sure that PARSING is necessary, maybe the parse() method could move straight to PARSED?\nI think you should put in javadoc a state transition diagram so it is very clear what is happening.", "url": "https://github.com/eclipse/jetty.project/pull/4498#discussion_r368622759", "createdAt": "2020-01-20T16:02:11Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -58,19 +57,27 @@\n  */\n public class MultiPartFormInputStream\n {\n+    private enum State\n+    {\n+        UNPARSED,\n+        PARSING,\n+        PARSED,\n+        CLOSING,\n+        CLOSED\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d074e5f2fe5771c433aa4b0113481e3ce23add"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYyNjQxOA==", "bodyText": "The spec is clear in the circumstances where IllegalStateException is allowed, and this case isn't one of them - you'll have to consider using IOException instead.\nAlso, in the case where there isn't a multipart/form-data content type, then if the same thread called getParts() twice, on the first call the state would remain as PARSING and return no parts, but the second call would result in an IllegalStateException - the result of calling the same method twice should be idempotent.", "url": "https://github.com/eclipse/jetty.project/pull/4498#discussion_r368626418", "createdAt": "2020-01-20T16:09:34Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -468,13 +476,24 @@ protected void throwIfError() throws IOException\n      */\n     protected void parse()\n     {\n-        // have we already parsed the input?\n-        if (_parsed)\n-            return;\n-        _parsed = true;\n+        synchronized (this)\n+        {\n+            switch (state)\n+            {\n+                case UNPARSED:\n+                    state = State.PARSING;\n+                    break;\n+\n+                case PARSED:\n+                    return;\n+\n+                default:\n+                    _err = new IllegalStateException(state.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d074e5f2fe5771c433aa4b0113481e3ce23add"}, "originalPosition": 191}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYyNjYyNw==", "bodyText": "Consider if we really need the PARSING state?", "url": "https://github.com/eclipse/jetty.project/pull/4498#discussion_r368626627", "createdAt": "2020-01-20T16:10:01Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -507,16 +526,23 @@ else if (\"\".equals(_config.getLocation()))\n                 contentTypeBoundary = QuotedStringTokenizer.unquote(value(_contentType.substring(bstart, bend)).trim());\n             }\n \n-            parser = new MultiPartParser(handler, contentTypeBoundary);\n+            parser = new MultiPartParser(new Handler(), contentTypeBoundary);\n             byte[] data = new byte[_bufferSize];\n             int len;\n             long total = 0;\n \n             while (true)\n             {\n+                synchronized (this)\n+                {\n+                    if (state != State.PARSING)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d074e5f2fe5771c433aa4b0113481e3ce23add"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYyNjk5Mg==", "bodyText": "Save the boolean and do the cleanup in the appropriate case.", "url": "https://github.com/eclipse/jetty.project/pull/4498#discussion_r368626992", "createdAt": "2020-01-20T16:10:42Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -570,6 +596,29 @@ else if (len == -1)\n             if (parser != null)\n                 parser.parse(BufferUtil.EMPTY_BUFFER, true);\n         }\n+        finally\n+        {\n+            boolean cleanup = false;\n+            synchronized (this)\n+            {\n+                switch (state)\n+                {\n+                    case PARSING:\n+                        state = State.PARSED;\n+                        break;\n+\n+                    case CLOSING:\n+                        cleanup = true;\n+                        break;\n+\n+                    default:\n+                        _err = new IllegalStateException(state.name());\n+                }\n+            }\n+\n+            if (cleanup)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d074e5f2fe5771c433aa4b0113481e3ce23add"}, "originalPosition": 251}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b217a3541563f2faa631e0705a7b4aa2bfe79080", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/b217a3541563f2faa631e0705a7b4aa2bfe79080", "committedDate": "2020-01-21T05:14:01Z", "message": "Issue #4383 - add State diagram and other changes for review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ab7751ef2af8ea49e34c98461da1a8d081ba5f6", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/0ab7751ef2af8ea49e34c98461da1a8d081ba5f6", "committedDate": "2020-01-21T07:22:22Z", "message": "Issue #4383 - fix javadoc build issue\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NzQ2NjI4", "url": "https://github.com/eclipse/jetty.project/pull/4498#pullrequestreview-345746628", "createdAt": "2020-01-21T09:48:22Z", "commit": {"oid": "0ab7751ef2af8ea49e34c98461da1a8d081ba5f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwOTo0ODoyMlrOFfz4mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwOTo0ODoyMlrOFfz4mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwMDI0OQ==", "bodyText": "Are you sure all these need to be volatiles? Also the state variable - aren't you always reading/writing that in a sync block?", "url": "https://github.com/eclipse/jetty.project/pull/4498#discussion_r368900249", "createdAt": "2020-01-21T09:48:22Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -53,24 +52,49 @@\n  * MultiPartInputStream\n  * <p>\n  * Handle a MultiPart Mime input stream, breaking it up on the boundary into files and strings.\n- *\n+ * </p>\n+ * <p>\n+ * Deleting the parts can be done from a different thread if the parts are parsed asynchronously.\n+ * Because of this we use the state to fail the parsing and coordinate which thread will delete any remaining parts.\n+ * The deletion of parts is done by the cleanup thread in all cases except the transition from ERROR-&gt;DELETED which\n+ * is done by the parsing thread.\n+ * </p>\n+ * <pre>{@code\n+ *                              deleteParts()\n+ *     +--------------------------------------------------------------+\n+ *     |                                                              |\n+ *     |                                          deleteParts()       v\n+ *  UNPARSED -------> PARSING --------> PARSED  ------------------>DELETED\n+ *                      |                                             ^\n+ *                      |                                             |\n+ *                      +----------------> ERROR ---------------------+\n+ *                        deleteParts()             parsing thread\n+ * }</pre>\n  * @see <a href=\"https://tools.ietf.org/html/rfc7578\">https://tools.ietf.org/html/rfc7578</a>\n  */\n public class MultiPartFormInputStream\n {\n+    private enum State\n+    {\n+        UNPARSED,\n+        PARSING,\n+        PARSED,\n+        DELETED,\n+        ERROR\n+    }\n+\n     private static final Logger LOG = Log.getLogger(MultiPartFormInputStream.class);\n-    private static final MultiMap<Part> EMPTY_MAP = new MultiMap<>(Collections.emptyMap());\n-    private final MultiMap<Part> _parts;\n-    private InputStream _in;\n-    private MultipartConfigElement _config;\n-    private String _contentType;\n-    private Throwable _err;\n-    private File _tmpDir;\n-    private File _contextTmpDir;\n-    private boolean _deleteOnExit;\n-    private boolean _writeFilesWithFilenames;\n-    private boolean _parsed;\n-    private int _bufferSize = 16 * 1024;\n+    private final MultiMap<Part> _parts = new MultiMap<>();\n+    private final InputStream _in;\n+    private final MultipartConfigElement _config;\n+    private final File _contextTmpDir;\n+    private final String _contentType;\n+    private volatile Throwable _err;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ab7751ef2af8ea49e34c98461da1a8d081ba5f6"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9f2ccaefac721dfe50b6bfbde83baea78b872c9", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/f9f2ccaefac721dfe50b6bfbde83baea78b872c9", "committedDate": "2020-01-22T03:26:36Z", "message": "Issue #4383 - check for non multipart content type in constructor\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MDk0OTgy", "url": "https://github.com/eclipse/jetty.project/pull/4498#pullrequestreview-347094982", "createdAt": "2020-01-23T07:17:59Z", "commit": {"oid": "c4a3855f1d909ac246016c4fb423d052f49f5998"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNzoxNzo1OVrOFg0mQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNzoxNzo1OVrOFg0mQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk2MDUxMw==", "bodyText": "You need to change ERROR to DELETING everywhere :)", "url": "https://github.com/eclipse/jetty.project/pull/4498#discussion_r369960513", "createdAt": "2020-01-23T07:17:59Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -53,24 +52,55 @@\n  * MultiPartInputStream\n  * <p>\n  * Handle a MultiPart Mime input stream, breaking it up on the boundary into files and strings.\n+ * </p>\n+ * <p>\n+ * Deleting the parts can be done from a different thread if the parts are parsed asynchronously.\n+ * Because of this we use the state to fail the parsing and coordinate which thread will delete any remaining parts.\n+ * The deletion of parts is done by the cleanup thread in all cases except the transition from ERROR-&gt;DELETED which\n+ * is done by the parsing thread.\n+ * </p>\n+ * <pre>{@code\n+ * UNPARSED - Parsing has not started, there are no parts which need to be cleaned up.\n+ * PARSING  - The parsing thread is reading from the InputStream and generating parts.\n+ * PARSED   - Parsing has complete and no more parts will be generated.\n+ * DELETING - deleteParts() has been called while we were in PARSING state, parsing thread will do the delete.\n+ * DELETED  - The parts have been deleted, this is the terminal state.\n  *\n+ *                              deleteParts()\n+ *     +--------------------------------------------------------------+\n+ *     |                                                              |\n+ *     |                                          deleteParts()       v\n+ *  UNPARSED -------> PARSING --------> PARSED  ------------------>DELETED\n+ *                      |                                             ^\n+ *                      |                                             |\n+ *                      +----------------> ERROR ---------------------+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4a3855f1d909ac246016c4fb423d052f49f5998"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MDk1NzA5", "url": "https://github.com/eclipse/jetty.project/pull/4498#pullrequestreview-347095709", "createdAt": "2020-01-23T07:20:11Z", "commit": {"oid": "c4a3855f1d909ac246016c4fb423d052f49f5998"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4a3855f1d909ac246016c4fb423d052f49f5998", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/c4a3855f1d909ac246016c4fb423d052f49f5998", "committedDate": "2020-01-23T06:34:53Z", "message": "Issue 4383 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}, "afterCommit": {"oid": "9b9cc15b055e3a6f2987f274bfd34dd4c030fc0f", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/9b9cc15b055e3a6f2987f274bfd34dd4c030fc0f", "committedDate": "2020-01-23T22:49:00Z", "message": "Issue 4383 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f76687ad68fd0b467728dea60ef60b41c2f1418a", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/f76687ad68fd0b467728dea60ef60b41c2f1418a", "committedDate": "2020-01-24T00:06:37Z", "message": "Issue 4383 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b9cc15b055e3a6f2987f274bfd34dd4c030fc0f", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/9b9cc15b055e3a6f2987f274bfd34dd4c030fc0f", "committedDate": "2020-01-23T22:49:00Z", "message": "Issue 4383 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}, "afterCommit": {"oid": "f76687ad68fd0b467728dea60ef60b41c2f1418a", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/f76687ad68fd0b467728dea60ef60b41c2f1418a", "committedDate": "2020-01-24T00:06:37Z", "message": "Issue 4383 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 551, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}