{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMTE0ODY4", "number": 5251, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMTowNjoyMlrOElmv9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToxMDo1NlrOElm15A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODY3NjM5OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMTowNjoyMlrOHVKuNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMTowNjoyMlrOHVKuNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1NzgxMw==", "bodyText": "Rather than \"Priority\" I think \"Source\" is a better name for this.  Will make more sense in logging to see something like \"source=XFORWARDED_FOR\".  It also matches a lot of our webapp config stuff where we record the source, which is then used to determine the priority.", "url": "https://github.com/eclipse/jetty.project/pull/5251#discussion_r491957813", "createdAt": "2020-09-21T11:06:22Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -516,61 +644,139 @@ private boolean updateForwardedHandle(MethodHandles.Lookup lookup, String header\n         return !_handles.put(headerName, lookup.findVirtual(Forwarded.class, forwardedMethodName, type));\n     }\n \n-    private static class ForcedHostPort extends HostPort\n+    private static class MutableHostPort\n     {\n-        ForcedHostPort(String authority)\n+        public static final int UNSET = -1;\n+        public static final int IMPLIED = 0;\n+\n+        String _host;\n+        Priority _hostPriority = Priority.UNSET;\n+        int _port = UNSET;\n+        Priority _portPriority = Priority.UNSET;\n+\n+        public void setHost(String host, Priority priority)\n         {\n-            super(authority);\n+            if (priority.ordinal() > _hostPriority.ordinal())\n+            {\n+                _host = host;\n+                _hostPriority = priority;\n+            }\n         }\n-    }\n \n-    private static class PossiblyPartialHostPort extends HostPort\n-    {\n-        PossiblyPartialHostPort(String authority)\n+        public void setPort(int port, Priority priority)\n         {\n-            super(authority);\n+            if (priority.ordinal() > _portPriority.ordinal())\n+            {\n+                _port = port;\n+                _portPriority = priority;\n+            }\n         }\n \n-        protected PossiblyPartialHostPort(String host, int port)\n+        public void setHostPort(HostPort hostPort, Priority priority)\n         {\n-            super(host, port);\n+            if (priority.ordinal() > _hostPriority.ordinal())\n+            {\n+                _host = hostPort.getHost();\n+                _hostPriority = priority;\n+            }\n+\n+            int port = hostPort.getPort();\n+            // Is port supplied?\n+            if (port > 0 && priority.ordinal() > _portPriority.ordinal())\n+            {\n+                _port = hostPort.getPort();\n+                _portPriority = priority;\n+            }\n+            // Since we are Host:Port pair, the port could be unspecified\n+            // Meaning it's implied.\n+            // Make sure that we switch the tracked port from unset to implied\n+            else if (_port == UNSET)\n+            {\n+                // set port to implied (with no priority)\n+                _port = IMPLIED;\n+            }\n         }\n-    }\n \n-    private static class PortSetHostPort extends PossiblyPartialHostPort\n-    {\n-        PortSetHostPort(String host, int port)\n+        @Override\n+        public String toString()\n         {\n-            super(host, port);\n+            final StringBuilder sb = new StringBuilder(\"MutableHostPort{\");\n+            sb.append(\"host='\").append(_host).append(\"'/\").append(_hostPriority);\n+            sb.append(\", port=\").append(_port);\n+            sb.append(\"/\").append(_portPriority);\n+            sb.append('}');\n+            return sb.toString();\n         }\n     }\n \n-    private static class Rfc7239HostPort extends HostPort\n+    /**\n+     * Ordered Priority Enum.\n+     * <p>\n+     * Lowest priority first.\n+     * </p>\n+     */\n+    public enum Priority", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385b11dc340c2628c5e38d86bf801937cbd71533"}, "originalPosition": 335}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODY5MTU2OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToxMDo1NlrOHVK3kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToxMDo1NlrOHVK3kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2MDIwOQ==", "bodyText": "maybe:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    getAuthority().setHost(hostField.getHost(), Priority.FORWARDED);\n          \n          \n            \n                                    getAuthority().setPort(hostField.getPort(), Priority.FORWARDED);\n          \n          \n            \n                                    getAuthority().setHostPort(hostField.getHost(), hostField.getPort(), Priority.FORWARDED);", "url": "https://github.com/eclipse/jetty.project/pull/5251#discussion_r491960209", "createdAt": "2020-09-21T11:10:56Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -688,34 +861,71 @@ protected void parsedParam(StringBuffer buffer, int valueLength, int paramName,\n                 switch (name)\n                 {\n                     case \"by\":\n+                    {\n                         if (!getProxyAsAuthority())\n                             break;\n                         if (value.startsWith(\"_\") || \"unknown\".equals(value))\n                             break;\n-                        if (_host == null || !(_host instanceof Rfc7239HostPort))\n-                            _host = new Rfc7239HostPort(value);\n+                        HostPort hostField = new HostPort(value);\n+                        getAuthority().setHost(hostField.getHost(), Priority.FORWARDED);\n+                        getAuthority().setPort(hostField.getPort(), Priority.FORWARDED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385b11dc340c2628c5e38d86bf801937cbd71533"}, "originalPosition": 541}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2380, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}