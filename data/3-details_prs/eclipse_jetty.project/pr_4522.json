{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3ODY1MzQz", "number": 4522, "title": "Issue #4226 - fix JPMS issues with javax websockets", "bodyText": "Issue #4226", "createdAt": "2020-01-28T07:27:39Z", "url": "https://github.com/eclipse/jetty.project/pull/4522", "merged": true, "mergeCommit": {"oid": "1b10e2330e0108dc7c37c1b06de0f0f93bafd52c"}, "closed": true, "closedAt": "2020-01-30T01:09:04Z", "author": {"login": "lachlan-roberts"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-sBRpgH2gAyMzY3ODY1MzQzOjY2OTg1OTIxMzkxNWEwZDYxODljZTcyZGY5NDJmOTVhM2IyMDQyMjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_PX6PgH2gAyMzY3ODY1MzQzOjAwNmZkM2Y5MTNkMjQwM2QzMmQyZjczMzEzZjdhYjI3Y2QxYzkzODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "669859213915a0d6189ce72df942f95a3b204226", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/669859213915a0d6189ce72df942f95a3b204226", "committedDate": "2020-01-28T07:15:27Z", "message": "Add tests for Javax ServerContainer default configuration.\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4b85d1df283a5d4d3589c2290359b27cf621e8c", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/a4b85d1df283a5d4d3589c2290359b27cf621e8c", "committedDate": "2020-01-28T07:16:22Z", "message": "Issue #4226 JavaxWebSocketServerContainer leaking into public signature\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTc4NDg5", "url": "https://github.com/eclipse/jetty.project/pull/4522#pullrequestreview-349178489", "createdAt": "2020-01-28T07:51:20Z", "commit": {"oid": "a4b85d1df283a5d4d3589c2290359b27cf621e8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNzo1MToyMFrOFibpKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNzo1MToyMFrOFibpKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0ODgwOQ==", "bodyText": "This check currently fails.\nThis issue also came up in #2661.\nThe API has the default maxMessageSize value for the @OnMessage annotation to be -1 which means infinite message size. We didn't want that to be the default as it would be too easy for a client to send a huge message and make the server blow up with an OutOfMemoryError. But we don't know if they have specifically set maxMessageSize = -1 in the annotation or it is just using the default value.\nCurrently if they set maxMessageSize = -2 or maxMessageSize = 0 it will result in infinite message size but a value of -1 will not override the container default value, in this case 60.", "url": "https://github.com/eclipse/jetty.project/pull/4522#discussion_r371648809", "createdAt": "2020-01-28T07:51:20Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-websocket/websocket-javax-tests/src/test/java/org/eclipse/jetty/websocket/javax/tests/ServerConfigTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.websocket.javax.tests;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.TimeUnit;\n+import javax.websocket.CloseReason;\n+import javax.websocket.CloseReason.CloseCodes;\n+import javax.websocket.ContainerProvider;\n+import javax.websocket.OnMessage;\n+import javax.websocket.OnOpen;\n+import javax.websocket.Session;\n+import javax.websocket.WebSocketContainer;\n+import javax.websocket.server.ServerEndpoint;\n+\n+import org.eclipse.jetty.server.Server;\n+import org.eclipse.jetty.server.ServerConnector;\n+import org.eclipse.jetty.servlet.ServletContextHandler;\n+import org.eclipse.jetty.websocket.javax.server.config.JavaxWebSocketServletContainerInitializer;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.ValueSource;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class ServerConfigTest\n+{\n+    private Server server;\n+    private WebSocketContainer client;\n+    private ServerConnector connector;\n+\n+    private static final long idleTimeout = 500;\n+    private static final int maxTextMessageSize = 50;\n+    private static final int maxBinaryMessageSize = 60;\n+    private static final long asyncSendTimeout = 200;\n+\n+    @BeforeEach\n+    public void start() throws Exception\n+    {\n+        server = new Server();\n+        connector = new ServerConnector(server);\n+        server.addConnector(connector);\n+\n+        ServletContextHandler contextHandler = new ServletContextHandler(ServletContextHandler.SESSIONS);\n+        contextHandler.setContextPath(\"/\");\n+        server.setHandler(contextHandler);\n+\n+        JavaxWebSocketServletContainerInitializer.configure(contextHandler, (context, container) ->\n+        {\n+            container.setDefaultMaxSessionIdleTimeout(idleTimeout);\n+            container.setDefaultMaxTextMessageBufferSize(maxTextMessageSize);\n+            container.setDefaultMaxBinaryMessageBufferSize(maxBinaryMessageSize);\n+            container.setAsyncSendTimeout(asyncSendTimeout);\n+            container.addEndpoint(ConfigTestSocket.class);\n+            container.addEndpoint(AnnotatedOnMessageSocket.class);\n+        });\n+\n+        server.start();\n+        client = ContainerProvider.getWebSocketContainer();\n+    }\n+\n+    @AfterEach\n+    public void stop() throws Exception\n+    {\n+        server.stop();\n+    }\n+\n+    @ServerEndpoint(\"/containerDefaults\")\n+    public static class ConfigTestSocket\n+    {\n+        @OnOpen\n+        public void onOpen(Session session)\n+        {\n+            assertThat(session.getMaxIdleTimeout(), is(idleTimeout));\n+            assertThat(session.getMaxTextMessageBufferSize(), is(maxTextMessageSize));\n+            assertThat(session.getMaxBinaryMessageBufferSize(), is(maxBinaryMessageSize));\n+            assertThat(session.getAsyncRemote().getSendTimeout(), is(asyncSendTimeout));\n+        }\n+    }\n+\n+    @ServerEndpoint(\"/annotatedOnMessage\")\n+    public static class AnnotatedOnMessageSocket\n+    {\n+        @OnOpen\n+        public void onOpen(Session session)\n+        {\n+            assertThat(session.getMaxTextMessageBufferSize(), is(111));\n+            assertThat(session.getMaxBinaryMessageBufferSize(), is(-1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4b85d1df283a5d4d3589c2290359b27cf621e8c"}, "originalPosition": 109}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTc5MzUy", "url": "https://github.com/eclipse/jetty.project/pull/4522#pullrequestreview-349179352", "createdAt": "2020-01-28T07:53:27Z", "commit": {"oid": "a4b85d1df283a5d4d3589c2290359b27cf621e8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNzo1MzoyN1rOFibrww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNzo1MzoyN1rOFibrww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0OTQ3NQ==", "bodyText": "This change fixes the JPMS issue.\nNot sure if we really need this public as it is only used just below, but have left it public for now.", "url": "https://github.com/eclipse/jetty.project/pull/4522#discussion_r371649475", "createdAt": "2020-01-28T07:53:27Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-websocket/websocket-javax-server/src/main/java/org/eclipse/jetty/websocket/javax/server/config/JavaxWebSocketServletContainerInitializer.java", "diffHunk": "@@ -148,7 +148,7 @@ public static void configure(ServletContextHandler context, Configurator configu\n      * @param context the context to work with\n      * @return the default {@link ServerContainer} for this context\n      */\n-    public static JavaxWebSocketServerContainer initialize(ServletContextHandler context)\n+    public static ServerContainer initialize(ServletContextHandler context)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4b85d1df283a5d4d3589c2290359b27cf621e8c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMDEzMTU4", "url": "https://github.com/eclipse/jetty.project/pull/4522#pullrequestreview-350013158", "createdAt": "2020-01-29T10:46:30Z", "commit": {"oid": "a4b85d1df283a5d4d3589c2290359b27cf621e8c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82c61c48ebe945b821b0c794b39cf3f4802602ac", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/82c61c48ebe945b821b0c794b39cf3f4802602ac", "committedDate": "2020-01-29T23:37:34Z", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-4226-JavaxWebSocketJPMS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "006fd3f913d2403d32d2f73313f7ab27cd1c9380", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/006fd3f913d2403d32d2f73313f7ab27cd1c9380", "committedDate": "2020-01-30T00:26:51Z", "message": "Issue #4226 - fix test failures\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 563, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}