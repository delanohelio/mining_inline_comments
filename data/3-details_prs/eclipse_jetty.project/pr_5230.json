{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MjY4ODIy", "number": 5230, "title": "Issue #5201 - simplify the QueuedThreadPool dump", "bodyText": "Issue #5201\nMake the format of each thread dump more consistent, and simplify the code to make it easier to read and understand.\nBoth the standard and detailed dumps have the information of id, name, state and priority,\nThen either if method is known we add one of {IDLE, RESERVED, SELECTING, ACCEPTING}, otherwise we add just the first line of the stacktrace for the standard dump, or the full stack trace for the detailed dump.", "createdAt": "2020-09-03T00:46:22Z", "url": "https://github.com/eclipse/jetty.project/pull/5230", "merged": true, "mergeCommit": {"oid": "2826df2048866e9e54824dfb866201af67223f6a"}, "closed": true, "closedAt": "2020-09-04T07:16:44Z", "author": {"login": "lachlan-roberts"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFCdhpgH2gAyNDc4MjY4ODIyOjBhNTlhMmIwOTA5MzgzZGU3ZGI4YmRkMmI2OWUyZjBjODY5YmNkMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFfYkcgFqTQ4MjM5NTcwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0a59a2b0909383de7db8bdd2b69e2f0c869bcd09", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/0a59a2b0909383de7db8bdd2b69e2f0c869bcd09", "committedDate": "2020-09-02T20:58:55Z", "message": "Issue #5201 - simplify the QueuedThreadPool detailed dump\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85c8c6510e9e4e00edf23af3037100e08944940b", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/85c8c6510e9e4e00edf23af3037100e08944940b", "committedDate": "2020-09-03T00:34:18Z", "message": "Issue #5201 - Fix issues with test after changes to QTP dump\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26ae875d1c77d455b853f6a24e7590ea09864b7f", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/26ae875d1c77d455b853f6a24e7590ea09864b7f", "committedDate": "2020-09-03T05:00:47Z", "message": "Merge remote-tracking branch 'origin/jetty-9.4.x' into jetty-9.4.x-5201-QueuedThreadPoolDump"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "516432b9cbd47f3a9987d6dbcdfb690b1cc6baeb", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/516432b9cbd47f3a9987d6dbcdfb690b1cc6baeb", "committedDate": "2020-09-03T05:06:02Z", "message": "Update server dump documentation after QueuedThreadPool dump changes\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNTgwNjMy", "url": "https://github.com/eclipse/jetty.project/pull/5230#pullrequestreview-481580632", "createdAt": "2020-09-03T07:48:01Z", "commit": {"oid": "516432b9cbd47f3a9987d6dbcdfb690b1cc6baeb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzo0ODowMVrOHMaVhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzo0OTozMlrOHMaZBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3NjQ1Mw==", "bodyText": "I would not mind to have a different logging of this, namely: name, state, tid, prio, like this:\nqtp731260860-13 RUNNABLE SELECTING tid=13 prio=5\nso that the important information (name and state) are at the beginning.", "url": "https://github.com/eclipse/jetty.project/pull/5230#discussion_r482776453", "createdAt": "2020-09-03T07:48:01Z", "author": {"login": "sbordet"}, "path": "jetty-documentation/src/main/asciidoc/administration/logging/jetty-server-dump.adoc", "diffHunk": "@@ -80,26 +80,26 @@ The Server MBean has a `dump()` method, which dumps everything, plus a `dumpStdE\n This is a dump of the OneServletContext embedded example with extra threadpool information:\n \n ....\n-Server@59906517{STARTED}[9.4.32-SNAPSHOT] - STARTED\n-+= QueuedThreadPool[qtp1740189450]@67b92f0a{STARTED,8<=8<=200,i=5,r=4,q=0}[ReservedThreadExecutor@77e4c80f{s=0/4,p=0}] - STARTED\n-|  += ReservedThreadExecutor@77e4c80f{s=0/4,p=0} - STARTED\n+Server@5ed828d{STARTED}[9.4.32-SNAPSHOT] - STARTED\n++= QueuedThreadPool[qtp731260860]@2b9627bc{STARTED,8<=8<=10,i=5,r=1,q=0}[ReservedThreadExecutor@77e4c80f{s=0/1,p=0}] - STARTED\n+|  += ReservedThreadExecutor@77e4c80f{s=0/1,p=0} - STARTED\n |  +> threads size=8\n-|  |  +> 12 qtp1740189450-12 SELECTING  RUNNABLE 5\n-|  |  +> 14 qtp1740189450-14-acceptor-0@4c78251c-ServerConnector@76707e36{HTTP/1.1, (http/1.1)}{0.0.0.0:8080} ACCEPTING  RUNNABLE 3\n-|  |  +> 16 qtp1740189450-16 IDLE  TIMED_WAITING 5\n-|  |  +> 18 qtp1740189450-18 IDLE  TIMED_WAITING 5\n-|  |  +> 15 qtp1740189450-15 SELECTING  RUNNABLE 5\n-|  |  +> 19 qtp1740189450-19 IDLE  TIMED_WAITING 5\n-|  |  +> 17 qtp1740189450-17 IDLE  TIMED_WAITING 5\n-|  |  +> 13 qtp1740189450-13 IDLE  TIMED_WAITING 5\n+|  |  +> 13 qtp731260860-13 RUNNABLE 5 SELECTING", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "516432b9cbd47f3a9987d6dbcdfb690b1cc6baeb"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc3NzM1MA==", "bodyText": "Should not this be getKnownState() as it returns the state of the thread?", "url": "https://github.com/eclipse/jetty.project/pull/5230#discussion_r482777350", "createdAt": "2020-09-03T07:49:32Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/QueuedThreadPool.java", "diffHunk": "@@ -701,74 +701,41 @@ protected void removeThread(Thread thread)\n     public void dump(Appendable out, String indent) throws IOException\n     {\n         List<Object> threads = new ArrayList<>(getMaxThreads());\n-        for (final Thread thread : _threads)\n+        for (Thread thread : _threads)\n         {\n-            final StackTraceElement[] trace = thread.getStackTrace();\n-            String knownMethod = \"\";\n-            for (StackTraceElement t : trace)\n-            {\n-                if (\"idleJobPoll\".equals(t.getMethodName()) && t.getClassName().equals(Runner.class.getName()))\n-                {\n-                    knownMethod = \"IDLE \";\n-                    break;\n-                }\n-\n-                if (\"reservedWait\".equals(t.getMethodName()) && t.getClassName().endsWith(\"ReservedThread\"))\n-                {\n-                    knownMethod = \"RESERVED \";\n-                    break;\n-                }\n-\n-                if (\"select\".equals(t.getMethodName()) && t.getClassName().endsWith(\"SelectorProducer\"))\n-                {\n-                    knownMethod = \"SELECTING \";\n-                    break;\n-                }\n-\n-                if (\"accept\".equals(t.getMethodName()) && t.getClassName().contains(\"ServerConnector\"))\n-                {\n-                    knownMethod = \"ACCEPTING \";\n-                    break;\n-                }\n-            }\n-            final String known = knownMethod;\n-\n-            if (isDetailedDump())\n-            {\n-                threads.add(new Dumpable()\n-                {\n-                    @Override\n-                    public void dump(Appendable out, String indent) throws IOException\n-                    {\n-                        if (StringUtil.isBlank(known))\n-                            Dumpable.dumpObjects(out, indent, String.format(\"%s %s %s %d\", thread.getId(), thread.getName(), thread.getState(), thread.getPriority()), (Object[])trace);\n-                        else\n-                            Dumpable.dumpObjects(out, indent, String.format(\"%s %s %s %s %d\", thread.getId(), thread.getName(), known, thread.getState(), thread.getPriority()));\n-                    }\n-\n-                    @Override\n-                    public String dump()\n-                    {\n-                        return null;\n-                    }\n-                });\n-            }\n+            StackTraceElement[] trace = thread.getStackTrace();\n+            String known = getKnownMethod(trace);\n+            String baseThreadInfo = String.format(\"%s %s %s %d\", thread.getId(), thread.getName(), thread.getState(), thread.getPriority());\n+\n+            if (!StringUtil.isBlank(known))\n+                threads.add(baseThreadInfo + \" \" + known);\n+            else if (isDetailedDump())\n+                threads.add((Dumpable)(o, i) -> Dumpable.dumpObjects(o, i, baseThreadInfo, (Object[])trace));\n             else\n-            {\n-                int p = thread.getPriority();\n-                threads.add(thread.getId() + \" \" + thread.getName() + \" \" + known + thread.getState() + \" @ \" + (trace.length > 0 ? trace[0] : \"???\") + (p == Thread.NORM_PRIORITY ? \"\" : (\" prio=\" + p)));\n-            }\n+                threads.add(baseThreadInfo + \" @ \" + (trace.length > 0 ? trace[0].toString() : \"???\"));\n         }\n \n+        DumpableCollection threadsDump = new DumpableCollection(\"threads\", threads);\n         if (isDetailedDump())\n-        {\n-            List<Runnable> jobs = new ArrayList<>(getQueue());\n-            dumpObjects(out, indent, new DumpableCollection(\"threads\", threads), new DumpableCollection(\"jobs\", jobs));\n-        }\n+            dumpObjects(out, indent, threadsDump, new DumpableCollection(\"jobs\", new ArrayList<>(getQueue())));\n         else\n+            dumpObjects(out, indent, threadsDump);\n+    }\n+\n+    private String getKnownMethod(StackTraceElement[] trace)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "516432b9cbd47f3a9987d6dbcdfb690b1cc6baeb"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d1bbc49f750c3061682eee22bae332228387f21", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/1d1bbc49f750c3061682eee22bae332228387f21", "committedDate": "2020-09-04T03:55:26Z", "message": "Issue #5201 - change format for QTP dump from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5476ee6b5e625f749a5e5a682b37162ec4207be", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/e5476ee6b5e625f749a5e5a682b37162ec4207be", "committedDate": "2020-09-04T01:01:27Z", "message": "Issue #4824 - create test for WebSocket maxOutgoingFrames\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}, "afterCommit": {"oid": "1d1bbc49f750c3061682eee22bae332228387f21", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/1d1bbc49f750c3061682eee22bae332228387f21", "committedDate": "2020-09-04T03:55:26Z", "message": "Issue #5201 - change format for QTP dump from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzk1NzA5", "url": "https://github.com/eclipse/jetty.project/pull/5230#pullrequestreview-482395709", "createdAt": "2020-09-04T06:40:46Z", "commit": {"oid": "1d1bbc49f750c3061682eee22bae332228387f21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 329, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}