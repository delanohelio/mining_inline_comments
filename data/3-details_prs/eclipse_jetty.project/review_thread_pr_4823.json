{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NzUzNzc3", "number": 4823, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxMzozNVrOD3PnOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToyNDowNlrOD3lUew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjU0MDc0OnYy", "diffSide": "RIGHT", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ManagedSelector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxMzozNVrOGNZGWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToyNjoxNlrOGNZuEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NTg5OQ==", "bodyText": "Both implementations of this method don't use the oldKey parameter. Use it or drop it?", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r416695899", "createdAt": "2020-04-28T15:13:35Z", "author": {"login": "lorban"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ManagedSelector.java", "diffHunk": "@@ -378,14 +473,25 @@ public String toString()\n          * detected by the {@link ManagedSelector} for this endpoint.\n          *\n          * @return a job that may block or null\n+         * @param key the selected SelectionKey\n          */\n-        Runnable onSelected();\n+        Runnable onSelected(SelectionKey key);\n \n         /**\n          * Callback method invoked when all the keys selected by the\n          * {@link ManagedSelector} for this endpoint have been processed.\n+         * @param key the SelectionKey to update\n+         */\n+        void updateKey(SelectionKey key);\n+\n+        /**\n+         * Callback method invoked when a selectable is transferred\n+         * from one selector to a new selector.\n+         *\n+         * @param oldKey the old SelectionKey\n+         * @param newKey the new SelectionKey\n          */\n-        void updateKey();\n+        void replaceKey(SelectionKey oldKey, SelectionKey newKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "952a20f81cabdc046832cb8c519151f148206bbe"}, "originalPosition": 226}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwNjA2Ng==", "bodyText": "I think it is strange to have both replaceKey and to pass in the key to onSelected etc.\nIf you are passing in the key for the main usages, then findKey is probably OK for the remaining cases.\nSo get rid of one mechanism or the other.", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r416706066", "createdAt": "2020-04-28T15:26:16Z", "author": {"login": "gregw"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ManagedSelector.java", "diffHunk": "@@ -378,14 +473,25 @@ public String toString()\n          * detected by the {@link ManagedSelector} for this endpoint.\n          *\n          * @return a job that may block or null\n+         * @param key the selected SelectionKey\n          */\n-        Runnable onSelected();\n+        Runnable onSelected(SelectionKey key);\n \n         /**\n          * Callback method invoked when all the keys selected by the\n          * {@link ManagedSelector} for this endpoint have been processed.\n+         * @param key the SelectionKey to update\n+         */\n+        void updateKey(SelectionKey key);\n+\n+        /**\n+         * Callback method invoked when a selectable is transferred\n+         * from one selector to a new selector.\n+         *\n+         * @param oldKey the old SelectionKey\n+         * @param newKey the new SelectionKey\n          */\n-        void updateKey();\n+        void replaceKey(SelectionKey oldKey, SelectionKey newKey);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NTg5OQ=="}, "originalCommit": {"oid": "952a20f81cabdc046832cb8c519151f148206bbe"}, "originalPosition": 226}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjU0ODI0OnYy", "diffSide": "RIGHT", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/SocketChannelEndPoint.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxNTowNVrOGNZLAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo0NjoyM1rOGN3brA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NzA4OQ==", "bodyText": "This class does very little more than ChannelEndPoint Shouldn't the two be merged?", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r416697089", "createdAt": "2020-04-28T15:15:05Z", "author": {"login": "lorban"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/SocketChannelEndPoint.java", "diffHunk": "@@ -18,24 +18,15 @@\n \n package org.eclipse.jetty.io;\n \n-import java.io.IOException;\n-import java.net.InetSocketAddress;\n import java.net.Socket;\n import java.nio.channels.SelectableChannel;\n import java.nio.channels.SelectionKey;\n import java.nio.channels.SocketChannel;\n \n-import org.eclipse.jetty.util.log.Log;\n-import org.eclipse.jetty.util.log.Logger;\n import org.eclipse.jetty.util.thread.Scheduler;\n \n public class SocketChannelEndPoint extends ChannelEndPoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "952a20f81cabdc046832cb8c519151f148206bbe"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5Mjg3Ng==", "bodyText": "ChannelEndPoint becomes SocketChannelEndPoint, and UnixEndPoint extends SocketChannelEndPoint?\nWe may want to do this in 10, not in 9.4.", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417192876", "createdAt": "2020-04-29T09:46:23Z", "author": {"login": "sbordet"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/SocketChannelEndPoint.java", "diffHunk": "@@ -18,24 +18,15 @@\n \n package org.eclipse.jetty.io;\n \n-import java.io.IOException;\n-import java.net.InetSocketAddress;\n import java.net.Socket;\n import java.nio.channels.SelectableChannel;\n import java.nio.channels.SelectionKey;\n import java.nio.channels.SocketChannel;\n \n-import org.eclipse.jetty.util.log.Log;\n-import org.eclipse.jetty.util.log.Logger;\n import org.eclipse.jetty.util.thread.Scheduler;\n \n public class SocketChannelEndPoint extends ChannelEndPoint", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NzA4OQ=="}, "originalCommit": {"oid": "952a20f81cabdc046832cb8c519151f148206bbe"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjU1MDI2OnYy", "diffSide": "RIGHT", "path": "tests/test-http-client-transport/src/test/java/org/eclipse/jetty/http/client/AsyncIOServletTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxNToyOVrOGNZMVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo0Njo1NlrOGN3dBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NzQyOQ==", "bodyText": "Why disabled?", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r416697429", "createdAt": "2020-04-28T15:15:29Z", "author": {"login": "lorban"}, "path": "tests/test-http-client-transport/src/test/java/org/eclipse/jetty/http/client/AsyncIOServletTest.java", "diffHunk": "@@ -398,6 +399,7 @@ public void onError(Throwable t)\n     @ParameterizedTest\n     @ArgumentsSource(TransportProvider.class)\n     @Tag(\"Unstable\")\n+    @Disabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "952a20f81cabdc046832cb8c519151f148206bbe"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5MzIyMg==", "bodyText": "Because the test is unstable and fails for reasons unrelated to this change, but it was annoying that it failed randomly.", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417193222", "createdAt": "2020-04-29T09:46:56Z", "author": {"login": "sbordet"}, "path": "tests/test-http-client-transport/src/test/java/org/eclipse/jetty/http/client/AsyncIOServletTest.java", "diffHunk": "@@ -398,6 +399,7 @@ public void onError(Throwable t)\n     @ParameterizedTest\n     @ArgumentsSource(TransportProvider.class)\n     @Tag(\"Unstable\")\n+    @Disabled", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NzQyOQ=="}, "originalCommit": {"oid": "952a20f81cabdc046832cb8c519151f148206bbe"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjYwODkyOnYy", "diffSide": "RIGHT", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ManagedSelector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToyNjo1NlrOGNZwVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo0ODoxOFrOGN3f7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwNjY0Nw==", "bodyText": "compute is not really very meaningful", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r416706647", "createdAt": "2020-04-28T15:26:56Z", "author": {"login": "gregw"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ManagedSelector.java", "diffHunk": "@@ -160,22 +145,132 @@ protected void doStop() throws Exception\n         super.doStop();\n     }\n \n+    void compute(Selector selector, SelectableChannel channel, SelectionKey selectionKey, Consumer<SelectionKey> action)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "952a20f81cabdc046832cb8c519151f148206bbe"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5Mzk2Ng==", "bodyText": "What then? It runs the Consumer given those parameters - similar to Map.compute().", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417193966", "createdAt": "2020-04-29T09:48:18Z", "author": {"login": "sbordet"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ManagedSelector.java", "diffHunk": "@@ -160,22 +145,132 @@ protected void doStop() throws Exception\n         super.doStop();\n     }\n \n+    void compute(Selector selector, SelectableChannel channel, SelectionKey selectionKey, Consumer<SelectionKey> action)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwNjY0Nw=="}, "originalCommit": {"oid": "952a20f81cabdc046832cb8c519151f148206bbe"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjA3NTk4OnYy", "diffSide": "RIGHT", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToxNzoyMVrOGN6Qlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTo0MTo0M1rOGOFDtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzOTE5MQ==", "bodyText": "you may as well return the key here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    _selector.runKeyAction(selector, _channel, _key, this::updateKey);\n          \n          \n            \n                    _key = _selector.runKeyAction(selector, _channel, _key, this::updateKey);", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417239191", "createdAt": "2020-04-29T11:17:21Z", "author": {"login": "gregw"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "diffHunk": "@@ -357,12 +353,16 @@ public Runnable onSelected()\n         return task;\n     }\n \n+    private void updateKey(Selector selector)\n+    {\n+        _selector.runKeyAction(selector, _channel, _key, this::updateKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c75eeccce81b158c2513ec29f6d6f644735568b"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NzI1MA==", "bodyText": "I don't think it's a good idea to return the key, since it's the Consumer that is supposed to act on the key so there is no point returning it to the caller.", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417297250", "createdAt": "2020-04-29T13:03:49Z", "author": {"login": "sbordet"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "diffHunk": "@@ -357,12 +353,16 @@ public Runnable onSelected()\n         return task;\n     }\n \n+    private void updateKey(Selector selector)\n+    {\n+        _selector.runKeyAction(selector, _channel, _key, this::updateKey);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzOTE5MQ=="}, "originalCommit": {"oid": "8c75eeccce81b158c2513ec29f6d6f644735568b"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQxNjExOA==", "bodyText": "let's get rid of the _key field (as above)", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417416118", "createdAt": "2020-04-29T15:41:43Z", "author": {"login": "gregw"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "diffHunk": "@@ -357,12 +353,16 @@ public Runnable onSelected()\n         return task;\n     }\n \n+    private void updateKey(Selector selector)\n+    {\n+        _selector.runKeyAction(selector, _channel, _key, this::updateKey);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzOTE5MQ=="}, "originalCommit": {"oid": "8c75eeccce81b158c2513ec29f6d6f644735568b"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjA4MjYwOnYy", "diffSide": "RIGHT", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToxOToxOVrOGN6UbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTozNjowMlrOGOEzFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0MDE3Mw==", "bodyText": "This is not used in updateKey(Selector selector)  or is it the other update key?   Eitherway, it is confusing, can we change one of the method names?", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417240173", "createdAt": "2020-04-29T11:19:19Z", "author": {"login": "gregw"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "diffHunk": "@@ -94,14 +88,7 @@ public void close()\n         }\n     }\n \n-    private final ManagedSelector.SelectorUpdate _updateKeyAction = new ManagedSelector.SelectorUpdate()\n-    {\n-        @Override\n-        public void update(Selector selector)\n-        {\n-            updateKey();\n-        }\n-    };\n+    private final ManagedSelector.SelectorUpdate _updateKeyAction = this::updateKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c75eeccce81b158c2513ec29f6d6f644735568b"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NTAyOQ==", "bodyText": "I don't understand what's confusing? Like before the inner class was calling Selectable.updateKey(), now the method reference is eventually calling Selectable.updateKey() - so it's the same stuff and it's the same task of updating the key.", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417295029", "createdAt": "2020-04-29T13:00:19Z", "author": {"login": "sbordet"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "diffHunk": "@@ -94,14 +88,7 @@ public void close()\n         }\n     }\n \n-    private final ManagedSelector.SelectorUpdate _updateKeyAction = new ManagedSelector.SelectorUpdate()\n-    {\n-        @Override\n-        public void update(Selector selector)\n-        {\n-            updateKey();\n-        }\n-    };\n+    private final ManagedSelector.SelectorUpdate _updateKeyAction = this::updateKey;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0MDE3Mw=="}, "originalCommit": {"oid": "8c75eeccce81b158c2513ec29f6d6f644735568b"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQxMTg2MA==", "bodyText": "there are two methods both called updateKey, both are used as method lambdas where you can't see the args without looking elsewhere.  One is set here as a field, the other is passed much later on.    Sorry, it is just confusing and even when I've worked it out, I keep getting reconfused.   Rename one of the methods.", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417411860", "createdAt": "2020-04-29T15:36:02Z", "author": {"login": "gregw"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "diffHunk": "@@ -94,14 +88,7 @@ public void close()\n         }\n     }\n \n-    private final ManagedSelector.SelectorUpdate _updateKeyAction = new ManagedSelector.SelectorUpdate()\n-    {\n-        @Override\n-        public void update(Selector selector)\n-        {\n-            updateKey();\n-        }\n-    };\n+    private final ManagedSelector.SelectorUpdate _updateKeyAction = this::updateKey;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0MDE3Mw=="}, "originalCommit": {"oid": "8c75eeccce81b158c2513ec29f6d6f644735568b"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjA5NzIzOnYy", "diffSide": "RIGHT", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMToyNDowNlrOGN6dnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTo0MToyM1rOGOFCtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0MjUyNw==", "bodyText": "maybe call this one updateKeyAction", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417242527", "createdAt": "2020-04-29T11:24:06Z", "author": {"login": "gregw"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "diffHunk": "@@ -357,12 +353,16 @@ public Runnable onSelected()\n         return task;\n     }\n \n+    private void updateKey(Selector selector)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c75eeccce81b158c2513ec29f6d6f644735568b"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NzAyNA==", "bodyText": "Not sure I agree. This method updates the key, it's not the action. The field is called _updateKeyAction because it's the action that it is submitted to the selector.", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417297024", "createdAt": "2020-04-29T13:03:26Z", "author": {"login": "sbordet"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "diffHunk": "@@ -357,12 +353,16 @@ public Runnable onSelected()\n         return task;\n     }\n \n+    private void updateKey(Selector selector)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0MjUyNw=="}, "originalCommit": {"oid": "8c75eeccce81b158c2513ec29f6d6f644735568b"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQxNTg2Mw==", "bodyText": "So the updateKeyAction method is submitted to the selector, which calls us back here and then we call compute on the selector because our _key might be out of date....  All to avoid an array deref in keyFor  !!! I think we are getting too tricky.\nThe other callback pass the key, so we can just use it.  This callback passes the selector, so let's use use keyFor here and get rid of _key field.", "url": "https://github.com/eclipse/jetty.project/pull/4823#discussion_r417415863", "createdAt": "2020-04-29T15:41:23Z", "author": {"login": "gregw"}, "path": "jetty-io/src/main/java/org/eclipse/jetty/io/ChannelEndPoint.java", "diffHunk": "@@ -357,12 +353,16 @@ public Runnable onSelected()\n         return task;\n     }\n \n+    private void updateKey(Selector selector)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0MjUyNw=="}, "originalCommit": {"oid": "8c75eeccce81b158c2513ec29f6d6f644735568b"}, "originalPosition": 172}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2498, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}