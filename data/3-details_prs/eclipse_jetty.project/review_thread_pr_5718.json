{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NDQ2MTgx", "number": 5718, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzowMTozMVrOE8thWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzo1NDo1MFrOE8u3jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDk1ODMyOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzowMTozMVrOH4_x7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzoxNDo1OFrOH5ASQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyNzI3Ng==", "bodyText": "Bzzzt. Do not pass go, do not collect $100. YOu can only delete it if it has expired!", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529527276", "createdAt": "2020-11-24T13:01:31Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -206,21 +208,24 @@ public void sweepDisk()\n         long now = System.currentTimeMillis();\n         if (LOG.isDebugEnabled())\n             LOG.debug(\"Sweeping {} for old session files\", _storeDir);\n-        try\n+        try (Stream<Path> stream = Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS))\n         {\n-            Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS)\n+            stream\n                 .filter(p -> !Files.isDirectory(p)).filter(p -> !isOurContextSessionFilename(p.getFileName().toString()))\n                 .filter(p -> isSessionFilename(p.getFileName().toString()))\n+                .collect(Collectors.toList()) // Don't delete whilst walking\n                 .forEach(p ->\n                 {\n-\n                     try\n                     {\n-                        sweepFile(now, p);\n+                        if (!Files.deleteIfExists(p))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7627b42b272b1388e25adc404393270d00e38430"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzNTU1NQ==", "bodyText": "oooops fixed", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529535555", "createdAt": "2020-11-24T13:14:58Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -206,21 +208,24 @@ public void sweepDisk()\n         long now = System.currentTimeMillis();\n         if (LOG.isDebugEnabled())\n             LOG.debug(\"Sweeping {} for old session files\", _storeDir);\n-        try\n+        try (Stream<Path> stream = Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS))\n         {\n-            Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS)\n+            stream\n                 .filter(p -> !Files.isDirectory(p)).filter(p -> !isOurContextSessionFilename(p.getFileName().toString()))\n                 .filter(p -> isSessionFilename(p.getFileName().toString()))\n+                .collect(Collectors.toList()) // Don't delete whilst walking\n                 .forEach(p ->\n                 {\n-\n                     try\n                     {\n-                        sweepFile(now, p);\n+                        if (!Files.deleteIfExists(p))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyNzI3Ng=="}, "originalCommit": {"oid": "7627b42b272b1388e25adc404393270d00e38430"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDk3MDY0OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzowNDo0N1rOH4_5YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzoxNToxNVrOH5AS9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyOTE4NQ==", "bodyText": "So the debug output looking like the delete happened will be done even if the file wasn't actually deleted.", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529529185", "createdAt": "2020-11-24T13:04:47Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -242,24 +265,12 @@ public void sweepDisk()\n     public void sweepFile(long now, Path p)\n         throws Exception\n     {\n-        if (p == null)\n-            return;\n-\n-        try\n+        if (isExpired(now, p))\n         {\n-            long expiry = getExpiryFromFilename(p.getFileName().toString());\n-            //files with 0 expiry never expire\n-            if (expiry > 0 && ((now - expiry) >= (5 * TimeUnit.SECONDS.toMillis(_gracePeriodSec))))\n-            {\n-                Files.deleteIfExists(p);\n-                if (LOG.isDebugEnabled())\n-                    LOG.debug(\"Sweep deleted {}\", p.getFileName());\n-            }\n-        }\n-        catch (NumberFormatException e)\n-        {\n-            LOG.warn(\"Not valid session filename {}\", p.getFileName());\n-            LOG.warn(e);\n+            if (!Files.deleteIfExists(p))\n+                LOG.warn(\"Could not delete {}\", p.getFileName());\n+            if (LOG.isDebugEnabled())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7627b42b272b1388e25adc404393270d00e38430"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzNTczMg==", "bodyText": "factored out to a better common deleteFile method", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529535732", "createdAt": "2020-11-24T13:15:15Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -242,24 +265,12 @@ public void sweepDisk()\n     public void sweepFile(long now, Path p)\n         throws Exception\n     {\n-        if (p == null)\n-            return;\n-\n-        try\n+        if (isExpired(now, p))\n         {\n-            long expiry = getExpiryFromFilename(p.getFileName().toString());\n-            //files with 0 expiry never expire\n-            if (expiry > 0 && ((now - expiry) >= (5 * TimeUnit.SECONDS.toMillis(_gracePeriodSec))))\n-            {\n-                Files.deleteIfExists(p);\n-                if (LOG.isDebugEnabled())\n-                    LOG.debug(\"Sweep deleted {}\", p.getFileName());\n-            }\n-        }\n-        catch (NumberFormatException e)\n-        {\n-            LOG.warn(\"Not valid session filename {}\", p.getFileName());\n-            LOG.warn(e);\n+            if (!Files.deleteIfExists(p))\n+                LOG.warn(\"Could not delete {}\", p.getFileName());\n+            if (LOG.isDebugEnabled())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyOTE4NQ=="}, "originalCommit": {"oid": "7627b42b272b1388e25adc404393270d00e38430"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDk4MDQyOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzowNzowOVrOH4__Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzoxNTozM1rOH5AT2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzMDY5OQ==", "bodyText": "In general, I'm not sure we need to do the delete outside of the stream: there are plenty of examples if you do a google search where the recommended way to do a recursive directory delete is to use Files.walk/list and delete each file. I can't find any counter examples that says that is a bad idea.", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529530699", "createdAt": "2020-11-24T13:07:09Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -206,21 +208,24 @@ public void sweepDisk()\n         long now = System.currentTimeMillis();\n         if (LOG.isDebugEnabled())\n             LOG.debug(\"Sweeping {} for old session files\", _storeDir);\n-        try\n+        try (Stream<Path> stream = Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS))\n         {\n-            Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS)\n+            stream\n                 .filter(p -> !Files.isDirectory(p)).filter(p -> !isOurContextSessionFilename(p.getFileName().toString()))\n                 .filter(p -> isSessionFilename(p.getFileName().toString()))\n+                .collect(Collectors.toList()) // Don't delete whilst walking\n                 .forEach(p ->\n                 {\n-\n                     try\n                     {\n-                        sweepFile(now, p);\n+                        if (!Files.deleteIfExists(p))\n+                            LOG.warn(\"Could not delete {}\", p.getFileName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7627b42b272b1388e25adc404393270d00e38430"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzNTk2Mw==", "bodyText": "OK I have switched back.", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529535963", "createdAt": "2020-11-24T13:15:33Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -206,21 +208,24 @@ public void sweepDisk()\n         long now = System.currentTimeMillis();\n         if (LOG.isDebugEnabled())\n             LOG.debug(\"Sweeping {} for old session files\", _storeDir);\n-        try\n+        try (Stream<Path> stream = Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS))\n         {\n-            Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS)\n+            stream\n                 .filter(p -> !Files.isDirectory(p)).filter(p -> !isOurContextSessionFilename(p.getFileName().toString()))\n                 .filter(p -> isSessionFilename(p.getFileName().toString()))\n+                .collect(Collectors.toList()) // Don't delete whilst walking\n                 .forEach(p ->\n                 {\n-\n                     try\n                     {\n-                        sweepFile(now, p);\n+                        if (!Files.deleteIfExists(p))\n+                            LOG.warn(\"Could not delete {}\", p.getFileName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzMDY5OQ=="}, "originalCommit": {"oid": "7627b42b272b1388e25adc404393270d00e38430"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDk5MDYxOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzowOTo0M1rOH5AFmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzoxNTo1MVrOH5AUjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzMjMxNQ==", "bodyText": "This delete is still in here: if the intention is to avoid doing deletes inside the stream, you'll need to completely rework this code.", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529532315", "createdAt": "2020-11-24T13:09:43Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -365,70 +376,70 @@ public void initializeStore()\n             MultiException me = new MultiException();\n             long now = System.currentTimeMillis();\n \n-            Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS)\n-                .filter(p -> !Files.isDirectory(p)).filter(p -> isSessionFilename(p.getFileName().toString()))\n-                .forEach(p ->\n-                {\n-                    //first get rid of all ancient files, regardless of which\n-                    //context they are for\n-                    try\n-                    {\n-                        sweepFile(now, p);\n-                    }\n-                    catch (Exception x)\n-                    {\n-                        me.add(x);\n-                    }\n \n-                    String filename = p.getFileName().toString();\n-                    String context = getContextFromFilename(filename);\n-                    //now process it if it wasn't deleted, and it is for our context\n-                    if (Files.exists(p) && _contextString.equals(context))\n+            // first get rid of all ancient files, regardless of which\n+            // context they are for. Don't do in the following sweep to avoid\n+            // deleting whilst walking.\n+            sweepDisk();\n+\n+            // Build session file map by walking directory\n+            try (Stream<Path> stream = Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS))\n+            {\n+                stream\n+                    .filter(p -> !Files.isDirectory(p))\n+                    .filter(p -> isSessionFilename(p.getFileName().toString()))\n+                    .forEach(p ->\n                     {\n-                        //the session is for our context, populate the map with it\n-                        String sessionIdWithContext = getIdWithContextFromFilename(filename);\n-                        if (sessionIdWithContext != null)\n+                        String filename = p.getFileName().toString();\n+                        String context = getContextFromFilename(filename);\n+                        //now process it if it wasn't deleted, and it is for our context\n+                        if (Files.exists(p) && _contextString.equals(context))\n                         {\n-                            //handle multiple session files existing for the same session: remove all\n-                            //but the file with the most recent expiry time\n-                            String existing = _sessionFileMap.putIfAbsent(sessionIdWithContext, filename);\n-                            if (existing != null)\n+                            //the session is for our context, populate the map with it\n+                            String sessionIdWithContext = getIdWithContextFromFilename(filename);\n+                            if (sessionIdWithContext != null)\n                             {\n-                                //if there was a prior filename, work out which has the most\n-                                //recent modify time\n-                                try\n+                                //handle multiple session files existing for the same session: remove all\n+                                //but the file with the most recent expiry time\n+                                String existing = _sessionFileMap.putIfAbsent(sessionIdWithContext, filename);\n+                                if (existing != null)\n                                 {\n-                                    long existingExpiry = getExpiryFromFilename(existing);\n-                                    long thisExpiry = getExpiryFromFilename(filename);\n-\n-                                    if (thisExpiry > existingExpiry)\n+                                    //if there was a prior filename, work out which has the most\n+                                    //recent modify time\n+                                    try\n                                     {\n-                                        //replace with more recent file\n-                                        Path existingPath = _storeDir.toPath().resolve(existing);\n-                                        //update the file we're keeping\n-                                        _sessionFileMap.put(sessionIdWithContext, filename);\n-                                        //delete the old file\n-                                        Files.delete(existingPath);\n-                                        if (LOG.isDebugEnabled())\n-                                            LOG.debug(\"Replaced {} with {}\", existing, filename);\n+                                        long existingExpiry = getExpiryFromFilename(existing);\n+                                        long thisExpiry = getExpiryFromFilename(filename);\n+\n+                                        if (thisExpiry > existingExpiry)\n+                                        {\n+                                            //replace with more recent file\n+                                            Path existingPath = _storeDir.toPath().resolve(existing);\n+                                            //update the file we're keeping\n+                                            _sessionFileMap.put(sessionIdWithContext, filename);\n+                                            //delete the old file\n+                                            Files.delete(existingPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7627b42b272b1388e25adc404393270d00e38430"}, "originalPosition": 181}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzNjE0Mg==", "bodyText": "oops - no worries, I have switched back to single walk anyway.", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529536142", "createdAt": "2020-11-24T13:15:51Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -365,70 +376,70 @@ public void initializeStore()\n             MultiException me = new MultiException();\n             long now = System.currentTimeMillis();\n \n-            Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS)\n-                .filter(p -> !Files.isDirectory(p)).filter(p -> isSessionFilename(p.getFileName().toString()))\n-                .forEach(p ->\n-                {\n-                    //first get rid of all ancient files, regardless of which\n-                    //context they are for\n-                    try\n-                    {\n-                        sweepFile(now, p);\n-                    }\n-                    catch (Exception x)\n-                    {\n-                        me.add(x);\n-                    }\n \n-                    String filename = p.getFileName().toString();\n-                    String context = getContextFromFilename(filename);\n-                    //now process it if it wasn't deleted, and it is for our context\n-                    if (Files.exists(p) && _contextString.equals(context))\n+            // first get rid of all ancient files, regardless of which\n+            // context they are for. Don't do in the following sweep to avoid\n+            // deleting whilst walking.\n+            sweepDisk();\n+\n+            // Build session file map by walking directory\n+            try (Stream<Path> stream = Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS))\n+            {\n+                stream\n+                    .filter(p -> !Files.isDirectory(p))\n+                    .filter(p -> isSessionFilename(p.getFileName().toString()))\n+                    .forEach(p ->\n                     {\n-                        //the session is for our context, populate the map with it\n-                        String sessionIdWithContext = getIdWithContextFromFilename(filename);\n-                        if (sessionIdWithContext != null)\n+                        String filename = p.getFileName().toString();\n+                        String context = getContextFromFilename(filename);\n+                        //now process it if it wasn't deleted, and it is for our context\n+                        if (Files.exists(p) && _contextString.equals(context))\n                         {\n-                            //handle multiple session files existing for the same session: remove all\n-                            //but the file with the most recent expiry time\n-                            String existing = _sessionFileMap.putIfAbsent(sessionIdWithContext, filename);\n-                            if (existing != null)\n+                            //the session is for our context, populate the map with it\n+                            String sessionIdWithContext = getIdWithContextFromFilename(filename);\n+                            if (sessionIdWithContext != null)\n                             {\n-                                //if there was a prior filename, work out which has the most\n-                                //recent modify time\n-                                try\n+                                //handle multiple session files existing for the same session: remove all\n+                                //but the file with the most recent expiry time\n+                                String existing = _sessionFileMap.putIfAbsent(sessionIdWithContext, filename);\n+                                if (existing != null)\n                                 {\n-                                    long existingExpiry = getExpiryFromFilename(existing);\n-                                    long thisExpiry = getExpiryFromFilename(filename);\n-\n-                                    if (thisExpiry > existingExpiry)\n+                                    //if there was a prior filename, work out which has the most\n+                                    //recent modify time\n+                                    try\n                                     {\n-                                        //replace with more recent file\n-                                        Path existingPath = _storeDir.toPath().resolve(existing);\n-                                        //update the file we're keeping\n-                                        _sessionFileMap.put(sessionIdWithContext, filename);\n-                                        //delete the old file\n-                                        Files.delete(existingPath);\n-                                        if (LOG.isDebugEnabled())\n-                                            LOG.debug(\"Replaced {} with {}\", existing, filename);\n+                                        long existingExpiry = getExpiryFromFilename(existing);\n+                                        long thisExpiry = getExpiryFromFilename(filename);\n+\n+                                        if (thisExpiry > existingExpiry)\n+                                        {\n+                                            //replace with more recent file\n+                                            Path existingPath = _storeDir.toPath().resolve(existing);\n+                                            //update the file we're keeping\n+                                            _sessionFileMap.put(sessionIdWithContext, filename);\n+                                            //delete the old file\n+                                            Files.delete(existingPath);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzMjMxNQ=="}, "originalCommit": {"oid": "7627b42b272b1388e25adc404393270d00e38430"}, "originalPosition": 181}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTE3OTAyOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzo1NDo1MFrOH5B5Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzo1OTowOFrOH5CFEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU2MTkxMQ==", "bodyText": "I don't see the benefit of splitting sweepFile() into isExpired() and then deleteFile() - it's more efficient just to use sweepFile().", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529561911", "createdAt": "2020-11-24T13:54:50Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -206,60 +207,64 @@ public void sweepDisk()\n         long now = System.currentTimeMillis();\n         if (LOG.isDebugEnabled())\n             LOG.debug(\"Sweeping {} for old session files\", _storeDir);\n-        try\n+        try (Stream<Path> stream = Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS))\n         {\n-            Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS)\n+            stream\n                 .filter(p -> !Files.isDirectory(p)).filter(p -> !isOurContextSessionFilename(p.getFileName().toString()))\n                 .filter(p -> isSessionFilename(p.getFileName().toString()))\n-                .forEach(p ->\n-                {\n-\n-                    try\n-                    {\n-                        sweepFile(now, p);\n-                    }\n-                    catch (Exception e)\n-                    {\n-                        LOG.warn(e);\n-                    }\n-                });\n+                .filter(p -> isExpired(now, p))\n+                .forEach(this::deleteFile);\n         }\n         catch (Exception e)\n         {\n             LOG.warn(e);\n         }\n     }\n \n+    public boolean isExpired(long now, Path p)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a83462d46dfbb980fe3ca01542cba9e65b499227"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU2NDk0NA==", "bodyText": "Ah now that we no longer collect before delete, there is none....", "url": "https://github.com/eclipse/jetty.project/pull/5718#discussion_r529564944", "createdAt": "2020-11-24T13:59:08Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/FileSessionDataStore.java", "diffHunk": "@@ -206,60 +207,64 @@ public void sweepDisk()\n         long now = System.currentTimeMillis();\n         if (LOG.isDebugEnabled())\n             LOG.debug(\"Sweeping {} for old session files\", _storeDir);\n-        try\n+        try (Stream<Path> stream = Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS))\n         {\n-            Files.walk(_storeDir.toPath(), 1, FileVisitOption.FOLLOW_LINKS)\n+            stream\n                 .filter(p -> !Files.isDirectory(p)).filter(p -> !isOurContextSessionFilename(p.getFileName().toString()))\n                 .filter(p -> isSessionFilename(p.getFileName().toString()))\n-                .forEach(p ->\n-                {\n-\n-                    try\n-                    {\n-                        sweepFile(now, p);\n-                    }\n-                    catch (Exception e)\n-                    {\n-                        LOG.warn(e);\n-                    }\n-                });\n+                .filter(p -> isExpired(now, p))\n+                .forEach(this::deleteFile);\n         }\n         catch (Exception e)\n         {\n             LOG.warn(e);\n         }\n     }\n \n+    public boolean isExpired(long now, Path p)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU2MTkxMQ=="}, "originalCommit": {"oid": "a83462d46dfbb980fe3ca01542cba9e65b499227"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2155, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}