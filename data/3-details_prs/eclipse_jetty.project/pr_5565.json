{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NzM0Mzgw", "number": 5565, "title": "Fix #5562 Improve HTTP Field cache allocation", "bodyText": "Fix #5562 by initially putting cacheable fields into a inexpensive arraylist.\nOnly create the Trie (with space and complexity costs) if a second request is received.\nEdit: the original PR only created the Trie on the second request, but that behaviour was removed in reviews. The cache is now created every request, even for non persistent requests.", "createdAt": "2020-11-03T13:29:40Z", "url": "https://github.com/eclipse/jetty.project/pull/5565", "merged": true, "mergeCommit": {"oid": "f4c32e788ad534fb8dce3183cf6ce62c59c8ca33"}, "closed": true, "closedAt": "2020-11-12T16:05:33Z", "author": {"login": "gregw"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY5LwjgH2gAyNTE0NzM0MzgwOjM1MWJmYTU1ODUzNjdmYWI4YmQ5Yzc5NmZjYzZiZDZkMTIyYzYwYmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbzufqAFqTUyOTE2MDY3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "351bfa5585367fab8bd9c796fcc6bd6d122c60bd", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/351bfa5585367fab8bd9c796fcc6bd6d122c60bd", "committedDate": "2020-11-03T13:28:51Z", "message": "Fix #5562 Improve HTTP Field cache allocation\n\nFix #5562 by initially putting cacheable fields into a inexpensive arraylist.\nOnly create the Trie (with space and complexity costs) if a second request is received."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48f5abde59af41886ba554364c7503b3b0185011", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/48f5abde59af41886ba554364c7503b3b0185011", "committedDate": "2020-11-03T15:20:49Z", "message": "Merge remote-tracking branch 'origin/jetty-9.4.x' into jetty-9.4.x-5562-improve-field-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a3c58914715bc4a01708109c66592af6a89bedf", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/2a3c58914715bc4a01708109c66592af6a89bedf", "committedDate": "2020-11-04T07:46:45Z", "message": "Merge remote-tracking branch 'origin/jetty-9.4.x' into jetty-9.4.x-5562-improve-field-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70542dd121a15d8c9f39898e1fac66deefde3b67", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/70542dd121a15d8c9f39898e1fac66deefde3b67", "committedDate": "2020-11-04T08:11:50Z", "message": "Fixed NPE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMTUxNTg1", "url": "https://github.com/eclipse/jetty.project/pull/5565#pullrequestreview-523151585", "createdAt": "2020-11-04T08:53:24Z", "commit": {"oid": "70542dd121a15d8c9f39898e1fac66deefde3b67"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1MzoyNFrOHtOZ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwOTowNzoyNVrOHtO6wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4Mzk4Nw==", "bodyText": "I would rather have HttpHeader.isPseudo() instead.", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r517183987", "createdAt": "2020-11-04T08:53:24Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java", "diffHunk": "@@ -231,7 +235,7 @@\n         // Add headers with null values so HttpParser can avoid looking up name again for unknown values\n         for (HttpHeader h : HttpHeader.values())\n         {\n-            if (!CACHE.put(new HttpField(h, (String)null)))\n+            if (!h.asString().startsWith(\":\") && !CACHE.put(new HttpField(h, (String)null)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70542dd121a15d8c9f39898e1fac66deefde3b67"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4NDc4MQ==", "bodyText": "Ehm, this is not readable. It's the call to a getter method, whose return value is not used, but the comment seem to imply an if statement?\nThe method should renamed to something that is more intuitive -- now I have to look at the implementation to understand why there is this naked getter call without using the return value.", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r517184781", "createdAt": "2020-11-04T08:54:45Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java", "diffHunk": "@@ -884,10 +888,8 @@ else if (n == HttpTokens.LINE_FEED)\n                             }\n                             checkVersion();\n \n-                            // Should we try to cache header fields?\n-                            int headerCache = _handler.getHeaderCacheSize();\n-                            if (_fieldCache == null && _version.getVersion() >= HttpVersion.HTTP_1_1.getVersion() && headerCache > 0)\n-                                _fieldCache = new ArrayTernaryTrie<>(headerCache);\n+                            // Should we cache header fields?\n+                            getFieldCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70542dd121a15d8c9f39898e1fac66deefde3b67"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4ODc3Mw==", "bodyText": "In this branch we have a cache size > 0, we are HTTP/1.1 and there is no Connection: close, so chances are that this parser will see another request, likely more than 1.\nI would remove entirely the _cacheableFields handling, and just use the trie -- we have already optimized its creation.", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r517188773", "createdAt": "2020-11-04T09:01:19Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java", "diffHunk": "@@ -1052,18 +1058,42 @@ else if (_endOfContent == EndOfContent.CHUNKED_CONTENT)\n                     case COOKIE:\n                     case CACHE_CONTROL:\n                     case USER_AGENT:\n-                        addToConnectionTrie = _fieldCache != null && _field == null;\n+                        addToFieldCache = _field == null;\n                         break;\n \n                     default:\n                         break;\n                 }\n \n-                if (addToConnectionTrie && !_fieldCache.isFull() && _header != null && _valueString != null)\n+                // Cache field?\n+                if (addToFieldCache && _header != null && _valueString != null)\n                 {\n-                    if (_field == null)\n-                        _field = new HttpField(_header, caseInsensitiveHeader(_headerString, _header.asString()), _valueString);\n-                    _fieldCache.put(_field);\n+                    if (_fieldCache != null)\n+                    {\n+                        // If a non full cache already exists, then we can add to it.\n+                        if (!_fieldCache.isFull())\n+                        {\n+                            if (_field == null)\n+                                _field = new HttpField(_header, caseInsensitiveHeader(_headerString, _header.asString()), _valueString);\n+                            _fieldCache.put(_field);\n+                        }\n+                    }\n+                    else if (_cacheableFields != NO_CACHE)\n+                    {\n+                        if (_handler.getHeaderCacheSize() <= 0 || (_version != null && _version.getVersion() != HttpVersion.HTTP_1_1.getVersion()))\n+                            // Don't cache any fields\n+                            _cacheableFields = NO_CACHE;\n+                        else\n+                        {\n+                            // This must be the first request seen by this parser, so just create a simple list of\n+                            // headers that can later to converted to _fieldCache if another request comes.\n+                            if (_cacheableFields == null)\n+                                _cacheableFields = new ArrayList<>();\n+                            if (_field == null)\n+                                _field = new HttpField(_header, caseInsensitiveHeader(_headerString, _header.asString()), _valueString);\n+                            _cacheableFields.add(_field);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70542dd121a15d8c9f39898e1fac66deefde3b67"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE5MjM4NA==", "bodyText": "Add braces to this if block.", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r517192384", "createdAt": "2020-11-04T09:07:25Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java", "diffHunk": "@@ -1052,18 +1058,42 @@ else if (_endOfContent == EndOfContent.CHUNKED_CONTENT)\n                     case COOKIE:\n                     case CACHE_CONTROL:\n                     case USER_AGENT:\n-                        addToConnectionTrie = _fieldCache != null && _field == null;\n+                        addToFieldCache = _field == null;\n                         break;\n \n                     default:\n                         break;\n                 }\n \n-                if (addToConnectionTrie && !_fieldCache.isFull() && _header != null && _valueString != null)\n+                // Cache field?\n+                if (addToFieldCache && _header != null && _valueString != null)\n                 {\n-                    if (_field == null)\n-                        _field = new HttpField(_header, caseInsensitiveHeader(_headerString, _header.asString()), _valueString);\n-                    _fieldCache.put(_field);\n+                    if (_fieldCache != null)\n+                    {\n+                        // If a non full cache already exists, then we can add to it.\n+                        if (!_fieldCache.isFull())\n+                        {\n+                            if (_field == null)\n+                                _field = new HttpField(_header, caseInsensitiveHeader(_headerString, _header.asString()), _valueString);\n+                            _fieldCache.put(_field);\n+                        }\n+                    }\n+                    else if (_cacheableFields != NO_CACHE)\n+                    {\n+                        if (_handler.getHeaderCacheSize() <= 0 || (_version != null && _version.getVersion() != HttpVersion.HTTP_1_1.getVersion()))\n+                            // Don't cache any fields\n+                            _cacheableFields = NO_CACHE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70542dd121a15d8c9f39898e1fac66deefde3b67"}, "originalPosition": 126}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5660e2882512de808f6b38196d61978087ffb5f2", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/5660e2882512de808f6b38196d61978087ffb5f2", "committedDate": "2020-11-04T09:17:57Z", "message": "Feedback from review\n\nCreate `HttpHeader.isPseudo()`` method\nimproved clarity with `createFieldCacheIfNeeded()``"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "339c86deac90a51300a84aba48b16f70103b3eaa", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/339c86deac90a51300a84aba48b16f70103b3eaa", "committedDate": "2020-11-04T10:29:35Z", "message": "Feedback from review\n\nOnly defer Trie creation to first cacheable field, not until next request."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MDMzNjE1", "url": "https://github.com/eclipse/jetty.project/pull/5565#pullrequestreview-524033615", "createdAt": "2020-11-05T08:45:23Z", "commit": {"oid": "339c86deac90a51300a84aba48b16f70103b3eaa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo0NToyNFrOHt43NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1MToxMFrOHt5E_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg3OTYwNQ==", "bodyText": "String.contains() is case sensitive, so this test would fail for _valueString=\"Close,Other\", right?\nI think using the previous version was expensive, but it was on the last expression of the || so executed only rarely.", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r517879605", "createdAt": "2020-11-05T08:45:24Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java", "diffHunk": "@@ -1034,14 +1031,14 @@ else if (_endOfContent == EndOfContent.CHUNKED_CONTENT)\n                             _field = new HostPortHttpField(_header,\n                                 _compliances.contains(HttpComplianceSection.FIELD_NAME_CASE_INSENSITIVE) ? _header.asString() : _headerString,\n                                 _valueString);\n-                            addToConnectionTrie = _fieldCache != null;\n+                            addToFieldCache = true;\n                         }\n                         break;\n \n                     case CONNECTION:\n                         // Don't cache headers if not persistent\n-                        if (HttpHeaderValue.CLOSE.is(_valueString) || new QuotedCSV(_valueString).getValues().stream().anyMatch(HttpHeaderValue.CLOSE::is))\n-                            _fieldCache = null;\n+                        if (_handler.getHeaderCacheSize() > 0 && (HttpHeaderValue.CLOSE.is(_valueString) || _valueString.contains(HttpHeaderValue.CLOSE.asString())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339c86deac90a51300a84aba48b16f70103b3eaa"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MTcwNQ==", "bodyText": "If it's empty, should be irrelevant if it's case sensitive, so perhaps we can make this anonymous class a static final?\nMethod isCaseSensitive() is only used internally by the implementation (e.g. by put(...), and since this is the empty implementation it should not matter.\nCan it be moved to the interface, something like Trie.EMPTY?", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r517881705", "createdAt": "2020-11-05T08:48:52Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/AbstractTrie.java", "diffHunk": "@@ -81,4 +82,57 @@ public boolean isCaseInsensitive()\n     {\n         return _caseInsensitive;\n     }\n+\n+    public static <T> Trie<T> emptyTrie(boolean caseInsensitive)\n+    {\n+        return new AbstractTrie<T>(caseInsensitive)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339c86deac90a51300a84aba48b16f70103b3eaa"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MzEzNQ==", "bodyText": "Can't the \"version\" expression be simplified to just: (_version == HttpVersion.HTTP_1_1)?", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r517883135", "createdAt": "2020-11-05T08:51:10Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java", "diffHunk": "@@ -1052,18 +1049,29 @@ else if (_endOfContent == EndOfContent.CHUNKED_CONTENT)\n                     case COOKIE:\n                     case CACHE_CONTROL:\n                     case USER_AGENT:\n-                        addToConnectionTrie = _fieldCache != null && _field == null;\n+                        addToFieldCache = _field == null;\n                         break;\n \n                     default:\n                         break;\n                 }\n \n-                if (addToConnectionTrie && !_fieldCache.isFull() && _header != null && _valueString != null)\n+                // Cache field?\n+                if (addToFieldCache && _header != null && _valueString != null)\n                 {\n-                    if (_field == null)\n-                        _field = new HttpField(_header, caseInsensitiveHeader(_headerString, _header.asString()), _valueString);\n-                    _fieldCache.put(_field);\n+                    if (_fieldCache == null)\n+                    {\n+                        _fieldCache = (_handler.getHeaderCacheSize() > 0 && (_version != null && _version.getVersion() == HttpVersion.HTTP_1_1.getVersion()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339c86deac90a51300a84aba48b16f70103b3eaa"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8396f4ff4b47750d549f1539e2d9e578dac3b13", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/a8396f4ff4b47750d549f1539e2d9e578dac3b13", "committedDate": "2020-11-05T10:14:19Z", "message": "Updates from review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDA1Nzg1", "url": "https://github.com/eclipse/jetty.project/pull/5565#pullrequestreview-525005785", "createdAt": "2020-11-06T09:55:27Z", "commit": {"oid": "a8396f4ff4b47750d549f1539e2d9e578dac3b13"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo1NToyN1rOHunXNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowMTo1NlrOHunl6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0MTQ2MA==", "bodyText": "I would return an empty Set here.", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r518641460", "createdAt": "2020-11-06T09:55:27Z", "author": {"login": "lorban"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Trie.java", "diffHunk": "@@ -131,4 +131,99 @@\n     boolean isCaseInsensitive();\n \n     void clear();\n+\n+    static <T> Trie<T> empty(final boolean caseInsensitive)\n+    {\n+        return new Trie<T>()\n+        {\n+            @Override\n+            public boolean put(String s, Object o)\n+            {\n+                return false;\n+            }\n+\n+            @Override\n+            public boolean put(Object o)\n+            {\n+                return false;\n+            }\n+\n+            @Override\n+            public T remove(String s)\n+            {\n+                return null;\n+            }\n+\n+            @Override\n+            public T get(String s)\n+            {\n+                return null;\n+            }\n+\n+            @Override\n+            public T get(String s, int offset, int len)\n+            {\n+                return null;\n+            }\n+\n+            @Override\n+            public T get(ByteBuffer b)\n+            {\n+                return null;\n+            }\n+\n+            @Override\n+            public T get(ByteBuffer b, int offset, int len)\n+            {\n+                return null;\n+            }\n+\n+            @Override\n+            public T getBest(String s)\n+            {\n+                return null;\n+            }\n+\n+            @Override\n+            public T getBest(String s, int offset, int len)\n+            {\n+                return null;\n+            }\n+\n+            @Override\n+            public T getBest(byte[] b, int offset, int len)\n+            {\n+                return null;\n+            }\n+\n+            @Override\n+            public T getBest(ByteBuffer b, int offset, int len)\n+            {\n+                return null;\n+            }\n+\n+            @Override\n+            public Set<String> keySet()\n+            {\n+                return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8396f4ff4b47750d549f1539e2d9e578dac3b13"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0MjY3Ng==", "bodyText": "This method requires a bit of javadoc to explain what a pseudo header is.", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r518642676", "createdAt": "2020-11-06T09:57:33Z", "author": {"login": "lorban"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpHeader.java", "diffHunk": "@@ -188,6 +195,11 @@ public boolean is(String s)\n         return _string.equalsIgnoreCase(s);\n     }\n \n+    public boolean isPseudo()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8396f4ff4b47750d549f1539e2d9e578dac3b13"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NTIyNQ==", "bodyText": "The getHeaderCacheSize method name is a bit misleading as the ArrayTernaryTrie is going to consume a lot more bytes in heap than the specified size, which doesn't match the HttpConfiguration's managed attribute doc that reads \"The maximum allowed size in bytes for an HTTP header field cache\".", "url": "https://github.com/eclipse/jetty.project/pull/5565#discussion_r518645225", "createdAt": "2020-11-06T10:01:56Z", "author": {"login": "lorban"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java", "diffHunk": "@@ -1052,18 +1050,29 @@ else if (_endOfContent == EndOfContent.CHUNKED_CONTENT)\n                     case COOKIE:\n                     case CACHE_CONTROL:\n                     case USER_AGENT:\n-                        addToConnectionTrie = _fieldCache != null && _field == null;\n+                        addToFieldCache = _field == null;\n                         break;\n \n                     default:\n                         break;\n                 }\n \n-                if (addToConnectionTrie && !_fieldCache.isFull() && _header != null && _valueString != null)\n+                // Cache field?\n+                if (addToFieldCache && _header != null && _valueString != null)\n                 {\n-                    if (_field == null)\n-                        _field = new HttpField(_header, caseInsensitiveHeader(_headerString, _header.asString()), _valueString);\n-                    _fieldCache.put(_field);\n+                    if (_fieldCache == null)\n+                    {\n+                        _fieldCache = (_handler.getHeaderCacheSize() > 0 && (_version != null && _version == HttpVersion.HTTP_1_1))\n+                            ? new ArrayTernaryTrie<>(_handler.getHeaderCacheSize())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8396f4ff4b47750d549f1539e2d9e578dac3b13"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Mzg1MzE2", "url": "https://github.com/eclipse/jetty.project/pull/5565#pullrequestreview-528385316", "createdAt": "2020-11-11T17:28:05Z", "commit": {"oid": "a8396f4ff4b47750d549f1539e2d9e578dac3b13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c2cd2c7c3886132ca8b4adcefd01daf9157ab61", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/7c2cd2c7c3886132ca8b4adcefd01daf9157ab61", "committedDate": "2020-11-11T17:31:18Z", "message": "Merge branch 'jetty-9.4.x' into jetty-9.4.x-5562-improve-field-cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ea412c4a47c16d3acbde7289c3a8c6133b33390", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/1ea412c4a47c16d3acbde7289c3a8c6133b33390", "committedDate": "2020-11-11T17:36:39Z", "message": "Update from review\n\n + more javadoc\n + empty set return"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTYwNjc3", "url": "https://github.com/eclipse/jetty.project/pull/5565#pullrequestreview-529160677", "createdAt": "2020-11-12T14:49:08Z", "commit": {"oid": "1ea412c4a47c16d3acbde7289c3a8c6133b33390"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4993, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}