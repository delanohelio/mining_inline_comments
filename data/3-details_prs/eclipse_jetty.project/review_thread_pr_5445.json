{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTY3NDY0", "number": 5445, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMDo1MTo1MlrOEs-v7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMToxNDoyNVrOEs_OoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjAwODc3OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMDo1MTo1MlrOHgg1QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMTo1Nzo0OFrOHgjDgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg1NDQwMA==", "bodyText": "why setting here and not below?", "url": "https://github.com/eclipse/jetty.project/pull/5445#discussion_r503854400", "createdAt": "2020-10-13T10:51:52Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -461,81 +461,88 @@ public void customize(Connector connector, HttpConfiguration config, Request req\n \n         // Do a single pass through the header fields as it is a more efficient single iteration.\n         Forwarded forwarded = new Forwarded(request, config);\n+        boolean match = false;\n         for (HttpField field : httpFields)\n         {\n             try\n             {\n                 MethodHandle handle = _handles.get(field.getName());\n                 if (handle != null)\n+                {\n+                    match = true;\n                     handle.invoke(forwarded, field);\n+                }\n             }\n             catch (Throwable t)\n             {\n                 onError(field, t);\n             }\n         }\n \n-        String proto = \"http\";\n-\n-        // Is secure status configured from headers?\n-        if (forwarded.isSecure())\n+        if (match)\n         {\n-            // set default to https\n-            proto = config.getSecureScheme();\n-        }\n+            String proto = \"http\";\n \n-        // Set Scheme from configured protocol\n-        if (forwarded._proto != null)\n-        {\n-            proto = forwarded._proto;\n-            request.setScheme(proto);\n-        }\n+            // Is secure status configured from headers?\n+            if (forwarded.isSecure())\n+            {\n+                // set default to https\n+                proto = config.getSecureScheme();\n+            }\n \n-        // Set authority\n-        String host = null;\n-        int port = -1;\n+            // Set Scheme from configured protocol\n+            if (forwarded._proto != null)\n+            {\n+                proto = forwarded._proto;\n+                request.setScheme(proto);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b646ee6b78c5e4e1dff6ddbf641b839360d8a87"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5MDgxOQ==", "bodyText": "The forwarded._proto tracking value is set from 3 different scenarios.\n\nX-Forwarded-Proto: <value> header.\nX-Proxied-Https: on sets it to https.\nForwarding: proto=<value> header.\n\nSo this one that you highlighted is correct.\nThe below action is to handle the not-quite-forwarding-headers oddball cases.\n\n  \n    \n      jetty.project/jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java\n    \n    \n        Lines 731 to 743\n      in\n      0b646ee\n    \n    \n    \n    \n\n        \n          \n           Arguments.of(new Request(\"Proxy-Ssl-Id (setSslIsSecure==true)\") \n        \n\n        \n          \n                   .configureCustomizer((customizer) -> customizer.setSslIsSecure(true)) \n        \n\n        \n          \n                   .headers( \n        \n\n        \n          \n                       \"GET / HTTP/1.1\", \n        \n\n        \n          \n                       \"Host: myhost\", \n        \n\n        \n          \n                       \"Proxy-Ssl-Id: 0123456789abcdef\" \n        \n\n        \n          \n                   ), \n        \n\n        \n          \n               new Expectations() \n        \n\n        \n          \n                   .scheme(\"https\").serverName(\"myhost\").serverPort(443) \n        \n\n        \n          \n                   .requestURL(\"https://myhost/\") \n        \n\n        \n          \n                   .remoteAddr(\"0.0.0.0\").remotePort(0) \n        \n\n        \n          \n                   .sslSession(\"0123456789abcdef\") \n        \n\n        \n          \n           ), \n        \n    \n  \n\n\nWhich has the ForwardingRequestCustomizer.setSslIsSecure(true) which should trigger both the proto/scheme to https and the request.setSecure(true) if the Proxy-Ssl-Id or Proxy-auth-cert headers are present.\nLet me see if I can simplify this a bit.", "url": "https://github.com/eclipse/jetty.project/pull/5445#discussion_r503890819", "createdAt": "2020-10-13T11:57:48Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -461,81 +461,88 @@ public void customize(Connector connector, HttpConfiguration config, Request req\n \n         // Do a single pass through the header fields as it is a more efficient single iteration.\n         Forwarded forwarded = new Forwarded(request, config);\n+        boolean match = false;\n         for (HttpField field : httpFields)\n         {\n             try\n             {\n                 MethodHandle handle = _handles.get(field.getName());\n                 if (handle != null)\n+                {\n+                    match = true;\n                     handle.invoke(forwarded, field);\n+                }\n             }\n             catch (Throwable t)\n             {\n                 onError(field, t);\n             }\n         }\n \n-        String proto = \"http\";\n-\n-        // Is secure status configured from headers?\n-        if (forwarded.isSecure())\n+        if (match)\n         {\n-            // set default to https\n-            proto = config.getSecureScheme();\n-        }\n+            String proto = \"http\";\n \n-        // Set Scheme from configured protocol\n-        if (forwarded._proto != null)\n-        {\n-            proto = forwarded._proto;\n-            request.setScheme(proto);\n-        }\n+            // Is secure status configured from headers?\n+            if (forwarded.isSecure())\n+            {\n+                // set default to https\n+                proto = config.getSecureScheme();\n+            }\n \n-        // Set authority\n-        String host = null;\n-        int port = -1;\n+            // Set Scheme from configured protocol\n+            if (forwarded._proto != null)\n+            {\n+                proto = forwarded._proto;\n+                request.setScheme(proto);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg1NDQwMA=="}, "originalCommit": {"oid": "0b646ee6b78c5e4e1dff6ddbf641b839360d8a87"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjAxNTQxOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMDo1Mzo0N1rOHgg5SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMDo1Mzo0N1rOHgg5SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg1NTQzMg==", "bodyText": "I'm don't think that just because it arrives on the secure port is sufficient to make it secure.  Some ports might do both secure and insecure requests.", "url": "https://github.com/eclipse/jetty.project/pull/5445#discussion_r503855432", "createdAt": "2020-10-13T10:53:47Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -461,81 +461,88 @@ public void customize(Connector connector, HttpConfiguration config, Request req\n \n         // Do a single pass through the header fields as it is a more efficient single iteration.\n         Forwarded forwarded = new Forwarded(request, config);\n+        boolean match = false;\n         for (HttpField field : httpFields)\n         {\n             try\n             {\n                 MethodHandle handle = _handles.get(field.getName());\n                 if (handle != null)\n+                {\n+                    match = true;\n                     handle.invoke(forwarded, field);\n+                }\n             }\n             catch (Throwable t)\n             {\n                 onError(field, t);\n             }\n         }\n \n-        String proto = \"http\";\n-\n-        // Is secure status configured from headers?\n-        if (forwarded.isSecure())\n+        if (match)\n         {\n-            // set default to https\n-            proto = config.getSecureScheme();\n-        }\n+            String proto = \"http\";\n \n-        // Set Scheme from configured protocol\n-        if (forwarded._proto != null)\n-        {\n-            proto = forwarded._proto;\n-            request.setScheme(proto);\n-        }\n+            // Is secure status configured from headers?\n+            if (forwarded.isSecure())\n+            {\n+                // set default to https\n+                proto = config.getSecureScheme();\n+            }\n \n-        // Set authority\n-        String host = null;\n-        int port = -1;\n+            // Set Scheme from configured protocol\n+            if (forwarded._proto != null)\n+            {\n+                proto = forwarded._proto;\n+                request.setScheme(proto);\n+            }\n \n-        // Use authority from headers, if configured.\n-        if (forwarded._authority != null)\n-        {\n-            host = forwarded._authority._host;\n-            port = forwarded._authority._port;\n-        }\n+            // Set authority\n+            String host = null;\n+            int port = -1;\n \n-        // Fall back to request metadata if needed.\n-        HttpURI requestURI = request.getMetaData().getURI();\n-        if (host == null)\n-        {\n-            host = requestURI.getHost();\n-        }\n-        if (port == MutableHostPort.UNSET) // is unset by headers\n-        {\n-            port = requestURI.getPort();\n-        }\n-        // Don't change port if port == IMPLIED.\n+            // Use authority from headers, if configured.\n+            if (forwarded._authority != null)\n+            {\n+                host = forwarded._authority._host;\n+                port = forwarded._authority._port;\n+            }\n \n-        // Update authority if different from metadata\n-        if (!host.equalsIgnoreCase(requestURI.getHost()) ||\n-            port != requestURI.getPort())\n-        {\n-            httpFields.put(new HostPortHttpField(host, port));\n-            request.setAuthority(host, port);\n-        }\n+            // Fall back to request metadata if needed.\n+            HttpURI requestURI = request.getMetaData().getURI();\n+            if (host == null)\n+            {\n+                host = requestURI.getHost();\n+            }\n+            if (port == MutableHostPort.UNSET) // is unset by headers\n+            {\n+                port = requestURI.getPort();\n+            }\n+            // Don't change port if port == IMPLIED.\n \n-        // Set secure status\n-        if (forwarded.isSecure() ||\n-            proto.equalsIgnoreCase(config.getSecureScheme()) ||\n-            port == getSecurePort(config))\n-        {\n-            request.setSecure(true);\n-            request.setScheme(proto);\n-        }\n+            // Update authority if different from metadata\n+            if (!host.equalsIgnoreCase(requestURI.getHost()) ||\n+                port != requestURI.getPort())\n+            {\n+                httpFields.put(new HostPortHttpField(host, port));\n+                request.setAuthority(host, port);\n+            }\n \n-        // Set Remote Address\n-        if (forwarded.hasFor())\n-        {\n-            int forPort = forwarded._for._port > 0 ? forwarded._for._port : request.getRemotePort();\n-            request.setRemoteAddr(InetSocketAddress.createUnresolved(forwarded._for._host, forPort));\n+            // Set secure status\n+            if (forwarded.isSecure() ||\n+                proto.equalsIgnoreCase(config.getSecureScheme()) ||\n+                port == getSecurePort(config))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b646ee6b78c5e4e1dff6ddbf641b839360d8a87"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjA4NzM2OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMToxNDoyNVrOHghkrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMTo0MDoxMlrOHgictg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg2NjU0Mg==", "bodyText": "I don't think this match logic should be required.   There are many headers and some are orthogonal to others, so the logic below must be robust and can't be gated by a match, which may be for an unrelated header.\nIn the OPs case, proto must not be changed unless there is an explicit header that changes it - either giving a proto or forcing secure.\nPerhaps this match is an optimisation to avoid several ifs below, but I don't think it is necessary as this customizer is typically only deployed when all request will have such a header.", "url": "https://github.com/eclipse/jetty.project/pull/5445#discussion_r503866542", "createdAt": "2020-10-13T11:14:25Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -461,81 +461,88 @@ public void customize(Connector connector, HttpConfiguration config, Request req\n \n         // Do a single pass through the header fields as it is a more efficient single iteration.\n         Forwarded forwarded = new Forwarded(request, config);\n+        boolean match = false;\n         for (HttpField field : httpFields)\n         {\n             try\n             {\n                 MethodHandle handle = _handles.get(field.getName());\n                 if (handle != null)\n+                {\n+                    match = true;\n                     handle.invoke(forwarded, field);\n+                }\n             }\n             catch (Throwable t)\n             {\n                 onError(field, t);\n             }\n         }\n \n-        String proto = \"http\";\n-\n-        // Is secure status configured from headers?\n-        if (forwarded.isSecure())\n+        if (match)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b646ee6b78c5e4e1dff6ddbf641b839360d8a87"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4MDg4Ng==", "bodyText": "The match logic here (in jetty-9.4.x) was taken from jetty-10.0.x.\nhttps://github.com/eclipse/jetty.project/blame/jetty-10.0.x/jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java#L464-L482\nThe idea behind it is that if there's no Forwarding headers (even those not-quite-forwarding headers X-Proxied-Https, Proxy-auth-cert, and Proxy-ssl-id that ForwardingRequestCustomizer also pays attention to) then there should be no action taken by ForwardingRequestCustomizer, as the incoming request is not based on forwarding.", "url": "https://github.com/eclipse/jetty.project/pull/5445#discussion_r503880886", "createdAt": "2020-10-13T11:40:12Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -461,81 +461,88 @@ public void customize(Connector connector, HttpConfiguration config, Request req\n \n         // Do a single pass through the header fields as it is a more efficient single iteration.\n         Forwarded forwarded = new Forwarded(request, config);\n+        boolean match = false;\n         for (HttpField field : httpFields)\n         {\n             try\n             {\n                 MethodHandle handle = _handles.get(field.getName());\n                 if (handle != null)\n+                {\n+                    match = true;\n                     handle.invoke(forwarded, field);\n+                }\n             }\n             catch (Throwable t)\n             {\n                 onError(field, t);\n             }\n         }\n \n-        String proto = \"http\";\n-\n-        // Is secure status configured from headers?\n-        if (forwarded.isSecure())\n+        if (match)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg2NjU0Mg=="}, "originalCommit": {"oid": "0b646ee6b78c5e4e1dff6ddbf641b839360d8a87"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2279, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}