{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1ODY3NjI3", "number": 5789, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNzoyMToyNVrOFHbOdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNzoyMToyNVrOFHbOdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzMwNDIwOnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/statistic/RateCounter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNzoyMToyNVrOII5tNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNTowMToxMFrOIJMUdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIwNDk4MQ==", "bodyText": "Is the total really necessary in this class?\nIt is entirely independent so no benefit being in here.  If you just want a rate you don't need it, if you also want the total then just have a LongAdder in addition to a RateCounter.", "url": "https://github.com/eclipse/jetty.project/pull/5789#discussion_r546204981", "createdAt": "2020-12-19T07:21:25Z", "author": {"login": "gregw"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/statistic/RateCounter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.util.statistic;\n+\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+import java.util.concurrent.atomic.LongAdder;\n+\n+/**\n+ * Gives the same basic functionality of {@link LongAdder} but allows you to check\n+ * the rate of increase of the sum since the last call to {@link #getRate()};\n+ */\n+public class RateCounter\n+{\n+    private final LongAdder _total = new LongAdder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a940fc18111daf11e4965a12c3e330b1f694267"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUwOTk0MA==", "bodyText": "I removed the total from the RateCounter.\nYou now have to explicitly call  RateCounter.reset() to reset it, it doesn't do this automatically on the RateCounter.getRate() call anymore, the reset is called from the ConnectionStatistics.getRate() methods.", "url": "https://github.com/eclipse/jetty.project/pull/5789#discussion_r546509940", "createdAt": "2020-12-21T05:01:10Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/statistic/RateCounter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.util.statistic;\n+\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+import java.util.concurrent.atomic.LongAdder;\n+\n+/**\n+ * Gives the same basic functionality of {@link LongAdder} but allows you to check\n+ * the rate of increase of the sum since the last call to {@link #getRate()};\n+ */\n+public class RateCounter\n+{\n+    private final LongAdder _total = new LongAdder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIwNDk4MQ=="}, "originalCommit": {"oid": "8a940fc18111daf11e4965a12c3e330b1f694267"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2085, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}