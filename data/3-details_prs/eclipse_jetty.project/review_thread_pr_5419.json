{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNjQ2OTc2", "number": 5419, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozODowNlrOEsjdgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTo0MToyNVrOEsji5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTUzNzk0OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozODowNlrOHf29uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozODowNlrOHf29uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE2ODQ0MA==", "bodyText": "remove this comment", "url": "https://github.com/eclipse/jetty.project/pull/5419#discussion_r503168440", "createdAt": "2020-10-12T09:38:06Z", "author": {"login": "gregw"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -783,6 +794,71 @@ public void testConfiguredBehavior(Request request, Expectations expectations) t\n         expectations.accept(actual);\n     }\n \n+    public static Stream<Arguments> nonStandardPortCases()\n+    {\n+        return Stream.of(\n+            // RFC7239 Tests with https.\n+            Arguments.of(new Request(\"RFC7239 with https and h2\")\n+                    .headers(\n+                        \"GET /test/forwarded.jsp HTTP/1.1\",\n+                        \"Host: web.euro.de\",\n+                        \"Forwarded: for=192.168.2.6;host=web.euro.de;proto=https;proto-version=h2\"\n+                        // Client: https://web.euro.de/test/forwarded.jsp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149f389fd8a2e5f82511ceb492220edbf96839d8"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTUzODczOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozODoxOFrOHf2-Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozODoxOFrOHf2-Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE2ODU1OQ==", "bodyText": "remove this comment", "url": "https://github.com/eclipse/jetty.project/pull/5419#discussion_r503168559", "createdAt": "2020-10-12T09:38:18Z", "author": {"login": "gregw"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -783,6 +794,71 @@ public void testConfiguredBehavior(Request request, Expectations expectations) t\n         expectations.accept(actual);\n     }\n \n+    public static Stream<Arguments> nonStandardPortCases()\n+    {\n+        return Stream.of(\n+            // RFC7239 Tests with https.\n+            Arguments.of(new Request(\"RFC7239 with https and h2\")\n+                    .headers(\n+                        \"GET /test/forwarded.jsp HTTP/1.1\",\n+                        \"Host: web.euro.de\",\n+                        \"Forwarded: for=192.168.2.6;host=web.euro.de;proto=https;proto-version=h2\"\n+                        // Client: https://web.euro.de/test/forwarded.jsp\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"web.euro.de\").serverPort(443)\n+                    .requestURL(\"https://web.euro.de/test/forwarded.jsp\")\n+                    .remoteAddr(\"192.168.2.6\").remotePort(0)\n+            ),\n+            // RFC7239 Tests with https and proxy provided port\n+            Arguments.of(new Request(\"RFC7239 with proxy provided port on https and h2\")\n+                    .headers(\n+                        \"GET /test/forwarded.jsp HTTP/1.1\",\n+                        \"Host: web.euro.de:9443\",\n+                        \"Forwarded: for=192.168.2.6;host=web.euro.de:9443;proto=https;proto-version=h2\"\n+                        // Client: https://web.euro.de:9443/test/forwarded.jsp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149f389fd8a2e5f82511ceb492220edbf96839d8"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTU0MTYyOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozODo1NVrOHf2_7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozODo1NVrOHf2_7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE2OTAwNg==", "bodyText": "Use another domain name like web.example.org", "url": "https://github.com/eclipse/jetty.project/pull/5419#discussion_r503169006", "createdAt": "2020-10-12T09:38:55Z", "author": {"login": "gregw"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -783,6 +794,71 @@ public void testConfiguredBehavior(Request request, Expectations expectations) t\n         expectations.accept(actual);\n     }\n \n+    public static Stream<Arguments> nonStandardPortCases()\n+    {\n+        return Stream.of(\n+            // RFC7239 Tests with https.\n+            Arguments.of(new Request(\"RFC7239 with https and h2\")\n+                    .headers(\n+                        \"GET /test/forwarded.jsp HTTP/1.1\",\n+                        \"Host: web.euro.de\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149f389fd8a2e5f82511ceb492220edbf96839d8"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTU0Mjc2OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozOToxNlrOHf3AuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTo0Mjo0MFrOHf3JKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE2OTIwOA==", "bodyText": "I wonder why we are setting the input buffer  size in this test?", "url": "https://github.com/eclipse/jetty.project/pull/5419#discussion_r503169208", "createdAt": "2020-10-12T09:39:16Z", "author": {"login": "gregw"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -82,6 +84,15 @@ public void init() throws Exception\n         connector = new LocalConnector(server, http);\n         server.addConnector(connector);\n \n+        // Alternate behavior Connector\n+        HttpConnectionFactory httpAlt = new HttpConnectionFactory();\n+        httpAlt.setInputBufferSize(1024);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149f389fd8a2e5f82511ceb492220edbf96839d8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE3MTM2OQ==", "bodyText": "no clue, i'll remove it and see what happens", "url": "https://github.com/eclipse/jetty.project/pull/5419#discussion_r503171369", "createdAt": "2020-10-12T09:42:40Z", "author": {"login": "joakime"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -82,6 +84,15 @@ public void init() throws Exception\n         connector = new LocalConnector(server, http);\n         server.addConnector(connector);\n \n+        // Alternate behavior Connector\n+        HttpConnectionFactory httpAlt = new HttpConnectionFactory();\n+        httpAlt.setInputBufferSize(1024);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE2OTIwOA=="}, "originalCommit": {"oid": "149f389fd8a2e5f82511ceb492220edbf96839d8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTU1MTc0OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTo0MToyNVrOHf3GBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTo0Mjo1MlrOHf3JsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE3MDU2Nw==", "bodyText": "can you make this comment not look like commented out code.  It is good info to have, but I found the format confusing", "url": "https://github.com/eclipse/jetty.project/pull/5419#discussion_r503170567", "createdAt": "2020-10-12T09:41:25Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -512,12 +512,7 @@ public void customize(Connector connector, HttpConfiguration config, Request req\n         {\n             port = requestURI.getPort();\n         }\n-        if (port == MutableHostPort.IMPLIED) // is implied\n-        {\n-            // get Implied port (from protocol / scheme) and HttpConfiguration\n-            int defaultPort = 80;\n-            port = proto.equalsIgnoreCase(config.getSecureScheme()) ? getSecurePort(config) : defaultPort;\n-        }\n+        // if (port == MutableHostPort.IMPLIED) // is implied, no port change needed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149f389fd8a2e5f82511ceb492220edbf96839d8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE3MTUwNA==", "bodyText": "True. will fix.", "url": "https://github.com/eclipse/jetty.project/pull/5419#discussion_r503171504", "createdAt": "2020-10-12T09:42:52Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -512,12 +512,7 @@ public void customize(Connector connector, HttpConfiguration config, Request req\n         {\n             port = requestURI.getPort();\n         }\n-        if (port == MutableHostPort.IMPLIED) // is implied\n-        {\n-            // get Implied port (from protocol / scheme) and HttpConfiguration\n-            int defaultPort = 80;\n-            port = proto.equalsIgnoreCase(config.getSecureScheme()) ? getSecurePort(config) : defaultPort;\n-        }\n+        // if (port == MutableHostPort.IMPLIED) // is implied, no port change needed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE3MDU2Nw=="}, "originalCommit": {"oid": "149f389fd8a2e5f82511ceb492220edbf96839d8"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2273, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}