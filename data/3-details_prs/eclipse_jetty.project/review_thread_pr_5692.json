{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0Nzk0MTIy", "number": 5692, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODowNDo1OVrOE7qIAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo1NzoyMlrOE8JIew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTkxNjE3OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODowNDo1OVrOH3bY4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzo1ODoyMlrOH4Ok4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4MjQ2Nw==", "bodyText": "I think this method is correct, but I think it would read better as:\npublic boolean isReady()\n{\n    HttpInput.Content content = nextTransformedContent();\n    if (content != null)\n    {\n        // TODO do we really need to call onContentAdded in this case??? I don't think so as we have not called onReadUnready\n        return true;\n    }\n            \n   _httpChannel.getState().onReadUnready();\n    while (_httpChannel.needContent())\n    {\n        HttpInput.Content content = nextTransformedContent();\n        if (content != null)\n        {\n            _httpChannel.getState().onContentAdded();\n            return true;\n        }\n        _httpChannel.getState().onReadUnready();\n    }\n\n    return false;\n}", "url": "https://github.com/eclipse/jetty.project/pull/5692#discussion_r527882467", "createdAt": "2020-11-20T18:04:59Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "diffHunk": "@@ -222,24 +222,39 @@ public boolean isReady()\n         if (content == null)\n         {\n             _httpChannel.getState().onReadUnready();\n-            if (_httpChannel.needContent())\n+            while (true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4654335fdbcbb51e2f6981a556c9ab513d82135b"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODUyODAyNA==", "bodyText": "@gregw Regarding your TODO, yes you must call onContentAdded in this case. Imagine a servlet calling isReady twice. The first time false is returned but the 2nd time true is returned. If you do not call onContentAdded to switch the state to READY, it'll be stuck at UNREADY which will cause havoc.\nOh, and I also added in the javadoc of ContentProducer.isReady that After this call, state can be either of UNREADY or READY as the state cannot be left IDLE after isReady is called.", "url": "https://github.com/eclipse/jetty.project/pull/5692#discussion_r528528024", "createdAt": "2020-11-23T08:17:30Z", "author": {"login": "lorban"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "diffHunk": "@@ -222,24 +222,39 @@ public boolean isReady()\n         if (content == null)\n         {\n             _httpChannel.getState().onReadUnready();\n-            if (_httpChannel.needContent())\n+            while (true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4MjQ2Nw=="}, "originalCommit": {"oid": "4654335fdbcbb51e2f6981a556c9ab513d82135b"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODUzODMyOA==", "bodyText": "@lorban But if isReady() has returned false, then regardless of it being called another time there is a scheduling action that will take place behind the scenes to make sure onDataAvailable is called when data becomes available.  Surely it is that action that will call onContentAdded.      Can you write a test case to demonstrate why this call is needed?", "url": "https://github.com/eclipse/jetty.project/pull/5692#discussion_r528538328", "createdAt": "2020-11-23T08:38:02Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "diffHunk": "@@ -222,24 +222,39 @@ public boolean isReady()\n         if (content == null)\n         {\n             _httpChannel.getState().onReadUnready();\n-            if (_httpChannel.needContent())\n+            while (true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4MjQ2Nw=="}, "originalCommit": {"oid": "4654335fdbcbb51e2f6981a556c9ab513d82135b"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcyMTEyMw==", "bodyText": "I've opened #5704 to track this.", "url": "https://github.com/eclipse/jetty.project/pull/5692#discussion_r528721123", "createdAt": "2020-11-23T13:58:22Z", "author": {"login": "lorban"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "diffHunk": "@@ -222,24 +222,39 @@ public boolean isReady()\n         if (content == null)\n         {\n             _httpChannel.getState().onReadUnready();\n-            if (_httpChannel.needContent())\n+            while (true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4MjQ2Nw=="}, "originalCommit": {"oid": "4654335fdbcbb51e2f6981a556c9ab513d82135b"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDk4OTUwOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo1NTozN1rOH4GHzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMTowMzo0NFrOH4IkPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MjYwNA==", "bodyText": "Can you add a TODO here to review if this is needed.... or @lorban  can you open an issue to check.  Eitherway, is unrelated to this PR", "url": "https://github.com/eclipse/jetty.project/pull/5692#discussion_r528582604", "createdAt": "2020-11-23T09:55:37Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "diffHunk": "@@ -219,39 +219,43 @@ public void reclaim(HttpInput.Content content)\n     public boolean isReady()\n     {\n         HttpInput.Content content = nextTransformedContent();\n-        if (content == null)\n+        if (content != null)\n+        {\n+            if (LOG.isDebugEnabled())\n+                LOG.debug(\"isReady(), got transformed content {} {}\", content, this);\n+            _httpChannel.getState().onContentAdded();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ac0af4a76a91b6b78627a37e772d51cabe7b363"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyMjY1Mw==", "bodyText": "I suspect there's already enough coverage to tell us if omitting the onContentAdded() call here would fail anything, but it's an experiment we ought to do. I've opened #5704 to track this.", "url": "https://github.com/eclipse/jetty.project/pull/5692#discussion_r528622653", "createdAt": "2020-11-23T11:03:44Z", "author": {"login": "lorban"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "diffHunk": "@@ -219,39 +219,43 @@ public void reclaim(HttpInput.Content content)\n     public boolean isReady()\n     {\n         HttpInput.Content content = nextTransformedContent();\n-        if (content == null)\n+        if (content != null)\n+        {\n+            if (LOG.isDebugEnabled())\n+                LOG.debug(\"isReady(), got transformed content {} {}\", content, this);\n+            _httpChannel.getState().onContentAdded();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MjYwNA=="}, "originalCommit": {"oid": "1ac0af4a76a91b6b78627a37e772d51cabe7b363"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDk5NjQzOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOTo1NzoyMlrOH4GMNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDo1Mzo1OFrOH4IOzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MzczMg==", "bodyText": "So @lorban just double checking that we don't need to call onReadUnready in the body of this loop.... because onContentAdded is not called if we loop.", "url": "https://github.com/eclipse/jetty.project/pull/5692#discussion_r528583732", "createdAt": "2020-11-23T09:57:22Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "diffHunk": "@@ -219,39 +219,43 @@ public void reclaim(HttpInput.Content content)\n     public boolean isReady()\n     {\n         HttpInput.Content content = nextTransformedContent();\n-        if (content == null)\n+        if (content != null)\n+        {\n+            if (LOG.isDebugEnabled())\n+                LOG.debug(\"isReady(), got transformed content {} {}\", content, this);\n+            _httpChannel.getState().onContentAdded();\n+            return true;\n+        }\n+\n+        _httpChannel.getState().onReadUnready();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ac0af4a76a91b6b78627a37e772d51cabe7b363"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxNzE2NQ==", "bodyText": "onReadUnready has no side effect, it only changes the state to UNREADY.\nWe have to be in UNREADY state before the call to needContent() if it ever returns false, but we do not need to if it returns true. So when needContent() returns true, the transition to UNREADY was unnecessary, but harmless as it gets changed to READY before any other thread can see the state.\nSo calling onReadUnready() in the loop is useless, we just need to make sure we're in UNREADY state before we call needContent() and we're good to go.", "url": "https://github.com/eclipse/jetty.project/pull/5692#discussion_r528617165", "createdAt": "2020-11-23T10:53:58Z", "author": {"login": "lorban"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContentProducer.java", "diffHunk": "@@ -219,39 +219,43 @@ public void reclaim(HttpInput.Content content)\n     public boolean isReady()\n     {\n         HttpInput.Content content = nextTransformedContent();\n-        if (content == null)\n+        if (content != null)\n+        {\n+            if (LOG.isDebugEnabled())\n+                LOG.debug(\"isReady(), got transformed content {} {}\", content, this);\n+            _httpChannel.getState().onContentAdded();\n+            return true;\n+        }\n+\n+        _httpChannel.getState().onReadUnready();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MzczMg=="}, "originalCommit": {"oid": "1ac0af4a76a91b6b78627a37e772d51cabe7b363"}, "originalPosition": 127}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2149, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}