{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMDM2MjQ0", "number": 5514, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzozMjo0M1rOEyWnUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxMToxMFrOEyddtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjM0NzY5OnYy", "diffSide": "RIGHT", "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzozMjo0M1rOHo8V9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzozMjo0M1rOHo8V9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY5Mzc1MQ==", "bodyText": "This doesn't take into account the potential numerical overflow of the timeout timestamp.", "url": "https://github.com/eclipse/jetty.project/pull/5514#discussion_r512693751", "createdAt": "2020-10-27T13:32:43Z", "author": {"login": "lorban"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "diffHunk": "@@ -1229,36 +1244,48 @@ public UnavailableServlet(UnavailableException unavailableException, Servlet ser\n             }\n             else\n             {\n-                _servlet = servlet;\n-                _available = System.nanoTime() + TimeUnit.SECONDS.toNanos(unavailableException.getUnavailableSeconds());\n+                _unavailableServlet = servlet;\n+                _available.set(System.nanoTime() + TimeUnit.SECONDS.toNanos(unavailableException.getUnavailableSeconds()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58afa75aba52b1f80f066651276172725fceda40"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjM0ODc0OnYy", "diffSide": "RIGHT", "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzozMjo1NVrOHo8WlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzozMjo1NVrOHo8WlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY5MzkwOA==", "bodyText": "This doesn't take into account the potential numerical overflow of the timeout timestamp.", "url": "https://github.com/eclipse/jetty.project/pull/5514#discussion_r512693908", "createdAt": "2020-10-27T13:32:55Z", "author": {"login": "lorban"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "diffHunk": "@@ -1229,36 +1244,48 @@ public UnavailableServlet(UnavailableException unavailableException, Servlet ser\n             }\n             else\n             {\n-                _servlet = servlet;\n-                _available = System.nanoTime() + TimeUnit.SECONDS.toNanos(unavailableException.getUnavailableSeconds());\n+                _unavailableServlet = servlet;\n+                _available.set(System.nanoTime() + TimeUnit.SECONDS.toNanos(unavailableException.getUnavailableSeconds()));\n             }\n         }\n \n         @Override\n         public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException\n         {\n-            if (_available == -1)\n-                ((HttpServletResponse)res).sendError(HttpServletResponse.SC_NOT_FOUND);\n-            else if (System.nanoTime() < _available)\n-                ((HttpServletResponse)res).sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);\n-            else\n+            while (true)\n             {\n-                synchronized (ServletHolder.this)\n+                long available = _available.get();\n+                if (available < 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58afa75aba52b1f80f066651276172725fceda40"}, "originalPosition": 180}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjM0OTUyOnYy", "diffSide": "RIGHT", "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzozMzowNVrOHo8XFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzozMzowNVrOHo8XFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY5NDAzNg==", "bodyText": "This doesn't take into account the potential numerical overflow of the timeout timestamp.", "url": "https://github.com/eclipse/jetty.project/pull/5514#discussion_r512694036", "createdAt": "2020-10-27T13:33:05Z", "author": {"login": "lorban"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "diffHunk": "@@ -1229,36 +1244,48 @@ public UnavailableServlet(UnavailableException unavailableException, Servlet ser\n             }\n             else\n             {\n-                _servlet = servlet;\n-                _available = System.nanoTime() + TimeUnit.SECONDS.toNanos(unavailableException.getUnavailableSeconds());\n+                _unavailableServlet = servlet;\n+                _available.set(System.nanoTime() + TimeUnit.SECONDS.toNanos(unavailableException.getUnavailableSeconds()));\n             }\n         }\n \n         @Override\n         public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException\n         {\n-            if (_available == -1)\n-                ((HttpServletResponse)res).sendError(HttpServletResponse.SC_NOT_FOUND);\n-            else if (System.nanoTime() < _available)\n-                ((HttpServletResponse)res).sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);\n-            else\n+            while (true)\n             {\n-                synchronized (ServletHolder.this)\n+                long available = _available.get();\n+                if (available < 0)\n+                {\n+                    ((HttpServletResponse)res).sendError(HttpServletResponse.SC_NOT_FOUND);\n+                    return;\n+                }\n+\n+                if (available == 0 || System.nanoTime() < available)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58afa75aba52b1f80f066651276172725fceda40"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQyNzc3OnYy", "diffSide": "RIGHT", "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzowMTozM1rOHpG8cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzowNToxNVrOHpHGyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2NzQ0Mw==", "bodyText": "Can we come up with a solution that removes the while(true) - I think these are best avoided if possible.", "url": "https://github.com/eclipse/jetty.project/pull/5514#discussion_r512867443", "createdAt": "2020-10-27T17:01:33Z", "author": {"login": "janbartel"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "diffHunk": "@@ -1229,36 +1237,52 @@ public UnavailableServlet(UnavailableException unavailableException, Servlet ser\n             }\n             else\n             {\n-                _servlet = servlet;\n-                _available = System.nanoTime() + TimeUnit.SECONDS.toNanos(unavailableException.getUnavailableSeconds());\n+                _unavailableServlet = servlet;\n+                long start = System.nanoTime();\n+                while (start == 0)\n+                    start = System.nanoTime();\n+                _unavailableStart = new AtomicLong(start);\n             }\n         }\n \n         @Override\n         public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException\n         {\n-            if (_available == -1)\n-                ((HttpServletResponse)res).sendError(HttpServletResponse.SC_NOT_FOUND);\n-            else if (System.nanoTime() < _available)\n-                ((HttpServletResponse)res).sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);\n-            else\n+            while (true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bc3ebce5ac257007e1b9d1b1bc6042bb5417144"}, "originalPosition": 211}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MDA5MA==", "bodyText": "Will do, because I can in this situation.  However in general, the while(true) pattern is the best and simplest approach for atomic state machines.   More often than not, we've been wrong when we remove them... but I'm 99.9% sure in this case that we have it right.", "url": "https://github.com/eclipse/jetty.project/pull/5514#discussion_r512870090", "createdAt": "2020-10-27T17:05:15Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "diffHunk": "@@ -1229,36 +1237,52 @@ public UnavailableServlet(UnavailableException unavailableException, Servlet ser\n             }\n             else\n             {\n-                _servlet = servlet;\n-                _available = System.nanoTime() + TimeUnit.SECONDS.toNanos(unavailableException.getUnavailableSeconds());\n+                _unavailableServlet = servlet;\n+                long start = System.nanoTime();\n+                while (start == 0)\n+                    start = System.nanoTime();\n+                _unavailableStart = new AtomicLong(start);\n             }\n         }\n \n         @Override\n         public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException\n         {\n-            if (_available == -1)\n-                ((HttpServletResponse)res).sendError(HttpServletResponse.SC_NOT_FOUND);\n-            else if (System.nanoTime() < _available)\n-                ((HttpServletResponse)res).sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);\n-            else\n+            while (true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2NzQ0Mw=="}, "originalCommit": {"oid": "8bc3ebce5ac257007e1b9d1b1bc6042bb5417144"}, "originalPosition": 211}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQ2OTk4OnYy", "diffSide": "RIGHT", "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxMToxMFrOHpHWrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwOTowNzo0OVrOHpgOGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3NDE1Nw==", "bodyText": "Actually, this isn't right:  we should not call destroyInstance() because this will call servlet.destroy(), but at this stage we will not have called servlet.init().", "url": "https://github.com/eclipse/jetty.project/pull/5514#discussion_r512874157", "createdAt": "2020-10-27T17:11:10Z", "author": {"login": "janbartel"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "diffHunk": "@@ -557,33 +555,35 @@ private void makeUnavailable(final Throwable e)\n     private synchronized void initServlet()\n         throws ServletException\n     {\n+        Servlet servlet = _servlet;\n         try\n         {\n-            if (_servlet == null)\n-                _servlet = getInstance();\n-            if (_servlet == null)\n-                _servlet = newInstance();\n+            if (servlet == null || servlet instanceof UnavailableServlet)\n+                servlet = getInstance();\n+            if (servlet == null)\n+                servlet = newInstance();\n+            if (servlet instanceof javax.servlet.SingleThreadModel)\n+            {\n+                destroyInstance(servlet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "546fc57b78c3070453333b4f41aa3a50aae59768"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4MTU2MA==", "bodyText": "This has opened a rats nest  of issues!   It appears  that we do call predestroy on instances that have been passed in.  As we have tests for this potentially wrong behaviour, I think I will not fully address this in 9, but review during the merge to 10.\nFor now, I have split out a predestroy method, that is called on instances that have not yet been fully initialisd.", "url": "https://github.com/eclipse/jetty.project/pull/5514#discussion_r513281560", "createdAt": "2020-10-28T09:07:49Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHolder.java", "diffHunk": "@@ -557,33 +555,35 @@ private void makeUnavailable(final Throwable e)\n     private synchronized void initServlet()\n         throws ServletException\n     {\n+        Servlet servlet = _servlet;\n         try\n         {\n-            if (_servlet == null)\n-                _servlet = getInstance();\n-            if (_servlet == null)\n-                _servlet = newInstance();\n+            if (servlet == null || servlet instanceof UnavailableServlet)\n+                servlet = getInstance();\n+            if (servlet == null)\n+                servlet = newInstance();\n+            if (servlet instanceof javax.servlet.SingleThreadModel)\n+            {\n+                destroyInstance(servlet);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3NDE1Nw=="}, "originalCommit": {"oid": "546fc57b78c3070453333b4f41aa3a50aae59768"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2191, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}