{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTQwMjE1", "number": 5400, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMDowNDoxMFrOEskGbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMDowNjo0M1rOEskKBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTY0MjcwOnYy", "diffSide": "RIGHT", "path": "jetty-quickstart/src/main/java/org/eclipse/jetty/quickstart/ExtraXmlDescriptorProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMDowNDoxMFrOHf39Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMDowNDoxMFrOHf39Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4NDY3MA==", "bodyText": "Can we actually use the _originAttribute when precomputing like:\norigin = StringUtil.isBlank(_originAttribute)) ? null : (\"  <!-- \" +  _originAttribute + \"=\" + descriptor + \" -->\\n\")\nand then the code here can just be:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!StringUtil.isBlank(_originAttribute))\n          \n          \n            \n                    if (_origin != null)", "url": "https://github.com/eclipse/jetty.project/pull/5400#discussion_r503184670", "createdAt": "2020-10-12T10:04:10Z", "author": {"login": "gregw"}, "path": "jetty-quickstart/src/main/java/org/eclipse/jetty/quickstart/ExtraXmlDescriptorProcessor.java", "diffHunk": "@@ -68,11 +68,19 @@ public void end(WebAppContext context, Descriptor descriptor)\n     {\n     }\n \n+    public void setOriginAttribute(String name)\n+    {\n+        _originAttribute = name;\n+    }\n+    \n     public void saveSnippet(WebAppContext context, Descriptor descriptor, XmlParser.Node node)\n         throws Exception\n     {\n+        //Note: we have to output the origin as a comment field instead of\n+        //as an attribute like the other other elements because\n+        //we are copying these elements _verbatim_ from the descriptor\n         LOG.debug(\"save {}\", node.getTag());\n-        if (_showOrigin)\n+        if (!StringUtil.isBlank(_originAttribute))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3dc2b785b9d0f95225e00c9f891fa18c6b1d174"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTY1MTg4OnYy", "diffSide": "RIGHT", "path": "jetty-annotations/src/main/java/org/eclipse/jetty/annotations/WebFilterAnnotation.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMDowNjo0M1rOHf4C1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzoyMzoxM1rOHhSx8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4NjEzMg==", "bodyText": "It is good to add the hashCode, but can we do it with with @hex rather than .long\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        metaData.setOrigin(name + \".filter.mapping.\" + mapping.hashCode(), filterAnnotation, clazz);\n          \n          \n            \n                        metaData.setOrigin(String.format(\"%s.filter.mapping@%x\", name, mapping.hashCode()), filterAnnotation, clazz);", "url": "https://github.com/eclipse/jetty.project/pull/5400#discussion_r503186132", "createdAt": "2020-10-12T10:06:43Z", "author": {"login": "gregw"}, "path": "jetty-annotations/src/main/java/org/eclipse/jetty/annotations/WebFilterAnnotation.java", "diffHunk": "@@ -108,7 +108,7 @@ public void apply()\n \n             FilterMapping mapping = new FilterMapping();\n             mapping.setFilterName(holder.getName());\n-\n+            metaData.setOrigin(name + \".filter.mapping.\" + mapping.hashCode(), filterAnnotation, clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3dc2b785b9d0f95225e00c9f891fa18c6b1d174"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4NjM1Mw==", "bodyText": "hmmm can @ be put into an XML comment???", "url": "https://github.com/eclipse/jetty.project/pull/5400#discussion_r503186353", "createdAt": "2020-10-12T10:07:04Z", "author": {"login": "gregw"}, "path": "jetty-annotations/src/main/java/org/eclipse/jetty/annotations/WebFilterAnnotation.java", "diffHunk": "@@ -108,7 +108,7 @@ public void apply()\n \n             FilterMapping mapping = new FilterMapping();\n             mapping.setFilterName(holder.getName());\n-\n+            metaData.setOrigin(name + \".filter.mapping.\" + mapping.hashCode(), filterAnnotation, clazz);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4NjEzMg=="}, "originalCommit": {"oid": "a3dc2b785b9d0f95225e00c9f891fa18c6b1d174"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU0NTE3MQ==", "bodyText": "The origin is used programmatically to determine whether or not we're allowed to add more mappings, change mappings etc. It actually doesn't have anything to do with the output of the \"origin\" attribute for quickstart, which is simply the url of the descriptor that declared the mapping, or the classname of the class with the @webfilter annotation that has a mapping contained in it.\nSo, as the origin is used programmatically, I don't want to fiddle around with pretty-printing it as it makes it more difficult to a) calculate and b) use.", "url": "https://github.com/eclipse/jetty.project/pull/5400#discussion_r504545171", "createdAt": "2020-10-14T09:45:30Z", "author": {"login": "janbartel"}, "path": "jetty-annotations/src/main/java/org/eclipse/jetty/annotations/WebFilterAnnotation.java", "diffHunk": "@@ -108,7 +108,7 @@ public void apply()\n \n             FilterMapping mapping = new FilterMapping();\n             mapping.setFilterName(holder.getName());\n-\n+            metaData.setOrigin(name + \".filter.mapping.\" + mapping.hashCode(), filterAnnotation, clazz);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4NjEzMg=="}, "originalCommit": {"oid": "a3dc2b785b9d0f95225e00c9f891fa18c6b1d174"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU4MTU2NQ==", "bodyText": "This is more than pretty printing.   hashCodes are alwayrs reported in hex everywhere else in the code.   If we are ever debugging this, then having the hex rather than the long would be helpful.  Don't care so much about the @ vs the . but the former is more common with hashcodes.\nI don't see how this makes it harder to a) calculate and b) use ?", "url": "https://github.com/eclipse/jetty.project/pull/5400#discussion_r504581565", "createdAt": "2020-10-14T10:49:23Z", "author": {"login": "gregw"}, "path": "jetty-annotations/src/main/java/org/eclipse/jetty/annotations/WebFilterAnnotation.java", "diffHunk": "@@ -108,7 +108,7 @@ public void apply()\n \n             FilterMapping mapping = new FilterMapping();\n             mapping.setFilterName(holder.getName());\n-\n+            metaData.setOrigin(name + \".filter.mapping.\" + mapping.hashCode(), filterAnnotation, clazz);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4NjEzMg=="}, "originalCommit": {"oid": "a3dc2b785b9d0f95225e00c9f891fa18c6b1d174"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3Mjc1NQ==", "bodyText": "Done.", "url": "https://github.com/eclipse/jetty.project/pull/5400#discussion_r504672755", "createdAt": "2020-10-14T13:23:13Z", "author": {"login": "janbartel"}, "path": "jetty-annotations/src/main/java/org/eclipse/jetty/annotations/WebFilterAnnotation.java", "diffHunk": "@@ -108,7 +108,7 @@ public void apply()\n \n             FilterMapping mapping = new FilterMapping();\n             mapping.setFilterName(holder.getName());\n-\n+            metaData.setOrigin(name + \".filter.mapping.\" + mapping.hashCode(), filterAnnotation, clazz);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4NjEzMg=="}, "originalCommit": {"oid": "a3dc2b785b9d0f95225e00c9f891fa18c6b1d174"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2262, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}