{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MDYxODIz", "number": 4863, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo1MTo0MFrOD7Umjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToyMToyOVrOD7X0Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTMwMTI3OnYy", "diffSide": "RIGHT", "path": "jetty-http/src/test/java/org/eclipse/jetty/http/HttpFieldsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo1MTo0MFrOGTkyFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo1MTo0MFrOGTkyFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3ODc3NQ==", "bodyText": "@joakime This comment is wrong.  Setting null used to put in a null entry, but now is a noop.", "url": "https://github.com/eclipse/jetty.project/pull/4863#discussion_r423178775", "createdAt": "2020-05-11T16:51:40Z", "author": {"login": "gregw"}, "path": "jetty-http/src/test/java/org/eclipse/jetty/http/HttpFieldsTest.java", "diffHunk": "@@ -710,15 +749,15 @@ public void testPreventNullField()\n         assertThat(fields.size(), is(1));\n         ListIterator<HttpField> iter = fields.listIterator();\n         iter.next();\n-        iter.set(null);\n+        iter.set(null); // set field to null - null entry in list now", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae75be9bcb7e2059804f1bffcfd18dad44c68d6"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTc0Mzc5OnYy", "diffSide": "RIGHT", "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpField.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1Njo0MlrOGTpM9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1Njo0MlrOGTpM9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MTE4OQ==", "bodyText": "Since you bothered adding a message to the NPE, make it \"header name cannot be null\", or at least \"header name\", as \"name\" alone is just too laconic to be useful.", "url": "https://github.com/eclipse/jetty.project/pull/4863#discussion_r423251189", "createdAt": "2020-05-11T18:56:42Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpField.java", "diffHunk": "@@ -40,7 +40,7 @@ public HttpField(HttpHeader header, String name, String value)\n         if (_header != null && name == null)\n             _name = _header.asString();\n         else\n-            _name = Objects.requireNonNull(name);\n+            _name = Objects.requireNonNull(name, \"name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae75be9bcb7e2059804f1bffcfd18dad44c68d6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTc0NTYwOnYy", "diffSide": "RIGHT", "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1NzoxNVrOGTpOHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1NzoxNVrOGTpOHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MTQ4NA==", "bodyText": "\"header cannot be null\".", "url": "https://github.com/eclipse/jetty.project/pull/4863#discussion_r423251484", "createdAt": "2020-05-11T18:57:15Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "diffHunk": "@@ -671,6 +676,8 @@ public void put(HttpHeader header, HttpHeaderValue value)\n      */\n     public void put(HttpHeader header, String value)\n     {\n+        Objects.requireNonNull(header, \"header\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae75be9bcb7e2059804f1bffcfd18dad44c68d6"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTc0NjQyOnYy", "diffSide": "RIGHT", "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1NzoyN1rOGTpOlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1NzoyN1rOGTpOlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MTYwNw==", "bodyText": "\"name cannot be null\"", "url": "https://github.com/eclipse/jetty.project/pull/4863#discussion_r423251607", "createdAt": "2020-05-11T18:57:27Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "diffHunk": "@@ -685,7 +692,12 @@ public void put(HttpHeader header, String value)\n      */\n     public void put(String name, List<String> list)\n     {\n+        Objects.requireNonNull(name, \"name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae75be9bcb7e2059804f1bffcfd18dad44c68d6"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTc1MjA3OnYy", "diffSide": "RIGHT", "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1OToxMVrOGTpSRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1OToxMVrOGTpSRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MjU1MQ==", "bodyText": "\"header cannot be null\"", "url": "https://github.com/eclipse/jetty.project/pull/4863#discussion_r423252551", "createdAt": "2020-05-11T18:59:11Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "diffHunk": "@@ -723,6 +736,8 @@ public void add(HttpHeader header, HttpHeaderValue value)\n      */\n     public void add(HttpHeader header, String value)\n     {\n+        Objects.requireNonNull(header, \"header\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae75be9bcb7e2059804f1bffcfd18dad44c68d6"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTc1NjA1OnYy", "diffSide": "RIGHT", "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTowMDoyOFrOGTpU5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTo1Mjo1MFrOGTrBTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MzIyMA==", "bodyText": "We are no-op all the other cases, most notably add(String, String) above, so why throw here?", "url": "https://github.com/eclipse/jetty.project/pull/4863#discussion_r423253220", "createdAt": "2020-05-11T19:00:28Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "diffHunk": "@@ -723,6 +736,8 @@ public void add(HttpHeader header, HttpHeaderValue value)\n      */\n     public void add(HttpHeader header, String value)\n     {\n+        Objects.requireNonNull(header, \"header\");\n+\n         if (value == null)\n             throw new IllegalArgumentException(\"null value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae75be9bcb7e2059804f1bffcfd18dad44c68d6"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MDk3Mw==", "bodyText": "Because it will have servlet API impacts.  There is a separate issue that I thought you and and @lachlan-roberts  were working on to normalise the API in 10 to either always noop or always ISE (I can't remember which).  Either way, I don't want to change behaviour in this PR other than to avoid noops and later NPEs (eg from null names or null fields).", "url": "https://github.com/eclipse/jetty.project/pull/4863#discussion_r423280973", "createdAt": "2020-05-11T19:52:50Z", "author": {"login": "gregw"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "diffHunk": "@@ -723,6 +736,8 @@ public void add(HttpHeader header, HttpHeaderValue value)\n      */\n     public void add(HttpHeader header, String value)\n     {\n+        Objects.requireNonNull(header, \"header\");\n+\n         if (value == null)\n             throw new IllegalArgumentException(\"null value\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MzIyMA=="}, "originalCommit": {"oid": "6ae75be9bcb7e2059804f1bffcfd18dad44c68d6"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTgyNzk0OnYy", "diffSide": "RIGHT", "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToyMToyOVrOGTqBbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTo1NjoyM1rOGTrI1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NDYyMw==", "bodyText": "Should not the last parameter be _size++ - _cursor?\nAnd yes, I would rather separate the ++ and -- to different lines so that they are more comprehensible.\nFor example, it takes too much brain power to know if 5++ - 3 is 2 or 3.\nWe have tests that call add(HttpField) but the error in the copy does not show because the array is initialized to 16 elements but in the tests _size is only 4-5.", "url": "https://github.com/eclipse/jetty.project/pull/4863#discussion_r423264623", "createdAt": "2020-05-11T19:21:29Z", "author": {"login": "sbordet"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "diffHunk": "@@ -1199,16 +1217,22 @@ public void set(HttpField field)\n         {\n             if (_current < 0)\n                 throw new IllegalStateException();\n-            _fields[_current] = field;\n+            if (field == null)\n+                remove();\n+            else\n+                _fields[_current] = field;\n         }\n \n         @Override\n         public void add(HttpField field)\n         {\n-            _fields = Arrays.copyOf(_fields, _fields.length + 1);\n-            System.arraycopy(_fields, _cursor, _fields, _cursor + 1, _size++);\n-            _fields[_cursor++] = field;\n-            _current = -1;\n+            if (field != null)\n+            {\n+                _fields = Arrays.copyOf(_fields, _fields.length + 1);\n+                System.arraycopy(_fields, _cursor, _fields, _cursor + 1, _size++);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae75be9bcb7e2059804f1bffcfd18dad44c68d6"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MjkwMA==", "bodyText": "Yep it's a bug and if I change the capacity to 5 in the test I get a failure... but I don't see that it is the bug we are looking for :(", "url": "https://github.com/eclipse/jetty.project/pull/4863#discussion_r423282900", "createdAt": "2020-05-11T19:56:23Z", "author": {"login": "gregw"}, "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpFields.java", "diffHunk": "@@ -1199,16 +1217,22 @@ public void set(HttpField field)\n         {\n             if (_current < 0)\n                 throw new IllegalStateException();\n-            _fields[_current] = field;\n+            if (field == null)\n+                remove();\n+            else\n+                _fields[_current] = field;\n         }\n \n         @Override\n         public void add(HttpField field)\n         {\n-            _fields = Arrays.copyOf(_fields, _fields.length + 1);\n-            System.arraycopy(_fields, _cursor, _fields, _cursor + 1, _size++);\n-            _fields[_cursor++] = field;\n-            _current = -1;\n+            if (field != null)\n+            {\n+                _fields = Arrays.copyOf(_fields, _fields.length + 1);\n+                System.arraycopy(_fields, _cursor, _fields, _cursor + 1, _size++);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NDYyMw=="}, "originalCommit": {"oid": "6ae75be9bcb7e2059804f1bffcfd18dad44c68d6"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2534, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}