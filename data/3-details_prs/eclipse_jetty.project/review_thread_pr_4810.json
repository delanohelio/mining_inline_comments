{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDYxOTc2", "number": 4810, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoxOTowOVrOD1s-Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoxOTowOVrOD1s-Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjM3OTQ3OnYy", "diffSide": "RIGHT", "path": "tests/test-distribution/src/test/java/org/eclipse/jetty/tests/distribution/DistributionTests.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDoxOTowOVrOGLQ3rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMToyOTo0N1rOGOWt4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2MzkxNw==", "bodyText": "I had the idea about adding another webapp to be sure it's still deployed despite having this LinkageError", "url": "https://github.com/eclipse/jetty.project/pull/4810#discussion_r414463917", "createdAt": "2020-04-24T10:19:09Z", "author": {"login": "olamy"}, "path": "tests/test-distribution/src/test/java/org/eclipse/jetty/tests/distribution/DistributionTests.java", "diffHunk": "@@ -440,19 +439,14 @@ public void testSimpleWebAppWithWebsocket(String arg) throws Exception\n             try (DistributionTester.Run run2 = distribution.start(args2))\n             {\n                 assertTrue(run2.awaitConsoleLogsFor(\"Started Server@\", 10, TimeUnit.SECONDS));\n-                // we do not test that anymore because it doesn't work for java14\n-                //assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n+                assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n \n                 startHttpClient();\n                 ContentResponse response = client.GET(\"http://localhost:\" + port + \"/test1/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());\n \n                 client.GET(\"http://localhost:\" + port + \"/test2/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64beae3382862c5a96ab887466194ef6cd7593c5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2NTk1Mg==", "bodyText": "The MethodHandle changes in this PR fix the LinkageError, but now this particular webapp should fail at deployment time anyway as the signature is wrong.", "url": "https://github.com/eclipse/jetty.project/pull/4810#discussion_r414465952", "createdAt": "2020-04-24T10:22:33Z", "author": {"login": "lachlan-roberts"}, "path": "tests/test-distribution/src/test/java/org/eclipse/jetty/tests/distribution/DistributionTests.java", "diffHunk": "@@ -440,19 +439,14 @@ public void testSimpleWebAppWithWebsocket(String arg) throws Exception\n             try (DistributionTester.Run run2 = distribution.start(args2))\n             {\n                 assertTrue(run2.awaitConsoleLogsFor(\"Started Server@\", 10, TimeUnit.SECONDS));\n-                // we do not test that anymore because it doesn't work for java14\n-                //assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n+                assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n \n                 startHttpClient();\n                 ContentResponse response = client.GET(\"http://localhost:\" + port + \"/test1/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());\n \n                 client.GET(\"http://localhost:\" + port + \"/test2/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2MzkxNw=="}, "originalCommit": {"oid": "64beae3382862c5a96ab887466194ef6cd7593c5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3MjkyOA==", "bodyText": "Should I add in another webapp here to test that it deploys successfully even if these two fail?", "url": "https://github.com/eclipse/jetty.project/pull/4810#discussion_r414472928", "createdAt": "2020-04-24T10:34:30Z", "author": {"login": "lachlan-roberts"}, "path": "tests/test-distribution/src/test/java/org/eclipse/jetty/tests/distribution/DistributionTests.java", "diffHunk": "@@ -440,19 +439,14 @@ public void testSimpleWebAppWithWebsocket(String arg) throws Exception\n             try (DistributionTester.Run run2 = distribution.start(args2))\n             {\n                 assertTrue(run2.awaitConsoleLogsFor(\"Started Server@\", 10, TimeUnit.SECONDS));\n-                // we do not test that anymore because it doesn't work for java14\n-                //assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n+                assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n \n                 startHttpClient();\n                 ContentResponse response = client.GET(\"http://localhost:\" + port + \"/test1/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());\n \n                 client.GET(\"http://localhost:\" + port + \"/test2/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2MzkxNw=="}, "originalCommit": {"oid": "64beae3382862c5a96ab887466194ef6cd7593c5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4Mzg0MQ==", "bodyText": "yes. I would even say 2 :). I'm not sure about deployment order of contexts. maybe one first and one last. to ensure the failure do not break anything else to be deployed.", "url": "https://github.com/eclipse/jetty.project/pull/4810#discussion_r414483841", "createdAt": "2020-04-24T10:54:02Z", "author": {"login": "olamy"}, "path": "tests/test-distribution/src/test/java/org/eclipse/jetty/tests/distribution/DistributionTests.java", "diffHunk": "@@ -440,19 +439,14 @@ public void testSimpleWebAppWithWebsocket(String arg) throws Exception\n             try (DistributionTester.Run run2 = distribution.start(args2))\n             {\n                 assertTrue(run2.awaitConsoleLogsFor(\"Started Server@\", 10, TimeUnit.SECONDS));\n-                // we do not test that anymore because it doesn't work for java14\n-                //assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n+                assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n \n                 startHttpClient();\n                 ContentResponse response = client.GET(\"http://localhost:\" + port + \"/test1/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());\n \n                 client.GET(\"http://localhost:\" + port + \"/test2/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2MzkxNw=="}, "originalCommit": {"oid": "64beae3382862c5a96ab887466194ef6cd7593c5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwNTQ0Mw==", "bodyText": "@lachlan-roberts great tests changes! we now even have real websocket tests in the distribution tests module!", "url": "https://github.com/eclipse/jetty.project/pull/4810#discussion_r417705443", "createdAt": "2020-04-30T01:29:47Z", "author": {"login": "olamy"}, "path": "tests/test-distribution/src/test/java/org/eclipse/jetty/tests/distribution/DistributionTests.java", "diffHunk": "@@ -440,19 +439,14 @@ public void testSimpleWebAppWithWebsocket(String arg) throws Exception\n             try (DistributionTester.Run run2 = distribution.start(args2))\n             {\n                 assertTrue(run2.awaitConsoleLogsFor(\"Started Server@\", 10, TimeUnit.SECONDS));\n-                // we do not test that anymore because it doesn't work for java14\n-                //assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n+                assertFalse(run2.getLogs().stream().anyMatch(s -> s.contains(\"LinkageError\")));\n \n                 startHttpClient();\n                 ContentResponse response = client.GET(\"http://localhost:\" + port + \"/test1/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());\n \n                 client.GET(\"http://localhost:\" + port + \"/test2/index.jsp\");\n-                assertEquals(HttpStatus.OK_200, response.getStatus());\n-                assertThat(response.getContentAsString(), containsString(\"Hello\"));\n-                assertThat(response.getContentAsString(), not(containsString(\"<%\")));\n+                assertEquals(HttpStatus.SERVICE_UNAVAILABLE_503, response.getStatus());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2MzkxNw=="}, "originalCommit": {"oid": "64beae3382862c5a96ab887466194ef6cd7593c5"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2486, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}