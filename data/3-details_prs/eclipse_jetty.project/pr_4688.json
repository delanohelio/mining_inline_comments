{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxODU5Mjg4", "number": 4688, "title": "Issue #4682 Session with no attributes unreadable from jdbc", "bodyText": "Closes #4682\nThe explanation is in the original bug report.\nThis fix ensures that even if the session attributes is empty, we still use the ObjectOutputStream to serialize the empty map, because when reading the session back, the ObjectInputStream needs to see the proper stream headers. Previously, we had tried to save bandwidth by writing 0 bytes, however the ObjectInputStream doesn't recognize that as a valid stream.\nAlso added a couple of tests for reading/writing/updating empty session attributes.\nThis bug only affects sessions using jdbc.", "createdAt": "2020-03-21T13:32:56Z", "url": "https://github.com/eclipse/jetty.project/pull/4688", "merged": true, "mergeCommit": {"oid": "524e690140fd021b29215981130c3a9879e37826"}, "closed": true, "closedAt": "2020-03-31T12:25:53Z", "author": {"login": "janbartel"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcP1HkfgH2gAyMzkxODU5Mjg4OjJmNDFlNjNiNjhlNjE0NDcwOGM5ZWE5ODVjZGViZDM1MjUxN2FjZjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRc9v9gFqTM4MjA1OTMwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2f41e63b68e6144708c9ea985cdebd352517acf9", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/2f41e63b68e6144708c9ea985cdebd352517acf9", "committedDate": "2020-03-21T13:28:11Z", "message": "Issue #4682 Session with no attributes unreadable from jdbc\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNzIzMzk5", "url": "https://github.com/eclipse/jetty.project/pull/4688#pullrequestreview-381723399", "createdAt": "2020-03-26T06:09:10Z", "commit": {"oid": "2f41e63b68e6144708c9ea985cdebd352517acf9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjowOToxMFrOF74hrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjowOToxMFrOF74hrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzNjQzMA==", "bodyText": "maybe use logging :)", "url": "https://github.com/eclipse/jetty.project/pull/4688#discussion_r398336430", "createdAt": "2020-03-26T06:09:10Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-jdbc-sessions/src/test/java/org/eclipse/jetty/server/session/JdbcTestHelper.java", "diffHunk": "@@ -131,6 +130,35 @@ public static void prepareTables() throws SQLException\n \n         sessionTableSchema.prepareTables();\n     }\n+    \n+    public static void dumpRow(ResultSet row) throws SQLException\n+    {\n+        if (row != null)\n+        {\n+            String id = row.getString(ID_COL);\n+            long created = row.getLong(CREATE_COL);\n+            long accessed = row.getLong(ACCESS_COL);\n+            long lastAccessed = row.getLong(LAST_ACCESS_COL);\n+            long maxIdle = row.getLong(MAX_IDLE_COL);\n+            long cookieSet = row.getLong(COOKIE_COL);\n+            String node = row.getString(LAST_NODE_COL);\n+            long expires = row.getLong(EXPIRY_COL);\n+            long lastSaved = row.getLong(LAST_SAVE_COL);\n+            String context = row.getString(CONTEXT_COL);\n+            Blob blob = row.getBlob(MAP_COL);\n+            \n+            String dump = \"id=\" + id +\n+                          \" ctxt=\" + context +\n+                          \" node=\" + node +\n+                          \" exp=\" + expires +\n+                          \" acc=\" + accessed +\n+                          \" lacc=\" + lastAccessed +\n+                          \" ck=\" + cookieSet +\n+                          \" lsv=\" + lastSaved +\n+                          \" blob length=\" + blob.length();\n+            System.err.println(dump);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f41e63b68e6144708c9ea985cdebd352517acf9"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDU5MzAx", "url": "https://github.com/eclipse/jetty.project/pull/4688#pullrequestreview-382059301", "createdAt": "2020-03-26T14:24:00Z", "commit": {"oid": "2f41e63b68e6144708c9ea985cdebd352517acf9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoyNDowMFrOF8JYaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoyNTozMVrOF8JdEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYxMjU4NQ==", "bodyText": "Want to leave this System.err.println here?", "url": "https://github.com/eclipse/jetty.project/pull/4688#discussion_r398612585", "createdAt": "2020-03-26T14:24:00Z", "author": {"login": "joakime"}, "path": "tests/test-sessions/test-jdbc-sessions/src/test/java/org/eclipse/jetty/server/session/JdbcTestHelper.java", "diffHunk": "@@ -151,6 +179,7 @@ public static boolean existsInSessionTable(String id, boolean verbose)\n                 while (result.next())\n                 {\n                     results = true;\n+                    dumpRow(result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f41e63b68e6144708c9ea985cdebd352517acf9"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYxMzc3Nw==", "bodyText": "Any reason why \", virtualHost, \" is not just \", \" + VHOST_COL + \", \" ?", "url": "https://github.com/eclipse/jetty.project/pull/4688#discussion_r398613777", "createdAt": "2020-03-26T14:25:31Z", "author": {"login": "joakime"}, "path": "tests/test-sessions/test-jdbc-sessions/src/test/java/org/eclipse/jetty/server/session/JdbcTestHelper.java", "diffHunk": "@@ -232,41 +261,53 @@ public static boolean checkSessionPersisted(SessionData data)\n \n         return true;\n     }\n-\n-    public static void insertSession(String id, String contextPath, String vhost)\n-        throws Exception\n+    \n+    public static void insertSession(SessionData data) throws Exception\n     {\n+\n         Class.forName(DRIVER_CLASS);\n         try (Connection con = DriverManager.getConnection(DEFAULT_CONNECTION_URL);)\n         {\n             PreparedStatement statement = con.prepareStatement(\"insert into \" + TABLE +\n                 \" (\" + ID_COL + \", \" + CONTEXT_COL + \", virtualHost, \" + LAST_NODE_COL +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f41e63b68e6144708c9ea985cdebd352517acf9"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 503, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}