{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3OTAyOTkx", "number": 5226, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzoyMDowN1rOEg7w-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDowMToyNlrOEhLEpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTY5MDgyOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzoyMDowN1rOHN_IvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzo0NjoxN1rOHOnvgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQyNzk2NA==", "bodyText": "I don't agree with this test.  We should be order independent for such headers.  If we decide that X-Forwarded-Port takes precedent over any port specified in X-Forwarded-Host then it should do so regardless of the order of those headers!", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r484427964", "createdAt": "2020-09-07T13:20:07Z", "author": {"login": "gregw"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -497,7 +497,67 @@ public void destroy() throws Exception\n                     .requestURL(\"http://fw.example.com:4333/\")\n                     .remoteAddr(\"8.5.4.3\").remotePort(2222)\n             ),\n-\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - Server First)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"X-Forwarded-Server: sub2.example.com:10007\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - setForwardedPortAsAuthority = false)\")\n+                    .configureCustomizer((customizer) -> customizer.setForwardedPortAsAuthority(false))\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU4MzQ1Mw==", "bodyText": "The code in ForwardedRequestCustomizer is most definitely order dependent, esp around host/port/authority.  (IIRC, these are not the only tests that show this order dependency, i'll point out which other ones we have tomm.).\nThis order dependency was introduced when the code changed to iterating the fields from querying the fields.\nIf we want to change this code to not be order dependent, then we should go over all of the tests and expectations first, discuss them, then fix the code to conform to the expectations.", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r484583453", "createdAt": "2020-09-07T23:13:23Z", "author": {"login": "joakime"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -497,7 +497,67 @@ public void destroy() throws Exception\n                     .requestURL(\"http://fw.example.com:4333/\")\n                     .remoteAddr(\"8.5.4.3\").remotePort(2222)\n             ),\n-\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - Server First)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"X-Forwarded-Server: sub2.example.com:10007\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - setForwardedPortAsAuthority = false)\")\n+                    .configureCustomizer((customizer) -> customizer.setForwardedPortAsAuthority(false))\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQyNzk2NA=="}, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5MzI1MQ==", "bodyText": "I opened Issue #5247, proposing a better way.", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r485093251", "createdAt": "2020-09-08T17:46:17Z", "author": {"login": "joakime"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -497,7 +497,67 @@ public void destroy() throws Exception\n                     .requestURL(\"http://fw.example.com:4333/\")\n                     .remoteAddr(\"8.5.4.3\").remotePort(2222)\n             ),\n-\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - Server First)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"X-Forwarded-Server: sub2.example.com:10007\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - setForwardedPortAsAuthority = false)\")\n+                    .configureCustomizer((customizer) -> customizer.setForwardedPortAsAuthority(false))\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQyNzk2NA=="}, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTY5NDc0OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzoyMToyNlrOHN_LFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzozODo0OVrOHOnfxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQyODU2NQ==", "bodyText": "s/hp/hostField/", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r484428565", "createdAt": "2020-09-07T13:21:26Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -598,16 +598,18 @@ public void handleSslSessionId(HttpField field)\n         @SuppressWarnings(\"unused\")\n         public void handleHost(HttpField field)\n         {\n+            HostPort hp = new HostPort(getLeftMost(field.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4OTIyMw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r485089223", "createdAt": "2020-09-08T17:38:49Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -598,16 +598,18 @@ public void handleSslSessionId(HttpField field)\n         @SuppressWarnings(\"unused\")\n         public void handleHost(HttpField field)\n         {\n+            HostPort hp = new HostPort(getLeftMost(field.getValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQyODU2NQ=="}, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTcwNzk4OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzoyNToyN1rOHN_TJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzo0NjoyOVrOHOnv6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMDYyOQ==", "bodyText": "Ditto the port here should be 10002... in fact isn't that what the code already does?  Wont the code at \ud83d\udc4d https://github.com/eclipse/jetty.project/blob/jetty-9.4.x/jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java#L662\nalways replace the port of the host header?", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r484430629", "createdAt": "2020-09-07T13:25:27Z", "author": {"login": "gregw"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -497,7 +497,67 @@ public void destroy() throws Exception\n                     .requestURL(\"http://fw.example.com:4333/\")\n                     .remoteAddr(\"8.5.4.3\").remotePort(2222)\n             ),\n-\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - Server First)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"X-Forwarded-Server: sub2.example.com:10007\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - setForwardedPortAsAuthority = false)\")\n+                    .configureCustomizer((customizer) -> customizer.setForwardedPortAsAuthority(false))\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports Alt Order)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU4NDYzMA==", "bodyText": "IIRC, it resolves as ...\n\nHost becomes authority\nX-Forwarded-Port changes authority\nX-Forwarded-Host changes host (but not port, as it was set by X-Forwarded-Port) to new authority\n\nSo the following headers ...\nHost: myhost:10001\nX-Forwarded-Port: 10002\nX-Forwarded-Host: sub1.example.com:10003\n\nbecomes in order ....\n\nauthority is myhost:10001 (from Host)\nauthority is myhost:10002 (from X-Forwarded-Port)\nauthority is sub1.example.com:10002 (from X-Forwarded-Host)\n\nbut the headers in a different order ...\nHost: myhost:10001\nX-Forwarded-Host: sub1.example.com:10003\nX-Forwarded-Port: 10002\n\nGoes thru ...\n\nauthority is myhost:10001 (from Host)\nauthority is sub1.example.com:10003 (from X-Forwarded-Host)\nauthority is unchanged, and stays at sub1.example.com:10003 because it set \"host\" and \"port\" already (the X-Forwarded-Port doesn't change it again)\n\nLets chat about the test cases tomm, I'll take a stab at fixing them in a more sane way (keeping iteration).\nI see authority going thru a state change for both host and port of (UNSET, LAZY, AUTHORITATIVE), where LAZY is only used for Host, but other headers can upgrade the state to AUTHORITATIVE, and then when it's all done parsing the final server/host authority is calculated. (and not using the overly complicated extended HostPort classes that have confusing meanings with no javadoc explaining them)", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r484584630", "createdAt": "2020-09-07T23:22:51Z", "author": {"login": "joakime"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -497,7 +497,67 @@ public void destroy() throws Exception\n                     .requestURL(\"http://fw.example.com:4333/\")\n                     .remoteAddr(\"8.5.4.3\").remotePort(2222)\n             ),\n-\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - Server First)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"X-Forwarded-Server: sub2.example.com:10007\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - setForwardedPortAsAuthority = false)\")\n+                    .configureCustomizer((customizer) -> customizer.setForwardedPortAsAuthority(false))\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports Alt Order)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMDYyOQ=="}, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc4NzgwNA==", "bodyText": "@joakime the code has been explicitly designed to be order independent for host and port.  That is why we have PortSetHostPort and PossiblyPartialHostPort classes to record if a port or a host has been set before another header arrives that sets the other one.\nSo specifically the outcome for:\nX-Forwarded-Host: sub1.example.com:10003\nX-Forwarded-Port: 10002\n\nshould be no different from the outcome for:\nX-Forwarded-Port: 10002\nX-Forwarded-Host: sub1.example.com:10003\n\nMy preference is for the explicit port header to always win, so the result will be sub1.example.com:1002 in both cases.  Let me find some time to play with your branch  to see how your tests are even passing, then we can chat about it.", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r484787804", "createdAt": "2020-09-08T09:40:40Z", "author": {"login": "gregw"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -497,7 +497,67 @@ public void destroy() throws Exception\n                     .requestURL(\"http://fw.example.com:4333/\")\n                     .remoteAddr(\"8.5.4.3\").remotePort(2222)\n             ),\n-\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - Server First)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"X-Forwarded-Server: sub2.example.com:10007\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - setForwardedPortAsAuthority = false)\")\n+                    .configureCustomizer((customizer) -> customizer.setForwardedPortAsAuthority(false))\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports Alt Order)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMDYyOQ=="}, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc5Njk3NA==", "bodyText": "OK part of the problem is here:\n        public void handleFor(HttpField field)\n        {\n            String authority = getLeftMost(field.getValue());\n            if (!getForwardedPortAsAuthority() && !StringUtil.isEmpty(getForwardedPortHeader()))\n            {\n                if (_for == null)\n                    _for = new PossiblyPartialHostPort(authority);\n                else if (_for instanceof PortSetHostPort)\n                    _for = new HostPort(HostPort.normalizeHost(authority), _for.getPort());\n            }\n            else if (_for == null)\n            {\n                _for = new HostPort(authority);\n            }\n        }\nThis code is not checking if in the case a PortSetHostPort exists if the For header also has a port. Thus in this case we are giving precedence to the port header.\nBut the code for the port header does the opposite:\n        public void handlePort(HttpField field)\n        {\n            int port = HostPort.parsePort(getLeftMost(field.getValue()));\n            if (!getForwardedPortAsAuthority())\n            {\n                if (_for == null)\n                    _for = new PortSetHostPort(_request.getRemoteHost(), port);\n                else if (_for instanceof PossiblyPartialHostPort && _for.getPort() <= 0)\n                    _for = new HostPort(HostPort.normalizeHost(_for.getHost()), port);\n            }\n            else\n            {\n                if (_host == null)\n                    _host = new PortSetHostPort(_request.getServerName(), port);\n                else if (_host instanceof PossiblyPartialHostPort && _host.getPort() <= 0)\n                    _host = new HostPort(HostPort.normalizeHost(_host.getHost()), port);\n            }\n        }\nIt is checking if there is actually a port set in the PossiblyPartiallyHostPort and if so it gives it precedence and ignores the port header.\nSo you need to make the same policy decision in both places - either the port header has precedence or it doesn't - I guess I don't mind either way, we just need to be consistent.", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r484796974", "createdAt": "2020-09-08T09:55:54Z", "author": {"login": "gregw"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -497,7 +497,67 @@ public void destroy() throws Exception\n                     .requestURL(\"http://fw.example.com:4333/\")\n                     .remoteAddr(\"8.5.4.3\").remotePort(2222)\n             ),\n-\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - Server First)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"X-Forwarded-Server: sub2.example.com:10007\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - setForwardedPortAsAuthority = false)\")\n+                    .configureCustomizer((customizer) -> customizer.setForwardedPortAsAuthority(false))\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports Alt Order)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMDYyOQ=="}, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5MzM1NA==", "bodyText": "I opened Issue #5247, proposing a better way.", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r485093354", "createdAt": "2020-09-08T17:46:29Z", "author": {"login": "joakime"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/ForwardedRequestCustomizerTest.java", "diffHunk": "@@ -497,7 +497,67 @@ public void destroy() throws Exception\n                     .requestURL(\"http://fw.example.com:4333/\")\n                     .remoteAddr(\"8.5.4.3\").remotePort(2222)\n             ),\n-\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - Server First)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"X-Forwarded-Server: sub2.example.com:10007\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10002)\n+                    .requestURL(\"https://sub1.example.com:10002/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports - setForwardedPortAsAuthority = false)\")\n+                    .configureCustomizer((customizer) -> customizer.setForwardedPortAsAuthority(false))\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")\n+                    .remoteAddr(\"127.0.0.1\").remotePort(8888)\n+            ),\n+            Arguments.of(new Request(\"X-Forwarded-* (Multiple Ports Alt Order)\")\n+                    .headers(\n+                        \"GET / HTTP/1.1\",\n+                        \"Host: myhost:10001\",\n+                        \"X-Forwarded-For: 127.0.0.1:8888,127.0.0.2:9999\",\n+                        \"X-Forwarded-Proto: https\",\n+                        \"X-Forwarded-Host: sub1.example.com:10003\",\n+                        \"X-Forwarded-Port: 10002\",\n+                        \"X-Forwarded-Server: sub2.example.com\"\n+                    ),\n+                new Expectations()\n+                    .scheme(\"https\").serverName(\"sub1.example.com\").serverPort(10003)\n+                    .requestURL(\"https://sub1.example.com:10003/\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMDYyOQ=="}, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjE5ODc3OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDowMToyNlrOHOV3Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzo0NjozNFrOHOnwFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgwMDI2Ng==", "bodyText": "This would make it the same as handlePort\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                _host = new HostPort(hp.getHost(), _host.getPort());\n          \n          \n            \n                                _host = new HostPort(hp.getHost(), hp.getPort() >0 ? hp.getPort() : _host.getPort());\n          \n      \n    \n    \n  \n\nalternately take the port <= 0 test out of handlePort to get the alternate precedence.", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r484800266", "createdAt": "2020-09-08T10:01:26Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -598,16 +598,18 @@ public void handleSslSessionId(HttpField field)\n         @SuppressWarnings(\"unused\")\n         public void handleHost(HttpField field)\n         {\n+            HostPort hp = new HostPort(getLeftMost(field.getValue()));\n+\n             if (getForwardedPortAsAuthority() && !StringUtil.isEmpty(getForwardedPortHeader()))\n             {\n                 if (_host == null)\n-                    _host = new PossiblyPartialHostPort(getLeftMost(field.getValue()));\n+                    _host = new PossiblyPartialHostPort(hp.getHost(), hp.getPort());\n                 else if (_host instanceof PortSetHostPort)\n-                    _host = new HostPort(HostPort.normalizeHost(getLeftMost(field.getValue())), _host.getPort());\n+                    _host = new HostPort(hp.getHost(), _host.getPort());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5MzM5Nw==", "bodyText": "Done.", "url": "https://github.com/eclipse/jetty.project/pull/5226#discussion_r485093397", "createdAt": "2020-09-08T17:46:34Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ForwardedRequestCustomizer.java", "diffHunk": "@@ -598,16 +598,18 @@ public void handleSslSessionId(HttpField field)\n         @SuppressWarnings(\"unused\")\n         public void handleHost(HttpField field)\n         {\n+            HostPort hp = new HostPort(getLeftMost(field.getValue()));\n+\n             if (getForwardedPortAsAuthority() && !StringUtil.isEmpty(getForwardedPortHeader()))\n             {\n                 if (_host == null)\n-                    _host = new PossiblyPartialHostPort(getLeftMost(field.getValue()));\n+                    _host = new PossiblyPartialHostPort(hp.getHost(), hp.getPort());\n                 else if (_host instanceof PortSetHostPort)\n-                    _host = new HostPort(HostPort.normalizeHost(getLeftMost(field.getValue())), _host.getPort());\n+                    _host = new HostPort(hp.getHost(), _host.getPort());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgwMDI2Ng=="}, "originalCommit": {"oid": "e2134b13d794f341dfd4f8e629a0dfeef4eab6cf"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2367, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}