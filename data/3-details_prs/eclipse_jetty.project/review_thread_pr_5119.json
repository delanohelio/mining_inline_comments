{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMzgzNDYz", "number": 5119, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMToxODowMVrOEVlLsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMzo0Nzo0NFrOEWONkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDY0NzUyOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMToxODowMVrOG8a-mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMTozNzo1OVrOG8birQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAwOTc1NQ==", "bodyText": "This is the only relevant part of this change.\nThe rest is just confusing.", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r466009755", "createdAt": "2020-08-05T21:18:01Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -535,20 +541,20 @@ protected void parse()\n         {\n             // sort out the location to which to write the files\n             if (_config.getLocation() == null)\n-                _tmpDir = _contextTmpDir;\n+                _tmpDir = _contextTmpDir.toPath();\n             else if (\"\".equals(_config.getLocation()))\n-                _tmpDir = _contextTmpDir;\n+                _tmpDir = _contextTmpDir.toPath();\n             else\n             {\n-                File f = new File(_config.getLocation());\n-                if (f.isAbsolute())\n-                    _tmpDir = f;\n+                Path location = FileSystems.getDefault().getPath(_config.getLocation());\n+                if (location.isAbsolute())\n+                    _tmpDir = location;\n                 else\n-                    _tmpDir = new File(_contextTmpDir, _config.getLocation());\n+                    _tmpDir = _contextTmpDir.toPath().resolve(location);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b9e8bfae7110fe46a61f3c2e6779da99bb5eb5"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxMjczMg==", "bodyText": "Not sure where's the confusion. Around lines 538 in the parse() method we work out where the tmp directory is so we can write to it if we need to (eg the number of bytes received exceed the configured limit for bytes retained in memory). The location of the tmp directory can be given by the MultiPartConfigElement.location, or, if that has not been configured, I default to the context tmp dir. This code has always been there, I just changed to calculating it as a Path instead of a File.", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r466012732", "createdAt": "2020-08-05T21:24:25Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -535,20 +541,20 @@ protected void parse()\n         {\n             // sort out the location to which to write the files\n             if (_config.getLocation() == null)\n-                _tmpDir = _contextTmpDir;\n+                _tmpDir = _contextTmpDir.toPath();\n             else if (\"\".equals(_config.getLocation()))\n-                _tmpDir = _contextTmpDir;\n+                _tmpDir = _contextTmpDir.toPath();\n             else\n             {\n-                File f = new File(_config.getLocation());\n-                if (f.isAbsolute())\n-                    _tmpDir = f;\n+                Path location = FileSystems.getDefault().getPath(_config.getLocation());\n+                if (location.isAbsolute())\n+                    _tmpDir = location;\n                 else\n-                    _tmpDir = new File(_contextTmpDir, _config.getLocation());\n+                    _tmpDir = _contextTmpDir.toPath().resolve(location);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAwOTc1NQ=="}, "originalCommit": {"oid": "42b9e8bfae7110fe46a61f3c2e6779da99bb5eb5"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxODk4OQ==", "bodyText": "To be clear, the main change is at lines 196-199 where we treat the String argument to Part.write() as either absolute or relative: previously we always treated it as relative.", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r466018989", "createdAt": "2020-08-05T21:37:59Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -535,20 +541,20 @@ protected void parse()\n         {\n             // sort out the location to which to write the files\n             if (_config.getLocation() == null)\n-                _tmpDir = _contextTmpDir;\n+                _tmpDir = _contextTmpDir.toPath();\n             else if (\"\".equals(_config.getLocation()))\n-                _tmpDir = _contextTmpDir;\n+                _tmpDir = _contextTmpDir.toPath();\n             else\n             {\n-                File f = new File(_config.getLocation());\n-                if (f.isAbsolute())\n-                    _tmpDir = f;\n+                Path location = FileSystems.getDefault().getPath(_config.getLocation());\n+                if (location.isAbsolute())\n+                    _tmpDir = location;\n                 else\n-                    _tmpDir = new File(_contextTmpDir, _config.getLocation());\n+                    _tmpDir = _contextTmpDir.toPath().resolve(location);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAwOTc1NQ=="}, "originalCommit": {"oid": "42b9e8bfae7110fe46a61f3c2e6779da99bb5eb5"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzE1Nzg0OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjo0OTowN1rOG9YkSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjo1MToyMFrOG9YowA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxODgyNQ==", "bodyText": "You have the same isAbsolute check in both branches below so perhaps do that here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Path p = Path.of(fileName);\n          \n          \n            \n                        \n          \n          \n            \n                        Path p = Path.of(fileName);\n          \n          \n            \n                        p = p.isAbsolute() ? p : _tmpDir.resolve(p);", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r467018825", "createdAt": "2020-08-07T12:49:07Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -185,12 +186,17 @@ protected void write(byte[] bytes, int offset, int length) throws IOException\n         @Override\n         public void write(String fileName) throws IOException\n         {\n+            Path p = Path.of(fileName);\n+            ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf410704ed0f23c5ac651571511ebba85be43c93"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxOTk2OA==", "bodyText": "Note that while I know resolve also handles absolute addresses, I do kind of like seeing it explicit in this code, so you can understand it without the need to have deep knowledge of how resolve behaves.   Maybe have a comment to that effect?", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r467019968", "createdAt": "2020-08-07T12:51:20Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -185,12 +186,17 @@ protected void write(byte[] bytes, int offset, int length) throws IOException\n         @Override\n         public void write(String fileName) throws IOException\n         {\n+            Path p = Path.of(fileName);\n+            ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxODgyNQ=="}, "originalCommit": {"oid": "bf410704ed0f23c5ac651571511ebba85be43c93"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzE1ODY0OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjo0OToyNFrOG9Ykyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjo0OToyNFrOG9Ykyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxODk1NA==", "bodyText": "move this above", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r467018954", "createdAt": "2020-08-07T12:49:24Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -185,12 +186,17 @@ protected void write(byte[] bytes, int offset, int length) throws IOException\n         @Override\n         public void write(String fileName) throws IOException\n         {\n+            Path p = Path.of(fileName);\n+            \n             if (_file == null)\n             {\n                 _temporary = false;\n \n                 // part data is only in the ByteArrayOutputStream and never been written to disk\n-                _file = new File(_tmpDir, fileName);\n+                if (!p.isAbsolute())\n+                    p = _tmpDir.resolve(p);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf410704ed0f23c5ac651571511ebba85be43c93"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzE2MDAzOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjo0OTo0OFrOG9Yllg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjo0OTo0OFrOG9Yllg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxOTE1OA==", "bodyText": "move this absolute check to above", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r467019158", "createdAt": "2020-08-07T12:49:48Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -208,7 +214,7 @@ public void write(String fileName) throws IOException\n                 _temporary = false;\n \n                 Path src = _file.toPath();\n-                Path target = src.resolveSibling(fileName);\n+                Path target = (p.isAbsolute() ? p : _tmpDir.resolve(p));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf410704ed0f23c5ac651571511ebba85be43c93"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzM1MjA3OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMzo0MzoyM1rOG9aZSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMzo0MzoyM1rOG9aZSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA0ODc3OA==", "bodyText": "Note. Path.of(String...) is new for Java 11.\nThe original technique would be Paths.get(String...)\n(Just in case you are using these techniques back in Jetty 9.4..x)", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r467048778", "createdAt": "2020-08-07T13:43:23Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java", "diffHunk": "@@ -185,12 +186,16 @@ protected void write(byte[] bytes, int offset, int length) throws IOException\n         @Override\n         public void write(String fileName) throws IOException\n         {\n+            Path p = Path.of(fileName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0a289596c5033d75f781dc557df3ac4b31d6b9"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzM2OTc3OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/test/java/org/eclipse/jetty/server/MultiPartFormInputStreamTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMzo0Nzo0NFrOG9ajxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTowODozNlrOG9k7JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTQ2MQ==", "bodyText": "Should probably add a test in here to know if the file got deleted (or not).\nThe temp files (note, if the Part was specifically .write(String) then it's no longer a temp file) for a MultiPartFormInputStream should only exist for as long as that MultiPartFormInputStream is live. (ie: if the MPFIS is closed, then the temp files should be deleted), as there's no sane way via the API to access the temporary contents anymore.", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r467051461", "createdAt": "2020-08-07T13:47:44Z", "author": {"login": "joakime"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/MultiPartFormInputStreamTest.java", "diffHunk": "@@ -474,6 +475,77 @@ public void testPartFileNotDeleted() throws Exception\n         assertThat(tptfd.exists(), is(true));  //explicitly written file did not get removed after cleanup\n         tptfd.deleteOnExit(); //clean up test\n     }\n+    \n+    @Test\n+    public void testPartFileAbsolute() throws Exception\n+    {\n+        MultipartConfigElement config = new MultipartConfigElement(_dirname, 1024, 3072, 50);\n+        MultiPartFormInputStream mpis = new MultiPartFormInputStream(new ByteArrayInputStream(createMultipartRequestString(\"tpfa\").getBytes()),\n+            _contentType,\n+            config,\n+            _tmpDir);\n+        mpis.setDeleteOnExit(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0a289596c5033d75f781dc557df3ac4b31d6b9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1Mzk3NA==", "bodyText": "This should be part of the followup PR on cleanup of behavior.", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r467053974", "createdAt": "2020-08-07T13:51:43Z", "author": {"login": "joakime"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/MultiPartFormInputStreamTest.java", "diffHunk": "@@ -474,6 +475,77 @@ public void testPartFileNotDeleted() throws Exception\n         assertThat(tptfd.exists(), is(true));  //explicitly written file did not get removed after cleanup\n         tptfd.deleteOnExit(); //clean up test\n     }\n+    \n+    @Test\n+    public void testPartFileAbsolute() throws Exception\n+    {\n+        MultipartConfigElement config = new MultipartConfigElement(_dirname, 1024, 3072, 50);\n+        MultiPartFormInputStream mpis = new MultiPartFormInputStream(new ByteArrayInputStream(createMultipartRequestString(\"tpfa\").getBytes()),\n+            _contentType,\n+            config,\n+            _tmpDir);\n+        mpis.setDeleteOnExit(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTQ2MQ=="}, "originalCommit": {"oid": "bb0a289596c5033d75f781dc557df3ac4b31d6b9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIwMDQ0Mg==", "bodyText": "Parts that have been written only to temporary files are all deleted when a Request is completed. See https://github.com/eclipse/jetty.project/blob/jetty-10.0.x/jetty-server/src/main/java/org/eclipse/jetty/server/Request.java#L1423 and https://github.com/eclipse/jetty.project/blob/jetty-10.0.x/jetty-server/src/main/java/org/eclipse/jetty/server/MultiPartFormInputStream.java#L333.", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r467200442", "createdAt": "2020-08-07T18:23:14Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/MultiPartFormInputStreamTest.java", "diffHunk": "@@ -474,6 +475,77 @@ public void testPartFileNotDeleted() throws Exception\n         assertThat(tptfd.exists(), is(true));  //explicitly written file did not get removed after cleanup\n         tptfd.deleteOnExit(); //clean up test\n     }\n+    \n+    @Test\n+    public void testPartFileAbsolute() throws Exception\n+    {\n+        MultipartConfigElement config = new MultipartConfigElement(_dirname, 1024, 3072, 50);\n+        MultiPartFormInputStream mpis = new MultiPartFormInputStream(new ByteArrayInputStream(createMultipartRequestString(\"tpfa\").getBytes()),\n+            _contentType,\n+            config,\n+            _tmpDir);\n+        mpis.setDeleteOnExit(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTQ2MQ=="}, "originalCommit": {"oid": "bb0a289596c5033d75f781dc557df3ac4b31d6b9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIyMTI4NA==", "bodyText": "Yeah, that seems to be more sane.  Cleanup at the end of the Request.", "url": "https://github.com/eclipse/jetty.project/pull/5119#discussion_r467221284", "createdAt": "2020-08-07T19:08:36Z", "author": {"login": "joakime"}, "path": "jetty-server/src/test/java/org/eclipse/jetty/server/MultiPartFormInputStreamTest.java", "diffHunk": "@@ -474,6 +475,77 @@ public void testPartFileNotDeleted() throws Exception\n         assertThat(tptfd.exists(), is(true));  //explicitly written file did not get removed after cleanup\n         tptfd.deleteOnExit(); //clean up test\n     }\n+    \n+    @Test\n+    public void testPartFileAbsolute() throws Exception\n+    {\n+        MultipartConfigElement config = new MultipartConfigElement(_dirname, 1024, 3072, 50);\n+        MultiPartFormInputStream mpis = new MultiPartFormInputStream(new ByteArrayInputStream(createMultipartRequestString(\"tpfa\").getBytes()),\n+            _contentType,\n+            config,\n+            _tmpDir);\n+        mpis.setDeleteOnExit(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA1MTQ2MQ=="}, "originalCommit": {"oid": "bb0a289596c5033d75f781dc557df3ac4b31d6b9"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2288, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}