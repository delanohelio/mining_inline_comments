{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1ODYxMDI0", "number": 4862, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0NjowNFrOD7JOaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowMTo0M1rOD8FI9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzQzNzIwOnYy", "diffSide": "RIGHT", "path": "tests/test-sessions/test-infinispan-sessions/pom.xml", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0NjowNFrOGTSpCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDo0OToyNFrOGUsA2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MTU0NA==", "bodyText": "So the bit that is missing here (AFAICT) is the configuration of the cache on the remote infinispan. Currently, I (manually) configure and start a remote infinispan instance with the config file that I've attached here (note it should be called remote-session-test.xml, but github doesn't allow attachment of .xml files).\nremote-session-test.txt", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r422881544", "createdAt": "2020-05-11T08:46:04Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/pom.xml", "diffHunk": "@@ -11,7 +11,12 @@\n   <url>http://www.eclipse.org/jetty</url>\n   <properties>\n     <bundle-symbolic-name>${project.groupId}.sessions.infinispan</bundle-symbolic-name>\n-    <hotrod.host>127.0.0.1</hotrod.host>\n+    <!-- if changing this version please update default in RemoteInfinispanTestSupport you will get thanks from Eclipse IDE users -->\n+    <!-- 10.1.7.Final -->\n+    <!--could be ${infinispan.version} but maybe we want to test different version of server vs client -->\n+    <infinispan.docker.image.version>9.4.8.Final</infinispan.docker.image.version>\n+    <!-- from 10.xx it has changed to jboss/infinispan -->\n+    <infinispan.docker.image.name>jboss/infinispan-server</infinispan.docker.image.name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54f230c1135d58d5823fbdb671afa9ec69654dcb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk0NTA1OA==", "bodyText": "dohhh what a complicated configuration!! :)\nwhat version are you using locally?\nthere can be some network issue with docker and how infinispan cluster mode works.\nAs it create on the fly some new endpoint and inform clients to use some ip/port (not sure to get this working here...)\nAnyway I can try.", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r422945058", "createdAt": "2020-05-11T10:33:33Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/pom.xml", "diffHunk": "@@ -11,7 +11,12 @@\n   <url>http://www.eclipse.org/jetty</url>\n   <properties>\n     <bundle-symbolic-name>${project.groupId}.sessions.infinispan</bundle-symbolic-name>\n-    <hotrod.host>127.0.0.1</hotrod.host>\n+    <!-- if changing this version please update default in RemoteInfinispanTestSupport you will get thanks from Eclipse IDE users -->\n+    <!-- 10.1.7.Final -->\n+    <!--could be ${infinispan.version} but maybe we want to test different version of server vs client -->\n+    <infinispan.docker.image.version>9.4.8.Final</infinispan.docker.image.version>\n+    <!-- from 10.xx it has changed to jboss/infinispan -->\n+    <infinispan.docker.image.name>jboss/infinispan-server</infinispan.docker.image.name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MTU0NA=="}, "originalCommit": {"oid": "54f230c1135d58d5823fbdb671afa9ec69654dcb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY4NDQyOQ==", "bodyText": "I'm locally using 9.4.8.Final.  I just copied one of the existing configurations in the $INFINISPAN_HOME/standalone/configuration directory, renamed it, and added a cache called \"remote-session-test\".  I'm not sure how to strip it down to keep only hotrod protocol and the remote-session-test cache.", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r423684429", "createdAt": "2020-05-12T12:14:18Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/pom.xml", "diffHunk": "@@ -11,7 +11,12 @@\n   <url>http://www.eclipse.org/jetty</url>\n   <properties>\n     <bundle-symbolic-name>${project.groupId}.sessions.infinispan</bundle-symbolic-name>\n-    <hotrod.host>127.0.0.1</hotrod.host>\n+    <!-- if changing this version please update default in RemoteInfinispanTestSupport you will get thanks from Eclipse IDE users -->\n+    <!-- 10.1.7.Final -->\n+    <!--could be ${infinispan.version} but maybe we want to test different version of server vs client -->\n+    <infinispan.docker.image.version>9.4.8.Final</infinispan.docker.image.version>\n+    <!-- from 10.xx it has changed to jboss/infinispan -->\n+    <infinispan.docker.image.name>jboss/infinispan-server</infinispan.docker.image.name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MTU0NA=="}, "originalCommit": {"oid": "54f230c1135d58d5823fbdb671afa9ec69654dcb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MTE4Nw==", "bodyText": "I finally use your file but please note it was already working with the standalone mode :)\nBut now it starts a cluster and we use it (please note the hotrod in is configured in BASIC mode to only use the pre defined host:port of the cluster  as we cannot use the dynamically created cluster node as we don't know in advance ports used so we cannot start docker with port mapping we don't know :)", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424171187", "createdAt": "2020-05-13T04:52:37Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/pom.xml", "diffHunk": "@@ -11,7 +11,12 @@\n   <url>http://www.eclipse.org/jetty</url>\n   <properties>\n     <bundle-symbolic-name>${project.groupId}.sessions.infinispan</bundle-symbolic-name>\n-    <hotrod.host>127.0.0.1</hotrod.host>\n+    <!-- if changing this version please update default in RemoteInfinispanTestSupport you will get thanks from Eclipse IDE users -->\n+    <!-- 10.1.7.Final -->\n+    <!--could be ${infinispan.version} but maybe we want to test different version of server vs client -->\n+    <infinispan.docker.image.version>9.4.8.Final</infinispan.docker.image.version>\n+    <!-- from 10.xx it has changed to jboss/infinispan -->\n+    <infinispan.docker.image.name>jboss/infinispan-server</infinispan.docker.image.name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MTU0NA=="}, "originalCommit": {"oid": "54f230c1135d58d5823fbdb671afa9ec69654dcb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMzOTM4MA==", "bodyText": "@olamy  I think there's some confusion here.  I merely copied the standalone.xml file to remote-session-test.xml , so if you're saying that standalone.xml from the distro is the default one that infinispan starts, then remote-session-test.xml should be no more complicated, just with the addition of a cache named \"remote-session-test\".  Secondly, if you're saying that the standalone.xml file can be used as is from the distro, and you're absolutely sure it's using hotrod as the communication protocol and not defaulting to something else, then we can of course use it.", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424339380", "createdAt": "2020-05-13T10:36:20Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/pom.xml", "diffHunk": "@@ -11,7 +11,12 @@\n   <url>http://www.eclipse.org/jetty</url>\n   <properties>\n     <bundle-symbolic-name>${project.groupId}.sessions.infinispan</bundle-symbolic-name>\n-    <hotrod.host>127.0.0.1</hotrod.host>\n+    <!-- if changing this version please update default in RemoteInfinispanTestSupport you will get thanks from Eclipse IDE users -->\n+    <!-- 10.1.7.Final -->\n+    <!--could be ${infinispan.version} but maybe we want to test different version of server vs client -->\n+    <infinispan.docker.image.version>9.4.8.Final</infinispan.docker.image.version>\n+    <!-- from 10.xx it has changed to jboss/infinispan -->\n+    <infinispan.docker.image.name>jboss/infinispan-server</infinispan.docker.image.name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MTU0NA=="}, "originalCommit": {"oid": "54f230c1135d58d5823fbdb671afa9ec69654dcb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM0NDc2MQ==", "bodyText": "yup I did some diff between the provided standalone.xml and remote-session-test.xml and they are very similar. Regarding hotrod See my comment here #4862 (comment)", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424344761", "createdAt": "2020-05-13T10:47:19Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/pom.xml", "diffHunk": "@@ -11,7 +11,12 @@\n   <url>http://www.eclipse.org/jetty</url>\n   <properties>\n     <bundle-symbolic-name>${project.groupId}.sessions.infinispan</bundle-symbolic-name>\n-    <hotrod.host>127.0.0.1</hotrod.host>\n+    <!-- if changing this version please update default in RemoteInfinispanTestSupport you will get thanks from Eclipse IDE users -->\n+    <!-- 10.1.7.Final -->\n+    <!--could be ${infinispan.version} but maybe we want to test different version of server vs client -->\n+    <infinispan.docker.image.version>9.4.8.Final</infinispan.docker.image.version>\n+    <!-- from 10.xx it has changed to jboss/infinispan -->\n+    <infinispan.docker.image.name>jboss/infinispan-server</infinispan.docker.image.name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MTU0NA=="}, "originalCommit": {"oid": "54f230c1135d58d5823fbdb671afa9ec69654dcb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM0NTgxOQ==", "bodyText": "I figure out we could change as well the test RemoteQueryManagerTest from infinispan-remote-query", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424345819", "createdAt": "2020-05-13T10:49:24Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/pom.xml", "diffHunk": "@@ -11,7 +11,12 @@\n   <url>http://www.eclipse.org/jetty</url>\n   <properties>\n     <bundle-symbolic-name>${project.groupId}.sessions.infinispan</bundle-symbolic-name>\n-    <hotrod.host>127.0.0.1</hotrod.host>\n+    <!-- if changing this version please update default in RemoteInfinispanTestSupport you will get thanks from Eclipse IDE users -->\n+    <!-- 10.1.7.Final -->\n+    <!--could be ${infinispan.version} but maybe we want to test different version of server vs client -->\n+    <infinispan.docker.image.version>9.4.8.Final</infinispan.docker.image.version>\n+    <!-- from 10.xx it has changed to jboss/infinispan -->\n+    <infinispan.docker.image.name>jboss/infinispan-server</infinispan.docker.image.name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MTU0NA=="}, "originalCommit": {"oid": "54f230c1135d58d5823fbdb671afa9ec69654dcb"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjUyMTM1OnYy", "diffSide": "RIGHT", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDo0NTo1OVrOGUr6Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDo0NTo1OVrOGUr6Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM0NDE1OQ==", "bodyText": "@janbartel 11222 is the default hotrod port and this is the one defined in the xml file. so yes we use hotrod :)", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424344159", "createdAt": "2020-05-13T10:45:59Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");\n+            infinispan.start();\n+            String host = infinispan.getContainerIpAddress();\n+            System.setProperty(\"hotrod.host\", host);\n+            int port = infinispan.getMappedPort(11222);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzI0MDU2OnYy", "diffSide": "RIGHT", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo1ODo1OFrOGUy-0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTowMDo1N1rOGVDXDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1OTk4NA==", "bodyText": "What's infinispan version 1? Support for infinispan started at version 7.", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424459984", "createdAt": "2020-05-13T13:58:58Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");\n+            infinispan.start();\n+            String host = infinispan.getContainerIpAddress();\n+            System.setProperty(\"hotrod.host\", host);\n+            int port = infinispan.getMappedPort(11222);\n+\n+            LOG.info(\"Infinispan container started for {}:{} - {}ms\", host, port,\n+                     System.currentTimeMillis() - start);\n             SearchMapping mapping = new SearchMapping();\n             mapping.entity(SessionData.class).indexed().providedId()\n                 .property(\"expiry\", ElementType.METHOD).field();\n \n             Properties properties = new Properties();\n             properties.put(Environment.MODEL_MAPPING, mapping);\n \n-            ConfigurationBuilder clientBuilder = new ConfigurationBuilder();\n-            clientBuilder.withProperties(properties).addServer().host(host).marshaller(new ProtoStreamMarshaller());\n+            ConfigurationBuilder configurationBuilder = new ConfigurationBuilder().withProperties(properties)\n+                .addServer().host(host).port(port)\n+                // we just want to limit connectivity to list of host:port we knows at start\n+                // as infinispan create new host:port dynamically but due to how docker expose host/port we cannot do that\n+                .clientIntelligence(ClientIntelligence.BASIC)\n+                .marshaller(new ProtoStreamMarshaller());\n+\n+            if (infinispanVersion.startsWith(\"1\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODM4MQ==", "bodyText": "from infinispan 10 onward some setup has changed but I agree it's a bit complicated. Do we really want something such dynamic? or testing with a fixed version is fine?", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424718381", "createdAt": "2020-05-13T20:41:32Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");\n+            infinispan.start();\n+            String host = infinispan.getContainerIpAddress();\n+            System.setProperty(\"hotrod.host\", host);\n+            int port = infinispan.getMappedPort(11222);\n+\n+            LOG.info(\"Infinispan container started for {}:{} - {}ms\", host, port,\n+                     System.currentTimeMillis() - start);\n             SearchMapping mapping = new SearchMapping();\n             mapping.entity(SessionData.class).indexed().providedId()\n                 .property(\"expiry\", ElementType.METHOD).field();\n \n             Properties properties = new Properties();\n             properties.put(Environment.MODEL_MAPPING, mapping);\n \n-            ConfigurationBuilder clientBuilder = new ConfigurationBuilder();\n-            clientBuilder.withProperties(properties).addServer().host(host).marshaller(new ProtoStreamMarshaller());\n+            ConfigurationBuilder configurationBuilder = new ConfigurationBuilder().withProperties(properties)\n+                .addServer().host(host).port(port)\n+                // we just want to limit connectivity to list of host:port we knows at start\n+                // as infinispan create new host:port dynamically but due to how docker expose host/port we cannot do that\n+                .clientIntelligence(ClientIntelligence.BASIC)\n+                .marshaller(new ProtoStreamMarshaller());\n+\n+            if (infinispanVersion.startsWith(\"1\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1OTk4NA=="}, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyODMzMw==", "bodyText": "Well we should at least test against the version we compile against (currently 9.4.8.Final). Anything else is a nice-to-have.", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424728333", "createdAt": "2020-05-13T21:00:57Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");\n+            infinispan.start();\n+            String host = infinispan.getContainerIpAddress();\n+            System.setProperty(\"hotrod.host\", host);\n+            int port = infinispan.getMappedPort(11222);\n+\n+            LOG.info(\"Infinispan container started for {}:{} - {}ms\", host, port,\n+                     System.currentTimeMillis() - start);\n             SearchMapping mapping = new SearchMapping();\n             mapping.entity(SessionData.class).indexed().providedId()\n                 .property(\"expiry\", ElementType.METHOD).field();\n \n             Properties properties = new Properties();\n             properties.put(Environment.MODEL_MAPPING, mapping);\n \n-            ConfigurationBuilder clientBuilder = new ConfigurationBuilder();\n-            clientBuilder.withProperties(properties).addServer().host(host).marshaller(new ProtoStreamMarshaller());\n+            ConfigurationBuilder configurationBuilder = new ConfigurationBuilder().withProperties(properties)\n+                .addServer().host(host).port(port)\n+                // we just want to limit connectivity to list of host:port we knows at start\n+                // as infinispan create new host:port dynamically but due to how docker expose host/port we cannot do that\n+                .clientIntelligence(ClientIntelligence.BASIC)\n+                .marshaller(new ProtoStreamMarshaller());\n+\n+            if (infinispanVersion.startsWith(\"1\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1OTk4NA=="}, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzI0NDg0OnYy", "diffSide": "RIGHT", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo1OTo1MlrOGUzBiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo0MTo0OVrOGVCwsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MDY4MQ==", "bodyText": "So if by default infinispan starts with standalone.xml file as the config, we don't need to use my remote-session-test.xml, correct?", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424460681", "createdAt": "2020-05-13T13:59:52Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODUxMw==", "bodyText": "yes correct. I'm happy to remove this :)", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424718513", "createdAt": "2020-05-13T20:41:49Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MDY4MQ=="}, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzI0NzQyOnYy", "diffSide": "RIGHT", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowMDoyM1rOGUzDNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo0MjowM1rOGVCxKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MTExMA==", "bodyText": "See previous, if the default startup of infinispan uses  hotrod, we can use that?", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424461110", "createdAt": "2020-05-13T14:00:23Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODYzMw==", "bodyText": "yes", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424718633", "createdAt": "2020-05-13T20:42:03Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MTExMA=="}, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzI1MzY2OnYy", "diffSide": "RIGHT", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowMTo0M1rOGUzHJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTowMTo0OVrOGVDYsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MjExNg==", "bodyText": "Is this creating a cache named \"remote-session-test\" on the infinispan server? If so, we don't need to do that because at line 170 we will create it there?", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424462116", "createdAt": "2020-05-13T14:01:43Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -86,11 +137,13 @@\n             }\n \n             String content = baos.toString(\"UTF-8\");\n-            _manager.getCache(\"___protobuf_metadata\").put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"___protobuf_metadata\", (String)null).put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"remote-session-test\", (String)null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxOTYzOQ==", "bodyText": "yes but in line 170 it use the field _name which can have a different value. This line of code is just here to start with standalone configuration and create the cache remote-session-test at start as if we were using the file remote-session-test.xml", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424719639", "createdAt": "2020-05-13T20:44:07Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -86,11 +137,13 @@\n             }\n \n             String content = baos.toString(\"UTF-8\");\n-            _manager.getCache(\"___protobuf_metadata\").put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"___protobuf_metadata\", (String)null).put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"remote-session-test\", (String)null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MjExNg=="}, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyODc1Mg==", "bodyText": "Right, but all the remote tests pass in the name \"remote-session-test\" don't they?", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424728752", "createdAt": "2020-05-13T21:01:49Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -86,11 +137,13 @@\n             }\n \n             String content = baos.toString(\"UTF-8\");\n-            _manager.getCache(\"___protobuf_metadata\").put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"___protobuf_metadata\", (String)null).put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"remote-session-test\", (String)null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MjExNg=="}, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2532, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}