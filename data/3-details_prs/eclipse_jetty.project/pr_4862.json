{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1ODYxMDI0", "number": 4862, "title": "Use docker to run remote infinispan tests", "bodyText": "", "createdAt": "2020-05-11T04:38:20Z", "url": "https://github.com/eclipse/jetty.project/pull/4862", "merged": true, "mergeCommit": {"oid": "9b16f2deee34cdd4ed573231107a1cce070563a0"}, "closed": true, "closedAt": "2020-05-16T09:38:34Z", "author": {"login": "olamy"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgLpvCAFqTQwODk3NjkwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchyhECgFqTQxMzA1OTU5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4OTc2OTAx", "url": "https://github.com/eclipse/jetty.project/pull/4862#pullrequestreview-408976901", "createdAt": "2020-05-11T08:46:04Z", "commit": {"oid": "54f230c1135d58d5823fbdb671afa9ec69654dcb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0NjowNFrOGTSpCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0NjowNFrOGTSpCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MTU0NA==", "bodyText": "So the bit that is missing here (AFAICT) is the configuration of the cache on the remote infinispan. Currently, I (manually) configure and start a remote infinispan instance with the config file that I've attached here (note it should be called remote-session-test.xml, but github doesn't allow attachment of .xml files).\nremote-session-test.txt", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r422881544", "createdAt": "2020-05-11T08:46:04Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/pom.xml", "diffHunk": "@@ -11,7 +11,12 @@\n   <url>http://www.eclipse.org/jetty</url>\n   <properties>\n     <bundle-symbolic-name>${project.groupId}.sessions.infinispan</bundle-symbolic-name>\n-    <hotrod.host>127.0.0.1</hotrod.host>\n+    <!-- if changing this version please update default in RemoteInfinispanTestSupport you will get thanks from Eclipse IDE users -->\n+    <!-- 10.1.7.Final -->\n+    <!--could be ${infinispan.version} but maybe we want to test different version of server vs client -->\n+    <infinispan.docker.image.version>9.4.8.Final</infinispan.docker.image.version>\n+    <!-- from 10.xx it has changed to jboss/infinispan -->\n+    <infinispan.docker.image.name>jboss/infinispan-server</infinispan.docker.image.name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54f230c1135d58d5823fbdb671afa9ec69654dcb"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01c8a4b6667fa3a7c0228835f991e2026c347853", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/01c8a4b6667fa3a7c0228835f991e2026c347853", "committedDate": "2020-05-13T04:38:06Z", "message": "use docker image to test infinispan remote access\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a534af0f3f25f0b54acfa9e3cfd27588d2416ef", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/0a534af0f3f25f0b54acfa9e3cfd27588d2416ef", "committedDate": "2020-05-13T04:38:06Z", "message": "Activate infinispan remote testing using docker image\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "119d5b0bb6bf56bd390cf21dd85ccfea6dd111a2", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/119d5b0bb6bf56bd390cf21dd85ccfea6dd111a2", "committedDate": "2020-05-13T04:38:06Z", "message": "more testing with Jan configuration file\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d831577b5046fb61db05b89814ce99e7ecc3a12d", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/d831577b5046fb61db05b89814ce99e7ecc3a12d", "committedDate": "2020-05-13T04:38:06Z", "message": "finally use the file from Jan :)\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f9b9a5431120499ba2a2cd12c003f5ef19e1c98", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/3f9b9a5431120499ba2a2cd12c003f5ef19e1c98", "committedDate": "2020-05-13T04:34:59Z", "message": "finally use the file from Jan :)\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}, "afterCommit": {"oid": "d831577b5046fb61db05b89814ce99e7ecc3a12d", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/d831577b5046fb61db05b89814ce99e7ecc3a12d", "committedDate": "2020-05-13T04:38:06Z", "message": "finally use the file from Jan :)\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68f94a43c29ac310c7bc9336afb640df33e0ea3d", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/68f94a43c29ac310c7bc9336afb640df33e0ea3d", "committedDate": "2020-05-13T10:00:44Z", "message": "no need to ignore those tests\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c73ece4f8360238951d658dafa069ea753148025", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/c73ece4f8360238951d658dafa069ea753148025", "committedDate": "2020-05-13T10:15:17Z", "message": "use new junit api to test exception\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwODA0MzEy", "url": "https://github.com/eclipse/jetty.project/pull/4862#pullrequestreview-410804312", "createdAt": "2020-05-13T10:45:59Z", "commit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDo0NTo1OVrOGUr6Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDo0NTo1OVrOGUr6Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM0NDE1OQ==", "bodyText": "@janbartel 11222 is the default hotrod port and this is the one defined in the xml file. so yes we use hotrod :)", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424344159", "createdAt": "2020-05-13T10:45:59Z", "author": {"login": "olamy"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");\n+            infinispan.start();\n+            String host = infinispan.getContainerIpAddress();\n+            System.setProperty(\"hotrod.host\", host);\n+            int port = infinispan.getMappedPort(11222);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTUzMDMw", "url": "https://github.com/eclipse/jetty.project/pull/4862#pullrequestreview-410953030", "createdAt": "2020-05-13T13:58:58Z", "commit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo1ODo1OFrOGUy-0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo1ODo1OFrOGUy-0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1OTk4NA==", "bodyText": "What's infinispan version 1? Support for infinispan started at version 7.", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424459984", "createdAt": "2020-05-13T13:58:58Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");\n+            infinispan.start();\n+            String host = infinispan.getContainerIpAddress();\n+            System.setProperty(\"hotrod.host\", host);\n+            int port = infinispan.getMappedPort(11222);\n+\n+            LOG.info(\"Infinispan container started for {}:{} - {}ms\", host, port,\n+                     System.currentTimeMillis() - start);\n             SearchMapping mapping = new SearchMapping();\n             mapping.entity(SessionData.class).indexed().providedId()\n                 .property(\"expiry\", ElementType.METHOD).field();\n \n             Properties properties = new Properties();\n             properties.put(Environment.MODEL_MAPPING, mapping);\n \n-            ConfigurationBuilder clientBuilder = new ConfigurationBuilder();\n-            clientBuilder.withProperties(properties).addServer().host(host).marshaller(new ProtoStreamMarshaller());\n+            ConfigurationBuilder configurationBuilder = new ConfigurationBuilder().withProperties(properties)\n+                .addServer().host(host).port(port)\n+                // we just want to limit connectivity to list of host:port we knows at start\n+                // as infinispan create new host:port dynamically but due to how docker expose host/port we cannot do that\n+                .clientIntelligence(ClientIntelligence.BASIC)\n+                .marshaller(new ProtoStreamMarshaller());\n+\n+            if (infinispanVersion.startsWith(\"1\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTUzOTQ3", "url": "https://github.com/eclipse/jetty.project/pull/4862#pullrequestreview-410953947", "createdAt": "2020-05-13T13:59:52Z", "commit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo1OTo1MlrOGUzBiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo1OTo1MlrOGUzBiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MDY4MQ==", "bodyText": "So if by default infinispan starts with standalone.xml file as the config, we don't need to use my remote-session-test.xml, correct?", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424460681", "createdAt": "2020-05-13T13:59:52Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTU0NTA5", "url": "https://github.com/eclipse/jetty.project/pull/4862#pullrequestreview-410954509", "createdAt": "2020-05-13T14:00:23Z", "commit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowMDoyM1rOGUzDNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowMDoyM1rOGUzDNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MTExMA==", "bodyText": "See previous, if the default startup of infinispan uses  hotrod, we can use that?", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424461110", "createdAt": "2020-05-13T14:00:23Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTU1ODI3", "url": "https://github.com/eclipse/jetty.project/pull/4862#pullrequestreview-410955827", "createdAt": "2020-05-13T14:01:43Z", "commit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowMTo0M1rOGUzHJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowMTo0M1rOGUzHJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MjExNg==", "bodyText": "Is this creating a cache named \"remote-session-test\" on the infinispan server? If so, we don't need to do that because at line 170 we will create it there?", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424462116", "createdAt": "2020-05-13T14:01:43Z", "author": {"login": "janbartel"}, "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -86,11 +137,13 @@\n             }\n \n             String content = baos.toString(\"UTF-8\");\n-            _manager.getCache(\"___protobuf_metadata\").put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"___protobuf_metadata\", (String)null).put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"remote-session-test\", (String)null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73ece4f8360238951d658dafa069ea753148025"}, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7539e9ca5b1ca3047b5d25048d2df5f59ebf15a", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/d7539e9ca5b1ca3047b5d25048d2df5f59ebf15a", "committedDate": "2020-05-14T04:54:23Z", "message": "add RemoteQueryManagerTest to use infinispan via testcontainer, simplify how we start infinispan\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19820e5464a8041ab61370245bbd17edbbb6a366", "author": {"user": {"login": "olamy", "name": "Olivier Lamy"}}, "url": "https://github.com/eclipse/jetty.project/commit/19820e5464a8041ab61370245bbd17edbbb6a366", "committedDate": "2020-05-14T05:00:30Z", "message": "do not create on start\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDU5NTkz", "url": "https://github.com/eclipse/jetty.project/pull/4862#pullrequestreview-413059593", "createdAt": "2020-05-16T08:36:57Z", "commit": {"oid": "19820e5464a8041ab61370245bbd17edbbb6a366"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 388, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}