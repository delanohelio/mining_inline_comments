{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1Mjg4MjM3", "number": 4924, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1ODoxNVrOEBCRbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMDowNTowM1rOEBGTzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTIxMjYwOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1ODoxNVrOGcr27w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTozMDo1MVrOGcsoRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMTg4Nw==", "bodyText": "Please rename the class to SslSessionData, and everywhere \"info\" to \"data\". Drop Cached.\nAlso make everything private: fields, methods, etc.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432731887", "createdAt": "2020-05-29T20:58:15Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +397,41 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession. Stores the\n+     * effective keySize and the client certificate chain.\n+     */\n+    private static class CachedSslSessionInfo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1c2c07a5138d8ed8020d17ac07040f0666e5b89"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0NDUxOQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432744519", "createdAt": "2020-05-29T21:30:51Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +397,41 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession. Stores the\n+     * effective keySize and the client certificate chain.\n+     */\n+    private static class CachedSslSessionInfo", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMTg4Nw=="}, "originalCommit": {"oid": "c1c2c07a5138d8ed8020d17ac07040f0666e5b89"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTIxNjUxOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1OTo0M1rOGcr5Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTozMDo0NFrOGcsoFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMjQ5MA==", "bodyText": "Why Integer? Should be int.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432732490", "createdAt": "2020-05-29T20:59:43Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +397,41 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession. Stores the\n+     * effective keySize and the client certificate chain.\n+     */\n+    private static class CachedSslSessionInfo\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain any cached information.\n+         */\n+        public static final String ATTR = CachedSslSessionInfo.class.getName();\n+        private final X509Certificate[] _certs;\n+        private final Integer _keySize;\n+        private final String _idStr;\n+\n+        CachedSslSessionInfo(Integer keySize, X509Certificate[] certs, String idStr)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1c2c07a5138d8ed8020d17ac07040f0666e5b89"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0MTE3Mw==", "bodyText": "Came from the old (9.4.28) CachedInfo.\n\n  \n    \n      jetty.project/jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java\n    \n    \n        Lines 360 to 387\n      in\n      ab228fd\n    \n    \n    \n    \n\n        \n          \n           private static class CachedInfo \n        \n\n        \n          \n           { \n        \n\n        \n          \n               private final X509Certificate[] _certs; \n        \n\n        \n          \n               private final Integer _keySize; \n        \n\n        \n          \n               private final String _idStr; \n        \n\n        \n          \n            \n        \n\n        \n          \n               CachedInfo(Integer keySize, X509Certificate[] certs, String idStr) \n        \n\n        \n          \n               { \n        \n\n        \n          \n                   this._keySize = keySize; \n        \n\n        \n          \n                   this._certs = certs; \n        \n\n        \n          \n                   this._idStr = idStr; \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               X509Certificate[] getCerts() \n        \n\n        \n          \n               { \n        \n\n        \n          \n                   return _certs; \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               Integer getKeySize() \n        \n\n        \n          \n               { \n        \n\n        \n          \n                   return _keySize; \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               String getIdStr() \n        \n\n        \n          \n               { \n        \n\n        \n          \n                   return _idStr; \n        \n\n        \n          \n               } \n        \n\n        \n          \n           }", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432741173", "createdAt": "2020-05-29T21:21:33Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +397,41 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession. Stores the\n+     * effective keySize and the client certificate chain.\n+     */\n+    private static class CachedSslSessionInfo\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain any cached information.\n+         */\n+        public static final String ATTR = CachedSslSessionInfo.class.getName();\n+        private final X509Certificate[] _certs;\n+        private final Integer _keySize;\n+        private final String _idStr;\n+\n+        CachedSslSessionInfo(Integer keySize, X509Certificate[] certs, String idStr)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMjQ5MA=="}, "originalCommit": {"oid": "c1c2c07a5138d8ed8020d17ac07040f0666e5b89"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0NDQ3MA==", "bodyText": "Fixed", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432744470", "createdAt": "2020-05-29T21:30:44Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +397,41 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession. Stores the\n+     * effective keySize and the client certificate chain.\n+     */\n+    private static class CachedSslSessionInfo\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain any cached information.\n+         */\n+        public static final String ATTR = CachedSslSessionInfo.class.getName();\n+        private final X509Certificate[] _certs;\n+        private final Integer _keySize;\n+        private final String _idStr;\n+\n+        CachedSslSessionInfo(Integer keySize, X509Certificate[] certs, String idStr)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMjQ5MA=="}, "originalCommit": {"oid": "c1c2c07a5138d8ed8020d17ac07040f0666e5b89"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTIyMjEwOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTowMTozNlrOGcr8hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTozMToxNlrOGcso0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMzMxNg==", "bodyText": "Keep field declarations in the same order as the constructor parameters and constructor assignments.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432733316", "createdAt": "2020-05-29T21:01:36Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +397,41 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession. Stores the\n+     * effective keySize and the client certificate chain.\n+     */\n+    private static class CachedSslSessionInfo\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain any cached information.\n+         */\n+        public static final String ATTR = CachedSslSessionInfo.class.getName();\n+        private final X509Certificate[] _certs;\n+        private final Integer _keySize;\n+        private final String _idStr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1c2c07a5138d8ed8020d17ac07040f0666e5b89"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0NDY1OA==", "bodyText": "Done.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432744658", "createdAt": "2020-05-29T21:31:16Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +397,41 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession. Stores the\n+     * effective keySize and the client certificate chain.\n+     */\n+    private static class CachedSslSessionInfo\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain any cached information.\n+         */\n+        public static final String ATTR = CachedSslSessionInfo.class.getName();\n+        private final X509Certificate[] _certs;\n+        private final Integer _keySize;\n+        private final String _idStr;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMzMxNg=="}, "originalCommit": {"oid": "c1c2c07a5138d8ed8020d17ac07040f0666e5b89"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTMyMzczOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo0Mjo0OFrOGcs6lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoxNjowMlrOGdIang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0OTIwNw==", "bodyText": "int, not Integer.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432749207", "createdAt": "2020-05-29T21:42:48Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.\n+         */\n+        private static final String ATTR = SslSessionData.class.getName();\n+        private final Integer _keySize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgyODYwMA==", "bodyText": "Isn't Integer better here so it doesn't get boxed on every get?", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432828600", "createdAt": "2020-05-30T10:03:49Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.\n+         */\n+        private static final String ATTR = SslSessionData.class.getName();\n+        private final Integer _keySize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0OTIwNw=="}, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzMDg5MQ==", "bodyText": "Ah yes, Integer everywhere - I missed the boxing when returning the attribute, and the keySize values are not cached in Integer (only caches -128 to127).", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432830891", "createdAt": "2020-05-30T10:39:52Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.\n+         */\n+        private static final String ATTR = SslSessionData.class.getName();\n+        private final Integer _keySize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0OTIwNw=="}, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5OTc3NA==", "bodyText": "It's Integer everywhere now.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r433199774", "createdAt": "2020-06-01T12:16:02Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.\n+         */\n+        private static final String ATTR = SslSessionData.class.getName();\n+        private final Integer _keySize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0OTIwNw=="}, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTMyODM1OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo0MzoyN1rOGcs9ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoxNTo1MVrOGdIaVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0OTkzMA==", "bodyText": "Put this getter after getKeySize() to be consistent with ordering.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432749930", "createdAt": "2020-05-29T21:43:27Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.\n+         */\n+        private static final String ATTR = SslSessionData.class.getName();\n+        private final Integer _keySize;\n+        private final X509Certificate[] _certs;\n+        private final String _idStr;\n+\n+        private SslSessionData(int keySize, X509Certificate[] certs, String idStr)\n+        {\n+            this._keySize = keySize;\n+            this._certs = certs;\n+            this._idStr = idStr;\n+        }\n+\n+        private X509Certificate[] getCerts()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5OTcwMw==", "bodyText": "Moved.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r433199703", "createdAt": "2020-06-01T12:15:51Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.\n+         */\n+        private static final String ATTR = SslSessionData.class.getName();\n+        private final Integer _keySize;\n+        private final X509Certificate[] _certs;\n+        private final String _idStr;\n+\n+        private SslSessionData(int keySize, X509Certificate[] certs, String idStr)\n+        {\n+            this._keySize = keySize;\n+            this._certs = certs;\n+            this._idStr = idStr;\n+        }\n+\n+        private X509Certificate[] getCerts()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0OTkzMA=="}, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTMzNTU0OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo0NDoyN1rOGctB5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoxNTo0NFrOGdIaGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1MTA3OA==", "bodyText": "information -> data", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432751078", "createdAt": "2020-05-29T21:44:27Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5OTY0Mw==", "bodyText": "This ATTR was removed.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r433199643", "createdAt": "2020-06-01T12:15:44Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1MTA3OA=="}, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTMzNjExOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo0NDozM1rOGctCSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoxNTozNlrOGdIZ4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1MTE3OQ==", "bodyText": "information -> data", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432751179", "createdAt": "2020-05-29T21:44:33Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5OTU4NQ==", "bodyText": "Done.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r433199585", "createdAt": "2020-06-01T12:15:36Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1MTE3OQ=="}, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTM1MDAwOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo0NjoyOVrOGctLGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoxNToyNFrOGdIZgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1MzQzNQ==", "bodyText": "This method is the only user of SslSessionData.ATTR.\nSo perhaps we don't need the constant in another class.\nWe can do at beginning of method:\nString key = SslSessionData.class.getName()\nand then use key where now we use ATTR.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432753435", "createdAt": "2020-05-29T21:46:29Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -363,6 +362,30 @@ public Object getAttribute(String name)\n             return null;\n         }\n \n+        /**\n+         * Get data belonging to the {@link SSLSession}.\n+         *\n+         * @return the SslSessionData\n+         */\n+        private SslSessionData getSslSessionData()\n+        {\n+            SslSessionData sslSessionData = (SslSessionData)_session.getValue(SslSessionData.ATTR);\n+            if (sslSessionData == null)\n+            {\n+                String cipherSuite = _session.getCipherSuite();\n+                int keySize = SslContextFactory.deduceKeyLength(cipherSuite);\n+\n+                X509Certificate[] certs = getCertChain(_request.getHttpChannel().getConnector(), _session);\n+\n+                byte[] bytes = _session.getId();\n+                String idStr = TypeUtil.toHexString(bytes);\n+\n+                sslSessionData = new SslSessionData(keySize, certs, idStr);\n+                _session.putValue(SslSessionData.ATTR, sslSessionData);\n+            }\n+            return sslSessionData;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5OTQ5MA==", "bodyText": "Done.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r433199490", "createdAt": "2020-06-01T12:15:24Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -363,6 +362,30 @@ public Object getAttribute(String name)\n             return null;\n         }\n \n+        /**\n+         * Get data belonging to the {@link SSLSession}.\n+         *\n+         * @return the SslSessionData\n+         */\n+        private SslSessionData getSslSessionData()\n+        {\n+            SslSessionData sslSessionData = (SslSessionData)_session.getValue(SslSessionData.ATTR);\n+            if (sslSessionData == null)\n+            {\n+                String cipherSuite = _session.getCipherSuite();\n+                int keySize = SslContextFactory.deduceKeyLength(cipherSuite);\n+\n+                X509Certificate[] certs = getCertChain(_request.getHttpChannel().getConnector(), _session);\n+\n+                byte[] bytes = _session.getId();\n+                String idStr = TypeUtil.toHexString(bytes);\n+\n+                sslSessionData = new SslSessionData(keySize, certs, idStr);\n+                _session.putValue(SslSessionData.ATTR, sslSessionData);\n+            }\n+            return sslSessionData;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1MzQzNQ=="}, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTg3NDA3OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMDowNTowM1rOGcxw_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoxNDoxN1rOGdIXlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgyODY3MQ==", "bodyText": "If the _keySize is an Integer then return that here so it doesn't get unboxed and reboxed.\nUse int everywhere or Integer everywhere.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r432828671", "createdAt": "2020-05-30T10:05:03Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.\n+         */\n+        private static final String ATTR = SslSessionData.class.getName();\n+        private final Integer _keySize;\n+        private final X509Certificate[] _certs;\n+        private final String _idStr;\n+\n+        private SslSessionData(int keySize, X509Certificate[] certs, String idStr)\n+        {\n+            this._keySize = keySize;\n+            this._certs = certs;\n+            this._idStr = idStr;\n+        }\n+\n+        private X509Certificate[] getCerts()\n+        {\n+            return _certs;\n+        }\n+\n+        private int getKeySize()\n+        {\n+            return _keySize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5ODk5Nw==", "bodyText": "Done.", "url": "https://github.com/eclipse/jetty.project/pull/4924#discussion_r433198997", "createdAt": "2020-06-01T12:14:17Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/SecureRequestCustomizer.java", "diffHunk": "@@ -377,4 +400,40 @@ public Object getAttribute(String name)\n             return names;\n         }\n     }\n+\n+    /**\n+     * Simple bundle of information that is cached in the SSLSession.\n+     */\n+    private static class SslSessionData\n+    {\n+        /**\n+         * The name of the SSLSession attribute that will contain this information.\n+         */\n+        private static final String ATTR = SslSessionData.class.getName();\n+        private final Integer _keySize;\n+        private final X509Certificate[] _certs;\n+        private final String _idStr;\n+\n+        private SslSessionData(int keySize, X509Certificate[] certs, String idStr)\n+        {\n+            this._keySize = keySize;\n+            this._certs = certs;\n+            this._idStr = idStr;\n+        }\n+\n+        private X509Certificate[] getCerts()\n+        {\n+            return _certs;\n+        }\n+\n+        private int getKeySize()\n+        {\n+            return _keySize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgyODY3MQ=="}, "originalCommit": {"oid": "6a953e3a0e0c6a8db40f2a0cc1f56078fcf37457"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2576, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}