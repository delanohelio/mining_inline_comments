{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTEyOTI4", "number": 5807, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozODo0OFrOFE3Qyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0OToxM1rOFE3ilw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQ0MDQyOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozODo0OFrOIFFUxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozODo0OFrOIFFUxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwMTAzMA==", "bodyText": "is that the only mechanism to get an inferred type?\nI think it would be best just to say that  the charset is inferred from the content-type and will be added as a parameter to the content-type", "url": "https://github.com/eclipse/jetty.project/pull/5807#discussion_r542201030", "createdAt": "2020-12-14T08:38:48Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "diffHunk": "@@ -103,11 +103,35 @@\n \n     private enum EncodingFrom\n     {\n-        NOT_SET, INFERRED, SET_LOCALE, SET_CONTENT_TYPE, SET_CHARACTER_ENCODING\n+        /**\n+         * Character encoding was not set, or the encoding was cleared with {@code setCharacterEncoding(null)}.\n+         */\n+        NOT_SET,\n+\n+        /**\n+         * Character encoding was not explicitly set but has a default value defined by the {@code encoding.properties} file.\n+         * @see MimeTypes#getInferredEncodings().\n+         */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908acd59046d9d72e236870aa513a9f5e946b445"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQ0NDUzOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozOTo1MFrOIFFXDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODozOTo1MFrOIFFXDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwMTYxMw==", "bodyText": "No, because content-type has already been set, hence we have a mimeType.   We don't need to add the charset as Assumed charsets are never added to the content-type - by definition of what assumed is (otherwise they are inferred).", "url": "https://github.com/eclipse/jetty.project/pull/5807#discussion_r542201613", "createdAt": "2020-12-14T08:39:50Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "diffHunk": "@@ -754,26 +778,57 @@ public void setStatusWithReason(int sc, String message)\n     @Override\n     public String getCharacterEncoding()\n     {\n-        if (_characterEncoding == null)\n+        return getCharacterEncoding(false);\n+    }\n+\n+    /**\n+     * Private utility method to get the character encoding.\n+     * A standard call to {@link #getCharacterEncoding()} should not change the Content-Type header.\n+     * But when {@link #getWriter()} is called we must decide what Content Type to use, so this will allow an inferred\n+     * charset to be set in in the Content-Type.\n+     * @param setContentType set the Content-Type header if this is set to true, otherwise just calculate what it should be.\n+     * @return the character encoding for this response.\n+     */\n+    private String getCharacterEncoding(boolean setContentType)\n+    {\n+        // First try explicit char encoding.\n+        if (_characterEncoding != null)\n+            return _characterEncoding;\n+\n+        String encoding;\n+\n+        // Try charset from mime type. TODO: should this be added to Content-Type header?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908acd59046d9d72e236870aa513a9f5e946b445"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQ3MDE5OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0NTo0MlrOIFFlew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0NTo0MlrOIFFlew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwNTMwNw==", "bodyText": "probably should mention it only sets inferred and default", "url": "https://github.com/eclipse/jetty.project/pull/5807#discussion_r542205307", "createdAt": "2020-12-14T08:45:42Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "diffHunk": "@@ -754,26 +778,57 @@ public void setStatusWithReason(int sc, String message)\n     @Override\n     public String getCharacterEncoding()\n     {\n-        if (_characterEncoding == null)\n+        return getCharacterEncoding(false);\n+    }\n+\n+    /**\n+     * Private utility method to get the character encoding.\n+     * A standard call to {@link #getCharacterEncoding()} should not change the Content-Type header.\n+     * But when {@link #getWriter()} is called we must decide what Content Type to use, so this will allow an inferred\n+     * charset to be set in in the Content-Type.\n+     * @param setContentType set the Content-Type header if this is set to true, otherwise just calculate what it should be.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908acd59046d9d72e236870aa513a9f5e946b445"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQ4Mzk5OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0ODo0NFrOIFFtUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0ODo0NFrOIFFtUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwNzMxMg==", "bodyText": "Yes - if not set here will never be set", "url": "https://github.com/eclipse/jetty.project/pull/5807#discussion_r542207312", "createdAt": "2020-12-14T08:48:44Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "diffHunk": "@@ -754,26 +778,57 @@ public void setStatusWithReason(int sc, String message)\n     @Override\n     public String getCharacterEncoding()\n     {\n-        if (_characterEncoding == null)\n+        return getCharacterEncoding(false);\n+    }\n+\n+    /**\n+     * Private utility method to get the character encoding.\n+     * A standard call to {@link #getCharacterEncoding()} should not change the Content-Type header.\n+     * But when {@link #getWriter()} is called we must decide what Content Type to use, so this will allow an inferred\n+     * charset to be set in in the Content-Type.\n+     * @param setContentType set the Content-Type header if this is set to true, otherwise just calculate what it should be.\n+     * @return the character encoding for this response.\n+     */\n+    private String getCharacterEncoding(boolean setContentType)\n+    {\n+        // First try explicit char encoding.\n+        if (_characterEncoding != null)\n+            return _characterEncoding;\n+\n+        String encoding;\n+\n+        // Try charset from mime type. TODO: should this be added to Content-Type header?\n+        if (_mimeType != null && _mimeType.isCharsetAssumed())\n+            return _mimeType.getCharsetString();\n+\n+        // Try charset assumed from content type (assumed charsets are not added to content type header).\n+        encoding = MimeTypes.getCharsetAssumedFromContentType(_contentType);\n+        if (encoding != null)\n+            return encoding;\n+\n+        // Try char set inferred from content type.\n+        encoding = MimeTypes.getCharsetInferredFromContentType(_contentType);\n+        if (encoding != null)\n         {\n-            String encoding = MimeTypes.getCharsetAssumedFromContentType(_contentType);\n-            if (encoding != null)\n-                return encoding;\n+            if (setContentType)\n+                setCharacterEncoding(encoding, EncodingFrom.INFERRED);\n+            return encoding;\n+        }\n \n-            encoding = MimeTypes.getCharsetInferredFromContentType(_contentType);\n+        // Try any default char encoding for the context. TODO: should this be added to Content-Type header?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908acd59046d9d72e236870aa513a9f5e946b445"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjQ4NTk5OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0OToxM1rOIFFueA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0OToxM1rOIFFueA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwNzYwOA==", "bodyText": "Not really INFERRED - maybe need a DEFAULT?", "url": "https://github.com/eclipse/jetty.project/pull/5807#discussion_r542207608", "createdAt": "2020-12-14T08:49:13Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "diffHunk": "@@ -754,26 +778,57 @@ public void setStatusWithReason(int sc, String message)\n     @Override\n     public String getCharacterEncoding()\n     {\n-        if (_characterEncoding == null)\n+        return getCharacterEncoding(false);\n+    }\n+\n+    /**\n+     * Private utility method to get the character encoding.\n+     * A standard call to {@link #getCharacterEncoding()} should not change the Content-Type header.\n+     * But when {@link #getWriter()} is called we must decide what Content Type to use, so this will allow an inferred\n+     * charset to be set in in the Content-Type.\n+     * @param setContentType set the Content-Type header if this is set to true, otherwise just calculate what it should be.\n+     * @return the character encoding for this response.\n+     */\n+    private String getCharacterEncoding(boolean setContentType)\n+    {\n+        // First try explicit char encoding.\n+        if (_characterEncoding != null)\n+            return _characterEncoding;\n+\n+        String encoding;\n+\n+        // Try charset from mime type. TODO: should this be added to Content-Type header?\n+        if (_mimeType != null && _mimeType.isCharsetAssumed())\n+            return _mimeType.getCharsetString();\n+\n+        // Try charset assumed from content type (assumed charsets are not added to content type header).\n+        encoding = MimeTypes.getCharsetAssumedFromContentType(_contentType);\n+        if (encoding != null)\n+            return encoding;\n+\n+        // Try char set inferred from content type.\n+        encoding = MimeTypes.getCharsetInferredFromContentType(_contentType);\n+        if (encoding != null)\n         {\n-            String encoding = MimeTypes.getCharsetAssumedFromContentType(_contentType);\n-            if (encoding != null)\n-                return encoding;\n+            if (setContentType)\n+                setCharacterEncoding(encoding, EncodingFrom.INFERRED);\n+            return encoding;\n+        }\n \n-            encoding = MimeTypes.getCharsetInferredFromContentType(_contentType);\n+        // Try any default char encoding for the context. TODO: should this be added to Content-Type header?\n+        Context context = _channel.getRequest().getContext();\n+        if (context != null)\n+        {\n+            encoding = context.getResponseCharacterEncoding();\n             if (encoding != null)\n                 return encoding;\n-\n-            Context context = _channel.getRequest().getContext();\n-            if (context != null)\n-            {\n-                encoding = context.getResponseCharacterEncoding();\n-                if (encoding != null)\n-                    return encoding;\n-            }\n-            return StringUtil.__ISO_8859_1;\n         }\n-        return _characterEncoding;\n+\n+        // Fallback to last resort iso-8859-1.\n+        encoding = StringUtil.__ISO_8859_1;\n+        if (setContentType)\n+            setCharacterEncoding(encoding, EncodingFrom.INFERRED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908acd59046d9d72e236870aa513a9f5e946b445"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2101, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}