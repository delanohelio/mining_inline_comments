{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5OTg0Mzc2", "number": 4750, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToxNToyMVrOD0MAvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToyNTo0NlrOD0MQ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDQ5MzQyOnYy", "diffSide": "RIGHT", "path": "jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/core/CloseStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToxNToyMVrOGJAPnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToxNToyMVrOGJAPnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5NDM2NA==", "bodyText": "I would much rather keep CloseStatus immutable and replace the entire object than have it partially immutable.\nWhy isn't the cause known when it is created? feels wrong!", "url": "https://github.com/eclipse/jetty.project/pull/4750#discussion_r412094364", "createdAt": "2020-04-21T11:15:21Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/core/CloseStatus.java", "diffHunk": "@@ -211,6 +211,11 @@ public boolean isAbnormal()\n         return !isOrdinary(code);\n     }\n \n+    public void initCause(Throwable cause)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f822ed328a93e0457c27308bed12290a827780"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDUwMTE1OnYy", "diffSide": "RIGHT", "path": "jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/core/internal/WebSocketSessionState.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToxNzoxN1rOGJAUOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozOTo1MVrOGJGRtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5NTU0Ng==", "bodyText": "this seams wrong.  If we were closed for some other reason, then adding a cause to it could put the wrong cause against a close reason.", "url": "https://github.com/eclipse/jetty.project/pull/4750#discussion_r412095546", "createdAt": "2020-04-21T11:17:17Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/core/internal/WebSocketSessionState.java", "diffHunk": "@@ -123,6 +123,28 @@ public boolean onClosed(CloseStatus closeStatus)\n         }\n     }\n \n+    /**\n+     * This should only be called directly before closing the connection when we are in {@link State#CLOSED} state.\n+     * This ensures an abnormal close status and if we have no error in the CloseStatus we will set one.\n+     * @param t the error which occurred.\n+     */\n+    public void onError(Throwable t)\n+    {\n+        synchronized (this)\n+        {\n+            if (_sessionState != State.CLOSED || _closeStatus == null)\n+                throw new IllegalArgumentException();\n+\n+            // Override any normal close status.\n+            if (!_closeStatus.isAbnormal())\n+                _closeStatus = new CloseStatus(CloseStatus.SERVER_ERROR, t);\n+\n+            // Otherwise set the error if it wasn't already set to notify onError as well as onClose.\n+            if (_closeStatus.getCause() == null)\n+                _closeStatus.initCause(t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f822ed328a93e0457c27308bed12290a827780"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEzNTQzMw==", "bodyText": "If we received an abnormal close frame and throw in onFrame then we want to keep the same close reason but we want to call onError as well so we need to add a cause to the close status so that onError is notified. I can actually change this line to get rid of the weird initCause method.\n_closeStatus = new CloseStatus(_closeStatus.getCode(), _closeStatus.getReason(), t);", "url": "https://github.com/eclipse/jetty.project/pull/4750#discussion_r412135433", "createdAt": "2020-04-21T12:21:20Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/core/internal/WebSocketSessionState.java", "diffHunk": "@@ -123,6 +123,28 @@ public boolean onClosed(CloseStatus closeStatus)\n         }\n     }\n \n+    /**\n+     * This should only be called directly before closing the connection when we are in {@link State#CLOSED} state.\n+     * This ensures an abnormal close status and if we have no error in the CloseStatus we will set one.\n+     * @param t the error which occurred.\n+     */\n+    public void onError(Throwable t)\n+    {\n+        synchronized (this)\n+        {\n+            if (_sessionState != State.CLOSED || _closeStatus == null)\n+                throw new IllegalArgumentException();\n+\n+            // Override any normal close status.\n+            if (!_closeStatus.isAbnormal())\n+                _closeStatus = new CloseStatus(CloseStatus.SERVER_ERROR, t);\n+\n+            // Otherwise set the error if it wasn't already set to notify onError as well as onClose.\n+            if (_closeStatus.getCause() == null)\n+                _closeStatus.initCause(t);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5NTU0Ng=="}, "originalCommit": {"oid": "45f822ed328a93e0457c27308bed12290a827780"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5MzIwNg==", "bodyText": "Definitely change to keep the close status immutable and get rid of the init.\nBut can you describe more.... maybe in comments... exactly why if we already have a close that we want to change just the cause and not the status and the reason as well?", "url": "https://github.com/eclipse/jetty.project/pull/4750#discussion_r412193206", "createdAt": "2020-04-21T13:39:51Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/core/internal/WebSocketSessionState.java", "diffHunk": "@@ -123,6 +123,28 @@ public boolean onClosed(CloseStatus closeStatus)\n         }\n     }\n \n+    /**\n+     * This should only be called directly before closing the connection when we are in {@link State#CLOSED} state.\n+     * This ensures an abnormal close status and if we have no error in the CloseStatus we will set one.\n+     * @param t the error which occurred.\n+     */\n+    public void onError(Throwable t)\n+    {\n+        synchronized (this)\n+        {\n+            if (_sessionState != State.CLOSED || _closeStatus == null)\n+                throw new IllegalArgumentException();\n+\n+            // Override any normal close status.\n+            if (!_closeStatus.isAbnormal())\n+                _closeStatus = new CloseStatus(CloseStatus.SERVER_ERROR, t);\n+\n+            // Otherwise set the error if it wasn't already set to notify onError as well as onClose.\n+            if (_closeStatus.getCause() == null)\n+                _closeStatus.initCause(t);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5NTU0Ng=="}, "originalCommit": {"oid": "45f822ed328a93e0457c27308bed12290a827780"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDUwMzg5OnYy", "diffSide": "RIGHT", "path": "jetty-websocket/websocket-core/src/test/resources/jetty-logging.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToxNzo1OFrOGJAV0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToxNzo1OFrOGJAV0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5NTk1NQ==", "bodyText": "revert to commented out DEBUG", "url": "https://github.com/eclipse/jetty.project/pull/4750#discussion_r412095955", "createdAt": "2020-04-21T11:17:58Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-core/src/test/resources/jetty-logging.properties", "diffHunk": "@@ -1,5 +1,5 @@\n # Jetty Logging using jetty-slf4j-impl\n-# org.eclipse.jetty.LEVEL=DEBUG\n+org.eclipse.jetty.LEVEL=INFO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f822ed328a93e0457c27308bed12290a827780"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDUyMjQ2OnYy", "diffSide": "LEFT", "path": "jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/core/client/ClientUpgradeRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToyMjozNlrOGJAgxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjoyMTo1MFrOGJCxQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5ODc1Ng==", "bodyText": "So it is OK to not select a subprotocol?", "url": "https://github.com/eclipse/jetty.project/pull/4750#discussion_r412098756", "createdAt": "2020-04-21T11:22:36Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/core/client/ClientUpgradeRequest.java", "diffHunk": "@@ -409,8 +409,6 @@ else if (values.length == 1)\n \n         // Verify the negotiated subprotocol\n         List<String> offeredSubProtocols = getSubProtocols();\n-        if (negotiatedSubProtocol == null && !offeredSubProtocols.isEmpty())\n-            throw new WebSocketException(\"Upgrade failed: no subprotocol selected from offered subprotocols \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f822ed328a93e0457c27308bed12290a827780"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEzNTc0Ng==", "bodyText": "It's okay to not select one of the offered subprotocols as long as no subprotocol header is sent back.\nIf the client's handshake did not contain such a header field or if\nthe server does not agree to any of the client's requested\nsubprotocols, the only acceptable value is null.  The absence\nof such a field is equivalent to the null value (meaning that\nif the server does not wish to agree to one of the suggested\nsubprotocols, it MUST NOT send back a |Sec-WebSocket-Protocol|\nheader field in its response).", "url": "https://github.com/eclipse/jetty.project/pull/4750#discussion_r412135746", "createdAt": "2020-04-21T12:21:50Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-websocket/websocket-core/src/main/java/org/eclipse/jetty/websocket/core/client/ClientUpgradeRequest.java", "diffHunk": "@@ -409,8 +409,6 @@ else if (values.length == 1)\n \n         // Verify the negotiated subprotocol\n         List<String> offeredSubProtocols = getSubProtocols();\n-        if (negotiatedSubProtocol == null && !offeredSubProtocols.isEmpty())\n-            throw new WebSocketException(\"Upgrade failed: no subprotocol selected from offered subprotocols \");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA5ODc1Ng=="}, "originalCommit": {"oid": "45f822ed328a93e0457c27308bed12290a827780"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDUzNDgyOnYy", "diffSide": "RIGHT", "path": "jetty-websocket/websocket-servlet/src/main/java/org/eclipse/jetty/websocket/servlet/ServletUpgradeRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMToyNTo0NlrOGJAoTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxMDo1NFrOGJpTmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEwMDY4Nw==", "bodyText": "This looks like it may be called a few times per upgade? if so, perhaps do the addPaths in the constructor.", "url": "https://github.com/eclipse/jetty.project/pull/4750#discussion_r412100687", "createdAt": "2020-04-21T11:25:46Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-servlet/src/main/java/org/eclipse/jetty/websocket/servlet/ServletUpgradeRequest.java", "diffHunk": "@@ -314,6 +315,14 @@ public URI getRequestURI()\n         return requestURI;\n     }\n \n+    /**\n+     * @return the path within the context, combination of the ServletPath with the PathInfo.\n+     */\n+    public String getPathInContext()\n+    {\n+        return URIUtil.addPaths(request.getServletPath(), request.getPathInfo());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f822ed328a93e0457c27308bed12290a827780"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc2NzEyOA==", "bodyText": "It is only called once per upgrade, when creating the FrameHandler.", "url": "https://github.com/eclipse/jetty.project/pull/4750#discussion_r412767128", "createdAt": "2020-04-22T08:10:54Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-websocket/websocket-servlet/src/main/java/org/eclipse/jetty/websocket/servlet/ServletUpgradeRequest.java", "diffHunk": "@@ -314,6 +315,14 @@ public URI getRequestURI()\n         return requestURI;\n     }\n \n+    /**\n+     * @return the path within the context, combination of the ServletPath with the PathInfo.\n+     */\n+    public String getPathInContext()\n+    {\n+        return URIUtil.addPaths(request.getServletPath(), request.getPathInfo());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEwMDY4Nw=="}, "originalCommit": {"oid": "45f822ed328a93e0457c27308bed12290a827780"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2726, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}