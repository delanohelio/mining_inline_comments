{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2Mzk1NDQ4", "number": 4931, "title": "Issue #4919 - WebSocket container graceful stop", "bodyText": "Closes #4919\nMake sure all active websocket connections are closed before the connections are hard closed.\nServer.doStop() now initiates a graceful shutdown but only waits for the CompletableFuture if the stopTimeout is set.", "createdAt": "2020-06-02T07:12:45Z", "url": "https://github.com/eclipse/jetty.project/pull/4931", "merged": true, "mergeCommit": {"oid": "fe6f0eb87d2d591a485d076d5faebaa17242763f"}, "closed": true, "closedAt": "2020-07-29T03:19:54Z", "author": {"login": "lachlan-roberts"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnOEZSAH2gAyNDI2Mzk1NDQ4Ojc1M2M4YmU2ZWJlNjNmZTMyZWNlYjhiYTIwODA1NTBhYTBhOWI1YTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5bm7FgFqTQ1Njk0MjA3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "753c8be6ebe63fe32eceb8ba2080550aa0a9b5a0", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/753c8be6ebe63fe32eceb8ba2080550aa0a9b5a0", "committedDate": "2020-06-02T05:32:36Z", "message": "Issue #4919 - test graceful stop for jetty and javax ws containers\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bebe6fd13876a3de55be8bd71c4fc4b6e1369412", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/bebe6fd13876a3de55be8bd71c4fc4b6e1369412", "committedDate": "2020-06-02T05:37:55Z", "message": "Issue #4919 - always stop SessionTracker before closing connections\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9423a8753e49bc1dcc61121ab18286f855c23b3a", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/9423a8753e49bc1dcc61121ab18286f855c23b3a", "committedDate": "2020-06-02T06:10:48Z", "message": "fix some websocket jpms errors\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTYzNzA3", "url": "https://github.com/eclipse/jetty.project/pull/4931#pullrequestreview-423163707", "createdAt": "2020-06-03T01:40:56Z", "commit": {"oid": "9423a8753e49bc1dcc61121ab18286f855c23b3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMTo0MDo1NlrOGeJUbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMTo0MDo1NlrOGeJUbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI2MzE1MQ==", "bodyText": "Not sure how we should stop accepting new incoming connections before this.", "url": "https://github.com/eclipse/jetty.project/pull/4931#discussion_r434263151", "createdAt": "2020-06-03T01:40:56Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-websocket/websocket-javax-server/src/main/java/org/eclipse/jetty/websocket/javax/server/internal/JavaxWebSocketServerContainer.java", "diffHunk": "@@ -260,4 +262,19 @@ protected void doStart() throws Exception\n             deferredEndpointConfigs.clear();\n         }\n     }\n+\n+    @Override\n+    public CompletableFuture<Void> shutdown()\n+    {\n+        LifeCycle.stop(sessionTracker);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9423a8753e49bc1dcc61121ab18286f855c23b3a"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3ODI0ODE0", "url": "https://github.com/eclipse/jetty.project/pull/4931#pullrequestreview-427824814", "createdAt": "2020-06-10T08:24:52Z", "commit": {"oid": "9423a8753e49bc1dcc61121ab18286f855c23b3a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODoyNDo1MlrOGhqS-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODoyNDo1MlrOGhqS-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0OTE3Ng==", "bodyText": "Can stopping the sessionTracker take time? Can it block? Can it call user code?   If any of the above, then this is precisely what we don't want to do in a shutdown thread.   Why can't this be done in doStop?  at the very least a comment is needed, but I think a different approach is required.", "url": "https://github.com/eclipse/jetty.project/pull/4931#discussion_r437949176", "createdAt": "2020-06-10T08:24:52Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-javax-server/src/main/java/org/eclipse/jetty/websocket/javax/server/internal/JavaxWebSocketServerContainer.java", "diffHunk": "@@ -260,4 +262,19 @@ protected void doStart() throws Exception\n             deferredEndpointConfigs.clear();\n         }\n     }\n+\n+    @Override\n+    public CompletableFuture<Void> shutdown()\n+    {\n+        LifeCycle.stop(sessionTracker);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI2MzE1MQ=="}, "originalCommit": {"oid": "9423a8753e49bc1dcc61121ab18286f855c23b3a"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed9c60fc90c7969b200699f977e43c328311da6e", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/ed9c60fc90c7969b200699f977e43c328311da6e", "committedDate": "2020-06-16T08:57:40Z", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-4919-WebSocketContainerStop\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTA4Nzcw", "url": "https://github.com/eclipse/jetty.project/pull/4931#pullrequestreview-445108770", "createdAt": "2020-07-08T20:34:30Z", "commit": {"oid": "ed9c60fc90c7969b200699f977e43c328311da6e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDozNDozMFrOGu4RSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDozNDozMFrOGu4RSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwOTYxMA==", "bodyText": "Try something like the below.  This lets the caller wait for this to complete or not, as it likes.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                {\n          \n          \n            \n                    LifeCycle.stop(sessionTracker);\n          \n          \n            \n                    CompletableFuture<Void> shutdown = new CompletableFuture<>();\n          \n          \n            \n                    shutdown.complete(null);\n          \n          \n            \n                    return shutdown;\n          \n          \n            \n                }\n          \n          \n            \n                {\n          \n          \n            \n                    CompletableFuture<Void> shutdown = new CompletableFuture<>();\n          \n          \n            \n                    new Thread(()->\n          \n          \n            \n                    {\n          \n          \n            \n                        try\n          \n          \n            \n                        {\n          \n          \n            \n                            LifeCycle.stop(sessionTracker);\n          \n          \n            \n                        }\n          \n          \n            \n                        catch(Exception e)\n          \n          \n            \n                        {\n          \n          \n            \n                            LOG.warn(e);\n          \n          \n            \n                        }\n          \n          \n            \n                        finally\n          \n          \n            \n                        {\n          \n          \n            \n                            shutdown.complete(null);\n          \n          \n            \n                        }\n          \n          \n            \n                    }.start();\n          \n          \n            \n                    return shutdown;\n          \n          \n            \n                }", "url": "https://github.com/eclipse/jetty.project/pull/4931#discussion_r451809610", "createdAt": "2020-07-08T20:34:30Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-javax-server/src/main/java/org/eclipse/jetty/websocket/javax/server/internal/JavaxWebSocketServerContainer.java", "diffHunk": "@@ -301,4 +303,19 @@ protected void doStart() throws Exception\n             deferredEndpointConfigs.clear();\n         }\n     }\n+\n+    @Override\n+    public CompletableFuture<Void> shutdown()\n+    {\n+        LifeCycle.stop(sessionTracker);\n+        CompletableFuture<Void> shutdown = new CompletableFuture<>();\n+        shutdown.complete(null);\n+        return shutdown;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed9c60fc90c7969b200699f977e43c328311da6e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c94e82470d8b7493ce9f708c17c7a8023d0a8179", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/c94e82470d8b7493ce9f708c17c7a8023d0a8179", "committedDate": "2020-07-17T05:32:10Z", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-4919-WebSocketContainerStop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0818f54be8b33e541843f8b5aa44550e617bf35f", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/0818f54be8b33e541843f8b5aa44550e617bf35f", "committedDate": "2020-07-20T05:32:46Z", "message": "cleanup the ws javax EchoSocket test class\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f7f2e3e56366b95b46ed2e861dd9a3a9325c3d4", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/9f7f2e3e56366b95b46ed2e861dd9a3a9325c3d4", "committedDate": "2020-07-20T05:49:15Z", "message": "WebSocket server now only closes gracefully if the Server stopTimeout is set\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNDM3MDcy", "url": "https://github.com/eclipse/jetty.project/pull/4931#pullrequestreview-451437072", "createdAt": "2020-07-20T09:20:41Z", "commit": {"oid": "9f7f2e3e56366b95b46ed2e861dd9a3a9325c3d4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOToyMDo0MVrOG0CAcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOToyMToyOFrOG0CClQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIxMjAxNg==", "bodyText": "This thread should be a daemon thread so it doesn't stop the JVM exiting.\nI'm also wondering if we should implement cancel on the CompletableFuture and interrupt the thread if it is called?\nWe might then need some support in Graceful.shutdown or Server.doStop to actually do that cancel.... but perhaps that is feature creep for this PR.   So let's just make this thread look OK", "url": "https://github.com/eclipse/jetty.project/pull/4931#discussion_r457212016", "createdAt": "2020-07-20T09:20:41Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-javax-server/src/main/java/org/eclipse/jetty/websocket/javax/server/internal/JavaxWebSocketServerContainer.java", "diffHunk": "@@ -307,9 +307,22 @@ protected void doStart() throws Exception\n     @Override\n     public CompletableFuture<Void> shutdown()\n     {\n-        LifeCycle.stop(sessionTracker);\n         CompletableFuture<Void> shutdown = new CompletableFuture<>();\n-        shutdown.complete(null);\n+        new Thread(() ->\n+        {\n+            try\n+            {\n+                LifeCycle.stop(sessionTracker);\n+            }\n+            catch (Throwable t)\n+            {\n+                LOG.warn(\"Error while stopping SessionTracker\", t);\n+            }\n+            finally\n+            {\n+                shutdown.complete(null);\n+            }\n+        }).start();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f2e3e56366b95b46ed2e861dd9a3a9325c3d4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIxMjU2NQ==", "bodyText": "Same comments as above.... looking like we need a utility class to do this threadful stopping.", "url": "https://github.com/eclipse/jetty.project/pull/4931#discussion_r457212565", "createdAt": "2020-07-20T09:21:28Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-jetty-server/src/main/java/org/eclipse/jetty/websocket/server/JettyWebSocketServerContainer.java", "diffHunk": "@@ -267,9 +267,22 @@ public void setAutoFragment(boolean autoFragment)\n     @Override\n     public CompletableFuture<Void> shutdown()\n     {\n-        LifeCycle.stop(sessionTracker);\n         CompletableFuture<Void> shutdown = new CompletableFuture<>();\n-        shutdown.complete(null);\n+        new Thread(() ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f2e3e56366b95b46ed2e861dd9a3a9325c3d4"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "695d239ac56721338bae051e88360d437d0968f5", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/695d239ac56721338bae051e88360d437d0968f5", "committedDate": "2020-07-22T14:09:43Z", "message": "Issue #4919 - all websocket containers to implement Graceful shutdown interface\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e13d26ab45e6490fbf73ba01a8eb239553d138a0", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/e13d26ab45e6490fbf73ba01a8eb239553d138a0", "committedDate": "2020-07-24T03:39:07Z", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-4919-WebSocketContainerStop\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NjkzMjIy", "url": "https://github.com/eclipse/jetty.project/pull/4931#pullrequestreview-455693222", "createdAt": "2020-07-27T11:22:25Z", "commit": {"oid": "e13d26ab45e6490fbf73ba01a8eb239553d138a0"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToyMjoyNlrOG3eUhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToyOTo1NFrOG3eigw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgyMTYzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static CompletableFuture<Void> shutdown(LifeCycle lifeCycle)\n          \n          \n            \n                public static CompletableFuture<Void> stop(LifeCycle lifeCycle)", "url": "https://github.com/eclipse/jetty.project/pull/4931#discussion_r460821636", "createdAt": "2020-07-27T11:22:26Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-util/src/main/java/org/eclipse/jetty/websocket/util/ShutdownUtil.java", "diffHunk": "@@ -0,0 +1,75 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.websocket.util;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import org.eclipse.jetty.util.component.LifeCycle;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ShutdownUtil\n+{\n+    private static final Logger LOG = LoggerFactory.getLogger(ShutdownUtil.class);\n+\n+    /**\n+     * Shutdown a {@link LifeCycle} in a new daemon thread and be notified on the result in a {@link CompletableFuture}.\n+     * @param lifeCycle the LifeCycle to stop.\n+     * @return the CompletableFuture to be notified when the stop either completes or fails.\n+     */\n+    public static CompletableFuture<Void> shutdown(LifeCycle lifeCycle)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13d26ab45e6490fbf73ba01a8eb239553d138a0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgyMzQyNg==", "bodyText": "This is good.\nBut now you should probably modify the loop in SessionTracker.doStop() to check if interrupted and if so it can break the iteration.", "url": "https://github.com/eclipse/jetty.project/pull/4931#discussion_r460823426", "createdAt": "2020-07-27T11:26:12Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-util/src/main/java/org/eclipse/jetty/websocket/util/ShutdownUtil.java", "diffHunk": "@@ -0,0 +1,75 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.websocket.util;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import org.eclipse.jetty.util.component.LifeCycle;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ShutdownUtil\n+{\n+    private static final Logger LOG = LoggerFactory.getLogger(ShutdownUtil.class);\n+\n+    /**\n+     * Shutdown a {@link LifeCycle} in a new daemon thread and be notified on the result in a {@link CompletableFuture}.\n+     * @param lifeCycle the LifeCycle to stop.\n+     * @return the CompletableFuture to be notified when the stop either completes or fails.\n+     */\n+    public static CompletableFuture<Void> shutdown(LifeCycle lifeCycle)\n+    {\n+        AtomicReference<Thread> stopThreadReference = new AtomicReference<>();\n+        CompletableFuture<Void> shutdown = new CompletableFuture<>()\n+        {\n+            @Override\n+            public boolean cancel(boolean mayInterruptIfRunning)\n+            {\n+                boolean canceled = super.cancel(mayInterruptIfRunning);\n+                if (canceled && mayInterruptIfRunning)\n+                {\n+                    Thread thread = stopThreadReference.get();\n+                    if (thread != null)\n+                        thread.interrupt();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13d26ab45e6490fbf73ba01a8eb239553d138a0"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgyNDkyMg==", "bodyText": "Hmmmm I don't really like such hard coded default timeouts.... but at least there is a setter.\nWhat happens if you make the default wait forever?", "url": "https://github.com/eclipse/jetty.project/pull/4931#discussion_r460824922", "createdAt": "2020-07-27T11:29:21Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-jetty-client/src/main/java/org/eclipse/jetty/websocket/client/WebSocketClient.java", "diffHunk": "@@ -68,6 +71,7 @@\n     private final Configuration.ConfigurationCustomizer configurationCustomizer = new Configuration.ConfigurationCustomizer();\n     private final WebSocketComponents components = new WebSocketComponents();\n     private boolean stopAtShutdown = false;\n+    private long _stopTimeout = 200;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13d26ab45e6490fbf73ba01a8eb239553d138a0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgyNTIxOQ==", "bodyText": "Need javadoc: what are the units? Can it be disabled? Can it be set to wait forever?", "url": "https://github.com/eclipse/jetty.project/pull/4931#discussion_r460825219", "createdAt": "2020-07-27T11:29:54Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-jetty-client/src/main/java/org/eclipse/jetty/websocket/client/WebSocketClient.java", "diffHunk": "@@ -388,11 +391,48 @@ public synchronized void setStopAtShutdown(boolean stop)\n         stopAtShutdown = stop;\n     }\n \n+    public void setStopTimeout(long stopTimeout)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13d26ab45e6490fbf73ba01a8eb239553d138a0"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e383f0891fdf838636c0193f954bdb54539d602", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/9e383f0891fdf838636c0193f954bdb54539d602", "committedDate": "2020-07-28T06:48:49Z", "message": "Issue #4919 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1be02209883dd5b5196742a76508d179b205dee5", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/1be02209883dd5b5196742a76508d179b205dee5", "committedDate": "2020-07-28T07:38:41Z", "message": "Issue #4919 - make the SessionTracker the one to implement Graceful shutdown\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2OTQyMDcw", "url": "https://github.com/eclipse/jetty.project/pull/4931#pullrequestreview-456942070", "createdAt": "2020-07-28T19:29:43Z", "commit": {"oid": "1be02209883dd5b5196742a76508d179b205dee5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 430, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}