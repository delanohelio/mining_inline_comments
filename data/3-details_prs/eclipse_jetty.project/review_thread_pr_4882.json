{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MjMyOTEw", "number": 4882, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjozMjozOFrOD9X4bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjozMjozOFrOD9X4bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjgxMDA1OnYy", "diffSide": "RIGHT", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjozMjozOFrOGW1Bpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMDoxODo0NlrOGXLlkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU5MDYzMA==", "bodyText": "Why are we even doing awaitTermination()?\nIsn't there a better choice?", "url": "https://github.com/eclipse/jetty.project/pull/4882#discussion_r426590630", "createdAt": "2020-05-18T12:32:38Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java", "diffHunk": "@@ -302,7 +302,7 @@ protected void doStop() throws Exception\n     @Override\n     public void join() throws InterruptedException\n     {\n-        _executor.awaitTermination(getStopTimeout(), TimeUnit.MILLISECONDS);\n+        _executor.awaitTermination(Long.MAX_VALUE, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "590b1a6ab17680b2793e4a1181e6226929cf732a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU5NTQyMQ==", "bodyText": "I guess a 292 million year wait isn't going to cause anybody any concerns.", "url": "https://github.com/eclipse/jetty.project/pull/4882#discussion_r426595421", "createdAt": "2020-05-18T12:40:59Z", "author": {"login": "joakime"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java", "diffHunk": "@@ -302,7 +302,7 @@ protected void doStop() throws Exception\n     @Override\n     public void join() throws InterruptedException\n     {\n-        _executor.awaitTermination(getStopTimeout(), TimeUnit.MILLISECONDS);\n+        _executor.awaitTermination(Long.MAX_VALUE, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU5MDYzMA=="}, "originalCommit": {"oid": "590b1a6ab17680b2793e4a1181e6226929cf732a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MDI3NQ==", "bodyText": "Doesn't look like there is any better way to do it other than awaitTermination().\nIt doesn't look like waiting only stopTimeout caused many concerns either, it has been like that for over 2 years and only one issue filed against it. I guess it just wasn't used much.", "url": "https://github.com/eclipse/jetty.project/pull/4882#discussion_r426960275", "createdAt": "2020-05-19T00:18:46Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/thread/ExecutorThreadPool.java", "diffHunk": "@@ -302,7 +302,7 @@ protected void doStop() throws Exception\n     @Override\n     public void join() throws InterruptedException\n     {\n-        _executor.awaitTermination(getStopTimeout(), TimeUnit.MILLISECONDS);\n+        _executor.awaitTermination(Long.MAX_VALUE, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU5MDYzMA=="}, "originalCommit": {"oid": "590b1a6ab17680b2793e4a1181e6226929cf732a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2543, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}