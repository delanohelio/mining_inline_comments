{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODE5ODE5", "number": 4829, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NjoyOVrOD3x3NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDo0Njo0NFrOD3y4vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODE1MjIxOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/PushBuilderImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NjoyOVrOGOOrUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NjoyOVrOGOOrUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MzcxNQ==", "bodyText": "Please make this field have the correct case (all upper case).", "url": "https://github.com/eclipse/jetty.project/pull/4829#discussion_r417573715", "createdAt": "2020-04-29T19:56:29Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/PushBuilderImpl.java", "diffHunk": "@@ -39,6 +42,13 @@\n     private static final Logger LOG = LoggerFactory.getLogger(PushBuilderImpl.class);\n \n     private static final HttpField JettyPush = new HttpField(\"x-http2-push\", \"PushBuilder\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd71839e13738906cd64e63c487b4201c2a4d3f"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODE3MjQ2OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMjoxMFrOGOO4GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjowMDozMVrOGOSniw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3Njk4NA==", "bodyText": "You can easily coalesce the null-check and the switch into a single if (header == SET_COOKIE).\nHow about SET_COOKIE2 (I'm ok to not consider it, just raising the issue of whether we want to explicitly not consider it).", "url": "https://github.com/eclipse/jetty.project/pull/4829#discussion_r417576984", "createdAt": "2020-04-29T20:02:10Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -410,12 +416,55 @@ public PushBuilder newPushBuilder()\n             id = getRequestedSessionId();\n         }\n \n+        Map<String,String> cookies = new HashMap<>();\n+        Cookie[] existingCookies = getCookies();\n+        if (existingCookies != null)\n+        {        \n+            for (Cookie c: getCookies())\n+            {\n+                cookies.put(c.getName(), c.getValue());\n+            }\n+        }\n+\n+        //Any Set-Cookies that were set on the response must be set as Cookies on the\n+        //PushBuilder, unless the max-age of the cookie is <= 0\n+        HttpFields responseFields = getResponse().getHttpFields();\n+        for (HttpField field : responseFields)\n+        {\n+            HttpHeader header = field.getHeader();\n+            if (header == null)\n+                continue;\n+            switch (header)\n+            {\n+                case SET_COOKIE:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd71839e13738906cd64e63c487b4201c2a4d3f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzODI4Mw==", "bodyText": "Set-Cookie2 is an actual header from a valid spec.\nhttps://tools.ietf.org/html/rfc2965", "url": "https://github.com/eclipse/jetty.project/pull/4829#discussion_r417638283", "createdAt": "2020-04-29T22:00:31Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -410,12 +416,55 @@ public PushBuilder newPushBuilder()\n             id = getRequestedSessionId();\n         }\n \n+        Map<String,String> cookies = new HashMap<>();\n+        Cookie[] existingCookies = getCookies();\n+        if (existingCookies != null)\n+        {        \n+            for (Cookie c: getCookies())\n+            {\n+                cookies.put(c.getName(), c.getValue());\n+            }\n+        }\n+\n+        //Any Set-Cookies that were set on the response must be set as Cookies on the\n+        //PushBuilder, unless the max-age of the cookie is <= 0\n+        HttpFields responseFields = getResponse().getHttpFields();\n+        for (HttpField field : responseFields)\n+        {\n+            HttpHeader header = field.getHeader();\n+            if (header == null)\n+                continue;\n+            switch (header)\n+            {\n+                case SET_COOKIE:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3Njk4NA=="}, "originalCommit": {"oid": "3fd71839e13738906cd64e63c487b4201c2a4d3f"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODMxOTk5OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDo0Njo0NFrOGOQV5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNToyNzo0N1rOGOujWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYwMDk5OA==", "bodyText": "I'm not sure handling these things at PushBuilder creation is the correct moment to do it.\nIs the TCK testing for this?\nI would rather add cookies, authorization headers, etc. just before the call to push(), to integrate also what the application is providing.\nFor example, if the application calls pushBuilder.addHeader(\"cookie\", \"a=b\") is it added to the ones computed above, or it replaces them, etc.?", "url": "https://github.com/eclipse/jetty.project/pull/4829#discussion_r417600998", "createdAt": "2020-04-29T20:46:44Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -410,12 +416,55 @@ public PushBuilder newPushBuilder()\n             id = getRequestedSessionId();\n         }\n \n+        Map<String,String> cookies = new HashMap<>();\n+        Cookie[] existingCookies = getCookies();\n+        if (existingCookies != null)\n+        {        \n+            for (Cookie c: getCookies())\n+            {\n+                cookies.put(c.getName(), c.getValue());\n+            }\n+        }\n+\n+        //Any Set-Cookies that were set on the response must be set as Cookies on the\n+        //PushBuilder, unless the max-age of the cookie is <= 0\n+        HttpFields responseFields = getResponse().getHttpFields();\n+        for (HttpField field : responseFields)\n+        {\n+            HttpHeader header = field.getHeader();\n+            if (header == null)\n+                continue;\n+            switch (header)\n+            {\n+                case SET_COOKIE:\n+                {\n+                    HttpCookie cookie = ((SetCookieHttpField)field).getHttpCookie();\n+                    if (cookie.getMaxAge() > 0)\n+                        cookies.put(cookie.getName(), cookie.getValue());\n+                    else\n+                        cookies.remove(cookie.getName());\n+                    continue;\n+                }\n+                default:\n+                    continue;\n+            }\n+        }\n+        \n+        if (!cookies.isEmpty())\n+        {\n+            StringBuilder buff = new StringBuilder();\n+            for (Map.Entry<String,String> entry : cookies.entrySet())\n+            {\n+                if (buff.length() > 0)\n+                    buff.append(\"; \");\n+                buff.append(entry.getKey()).append('=').append(entry.getValue());\n+            }\n+            fields.add(new HttpField(HttpHeader.COOKIE, buff.toString()));\n+        }\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd71839e13738906cd64e63c487b4201c2a4d3f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYyNzEyNg==", "bodyText": "But the tck test checks that the Cookie header is set on the PushBuilder before push() is called. See https://github.com/eclipse-ee4j/jakartaee-tck/blob/8.0.2/src/com/sun/ts/tests/servlet/spec/serverpush/TestServlet4.java#L48", "url": "https://github.com/eclipse/jetty.project/pull/4829#discussion_r417627126", "createdAt": "2020-04-29T21:36:33Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -410,12 +416,55 @@ public PushBuilder newPushBuilder()\n             id = getRequestedSessionId();\n         }\n \n+        Map<String,String> cookies = new HashMap<>();\n+        Cookie[] existingCookies = getCookies();\n+        if (existingCookies != null)\n+        {        \n+            for (Cookie c: getCookies())\n+            {\n+                cookies.put(c.getName(), c.getValue());\n+            }\n+        }\n+\n+        //Any Set-Cookies that were set on the response must be set as Cookies on the\n+        //PushBuilder, unless the max-age of the cookie is <= 0\n+        HttpFields responseFields = getResponse().getHttpFields();\n+        for (HttpField field : responseFields)\n+        {\n+            HttpHeader header = field.getHeader();\n+            if (header == null)\n+                continue;\n+            switch (header)\n+            {\n+                case SET_COOKIE:\n+                {\n+                    HttpCookie cookie = ((SetCookieHttpField)field).getHttpCookie();\n+                    if (cookie.getMaxAge() > 0)\n+                        cookies.put(cookie.getName(), cookie.getValue());\n+                    else\n+                        cookies.remove(cookie.getName());\n+                    continue;\n+                }\n+                default:\n+                    continue;\n+            }\n+        }\n+        \n+        if (!cookies.isEmpty())\n+        {\n+            StringBuilder buff = new StringBuilder();\n+            for (Map.Entry<String,String> entry : cookies.entrySet())\n+            {\n+                if (buff.length() > 0)\n+                    buff.append(\"; \");\n+                buff.append(entry.getKey()).append('=').append(entry.getValue());\n+            }\n+            fields.add(new HttpField(HttpHeader.COOKIE, buff.toString()));\n+        }\n+        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYwMDk5OA=="}, "originalCommit": {"oid": "3fd71839e13738906cd64e63c487b4201c2a4d3f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY0MjI3Ng==", "bodyText": "But the tck test checks that the Cookie header is set on the PushBuilder before push() is called.\n\nThat is so wrong.\nThen the application calls addHeader(\"Cookie\", ...) completely invalidating the fact that the Cookie header must be only one, so the server will complain that it found 2 Cookie headers.\nAlso, the application may mess with all other headers that you are trying to cope with here.\nI think all this should be done just before push().\nI would challenge the TCK test.", "url": "https://github.com/eclipse/jetty.project/pull/4829#discussion_r417642276", "createdAt": "2020-04-29T22:09:31Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -410,12 +416,55 @@ public PushBuilder newPushBuilder()\n             id = getRequestedSessionId();\n         }\n \n+        Map<String,String> cookies = new HashMap<>();\n+        Cookie[] existingCookies = getCookies();\n+        if (existingCookies != null)\n+        {        \n+            for (Cookie c: getCookies())\n+            {\n+                cookies.put(c.getName(), c.getValue());\n+            }\n+        }\n+\n+        //Any Set-Cookies that were set on the response must be set as Cookies on the\n+        //PushBuilder, unless the max-age of the cookie is <= 0\n+        HttpFields responseFields = getResponse().getHttpFields();\n+        for (HttpField field : responseFields)\n+        {\n+            HttpHeader header = field.getHeader();\n+            if (header == null)\n+                continue;\n+            switch (header)\n+            {\n+                case SET_COOKIE:\n+                {\n+                    HttpCookie cookie = ((SetCookieHttpField)field).getHttpCookie();\n+                    if (cookie.getMaxAge() > 0)\n+                        cookies.put(cookie.getName(), cookie.getValue());\n+                    else\n+                        cookies.remove(cookie.getName());\n+                    continue;\n+                }\n+                default:\n+                    continue;\n+            }\n+        }\n+        \n+        if (!cookies.isEmpty())\n+        {\n+            StringBuilder buff = new StringBuilder();\n+            for (Map.Entry<String,String> entry : cookies.entrySet())\n+            {\n+                if (buff.length() > 0)\n+                    buff.append(\"; \");\n+                buff.append(entry.getKey()).append('=').append(entry.getValue());\n+            }\n+            fields.add(new HttpField(HttpHeader.COOKIE, buff.toString()));\n+        }\n+        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYwMDk5OA=="}, "originalCommit": {"oid": "3fd71839e13738906cd64e63c487b4201c2a4d3f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg3ODM1OA==", "bodyText": "I think servers are forgiving of multiple Cookie headers.  I know we are.\nI think it is reasonable that a pushed request has the same cookies as the source request and some of them may be beyond the knowledge of the app doing the push.\nThe builder is only setting the initial headers and the app is free to change them as it likes, so I think starting with the known cookies is reasonable.", "url": "https://github.com/eclipse/jetty.project/pull/4829#discussion_r417878358", "createdAt": "2020-04-30T09:29:07Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -410,12 +416,55 @@ public PushBuilder newPushBuilder()\n             id = getRequestedSessionId();\n         }\n \n+        Map<String,String> cookies = new HashMap<>();\n+        Cookie[] existingCookies = getCookies();\n+        if (existingCookies != null)\n+        {        \n+            for (Cookie c: getCookies())\n+            {\n+                cookies.put(c.getName(), c.getValue());\n+            }\n+        }\n+\n+        //Any Set-Cookies that were set on the response must be set as Cookies on the\n+        //PushBuilder, unless the max-age of the cookie is <= 0\n+        HttpFields responseFields = getResponse().getHttpFields();\n+        for (HttpField field : responseFields)\n+        {\n+            HttpHeader header = field.getHeader();\n+            if (header == null)\n+                continue;\n+            switch (header)\n+            {\n+                case SET_COOKIE:\n+                {\n+                    HttpCookie cookie = ((SetCookieHttpField)field).getHttpCookie();\n+                    if (cookie.getMaxAge() > 0)\n+                        cookies.put(cookie.getName(), cookie.getValue());\n+                    else\n+                        cookies.remove(cookie.getName());\n+                    continue;\n+                }\n+                default:\n+                    continue;\n+            }\n+        }\n+        \n+        if (!cookies.isEmpty())\n+        {\n+            StringBuilder buff = new StringBuilder();\n+            for (Map.Entry<String,String> entry : cookies.entrySet())\n+            {\n+                if (buff.length() > 0)\n+                    buff.append(\"; \");\n+                buff.append(entry.getKey()).append('=').append(entry.getValue());\n+            }\n+            fields.add(new HttpField(HttpHeader.COOKIE, buff.toString()));\n+        }\n+        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYwMDk5OA=="}, "originalCommit": {"oid": "3fd71839e13738906cd64e63c487b4201c2a4d3f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA5NTk2MQ==", "bodyText": "All right then.", "url": "https://github.com/eclipse/jetty.project/pull/4829#discussion_r418095961", "createdAt": "2020-04-30T15:27:47Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -410,12 +416,55 @@ public PushBuilder newPushBuilder()\n             id = getRequestedSessionId();\n         }\n \n+        Map<String,String> cookies = new HashMap<>();\n+        Cookie[] existingCookies = getCookies();\n+        if (existingCookies != null)\n+        {        \n+            for (Cookie c: getCookies())\n+            {\n+                cookies.put(c.getName(), c.getValue());\n+            }\n+        }\n+\n+        //Any Set-Cookies that were set on the response must be set as Cookies on the\n+        //PushBuilder, unless the max-age of the cookie is <= 0\n+        HttpFields responseFields = getResponse().getHttpFields();\n+        for (HttpField field : responseFields)\n+        {\n+            HttpHeader header = field.getHeader();\n+            if (header == null)\n+                continue;\n+            switch (header)\n+            {\n+                case SET_COOKIE:\n+                {\n+                    HttpCookie cookie = ((SetCookieHttpField)field).getHttpCookie();\n+                    if (cookie.getMaxAge() > 0)\n+                        cookies.put(cookie.getName(), cookie.getValue());\n+                    else\n+                        cookies.remove(cookie.getName());\n+                    continue;\n+                }\n+                default:\n+                    continue;\n+            }\n+        }\n+        \n+        if (!cookies.isEmpty())\n+        {\n+            StringBuilder buff = new StringBuilder();\n+            for (Map.Entry<String,String> entry : cookies.entrySet())\n+            {\n+                if (buff.length() > 0)\n+                    buff.append(\"; \");\n+                buff.append(entry.getKey()).append('=').append(entry.getValue());\n+            }\n+            fields.add(new HttpField(HttpHeader.COOKIE, buff.toString()));\n+        }\n+        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYwMDk5OA=="}, "originalCommit": {"oid": "3fd71839e13738906cd64e63c487b4201c2a4d3f"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2501, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}