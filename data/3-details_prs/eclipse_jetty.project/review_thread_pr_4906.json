{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNTM0MTky", "number": 4906, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzo0MjowN1rOD_Y2tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzo0MjozMFrOD_rdjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Nzk0MTAwOnYy", "diffSide": "RIGHT", "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzo0MjowN1rOGaBjig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzo0MjowN1rOGaBjig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk0MTY0Mg==", "bodyText": "Please use the long form exception message from before here. (see lines 214 to 219 on old code)", "url": "https://github.com/eclipse/jetty.project/pull/4906#discussion_r429941642", "createdAt": "2020-05-25T13:42:07Z", "author": {"login": "joakime"}, "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "diffHunk": "@@ -191,35 +195,36 @@ protected void doStart() throws Exception\n \n     public ServerEndpointMetadata getServerEndpointMetadata(final Class<?> endpoint, final ServerEndpointConfig config) throws DeploymentException\n     {\n-        ServerEndpointMetadata metadata = null;\n-\n-        ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n-        if (anno != null)\n-        {\n-            // Annotated takes precedence here\n-            AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n-            AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n-            metadata = ametadata;\n-            scanner.scan();\n-        }\n-        else if (Endpoint.class.isAssignableFrom(endpoint))\n+        try\n         {\n-            // extends Endpoint\n-            @SuppressWarnings(\"unchecked\")\n-            Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n-            metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            ServerEndpointMetadata metadata;\n+            ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n+            if (anno != null)\n+            {\n+                // Annotated takes precedence here\n+                AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n+                AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n+                metadata = ametadata;\n+                scanner.scan();\n+            }\n+            else if (Endpoint.class.isAssignableFrom(endpoint))\n+            {\n+                // extends Endpoint\n+                @SuppressWarnings(\"unchecked\")\n+                Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n+                metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            }\n+            else\n+            {\n+                throw new DeploymentException(\"Unable to identify as valid Endpoint: \" + endpoint);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "add00c9dd8750c4e97508ac0ab6fbe84f9d0b82a"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTY4MDI1OnYy", "diffSide": "RIGHT", "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzozMDozMVrOGaR63g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzozOToxOVrOGaSMKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwOTc1OA==", "bodyText": "Should not you catch Throwable here, to cover cases such as NoClassDefFoundError, etc.?", "url": "https://github.com/eclipse/jetty.project/pull/4906#discussion_r430209758", "createdAt": "2020-05-26T07:30:31Z", "author": {"login": "sbordet"}, "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "diffHunk": "@@ -191,35 +195,39 @@ protected void doStart() throws Exception\n \n     public ServerEndpointMetadata getServerEndpointMetadata(final Class<?> endpoint, final ServerEndpointConfig config) throws DeploymentException\n     {\n-        ServerEndpointMetadata metadata = null;\n-\n-        ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n-        if (anno != null)\n-        {\n-            // Annotated takes precedence here\n-            AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n-            AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n-            metadata = ametadata;\n-            scanner.scan();\n-        }\n-        else if (Endpoint.class.isAssignableFrom(endpoint))\n+        try\n         {\n-            // extends Endpoint\n-            @SuppressWarnings(\"unchecked\")\n-            Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n-            metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            ServerEndpointMetadata metadata;\n+            ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n+            if (anno != null)\n+            {\n+                // Annotated takes precedence here\n+                AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n+                AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n+                metadata = ametadata;\n+                scanner.scan();\n+            }\n+            else if (Endpoint.class.isAssignableFrom(endpoint))\n+            {\n+                // extends Endpoint\n+                @SuppressWarnings(\"unchecked\")\n+                Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n+                metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            }\n+            else\n+            {\n+                String err = \"Not a recognized websocket [\" + endpoint.getName() +\n+                    \"] does not extend @\" + ServerEndpoint.class.getName() +\n+                    \" or extend from \" + Endpoint.class.getName();\n+                throw new DeploymentException(err);\n+            }\n+\n+            return metadata;\n         }\n-        else\n+        catch (RuntimeException e)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41560c7cd30f9ce5e79fd307763b1e6f9072817"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxNDE4NQ==", "bodyText": "I just didn't want to catch the DeploymentExceptions which may be thrown from within this block. But I can just re-throw them here if they are instance of DeploymentException.", "url": "https://github.com/eclipse/jetty.project/pull/4906#discussion_r430214185", "createdAt": "2020-05-26T07:39:19Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "diffHunk": "@@ -191,35 +195,39 @@ protected void doStart() throws Exception\n \n     public ServerEndpointMetadata getServerEndpointMetadata(final Class<?> endpoint, final ServerEndpointConfig config) throws DeploymentException\n     {\n-        ServerEndpointMetadata metadata = null;\n-\n-        ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n-        if (anno != null)\n-        {\n-            // Annotated takes precedence here\n-            AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n-            AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n-            metadata = ametadata;\n-            scanner.scan();\n-        }\n-        else if (Endpoint.class.isAssignableFrom(endpoint))\n+        try\n         {\n-            // extends Endpoint\n-            @SuppressWarnings(\"unchecked\")\n-            Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n-            metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            ServerEndpointMetadata metadata;\n+            ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n+            if (anno != null)\n+            {\n+                // Annotated takes precedence here\n+                AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n+                AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n+                metadata = ametadata;\n+                scanner.scan();\n+            }\n+            else if (Endpoint.class.isAssignableFrom(endpoint))\n+            {\n+                // extends Endpoint\n+                @SuppressWarnings(\"unchecked\")\n+                Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n+                metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            }\n+            else\n+            {\n+                String err = \"Not a recognized websocket [\" + endpoint.getName() +\n+                    \"] does not extend @\" + ServerEndpoint.class.getName() +\n+                    \" or extend from \" + Endpoint.class.getName();\n+                throw new DeploymentException(err);\n+            }\n+\n+            return metadata;\n         }\n-        else\n+        catch (RuntimeException e)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwOTc1OA=="}, "originalCommit": {"oid": "c41560c7cd30f9ce5e79fd307763b1e6f9072817"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk4OTU4OnYy", "diffSide": "RIGHT", "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzo0MjozMFrOGae1ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzo0MjozMFrOGae1ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQyMTM3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    catch (Throwable t)\n          \n          \n            \n                    catch (DeploymentException e)\n          \n          \n            \n                    {\n          \n          \n            \n                        throw e;\n          \n          \n            \n                    }\n          \n          \n            \n                    catch (Throwable t)\n          \n          \n            \n                    {\n          \n          \n            \n                        throw new DeploymentException(t.getMessage(), t);\n          \n          \n            \n                    }", "url": "https://github.com/eclipse/jetty.project/pull/4906#discussion_r430421371", "createdAt": "2020-05-26T13:42:30Z", "author": {"login": "joakime"}, "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "diffHunk": "@@ -224,9 +224,11 @@ else if (Endpoint.class.isAssignableFrom(endpoint))\n \n             return metadata;\n         }\n-        catch (RuntimeException e)\n+        catch (Throwable t)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c63b0ef7810634378a977fb9d198558da07d657"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2557, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}