{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNTE3NTMy", "number": 5648, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzo1NTo0OFrOE435xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo1Mzo1NVrOE6dfbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDcxNjIyOnYy", "diffSide": "RIGHT", "path": "jetty-websocket/websocket-javax-tests/src/test/resources/alt-filter-web.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzo1NTo0OFrOHzDOzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMTowMDowNFrOHz19Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI5MjM2NA==", "bodyText": "Could we simplify this to just WebSocketUpgradeFilter instead of the fully qualified class name?", "url": "https://github.com/eclipse/jetty.project/pull/5648#discussion_r523292364", "createdAt": "2020-11-13T23:55:48Z", "author": {"login": "lachlan-roberts"}, "path": "jetty-websocket/websocket-javax-tests/src/test/resources/alt-filter-web.xml", "diffHunk": "@@ -12,16 +12,12 @@\n   </context-param>\n \n   <filter>\n-    <filter-name>wsuf-test</filter-name>\n+    <filter-name>org.eclipse.jetty.websocket.util.server.WebSocketUpgradeFilter</filter-name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dad0b1b7e62b47efb2d4e8b748446a15479d4f5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEyMzQxMA==", "bodyText": "I like the fact that it is a long and painful name.... helps indicate that it is special.", "url": "https://github.com/eclipse/jetty.project/pull/5648#discussion_r524123410", "createdAt": "2020-11-16T11:00:04Z", "author": {"login": "gregw"}, "path": "jetty-websocket/websocket-javax-tests/src/test/resources/alt-filter-web.xml", "diffHunk": "@@ -12,16 +12,12 @@\n   </context-param>\n \n   <filter>\n-    <filter-name>wsuf-test</filter-name>\n+    <filter-name>org.eclipse.jetty.websocket.util.server.WebSocketUpgradeFilter</filter-name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI5MjM2NA=="}, "originalCommit": {"oid": "6dad0b1b7e62b47efb2d4e8b748446a15479d4f5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzM0NzE1OnYy", "diffSide": "RIGHT", "path": "jetty-websocket/websocket-jetty-tests/src/test/java/org/eclipse/jetty/websocket/tests/JettyWebSocketWebApp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo1MDozMlrOH1jDRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo1MDozMlrOH1jDRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkxMDg1Mg==", "bodyText": "Use version 4.0 for XMLs.", "url": "https://github.com/eclipse/jetty.project/pull/5648#discussion_r525910852", "createdAt": "2020-11-18T08:50:32Z", "author": {"login": "sbordet"}, "path": "jetty-websocket/websocket-jetty-tests/src/test/java/org/eclipse/jetty/websocket/tests/JettyWebSocketWebApp.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package org.eclipse.jetty.websocket.tests;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.nio.file.Path;\n+\n+import org.eclipse.jetty.toolchain.test.FS;\n+import org.eclipse.jetty.toolchain.test.IO;\n+import org.eclipse.jetty.toolchain.test.MavenTestingUtils;\n+import org.eclipse.jetty.util.TypeUtil;\n+import org.eclipse.jetty.util.resource.PathResource;\n+import org.eclipse.jetty.webapp.WebAppContext;\n+import org.eclipse.jetty.websocket.server.config.JettyWebSocketConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+public class JettyWebSocketWebApp extends WebAppContext\n+{\n+    private static final Logger LOG = LoggerFactory.getLogger(JettyWebSocketWebApp.class);\n+\n+    private final Path contextDir;\n+    private final Path webInf;\n+    private final Path classesDir;\n+\n+    public JettyWebSocketWebApp(String contextName)\n+    {\n+        // Ensure context directory.\n+        Path testDir = MavenTestingUtils.getTargetTestingPath(JettyWebSocketWebApp.class.getName());\n+        contextDir = testDir.resolve(contextName);\n+        FS.ensureEmpty(contextDir);\n+\n+        // Ensure WEB-INF directories.\n+        webInf = contextDir.resolve(\"WEB-INF\");\n+        FS.ensureDirExists(webInf);\n+        classesDir = webInf.resolve(\"classes\");\n+        FS.ensureDirExists(classesDir);\n+\n+        // Configure the WebAppContext.\n+        setContextPath(\"/\" + contextName);\n+        setBaseResource(new PathResource(contextDir));\n+        addConfiguration(new JettyWebSocketConfiguration());\n+    }\n+\n+    public Path getContextDir()\n+    {\n+        return contextDir;\n+    }\n+\n+    public void createWebXml() throws IOException\n+    {\n+        String emptyWebXml = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\" +\n+            \"<web-app xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns=\\\"http://java.sun.com/xml/ns/javaee\\\" \" +\n+            \"xsi:schemaLocation=\\\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\\\" \" +\n+            \"metadata-complete=\\\"false\\\" version=\\\"3.0\\\"></web-app>\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aba2c93eae4ea3d5b22d686d764c04d26ed48a33"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzM1MzQyOnYy", "diffSide": "RIGHT", "path": "jetty-websocket/websocket-jetty-tests/src/test/resources/wsuf-ordering2.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo1MjoxMlrOH1jHRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo1MjoxMlrOH1jHRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkxMTg3OA==", "bodyText": "Is the filter class required? I ask because for e.g. the default Servlet is not required, and would be great to avoid the duplication between filter-name and filter-class.", "url": "https://github.com/eclipse/jetty.project/pull/5648#discussion_r525911878", "createdAt": "2020-11-18T08:52:12Z", "author": {"login": "sbordet"}, "path": "jetty-websocket/websocket-jetty-tests/src/test/resources/wsuf-ordering2.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<web-app\n+  xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n+\t\t http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n+  version=\"3.1\">\n+\n+  <!-- Make sure the default filter is first. -->\n+  <filter>\n+    <filter-name>org.eclipse.jetty.websocket.util.server.WebSocketUpgradeFilter</filter-name>\n+    <filter-class>org.eclipse.jetty.websocket.util.server.WebSocketUpgradeFilter</filter-class>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aba2c93eae4ea3d5b22d686d764c04d26ed48a33"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzM2MDQ0OnYy", "diffSide": "RIGHT", "path": "jetty-websocket/websocket-jetty-tests/src/test/java/org/eclipse/jetty/websocket/tests/JettyWebSocketFilterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo1Mzo1NVrOH1jLkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo1Mzo1NVrOH1jLkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkxMjk3OA==", "bodyText": "This is a surprise... I thought the default filter was always the first? IMHO it would be better if it is, unless too complicated.", "url": "https://github.com/eclipse/jetty.project/pull/5648#discussion_r525912978", "createdAt": "2020-11-18T08:53:55Z", "author": {"login": "sbordet"}, "path": "jetty-websocket/websocket-jetty-tests/src/test/java/org/eclipse/jetty/websocket/tests/JettyWebSocketFilterTest.java", "diffHunk": "@@ -297,6 +308,98 @@ public void testCustomUpgradeFilter() throws Exception\n         assertThat(socket.textMessages.poll(), is(\"hElLo wOrLd\"));\n     }\n \n+    @Test\n+    public void testDefaultWebSocketUpgradeFilterOrdering() throws Exception\n+    {\n+        String timeoutFromAltFilter = \"5999\";\n+        JettyWebSocketWebApp webApp = new JettyWebSocketWebApp(\"wsuf-ordering1\");\n+        Path webXml = MavenTestingUtils.getTestResourcePath(\"wsuf-ordering1.xml\");\n+        webApp.copyWebXml(webXml);\n+        webApp.copyClass(WebSocketEchoServletContextListener.class);\n+        webApp.copyClass(WebSocketEchoServletContextListener.EchoSocket.class);\n+\n+        server.setHandler(webApp);\n+        server.start();\n+        client.start();\n+\n+        // We have both websocket upgrade filters installed.\n+        FilterHolder[] filterHolders = webApp.getServletHandler().getFilters();\n+        assertThat(filterHolders.length, is(2));\n+        assertThat(filterHolders[0].getFilter(), instanceOf(WebSocketUpgradeFilter.class));\n+        assertThat(filterHolders[1].getFilter(), instanceOf(WebSocketUpgradeFilter.class));\n+\n+        // The custom filter defined in web.xml should be first in line so it will do the upgrade.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aba2c93eae4ea3d5b22d686d764c04d26ed48a33"}, "originalPosition": 101}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2140, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}