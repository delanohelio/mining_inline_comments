{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NDI4NDc3", "number": 5216, "title": "Issue #3974 flaky AsyncMiddleManServletTest overflow to filesystem tests", "bodyText": "Research into why this test fails occasionally on CI.\nThis has a few changes to AsyncMiddleManServletTest to attempt to glean information from the failure.\nThe likely reason is that the FileSystem I/O is overloaded at the time of the test.\nAnd the FileChannel.force(true) is just taking too long to complete.\nBumped up the Client request timeout from 5 seconds to 15 seconds.\nThat gives the test more time to complete in the high FileSystem I/O scenario, but doesn't impact the normal operations of the test.", "createdAt": "2020-08-31T17:20:55Z", "url": "https://github.com/eclipse/jetty.project/pull/5216", "merged": true, "mergeCommit": {"oid": "4e8bf3723c1fb48e192bcffab6785967277738e2"}, "closed": true, "closedAt": "2020-09-02T08:00:57Z", "author": {"login": "joakime"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEWKMtgFqTQ3ODc5OTQyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdE3B4dAFqTQ4MDU2MDIxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4Nzk5NDI2", "url": "https://github.com/eclipse/jetty.project/pull/5216#pullrequestreview-478799426", "createdAt": "2020-08-31T17:21:50Z", "commit": {"oid": "9e69d3ed13f4257716c421d59e2e0c38b4afa2df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNzoyMTo1MVrOHKBn7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNzoyMTo1MVrOHKBn7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI3NDQxMw==", "bodyText": "I need to remove this.", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r480274413", "createdAt": "2020-08-31T17:21:51Z", "author": {"login": "joakime"}, "path": "jetty-proxy/src/test/resources/jetty-logging.properties", "diffHunk": "@@ -1,6 +1,7 @@\n org.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.StdErrLog\n+org.eclipse.jetty.LEVEL=INFO\n #org.eclipse.jetty.LEVEL=DEBUG\n #org.eclipse.jetty.client.LEVEL=DEBUG\n-#org.eclipse.jetty.proxy.LEVEL=DEBUG\n+org.eclipse.jetty.proxy.LEVEL=DEBUG", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e69d3ed13f4257716c421d59e2e0c38b4afa2df"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NzI4ODg2", "url": "https://github.com/eclipse/jetty.project/pull/5216#pullrequestreview-479728886", "createdAt": "2020-09-01T13:15:33Z", "commit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzoxNTozM1rOHK1vmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzoxNTozM1rOHK1vmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyODM0NQ==", "bodyText": "Is the changed order of starting significant?  If not can we keep the order to minimise changes", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481128345", "createdAt": "2020-09-01T13:15:33Z", "author": {"login": "gregw"}, "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/AsyncMiddleManServletTest.java", "diffHunk": "@@ -508,46 +508,52 @@ protected ContentTransformer newClientRequestContentTransformer(HttpServletReque\n                     throw new NullPointerException(\"explicitly_thrown_by_test\");\n                 };\n             }\n-        });\n+        };\n+        startServer(new EchoHttpServlet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NzUyMjc3", "url": "https://github.com/eclipse/jetty.project/pull/5216#pullrequestreview-479752277", "createdAt": "2020-09-01T13:41:17Z", "commit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0MToxN1rOHK21Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0NDowMVrOHK28Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0NjExNQ==", "bodyText": "Yes please restore the inlining of AsyncMiddleManServlet.", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481146115", "createdAt": "2020-09-01T13:41:17Z", "author": {"login": "sbordet"}, "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/AsyncMiddleManServletTest.java", "diffHunk": "@@ -508,46 +508,52 @@ protected ContentTransformer newClientRequestContentTransformer(HttpServletReque\n                     throw new NullPointerException(\"explicitly_thrown_by_test\");\n                 };\n             }\n-        });\n+        };\n+        startServer(new EchoHttpServlet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyODM0NQ=="}, "originalCommit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0NjU0Nw==", "bodyText": "Restore inlining of AsyncMiddleManServlet.", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481146547", "createdAt": "2020-09-01T13:41:51Z", "author": {"login": "sbordet"}, "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/AsyncMiddleManServletTest.java", "diffHunk": "@@ -508,46 +508,52 @@ protected ContentTransformer newClientRequestContentTransformer(HttpServletReque\n                     throw new NullPointerException(\"explicitly_thrown_by_test\");\n                 };\n             }\n-        });\n+        };\n+        startServer(new EchoHttpServlet());\n+        startProxy(proxyServlet);\n         startClient();\n \n-        byte[] bytes = new byte[1024];\n-        ContentResponse response = client.newRequest(\"localhost\", serverConnector.getLocalPort())\n-            .content(new BytesContentProvider(bytes))\n-            .timeout(5, TimeUnit.SECONDS)\n-            .send();\n+        try (StacklessLogging ignored = new StacklessLogging(proxyServlet._log))\n+        {\n+            byte[] bytes = new byte[1024];\n+            ContentResponse response = client.newRequest(\"localhost\", serverConnector.getLocalPort())\n+                .content(new BytesContentProvider(bytes))\n+                .timeout(5, TimeUnit.SECONDS)\n+                .send();\n \n-        assertEquals(500, response.getStatus());\n+            assertEquals(500, response.getStatus());\n+        }\n     }\n \n     @Test\n     public void testUpstreamTransformationThrowsAfterCommittingProxyRequest() throws Exception\n     {\n-        try (StacklessLogging ignored = new StacklessLogging(HttpChannel.class))\n+        AsyncMiddleManServlet proxyServlet = new AsyncMiddleManServlet()\n         {\n-            startServer(new EchoHttpServlet());\n-            startProxy(new AsyncMiddleManServlet()\n+            @Override\n+            protected ContentTransformer newClientRequestContentTransformer(HttpServletRequest clientRequest, Request proxyRequest)\n             {\n-                @Override\n-                protected ContentTransformer newClientRequestContentTransformer(HttpServletRequest clientRequest, Request proxyRequest)\n+                return new ContentTransformer()\n                 {\n-                    return new ContentTransformer()\n-                    {\n-                        private int count;\n+                    private int count;\n \n-                        @Override\n-                        public void transform(ByteBuffer input, boolean finished, List<ByteBuffer> output)\n-                        {\n-                            if (++count < 2)\n-                                output.add(input);\n-                            else\n-                                throw new NullPointerException(\"explicitly_thrown_by_test\");\n-                        }\n-                    };\n-                }\n-            });\n-            startClient();\n+                    @Override\n+                    public void transform(ByteBuffer input, boolean finished, List<ByteBuffer> output)\n+                    {\n+                        if (++count < 2)\n+                            output.add(input);\n+                        else\n+                            throw new NullPointerException(\"explicitly_thrown_by_test\");\n+                    }\n+                };\n+            }\n+        };\n+        startServer(new EchoHttpServlet());\n+        startProxy(proxyServlet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0NjczMw==", "bodyText": "Restore inlining of AsyncMiddleManServlet.", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481146733", "createdAt": "2020-09-01T13:42:09Z", "author": {"login": "sbordet"}, "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/AsyncMiddleManServletTest.java", "diffHunk": "@@ -625,14 +630,19 @@ public void transform(ByteBuffer input, boolean finished, List<ByteBuffer> outpu\n                     }\n                 };\n             }\n-        });\n+        };\n+        startServer(serverServlet);\n+        startProxy(proxyServlet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0Njk3OQ==", "bodyText": "Unused tag?", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481146979", "createdAt": "2020-09-01T13:42:29Z", "author": {"login": "sbordet"}, "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/AsyncMiddleManServletTest.java", "diffHunk": "@@ -983,6 +993,7 @@ public boolean transform(Source source, Sink sink) throws IOException\n     }\n \n     @Test\n+    @Tag(\"overflow\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0NzMzNQ==", "bodyText": "Unused tag?", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481147335", "createdAt": "2020-09-01T13:43:03Z", "author": {"login": "sbordet"}, "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/AsyncMiddleManServletTest.java", "diffHunk": "@@ -1037,34 +1048,71 @@ public boolean transform(Source source, Sink sink) throws IOException\n         });\n         startClient();\n \n-        ContentResponse response = client.newRequest(\"localhost\", serverConnector.getLocalPort())\n-            .timeout(5, TimeUnit.SECONDS)\n-            .send();\n-\n-        assertEquals(200, response.getStatus());\n-        @SuppressWarnings(\"unchecked\")\n-        Map<String, Object> obj = (Map<String, Object>)JSON.parse(response.getContentAsString());\n-        assertNotNull(obj);\n-        assertEquals(2, obj.size());\n-        assertEquals(value0, obj.get(key0));\n-        assertEquals(value1, obj.get(key2));\n-        // Make sure the files do not exist.\n-        try (DirectoryStream<Path> paths = Files.newDirectoryStream(targetTestsDir, inputPrefix + \"*.*\"))\n+        try\n         {\n-            assertFalse(paths.iterator().hasNext());\n+            ContentResponse response = client.newRequest(\"localhost\", serverConnector.getLocalPort())\n+                .timeout(15, TimeUnit.SECONDS)\n+                .send();\n+\n+            assertEquals(200, response.getStatus());\n+            @SuppressWarnings(\"unchecked\")\n+            Map<String, Object> obj = (Map<String, Object>)JSON.parse(response.getContentAsString());\n+            assertNotNull(obj);\n+            assertEquals(2, obj.size());\n+            assertEquals(value0, obj.get(key0));\n+            assertEquals(value1, obj.get(key2));\n+\n+            // File deletion is delayed on windows, testing for deletion is not going to work\n+            if (!OS.WINDOWS.isCurrentOs())\n+            {\n+                try (DirectoryStream<Path> paths = Files.newDirectoryStream(targetTestsDir, outputPrefix + \"*.*\"))\n+                {\n+                    assertFalse(paths.iterator().hasNext());\n+                }\n+            }\n+        }\n+        catch (TimeoutException e)\n+        {\n+            LOG.warn(\"Client Dump\");\n+            QueuedThreadPool qtp = (QueuedThreadPool)client.getExecutor();\n+            qtp.setDetailedDump(true);\n+            client.dumpStdErr();\n+            LOG.warn(\"Server Dump\");\n+            qtp = (QueuedThreadPool)server.getThreadPool();\n+            qtp.setDetailedDump(true);\n+            server.dumpStdErr();\n+            LOG.warn(\"Thread Dump\");\n+            System.err.println(generateThreadDump());\n+            throw e;\n         }\n+    }\n \n-        // File deletion is delayed on windows, testing for deletion is not going to work\n-        if (!OS.WINDOWS.isCurrentOs())\n+    public static String generateThreadDump()\n+    {\n+        final StringBuilder dump = new StringBuilder();\n+        final ThreadMXBean threadMXBean = ManagementFactory.getThreadMXBean();\n+        final ThreadInfo[] threadInfos = threadMXBean.getThreadInfo(threadMXBean.getAllThreadIds(), 400);\n+        for (ThreadInfo threadInfo : threadInfos)\n         {\n-            try (DirectoryStream<Path> paths = Files.newDirectoryStream(targetTestsDir, outputPrefix + \"*.*\"))\n-            {\n-                assertFalse(paths.iterator().hasNext());\n+            dump.append('\"');\n+            dump.append(threadInfo.getThreadName());\n+            dump.append(\"\\\" \");\n+            final Thread.State state = threadInfo.getThreadState();\n+            dump.append(\"\\n   java.lang.Thread.State: \");\n+            dump.append(state);\n+            final StackTraceElement[] stackTraceElements = threadInfo.getStackTrace();\n+            for (final StackTraceElement stackTraceElement : stackTraceElements)\n+            {\n+                dump.append(\"\\n        at \");\n+                dump.append(stackTraceElement);\n             }\n+            dump.append(\"\\n\\n\");\n         }\n+        return dump.toString();\n     }\n \n     @Test\n+    @Tag(\"overflow\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "originalPosition": 271}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0NzkwNA==", "bodyText": "Was 5 * idleTimeout so it should be 15 * idleTimeout now.", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481147904", "createdAt": "2020-09-01T13:43:51Z", "author": {"login": "sbordet"}, "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/AsyncMiddleManServletTest.java", "diffHunk": "@@ -1122,14 +1170,15 @@ public long getLength()\n                     return data.length + 1;\n                 }\n             })\n-            .timeout(5 * idleTimeout, TimeUnit.MILLISECONDS)\n+            .timeout(15, TimeUnit.SECONDS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "originalPosition": 280}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0Nzk5OQ==", "bodyText": "Unused tag?", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481147999", "createdAt": "2020-09-01T13:44:01Z", "author": {"login": "sbordet"}, "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/AsyncMiddleManServletTest.java", "diffHunk": "@@ -1122,14 +1170,15 @@ public long getLength()\n                     return data.length + 1;\n                 }\n             })\n-            .timeout(5 * idleTimeout, TimeUnit.MILLISECONDS)\n+            .timeout(15, TimeUnit.SECONDS)\n             .send();\n \n         assertTrue(destroyLatch.await(5 * idleTimeout, TimeUnit.MILLISECONDS));\n         assertEquals(HttpStatus.REQUEST_TIMEOUT_408, response.getStatus());\n     }\n \n     @Test\n+    @Tag(\"overflow\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca7ec16bdd248f3d16dfd6ed49c77f047ca3607"}, "originalPosition": 288}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5ODgzMDgz", "url": "https://github.com/eclipse/jetty.project/pull/5216#pullrequestreview-479883083", "createdAt": "2020-09-01T15:50:49Z", "commit": {"oid": "0eaf15445a0b882aaa931f3c433ed32da86034e3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MDo0OVrOHK89Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MToxMlrOHK8-JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NjUxNQ==", "bodyText": "No, I don't want to maintain this class publicly just for 1 test.\nNo generic usefulness because we had the same thing in jetty-monitor but was not used and we ditched the whole module.\nPlease remove it.", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481246515", "createdAt": "2020-09-01T15:50:49Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/main/java/org/eclipse/jetty/util/RuntimeUtil.java", "diffHunk": "@@ -0,0 +1,121 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.util;\n+\n+import java.lang.management.LockInfo;\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.MonitorInfo;\n+import java.lang.management.ThreadInfo;\n+import java.lang.management.ThreadMXBean;\n+\n+/**\n+ * Java Runtime specific utility methods.\n+ */\n+public final class RuntimeUtil", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eaf15445a0b882aaa931f3c433ed32da86034e3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0Njc1Ng==", "bodyText": "See above, please remove it.", "url": "https://github.com/eclipse/jetty.project/pull/5216#discussion_r481246756", "createdAt": "2020-09-01T15:51:12Z", "author": {"login": "sbordet"}, "path": "jetty-util/src/test/java/org/eclipse/jetty/util/RuntimeUtilTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.util;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInfo;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsString;\n+\n+public class RuntimeUtilTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eaf15445a0b882aaa931f3c433ed32da86034e3"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acc6e3aac2537aa054c79512ca9e1d0a8f7be034", "author": {"user": {"login": "joakime", "name": "Joakim Erdfelt"}}, "url": "https://github.com/eclipse/jetty.project/commit/acc6e3aac2537aa054c79512ca9e1d0a8f7be034", "committedDate": "2020-09-01T22:21:48Z", "message": "Issue #3974 - Reworking AsyncMiddleManServletTest for test failures.\n\n+ be more detailed when unexpected exceptions occur\n+ dump client and server when timeout occurs\n+ increasing client timeout on overflow/disk test methods\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0eaf15445a0b882aaa931f3c433ed32da86034e3", "author": {"user": {"login": "joakime", "name": "Joakim Erdfelt"}}, "url": "https://github.com/eclipse/jetty.project/commit/0eaf15445a0b882aaa931f3c433ed32da86034e3", "committedDate": "2020-09-01T15:32:43Z", "message": "Issue #3974 - Applying changes from review\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>"}, "afterCommit": {"oid": "acc6e3aac2537aa054c79512ca9e1d0a8f7be034", "author": {"user": {"login": "joakime", "name": "Joakim Erdfelt"}}, "url": "https://github.com/eclipse/jetty.project/commit/acc6e3aac2537aa054c79512ca9e1d0a8f7be034", "committedDate": "2020-09-01T22:21:48Z", "message": "Issue #3974 - Reworking AsyncMiddleManServletTest for test failures.\n\n+ be more detailed when unexpected exceptions occur\n+ dump client and server when timeout occurs\n+ increasing client timeout on overflow/disk test methods\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNTYwMjE4", "url": "https://github.com/eclipse/jetty.project/pull/5216#pullrequestreview-480560218", "createdAt": "2020-09-02T07:39:46Z", "commit": {"oid": "acc6e3aac2537aa054c79512ca9e1d0a8f7be034"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 317, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}