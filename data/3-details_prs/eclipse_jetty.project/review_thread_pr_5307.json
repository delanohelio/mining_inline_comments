{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNTA1MDAw", "number": 5307, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxNToyMlrOEl0ttg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoxMzo0NFrOEmDc2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDk2NDM4OnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxNToyMlrOHVg2bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxNToyMlrOHVg2bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMyMDM2NA==", "bodyText": "Some javadoc here saying this usage will result in using the serverName/serverPort from the Request?", "url": "https://github.com/eclipse/jetty.project/pull/5307#discussion_r492320364", "createdAt": "2020-09-21T20:15:22Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "diffHunk": "@@ -19,30 +19,30 @@\n package org.eclipse.jetty.server;\n \n import java.util.Objects;\n-import javax.servlet.http.HttpServletRequest;\n \n-import org.eclipse.jetty.http.HttpURI;\n+import org.eclipse.jetty.http.HostPortHttpField;\n+import org.eclipse.jetty.http.HttpFields;\n+import org.eclipse.jetty.http.HttpHeader;\n+import org.eclipse.jetty.http.HttpScheme;\n+import org.eclipse.jetty.http.HttpVersion;\n \n /**\n- * Customizes requests that lack the {@code Host} header (for example, HTTP 1.0 requests).\n+ * Adds a missing {@code Host} header (for example, HTTP 1.0 or 2.0 requests).\n  * <p>\n- * In case of HTTP 1.0 requests that lack the {@code Host} header, the application may issue\n- * a redirect, and the {@code Location} header is usually constructed from the {@code Host}\n- * header; if the {@code Host} header is missing, the server may query the connector for its\n- * IP address in order to construct the {@code Location} header, and thus leak to clients\n- * internal IP addresses.\n- * <p>\n- * This {@link HttpConfiguration.Customizer} is configured with a {@code serverName} and\n- * optionally a {@code serverPort}.\n- * If the {@code Host} header is absent, the configured {@code serverName} will be set on\n- * the request so that {@link HttpServletRequest#getServerName()} will return that value,\n- * and likewise for {@code serverPort} and {@link HttpServletRequest#getServerPort()}.\n+ * The host and port may be provided in the constructor or taken from the\n+ * {@link Request#getServerName()} and {@link Request#getServerPort()} methods.\n+ * </p>\n  */\n public class HostHeaderCustomizer implements HttpConfiguration.Customizer\n {\n     private final String serverName;\n     private final int serverPort;\n \n+    public HostHeaderCustomizer()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "256c6692dd083ff605065e1abedcccdea8c68e71"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDk2NjMxOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxNTo1NlrOHVg3iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxNTo1NlrOHVg3iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMyMDY1MQ==", "bodyText": "This forwards to this(String, int) which requires that serverName is not null.", "url": "https://github.com/eclipse/jetty.project/pull/5307#discussion_r492320651", "createdAt": "2020-09-21T20:15:56Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "diffHunk": "@@ -19,30 +19,30 @@\n package org.eclipse.jetty.server;\n \n import java.util.Objects;\n-import javax.servlet.http.HttpServletRequest;\n \n-import org.eclipse.jetty.http.HttpURI;\n+import org.eclipse.jetty.http.HostPortHttpField;\n+import org.eclipse.jetty.http.HttpFields;\n+import org.eclipse.jetty.http.HttpHeader;\n+import org.eclipse.jetty.http.HttpScheme;\n+import org.eclipse.jetty.http.HttpVersion;\n \n /**\n- * Customizes requests that lack the {@code Host} header (for example, HTTP 1.0 requests).\n+ * Adds a missing {@code Host} header (for example, HTTP 1.0 or 2.0 requests).\n  * <p>\n- * In case of HTTP 1.0 requests that lack the {@code Host} header, the application may issue\n- * a redirect, and the {@code Location} header is usually constructed from the {@code Host}\n- * header; if the {@code Host} header is missing, the server may query the connector for its\n- * IP address in order to construct the {@code Location} header, and thus leak to clients\n- * internal IP addresses.\n- * <p>\n- * This {@link HttpConfiguration.Customizer} is configured with a {@code serverName} and\n- * optionally a {@code serverPort}.\n- * If the {@code Host} header is absent, the configured {@code serverName} will be set on\n- * the request so that {@link HttpServletRequest#getServerName()} will return that value,\n- * and likewise for {@code serverPort} and {@link HttpServletRequest#getServerPort()}.\n+ * The host and port may be provided in the constructor or taken from the\n+ * {@link Request#getServerName()} and {@link Request#getServerPort()} methods.\n+ * </p>\n  */\n public class HostHeaderCustomizer implements HttpConfiguration.Customizer\n {\n     private final String serverName;\n     private final int serverPort;\n \n+    public HostHeaderCustomizer()\n+    {\n+        this(null, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "256c6692dd083ff605065e1abedcccdea8c68e71"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzM2MjkzOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjowOTozNlrOHV25Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzowNjoxMlrOHV5EAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MTUwNg==", "bodyText": "Don't you want to setHttpURI() if the port is normalized in a way that's different then serverPort too?", "url": "https://github.com/eclipse/jetty.project/pull/5307#discussion_r492681506", "createdAt": "2020-09-22T12:09:36Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "diffHunk": "@@ -57,15 +60,26 @@ public HostHeaderCustomizer(String serverName)\n      */\n     public HostHeaderCustomizer(String serverName, int serverPort)\n     {\n-        this.serverName = Objects.requireNonNull(serverName);\n+        this.serverName = serverName;\n         this.serverPort = serverPort;\n     }\n \n     @Override\n     public void customize(Connector connector, HttpConfiguration channelConfig, Request request)\n     {\n-        if (request.getHeader(\"Host\") == null)\n-            // TODO set the field as well?\n-            request.setHttpURI(HttpURI.build(request.getHttpURI()).host(serverName).port(serverPort));\n+        if (request.getHttpVersion() != HttpVersion.HTTP_1_1 && !request.getHttpFields().contains(HttpHeader.HOST))\n+        {\n+            String host = serverName == null ? request.getServerName() : serverName;\n+            int port = HttpScheme.normalizePort(request.getScheme(), serverPort == 0 ? request.getServerPort() : serverPort);\n+\n+            if (serverName != null || serverPort > 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e93b84ce23341d6e68e360c89e52a39dca006c5"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxNzA1Ng==", "bodyText": "My thinking here is that if the serverPort is set, then we will set the port, but will used the normalised version of it.\nSo if they set port 80, but the real port was 8888 we would set the port to 0 not 80", "url": "https://github.com/eclipse/jetty.project/pull/5307#discussion_r492717056", "createdAt": "2020-09-22T13:06:12Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "diffHunk": "@@ -57,15 +60,26 @@ public HostHeaderCustomizer(String serverName)\n      */\n     public HostHeaderCustomizer(String serverName, int serverPort)\n     {\n-        this.serverName = Objects.requireNonNull(serverName);\n+        this.serverName = serverName;\n         this.serverPort = serverPort;\n     }\n \n     @Override\n     public void customize(Connector connector, HttpConfiguration channelConfig, Request request)\n     {\n-        if (request.getHeader(\"Host\") == null)\n-            // TODO set the field as well?\n-            request.setHttpURI(HttpURI.build(request.getHttpURI()).host(serverName).port(serverPort));\n+        if (request.getHttpVersion() != HttpVersion.HTTP_1_1 && !request.getHttpFields().contains(HttpHeader.HOST))\n+        {\n+            String host = serverName == null ? request.getServerName() : serverName;\n+            int port = HttpScheme.normalizePort(request.getScheme(), serverPort == 0 ? request.getServerPort() : serverPort);\n+\n+            if (serverName != null || serverPort > 0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MTUwNg=="}, "originalCommit": {"oid": "4e93b84ce23341d6e68e360c89e52a39dca006c5"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzM3ODgzOnYy", "diffSide": "RIGHT", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoxMzo0NFrOHV3CfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjowMjo1M1rOHWpQdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MzkwMQ==", "bodyText": "This looks odd, why is this not httpFields.addAll(request.getHttpFields()); ?\nAlso, doesn't this change the request.getHttpFields() to now be Mutable?\nWhat if this was ...\nHttpFields updated = HttpFields.build(\n   request.getHttpFields(), \n   new HostPortHttpFields(host, port));\nrequest.setHttpFields(updated);\nWhere there is a new method .build(HttpFields original, HttpField ... fields) ?", "url": "https://github.com/eclipse/jetty.project/pull/5307#discussion_r492683901", "createdAt": "2020-09-22T12:13:44Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "diffHunk": "@@ -57,15 +60,26 @@ public HostHeaderCustomizer(String serverName)\n      */\n     public HostHeaderCustomizer(String serverName, int serverPort)\n     {\n-        this.serverName = Objects.requireNonNull(serverName);\n+        this.serverName = serverName;\n         this.serverPort = serverPort;\n     }\n \n     @Override\n     public void customize(Connector connector, HttpConfiguration channelConfig, Request request)\n     {\n-        if (request.getHeader(\"Host\") == null)\n-            // TODO set the field as well?\n-            request.setHttpURI(HttpURI.build(request.getHttpURI()).host(serverName).port(serverPort));\n+        if (request.getHttpVersion() != HttpVersion.HTTP_1_1 && !request.getHttpFields().contains(HttpHeader.HOST))\n+        {\n+            String host = serverName == null ? request.getServerName() : serverName;\n+            int port = HttpScheme.normalizePort(request.getScheme(), serverPort == 0 ? request.getServerPort() : serverPort);\n+\n+            if (serverName != null || serverPort > 0)\n+                request.setHttpURI(HttpURI.build(request.getHttpURI()).authority(host, port));\n+\n+            HttpFields original = request.getHttpFields();\n+            HttpFields.Mutable httpFields = HttpFields.build(original.size() + 1);\n+            httpFields.add(new HostPortHttpField(host, port));\n+            httpFields.add(request.getHttpFields());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e93b84ce23341d6e68e360c89e52a39dca006c5"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxNTk1MA==", "bodyText": "https://tools.ietf.org/html/rfc7230#section-3.2.2 says Host header should be one of the first headers sent.  I can't imagine too much depending on this, but best to follow recommendations.", "url": "https://github.com/eclipse/jetty.project/pull/5307#discussion_r492715950", "createdAt": "2020-09-22T13:04:35Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "diffHunk": "@@ -57,15 +60,26 @@ public HostHeaderCustomizer(String serverName)\n      */\n     public HostHeaderCustomizer(String serverName, int serverPort)\n     {\n-        this.serverName = Objects.requireNonNull(serverName);\n+        this.serverName = serverName;\n         this.serverPort = serverPort;\n     }\n \n     @Override\n     public void customize(Connector connector, HttpConfiguration channelConfig, Request request)\n     {\n-        if (request.getHeader(\"Host\") == null)\n-            // TODO set the field as well?\n-            request.setHttpURI(HttpURI.build(request.getHttpURI()).host(serverName).port(serverPort));\n+        if (request.getHttpVersion() != HttpVersion.HTTP_1_1 && !request.getHttpFields().contains(HttpHeader.HOST))\n+        {\n+            String host = serverName == null ? request.getServerName() : serverName;\n+            int port = HttpScheme.normalizePort(request.getScheme(), serverPort == 0 ? request.getServerPort() : serverPort);\n+\n+            if (serverName != null || serverPort > 0)\n+                request.setHttpURI(HttpURI.build(request.getHttpURI()).authority(host, port));\n+\n+            HttpFields original = request.getHttpFields();\n+            HttpFields.Mutable httpFields = HttpFields.build(original.size() + 1);\n+            httpFields.add(new HostPortHttpField(host, port));\n+            httpFields.add(request.getHttpFields());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MzkwMQ=="}, "originalCommit": {"oid": "4e93b84ce23341d6e68e360c89e52a39dca006c5"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3MzI5NA==", "bodyText": "This still changes future requests on request.getHttpFields() to be a HttpFields.Mutable, right?\nI don't think that's desired.", "url": "https://github.com/eclipse/jetty.project/pull/5307#discussion_r492973294", "createdAt": "2020-09-22T19:12:39Z", "author": {"login": "joakime"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "diffHunk": "@@ -57,15 +60,26 @@ public HostHeaderCustomizer(String serverName)\n      */\n     public HostHeaderCustomizer(String serverName, int serverPort)\n     {\n-        this.serverName = Objects.requireNonNull(serverName);\n+        this.serverName = serverName;\n         this.serverPort = serverPort;\n     }\n \n     @Override\n     public void customize(Connector connector, HttpConfiguration channelConfig, Request request)\n     {\n-        if (request.getHeader(\"Host\") == null)\n-            // TODO set the field as well?\n-            request.setHttpURI(HttpURI.build(request.getHttpURI()).host(serverName).port(serverPort));\n+        if (request.getHttpVersion() != HttpVersion.HTTP_1_1 && !request.getHttpFields().contains(HttpHeader.HOST))\n+        {\n+            String host = serverName == null ? request.getServerName() : serverName;\n+            int port = HttpScheme.normalizePort(request.getScheme(), serverPort == 0 ? request.getServerPort() : serverPort);\n+\n+            if (serverName != null || serverPort > 0)\n+                request.setHttpURI(HttpURI.build(request.getHttpURI()).authority(host, port));\n+\n+            HttpFields original = request.getHttpFields();\n+            HttpFields.Mutable httpFields = HttpFields.build(original.size() + 1);\n+            httpFields.add(new HostPortHttpField(host, port));\n+            httpFields.add(request.getHttpFields());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MzkwMQ=="}, "originalCommit": {"oid": "4e93b84ce23341d6e68e360c89e52a39dca006c5"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwNjY3Nw==", "bodyText": "https://github.com/eclipse/jetty.project/blob/jetty-10.0.x/jetty-server/src/main/java/org/eclipse/jetty/server/Request.java#L250-L253", "url": "https://github.com/eclipse/jetty.project/pull/5307#discussion_r493506677", "createdAt": "2020-09-23T12:02:53Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java", "diffHunk": "@@ -57,15 +60,26 @@ public HostHeaderCustomizer(String serverName)\n      */\n     public HostHeaderCustomizer(String serverName, int serverPort)\n     {\n-        this.serverName = Objects.requireNonNull(serverName);\n+        this.serverName = serverName;\n         this.serverPort = serverPort;\n     }\n \n     @Override\n     public void customize(Connector connector, HttpConfiguration channelConfig, Request request)\n     {\n-        if (request.getHeader(\"Host\") == null)\n-            // TODO set the field as well?\n-            request.setHttpURI(HttpURI.build(request.getHttpURI()).host(serverName).port(serverPort));\n+        if (request.getHttpVersion() != HttpVersion.HTTP_1_1 && !request.getHttpFields().contains(HttpHeader.HOST))\n+        {\n+            String host = serverName == null ? request.getServerName() : serverName;\n+            int port = HttpScheme.normalizePort(request.getScheme(), serverPort == 0 ? request.getServerPort() : serverPort);\n+\n+            if (serverName != null || serverPort > 0)\n+                request.setHttpURI(HttpURI.build(request.getHttpURI()).authority(host, port));\n+\n+            HttpFields original = request.getHttpFields();\n+            HttpFields.Mutable httpFields = HttpFields.build(original.size() + 1);\n+            httpFields.add(new HostPortHttpField(host, port));\n+            httpFields.add(request.getHttpFields());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4MzkwMQ=="}, "originalCommit": {"oid": "4e93b84ce23341d6e68e360c89e52a39dca006c5"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2240, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}