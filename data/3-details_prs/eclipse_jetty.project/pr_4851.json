{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NDE3MzIz", "number": 4851, "title": "Issue #4741 - fix issues with HttpServletMapping", "bodyText": "Issue #4741\nThere were previously 8 TCK tests which were failing due to HttpServletMapping, this PR fixes 7 of them however the remaining one is due to the async dispatch expecting the HttpServletMapping of the source and not the target, but we think the spec and tck are wrong on that so it hasn't been fixed for now.\n\nHttpServletMapping is now created and set on the Request by the ServletHandler and is not created lazily which allows us to get the correct servletName in the mapping.\nRemoved the leading / for matchValues which is tested for in the TCK.\nFor exact matches we now store the HttpServletMapping and don't need to re-create it every time getHttpServletMapping() is called.", "createdAt": "2020-05-07T01:52:37Z", "url": "https://github.com/eclipse/jetty.project/pull/4851", "merged": true, "mergeCommit": {"oid": "8d5430bc60473afbdb0d194bc5f30ad2f9a09274"}, "closed": true, "closedAt": "2020-05-20T13:23:33Z", "author": {"login": "lachlan-roberts"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceekzvAH2gAyNDE0NDE3MzIzOmYxNjI5OWQ4NmNhMGRmNmQzZGVmMWRhZjBkYThkNjk1ODZiODUwMDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjI_3lAFqTQxNTMyNzEwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f16299d86ca0df6d3def1daf0da8d69586b85002", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/f16299d86ca0df6d3def1daf0da8d69586b85002", "committedDate": "2020-05-06T01:41:10Z", "message": "Issue #4741 - fixes to jetty implementation of HttpServletMapping\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c257e2445fe39da60fc0b45c702023cc4c644fc4", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/c257e2445fe39da60fc0b45c702023cc4c644fc4", "committedDate": "2020-05-06T08:28:24Z", "message": "Issue #4741 - don't lazily generate HttpServletMapping to preserve servletName\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8578233ed6ea9aab13c7881c35567146c38d744", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/a8578233ed6ea9aab13c7881c35567146c38d744", "committedDate": "2020-05-06T21:08:50Z", "message": "Issue #4741 - tests should expect no leading / for matchValue\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a15446de11f8ab3b43708b6dce30346a4bf6954d", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/a15446de11f8ab3b43708b6dce30346a4bf6954d", "committedDate": "2020-05-06T23:17:41Z", "message": "resolving TODOs from review\n\n- removed pathSpec from Request\n- getServletMapping moved to ServletHandler\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c9ff9993256c3cdb3ce333944d6e56897c583d1", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/4c9ff9993256c3cdb3ce333944d6e56897c583d1", "committedDate": "2020-05-07T00:42:02Z", "message": "Issue #4741 - only create HttpServletMapping for exact matches once\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08e713d8498d1eebad3a88eac5b71bae1f6343cc", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/08e713d8498d1eebad3a88eac5b71bae1f6343cc", "committedDate": "2020-05-07T06:49:13Z", "message": "use wrapped attributes for async dispatch\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b4d3e6cc5f19e79b44437f5232627197c7722b5a", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/b4d3e6cc5f19e79b44437f5232627197c7722b5a", "committedDate": "2020-05-07T04:20:29Z", "message": "use wrapped attributes for async dispatch\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}, "afterCommit": {"oid": "08e713d8498d1eebad3a88eac5b71bae1f6343cc", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/08e713d8498d1eebad3a88eac5b71bae1f6343cc", "committedDate": "2020-05-07T06:49:13Z", "message": "use wrapped attributes for async dispatch\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MzYyNzQ1", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-407362745", "createdAt": "2020-05-07T10:57:27Z", "commit": {"oid": "b4d3e6cc5f19e79b44437f5232627197c7722b5a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDo1ODo0MlrOGR5T7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDo1OTo1N1rOGR5WkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQxNzk2Ng==", "bodyText": "Do we need to get these attributes now?  could we just get them from the wrapped attributes if they are got?", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r421417966", "createdAt": "2020-05-07T10:58:42Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContextEvent.java", "diffHunk": "@@ -185,4 +183,117 @@ public void addThrowable(Throwable e)\n         else if (e != _throwable)\n             _throwable.addSuppressed(e);\n     }\n+\n+    private static class AsyncAttributes extends Attributes.Wrapper\n+    {\n+        private String _requestURI;\n+        private String _contextPath;\n+        private String _servletPath;\n+        private String _pathInfo;\n+        private String _query;\n+        private HttpServletMapping _mapping;\n+\n+        AsyncAttributes(Attributes attributes)\n+        {\n+            super(attributes);\n+        }\n+\n+        AsyncAttributes(Request request, Attributes attributes)\n+        {\n+            super(attributes);\n+            _requestURI = request.getRequestURI();\n+            _contextPath = request.getContextPath();\n+            _servletPath = request.getServletPath();\n+            _pathInfo = request.getPathInfo();\n+            _query = request.getQueryString();\n+            _mapping = request.getHttpServletMapping();\n+        }\n+\n+        static AsyncAttributes fromForwardedAttributes(Attributes attributes)\n+        {\n+            AsyncAttributes asyncAttributes = new AsyncAttributes(attributes);\n+            asyncAttributes._requestURI = (String)attributes.getAttribute(RequestDispatcher.FORWARD_REQUEST_URI);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e713d8498d1eebad3a88eac5b71bae1f6343cc"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQxODY0MQ==", "bodyText": "I'm not entirely sure we need to support setting these attributes?   I think we can let a set of them be a noop.", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r421418641", "createdAt": "2020-05-07T10:59:57Z", "author": {"login": "gregw"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncContextEvent.java", "diffHunk": "@@ -185,4 +183,117 @@ public void addThrowable(Throwable e)\n         else if (e != _throwable)\n             _throwable.addSuppressed(e);\n     }\n+\n+    private static class AsyncAttributes extends Attributes.Wrapper\n+    {\n+        private String _requestURI;\n+        private String _contextPath;\n+        private String _servletPath;\n+        private String _pathInfo;\n+        private String _query;\n+        private HttpServletMapping _mapping;\n+\n+        AsyncAttributes(Attributes attributes)\n+        {\n+            super(attributes);\n+        }\n+\n+        AsyncAttributes(Request request, Attributes attributes)\n+        {\n+            super(attributes);\n+            _requestURI = request.getRequestURI();\n+            _contextPath = request.getContextPath();\n+            _servletPath = request.getServletPath();\n+            _pathInfo = request.getPathInfo();\n+            _query = request.getQueryString();\n+            _mapping = request.getHttpServletMapping();\n+        }\n+\n+        static AsyncAttributes fromForwardedAttributes(Attributes attributes)\n+        {\n+            AsyncAttributes asyncAttributes = new AsyncAttributes(attributes);\n+            asyncAttributes._requestURI = (String)attributes.getAttribute(RequestDispatcher.FORWARD_REQUEST_URI);\n+            asyncAttributes._contextPath = (String)attributes.getAttribute(RequestDispatcher.FORWARD_CONTEXT_PATH);\n+            asyncAttributes._servletPath = (String)attributes.getAttribute(RequestDispatcher.FORWARD_SERVLET_PATH);\n+            asyncAttributes._pathInfo = (String)attributes.getAttribute(RequestDispatcher.FORWARD_PATH_INFO);\n+            asyncAttributes._query = (String)attributes.getAttribute(RequestDispatcher.FORWARD_QUERY_STRING);\n+            asyncAttributes._mapping = (HttpServletMapping)attributes.getAttribute(RequestDispatcher.FORWARD_MAPPING);\n+            return asyncAttributes;\n+        }\n+\n+        @Override\n+        public Object getAttribute(String key)\n+        {\n+            if (!key.startsWith(__ASYNC_PREFIX))\n+                return super.getAttribute(key);\n+\n+            switch (key)\n+            {\n+                case AsyncContext.ASYNC_REQUEST_URI:\n+                    return _requestURI;\n+                case AsyncContext.ASYNC_CONTEXT_PATH:\n+                    return _contextPath;\n+                case AsyncContext.ASYNC_SERVLET_PATH:\n+                    return _servletPath;\n+                case AsyncContext.ASYNC_PATH_INFO:\n+                    return _pathInfo;\n+                case AsyncContext.ASYNC_QUERY_STRING:\n+                    return _query;\n+                case AsyncContext.ASYNC_MAPPING:\n+                    return _mapping;\n+                default:\n+                    return super.getAttribute(key);\n+            }\n+        }\n+\n+        @Override\n+        public Set<String> getAttributeNameSet()\n+        {\n+            HashSet<String> set = new HashSet<>();\n+            for (String name : _attributes.getAttributeNameSet())\n+            {\n+                if (!name.startsWith(__ASYNC_PREFIX))\n+                    set.add(name);\n+            }\n+\n+            set.add(AsyncContext.ASYNC_REQUEST_URI);\n+            set.add(AsyncContext.ASYNC_CONTEXT_PATH);\n+            set.add(AsyncContext.ASYNC_SERVLET_PATH);\n+            set.add(AsyncContext.ASYNC_PATH_INFO);\n+            set.add(AsyncContext.ASYNC_QUERY_STRING);\n+            set.add(AsyncContext.ASYNC_MAPPING);\n+            return set;\n+        }\n+\n+        @Override\n+        public void setAttribute(String key, Object value)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e713d8498d1eebad3a88eac5b71bae1f6343cc"}, "originalPosition": 151}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3Mzg3MjM4", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-407387238", "createdAt": "2020-05-07T11:36:23Z", "commit": {"oid": "08e713d8498d1eebad3a88eac5b71bae1f6343cc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMTozNjoyM1rOGR6eQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMTo0MjoxNFrOGR6pag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQzNjk5NA==", "bodyText": "Do we still need to get the pathSpec here?  If so, don't get it twice. get it once before the if.", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r421436994", "createdAt": "2020-05-07T11:36:23Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -452,17 +455,18 @@ public void doScope(String target, Request baseRequest, HttpServletRequest reque\n                 String servletPath = pathSpec.getPathMatch(target);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e713d8498d1eebad3a88eac5b71bae1f6343cc"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQzODA2OA==", "bodyText": "in the log debug below, maybe just log the mapping and make sure it has a good toString", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r421438068", "createdAt": "2020-05-07T11:38:38Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -452,17 +455,18 @@ public void doScope(String target, Request baseRequest, HttpServletRequest reque\n                 String servletPath = pathSpec.getPathMatch(target);\n                 String pathInfo = pathSpec.getPathInfo(target);\n \n+                HttpServletMapping httpServletMapping = mapping.getHttpServletMapping(servletPath);\n                 if (DispatcherType.INCLUDE.equals(type))\n                 {\n                     baseRequest.setAttribute(RequestDispatcher.INCLUDE_SERVLET_PATH, servletPath);\n                     baseRequest.setAttribute(RequestDispatcher.INCLUDE_PATH_INFO, pathInfo);\n-                    baseRequest.setAttribute(RequestDispatcher.INCLUDE_MAPPING, Request.getServletMapping(pathSpec, servletPath, servletHolder.getName()));\n+                    baseRequest.setAttribute(RequestDispatcher.INCLUDE_MAPPING, httpServletMapping);\n                 }\n                 else\n                 {\n-                    baseRequest.setPathSpec(pathSpec);\n                     baseRequest.setServletPath(servletPath);\n                     baseRequest.setPathInfo(pathInfo);\n+                    baseRequest.setHttpServletMapping(httpServletMapping);\n                 }\n             }\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e713d8498d1eebad3a88eac5b71bae1f6343cc"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQzODgxMA==", "bodyText": "It's not really necessary, but lets do the Attributes wrapping trick here as well!  Do we unset these attributes ever?  We should!", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r421438810", "createdAt": "2020-05-07T11:40:05Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -452,17 +455,18 @@ public void doScope(String target, Request baseRequest, HttpServletRequest reque\n                 String servletPath = pathSpec.getPathMatch(target);\n                 String pathInfo = pathSpec.getPathInfo(target);\n \n+                HttpServletMapping httpServletMapping = mapping.getHttpServletMapping(servletPath);\n                 if (DispatcherType.INCLUDE.equals(type))\n                 {\n                     baseRequest.setAttribute(RequestDispatcher.INCLUDE_SERVLET_PATH, servletPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e713d8498d1eebad3a88eac5b71bae1f6343cc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQzOTg1MA==", "bodyText": "Why is this a field and not just the same class?", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r421439850", "createdAt": "2020-05-07T11:42:14Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -1731,6 +1739,140 @@ void destroyListener(EventListener listener)\n             _contextHandler.destroyListener(listener);\n     }\n \n+    public static HttpServletMapping getServletMapping(PathSpec pathSpec, String servletPath, String servletName)\n+    {\n+        String matchValue;\n+        MappingMatch mappingMatch;\n+        String pattern = (pathSpec != null) ? pathSpec.getDeclaration() : \"\";\n+        servletName = (servletName == null ? \"\" : servletName);\n+\n+        if (pathSpec instanceof ServletPathSpec && servletPath != null)\n+        {\n+            switch (pathSpec.getGroup())\n+            {\n+                case ROOT:\n+                    mappingMatch = MappingMatch.CONTEXT_ROOT;\n+                    matchValue = \"\";\n+                    pattern = \"\";\n+                    break;\n+                case DEFAULT:\n+                    mappingMatch = MappingMatch.DEFAULT;\n+                    matchValue = \"\";\n+                    break;\n+                case EXACT:\n+                    mappingMatch = MappingMatch.EXACT;\n+                    matchValue = servletPath;\n+                    if (matchValue.startsWith(\"/\"))\n+                        matchValue = matchValue.substring(1);\n+                    break;\n+                case PREFIX_GLOB:\n+                    mappingMatch = MappingMatch.PATH;\n+                    matchValue = servletPath;\n+                    if (matchValue.startsWith(\"/\"))\n+                        matchValue = matchValue.substring(1);\n+                    break;\n+                case SUFFIX_GLOB:\n+                    mappingMatch = MappingMatch.EXTENSION;\n+                    int dot = servletPath.lastIndexOf('.');\n+                    matchValue = servletPath.substring(0, dot);\n+                    if (matchValue.startsWith(\"/\"))\n+                        matchValue = matchValue.substring(1);\n+                    pattern = pattern.startsWith(\"/\") ? pattern.substring(1) : pattern;\n+                    break;\n+                case MIDDLE_GLOB:\n+                    mappingMatch = null;\n+                    matchValue = \"\";\n+                    break;\n+                default:\n+                    throw new IllegalStateException();\n+            }\n+        }\n+        else\n+        {\n+            mappingMatch = null;\n+            matchValue = \"\";\n+        }\n+\n+        return new JettyHttpServletMapping(matchValue, pattern, servletName, mappingMatch);\n+    }\n+\n+    private static class MappedServlet\n+    {\n+        private final PathSpec _pathSpec;\n+        private final ServletHolder _servletHolder;\n+        private final HttpServletMapping _httpServletMapping;\n+\n+        public MappedServlet(PathSpec pathSpec, ServletHolder servletHolder)\n+        {\n+            _pathSpec = pathSpec;\n+            _servletHolder = servletHolder;\n+\n+            // Create the HttpServletMapping only once if possible.\n+            if (pathSpec instanceof ServletPathSpec)\n+            {\n+                switch (pathSpec.getGroup())\n+                {\n+                    case EXACT:\n+                    case DEFAULT:\n+                    case ROOT:\n+                        _httpServletMapping = getServletMapping(pathSpec, pathSpec.getDeclaration(), servletHolder.getName());\n+                        break;\n+                    default:\n+                        _httpServletMapping = null;\n+                        break;\n+                }\n+            }\n+            else\n+            {\n+                _httpServletMapping = null;\n+            }\n+        }\n+\n+        public PathSpec getPathSpec()\n+        {\n+            return _pathSpec;\n+        }\n+\n+        public ServletHolder getServletHolder()\n+        {\n+            return _servletHolder;\n+        }\n+\n+        public HttpServletMapping getMapping(String servletPath)\n+        {\n+            if (_httpServletMapping != null)\n+                return _httpServletMapping;\n+            return getServletMapping(_pathSpec, servletPath, _servletHolder.getName());\n+        }\n+    }\n+\n+    /**\n+     * Extends {@link MappedResource} for {@link ServletHolder} but can be\n+     * asked for a {@link HttpServletMapping} which may have been created\n+     * in advance for servlets which have EXACT mappings.\n+     */\n+    public static class MappedServletResource extends MappedResource<ServletHolder>\n+    {\n+        private final MappedServlet _mappedServlet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e713d8498d1eebad3a88eac5b71bae1f6343cc"}, "originalPosition": 242}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "739df312410751f4fb807445366058b542248388", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/739df312410751f4fb807445366058b542248388", "committedDate": "2020-05-08T04:14:39Z", "message": "Issue #4741 - Changes from review, revert async attribute wrapping\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzY4NjUw", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-409768650", "createdAt": "2020-05-12T07:28:28Z", "commit": {"oid": "739df312410751f4fb807445366058b542248388"}, "state": "DISMISSED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoyODoyOFrOGT5jrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzozODowNFrOGT54UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxOTE1MA==", "bodyText": "We probably could return a shared instance for this as well?", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r423519150", "createdAt": "2020-05-12T07:28:28Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -555,21 +559,23 @@ public void doHandle(String target, Request baseRequest, HttpServletRequest requ\n      * @param target Path within _context or servlet name\n      * @return MappedResource to the ServletHolder.  Named servlets have a null PathSpec\n      */\n-    public MappedResource<ServletHolder> getMappedServlet(String target)\n+    public MappedServlet getMappedServlet(String target)\n     {\n         if (target.startsWith(\"/\"))\n         {\n             if (_servletPathMap == null)\n                 return null;\n-            return _servletPathMap.getMatch(target);\n+\n+            MappedResource<MappedServlet> match = _servletPathMap.getMatch(target);\n+            if (match == null)\n+                return null;\n+            return match.getResource();\n         }\n \n-        if (_servletNameMap == null)\n-            return null;\n         ServletHolder holder = _servletNameMap.get(target);\n         if (holder == null)\n             return null;\n-        return new MappedResource<>(null, holder);\n+        return new MappedServlet(null, holder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "739df312410751f4fb807445366058b542248388"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyMDU5OA==", "bodyText": "if pathSpec is null then this is a named dispatch so we can probably create a _httpServletMapping here as well?", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r423520598", "createdAt": "2020-05-12T07:31:01Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -1731,6 +1739,109 @@ void destroyListener(EventListener listener)\n             _contextHandler.destroyListener(listener);\n     }\n \n+    public static HttpServletMapping getServletMapping(PathSpec pathSpec, String servletPath, String servletName)\n+    {\n+        String matchValue;\n+        MappingMatch mappingMatch;\n+        String pattern = (pathSpec != null) ? pathSpec.getDeclaration() : \"\";\n+        servletName = (servletName == null ? \"\" : servletName);\n+\n+        if (pathSpec instanceof ServletPathSpec && servletPath != null)\n+        {\n+            switch (pathSpec.getGroup())\n+            {\n+                case ROOT:\n+                    mappingMatch = MappingMatch.CONTEXT_ROOT;\n+                    matchValue = \"\";\n+                    pattern = \"\";\n+                    break;\n+                case DEFAULT:\n+                    mappingMatch = MappingMatch.DEFAULT;\n+                    matchValue = \"\";\n+                    break;\n+                case EXACT:\n+                    mappingMatch = MappingMatch.EXACT;\n+                    matchValue = servletPath;\n+                    if (matchValue.startsWith(\"/\"))\n+                        matchValue = matchValue.substring(1);\n+                    break;\n+                case PREFIX_GLOB:\n+                    mappingMatch = MappingMatch.PATH;\n+                    matchValue = servletPath;\n+                    if (matchValue.startsWith(\"/\"))\n+                        matchValue = matchValue.substring(1);\n+                    break;\n+                case SUFFIX_GLOB:\n+                    mappingMatch = MappingMatch.EXTENSION;\n+                    int dot = servletPath.lastIndexOf('.');\n+                    matchValue = servletPath.substring(0, dot);\n+                    if (matchValue.startsWith(\"/\"))\n+                        matchValue = matchValue.substring(1);\n+                    pattern = pattern.startsWith(\"/\") ? pattern.substring(1) : pattern;\n+                    break;\n+                case MIDDLE_GLOB:\n+                    mappingMatch = null;\n+                    matchValue = \"\";\n+                    break;\n+                default:\n+                    throw new IllegalStateException();\n+            }\n+        }\n+        else\n+        {\n+            mappingMatch = null;\n+            matchValue = \"\";\n+        }\n+\n+        return new JettyHttpServletMapping(matchValue, pattern, servletName, mappingMatch);\n+    }\n+\n+    /**\n+     * Extends {@link MappedResource} for {@link ServletHolder} but can be\n+     * asked for a {@link HttpServletMapping} which may have been created\n+     * in advance for servlets which have EXACT mappings.\n+     */\n+    public static class MappedServlet extends MappedResource<ServletHolder>\n+    {\n+        private final PathSpec _pathSpec;\n+        private final ServletHolder _servletHolder;\n+        private final HttpServletMapping _httpServletMapping;\n+\n+        MappedServlet(PathSpec pathSpec, ServletHolder servletHolder)\n+        {\n+            super(pathSpec, servletHolder);\n+            _pathSpec = pathSpec;\n+            _servletHolder = servletHolder;\n+\n+            // Create the HttpServletMapping only once if possible.\n+            if (pathSpec instanceof ServletPathSpec)\n+            {\n+                switch (pathSpec.getGroup())\n+                {\n+                    case EXACT:\n+                    case DEFAULT:\n+                    case ROOT:\n+                        _httpServletMapping = getServletMapping(pathSpec, pathSpec.getDeclaration(), servletHolder.getName());\n+                        break;\n+                    default:\n+                        _httpServletMapping = null;\n+                        break;\n+                }\n+            }\n+            else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "739df312410751f4fb807445366058b542248388"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyMTU3OQ==", "bodyText": "Also invert the if above and finish method with return null", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r423521579", "createdAt": "2020-05-12T07:32:47Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -555,21 +559,23 @@ public void doHandle(String target, Request baseRequest, HttpServletRequest requ\n      * @param target Path within _context or servlet name\n      * @return MappedResource to the ServletHolder.  Named servlets have a null PathSpec\n      */\n-    public MappedResource<ServletHolder> getMappedServlet(String target)\n+    public MappedServlet getMappedServlet(String target)\n     {\n         if (target.startsWith(\"/\"))\n         {\n             if (_servletPathMap == null)\n                 return null;\n-            return _servletPathMap.getMatch(target);\n+\n+            MappedResource<MappedServlet> match = _servletPathMap.getMatch(target);\n+            if (match == null)\n+                return null;\n+            return match.getResource();\n         }\n \n-        if (_servletNameMap == null)\n-            return null;\n         ServletHolder holder = _servletNameMap.get(target);\n         if (holder == null)\n             return null;\n-        return new MappedResource<>(null, holder);\n+        return new MappedServlet(null, holder);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxOTE1MA=="}, "originalCommit": {"oid": "739df312410751f4fb807445366058b542248388"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyMjMwMQ==", "bodyText": "rename s/mapping/mapped/ because a mapping is a different class.", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r423522301", "createdAt": "2020-05-12T07:34:10Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -434,41 +437,42 @@ public void doScope(String target, Request baseRequest, HttpServletRequest reque\n         // Get the base requests\n         final String old_servlet_path = baseRequest.getServletPath();\n         final String old_path_info = baseRequest.getPathInfo();\n-        final PathSpec old_path_spec = baseRequest.getPathSpec();\n+        final HttpServletMapping old_http_servlet_mapping = baseRequest.getHttpServletMapping();\n \n         DispatcherType type = baseRequest.getDispatcherType();\n \n         ServletHolder servletHolder = null;\n         UserIdentity.Scope oldScope = null;\n \n-        MappedResource<ServletHolder> mapping = getMappedServlet(target);\n+        MappedServlet mapping = getMappedServlet(target);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "739df312410751f4fb807445366058b542248388"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyNDQzMg==", "bodyText": "why are we still getting serlvetPath and pathInfo directly from the pathSpec.   I feel like we can do this more efficiently if we asked the mapping, as it will already know if it is an exact match etc.", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r423524432", "createdAt": "2020-05-12T07:38:04Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -434,41 +437,42 @@ public void doScope(String target, Request baseRequest, HttpServletRequest reque\n         // Get the base requests\n         final String old_servlet_path = baseRequest.getServletPath();\n         final String old_path_info = baseRequest.getPathInfo();\n-        final PathSpec old_path_spec = baseRequest.getPathSpec();\n+        final HttpServletMapping old_http_servlet_mapping = baseRequest.getHttpServletMapping();\n \n         DispatcherType type = baseRequest.getDispatcherType();\n \n         ServletHolder servletHolder = null;\n         UserIdentity.Scope oldScope = null;\n \n-        MappedResource<ServletHolder> mapping = getMappedServlet(target);\n+        MappedServlet mapping = getMappedServlet(target);\n         if (mapping != null)\n         {\n             servletHolder = mapping.getResource();\n \n-            if (mapping.getPathSpec() != null)\n+            PathSpec pathSpec = mapping.getPathSpec();\n+            if (pathSpec != null)\n             {\n-                PathSpec pathSpec = mapping.getPathSpec();\n                 String servletPath = pathSpec.getPathMatch(target);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "739df312410751f4fb807445366058b542248388"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzgxNTY2", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-409781566", "createdAt": "2020-05-12T07:46:46Z", "commit": {"oid": "739df312410751f4fb807445366058b542248388"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0Njo0NlrOGT6Lbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0Njo0NlrOGT6Lbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyOTMyNw==", "bodyText": "Just to double down on my comments.   The getHttpServletMapping internally does pretty much all the work that is done in getPathMatch and get PathInfo above.   It just needs to remember the results and return them in the JettyHttpServletMapping and we can do only 1 slice&dice rather than 3.", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r423529327", "createdAt": "2020-05-12T07:46:46Z", "author": {"login": "gregw"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -434,41 +437,42 @@ public void doScope(String target, Request baseRequest, HttpServletRequest reque\n         // Get the base requests\n         final String old_servlet_path = baseRequest.getServletPath();\n         final String old_path_info = baseRequest.getPathInfo();\n-        final PathSpec old_path_spec = baseRequest.getPathSpec();\n+        final HttpServletMapping old_http_servlet_mapping = baseRequest.getHttpServletMapping();\n \n         DispatcherType type = baseRequest.getDispatcherType();\n \n         ServletHolder servletHolder = null;\n         UserIdentity.Scope oldScope = null;\n \n-        MappedResource<ServletHolder> mapping = getMappedServlet(target);\n+        MappedServlet mapping = getMappedServlet(target);\n         if (mapping != null)\n         {\n             servletHolder = mapping.getResource();\n \n-            if (mapping.getPathSpec() != null)\n+            PathSpec pathSpec = mapping.getPathSpec();\n+            if (pathSpec != null)\n             {\n-                PathSpec pathSpec = mapping.getPathSpec();\n                 String servletPath = pathSpec.getPathMatch(target);\n                 String pathInfo = pathSpec.getPathInfo(target);\n \n+                HttpServletMapping httpServletMapping = mapping.getHttpServletMapping(servletPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "739df312410751f4fb807445366058b542248388"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b49c48f415a7aa413286c0782c6960ec47b659fe", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/b49c48f415a7aa413286c0782c6960ec47b659fe", "committedDate": "2020-05-13T08:04:20Z", "message": "Issue #4741 - Changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a34a053b86292c861813bb78986789925b81dfcd", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/a34a053b86292c861813bb78986789925b81dfcd", "committedDate": "2020-05-13T11:16:44Z", "message": "Issue #4741 Async ServletMapping\n\nGreatly increased the scope of this PR by combining the servletPath and\npathInfo into the ServletPathMapping class that implements the\nHttpServletPathMapping interface.    This allows us to greatly simplify\nthe matching of servlets and reduce the number of times we need to\nactually to the match per request.\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21c0f065a3bf0d4a97cf40fb715fbe9f282e83d6", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/21c0f065a3bf0d4a97cf40fb715fbe9f282e83d6", "committedDate": "2020-05-13T14:28:52Z", "message": "Issue #4741 Async ServletMapping\n\nFixed problems with previous commit\nmore cleanup of attributes in dispatcher.\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62c067bfe828407f4992f8820bfa5a064e981981", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/62c067bfe828407f4992f8820bfa5a064e981981", "committedDate": "2020-05-13T15:16:10Z", "message": "Issue #4741 Async ServletMapping\n\nMore code cleanups\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fe7fbca8ad5cc4ddf593c6d31f4fe63e7db9404", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/4fe7fbca8ad5cc4ddf593c6d31f4fe63e7db9404", "committedDate": "2020-05-14T08:22:13Z", "message": "Issue #4741 Async ServletMapping\n\nNamed dispatch cleanup\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7485f97af618661c6938575fcdfbf15f7101c14c", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/7485f97af618661c6938575fcdfbf15f7101c14c", "committedDate": "2020-05-14T09:13:18Z", "message": "Merge branch 'jetty-10.0.x' into jetty-10.0.x-4741-getServletMappingAsyncDispatch\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f720e1f4043212e7c85c7a2d7cd2d4999a38644", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/8f720e1f4043212e7c85c7a2d7cd2d4999a38644", "committedDate": "2020-05-14T11:32:24Z", "message": "Issue #4741 Async ServletMapping\n\nmisc cleanup\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/727b88cd2ed612824608889c02998b08050cb64f", "committedDate": "2020-05-17T16:41:33Z", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-4741-getServletMappingAsyncDispatch"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDQ4Mjk0", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-413448294", "createdAt": "2020-05-18T10:01:51Z", "commit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDowMTo1MlrOGWwNSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDowMTo1MlrOGWwNSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMTY4OQ==", "bodyText": "Need a comment in here about the purpose of this class, and particularly how it is used to model both mapping via a path, but ALSO mapping via just a name. In fact, I don't like the name of this class containing the word \"path\" if path has nothing to do with it.", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r426511689", "createdAt": "2020-05-18T10:01:52Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ServletPathMapping.java", "diffHunk": "@@ -0,0 +1,148 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.server;\n+\n+import javax.servlet.http.HttpServletMapping;\n+import javax.servlet.http.MappingMatch;\n+\n+import org.eclipse.jetty.http.pathmap.PathSpec;\n+import org.eclipse.jetty.http.pathmap.ServletPathSpec;\n+\n+public class ServletPathMapping implements HttpServletMapping\n+{\n+    private final MappingMatch _mappingMatch;\n+    private final String _matchValue;\n+    private final String _pattern;\n+    private final String _servletName;\n+    private final String _servletPath;\n+    private final String _pathInfo;\n+\n+    public ServletPathMapping(PathSpec pathSpec, String servletName, String pathInContext)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDUwMDk2", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-413450096", "createdAt": "2020-05-18T10:04:22Z", "commit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDowNDoyMlrOGWwTIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDowNDoyMlrOGWwTIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMzE4NA==", "bodyText": "See my comment on the ServletPathMapping class: this comment at like 1722 is the only clue that the ServletPathMapping class can be used as a name-match only .", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r426513184", "createdAt": "2020-05-18T10:04:22Z", "author": {"login": "janbartel"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -1731,6 +1689,71 @@ void destroyListener(EventListener listener)\n             _contextHandler.destroyListener(listener);\n     }\n \n+    /**\n+     * A mapping of a servlet\n+     */\n+    public static class MappedServlet\n+    {\n+        private final PathSpec _pathSpec;\n+        private final ServletHolder _servletHolder;\n+        private final ServletPathMapping _servletPathMapping;\n+\n+        MappedServlet(PathSpec pathSpec, ServletHolder servletHolder)\n+        {\n+            _pathSpec = pathSpec;\n+            _servletHolder = servletHolder;\n+\n+            // Create the HttpServletMapping only once if possible.\n+            if (pathSpec instanceof ServletPathSpec)\n+            {\n+                switch (pathSpec.getGroup())\n+                {\n+                    case EXACT:\n+                    case ROOT:\n+                        _servletPathMapping = new ServletPathMapping(_pathSpec, _servletHolder.getName(), _pathSpec.getPrefix());\n+                        break;\n+                    default:\n+                        _servletPathMapping = null;\n+                        break;\n+                }\n+            }\n+            else if (_pathSpec == null)\n+            {\n+                // Named servlet mapping", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "originalPosition": 425}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTAyMTUw", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-413502150", "createdAt": "2020-05-18T11:23:44Z", "commit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMToyMzo0NFrOGWy1Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMToyMzo0NFrOGWy1Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1NDcxNA==", "bodyText": "Seems the intention is to make this immutable. Perhaps we should throw IllegalStateException if setAttribute() is called? That way we would find out where in the code it is being (incorrectly) called, rather than silently failing and being ignored.\nFurther thoughts: all of the subclasses of Attributes.Wrapper are immutable, see also ProxyAttributes and SslAttributes. Should the Attributes interface be changed to remove setAttribute() and clearAttributes() methods altogether?", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r426554714", "createdAt": "2020-05-18T11:23:44Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncAttributes.java", "diffHunk": "@@ -94,54 +83,15 @@ public void setAttribute(String key, Object value)\n         switch (key)\n         {\n             case AsyncContext.ASYNC_REQUEST_URI:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTEzODg4", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-413513888", "createdAt": "2020-05-18T11:42:23Z", "commit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTo0MjoyM1rOGWzaAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTo0MjoyM1rOGWzaAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2NDA5OQ==", "bodyText": "Different behaviour here than ForwardAttribute and IncludeAttribute:  both of those do a remove if the value is null, but see comment above about removing setAttribute() entirely.", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r426564099", "createdAt": "2020-05-18T11:42:23Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncAttributes.java", "diffHunk": "@@ -94,54 +83,15 @@ public void setAttribute(String key, Object value)\n         switch (key)\n         {\n             case AsyncContext.ASYNC_REQUEST_URI:\n-                _requestURI = (String)value;\n-                break;\n             case AsyncContext.ASYNC_CONTEXT_PATH:\n-                _contextPath = (String)value;\n-                break;\n             case AsyncContext.ASYNC_SERVLET_PATH:\n-                _servletPath = (String)value;\n-                break;\n             case AsyncContext.ASYNC_PATH_INFO:\n-                _pathInfo = (String)value;\n-                break;\n             case AsyncContext.ASYNC_QUERY_STRING:\n-                _queryString = (String)value;\n-                break;\n             case AsyncContext.ASYNC_MAPPING:\n-                _httpServletMapping = (HttpServletMapping)value;\n                 break;\n             default:\n                 super.setAttribute(key, value);\n                 break;\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cff3ef09985c7d24cfb48b84a4019a7f60c7127", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/8cff3ef09985c7d24cfb48b84a4019a7f60c7127", "committedDate": "2020-05-18T11:56:57Z", "message": "Issue #4741 Async HttpServletMapping\n\nAdded tests for named dispatchers\nDo not use ServletPathMapping for named dispatch\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "459651b1cb91262904566a5aab04e081824cf80e", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/459651b1cb91262904566a5aab04e081824cf80e", "committedDate": "2020-05-18T12:02:23Z", "message": "Issue #4741 Async HttpServletMapping\n\nrenamed confusing isDefault method on ServletMapping\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1aeacc88ab5b06a8e53bfa319139083f0f6b803f", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/1aeacc88ab5b06a8e53bfa319139083f0f6b803f", "committedDate": "2020-05-18T12:18:12Z", "message": "Issue #4741 Async HttpServletMapping\n\nsimplified setAttribute\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTYwODQw", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-413560840", "createdAt": "2020-05-18T12:49:29Z", "commit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjo0OToyOVrOGW1oSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjo0OToyOVrOGW1oSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwMDUyMA==", "bodyText": "This whole section really needs some comments - the pattern of handling the AsyncAttributes appears to be very different to handling the Forward/IncludeAttributes that we should explain why.", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r426600520", "createdAt": "2020-05-18T12:49:29Z", "author": {"login": "janbartel"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -1925,50 +1842,53 @@ public void setAsyncAttributes()\n         if (getAttribute(AsyncContext.ASYNC_REQUEST_URI) != null)\n             return;\n \n-        String requestURI;\n-        String contextPath;\n-        String servletPath;\n-        String pathInfo;\n-        String queryString;\n-        HttpServletMapping httpServletMapping;\n-\n-        // Have we been forwarded before?\n-        requestURI = (String)getAttribute(RequestDispatcher.FORWARD_REQUEST_URI);\n-        if (requestURI != null)\n-        {\n-            contextPath = (String)getAttribute(RequestDispatcher.FORWARD_CONTEXT_PATH);\n-            servletPath = (String)getAttribute(RequestDispatcher.FORWARD_SERVLET_PATH);\n-            pathInfo = (String)getAttribute(RequestDispatcher.FORWARD_PATH_INFO);\n-            queryString = (String)getAttribute(RequestDispatcher.FORWARD_QUERY_STRING);\n-            httpServletMapping = (HttpServletMapping)getAttribute(RequestDispatcher.FORWARD_MAPPING);\n-        }\n-        else\n-        {\n-            requestURI = getRequestURI();\n-            contextPath = getContextPath();\n-            servletPath = getServletPath();\n-            pathInfo = getPathInfo();\n-            queryString = getQueryString();\n-            httpServletMapping = getHttpServletMapping();\n-        }\n-\n         // Unwrap the _attributes to get the base attributes instance.\n         Attributes baseAttributes;\n         if (_attributes == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "originalPosition": 153}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTcwMzc4", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-413570378", "createdAt": "2020-05-18T13:01:12Z", "commit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzowMToxMlrOGW2F-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzowMToxMlrOGW2F-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwODEyMQ==", "bodyText": "Return is wrong: should be returning MappedServlet", "url": "https://github.com/eclipse/jetty.project/pull/4851#discussion_r426608121", "createdAt": "2020-05-18T13:01:12Z", "author": {"login": "janbartel"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -555,29 +523,28 @@ public void doHandle(String target, Request baseRequest, HttpServletRequest requ\n      * @param target Path within _context or servlet name\n      * @return MappedResource to the ServletHolder.  Named servlets have a null PathSpec", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "originalPosition": 182}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf0a795475d78d27743bf331b5134a85515c45e7", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/cf0a795475d78d27743bf331b5134a85515c45e7", "committedDate": "2020-05-18T13:02:24Z", "message": "Issue #4741 Async HttpServletMapping\n\nadded javadoc about AsyncAttributes\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTkxMzQ3", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-413591347", "createdAt": "2020-05-18T13:25:57Z", "commit": {"oid": "727b88cd2ed612824608889c02998b08050cb64f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "080d35e52990d6a8d8877da26db2fb819b225f12", "author": {"user": {"login": "gregw", "name": "Greg Wilkins"}}, "url": "https://github.com/eclipse/jetty.project/commit/080d35e52990d6a8d8877da26db2fb819b225f12", "committedDate": "2020-05-19T10:33:34Z", "message": "Issue #4741 Async HttpServletMapping\n\nFixed javadoc\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzI3MTAx", "url": "https://github.com/eclipse/jetty.project/pull/4851#pullrequestreview-415327101", "createdAt": "2020-05-20T13:22:26Z", "commit": {"oid": "080d35e52990d6a8d8877da26db2fb819b225f12"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 380, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}