{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5ODIyMjE4", "number": 4458, "title": "Issue #4432 Implement get/setSessionTimeout for ServletContext", "bodyText": "Implement new servlet 4.0 methods ServletContext get/setSessionTimeout.\nCloses #4432", "createdAt": "2020-01-07T04:50:43Z", "url": "https://github.com/eclipse/jetty.project/pull/4458", "merged": true, "mergeCommit": {"oid": "45b3a34170f9321f3b1bee8c82e2ce7edf1b33cd"}, "closed": true, "closedAt": "2020-01-20T16:26:56Z", "author": {"login": "janbartel"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb35RnyAH2gAyMzU5ODIyMjE4OjkzMjUxOTNmZTM3YWFkMGNlZDU4ZjA4M2UwZWJjOTNkYzhlODU1MTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8N6LlAFqTM0NTM2NzE3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9325193fe37aad0ced58f083e0ebc93dc8e85515", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/9325193fe37aad0ced58f083e0ebc93dc8e85515", "committedDate": "2020-01-07T04:44:36Z", "message": "Issue #4432 Implement get/setSessionTimeout for ServletContext\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTA1Mzgz", "url": "https://github.com/eclipse/jetty.project/pull/4458#pullrequestreview-339105383", "createdAt": "2020-01-07T09:01:59Z", "commit": {"oid": "9325193fe37aad0ced58f083e0ebc93dc8e85515"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwOTowMTo1OVrOFazWZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwOTowMTo1OVrOFazWZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY0ODYxMw==", "bodyText": "Just a thought that if I call setSessionTimeout(-1) and then getSessionTimeout() I get back 0 even if I set -1. Is that ok?", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r363648613", "createdAt": "2020-01-07T09:01:59Z", "author": {"login": "sbordet"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletContextHandler.java", "diffHunk": "@@ -1382,6 +1382,36 @@ public void setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingMode\n                 _sessionHandler.setSessionTrackingModes(sessionTrackingModes);\n         }\n \n+        @Override\n+        public int getSessionTimeout()\n+        {\n+            if (!isStarting())\n+                throw new IllegalStateException();\n+            if (!_enabled)\n+                throw new UnsupportedOperationException();\n+\n+            int timeout = -1;\n+            if (_sessionHandler != null)\n+            {\n+                int maxInactive = _sessionHandler.getMaxInactiveInterval();\n+                timeout = (maxInactive < 0 ? 0 : maxInactive / 60);\n+            }\n+\n+            return timeout;\n+        }\n+\n+        @Override\n+        public void setSessionTimeout(int sessionTimeout)\n+        {\n+            if (!isStarting())\n+                throw new IllegalStateException();\n+            if (!_enabled)\n+                throw new UnsupportedOperationException();\n+\n+            if (_sessionHandler != null)\n+                _sessionHandler.setMaxInactiveInterval((sessionTimeout < 0 ? 0 : sessionTimeout * 60));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9325193fe37aad0ced58f083e0ebc93dc8e85515"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f02d546f83de914c611feb971cb595ebb122d33d", "author": {"user": {"login": "joakime", "name": "Joakim Erdfelt"}}, "url": "https://github.com/eclipse/jetty.project/commit/f02d546f83de914c611feb971cb595ebb122d33d", "committedDate": "2020-01-13T20:43:53Z", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-4432-set-session-timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b500406ddb6258db54e2e5f545c92b5849943bb", "author": {"user": {"login": "joakime", "name": "Joakim Erdfelt"}}, "url": "https://github.com/eclipse/jetty.project/commit/7b500406ddb6258db54e2e5f545c92b5849943bb", "committedDate": "2020-01-13T21:41:57Z", "message": "Fixing checkstyle violation\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1cbacca8061323e78c86e81833b450d9cf2eade", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/b1cbacca8061323e78c86e81833b450d9cf2eade", "committedDate": "2020-01-16T13:36:24Z", "message": "Issue #4432 Session timeout values\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ed6d52c61df452988225c8fb198354d51f6a6bf", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/9ed6d52c61df452988225c8fb198354d51f6a6bf", "committedDate": "2020-01-16T14:21:36Z", "message": "Issue #4432 fix javadoc\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6a4c0092f96f90e40b53cb08b7c2e2618990bd7", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/a6a4c0092f96f90e40b53cb08b7c2e2618990bd7", "committedDate": "2020-01-20T08:27:13Z", "message": "Issue #4432 fix javadoc\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MTUyNDgx", "url": "https://github.com/eclipse/jetty.project/pull/4458#pullrequestreview-345152481", "createdAt": "2020-01-20T08:53:29Z", "commit": {"oid": "a6a4c0092f96f90e40b53cb08b7c2e2618990bd7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwODo1MzoyOVrOFfXAKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOToyMDo1OVrOFfXw2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyNzA1MA==", "bodyText": "Move to ServletContextHandler and make it private.", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368427050", "createdAt": "2020-01-20T08:53:29Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/SessionHandler.java", "diffHunk": "@@ -160,6 +161,30 @@ public Enumeration getIds()\n         }\n     };\n \n+    /**\n+     * Session timeout values are specified in web.xml and\n+     * by ServletContext.setSessionTimeout in minutes, expressed\n+     * as an integer, but treated as seconds by the HttpSession\n+     * also as an integer. Thus, there is a floor and ceiling to\n+     * the session timeout values. This method enforces that\n+     * floor and ceiling. Note that all values &lt;&equals; 0\n+     * are effectively equivalent, meaning that the session will\n+     * never expire.\n+     *\n+     * @param minutes the number of minutes before an idle session expires\n+     * @return the number of minutes, limited by the max and min value\n+     */\n+    public static int clipSessionTimeout(int minutes)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a4c0092f96f90e40b53cb08b7c2e2618990bd7"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQzMzA4OQ==", "bodyText": "These constants should not be in this class, as they are only ever used by ServletContextHandler, so they should be moved there and made private.", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368433089", "createdAt": "2020-01-20T09:07:25Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/SessionHandler.java", "diffHunk": "@@ -136,11 +136,12 @@\n \n     /**\n      * Web.xml session-timeout is set in minutes, but is stored as an int in seconds by HttpSession and\n-     * the sessionmanager. Thus MAX_INT is the max number of seconds that can be set, and MAX_INT/60 is the\n+     * the sessionmanager. Thus MAX_INT is the max number of seconds that can be set so MAX_INT/60 is the\n      * max number of minutes that you can set.\n      */\n-    public static final java.math.BigDecimal MAX_INACTIVE_MINUTES = new java.math.BigDecimal(Integer.MAX_VALUE / 60);\n-\n+    public static final int MAX_SESSION_TIMEOUT_MINS = Integer.MAX_VALUE / 60;\n+    public static final int MIN_SESSION_TIMEOUT_MINS = Integer.MIN_VALUE / 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a4c0092f96f90e40b53cb08b7c2e2618990bd7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQzNDc1OQ==", "bodyText": "Fix typos: not -> nor, or -> nor.", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368434759", "createdAt": "2020-01-20T09:11:05Z", "author": {"login": "sbordet"}, "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/ServletContextHandlerTest.java", "diffHunk": "@@ -403,6 +468,28 @@ public void destroyServer() throws Exception\n         _server.stop();\n         _server.join();\n     }\n+    \n+    @Test\n+    public void testGetSetSessionTimeout() throws Exception\n+    {\n+        ContextHandlerCollection contexts = new ContextHandlerCollection();\n+        _server.setHandler(contexts);\n+\n+        Integer timeout = Integer.valueOf(100);\n+        ServletContextHandler root = new ServletContextHandler(contexts, \"/\", ServletContextHandler.SESSIONS);\n+        root.addBean(new MySCIStarter(root.getServletContext(), new MySCI(true, timeout.intValue())), true);\n+        _server.start();\n+        \n+        //test can set session timeout from ServletContainerInitializer\n+        assertTrue((Boolean)root.getServletContext().getAttribute(\"MYSCI.setSessionTimeout\"));\n+        //test can get session timeout from ServletContainerInitializer\n+        assertEquals(timeout, (Integer)root.getServletContext().getAttribute(\"MYSCI.getSessionTimeout\"));\n+        assertNull(root.getAttribute(\"MYSCI.sessionTimeoutFailure\"));\n+        //test can't get session timeout from ContextListener not from annotation or web.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a4c0092f96f90e40b53cb08b7c2e2618990bd7"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQzNDg1MQ==", "bodyText": "Ditto re typos.", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368434851", "createdAt": "2020-01-20T09:11:15Z", "author": {"login": "sbordet"}, "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/ServletContextHandlerTest.java", "diffHunk": "@@ -403,6 +468,28 @@ public void destroyServer() throws Exception\n         _server.stop();\n         _server.join();\n     }\n+    \n+    @Test\n+    public void testGetSetSessionTimeout() throws Exception\n+    {\n+        ContextHandlerCollection contexts = new ContextHandlerCollection();\n+        _server.setHandler(contexts);\n+\n+        Integer timeout = Integer.valueOf(100);\n+        ServletContextHandler root = new ServletContextHandler(contexts, \"/\", ServletContextHandler.SESSIONS);\n+        root.addBean(new MySCIStarter(root.getServletContext(), new MySCI(true, timeout.intValue())), true);\n+        _server.start();\n+        \n+        //test can set session timeout from ServletContainerInitializer\n+        assertTrue((Boolean)root.getServletContext().getAttribute(\"MYSCI.setSessionTimeout\"));\n+        //test can get session timeout from ServletContainerInitializer\n+        assertEquals(timeout, (Integer)root.getServletContext().getAttribute(\"MYSCI.getSessionTimeout\"));\n+        assertNull(root.getAttribute(\"MYSCI.sessionTimeoutFailure\"));\n+        //test can't get session timeout from ContextListener not from annotation or web.xml\n+        assertTrue((Boolean)root.getServletContext().getAttribute(\"MyContextListener.getSessionTimeout\"));\n+        //test can't set session timeout from ContextListener not from annotation or web.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a4c0092f96f90e40b53cb08b7c2e2618990bd7"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQzODQ0MA==", "bodyText": "No need to call a method in SessionHandler when it can be in this class.\nThis will keep the logic of dividing by 60 and multiplying by 60 in the same class.", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368438440", "createdAt": "2020-01-20T09:18:41Z", "author": {"login": "sbordet"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletContextHandler.java", "diffHunk": "@@ -1382,6 +1383,41 @@ public void setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingMode\n                 _sessionHandler.setSessionTrackingModes(sessionTrackingModes);\n         }\n \n+        @Override\n+        public int getSessionTimeout()\n+        {\n+            if (!isStarting())\n+                throw new IllegalStateException();\n+            if (!_enabled)\n+                throw new UnsupportedOperationException();\n+\n+            int timeout = -1;\n+            if (_sessionHandler != null)\n+            {\n+                int maxInactive = _sessionHandler.getMaxInactiveInterval();\n+                timeout = maxInactive / 60;\n+            }\n+\n+            return timeout;\n+        }\n+\n+        @Override\n+        public void setSessionTimeout(int sessionTimeout)\n+        {\n+            if (!isStarting())\n+                throw new IllegalStateException();\n+            if (!_enabled)\n+                throw new UnsupportedOperationException();\n+\n+            if (_sessionHandler != null)\n+            {\n+                //sessionTimeout is in mins, but session and SessionHandler use seconds,\n+                //both represented as an int, thus there is a floor and ceiling value\n+                //for session timeout minutes.\n+                _sessionHandler.setMaxInactiveInterval(SessionHandler.clipSessionTimeout(sessionTimeout) * 60); //in seconds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a4c0092f96f90e40b53cb08b7c2e2618990bd7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQzOTUxMg==", "bodyText": "I think this should just be context.setSessionTimeout(val) so that all the logic for checking the value is in ServletContextHandler and there is no need to expose constants and methods and duplicate logic.", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368439512", "createdAt": "2020-01-20T09:20:59Z", "author": {"login": "sbordet"}, "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/StandardDescriptorProcessor.java", "diffHunk": "@@ -650,11 +651,10 @@ public void visitSessionConfig(WebAppContext context, Descriptor descriptor, Xml\n         XmlParser.Node tNode = node.get(\"session-timeout\");\n         if (tNode != null)\n         {\n-            java.math.BigDecimal asDecimal = new java.math.BigDecimal(tNode.toString(false, true));\n-            if (asDecimal.compareTo(org.eclipse.jetty.server.session.SessionHandler.MAX_INACTIVE_MINUTES) > 0)\n-                throw new IllegalStateException(\"Max session-timeout in minutes is \" + org.eclipse.jetty.server.session.SessionHandler.MAX_INACTIVE_MINUTES);\n-\n-            context.getSessionHandler().setMaxInactiveInterval(asDecimal.intValueExact() * 60);\n+            int val = Integer.parseInt(tNode.toString(false, true));\n+            if (val > SessionHandler.MAX_SESSION_TIMEOUT_MINS)\n+                throw new IllegalStateException(\"Max session-timeout in minutes is \" + SessionHandler.MAX_SESSION_TIMEOUT_MINS);\n+            context.getSessionHandler().setMaxInactiveInterval(SessionHandler.clipSessionTimeout(val) * 60);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a4c0092f96f90e40b53cb08b7c2e2618990bd7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d102a13b90c55dd6135da487b18caf8546ed7a88", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/d102a13b90c55dd6135da487b18caf8546ed7a88", "committedDate": "2020-01-20T09:55:52Z", "message": "Issue #4432 Changes after review\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MjAwODIy", "url": "https://github.com/eclipse/jetty.project/pull/4458#pullrequestreview-345200822", "createdAt": "2020-01-20T10:11:15Z", "commit": {"oid": "d102a13b90c55dd6135da487b18caf8546ed7a88"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMDoxMToxNVrOFfZSoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMDoxMzoxM1rOFfZWlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2NDU0NA==", "bodyText": "Now multiplying by 60 is in this class, but dividing by 60 is in another class.", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368464544", "createdAt": "2020-01-20T10:11:15Z", "author": {"login": "sbordet"}, "path": "jetty-server/src/main/java/org/eclipse/jetty/server/session/SessionHandler.java", "diffHunk": "@@ -851,6 +876,18 @@ public void setMaxInactiveInterval(int seconds)\n                 LOG.debug(\"SessionManager default maxInactiveInterval={}\", _dftMaxIdleSecs);\n         }\n     }\n+    \n+    /**\n+     * Set the max period of inactivity expressed as minutes.\n+     * The minutes are converted to seconds, and their min and\n+     * max values constrained.\n+     * \n+     * @param mins the number of minutes.\n+     */\n+    public void setMaxInactiveIntervalMins(int mins)\n+    {\n+        setMaxInactiveInterval(clipSessionTimeoutMins(mins) * 60);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d102a13b90c55dd6135da487b18caf8546ed7a88"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2NDc4MA==", "bodyText": "Division by 60 here, but missing multiplication in the setter?\nThey should be in the same class.", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368464780", "createdAt": "2020-01-20T10:11:44Z", "author": {"login": "sbordet"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletContextHandler.java", "diffHunk": "@@ -1382,6 +1383,38 @@ public void setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingMode\n                 _sessionHandler.setSessionTrackingModes(sessionTrackingModes);\n         }\n \n+        @Override\n+        public int getSessionTimeout()\n+        {\n+            if (!isStarting())\n+                throw new IllegalStateException();\n+            if (!_enabled)\n+                throw new UnsupportedOperationException();\n+\n+            int timeout = -1;\n+            if (_sessionHandler != null)\n+            {\n+                int maxInactive = _sessionHandler.getMaxInactiveInterval();\n+                timeout = maxInactive / 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d102a13b90c55dd6135da487b18caf8546ed7a88"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2NTU1Ng==", "bodyText": "I would prefer calling a method on context here, rather than on SessionHandler.\nI'm sure people can misconfigure things in a way that context.getSessionHandler() return null.", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368465556", "createdAt": "2020-01-20T10:13:13Z", "author": {"login": "sbordet"}, "path": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/StandardDescriptorProcessor.java", "diffHunk": "@@ -650,11 +651,10 @@ public void visitSessionConfig(WebAppContext context, Descriptor descriptor, Xml\n         XmlParser.Node tNode = node.get(\"session-timeout\");\n         if (tNode != null)\n         {\n-            java.math.BigDecimal asDecimal = new java.math.BigDecimal(tNode.toString(false, true));\n-            if (asDecimal.compareTo(org.eclipse.jetty.server.session.SessionHandler.MAX_INACTIVE_MINUTES) > 0)\n-                throw new IllegalStateException(\"Max session-timeout in minutes is \" + org.eclipse.jetty.server.session.SessionHandler.MAX_INACTIVE_MINUTES);\n-\n-            context.getSessionHandler().setMaxInactiveInterval(asDecimal.intValueExact() * 60);\n+            int val = Integer.parseInt(tNode.toString(false, true));\n+            if (val > SessionHandler.MAX_SESSION_TIMEOUT_MINS)\n+                throw new IllegalStateException(\"Max session-timeout in minutes is \" + SessionHandler.MAX_SESSION_TIMEOUT_MINS);\n+            context.getSessionHandler().setMaxInactiveIntervalMins(val);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d102a13b90c55dd6135da487b18caf8546ed7a88"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c9d5a02163cb99d07f8c8b2aaf62ef70e83b59", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/c3c9d5a02163cb99d07f8c8b2aaf62ef70e83b59", "committedDate": "2020-01-20T10:25:30Z", "message": "Issue #4432 Update after review\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a88d17964550956e1c01e2f63d3c64ff89539de", "author": {"user": {"login": "janbartel", "name": "Jan Bartel"}}, "url": "https://github.com/eclipse/jetty.project/commit/0a88d17964550956e1c01e2f63d3c64ff89539de", "committedDate": "2020-01-20T12:08:42Z", "message": "Issue #4432 changes after review\n\nSigned-off-by: Jan Bartel <janb@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MjcxNTYx", "url": "https://github.com/eclipse/jetty.project/pull/4458#pullrequestreview-345271561", "createdAt": "2020-01-20T12:21:16Z", "commit": {"oid": "0a88d17964550956e1c01e2f63d3c64ff89539de"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMjoyMToxN1rOFfcpnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMjoyMToxN1rOFfcpnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUxOTU4MQ==", "bodyText": "If there is no SessionHandler this returns 0, and also if SessionHandler is configured with a value that is less than 60 seconds, either positive or negative.\nIf that's ok by the spec, I'm fine.\nIf you need to retain the fact that the value is negative, then perhaps this is enough?\nreturn timeout < 0 ? -1 : (int)TimeUnit.SECONDS.toMinutes(timeout);", "url": "https://github.com/eclipse/jetty.project/pull/4458#discussion_r368519581", "createdAt": "2020-01-20T12:21:17Z", "author": {"login": "sbordet"}, "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletContextHandler.java", "diffHunk": "@@ -1382,6 +1384,42 @@ public void setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingMode\n                 _sessionHandler.setSessionTrackingModes(sessionTrackingModes);\n         }\n \n+        @Override\n+        public int getSessionTimeout()\n+        {\n+            if (!isStarting())\n+                throw new IllegalStateException();\n+            if (!_enabled)\n+                throw new UnsupportedOperationException();\n+\n+            int timeout = -1;\n+            if (_sessionHandler != null)\n+            {\n+                timeout = _sessionHandler.getMaxInactiveInterval();\n+            }\n+\n+            return (int)TimeUnit.SECONDS.toMinutes(timeout);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a88d17964550956e1c01e2f63d3c64ff89539de"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MzY3MTc5", "url": "https://github.com/eclipse/jetty.project/pull/4458#pullrequestreview-345367179", "createdAt": "2020-01-20T15:02:42Z", "commit": {"oid": "0a88d17964550956e1c01e2f63d3c64ff89539de"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 537, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}