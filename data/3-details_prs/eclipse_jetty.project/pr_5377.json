{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2MDQ4NDIy", "number": 5377, "title": "Issue #5368 - ensure onMessage exits before next frame is read", "bodyText": "Issue #5368\nWhen reading a websocket message with a Reader or InputStream ensure that the onMessage() method has exited before resuming to read and parse websocket frames. Otherwise a call to the MessageInputStream.read() or MessageInputStream.close() could parse the next websocket frame which could trigger a second nested call to onMessage() in the same thread.", "createdAt": "2020-10-01T07:53:56Z", "url": "https://github.com/eclipse/jetty.project/pull/5377", "merged": true, "mergeCommit": {"oid": "f99b4ca80cafd69090c37e02a59da505a93c7152"}, "closed": true, "closedAt": "2020-10-16T04:51:55Z", "author": {"login": "lachlan-roberts"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOKvP5AH2gAyNDk2MDQ4NDIyOjk0MWZmY2VhZDc2NzhhNzRmYjNmZWIxNzVjZGQ4NTdiMWQ5N2VkNDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdS3a5pAFqTUwOTc0MTAzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "941ffcead7678a74fb3feb175cdd857b1d97ed43", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/941ffcead7678a74fb3feb175cdd857b1d97ed43", "committedDate": "2020-10-01T05:42:50Z", "message": "Issue #5368 - ensure onMessage exits before next frame is read\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c94ef5848abb1778a32161e5c085a5b195baf01", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/6c94ef5848abb1778a32161e5c085a5b195baf01", "committedDate": "2020-10-06T06:43:58Z", "message": "Issue #5368 - warn if MessageInputStream closed without fully consuming\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7df0dfa7c2c8210514f83688d84a9cae2ecc3cf2", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/7df0dfa7c2c8210514f83688d84a9cae2ecc3cf2", "committedDate": "2020-10-07T04:41:51Z", "message": "warn if did not read until EOF once per MessageInputStream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa1299912d39a9752217e57560a3076d4999df2d", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/aa1299912d39a9752217e57560a3076d4999df2d", "committedDate": "2020-10-07T05:32:06Z", "message": "Issue #5368 - when resuming always call onFillable from newThread.\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/09947681fe37da9aa2c8d9b943c608720bcbbaa9", "committedDate": "2020-10-07T08:48:13Z", "message": "allow MessageInputStream to read multiple bytes at a time\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2ODQyMDUw", "url": "https://github.com/eclipse/jetty.project/pull/5377#pullrequestreview-506842050", "createdAt": "2020-10-12T18:44:30Z", "commit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxODo0NDozMFrOHgJgXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxODo1OToyNlrOHgJ5oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3MjIyMw==", "bodyText": "Wouldn't this return leave a MessageInputStream laying around in a different thread?", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503472223", "createdAt": "2020-10-12T18:44:30Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/events/JettyAnnotatedEventDriver.java", "diffHunk": "@@ -115,11 +114,11 @@ else if (events.onBinary.isStreaming())\n                     }\n                     catch (Throwable t)\n                     {\n-                        // dispatched calls need to be reported\n                         session.close(t);\n+                        return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3MjQxNg==", "bodyText": "Wouldn't this return leave a MessageReader laying around in a different thread?", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503472416", "createdAt": "2020-10-12T18:44:55Z", "author": {"login": "joakime"}, "path": "jetty-websocket/javax-websocket-client-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/endpoints/JsrEndpointEventDriver.java", "diffHunk": "@@ -209,9 +209,10 @@ else if (wrapper.wantsStreams())\n                     catch (Throwable t)\n                     {\n                         session.close(t);\n+                        return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3MjY5MQ==", "bodyText": "This return seem out of place. shouldn't we at least close/fail the MessageReader too?", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503472691", "createdAt": "2020-10-12T18:45:31Z", "author": {"login": "joakime"}, "path": "jetty-websocket/javax-websocket-client-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/endpoints/JsrAnnotatedEventDriver.java", "diffHunk": "@@ -343,9 +338,10 @@ public void onTextFrame(ByteBuffer buffer, boolean fin) throws IOException\n                     catch (Throwable e)\n                     {\n                         session.close(e);\n+                        return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3Mjg0Mw==", "bodyText": "Ditto, we need to cleanup/close/fail the MessageReader before we return.", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503472843", "createdAt": "2020-10-12T18:45:56Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/events/JettyAnnotatedEventDriver.java", "diffHunk": "@@ -262,22 +261,21 @@ public void onTextFrame(ByteBuffer buffer, boolean fin) throws IOException\n             }\n             else if (events.onText.isStreaming())\n             {\n-                MessageInputStream inputStream = new MessageInputStream(session);\n-                activeMessage = new MessageReader(inputStream);\n-                final MessageAppender msg = activeMessage;\n+                MessageReader reader = new MessageReader(session);\n+                activeMessage = reader;\n                 dispatch(() ->\n                 {\n                     try\n                     {\n-                        events.onText.call(websocket, session, msg);\n+                        events.onText.call(websocket, session, reader);\n                     }\n                     catch (Throwable t)\n                     {\n-                        // dispatched calls need to be reported\n                         session.close(t);\n+                        return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3MzExNQ==", "bodyText": "Uhm, we dispatch now for onFillable?\nAlways?\nThis seems to be a mistake.", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503473115", "createdAt": "2020-10-12T18:46:39Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/io/AbstractWebSocketConnection.java", "diffHunk": "@@ -521,7 +521,7 @@ public void resume()\n     {\n         ByteBuffer resume = readState.resume();\n         if (resume != null)\n-            onFillable(resume);\n+            getExecutor().execute(() -> onFillable(resume));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3Mzk5MQ==", "bodyText": "do we want a new ByteBuffer copy(byte[], int, int) method for this as well?", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503473991", "createdAt": "2020-10-12T18:48:43Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/message/MessageInputStream.java", "diffHunk": "@@ -209,10 +231,14 @@ public int read() throws IOException\n                 }\n             }\n \n-            int result = activeBuffer.get() & 0xFF;\n+            ByteBuffer buffer = BufferUtil.toBuffer(b, off, len);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3NDkyMA==", "bodyText": "What?  I don't understand this comment.\nSo the application is using InputStream.read(byte[], int, int), and the state is COMPLETE, meaning there's no more frames to read, why are we returning \"written\" and not -1?", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503474920", "createdAt": "2020-10-12T18:50:43Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/message/MessageInputStream.java", "diffHunk": "@@ -221,6 +247,11 @@ public int read() throws IOException\n                         case CLOSED:\n                             return -1;\n \n+                        case COMPLETE:\n+                            // If we are complete we have read the last frame but\n+                            // don't want to resume reading until onMessage() exits.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 191}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3NTQ0OA==", "bodyText": "We loop infinitely on COMPLETE?\nIf so, I'm not liking this solution.", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503475448", "createdAt": "2020-10-12T18:51:54Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/message/MessageInputStream.java", "diffHunk": "@@ -130,47 +145,53 @@ public void close()\n                     return;\n \n                 case SUSPENDED:\n-                    resume = suspendToken;\n-                    suspendToken = null;\n-                    state = State.CLOSED;\n-                    break;\n-\n                 case RESUMED:\n-                    state = State.CLOSED;\n+                    state = State.COMPLETE;\n                     break;\n+\n+                default:\n+                    throw new IllegalStateException();\n             }\n \n-            buffers.clear();\n             buffers.offer(EOF);\n         }\n-\n-        // May need to resume to discard until we reach next message.\n-        if (resume != null)\n-            resume.resume();\n     }\n \n-    @Override\n-    public void mark(int readlimit)\n+    public void handlerComplete()\n     {\n-        // Not supported.\n-    }\n+        // Close the InputStream.\n+        close();\n \n-    @Override\n-    public boolean markSupported()\n-    {\n-        return false;\n+        // May need to resume to resume and read to the next message.\n+        SuspendToken resume;\n+        synchronized (this)\n+        {\n+            resume = suspendToken;\n+            suspendToken = null;\n+        }\n+\n+        if (resume != null)\n+            resume.resume();\n     }\n \n     @Override\n-    public void messageComplete()\n+    public int read() throws IOException\n     {\n-        if (LOG.isDebugEnabled())\n-            LOG.debug(\"Message completed\");\n-        buffers.offer(EOF);\n+        byte[] bytes = new byte[1];\n+        while (true)\n+        {\n+            int read = read(bytes, 0, 1);\n+            if (read < 0)\n+                return -1;\n+            if (read == 0)\n+                continue;\n+\n+            return bytes[0] & 0xFF;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3NjIxMg==", "bodyText": "You don't explain why we have a new COMPLETE state, and how it's different then the others.\nEg: what is the different between COMPLETE vs CLOSED?", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503476212", "createdAt": "2020-10-12T18:53:45Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/message/MessageInputStream.java", "diffHunk": "@@ -55,6 +55,7 @@\n     {\n         RESUMED,\n         SUSPENDED,\n+        COMPLETE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3NzA0OA==", "bodyText": "If the message is complete, that should offer the last frame with FIN=true and then an EOF in the buffer queue.\nWhy do we have a new state?", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503477048", "createdAt": "2020-10-12T18:55:37Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/message/MessageInputStream.java", "diffHunk": "@@ -130,47 +145,53 @@ public void close()\n                     return;\n \n                 case SUSPENDED:\n-                    resume = suspendToken;\n-                    suspendToken = null;\n-                    state = State.CLOSED;\n-                    break;\n-\n                 case RESUMED:\n-                    state = State.CLOSED;\n+                    state = State.COMPLETE;\n                     break;\n+\n+                default:\n+                    throw new IllegalStateException();\n             }\n \n-            buffers.clear();\n             buffers.offer(EOF);\n         }\n-\n-        // May need to resume to discard until we reach next message.\n-        if (resume != null)\n-            resume.resume();\n     }\n \n-    @Override\n-    public void mark(int readlimit)\n+    public void handlerComplete()\n     {\n-        // Not supported.\n-    }\n+        // Close the InputStream.\n+        close();\n \n-    @Override\n-    public boolean markSupported()\n-    {\n-        return false;\n+        // May need to resume to resume and read to the next message.\n+        SuspendToken resume;\n+        synchronized (this)\n+        {\n+            resume = suspendToken;\n+            suspendToken = null;\n+        }\n+\n+        if (resume != null)\n+            resume.resume();\n     }\n \n     @Override\n-    public void messageComplete()\n+    public int read() throws IOException\n     {\n-        if (LOG.isDebugEnabled())\n-            LOG.debug(\"Message completed\");\n-        buffers.offer(EOF);\n+        byte[] bytes = new byte[1];\n+        while (true)\n+        {\n+            int read = read(bytes, 0, 1);\n+            if (read < 0)\n+                return -1;\n+            if (read == 0)\n+                continue;\n+\n+            return bytes[0] & 0xFF;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3NTQ0OA=="}, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3NzMwNw==", "bodyText": "Perhaps we should detail why this state is illegal in the throwable message?", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503477307", "createdAt": "2020-10-12T18:56:16Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/message/MessageInputStream.java", "diffHunk": "@@ -105,11 +94,14 @@ public void appendFrame(ByteBuffer framePayload, boolean fin) throws IOException\n                         state = State.SUSPENDED;\n                         break;\n \n-                    case SUSPENDED:\n+                    default:\n                         throw new IllegalStateException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3ODQ0MA==", "bodyText": "We should probably be paying attention to the fin parameter on this appendMessage(ByteBuffer, boolean) and add the EOF sentinel to the buffers if it's set to true.", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503478440", "createdAt": "2020-10-12T18:58:50Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/message/MessageInputStream.java", "diffHunk": "@@ -105,11 +94,14 @@ public void appendFrame(ByteBuffer framePayload, boolean fin) throws IOException\n                         state = State.SUSPENDED;\n                         break;\n \n-                    case SUSPENDED:\n+                    default:\n                         throw new IllegalStateException();\n                 }\n \n-                buffers.put(copy);\n+                // Put the payload into the queue, by copying it.\n+                // Copying is necessary because the payload will\n+                // be processed after this method returns.\n+                buffers.put(copy(framePayload));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ3ODY4OA==", "bodyText": "I don't like this method concept.\nWe already have the \"boolean fin\" on the appendMessage, why are we not using it?", "url": "https://github.com/eclipse/jetty.project/pull/5377#discussion_r503478688", "createdAt": "2020-10-12T18:59:26Z", "author": {"login": "joakime"}, "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/message/MessageInputStream.java", "diffHunk": "@@ -121,7 +113,30 @@ public void appendFrame(ByteBuffer framePayload, boolean fin) throws IOException\n     @Override\n     public void close()\n     {\n-        SuspendToken resume = null;\n+        synchronized (this)\n+        {\n+            if (state == State.CLOSED)\n+                return;\n+\n+            boolean remainingContent = (state != State.COMPLETE) ||\n+                (!buffers.isEmpty() && buffers.peek() != EOF) ||\n+                (activeBuffer != null && activeBuffer.hasRemaining());\n+\n+            if (remainingContent)\n+                LOG.warn(\"MessageInputStream closed without fully consuming content\");\n+\n+            state = State.CLOSED;\n+            buffers.clear();\n+            buffers.add(EOF);\n+        }\n+    }\n+\n+    @Override\n+    public void messageComplete()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09947681fe37da9aa2c8d9b943c608720bcbbaa9"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "419eefc2efca3c20c8bc69e0908b9126159c56c6", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/419eefc2efca3c20c8bc69e0908b9126159c56c6", "committedDate": "2020-10-13T23:26:08Z", "message": "move logic from messageComplete into appendFrame with fin==true\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "680020dcb2cc22dc3252690f263ecd890d78aa5c", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/680020dcb2cc22dc3252690f263ecd890d78aa5c", "committedDate": "2020-10-15T01:08:57Z", "message": "Issue #5368 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be041d3044ee1a2d009c27c8e43cf32d9173f3ac", "author": {"user": {"login": "lachlan-roberts", "name": "Lachlan"}}, "url": "https://github.com/eclipse/jetty.project/commit/be041d3044ee1a2d009c27c8e43cf32d9173f3ac", "committedDate": "2020-10-15T01:10:33Z", "message": "Issue #5368 - add tests for not reading to end of InputStream\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NzQxMDMw", "url": "https://github.com/eclipse/jetty.project/pull/5377#pullrequestreview-509741030", "createdAt": "2020-10-15T20:02:02Z", "commit": {"oid": "be041d3044ee1a2d009c27c8e43cf32d9173f3ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 17, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}