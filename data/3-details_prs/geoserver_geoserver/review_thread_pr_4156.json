{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NjY5NTgw", "number": 4156, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo0Mjo0OVrODvIjOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo1NzowNlrODvI-WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQ5NzU0OnYy", "diffSide": "RIGHT", "path": "doc/en/api/1.0.0/coveragestores.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo0Mjo0OVrOGBYTzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0MDowM1rOGCk6bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDA0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      description: The parameter allows, when valorized as \"true\", to trigger the native bbox update of the layer configuration according \n          \n          \n            \n                      description: When set to \"true\", triggers re-calculation of the layer native bbox. Defaults to \"false\".", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r404100045", "createdAt": "2020-04-06T13:42:49Z", "author": {"login": "aaime"}, "path": "doc/en/api/1.0.0/coveragestores.yaml", "diffHunk": "@@ -286,6 +286,12 @@ paths:\n           required: false\n           description: The filename parameter specifies the target file name for a file that needs to harvested as part of a mosaic. This is important to avoid clashes and to make sure the right dimension values are available in the name for multidimensional mosaics to work. Only used if method=\"file\".\n           type: string\n+        - name: updateBBox\n+          in: query\n+          required: false\n+          description: The parameter allows, when valorized as \"true\", to trigger the native bbox update of the layer configuration according ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NTExNg==", "bodyText": "fixed", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r405355116", "createdAt": "2020-04-08T08:40:03Z", "author": {"login": "taba90"}, "path": "doc/en/api/1.0.0/coveragestores.yaml", "diffHunk": "@@ -286,6 +286,12 @@ paths:\n           required: false\n           description: The filename parameter specifies the target file name for a file that needs to harvested as part of a mosaic. This is important to avoid clashes and to make sure the right dimension values are available in the name for multidimensional mosaics to work. Only used if method=\"file\".\n           type: string\n+        - name: updateBBox\n+          in: query\n+          required: false\n+          description: The parameter allows, when valorized as \"true\", to trigger the native bbox update of the layer configuration according ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDA0NQ=="}, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQ5ODk4OnYy", "diffSide": "RIGHT", "path": "doc/en/api/1.0.0/structuredcoverages.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo0MzowNlrOGBYUng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0MDowOVrOGCk6vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDI1NA==", "bodyText": "See comment above.", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r404100254", "createdAt": "2020-04-06T13:43:06Z", "author": {"login": "aaime"}, "path": "doc/en/api/1.0.0/structuredcoverages.yaml", "diffHunk": "@@ -402,6 +402,11 @@ paths:\n           required: false\n           type: string\n           minimum: 0\n+        - name: updateBBox\n+          in: query\n+          required: false\n+          description: The parameter allows, when valorized as \"true\", to trigger the native bbox update of the layer configuration according ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NTE5Nw==", "bodyText": "fixed", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r405355197", "createdAt": "2020-04-08T08:40:09Z", "author": {"login": "taba90"}, "path": "doc/en/api/1.0.0/structuredcoverages.yaml", "diffHunk": "@@ -402,6 +402,11 @@ paths:\n           required: false\n           type: string\n           minimum: 0\n+        - name: updateBBox\n+          in: query\n+          required: false\n+          description: The parameter allows, when valorized as \"true\", to trigger the native bbox update of the layer configuration according ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDI1NA=="}, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQ5OTQ4OnYy", "diffSide": "RIGHT", "path": "doc/en/api/1.0.0/structuredcoverages.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo0MzoxMVrOGBYU4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0MDoxNlrOGCk7JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDMyMw==", "bodyText": "See comment above.", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r404100323", "createdAt": "2020-04-06T13:43:11Z", "author": {"login": "aaime"}, "path": "doc/en/api/1.0.0/structuredcoverages.yaml", "diffHunk": "@@ -589,7 +594,12 @@ paths:\n             Finally, when set to \"all\" both data and auxiliary files are removed.\n           required: false\n           type: string\n-          minimum: 0         \n+          minimum: 0  \n+        - name: updateBBox\n+          in: query\n+          required: false\n+          description: The parameter allows, when valorized as \"true\", to trigger the native bbox update of the layer configuration according ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NTMwMQ==", "bodyText": "fixed", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r405355301", "createdAt": "2020-04-08T08:40:16Z", "author": {"login": "taba90"}, "path": "doc/en/api/1.0.0/structuredcoverages.yaml", "diffHunk": "@@ -589,7 +594,12 @@ paths:\n             Finally, when set to \"all\" both data and auxiliary files are removed.\n           required: false\n           type: string\n-          minimum: 0         \n+          minimum: 0  \n+        - name: updateBBox\n+          in: query\n+          required: false\n+          description: The parameter allows, when valorized as \"true\", to trigger the native bbox update of the layer configuration according ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDMyMw=="}, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzUwMzE0OnYy", "diffSide": "RIGHT", "path": "src/restconfig/src/main/java/org/geoserver/rest/catalog/MosaicInfoBBoxHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo0Mzo1NlrOGBYXMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0MDoyNFrOGCk7dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDkxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This class aims to provide methods to update mosaic native bounding box at the coverage info\n          \n          \n            \n             * This class provides methods to update a mosaic native bounding box at the coverage info", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r404100915", "createdAt": "2020-04-06T13:43:56Z", "author": {"login": "aaime"}, "path": "src/restconfig/src/main/java/org/geoserver/rest/catalog/MosaicInfoBBoxHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/* (c) 2020 Open Source Geospatial Foundation - all rights reserved\n+ * This code is licensed under the GPL 2.0 license, available at the root\n+ * application directory.\n+ */\n+package org.geoserver.rest.catalog;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.geoserver.catalog.Catalog;\n+import org.geoserver.catalog.CoverageInfo;\n+import org.geoserver.catalog.CoverageStoreInfo;\n+import org.geotools.coverage.grid.io.StructuredGridCoverage2DReader;\n+import org.geotools.geometry.jts.ReferencedEnvelope;\n+import org.geotools.util.logging.Logging;\n+\n+/**\n+ * This class aims to provide methods to update mosaic native bounding box at the coverage info", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NTM4Mg==", "bodyText": "fixed", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r405355382", "createdAt": "2020-04-08T08:40:24Z", "author": {"login": "taba90"}, "path": "src/restconfig/src/main/java/org/geoserver/rest/catalog/MosaicInfoBBoxHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/* (c) 2020 Open Source Geospatial Foundation - all rights reserved\n+ * This code is licensed under the GPL 2.0 license, available at the root\n+ * application directory.\n+ */\n+package org.geoserver.rest.catalog;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.geoserver.catalog.Catalog;\n+import org.geoserver.catalog.CoverageInfo;\n+import org.geoserver.catalog.CoverageStoreInfo;\n+import org.geotools.coverage.grid.io.StructuredGridCoverage2DReader;\n+import org.geotools.geometry.jts.ReferencedEnvelope;\n+import org.geotools.util.logging.Logging;\n+\n+/**\n+ * This class aims to provide methods to update mosaic native bounding box at the coverage info", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDkxNQ=="}, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzU2Njk3OnYy", "diffSide": "RIGHT", "path": "src/restconfig/src/test/java/org/geoserver/rest/catalog/CoverageStoreFileUploadTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo1NzowNlrOGBY-sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0MjowMFrOGCk_MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDExMTAyNQ==", "bodyText": "Good to see tests for harvest and re-harvest. The delete path was modified too, is there a test for it?", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r404111025", "createdAt": "2020-04-06T13:57:06Z", "author": {"login": "aaime"}, "path": "src/restconfig/src/test/java/org/geoserver/rest/catalog/CoverageStoreFileUploadTest.java", "diffHunk": "@@ -576,4 +572,108 @@ private void configureCoverageInfo(\n         // add the store\n         getCatalog().add(cinfo);\n     }\n+\n+    @Test\n+    public void testDefaultBehaviourUpdateBBoxPOST() throws Exception {\n+        setUpBBoxTest(\"bboxtest\");\n+        byte[] bytes = null;\n+        CoverageStoreInfo storeInfo = getCatalog().getCoverageStoreByName(\"bboxtest\");\n+        assertNotNull(storeInfo);\n+        CoverageInfo ci = getCatalog().getCoverageByName(\"bboxtest\");\n+        assertNotNull(ci);\n+        assertEquals(storeInfo, ci.getStore());\n+        // Harvesting\n+        URL zipHarvest = getClass().getResource(\"test_bbox_granules.zip\");\n+        try (InputStream is = zipHarvest.openStream()) {\n+            bytes = IOUtils.toByteArray(is);\n+        }\n+        // Create the POST request\n+        MockHttpServletRequest request =\n+                createRequest(\n+                        RestBaseController.ROOT_PATH\n+                                + \"/workspaces/gs/coveragestores/bboxtest/file.imagemosaic\");\n+        request.setMethod(\"POST\");\n+        request.setContentType(\"application/zip\");\n+        request.setContent(bytes);\n+        request.addHeader(\"Content-type\", \"application/zip\");\n+        dispatch(request);\n+        testBBoxLayerConfiguration(\n+                storeInfo, (current, old) -> assertNotEquals(current, old), catalog);\n+        CoverageInfo coverage = getCatalog().getResourceByName(\"bboxtest\", CoverageInfo.class);\n+        if (coverage != null) {\n+            removeStore(\n+                    coverage.getStore().getWorkspace().getName(), coverage.getStore().getName());\n+        }\n+    }\n+\n+    @Test\n+    public void testUpdateBBoxTrueParameterPOST() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NjMzNw==", "bodyText": "yes those are in the StructuredCoverageStoresTest class 9c3df0d#diff-12372cf7938b4aed6e65eba2d824237aR871", "url": "https://github.com/geoserver/geoserver/pull/4156#discussion_r405356337", "createdAt": "2020-04-08T08:42:00Z", "author": {"login": "taba90"}, "path": "src/restconfig/src/test/java/org/geoserver/rest/catalog/CoverageStoreFileUploadTest.java", "diffHunk": "@@ -576,4 +572,108 @@ private void configureCoverageInfo(\n         // add the store\n         getCatalog().add(cinfo);\n     }\n+\n+    @Test\n+    public void testDefaultBehaviourUpdateBBoxPOST() throws Exception {\n+        setUpBBoxTest(\"bboxtest\");\n+        byte[] bytes = null;\n+        CoverageStoreInfo storeInfo = getCatalog().getCoverageStoreByName(\"bboxtest\");\n+        assertNotNull(storeInfo);\n+        CoverageInfo ci = getCatalog().getCoverageByName(\"bboxtest\");\n+        assertNotNull(ci);\n+        assertEquals(storeInfo, ci.getStore());\n+        // Harvesting\n+        URL zipHarvest = getClass().getResource(\"test_bbox_granules.zip\");\n+        try (InputStream is = zipHarvest.openStream()) {\n+            bytes = IOUtils.toByteArray(is);\n+        }\n+        // Create the POST request\n+        MockHttpServletRequest request =\n+                createRequest(\n+                        RestBaseController.ROOT_PATH\n+                                + \"/workspaces/gs/coveragestores/bboxtest/file.imagemosaic\");\n+        request.setMethod(\"POST\");\n+        request.setContentType(\"application/zip\");\n+        request.setContent(bytes);\n+        request.addHeader(\"Content-type\", \"application/zip\");\n+        dispatch(request);\n+        testBBoxLayerConfiguration(\n+                storeInfo, (current, old) -> assertNotEquals(current, old), catalog);\n+        CoverageInfo coverage = getCatalog().getResourceByName(\"bboxtest\", CoverageInfo.class);\n+        if (coverage != null) {\n+            removeStore(\n+                    coverage.getStore().getWorkspace().getName(), coverage.getStore().getName());\n+        }\n+    }\n+\n+    @Test\n+    public void testUpdateBBoxTrueParameterPOST() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDExMTAyNQ=="}, "originalCommit": {"oid": "8f56c42a6acf2e9172b29ba262c0951f3bbfaa2c"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4040, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}