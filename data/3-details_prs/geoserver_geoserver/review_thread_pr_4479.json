{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyODUzOTEy", "number": 4479, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTozMjowOVrOEhusCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo0NzoyMlrOEhvHBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODAzNDAyOnYy", "diffSide": "RIGHT", "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/DefaultSupplementalFileExtensionsProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTozMjowOVrOHPNH7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNzo0NjowMVrOHPnPXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwNTcwOQ==", "bodyText": "Better practice, declare interface, create instance.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    HashSet<String> upperCase = new HashSet<>();\n          \n          \n            \n                    Set<String> upperCase = new HashSet<>();", "url": "https://github.com/geoserver/geoserver/pull/4479#discussion_r485705709", "createdAt": "2020-09-09T15:32:09Z", "author": {"login": "aaime"}, "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/DefaultSupplementalFileExtensionsProvider.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/* (c) 2020 Open Source Geospatial Foundation - all rights reserved\n+ * This code is licensed under the GPL 2.0 license, available at the root\n+ * application directory.\n+ */\n+package org.geoserver.importer;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.apache.commons.lang.StringUtils;\n+\n+/** Default implementation of a SupplementalFileExtensionsProvider */\n+public class DefaultSupplementalFileExtensionsProvider\n+        implements SupplementalFileExtensionsProvider {\n+    private Set<String> acceptedInputExtensions;\n+    private Set<String> supplementalExtensions;\n+    private Set<String> upperCaseSupplementalExtensions;\n+\n+    public DefaultSupplementalFileExtensionsProvider(\n+            Set<String> acceptedInputExtensions, Set<String> supplementalExtensions) {\n+        this.acceptedInputExtensions = Collections.unmodifiableSet(acceptedInputExtensions);\n+        this.supplementalExtensions = Collections.unmodifiableSet(supplementalExtensions);\n+        HashSet<String> upperCase = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEzMzU5Nw==", "bodyText": "Fixed", "url": "https://github.com/geoserver/geoserver/pull/4479#discussion_r486133597", "createdAt": "2020-09-10T07:46:01Z", "author": {"login": "dromagnoli"}, "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/DefaultSupplementalFileExtensionsProvider.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/* (c) 2020 Open Source Geospatial Foundation - all rights reserved\n+ * This code is licensed under the GPL 2.0 license, available at the root\n+ * application directory.\n+ */\n+package org.geoserver.importer;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.apache.commons.lang.StringUtils;\n+\n+/** Default implementation of a SupplementalFileExtensionsProvider */\n+public class DefaultSupplementalFileExtensionsProvider\n+        implements SupplementalFileExtensionsProvider {\n+    private Set<String> acceptedInputExtensions;\n+    private Set<String> supplementalExtensions;\n+    private Set<String> upperCaseSupplementalExtensions;\n+\n+    public DefaultSupplementalFileExtensionsProvider(\n+            Set<String> acceptedInputExtensions, Set<String> supplementalExtensions) {\n+        this.acceptedInputExtensions = Collections.unmodifiableSet(acceptedInputExtensions);\n+        this.supplementalExtensions = Collections.unmodifiableSet(supplementalExtensions);\n+        HashSet<String> upperCase = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwNTcwOQ=="}, "originalCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODA0NzIzOnYy", "diffSide": "RIGHT", "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/SpatialFile.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTozNToxMVrOHPNQSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNzo0NjoxMVrOHPnPuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwNzg0OA==", "bodyText": "I would add a comment explaining why it's done this way, on a folder with few files this approach is actually more work. However, it's not that much more work, while on a directory with lots of files, this is more efficient.", "url": "https://github.com/geoserver/geoserver/pull/4479#discussion_r485707848", "createdAt": "2020-09-09T15:35:11Z", "author": {"login": "aaime"}, "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/SpatialFile.java", "diffHunk": "@@ -99,36 +101,42 @@ public String apply(@Nullable StyleHandler input) {\n \n         // getBaseName only gets the LAST extension so beware for .shp.aux.xml stuff\n         final String baseName = getBaseName(file.getName());\n+        final String baseExtension = getExtension(file.getName());\n+        final String basePath = file.getParent();\n+\n+        // look for style files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEzMzY4OA==", "bodyText": "Done", "url": "https://github.com/geoserver/geoserver/pull/4479#discussion_r486133688", "createdAt": "2020-09-10T07:46:11Z", "author": {"login": "dromagnoli"}, "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/SpatialFile.java", "diffHunk": "@@ -99,36 +101,42 @@ public String apply(@Nullable StyleHandler input) {\n \n         // getBaseName only gets the LAST extension so beware for .shp.aux.xml stuff\n         final String baseName = getBaseName(file.getName());\n+        final String baseExtension = getExtension(file.getName());\n+        final String basePath = file.getParent();\n+\n+        // look for style files", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwNzg0OA=="}, "originalCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODEwMzEwOnYy", "diffSide": "RIGHT", "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/SpatialFile.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo0NzoyMlrOHPNyeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNzo0NjoyNVrOHPnQQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNjYwMg==", "bodyText": "This actually changes the behavior, some files that were caught before will not be in the list anymore. However, in fact getSuppFiles is not used for anything active in the import, it's just reflected out in the generated JSON when using the REST API, but not used to drive actual import, or to move files, or anything like that. So in the end, pretty invisible to the user, and not particularly useful (one may even just stop collecting them...).", "url": "https://github.com/geoserver/geoserver/pull/4479#discussion_r485716602", "createdAt": "2020-09-09T15:47:22Z", "author": {"login": "aaime"}, "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/SpatialFile.java", "diffHunk": "@@ -99,36 +101,42 @@ public String apply(@Nullable StyleHandler input) {\n \n         // getBaseName only gets the LAST extension so beware for .shp.aux.xml stuff\n         final String baseName = getBaseName(file.getName());\n+        final String baseExtension = getExtension(file.getName());\n+        final String basePath = file.getParent();\n+\n+        // look for style files\n+        Iterator styleExtensionsIt = styleExtensions.iterator();\n+        while (styleFile == null && styleExtensionsIt.hasNext()) {\n+            Object ext = styleExtensionsIt.next();\n+            File style = new File(basePath, baseName + \".\" + ext);\n+            if (style.exists()) {\n+                // TODO: deal with multiple style files? for now we just grab the first\n+                styleFile = style;\n+            }\n+        }\n \n-        File[] files = file.getParentFile().listFiles();\n-        if (files != null) {\n-            for (File f : files) {\n-                if (f.equals(file)) {\n-                    continue;\n-                }\n-\n-                if (!f.getName().startsWith(baseName)) {\n-                    continue;\n-                }\n-\n-                if (!f.isFile()) {\n-                    continue;\n-                }\n-\n-                String ext = f.getName().substring(baseName.length());\n-                // once the basename is stripped, extension(s) should be present\n-                if (ext.charAt(0) == '.') {\n-                    if (\".prj\".equalsIgnoreCase(ext)) {\n-                        prjFile = f;\n-                    } else if (styleFile == null && styleExtensions.contains(ext.substring(1))) {\n-                        // TODO: deal with multiple style files? for now we just grab the first\n-                        styleFile = f;\n+        // Looking for supplemental files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEzMzgyNg==", "bodyText": "Right", "url": "https://github.com/geoserver/geoserver/pull/4479#discussion_r486133826", "createdAt": "2020-09-10T07:46:25Z", "author": {"login": "dromagnoli"}, "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/SpatialFile.java", "diffHunk": "@@ -99,36 +101,42 @@ public String apply(@Nullable StyleHandler input) {\n \n         // getBaseName only gets the LAST extension so beware for .shp.aux.xml stuff\n         final String baseName = getBaseName(file.getName());\n+        final String baseExtension = getExtension(file.getName());\n+        final String basePath = file.getParent();\n+\n+        // look for style files\n+        Iterator styleExtensionsIt = styleExtensions.iterator();\n+        while (styleFile == null && styleExtensionsIt.hasNext()) {\n+            Object ext = styleExtensionsIt.next();\n+            File style = new File(basePath, baseName + \".\" + ext);\n+            if (style.exists()) {\n+                // TODO: deal with multiple style files? for now we just grab the first\n+                styleFile = style;\n+            }\n+        }\n \n-        File[] files = file.getParentFile().listFiles();\n-        if (files != null) {\n-            for (File f : files) {\n-                if (f.equals(file)) {\n-                    continue;\n-                }\n-\n-                if (!f.getName().startsWith(baseName)) {\n-                    continue;\n-                }\n-\n-                if (!f.isFile()) {\n-                    continue;\n-                }\n-\n-                String ext = f.getName().substring(baseName.length());\n-                // once the basename is stripped, extension(s) should be present\n-                if (ext.charAt(0) == '.') {\n-                    if (\".prj\".equalsIgnoreCase(ext)) {\n-                        prjFile = f;\n-                    } else if (styleFile == null && styleExtensions.contains(ext.substring(1))) {\n-                        // TODO: deal with multiple style files? for now we just grab the first\n-                        styleFile = f;\n+        // Looking for supplemental files", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNjYwMg=="}, "originalCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3918, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}