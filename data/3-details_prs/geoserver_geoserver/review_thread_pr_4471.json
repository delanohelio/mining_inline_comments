{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5ODczNDc5", "number": 4471, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo1NDoxNVrOEg0vWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo1NDoxNVrOEg0vWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODUzOTc2OnYy", "diffSide": "RIGHT", "path": "src/community/geopkg/src/test/java/org/geoserver/geopkg/wps/GeoPackageProcessTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo1NDoxNVrOHN0YmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToxNDowMlrOHQVkkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI1MTgwMQ==", "bodyText": "system.out left around :)", "url": "https://github.com/geoserver/geoserver/pull/4471#discussion_r484251801", "createdAt": "2020-09-07T07:54:15Z", "author": {"login": "dromagnoli"}, "path": "src/community/geopkg/src/test/java/org/geoserver/geopkg/wps/GeoPackageProcessTest.java", "diffHunk": "@@ -866,7 +869,81 @@ public void testGeoPackageProcessValidationXXE() throws Exception {\n         assertThat(message, containsString(\"Entity resolution disallowed\"));\n     }\n \n-    public String getXml() {\n+    @Test\n+    public void testGeoPackageVectorOverviews() throws Exception {\n+        String urlPath = string(post(\"wps\", getXml(getXMLInnerRequestOverviews()))).trim();\n+        String resourceUrl = urlPath.substring(\"http://localhost:8080/geoserver/\".length());\n+        MockHttpServletResponse response = getAsServletResponse(resourceUrl);\n+        File file = new File(getDataDirectory().findOrCreateDir(\"tmp\"), \"test.gpkg\");\n+        FileUtils.writeByteArrayToFile(file, getBinary(response));\n+        assertNotNull(file);\n+        assertEquals(\"test.gpkg\", file.getName());\n+        assertTrue(file.exists());\n+        System.out.println(file.getAbsolutePath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c0e7af7d84e35a9e695966d84cbc3820cb69892"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5MjY4OA==", "bodyText": "Cleaned up, thanks!", "url": "https://github.com/geoserver/geoserver/pull/4471#discussion_r486892688", "createdAt": "2020-09-11T09:14:02Z", "author": {"login": "aaime"}, "path": "src/community/geopkg/src/test/java/org/geoserver/geopkg/wps/GeoPackageProcessTest.java", "diffHunk": "@@ -866,7 +869,81 @@ public void testGeoPackageProcessValidationXXE() throws Exception {\n         assertThat(message, containsString(\"Entity resolution disallowed\"));\n     }\n \n-    public String getXml() {\n+    @Test\n+    public void testGeoPackageVectorOverviews() throws Exception {\n+        String urlPath = string(post(\"wps\", getXml(getXMLInnerRequestOverviews()))).trim();\n+        String resourceUrl = urlPath.substring(\"http://localhost:8080/geoserver/\".length());\n+        MockHttpServletResponse response = getAsServletResponse(resourceUrl);\n+        File file = new File(getDataDirectory().findOrCreateDir(\"tmp\"), \"test.gpkg\");\n+        FileUtils.writeByteArrayToFile(file, getBinary(response));\n+        assertNotNull(file);\n+        assertEquals(\"test.gpkg\", file.getName());\n+        assertTrue(file.exists());\n+        System.out.println(file.getAbsolutePath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI1MTgwMQ=="}, "originalCommit": {"oid": "1c0e7af7d84e35a9e695966d84cbc3820cb69892"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3911, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}