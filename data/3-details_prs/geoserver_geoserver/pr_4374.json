{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNzcxMDU3", "number": 4374, "title": "[GEOS-9403] MongoDB Plugin breaks GeoServer Admin UI", "bodyText": "This PR fixes an Spring initialization methods scan issue with optional AppSchema dependencies classes.\nJIRA issue:\nhttps://osgeo-org.atlassian.net/browse/GEOS-9403\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for community modules):\n\n There is a ticket in Jira describing the issue/improvement/feature (a notable exemptions is, changes not visible to end users)\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOS-XYZW] Title of the Jira ticket\" (export to XML in Jira generates the message in this exact form)\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Commits changing the UI, existing user workflows, or adding new functionality, need to include documentation updates (screenshots, text)\n Commits changing the REST API, or any configuration object, should check if the REST API docs (Swagger YAML files and classic documentation) need to be updated.", "createdAt": "2020-07-02T22:39:11Z", "url": "https://github.com/geoserver/geoserver/pull/4374", "merged": true, "mergeCommit": {"oid": "3134c2508aee34196ca107244c0615971ca0d20d"}, "closed": true, "closedAt": "2020-08-17T11:02:25Z", "author": {"login": "fernandor777"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxHboKgFqTQ0MjA2OTM4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxU5nKABqjM1MTEzNzY4NzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDY5Mzg0", "url": "https://github.com/geoserver/geoserver/pull/4374#pullrequestreview-442069384", "createdAt": "2020-07-02T23:27:52Z", "commit": {"oid": "3ad1afdf0a68975305ff4654972141e1075b8834"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzoyNzo1MlrOGsfl_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzoyNzo1MlrOGsfl_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwODE1OQ==", "bodyText": "MonfoDB -> MongoDB", "url": "https://github.com/geoserver/geoserver/pull/4374#discussion_r449308159", "createdAt": "2020-07-02T23:27:52Z", "author": {"login": "nmco"}, "path": "src/extension/mongodb/src/main/java/org/geoserver/rest/service/AppSchemaUtils.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/* (c) 2020 Open Source Geospatial Foundation - all rights reserved\n+ * This code is licensed under the GPL 2.0 license, available at the root\n+ * application directory.\n+ */\n+package org.geoserver.rest.service;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import org.geoserver.rest.RestException;\n+import org.geotools.data.DataAccess;\n+import org.geotools.data.complex.AppSchemaDataAccess;\n+import org.geotools.data.complex.FeatureTypeMapping;\n+import org.geotools.data.mongodb.MongoDataStore;\n+import org.opengis.feature.type.Name;\n+import org.springframework.http.HttpStatus;\n+\n+/** Util methods for AppSchema centric logic. */\n+class AppSchemaUtils {\n+\n+    /**\n+     * Returns the internal MonfoDB store from the AppSchema data store with the provided store ID.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad1afdf0a68975305ff4654972141e1075b8834"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDY5NjUy", "url": "https://github.com/geoserver/geoserver/pull/4374#pullrequestreview-442069652", "createdAt": "2020-07-02T23:29:00Z", "commit": {"oid": "3ad1afdf0a68975305ff4654972141e1075b8834"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzoyOTowMVrOGsfm5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzoyOTowMVrOGsfm5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwODM4OQ==", "bodyText": "JavaDoc?", "url": "https://github.com/geoserver/geoserver/pull/4374#discussion_r449308389", "createdAt": "2020-07-02T23:29:01Z", "author": {"login": "nmco"}, "path": "src/extension/mongodb/src/main/java/org/geoserver/rest/service/AppSchemaUtils.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/* (c) 2020 Open Source Geospatial Foundation - all rights reserved\n+ * This code is licensed under the GPL 2.0 license, available at the root\n+ * application directory.\n+ */\n+package org.geoserver.rest.service;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import org.geoserver.rest.RestException;\n+import org.geotools.data.DataAccess;\n+import org.geotools.data.complex.AppSchemaDataAccess;\n+import org.geotools.data.complex.FeatureTypeMapping;\n+import org.geotools.data.mongodb.MongoDataStore;\n+import org.opengis.feature.type.Name;\n+import org.springframework.http.HttpStatus;\n+\n+/** Util methods for AppSchema centric logic. */\n+class AppSchemaUtils {\n+\n+    /**\n+     * Returns the internal MonfoDB store from the AppSchema data store with the provided store ID.\n+     */\n+    static MongoDataStore getMongoStoreById(\n+            String storeId, final AppSchemaDataAccess appSchemaStore) throws IOException {\n+        MongoDataStore mongoStore = null;\n+        List<Name> names = appSchemaStore.getNames();\n+        for (Name ename : names) {\n+            FeatureTypeMapping mapping = appSchemaStore.getMappingByName(ename);\n+            if (mapping.getSourceDatastoreId().filter(id -> storeId.equals(id)).isPresent()) {\n+                DataAccess internalStore = mapping.getSource().getDataStore();\n+                if (!(internalStore instanceof MongoDataStore)) {\n+                    throw new RestException(\n+                            \"Internal Datastore is not a MongoDB one.\", HttpStatus.BAD_REQUEST);\n+                }\n+                mongoStore = (MongoDataStore) internalStore;\n+                break;\n+            }\n+        }\n+        if (mongoStore == null) {\n+            throw new RestException(\"Internal Datastore not found.\", HttpStatus.BAD_REQUEST);\n+        }\n+        return mongoStore;\n+    }\n+\n+    /** Returns the Mongo schemas in use based on the store id. */\n+    static Set<String> extractUsedSchemas(AppSchemaDataAccess appSchemaStore, String storeId)\n+            throws IOException {\n+        final List<Name> names = appSchemaStore.getNames();\n+        final Set<String> schemas = new HashSet<>();\n+        for (Name en : names) {\n+            FeatureTypeMapping mapping = appSchemaStore.getMappingByName(en);\n+            String eid = mapping.getSourceDatastoreId().orElse(null);\n+            if (Objects.equals(storeId, eid)) {\n+                Name schemaName = mapping.getSource().getSchema().getName();\n+                schemas.add(schemaName.getLocalPart());\n+            }\n+        }\n+        return Collections.unmodifiableSet(schemas);\n+    }\n+\n+    /** Returns the store ID for the MongoDataStore provided instance. */\n+    static String getStoreId(AppSchemaDataAccess appSchemaStore, MongoDataStore mongoStore)\n+            throws IOException {\n+        for (Name etn : appSchemaStore.getNames()) {\n+            FeatureTypeMapping featureTypeMapping = appSchemaStore.getMappingByName(etn);\n+            if (Objects.equals(mongoStore, featureTypeMapping.getSource().getDataStore()))\n+                return featureTypeMapping.getSourceDatastoreId().orElse(null);\n+        }\n+        return null;\n+    }\n+\n+    static void fillMongoStoresSet(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad1afdf0a68975305ff4654972141e1075b8834"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7640c4bbf176346a8c867c02e32d605095c3b57", "author": {"user": {"login": "fernandor777", "name": "Fernando Mi\u00f1o"}}, "url": "https://github.com/geoserver/geoserver/commit/f7640c4bbf176346a8c867c02e32d605095c3b57", "committedDate": "2020-07-03T15:09:10Z", "message": "[GEOS-9403] MongoDB Plugin breaks GeoServer Admin UI"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ad1afdf0a68975305ff4654972141e1075b8834", "author": {"user": {"login": "fernandor777", "name": "Fernando Mi\u00f1o"}}, "url": "https://github.com/geoserver/geoserver/commit/3ad1afdf0a68975305ff4654972141e1075b8834", "committedDate": "2020-07-02T22:34:31Z", "message": "[GEOS-9403] MongoDB Plugin breaks GeoServer Admin UI"}, "afterCommit": {"oid": "f7640c4bbf176346a8c867c02e32d605095c3b57", "author": {"user": {"login": "fernandor777", "name": "Fernando Mi\u00f1o"}}, "url": "https://github.com/geoserver/geoserver/commit/f7640c4bbf176346a8c867c02e32d605095c3b57", "committedDate": "2020-07-03T15:09:10Z", "message": "[GEOS-9403] MongoDB Plugin breaks GeoServer Admin UI"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1432, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}