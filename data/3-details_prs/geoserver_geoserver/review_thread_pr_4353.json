{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxODU1NTA5", "number": 4353, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMToxOTo0M1rOEKDR5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMToxOTo0M1rOEKDR5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTc0OTQ5OnYy", "diffSide": "RIGHT", "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMToxOTo0M1rOGq3v4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNToxNTowMVrOGrBV9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYwNjc1Mw==", "bodyText": "I see, the geometry can be optional in the schema and we were always expecting something. That say, as per the GeoJSON specification, if the feature is unallocated it should be represented as a JSON NULL value, citing the specification relevant part:\n\nA Feature object has a member with the name \"geometry\".  The value\nof the geometry member SHALL be either a Geometry object as\ndefined above or, in the case that the Feature is unlocated, a\nJSON null value.\n\nA JSON null value is represented like this:\n{\n   \"key\":null\n}\nCan you double check @marco in your test that not onyl the value of the geometry attribute is NULL but also that the key is indeed present?", "url": "https://github.com/geoserver/geoserver/pull/4353#discussion_r447606753", "createdAt": "2020-06-30T11:19:43Z", "author": {"login": "nmco"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -176,7 +176,7 @@ private Property encodeGeometry(Feature feature) {\n             }\n             // store the attribute name and geometry value of the current feature\n             geometryAttribute = feature.getProperty(geometryType.getName());\n-            geometry = (Geometry) geometryAttribute.getValue();\n+            geometry = geometryAttribute != null ? (Geometry) geometryAttribute.getValue() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e5eb8d13846597f60fd282b754de4459c23fa44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc2Mzk1Ng==", "bodyText": "fixed", "url": "https://github.com/geoserver/geoserver/pull/4353#discussion_r447763956", "createdAt": "2020-06-30T15:15:01Z", "author": {"login": "taba90"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -176,7 +176,7 @@ private Property encodeGeometry(Feature feature) {\n             }\n             // store the attribute name and geometry value of the current feature\n             geometryAttribute = feature.getProperty(geometryType.getName());\n-            geometry = (Geometry) geometryAttribute.getValue();\n+            geometry = geometryAttribute != null ? (Geometry) geometryAttribute.getValue() : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYwNjc1Mw=="}, "originalCommit": {"oid": "3e5eb8d13846597f60fd282b754de4459c23fa44"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3948, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}