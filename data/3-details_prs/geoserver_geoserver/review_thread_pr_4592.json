{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMTYyNzc2", "number": 4592, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzoyMDozMVrOE_udkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzoyMDozMVrOE_udkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjU2OTc3OnYy", "diffSide": "RIGHT", "path": "src/extension/wps/wps-core/src/test/java/org/geoserver/wps/ExecuteTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzoyMDozMVrOH9lxvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzoyMDozMVrOH9lxvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0NDEyNw==", "bodyText": "Nice!", "url": "https://github.com/geoserver/geoserver/pull/4592#discussion_r534344127", "createdAt": "2020-12-02T17:20:31Z", "author": {"login": "nmco"}, "path": "src/extension/wps/wps-core/src/test/java/org/geoserver/wps/ExecuteTest.java", "diffHunk": "@@ -2185,4 +2192,56 @@ private void enableWPSOnStreams() {\n         getCatalog().save(ri);\n         getCatalog().save(linfo);\n     }\n+\n+    @Test\n+    public void testBacklinksProxyHeaders() throws Exception {\n+        GeoServer gs = getGeoServer();\n+        GeoServerInfo gsInfo = gs.getGlobal();\n+        gsInfo.setUseHeadersProxyURL(true);\n+        SettingsInfo settings = gsInfo.getSettings();\n+        settings.setProxyBaseUrl(\"${X-Forwarded-Proto}://${X-Forwarded-Host}/geoserver\");\n+        gs.save(gsInfo);\n+\n+        // submit asynch request with proxy headers\n+        String wpsRequest =\n+                \"wps?service=WPS&version=1.0.0&request=Execute&Identifier=gs:Monkey&storeExecuteResponse=true&status=true&storeExecuteResponse=true&DataInputs=\"\n+                        + urlEncode(\"id=proxyHeaders\")\n+                        + \"&ResponseDocument=\"\n+                        + urlEncode(\"result=@asReference=true\");\n+        MockHttpServletRequest hreq = createRequest(wpsRequest);\n+        hreq.setMethod(\"GET\");\n+        hreq.setContent(new byte[] {});\n+        hreq.addHeader(\"X-Forwarded-Proto\", \"https\");\n+        hreq.addHeader(\"X-Forwarded-Host\", \"mycompany.com\");\n+\n+        MockHttpServletResponse response = dispatch(hreq, null);\n+        InputStream responseContent =\n+                new ByteArrayInputStream(response.getContentAsString().getBytes());\n+        Document dom = dom(responseContent, true);\n+        // print(dom);\n+        String fullStatusLocation = getFullStatusLocation(dom);\n+        String statusLocation = fullStatusLocation.substring(fullStatusLocation.indexOf('?') - 3);\n+        assertThat(fullStatusLocation, CoreMatchers.startsWith(\"https://mycompany.com/geoserver\"));\n+\n+        // pretend we are are container and clean up the HTTP Headers\n+        hreq.removeHeader(\"X-Forwarded-Proto\");\n+        hreq.removeHeader(\"X-Forwarded-Host\");\n+\n+        // now schedule the exit and wait for it to exit\n+        MonkeyProcess.exit(\"proxyHeaders\", collectionOfThings(), true);\n+        dom = waitForProcessEnd(statusLocation, 60);\n+        // print(dom);\n+        assertXpathExists(\"//wps:ProcessSucceeded\", dom);\n+\n+        // The document has been encoded as the final stage of the async execution, in a background\n+        // thread. Check it is still using the right proxy variables\n+        XpathEngine xpath = XMLUnit.newXpathEngine();\n+        fullStatusLocation = xpath.evaluate(\"//wps:ExecuteResponse/@statusLocation\", dom);\n+        assertThat(fullStatusLocation, CoreMatchers.startsWith(\"https://mycompany.com/geoserver\"));\n+        String reference =\n+                xpath.evaluate(\n+                        \"//wps:ExecuteResponse/wps:ProcessOutputs/wps:Output/wps:Reference/@href\",\n+                        dom);\n+        assertThat(reference, CoreMatchers.startsWith(\"https://mycompany.com/geoserver\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc816370a33bef53a5e910874d2f6ac4572e20dd"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3856, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}