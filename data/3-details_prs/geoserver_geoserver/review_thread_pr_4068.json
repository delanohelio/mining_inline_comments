{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NTIzNzA5", "number": 4068, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMDowNjo1MFrODhArcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMDowNjo1MFrODhArcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTQwNzIxOnYy", "diffSide": "RIGHT", "path": "src/extension/sldService/src/test/java/org/geoserver/sldservice/rest/ClassifierTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMDowNjo1MFrOFriI8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMTo0ODowMlrOFrlMdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5MjQzMg==", "bodyText": "Tests are not covering the changes and requirements fully. In particular:\n\nThere should be three tests, covering open rules, closed rules, and explicit rules (the three modified methods in rules builder)\nCheck that the rules are not just less, but the expected ones (check the threshold values), and also check colors associated (requirement, only the first colors in the provided list are meant to be used)", "url": "https://github.com/geoserver/geoserver/pull/4068#discussion_r381192432", "createdAt": "2020-02-19T10:06:50Z", "author": {"login": "aaime"}, "path": "src/extension/sldService/src/test/java/org/geoserver/sldservice/rest/ClassifierTest.java", "diffHunk": "@@ -1851,4 +1861,39 @@ public void testCustomRampSingleValue() throws Exception {\n         assertEquals(\"#00FF00\", cm0.getColor().evaluate(null, String.class));\n         assertEquals(1, cm0.getOpacity().evaluate(null, Double.class), 0);\n     }\n+\n+    @Test\n+    public void testNoDuplicatedRulesVectors() throws Exception {\n+        final String restPath =\n+                RestBaseController.ROOT_PATH\n+                        + \"/sldservice/cite:ClassificationLines/\"\n+                        + getServiceUrl()\n+                        + \".xml?\"\n+                        + \"attribute=cat2&ramp=CUSTOM&method=quantile&intervals=7&\"\n+                        + \"colors=#FF071C,#CC0616,#82040E,#68030B,#530209,#420207,#350206\";\n+        Document dom = getAsDOM(restPath, 200);\n+        print(dom);\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        print(dom, baos);\n+        String resultXml = baos.toString().replace(\"\\r\", \"\").replace(\"\\n\", \"\");\n+        Rule[] rules =\n+                checkSLD(resultXml.replace(\"<Rules>\", sldPrefix).replace(\"</Rules>\", sldPostfix));\n+        assertTrue(rules.length < 7);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6026ccf7818deaead52b2be3c3a12040a016ce36"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MjQ4NA==", "bodyText": "Thanks for the review @aaime . feedback have been applied. Regarding explicit rules since I realized now that UniqueIntervalFunction was not affected by the duplicated problem I've removed the fix from corresponding method, but I've added anyway a test for that case.", "url": "https://github.com/geoserver/geoserver/pull/4068#discussion_r381242484", "createdAt": "2020-02-19T11:48:02Z", "author": {"login": "taba90"}, "path": "src/extension/sldService/src/test/java/org/geoserver/sldservice/rest/ClassifierTest.java", "diffHunk": "@@ -1851,4 +1861,39 @@ public void testCustomRampSingleValue() throws Exception {\n         assertEquals(\"#00FF00\", cm0.getColor().evaluate(null, String.class));\n         assertEquals(1, cm0.getOpacity().evaluate(null, Double.class), 0);\n     }\n+\n+    @Test\n+    public void testNoDuplicatedRulesVectors() throws Exception {\n+        final String restPath =\n+                RestBaseController.ROOT_PATH\n+                        + \"/sldservice/cite:ClassificationLines/\"\n+                        + getServiceUrl()\n+                        + \".xml?\"\n+                        + \"attribute=cat2&ramp=CUSTOM&method=quantile&intervals=7&\"\n+                        + \"colors=#FF071C,#CC0616,#82040E,#68030B,#530209,#420207,#350206\";\n+        Document dom = getAsDOM(restPath, 200);\n+        print(dom);\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        print(dom, baos);\n+        String resultXml = baos.toString().replace(\"\\r\", \"\").replace(\"\\n\", \"\");\n+        Rule[] rules =\n+                checkSLD(resultXml.replace(\"<Rules>\", sldPrefix).replace(\"</Rules>\", sldPostfix));\n+        assertTrue(rules.length < 7);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5MjQzMg=="}, "originalCommit": {"oid": "6026ccf7818deaead52b2be3c3a12040a016ce36"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4089, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}