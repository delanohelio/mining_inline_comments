{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTAyODY3", "number": 4244, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDozMTozM1rOD80c_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDozMzozMFrOD80fIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTAwNTQyOnYy", "diffSide": "RIGHT", "path": "src/community/wps-download/src/main/java/org/geoserver/wps/gs/download/GridGeometryProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDozMTozM1rOGV_ctw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDozMTozM1rOGV_ctw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxMjgyMw==", "bodyText": "Be careful.\nThis query will return ALL the granules from the DB. They might be thousands/millions for a whole country.\nI think that we should refine the query using a bbox or the ROI or something similar as we did in other methods around.", "url": "https://github.com/geoserver/geoserver/pull/4244#discussion_r425712823", "createdAt": "2020-05-15T10:31:33Z", "author": {"login": "dromagnoli"}, "path": "src/community/wps-download/src/main/java/org/geoserver/wps/gs/download/GridGeometryProvider.java", "diffHunk": "@@ -264,6 +265,44 @@ private void transformResolution(\n                 resolution[1] = transformedDY;\n             }\n         }\n+\n+        /** Gets granules' resolution if it is equal for all the granules, otherwise returns null */\n+        public double[] getGranulesNativeResolutionIfSame(GranuleSource granuleSource)\n+                throws IOException {\n+            Map<String, DimensionDescriptor> descriptors = crsRequestHandler.getDescriptors();\n+            DimensionDescriptor resDescriptor = descriptors.get(DimensionDescriptor.RESOLUTION);\n+            DimensionDescriptor resXDescriptor = descriptors.get(DimensionDescriptor.RESOLUTION_X);\n+            DimensionDescriptor resYDescriptor = descriptors.get(DimensionDescriptor.RESOLUTION_Y);\n+            final String resXAttribute =\n+                    hasBothResolutions\n+                            ? resXDescriptor.getStartAttribute()\n+                            : resDescriptor.getStartAttribute();\n+            final String resYAttribute =\n+                    hasBothResolutions\n+                            ? resYDescriptor.getStartAttribute()\n+                            : resDescriptor.getStartAttribute();\n+\n+            SimpleFeatureCollection granules = granuleSource.getGranules(Query.ALL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da53c6df269ac4d02a430ce8d4f4859d37537a3a"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTAxMDkxOnYy", "diffSide": "RIGHT", "path": "src/community/wps-download/src/main/java/org/geoserver/wps/gs/download/RasterDownload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDozMzozMFrOGV_gTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDozMzozMFrOGV_gTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxMzc0Mw==", "bodyText": "I think that this path should be executed only if resolutionDifferenceTolerance is not zero since it's an optional parameter/for optional behavior. Does it make sense?", "url": "https://github.com/geoserver/geoserver/pull/4244#discussion_r425713743", "createdAt": "2020-05-15T10:33:30Z", "author": {"login": "dromagnoli"}, "path": "src/community/wps-download/src/main/java/org/geoserver/wps/gs/download/RasterDownload.java", "diffHunk": "@@ -510,14 +506,34 @@ private GridCoverage2D readAndReproject(\n                     LOGGER.log(Level.FINE, \"Reprojecting the coverage\");\n                 }\n                 disposableSources.add(gridCoverage);\n-                gridCoverage =\n+                GridCoverage2D testCoverage =\n                         (GridCoverage2D)\n                                 Operations.DEFAULT.resample(\n                                         gridCoverage,\n                                         targetCRS,\n                                         null,\n                                         interpolation,\n                                         backgroundValues);\n+                GridGeometryProvider gridGeometryProvider =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da53c6df269ac4d02a430ce8d4f4859d37537a3a"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3977, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}