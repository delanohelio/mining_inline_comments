{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTg1MTg4", "number": 4082, "title": "spelling-mistakes-GetLegendGraphic", "bodyText": "Checklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for community modules):\n\n There is a ticket in Jira describing the issue/improvement/feature (a notable exemptions is, changes not visible to end users)\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOS-XYZW] Title of the Jira ticket\" (export to XML in Jira generates the message in this exact form)\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Commits changing the UI, existing user workflows, or adding new functionality, need to include documentation updates (screenshots, text)\n Committs changing the REST API, or any configuration object, should check it the REST API docs (Swagger YAML files and classic documentation) need to be updated.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-02-22T12:27:30Z", "url": "https://github.com/geoserver/geoserver/pull/4082", "merged": true, "mergeCommit": {"oid": "92e4e4c706e83bc4465c8fcb4e0cc827dc8ce900"}, "closed": true, "closedAt": "2020-02-23T08:06:31Z", "author": {"login": "petersmythe"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGywjjgH2gAyMzc4NTg1MTg4OjQwYjcwOGJiMTFhNzgyZDVmOTYzOTkxMGY1M2E1Y2Q0NGJjMDE2YzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcG0gJKAFqTM2MzAyOTQxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "40b708bb11a782d5f9639910f53a5cd44bc016c4", "author": {"user": {"login": "petersmythe", "name": "Peter Smythe"}}, "url": "https://github.com/geoserver/geoserver/commit/40b708bb11a782d5f9639910f53a5cd44bc016c4", "committedDate": "2020-02-22T11:37:55Z", "message": "Fix spelling mistakes and grammar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "401160a6e0950d474715ad6c8c1759f87df24f58", "author": {"user": {"login": "petersmythe", "name": "Peter Smythe"}}, "url": "https://github.com/geoserver/geoserver/commit/401160a6e0950d474715ad6c8c1759f87df24f58", "committedDate": "2020-02-22T11:45:54Z", "message": "Update index.rst"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da97b26a6cffec6a6264e773418b92a8e36b45d4", "author": {"user": {"login": "petersmythe", "name": "Peter Smythe"}}, "url": "https://github.com/geoserver/geoserver/commit/da97b26a6cffec6a6264e773418b92a8e36b45d4", "committedDate": "2020-02-22T11:48:04Z", "message": "Update index.rst"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "441cd4f50309a3b2c48b008c8f1ee2d43b91635c", "author": {"user": {"login": "petersmythe", "name": "Peter Smythe"}}, "url": "https://github.com/geoserver/geoserver/commit/441cd4f50309a3b2c48b008c8f1ee2d43b91635c", "committedDate": "2020-02-22T12:26:57Z", "message": "Update index.rst"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDI5NDE3", "url": "https://github.com/geoserver/geoserver/pull/4082#pullrequestreview-363029417", "createdAt": "2020-02-22T13:39:48Z", "commit": {"oid": "441cd4f50309a3b2c48b008c8f1ee2d43b91635c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzozOTo0OFrOFtLLOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzozOTo0OFrOFtLLOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxMzMzOA==", "bodyText": "I don't see what changed here... newline?", "url": "https://github.com/geoserver/geoserver/pull/4082#discussion_r382913338", "createdAt": "2020-02-22T13:39:48Z", "author": {"login": "aaime"}, "path": "doc/en/user/source/services/wms/get_legend_graphic/index.rst", "diffHunk": "@@ -113,14 +113,14 @@ A set of LEGEND_OPTIONS keys are used to control icons layout in the produced le\n \n Multi column or multi row layouts are possible, and are controlled by the columnheight / rowwidth options (to limit each column / row size) or by the columns / rows options (to fix the # of columns / rows to be used).\n \n-Both columnheight / columns and rowwidth / rows can be used to limit the whole size of the produced image (some icons are skipped id they do not fit into the given limits).\n+Both columnheight / columns and rowwidth / rows can be used to limit the whole size of the produced image (some icons are skipped if they do not fit into the given limits).\n \n In addition, orientation of legends in a layergroup can be configured using the grouplayout option.\n \n Raster Legends Explained\n ------------------------\n \n-This chapter aim to briefly describe the work that I have performed in order to support legends for raster data that draw information taken from the various bits of the SLD 1.0 RasterSymbolizer element. Recall, that up to now there was no way to create legends for raster data, therefore we have tried to fill the gap by providing an implementation of the getLegendGraphic request that would work with the ColorMap element of the SLD 1.0 RasterSymbolizer. Notice that some \"debug\" info about the style, like colormap type and band used are printed out as well.\n+This chapter aims to briefly describe the work that I have performed in order to support legends for raster data that draw information taken from the various bits of the SLD 1.0 RasterSymbolizer element. Recall, that up to now there was no way to create legends for raster data, therefore we have tried to fill the gap by providing an implementation of the getLegendGraphic request that would work with the ColorMap element of the SLD 1.0 RasterSymbolizer. Notice that some \"debug\" info about the style, like colormap type and band used are printed out as well.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441cd4f50309a3b2c48b008c8f1ee2d43b91635c"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1493, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}