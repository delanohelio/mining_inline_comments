{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyODUzOTEy", "number": 4479, "title": "[GEOS-9733]: Importer, stop scanning the whole directory when looking for supplemental files", "bodyText": "More details at https://osgeo-org.atlassian.net/browse/GEOS-9733\nWhen looking for supplemental files associated to an imported files, the importer triggers a directory scan. This might be very time consuming when importing files living into a directory with thousands of files, especially when importing a file every few minutes or within a system ingesting several files per minutes being stored in folder containing huge timeseries.\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for community modules):\n\n There is a ticket in Jira describing the issue/improvement/feature (a notable exemptions is, changes not visible to end users)\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOS-XYZW] Title of the Jira ticket\" (export to XML in Jira generates the message in this exact form)\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Commits changing the UI, existing user workflows, or adding new functionality, need to include documentation updates (screenshots, text)\n Commits changing the REST API, or any configuration object, should check if the REST API docs (Swagger YAML files and classic documentation) need to be updated.", "createdAt": "2020-09-09T13:41:30Z", "url": "https://github.com/geoserver/geoserver/pull/4479", "merged": true, "mergeCommit": {"oid": "0945d546abe83da536d598a288bd404740f9f55e"}, "closed": true, "closedAt": "2020-09-11T15:00:32Z", "author": {"login": "dromagnoli"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHMer6gBqjM3NDU5NDAwMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHb51pgBqjM3NDk0OTQwMDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98468a3d19b536aaaf4f2ccbad11f9458120f1b3", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geoserver/geoserver/commit/98468a3d19b536aaaf4f2ccbad11f9458120f1b3", "committedDate": "2020-09-09T13:36:20Z", "message": "[GEOS-9733]: Importer stop scanning the whole directory when looking for supplemental files"}, "afterCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geoserver/geoserver/commit/9346eebf922aa680e32cb9cd0f8f0d44539834cc", "committedDate": "2020-09-09T13:46:49Z", "message": "[GEOS-9733]: Importer stop scanning the whole directory when looking for supplemental files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MTMzNzQ5", "url": "https://github.com/geoserver/geoserver/pull/4479#pullrequestreview-485133749", "createdAt": "2020-09-09T15:32:09Z", "commit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTozMjowOVrOHPNH7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo0NzoyMlrOHPNyeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwNTcwOQ==", "bodyText": "Better practice, declare interface, create instance.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    HashSet<String> upperCase = new HashSet<>();\n          \n          \n            \n                    Set<String> upperCase = new HashSet<>();", "url": "https://github.com/geoserver/geoserver/pull/4479#discussion_r485705709", "createdAt": "2020-09-09T15:32:09Z", "author": {"login": "aaime"}, "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/DefaultSupplementalFileExtensionsProvider.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/* (c) 2020 Open Source Geospatial Foundation - all rights reserved\n+ * This code is licensed under the GPL 2.0 license, available at the root\n+ * application directory.\n+ */\n+package org.geoserver.importer;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.apache.commons.lang.StringUtils;\n+\n+/** Default implementation of a SupplementalFileExtensionsProvider */\n+public class DefaultSupplementalFileExtensionsProvider\n+        implements SupplementalFileExtensionsProvider {\n+    private Set<String> acceptedInputExtensions;\n+    private Set<String> supplementalExtensions;\n+    private Set<String> upperCaseSupplementalExtensions;\n+\n+    public DefaultSupplementalFileExtensionsProvider(\n+            Set<String> acceptedInputExtensions, Set<String> supplementalExtensions) {\n+        this.acceptedInputExtensions = Collections.unmodifiableSet(acceptedInputExtensions);\n+        this.supplementalExtensions = Collections.unmodifiableSet(supplementalExtensions);\n+        HashSet<String> upperCase = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwNzg0OA==", "bodyText": "I would add a comment explaining why it's done this way, on a folder with few files this approach is actually more work. However, it's not that much more work, while on a directory with lots of files, this is more efficient.", "url": "https://github.com/geoserver/geoserver/pull/4479#discussion_r485707848", "createdAt": "2020-09-09T15:35:11Z", "author": {"login": "aaime"}, "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/SpatialFile.java", "diffHunk": "@@ -99,36 +101,42 @@ public String apply(@Nullable StyleHandler input) {\n \n         // getBaseName only gets the LAST extension so beware for .shp.aux.xml stuff\n         final String baseName = getBaseName(file.getName());\n+        final String baseExtension = getExtension(file.getName());\n+        final String basePath = file.getParent();\n+\n+        // look for style files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNjYwMg==", "bodyText": "This actually changes the behavior, some files that were caught before will not be in the list anymore. However, in fact getSuppFiles is not used for anything active in the import, it's just reflected out in the generated JSON when using the REST API, but not used to drive actual import, or to move files, or anything like that. So in the end, pretty invisible to the user, and not particularly useful (one may even just stop collecting them...).", "url": "https://github.com/geoserver/geoserver/pull/4479#discussion_r485716602", "createdAt": "2020-09-09T15:47:22Z", "author": {"login": "aaime"}, "path": "src/extension/importer/core/src/main/java/org/geoserver/importer/SpatialFile.java", "diffHunk": "@@ -99,36 +101,42 @@ public String apply(@Nullable StyleHandler input) {\n \n         // getBaseName only gets the LAST extension so beware for .shp.aux.xml stuff\n         final String baseName = getBaseName(file.getName());\n+        final String baseExtension = getExtension(file.getName());\n+        final String basePath = file.getParent();\n+\n+        // look for style files\n+        Iterator styleExtensionsIt = styleExtensions.iterator();\n+        while (styleFile == null && styleExtensionsIt.hasNext()) {\n+            Object ext = styleExtensionsIt.next();\n+            File style = new File(basePath, baseName + \".\" + ext);\n+            if (style.exists()) {\n+                // TODO: deal with multiple style files? for now we just grab the first\n+                styleFile = style;\n+            }\n+        }\n \n-        File[] files = file.getParentFile().listFiles();\n-        if (files != null) {\n-            for (File f : files) {\n-                if (f.equals(file)) {\n-                    continue;\n-                }\n-\n-                if (!f.getName().startsWith(baseName)) {\n-                    continue;\n-                }\n-\n-                if (!f.isFile()) {\n-                    continue;\n-                }\n-\n-                String ext = f.getName().substring(baseName.length());\n-                // once the basename is stripped, extension(s) should be present\n-                if (ext.charAt(0) == '.') {\n-                    if (\".prj\".equalsIgnoreCase(ext)) {\n-                        prjFile = f;\n-                    } else if (styleFile == null && styleExtensions.contains(ext.substring(1))) {\n-                        // TODO: deal with multiple style files? for now we just grab the first\n-                        styleFile = f;\n+        // Looking for supplemental files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b24c21ec26b9e665c0ec87b692cbc475735b7248", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geoserver/geoserver/commit/b24c21ec26b9e665c0ec87b692cbc475735b7248", "committedDate": "2020-09-10T07:44:51Z", "message": "[GEOS-9733]: Importer stop scanning the whole directory when looking for supplemental files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9346eebf922aa680e32cb9cd0f8f0d44539834cc", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geoserver/geoserver/commit/9346eebf922aa680e32cb9cd0f8f0d44539834cc", "committedDate": "2020-09-09T13:46:49Z", "message": "[GEOS-9733]: Importer stop scanning the whole directory when looking for supplemental files"}, "afterCommit": {"oid": "b24c21ec26b9e665c0ec87b692cbc475735b7248", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geoserver/geoserver/commit/b24c21ec26b9e665c0ec87b692cbc475735b7248", "committedDate": "2020-09-10T07:44:51Z", "message": "[GEOS-9733]: Importer stop scanning the whole directory when looking for supplemental files"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1561, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}