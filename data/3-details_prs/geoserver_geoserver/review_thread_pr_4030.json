{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNDY2OTUx", "number": 4030, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjo1MTo0MVrODdZ8ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoyOToxOFrODeeT2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTYwMzYyOnYy", "diffSide": "RIGHT", "path": "src/restconfig/src/test/java/org/geoserver/rest/system/status/MonitorRestTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjo1MTo0MVrOFl_T9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToxNDo0NFrOFmT4-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM3ODkzNQ==", "bodyText": "If my memory serves me well, if a metric is not available in a certain environment (for example the machine doesn't provide a network sensor) the the metric will not be collected. Hence, checking that available metrics have a value makes sense, but checking the size probably not \ud83d\ude31.", "url": "https://github.com/geoserver/geoserver/pull/4030#discussion_r375378935", "createdAt": "2020-02-05T16:51:41Z", "author": {"login": "nmco"}, "path": "src/restconfig/src/test/java/org/geoserver/rest/system/status/MonitorRestTest.java", "diffHunk": "@@ -69,6 +74,41 @@ public void testJsonCallback() throws Exception {\n         assertTrue(metrics.getMetrics().size() >= MetricInfo.values().length);\n     }\n \n+    @Test\n+    public void testJsonValueFieldIsEncoded() throws Exception {\n+        MockHttpServletResponse response =\n+                getAsServletResponse(RestBaseController.ROOT_PATH + \"/about/system-status.json\");\n+        assertEquals(200, response.getStatus());\n+        assertEquals(\"application/json\", response.getContentType());\n+        JSONArray array =\n+                ((JSONObject)\n+                                ((JSONObject) JSONSerializer.toJSON(response.getContentAsString()))\n+                                        .get(\"metrics\"))\n+                        .getJSONArray(\"metric\");\n+        assertTrue(array.size() == MetricInfo.values().length);\n+        for (int i = 0; i < array.size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f185cd2d26538561fe3a297d54694dabc0b57e1b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY4NjY1Mg==", "bodyText": "Thanks for your review @nmco, this has  been fixed", "url": "https://github.com/geoserver/geoserver/pull/4030#discussion_r375686652", "createdAt": "2020-02-06T08:05:20Z", "author": {"login": "taba90"}, "path": "src/restconfig/src/test/java/org/geoserver/rest/system/status/MonitorRestTest.java", "diffHunk": "@@ -69,6 +74,41 @@ public void testJsonCallback() throws Exception {\n         assertTrue(metrics.getMetrics().size() >= MetricInfo.values().length);\n     }\n \n+    @Test\n+    public void testJsonValueFieldIsEncoded() throws Exception {\n+        MockHttpServletResponse response =\n+                getAsServletResponse(RestBaseController.ROOT_PATH + \"/about/system-status.json\");\n+        assertEquals(200, response.getStatus());\n+        assertEquals(\"application/json\", response.getContentType());\n+        JSONArray array =\n+                ((JSONObject)\n+                                ((JSONObject) JSONSerializer.toJSON(response.getContentAsString()))\n+                                        .get(\"metrics\"))\n+                        .getJSONArray(\"metric\");\n+        assertTrue(array.size() == MetricInfo.values().length);\n+        for (int i = 0; i < array.size(); i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM3ODkzNQ=="}, "originalCommit": {"oid": "f185cd2d26538561fe3a297d54694dabc0b57e1b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxNjA4OA==", "bodyText": "Great, thx!", "url": "https://github.com/geoserver/geoserver/pull/4030#discussion_r375716088", "createdAt": "2020-02-06T09:14:44Z", "author": {"login": "nmco"}, "path": "src/restconfig/src/test/java/org/geoserver/rest/system/status/MonitorRestTest.java", "diffHunk": "@@ -69,6 +74,41 @@ public void testJsonCallback() throws Exception {\n         assertTrue(metrics.getMetrics().size() >= MetricInfo.values().length);\n     }\n \n+    @Test\n+    public void testJsonValueFieldIsEncoded() throws Exception {\n+        MockHttpServletResponse response =\n+                getAsServletResponse(RestBaseController.ROOT_PATH + \"/about/system-status.json\");\n+        assertEquals(200, response.getStatus());\n+        assertEquals(\"application/json\", response.getContentType());\n+        JSONArray array =\n+                ((JSONObject)\n+                                ((JSONObject) JSONSerializer.toJSON(response.getContentAsString()))\n+                                        .get(\"metrics\"))\n+                        .getJSONArray(\"metric\");\n+        assertTrue(array.size() == MetricInfo.values().length);\n+        for (int i = 0; i < array.size(); i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM3ODkzNQ=="}, "originalCommit": {"oid": "f185cd2d26538561fe3a297d54694dabc0b57e1b"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjgwNDc0OnYy", "diffSide": "RIGHT", "path": "src/main/src/main/java/org/geoserver/system/status/MetricValue.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoyOToxOFrOFnoEmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo1Nzo0MFrOFokogA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA5NTMyMw==", "bodyText": "This was removed in https://github.com/geoserver/geoserver/pull/3590/files#diff-1e72fa7cb4d8fce2c903e9686f4533d6L41\nWhat's going on? :-D", "url": "https://github.com/geoserver/geoserver/pull/4030#discussion_r377095323", "createdAt": "2020-02-10T14:29:18Z", "author": {"login": "aaime"}, "path": "src/main/src/main/java/org/geoserver/system/status/MetricValue.java", "diffHunk": "@@ -34,6 +34,8 @@\n \n     int priority;\n \n+    ValueHolder holder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fb0727e2e9728e2057f66990b3ae433ed94ff3a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4NzU1Mg==", "bodyText": "@aaime  the removal of ValueHolder caused metric values to not be included in json and xml output format, so I put them back", "url": "https://github.com/geoserver/geoserver/pull/4030#discussion_r378087552", "createdAt": "2020-02-12T07:57:40Z", "author": {"login": "taba90"}, "path": "src/main/src/main/java/org/geoserver/system/status/MetricValue.java", "diffHunk": "@@ -34,6 +34,8 @@\n \n     int priority;\n \n+    ValueHolder holder;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA5NTMyMw=="}, "originalCommit": {"oid": "2fb0727e2e9728e2057f66990b3ae433ed94ff3a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4067, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}