{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNTg2MTMw", "number": 4220, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDo0Nzo1NVrOD52mRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzozMDo1M1rOD8KqKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTg5OTU4OnYy", "diffSide": "RIGHT", "path": "src/wms/src/main/java/org/geoserver/wms/map/RenderedImageMapOutputFormat.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDo0Nzo1NVrOGRWvIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMDoyODoyMlrOGSPBzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MTQ5MA==", "bodyText": "Better than the previous code, but could be even better:\nfinal Feature feature = DataUtilities.first(mapContent.layers().get(0).getFeatureSource().getFeatures().features());", "url": "https://github.com/geoserver/geoserver/pull/4220#discussion_r420851490", "createdAt": "2020-05-06T14:47:55Z", "author": {"login": "aaime"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/RenderedImageMapOutputFormat.java", "diffHunk": "@@ -1029,14 +1030,14 @@ private RenderedImage directRasterRender(\n                 //\n                 // Get the reader\n                 //\n-                final Feature feature =\n-                        mapContent\n-                                .layers()\n-                                .get(0)\n-                                .getFeatureSource()\n-                                .getFeatures()\n-                                .features()\n-                                .next();\n+                final Feature feature;\n+                try (FeatureIterator<?> it =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "978922961fe9ac3157163e1a1b4057e063b4f098"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc3Mzc3NQ==", "bodyText": "done", "url": "https://github.com/geoserver/geoserver/pull/4220#discussion_r421773775", "createdAt": "2020-05-07T20:28:22Z", "author": {"login": "NielsCharlier"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/RenderedImageMapOutputFormat.java", "diffHunk": "@@ -1029,14 +1030,14 @@ private RenderedImage directRasterRender(\n                 //\n                 // Get the reader\n                 //\n-                final Feature feature =\n-                        mapContent\n-                                .layers()\n-                                .get(0)\n-                                .getFeatureSource()\n-                                .getFeatures()\n-                                .features()\n-                                .next();\n+                final Feature feature;\n+                try (FeatureIterator<?> it =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MTQ5MA=="}, "originalCommit": {"oid": "978922961fe9ac3157163e1a1b4057e063b4f098"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTkwNDYwOnYy", "diffSide": "RIGHT", "path": "src/wms/src/test/java/org/geoserver/wms/map/RenderedImageMapOutputFormatTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDo0ODo1NlrOGRWyXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMDoyODoyOFrOGSPCBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MjMxOQ==", "bodyText": "This is supposed to return a blank image, if I understand correctly. If so, assert it using the assertBlank utility method.", "url": "https://github.com/geoserver/geoserver/pull/4220#discussion_r420852319", "createdAt": "2020-05-06T14:48:56Z", "author": {"login": "aaime"}, "path": "src/wms/src/test/java/org/geoserver/wms/map/RenderedImageMapOutputFormatTest.java", "diffHunk": "@@ -1785,6 +1785,21 @@ public void testReprojectionHasNoWhiteLine()\n         assertEquals(width * height, validPixelsCount);\n     }\n \n+    @Test\n+    public void testFaultyStyleDoesntBreak() throws Exception {\n+        MockHttpServletResponse response =\n+                getAsServletResponse(\n+                        \"wms?BBOX=-180,-90,180,90\"\n+                                + \"&styles=raster&layers=cdf:Fifteen&Format=image/png\"\n+                                + \"&request=GetMap\"\n+                                + \"&width=256\"\n+                                + \"&height=256\"\n+                                + \"&srs=EPSG%3A4326\");\n+\n+        BufferedImage image = ImageIO.read(getBinaryInputStream(response));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "978922961fe9ac3157163e1a1b4057e063b4f098"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc3MzgzMA==", "bodyText": "done", "url": "https://github.com/geoserver/geoserver/pull/4220#discussion_r421773830", "createdAt": "2020-05-07T20:28:28Z", "author": {"login": "NielsCharlier"}, "path": "src/wms/src/test/java/org/geoserver/wms/map/RenderedImageMapOutputFormatTest.java", "diffHunk": "@@ -1785,6 +1785,21 @@ public void testReprojectionHasNoWhiteLine()\n         assertEquals(width * height, validPixelsCount);\n     }\n \n+    @Test\n+    public void testFaultyStyleDoesntBreak() throws Exception {\n+        MockHttpServletResponse response =\n+                getAsServletResponse(\n+                        \"wms?BBOX=-180,-90,180,90\"\n+                                + \"&styles=raster&layers=cdf:Fifteen&Format=image/png\"\n+                                + \"&request=GetMap\"\n+                                + \"&width=256\"\n+                                + \"&height=256\"\n+                                + \"&srs=EPSG%3A4326\");\n+\n+        BufferedImage image = ImageIO.read(getBinaryInputStream(response));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MjMxOQ=="}, "originalCommit": {"oid": "978922961fe9ac3157163e1a1b4057e063b4f098"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDE1Nzg2OnYy", "diffSide": "RIGHT", "path": "src/wms/src/main/java/org/geoserver/wms/map/RenderedImageMapOutputFormat.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzozMDo1M1rOGU8MTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzo0MDowOVrOGXTqBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMDg5Mw==", "bodyText": "The report indicated an unclear error was provided, did you wish to provide a clear error (or log warning) here?", "url": "https://github.com/geoserver/geoserver/pull/4220#discussion_r424610893", "createdAt": "2020-05-13T17:30:53Z", "author": {"login": "jodygarnett"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/RenderedImageMapOutputFormat.java", "diffHunk": "@@ -1030,13 +1031,11 @@ private RenderedImage directRasterRender(\n                 // Get the reader\n                 //\n                 final Feature feature =\n-                        mapContent\n-                                .layers()\n-                                .get(0)\n-                                .getFeatureSource()\n-                                .getFeatures()\n-                                .features()\n-                                .next();\n+                        DataUtilities.first(\n+                                mapContent.layers().get(0).getFeatureSource().getFeatures());\n+                if (feature == null || feature.getProperty(\"grid\") == null) {\n+                    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fae173a2ca4c2a77434605ec5063b643b8a0e3a3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxNDc4OA==", "bodyText": "Questions:\n\nThis also only applies to the fast past, did you need a similar check in streaming renderer?\nHow does this work with geometry transformations, where raster is generated on the fly from feature content? Perhaps that is not on the fast path...", "url": "https://github.com/geoserver/geoserver/pull/4220#discussion_r424614788", "createdAt": "2020-05-13T17:37:29Z", "author": {"login": "jodygarnett"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/RenderedImageMapOutputFormat.java", "diffHunk": "@@ -1030,13 +1031,11 @@ private RenderedImage directRasterRender(\n                 // Get the reader\n                 //\n                 final Feature feature =\n-                        mapContent\n-                                .layers()\n-                                .get(0)\n-                                .getFeatureSource()\n-                                .getFeatures()\n-                                .features()\n-                                .next();\n+                        DataUtilities.first(\n+                                mapContent.layers().get(0).getFeatureSource().getFeatures());\n+                if (feature == null || feature.getProperty(\"grid\") == null) {\n+                    return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMDg5Mw=="}, "originalCommit": {"oid": "fae173a2ca4c2a77434605ec5063b643b8a0e3a3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2ODY4MA==", "bodyText": "I don't think there is a need to provide an error per se, because geoserver never does that when your styling doesn't produce any picture. There are many other cases when that can happen (for example a vector style for a raster layer, a style that has rules that somehow doesn't match with any of your data,...). If your WMS image is blank, I think it is the user's responsibility to double check if an appropriate style has been selected. But in this specific case you get an error and a strack trace that might only cause confusion because it provides no information to the user.\nAnd I guess this answers your other questions as well. In most cases, you will get a blank image, which is expected behaviour the way I see it. Only in this case you get the NPE.", "url": "https://github.com/geoserver/geoserver/pull/4220#discussion_r424668680", "createdAt": "2020-05-13T19:08:13Z", "author": {"login": "NielsCharlier"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/RenderedImageMapOutputFormat.java", "diffHunk": "@@ -1030,13 +1031,11 @@ private RenderedImage directRasterRender(\n                 // Get the reader\n                 //\n                 final Feature feature =\n-                        mapContent\n-                                .layers()\n-                                .get(0)\n-                                .getFeatureSource()\n-                                .getFeatures()\n-                                .features()\n-                                .next();\n+                        DataUtilities.first(\n+                                mapContent.layers().get(0).getFeatureSource().getFeatures());\n+                if (feature == null || feature.getProperty(\"grid\") == null) {\n+                    return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMDg5Mw=="}, "originalCommit": {"oid": "fae173a2ca4c2a77434605ec5063b643b8a0e3a3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5MjQ4Ng==", "bodyText": "Okay blank image it is!", "url": "https://github.com/geoserver/geoserver/pull/4220#discussion_r427092486", "createdAt": "2020-05-19T07:40:09Z", "author": {"login": "jodygarnett"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/RenderedImageMapOutputFormat.java", "diffHunk": "@@ -1030,13 +1031,11 @@ private RenderedImage directRasterRender(\n                 // Get the reader\n                 //\n                 final Feature feature =\n-                        mapContent\n-                                .layers()\n-                                .get(0)\n-                                .getFeatureSource()\n-                                .getFeatures()\n-                                .features()\n-                                .next();\n+                        DataUtilities.first(\n+                                mapContent.layers().get(0).getFeatureSource().getFeatures());\n+                if (feature == null || feature.getProperty(\"grid\") == null) {\n+                    return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMDg5Mw=="}, "originalCommit": {"oid": "fae173a2ca4c2a77434605ec5063b643b8a0e3a3"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3973, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}