{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzE0MDUx", "number": 4187, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoyNTozNlrODz1rzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoyODowN1rODz1v7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjgzNTMzOnYy", "diffSide": "RIGHT", "path": "src/extension/importer/rest/src/main/java/org/geoserver/importer/rest/ImportController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoyNTozNlrOGIfeGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoyNTozNlrOGIfeGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1NzQwMA==", "bodyText": "Maybe let's have this in a variable, shared with the else.", "url": "https://github.com/geoserver/geoserver/pull/4187#discussion_r411557400", "createdAt": "2020-04-20T17:25:36Z", "author": {"login": "aaime"}, "path": "src/extension/importer/rest/src/main/java/org/geoserver/importer/rest/ImportController.java", "diffHunk": "@@ -198,10 +198,16 @@ private ImportContext createImport(\n                     context.setTargetWorkspace(ws);\n                 }\n                 if (targetStore != null) {\n-                    StoreInfo ts =\n-                            importer.getCatalog()\n-                                    .getStoreByName(\n-                                            newContext.getTargetStore().getName(), StoreInfo.class);\n+                    WorkspaceInfo ws = context.getTargetWorkspace();\n+                    StoreInfo ts;\n+                    if (ws != null)\n+                        ts =\n+                                cat.getStoreByName(\n+                                        ws, newContext.getTargetStore().getName(), StoreInfo.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c70b4994cac3e7d39d6fc35373ea6bf7950393de"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Njg0NTkwOnYy", "diffSide": "RIGHT", "path": "src/extension/importer/rest/src/test/java/org/geoserver/importer/rest/ImportControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoyODowN1rOGIfksg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoyODowN1rOGIfksg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1OTA5MA==", "bodyText": "Best to do that in a @before, or in a \"finally\", to make sure it's always run (even in case this test start failing, otherwise it might pollute the state and cause other failures, making it all harder to debug).", "url": "https://github.com/geoserver/geoserver/pull/4187#discussion_r411559090", "createdAt": "2020-04-20T17:28:07Z", "author": {"login": "aaime"}, "path": "src/extension/importer/rest/src/test/java/org/geoserver/importer/rest/ImportControllerTest.java", "diffHunk": "@@ -404,4 +404,83 @@ public void testGetImportGeoJSON() throws Exception {\n \n         assertTrue(layer.containsKey(\"bbox\"));\n     }\n+\n+    @Test\n+    public void testPostTargetWithSameStoreNameTwoWs() throws Exception {\n+        createH2DataStore(\"sf\", \"skunkworks\");\n+        // same store name in different ws, to check later that workspace is\n+        // properly checked\n+        createH2DataStore(\"gs\", \"skunkworks\");\n+\n+        String json =\n+                \"{\"\n+                        + \"\\\"import\\\": { \"\n+                        + \"\\\"targetWorkspace\\\": {\"\n+                        + \"\\\"workspace\\\": {\"\n+                        + \"\\\"name\\\": \\\"sf\\\"\"\n+                        + \"}\"\n+                        + \"},\"\n+                        + \"\\\"targetStore\\\": {\"\n+                        + \"\\\"dataStore\\\": {\"\n+                        + \"\\\"name\\\": \\\"skunkworks\\\"\"\n+                        + \"}\"\n+                        + \"}\"\n+                        + \"}\"\n+                        + \"}\";\n+\n+        MockHttpServletResponse resp =\n+                postAsServletResponse(\n+                        RestBaseController.ROOT_PATH + \"/imports\", json, \"application/json\");\n+        assertEquals(201, resp.getStatus());\n+        assertNotNull(resp.getHeader(\"Location\"));\n+\n+        int id = lastId();\n+        assertTrue(resp.getHeader(\"Location\").endsWith(\"/imports/\" + id));\n+\n+        ImportContext ctx = importer.getContext(id);\n+        assertNotNull(ctx);\n+        assertNotNull(ctx.getTargetWorkspace());\n+        // check that the context got the right workspace\n+        assertEquals(\"sf\", ctx.getTargetWorkspace().getName());\n+        assertNotNull(ctx.getTargetStore());\n+        assertEquals(\"skunkworks\", ctx.getTargetStore().getName());\n+        resp = postAsServletResponse(RestBaseController.ROOT_PATH + \"/imports/\" + id, \"\");\n+        assertEquals(204, resp.getStatus());\n+\n+        json =\n+                \"{\"\n+                        + \"\\\"import\\\": { \"\n+                        + \"\\\"targetWorkspace\\\": {\"\n+                        + \"\\\"workspace\\\": {\"\n+                        + \"\\\"name\\\": \\\"gs\\\"\"\n+                        + \"}\"\n+                        + \"},\"\n+                        + \"\\\"targetStore\\\": {\"\n+                        + \"\\\"dataStore\\\": {\"\n+                        + \"\\\"name\\\": \\\"skunkworks\\\"\"\n+                        + \"}\"\n+                        + \"}\"\n+                        + \"}\"\n+                        + \"}\";\n+\n+        resp =\n+                postAsServletResponse(\n+                        RestBaseController.ROOT_PATH + \"/imports\", json, \"application/json\");\n+        assertEquals(201, resp.getStatus());\n+        assertNotNull(resp.getHeader(\"Location\"));\n+\n+        id = lastId();\n+        assertTrue(resp.getHeader(\"Location\").endsWith(\"/imports/\" + id));\n+\n+        ctx = importer.getContext(id);\n+        assertNotNull(ctx);\n+        assertNotNull(ctx.getTargetWorkspace());\n+        // check that the context got the right workspace\n+        assertEquals(\"gs\", ctx.getTargetWorkspace().getName());\n+        assertNotNull(ctx.getTargetStore());\n+        assertEquals(\"skunkworks\", ctx.getTargetStore().getName());\n+        resp = postAsServletResponse(RestBaseController.ROOT_PATH + \"/imports/\" + id, \"\");\n+        assertEquals(204, resp.getStatus());\n+        removeStore(\"gs\", \"skunkworks\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c70b4994cac3e7d39d6fc35373ea6bf7950393de"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4058, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}