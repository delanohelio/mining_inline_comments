{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDcwOTM4", "number": 4055, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoxMzo0NVrODft3Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyODo0OVrODfuGrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTgzODY3OnYy", "diffSide": "RIGHT", "path": "src/extension/app-schema/app-schema-oracle-test/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoxMzo0NVrOFplbWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOToyMzo1MFrOFpwL5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTE0Ng==", "bodyText": "Looks something is strange here whit the formatting, could you double check @fernandor777?", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379149146", "createdAt": "2020-02-13T22:13:45Z", "author": {"login": "nmco"}, "path": "src/extension/app-schema/app-schema-oracle-test/pom.xml", "diffHunk": "@@ -157,6 +157,21 @@\n             <version>2.0.0-1</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+\t     \t<groupId>com.fasterxml.jackson.core</groupId>\n+\t     \t<artifactId>jackson-core</artifactId>\n+\t     \t<scope>test</scope>\n+\t   \t</dependency>\n+\t   \t<dependency>\n+\t\t    <groupId>com.fasterxml.jackson.core</groupId>\n+\t\t    <artifactId>jackson-annotations</artifactId>\n+\t\t    <scope>test</scope>\n+\t    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2ODExMA==", "bodyText": "Holy tabs batman, fixing.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379168110", "createdAt": "2020-02-13T23:03:12Z", "author": {"login": "fernandor777"}, "path": "src/extension/app-schema/app-schema-oracle-test/pom.xml", "diffHunk": "@@ -157,6 +157,21 @@\n             <version>2.0.0-1</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+\t     \t<groupId>com.fasterxml.jackson.core</groupId>\n+\t     \t<artifactId>jackson-core</artifactId>\n+\t     \t<scope>test</scope>\n+\t   \t</dependency>\n+\t   \t<dependency>\n+\t\t    <groupId>com.fasterxml.jackson.core</groupId>\n+\t\t    <artifactId>jackson-annotations</artifactId>\n+\t\t    <scope>test</scope>\n+\t    </dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTE0Ng=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyNTQxNQ==", "bodyText": "\ud83c\udfb8", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379325415", "createdAt": "2020-02-14T09:23:50Z", "author": {"login": "nmco"}, "path": "src/extension/app-schema/app-schema-oracle-test/pom.xml", "diffHunk": "@@ -157,6 +157,21 @@\n             <version>2.0.0-1</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+\t     \t<groupId>com.fasterxml.jackson.core</groupId>\n+\t     \t<artifactId>jackson-core</artifactId>\n+\t     \t<scope>test</scope>\n+\t   \t</dependency>\n+\t   \t<dependency>\n+\t\t    <groupId>com.fasterxml.jackson.core</groupId>\n+\t\t    <artifactId>jackson-annotations</artifactId>\n+\t\t    <scope>test</scope>\n+\t    </dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTE0Ng=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTgzOTcwOnYy", "diffSide": "RIGHT", "path": "src/extension/app-schema/app-schema-postgis-test/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoxNDowNlrOFplb9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowMjo1N1rOFpmlEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTMwMw==", "bodyText": "Same here \ud83d\ude31.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379149303", "createdAt": "2020-02-13T22:14:06Z", "author": {"login": "nmco"}, "path": "src/extension/app-schema/app-schema-postgis-test/pom.xml", "diffHunk": "@@ -157,6 +157,21 @@\n             <version>2.0.0-1</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+\t     \t<groupId>com.fasterxml.jackson.core</groupId>\n+\t     \t<artifactId>jackson-core</artifactId>\n+\t     \t<scope>test</scope>\n+\t   \t</dependency>\n+\t   \t<dependency>\n+\t\t    <groupId>com.fasterxml.jackson.core</groupId>\n+\t\t    <artifactId>jackson-annotations</artifactId>\n+\t\t    <scope>test</scope>\n+\t    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2ODAxNg==", "bodyText": "fixed", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379168016", "createdAt": "2020-02-13T23:02:57Z", "author": {"login": "fernandor777"}, "path": "src/extension/app-schema/app-schema-postgis-test/pom.xml", "diffHunk": "@@ -157,6 +157,21 @@\n             <version>2.0.0-1</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+\t     \t<groupId>com.fasterxml.jackson.core</groupId>\n+\t     \t<artifactId>jackson-core</artifactId>\n+\t     \t<scope>test</scope>\n+\t   \t</dependency>\n+\t   \t<dependency>\n+\t\t    <groupId>com.fasterxml.jackson.core</groupId>\n+\t\t    <artifactId>jackson-annotations</artifactId>\n+\t\t    <scope>test</scope>\n+\t    </dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTMwMw=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg0MDM0OnYy", "diffSide": "RIGHT", "path": "src/extension/app-schema/app-schema-test/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoxNDoyMFrOFplcXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowMjo1MVrOFpmk9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTQwNw==", "bodyText": "Same here \ud83d\ude40.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379149407", "createdAt": "2020-02-13T22:14:20Z", "author": {"login": "nmco"}, "path": "src/extension/app-schema/app-schema-test/pom.xml", "diffHunk": "@@ -163,6 +163,21 @@\n             <version>2.0.0-1</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+\t     \t<groupId>com.fasterxml.jackson.core</groupId>\n+\t     \t<artifactId>jackson-core</artifactId>\n+\t     \t<scope>test</scope>\n+\t   \t</dependency>\n+\t   \t<dependency>\n+\t\t    <groupId>com.fasterxml.jackson.core</groupId>\n+\t\t    <artifactId>jackson-annotations</artifactId>\n+\t\t    <scope>test</scope>\n+\t    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTcyNw==", "bodyText": "Looks like this is the last one, good I run out of screaming icons \ud83d\ude0c.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379149727", "createdAt": "2020-02-13T22:15:05Z", "author": {"login": "nmco"}, "path": "src/extension/app-schema/app-schema-test/pom.xml", "diffHunk": "@@ -163,6 +163,21 @@\n             <version>2.0.0-1</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+\t     \t<groupId>com.fasterxml.jackson.core</groupId>\n+\t     \t<artifactId>jackson-core</artifactId>\n+\t     \t<scope>test</scope>\n+\t   \t</dependency>\n+\t   \t<dependency>\n+\t\t    <groupId>com.fasterxml.jackson.core</groupId>\n+\t\t    <artifactId>jackson-annotations</artifactId>\n+\t\t    <scope>test</scope>\n+\t    </dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTQwNw=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2Nzk4OA==", "bodyText": "fixed", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379167988", "createdAt": "2020-02-13T23:02:51Z", "author": {"login": "fernandor777"}, "path": "src/extension/app-schema/app-schema-test/pom.xml", "diffHunk": "@@ -163,6 +163,21 @@\n             <version>2.0.0-1</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+\t     \t<groupId>com.fasterxml.jackson.core</groupId>\n+\t     \t<artifactId>jackson-core</artifactId>\n+\t     \t<scope>test</scope>\n+\t   \t</dependency>\n+\t   \t<dependency>\n+\t\t    <groupId>com.fasterxml.jackson.core</groupId>\n+\t\t    <artifactId>jackson-annotations</artifactId>\n+\t\t    <scope>test</scope>\n+\t    </dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0OTQwNw=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg0NTY4OnYy", "diffSide": "RIGHT", "path": "src/extension/app-schema/app-schema-test/src/test/java/org/geoserver/test/NormalizedMultiValuesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoxNjoyMVrOFplfuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowMzozN1rOFpml8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MDI2Nw==", "bodyText": "Multi-values is only support with JDBC right?", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379150267", "createdAt": "2020-02-13T22:16:21Z", "author": {"login": "nmco"}, "path": "src/extension/app-schema/app-schema-test/src/test/java/org/geoserver/test/NormalizedMultiValuesTest.java", "diffHunk": "@@ -258,14 +270,44 @@ public void testGetAllNormalizedMultiValuesWfsJson20() throws Exception {\n                         + \"&outputFormat=application/json\";\n         JSONObject json = (JSONObject) getAsJSON(request);\n         JSONArray features = json.getJSONArray(\"features\");\n-        assertEquals(2, features.size());\n+        assertEquals(3, features.size());\n         // check stations json content\n         JSONObject station = getStationById(features, \"st.1\");\n         assertNotNull(station);\n         checkStationJson1(station);\n         station = getStationById(features, \"st.2\");\n         assertNotNull(station);\n         checkStationJson2(station);\n+        station = getStationById(features, \"st.3\");\n+        assertNotNull(station);\n+        checkStationJson3(station);\n+    }\n+\n+    @Test\n+    public void testGetAllNormalizedMultiValuesWfsJsonFormat20() throws Exception {\n+        // check if this is an online test with a JDBC based data store\n+        if (notJdbcBased()) {\n+            // not a JDBC online test\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2ODI0MQ==", "bodyText": "Right.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379168241", "createdAt": "2020-02-13T23:03:37Z", "author": {"login": "fernandor777"}, "path": "src/extension/app-schema/app-schema-test/src/test/java/org/geoserver/test/NormalizedMultiValuesTest.java", "diffHunk": "@@ -258,14 +270,44 @@ public void testGetAllNormalizedMultiValuesWfsJson20() throws Exception {\n                         + \"&outputFormat=application/json\";\n         JSONObject json = (JSONObject) getAsJSON(request);\n         JSONArray features = json.getJSONArray(\"features\");\n-        assertEquals(2, features.size());\n+        assertEquals(3, features.size());\n         // check stations json content\n         JSONObject station = getStationById(features, \"st.1\");\n         assertNotNull(station);\n         checkStationJson1(station);\n         station = getStationById(features, \"st.2\");\n         assertNotNull(station);\n         checkStationJson2(station);\n+        station = getStationById(features, \"st.3\");\n+        assertNotNull(station);\n+        checkStationJson3(station);\n+    }\n+\n+    @Test\n+    public void testGetAllNormalizedMultiValuesWfsJsonFormat20() throws Exception {\n+        // check if this is an online test with a JDBC based data store\n+        if (notJdbcBased()) {\n+            // not a JDBC online test\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MDI2Nw=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg1MjEyOnYy", "diffSide": "RIGHT", "path": "src/extension/app-schema/app-schema-test/src/test/java/org/geoserver/test/NormalizedMultiValuesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoxODo1NFrOFpljwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo0MDo1MlrOFpmF0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MTI5Ng==", "bodyText": "I see so you parse the JSON, since no repeated keys are allowed if the parsing passes it means that the repeat keys were encoded as arrays. But still I will add an explicit check validating that we an array with the expected entities inside it.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379151296", "createdAt": "2020-02-13T22:18:54Z", "author": {"login": "nmco"}, "path": "src/extension/app-schema/app-schema-test/src/test/java/org/geoserver/test/NormalizedMultiValuesTest.java", "diffHunk": "@@ -258,14 +270,44 @@ public void testGetAllNormalizedMultiValuesWfsJson20() throws Exception {\n                         + \"&outputFormat=application/json\";\n         JSONObject json = (JSONObject) getAsJSON(request);\n         JSONArray features = json.getJSONArray(\"features\");\n-        assertEquals(2, features.size());\n+        assertEquals(3, features.size());\n         // check stations json content\n         JSONObject station = getStationById(features, \"st.1\");\n         assertNotNull(station);\n         checkStationJson1(station);\n         station = getStationById(features, \"st.2\");\n         assertNotNull(station);\n         checkStationJson2(station);\n+        station = getStationById(features, \"st.3\");\n+        assertNotNull(station);\n+        checkStationJson3(station);\n+    }\n+\n+    @Test\n+    public void testGetAllNormalizedMultiValuesWfsJsonFormat20() throws Exception {\n+        // check if this is an online test with a JDBC based data store\n+        if (notJdbcBased()) {\n+            // not a JDBC online test\n+            return;\n+        }\n+        // execute the WFS 2.0 request\n+        String request =\n+                \"wfs?request=GetFeature&version=2.0&typename=st_gml32:Station_gml32\"\n+                        + \"&outputFormat=application/json\";\n+        MockHttpServletResponse response = getAsServletResponse(request);\n+\n+        String content = response.getContentAsString();\n+        validateJsonOutput(content);\n+    }\n+\n+    private void validateJsonOutput(String jsonString) {\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        objectMapper.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);\n+        try {\n+            objectMapper.readTree(jsonString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2MDAxOQ==", "bodyText": "I only checked repeated keys because complete data and structure check is already made on other json tests added on recent PR.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379160019", "createdAt": "2020-02-13T22:40:52Z", "author": {"login": "fernandor777"}, "path": "src/extension/app-schema/app-schema-test/src/test/java/org/geoserver/test/NormalizedMultiValuesTest.java", "diffHunk": "@@ -258,14 +270,44 @@ public void testGetAllNormalizedMultiValuesWfsJson20() throws Exception {\n                         + \"&outputFormat=application/json\";\n         JSONObject json = (JSONObject) getAsJSON(request);\n         JSONArray features = json.getJSONArray(\"features\");\n-        assertEquals(2, features.size());\n+        assertEquals(3, features.size());\n         // check stations json content\n         JSONObject station = getStationById(features, \"st.1\");\n         assertNotNull(station);\n         checkStationJson1(station);\n         station = getStationById(features, \"st.2\");\n         assertNotNull(station);\n         checkStationJson2(station);\n+        station = getStationById(features, \"st.3\");\n+        assertNotNull(station);\n+        checkStationJson3(station);\n+    }\n+\n+    @Test\n+    public void testGetAllNormalizedMultiValuesWfsJsonFormat20() throws Exception {\n+        // check if this is an online test with a JDBC based data store\n+        if (notJdbcBased()) {\n+            // not a JDBC online test\n+            return;\n+        }\n+        // execute the WFS 2.0 request\n+        String request =\n+                \"wfs?request=GetFeature&version=2.0&typename=st_gml32:Station_gml32\"\n+                        + \"&outputFormat=application/json\";\n+        MockHttpServletResponse response = getAsServletResponse(request);\n+\n+        String content = response.getContentAsString();\n+        validateJsonOutput(content);\n+    }\n+\n+    private void validateJsonOutput(String jsonString) {\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        objectMapper.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);\n+        try {\n+            objectMapper.readTree(jsonString);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MTI5Ng=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg2NjA2OnYy", "diffSide": "RIGHT", "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyNDoyN1rOFplsZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzoxNDo0OFrOFpm0JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MzUxMQ==", "bodyText": "@fernandor777 look at he rest of the code and try to apply the same patterns :black_flag, more precisely in this case it means:\n\nisolate this behavior in an helper method, this else shoudl be a single line\ndocument properly, the comment above doesn't seem to match what you are doing\nif possible avoid this psychedelic Java 8 streams usage, it has performance personalities and it's not clear at all", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379153511", "createdAt": "2020-02-13T22:24:27Z", "author": {"login": "nmco"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -244,7 +246,24 @@ private void encodePropertiesByType(\n                 encodeLinkedFeatures(descriptor, linkedFeatures);\n             } else {\n                 // no chained or linked features just encode each property\n-                properties.forEach(this::encodeProperty);\n+                String attributeName = descriptor.getName().getLocalPart();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MTg3Nw==", "bodyText": "refactored", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379171877", "createdAt": "2020-02-13T23:14:48Z", "author": {"login": "fernandor777"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -244,7 +246,24 @@ private void encodePropertiesByType(\n                 encodeLinkedFeatures(descriptor, linkedFeatures);\n             } else {\n                 // no chained or linked features just encode each property\n-                properties.forEach(this::encodeProperty);\n+                String attributeName = descriptor.getName().getLocalPart();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MzUxMQ=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg2NzEzOnYy", "diffSide": "RIGHT", "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyNDo1MFrOFpltFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyNDo1MFrOFpltFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MzY4Nw==", "bodyText": "Is this second else needed waht's going on here?", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379153687", "createdAt": "2020-02-13T22:24:50Z", "author": {"login": "nmco"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -244,7 +246,24 @@ private void encodePropertiesByType(\n                 encodeLinkedFeatures(descriptor, linkedFeatures);\n             } else {\n                 // no chained or linked features just encode each property\n-                properties.forEach(this::encodeProperty);\n+                String attributeName = descriptor.getName().getLocalPart();\n+                if (properties.size() > 1\n+                        && properties\n+                                .stream()\n+                                .allMatch(\n+                                        prop ->\n+                                                Objects.equals(\n+                                                        attributeName,\n+                                                        prop.getName().getLocalPart()))) {\n+                    jsonWriter.key(attributeName).array();\n+                    properties.forEach(\n+                            prop ->\n+                                    encodeProperty(\n+                                            INSIDE_ARRAY_ATTRIBUTE, prop, getAttributes(prop)));\n+                    jsonWriter.endArray();\n+                } else {\n+                    properties.forEach(this::encodeProperty);\n+                }\n             }\n         } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg2OTIxOnYy", "diffSide": "RIGHT", "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyNTozOVrOFpluWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowNToyOFrOFpmoMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDAxMQ==", "bodyText": "What's this?", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379154011", "createdAt": "2020-02-13T22:25:39Z", "author": {"login": "nmco"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -45,6 +46,7 @@\n \n     private static Class NON_FEATURE_TYPE_PROXY;\n     private static final String DATATYPE = \"@dataType\";\n+    private static final String INSIDE_ARRAY_ATTRIBUTE = \"${inside-array}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2ODgxNg==", "bodyText": "Adding this as comment:\nA string constant for representing a not needed key name because object is\nbeing added inside an already named json array", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379168816", "createdAt": "2020-02-13T23:05:28Z", "author": {"login": "fernandor777"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -45,6 +46,7 @@\n \n     private static Class NON_FEATURE_TYPE_PROXY;\n     private static final String DATATYPE = \"@dataType\";\n+    private static final String INSIDE_ARRAY_ATTRIBUTE = \"${inside-array}\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDAxMQ=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg3MjAyOnYy", "diffSide": "RIGHT", "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyNjoyOVrOFplv9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzoyOTo0MFrOFpnG2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDQyMA==", "bodyText": "I would have used an if with brackets and put a proper explaining what it means the branch being passed.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379154420", "createdAt": "2020-02-13T22:26:29Z", "author": {"login": "nmco"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -274,8 +293,8 @@ private void encodeLinkedFeatures(\n     /** Encodes a list of features (chained features) as a JSON array. */\n     private void encodeChainedFeatures(String attributeName, List<Feature> chainedFeatures) {\n         // start the JSON object\n-        jsonWriter.key(attributeName);\n-        jsonWriter.array();\n+        key(attributeName);\n+        if (!isInsideArrayAttributeName(attributeName)) jsonWriter.array();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3NjY2Ng==", "bodyText": "Agreed, fixed", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379176666", "createdAt": "2020-02-13T23:29:40Z", "author": {"login": "fernandor777"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -274,8 +293,8 @@ private void encodeLinkedFeatures(\n     /** Encodes a list of features (chained features) as a JSON array. */\n     private void encodeChainedFeatures(String attributeName, List<Feature> chainedFeatures) {\n         // start the JSON object\n-        jsonWriter.key(attributeName);\n-        jsonWriter.array();\n+        key(attributeName);\n+        if (!isInsideArrayAttributeName(attributeName)) jsonWriter.array();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDQyMA=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg3MjkyOnYy", "diffSide": "RIGHT", "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyNjo0OFrOFplwjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzoyOTo0OFrOFpnHBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDU3NQ==", "bodyText": "No idea what this is, could you add documentation?", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379154575", "createdAt": "2020-02-13T22:26:48Z", "author": {"login": "nmco"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -288,7 +307,11 @@ private void encodeChainedFeatures(String attributeName, List<Feature> chainedFe\n             }\n         }\n         // end the JSON chained features array\n-        jsonWriter.endArray();\n+        if (!isInsideArrayAttributeName(attributeName)) jsonWriter.endArray();\n+    }\n+\n+    private boolean isInsideArrayAttributeName(String attributeName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3NjcxMQ==", "bodyText": "Added", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379176711", "createdAt": "2020-02-13T23:29:48Z", "author": {"login": "fernandor777"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -288,7 +307,11 @@ private void encodeChainedFeatures(String attributeName, List<Feature> chainedFe\n             }\n         }\n         // end the JSON chained features array\n-        jsonWriter.endArray();\n+        if (!isInsideArrayAttributeName(attributeName)) jsonWriter.endArray();\n+    }\n+\n+    private boolean isInsideArrayAttributeName(String attributeName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDU3NQ=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg3NDA0OnYy", "diffSide": "RIGHT", "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyNzoxNFrOFplxPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyNzoxNFrOFplxPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDc1MA==", "bodyText": "Thx!", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379154750", "createdAt": "2020-02-13T22:27:14Z", "author": {"login": "nmco"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -374,17 +397,22 @@ static boolean checkIfFeatureIsLinked(Property property, Map<NameImpl, String> a\n \n     /**\n      * Encode a feature property, we only support complex attributes and simple attributes, if\n-     * another tye of attribute is used an exception will be throw.\n+     * another type of attribute is used an exception will be throw.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg3NTM1OnYy", "diffSide": "RIGHT", "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyNzo0MlrOFplyCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzozMjowMlrOFpnKVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDk1Mg==", "bodyText": "Please add Javadoc.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379154952", "createdAt": "2020-02-13T22:27:42Z", "author": {"login": "nmco"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -374,17 +397,22 @@ static boolean checkIfFeatureIsLinked(Property property, Map<NameImpl, String> a\n \n     /**\n      * Encode a feature property, we only support complex attributes and simple attributes, if\n-     * another tye of attribute is used an exception will be throw.\n+     * another type of attribute is used an exception will be throw.\n      */\n-    @SuppressWarnings(\"unchecked\")\n     private void encodeProperty(Property property) {\n         // these extra attributes should be seen as XML attributes\n-        Map<NameImpl, Object> attributes =\n-                (Map<NameImpl, Object>) property.getUserData().get(Attributes.class);\n+        Map<NameImpl, Object> attributes = getAttributes(property);\n         String attributeName = property.getName().getLocalPart();\n         encodeProperty(attributeName, property, attributes);\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private Map<NameImpl, Object> getAttributes(Property property) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3NzU1Nw==", "bodyText": "added", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379177557", "createdAt": "2020-02-13T23:32:02Z", "author": {"login": "fernandor777"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -374,17 +397,22 @@ static boolean checkIfFeatureIsLinked(Property property, Map<NameImpl, String> a\n \n     /**\n      * Encode a feature property, we only support complex attributes and simple attributes, if\n-     * another tye of attribute is used an exception will be throw.\n+     * another type of attribute is used an exception will be throw.\n      */\n-    @SuppressWarnings(\"unchecked\")\n     private void encodeProperty(Property property) {\n         // these extra attributes should be seen as XML attributes\n-        Map<NameImpl, Object> attributes =\n-                (Map<NameImpl, Object>) property.getUserData().get(Attributes.class);\n+        Map<NameImpl, Object> attributes = getAttributes(property);\n         String attributeName = property.getName().getLocalPart();\n         encodeProperty(attributeName, property, attributes);\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private Map<NameImpl, Object> getAttributes(Property property) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDk1Mg=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg3ODIxOnYy", "diffSide": "RIGHT", "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyODo0OVrOFplz6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzozNDo1NlrOFpnOZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NTQzNA==", "bodyText": "Please add documentation, this pattern is already strange enough \ud83d\ude0b.", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379155434", "createdAt": "2020-02-13T22:28:49Z", "author": {"login": "nmco"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -618,6 +648,12 @@ private void encodeSimpleAttribute(\n         jsonWriter.endObject();\n     }\n \n+    private void key(String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3ODU5OA==", "bodyText": "added", "url": "https://github.com/geoserver/geoserver/pull/4055#discussion_r379178598", "createdAt": "2020-02-13T23:34:56Z", "author": {"login": "fernandor777"}, "path": "src/wfs/src/main/java/org/geoserver/wfs/json/ComplexGeoJsonWriter.java", "diffHunk": "@@ -618,6 +648,12 @@ private void encodeSimpleAttribute(\n         jsonWriter.endObject();\n     }\n \n+    private void key(String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NTQzNA=="}, "originalCommit": {"oid": "bdf2b089ee22f338633f9fe1d926622f20465f9a"}, "originalPosition": 127}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4084, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}