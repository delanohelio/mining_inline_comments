{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMTE5MzMx", "number": 4291, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoxMzozMlrOEFh8Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoyMzowN1rOEFiK7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjM0NDE0OnYy", "diffSide": "RIGHT", "path": "src/extension/csw/core/src/test/java/org/geoserver/csw/store/internal/LayerGroupTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoxMzozMlrOGjxktw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoxMzozMlrOGjxktw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2NTU1OQ==", "bodyText": "Please comment again.", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r440165559", "createdAt": "2020-06-15T13:13:32Z", "author": {"login": "aaime"}, "path": "src/extension/csw/core/src/test/java/org/geoserver/csw/store/internal/LayerGroupTest.java", "diffHunk": "@@ -55,7 +55,7 @@ public void testRecords() throws Exception {\n                 \"csw?service=CSW&version=2.0.2&request=GetRecords&typeNames=csw:Record\"\n                         + \"&resultType=results&elementSetName=full&maxRecords=100\";\n         Document d = getAsDOM(request);\n-        // print(d);\n+        print(d);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9038903c42868bfbe86759a573803b334b6f42"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjM0OTczOnYy", "diffSide": "RIGHT", "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoxNTowNVrOGjxoUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoxNTowNVrOGjxoUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2NjQ4MQ==", "bodyText": "Can you split this code a bit, so that it does not end up being nested so much? Creating a separate inner class would probably do the trick", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r440166481", "createdAt": "2020-06-15T13:15:05Z", "author": {"login": "aaime"}, "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java", "diffHunk": "@@ -90,4 +105,55 @@ protected void closeIterator(Iterator<Feature> close) {}\n         MemoryFeatureCollection memory = new MemoryFeatureCollection(getSchema(), features);\n         return memory.sort(order);\n     }\n+\n+    private Filter catalogFilter() {\n+\n+        // ignore catalog info's without id\n+        Filter result =\n+                ff.and(filter, ff.not(ff.isNull(mapping.getIdentifierElement().getContent())));\n+\n+        // build filter compatible with layergroups and resources\n+        result =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9038903c42868bfbe86759a573803b334b6f42"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjM1MDkyOnYy", "diffSide": "RIGHT", "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoxNToyNFrOGjxpDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoxNToyNFrOGjxpDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2NjY3MA==", "bodyText": "Same as above, split code a bit.", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r440166670", "createdAt": "2020-06-15T13:15:24Z", "author": {"login": "aaime"}, "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java", "diffHunk": "@@ -90,4 +105,55 @@ protected void closeIterator(Iterator<Feature> close) {}\n         MemoryFeatureCollection memory = new MemoryFeatureCollection(getSchema(), features);\n         return memory.sort(order);\n     }\n+\n+    private Filter catalogFilter() {\n+\n+        // ignore catalog info's without id\n+        Filter result =\n+                ff.and(filter, ff.not(ff.isNull(mapping.getIdentifierElement().getContent())));\n+\n+        // build filter compatible with layergroups and resources\n+        result =\n+                ff.and(\n+                        ff.equals(ff.property(\"advertised\"), ff.literal(true)),\n+                        ff.or(\n+                                /* Layergroup Filter */\n+                                ff.and(\n+                                        ff.equals(\n+                                                ff.property(\"type\"),\n+                                                ff.literal(PublishedType.GROUP)),\n+                                        result),\n+                                /* Resource Filter */\n+                                ff.and(\n+                                        ff.notEqual(\n+                                                ff.property(\"type\"),\n+                                                ff.literal(PublishedType.GROUP)),\n+                                        (Filter)\n+                                                result.accept(\n+                                                        new DuplicatingFilterVisitor() {\n+\n+                                                            public Object visit(\n+                                                                    PropertyName expression,\n+                                                                    Object extraData) {\n+                                                                return getFactory(extraData)\n+                                                                        .property(\n+                                                                                \"resource.\"\n+                                                                                        + expression\n+                                                                                                .getPropertyName(),\n+                                                                                expression\n+                                                                                        .getNamespaceContext());\n+                                                            }\n+                                                        },\n+                                                        null))));\n+        return result;\n+    }\n+\n+    @Override\n+    public int size() {\n+        return Math.min(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9038903c42868bfbe86759a573803b334b6f42"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjM4MTg5OnYy", "diffSide": "RIGHT", "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureIterator.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoyMzowN1rOGjx78A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDowMjoyNlrOGniRoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MTUwNA==", "bodyText": "I know it was already using the CatalogFacade but, this seems like a grave issue... dodging the catalog means no security is applied, anyone can see every layer regardless of what the security subsystem says?\nThe catalog offers a similar list method, it's the one that should be used instead (and I believe that would also account for \"advertised\", along with workspace specific services and the like).", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r440171504", "createdAt": "2020-06-15T13:23:07Z", "author": {"login": "aaime"}, "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureIterator.java", "diffHunk": "@@ -94,107 +79,46 @@ public CatalogStoreFeatureIterator(\n             RecordDescriptor outputRecordDescriptor,\n             Map<String, String> interpolationProperties) {\n         this.interpolationProperties = interpolationProperties;\n-        this.offset = offset;\n-        this.count = count;\n         this.sortOrder = sortOrder;\n         this.filter = filter;\n         catalogFacade = catalog.getFacade();\n         this.mapping = mapping;\n \n-        Filter advertised = ff.equals(ff.property(\"advertised\"), ff.literal(true));\n-\n-        layerIt =\n-                catalogFacade.list(\n-                        ResourceInfo.class, ff.and(filter, advertised), null, null, sortOrder);\n+        it = catalogFacade.list(PublishedInfo.class, filter, offset, count, sortOrder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9038903c42868bfbe86759a573803b334b6f42"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MDQwNQ==", "bodyText": "That is a good point. However, it seems, strangely enough, that the Catalog list method only allows a single SortOrder, while the facade method allows multiple. CSW requires multiple sorts. Fixing this security leak would therefore require a catalog API change. ouch :/", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r441170405", "createdAt": "2020-06-16T22:10:03Z", "author": {"login": "NielsCharlier"}, "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureIterator.java", "diffHunk": "@@ -94,107 +79,46 @@ public CatalogStoreFeatureIterator(\n             RecordDescriptor outputRecordDescriptor,\n             Map<String, String> interpolationProperties) {\n         this.interpolationProperties = interpolationProperties;\n-        this.offset = offset;\n-        this.count = count;\n         this.sortOrder = sortOrder;\n         this.filter = filter;\n         catalogFacade = catalog.getFacade();\n         this.mapping = mapping;\n \n-        Filter advertised = ff.equals(ff.property(\"advertised\"), ff.literal(true));\n-\n-        layerIt =\n-                catalogFacade.list(\n-                        ResourceInfo.class, ff.and(filter, advertised), null, null, sortOrder);\n+        it = catalogFacade.list(PublishedInfo.class, filter, offset, count, sortOrder);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MTUwNA=="}, "originalCommit": {"oid": "1f9038903c42868bfbe86759a573803b334b6f42"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0MzI4NQ==", "bodyText": "Hmm.. never mind, it seems that what you get there is a SecuredCatalogFacade, which is applying security. Never mind this one, but please check the other two feedbacks.", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r443643285", "createdAt": "2020-06-22T15:27:58Z", "author": {"login": "aaime"}, "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureIterator.java", "diffHunk": "@@ -94,107 +79,46 @@ public CatalogStoreFeatureIterator(\n             RecordDescriptor outputRecordDescriptor,\n             Map<String, String> interpolationProperties) {\n         this.interpolationProperties = interpolationProperties;\n-        this.offset = offset;\n-        this.count = count;\n         this.sortOrder = sortOrder;\n         this.filter = filter;\n         catalogFacade = catalog.getFacade();\n         this.mapping = mapping;\n \n-        Filter advertised = ff.equals(ff.property(\"advertised\"), ff.literal(true));\n-\n-        layerIt =\n-                catalogFacade.list(\n-                        ResourceInfo.class, ff.and(filter, advertised), null, null, sortOrder);\n+        it = catalogFacade.list(PublishedInfo.class, filter, offset, count, sortOrder);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MTUwNA=="}, "originalCommit": {"oid": "1f9038903c42868bfbe86759a573803b334b6f42"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwOTIxNg==", "bodyText": "Ok. I see the securecatalog does have a list with multi-sortby method to support this. It should ideally be added to the catalog interface as well.", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r444109216", "createdAt": "2020-06-23T10:02:26Z", "author": {"login": "NielsCharlier"}, "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureIterator.java", "diffHunk": "@@ -94,107 +79,46 @@ public CatalogStoreFeatureIterator(\n             RecordDescriptor outputRecordDescriptor,\n             Map<String, String> interpolationProperties) {\n         this.interpolationProperties = interpolationProperties;\n-        this.offset = offset;\n-        this.count = count;\n         this.sortOrder = sortOrder;\n         this.filter = filter;\n         catalogFacade = catalog.getFacade();\n         this.mapping = mapping;\n \n-        Filter advertised = ff.equals(ff.property(\"advertised\"), ff.literal(true));\n-\n-        layerIt =\n-                catalogFacade.list(\n-                        ResourceInfo.class, ff.and(filter, advertised), null, null, sortOrder);\n+        it = catalogFacade.list(PublishedInfo.class, filter, offset, count, sortOrder);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MTUwNA=="}, "originalCommit": {"oid": "1f9038903c42868bfbe86759a573803b334b6f42"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3998, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}