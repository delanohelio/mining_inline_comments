{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMTk4NjMw", "number": 4300, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzowMDowMVrOEFho3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowMDowMFrOEHop5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjI5NDcxOnYy", "diffSide": "RIGHT", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzowMDowMVrOGjxFTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjowMzo1N1rOGkikRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NzUxNg==", "bodyText": "Need to check the version of the protocol, this exception cannot be thrown if the version is any 1.x. Recommend checking if the version is exactly \"1.3.0\".", "url": "https://github.com/geoserver/geoserver/pull/4300#discussion_r440157516", "createdAt": "2020-06-15T13:00:01Z", "author": {"login": "aaime"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -243,12 +243,27 @@ public GetMapRequest read(Object request, Map kvp, Map rawKvp) throws Exception\n         // set the raw params used to create the request\n         getMap.setRawKvp(rawKvp);\n \n+        boolean citeCompliant = wms.getServiceInfo().isCiteCompliant();\n+\n         // wms 1.3, srs changed to crs\n         if (kvp.containsKey(\"crs\")) {\n             getMap.setSRS((String) kvp.get(\"crs\"));\n+        } else if (citeCompliant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9382c6604ffa4dbf61b1bea411e7de90dc071720"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2ODI2MA==", "bodyText": "Done, thanks @aaime", "url": "https://github.com/geoserver/geoserver/pull/4300#discussion_r440968260", "createdAt": "2020-06-16T16:03:57Z", "author": {"login": "ahuarte47"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -243,12 +243,27 @@ public GetMapRequest read(Object request, Map kvp, Map rawKvp) throws Exception\n         // set the raw params used to create the request\n         getMap.setRawKvp(rawKvp);\n \n+        boolean citeCompliant = wms.getServiceInfo().isCiteCompliant();\n+\n         // wms 1.3, srs changed to crs\n         if (kvp.containsKey(\"crs\")) {\n             getMap.setSRS((String) kvp.get(\"crs\"));\n+        } else if (citeCompliant) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NzUxNg=="}, "originalCommit": {"oid": "9382c6604ffa4dbf61b1bea411e7de90dc071720"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjMxMTQyOnYy", "diffSide": "RIGHT", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzowNDo0NVrOGjxQEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzowNDo0NVrOGjxQEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2MDI3NQ==", "bodyText": "The SLD extensions to WMS allow a request not to have layers, as long as a full SLD is specified either using &sld or &sld_body. The error must not be thrown in these conditions (which are probably not what INSPIRE had in mind, but nonetheless a OGC specification", "url": "https://github.com/geoserver/geoserver/pull/4300#discussion_r440160275", "createdAt": "2020-06-15T13:04:45Z", "author": {"login": "aaime"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -288,13 +303,19 @@ public GetMapRequest read(Object request, Map kvp, Map rawKvp) throws Exception\n         if (layerParam != null) {\n             List<String> layerNames = KvpUtils.readFlat(layerParam);\n             requestedLayerInfos.addAll(parseLayers(layerNames, remoteOwsUrl, remoteOwsType));\n+        } else if (citeCompliant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9382c6604ffa4dbf61b1bea411e7de90dc071720"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjMxMzQyOnYy", "diffSide": "RIGHT", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzowNToxNVrOGjxRTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjowMzowMlrOGkiiFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2MDU5MA==", "bodyText": "Same as above for LAYERS, styles becomes non mandatory if SLD or SLD_BODY are specified.", "url": "https://github.com/geoserver/geoserver/pull/4300#discussion_r440160590", "createdAt": "2020-06-15T13:05:15Z", "author": {"login": "aaime"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -288,13 +303,19 @@ public GetMapRequest read(Object request, Map kvp, Map rawKvp) throws Exception\n         if (layerParam != null) {\n             List<String> layerNames = KvpUtils.readFlat(layerParam);\n             requestedLayerInfos.addAll(parseLayers(layerNames, remoteOwsUrl, remoteOwsType));\n+        } else if (citeCompliant) {\n+            throw new ServiceException(\n+                    \"GetMap LAYERS parameter is missing, it is mandatory for CITE compliant mode\");\n         }\n \n         // raw styles parameter\n         String stylesParam = (String) kvp.get(\"STYLES\");\n         List<String> styleNameList = new ArrayList<String>();\n         if (stylesParam != null) {\n             styleNameList.addAll(KvpUtils.readFlat(stylesParam));\n+        } else if (citeCompliant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9382c6604ffa4dbf61b1bea411e7de90dc071720"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2NzcwMg==", "bodyText": "Thank you very much @aaime, I have changed the code and I have added more tests.", "url": "https://github.com/geoserver/geoserver/pull/4300#discussion_r440967702", "createdAt": "2020-06-16T16:03:02Z", "author": {"login": "ahuarte47"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -288,13 +303,19 @@ public GetMapRequest read(Object request, Map kvp, Map rawKvp) throws Exception\n         if (layerParam != null) {\n             List<String> layerNames = KvpUtils.readFlat(layerParam);\n             requestedLayerInfos.addAll(parseLayers(layerNames, remoteOwsUrl, remoteOwsType));\n+        } else if (citeCompliant) {\n+            throw new ServiceException(\n+                    \"GetMap LAYERS parameter is missing, it is mandatory for CITE compliant mode\");\n         }\n \n         // raw styles parameter\n         String stylesParam = (String) kvp.get(\"STYLES\");\n         List<String> styleNameList = new ArrayList<String>();\n         if (stylesParam != null) {\n             styleNameList.addAll(KvpUtils.readFlat(stylesParam));\n+        } else if (citeCompliant) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2MDU5MA=="}, "originalCommit": {"oid": "9382c6604ffa4dbf61b1bea411e7de90dc071720"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDQwOTI2OnYy", "diffSide": "RIGHT", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTo1ODozM1rOGnHG2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTo1ODozM1rOGnHG2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2NDA5MA==", "bodyText": "Thanks, better. I was thinking about the error messages... the client that's receiving it might not be knowing what CITE is , or that the server is a GeoServer. I would go and say \"GetMap CRS parameter is mandatory in WMS 1.3\" instead.\nFrom the spec:\n\nI'm not going to repeat this for all error messages, please fix all accordingly.", "url": "https://github.com/geoserver/geoserver/pull/4300#discussion_r443664090", "createdAt": "2020-06-22T15:58:33Z", "author": {"login": "aaime"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -243,12 +243,30 @@ public GetMapRequest read(Object request, Map kvp, Map rawKvp) throws Exception\n         // set the raw params used to create the request\n         getMap.setRawKvp(rawKvp);\n \n+        boolean citeCompliant = wms.getServiceInfo().isCiteCompliant();\n+\n         // wms 1.3, srs changed to crs\n         if (kvp.containsKey(\"crs\")) {\n             getMap.setSRS((String) kvp.get(\"crs\"));\n+        } else if (citeCompliant && WMS.VERSION_1_3_0.equals(WMS.version(getMap.getVersion()))) {\n+            throw new ServiceException(\n+                    \"GetMap CRS parameter is missing, it is mandatory for CITE compliant mode\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f377e51294df33b895a22d50893c4ee8ba405392"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDQxNTc0OnYy", "diffSide": "RIGHT", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowMDowMFrOGnHKzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDo0NzoxNlrOGnQbVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2NTEwMQ==", "bodyText": "See above, \"transparent\" does not seem to allow for \"0\" or \"1\", where are they coming from?\nQuoting from the specification:\n\nThe optional TRANSPARENT parameter specifies whether the map background is to be made transparent or not.\nTRANSPARENT can take on two values, \"TRUE\" or \"FALSE\". The default value is FALSE if this parameter is\nabsent from the request.", "url": "https://github.com/geoserver/geoserver/pull/4300#discussion_r443665101", "createdAt": "2020-06-22T16:00:00Z", "author": {"login": "aaime"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -243,12 +243,30 @@ public GetMapRequest read(Object request, Map kvp, Map rawKvp) throws Exception\n         // set the raw params used to create the request\n         getMap.setRawKvp(rawKvp);\n \n+        boolean citeCompliant = wms.getServiceInfo().isCiteCompliant();\n+\n         // wms 1.3, srs changed to crs\n         if (kvp.containsKey(\"crs\")) {\n             getMap.setSRS((String) kvp.get(\"crs\"));\n+        } else if (citeCompliant && WMS.VERSION_1_3_0.equals(WMS.version(getMap.getVersion()))) {\n+            throw new ServiceException(\n+                    \"GetMap CRS parameter is missing, it is mandatory for CITE compliant mode\");\n         }\n         // do some additional checks\n \n+        if (citeCompliant && rawKvp != null && rawKvp.containsKey(\"transparent\")) {\n+            String trans = (String) rawKvp.get(\"transparent\");\n+\n+            if (!trans.equalsIgnoreCase(\"false\")\n+                    && !trans.equalsIgnoreCase(\"true\")\n+                    && !trans.equalsIgnoreCase(\"0\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f377e51294df33b895a22d50893c4ee8ba405392"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxNjc4OA==", "bodyText": "Thank you very much @aaime for your review and support.", "url": "https://github.com/geoserver/geoserver/pull/4300#discussion_r443816788", "createdAt": "2020-06-22T20:47:16Z", "author": {"login": "ahuarte47"}, "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -243,12 +243,30 @@ public GetMapRequest read(Object request, Map kvp, Map rawKvp) throws Exception\n         // set the raw params used to create the request\n         getMap.setRawKvp(rawKvp);\n \n+        boolean citeCompliant = wms.getServiceInfo().isCiteCompliant();\n+\n         // wms 1.3, srs changed to crs\n         if (kvp.containsKey(\"crs\")) {\n             getMap.setSRS((String) kvp.get(\"crs\"));\n+        } else if (citeCompliant && WMS.VERSION_1_3_0.equals(WMS.version(getMap.getVersion()))) {\n+            throw new ServiceException(\n+                    \"GetMap CRS parameter is missing, it is mandatory for CITE compliant mode\");\n         }\n         // do some additional checks\n \n+        if (citeCompliant && rawKvp != null && rawKvp.containsKey(\"transparent\")) {\n+            String trans = (String) rawKvp.get(\"transparent\");\n+\n+            if (!trans.equalsIgnoreCase(\"false\")\n+                    && !trans.equalsIgnoreCase(\"true\")\n+                    && !trans.equalsIgnoreCase(\"0\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2NTEwMQ=="}, "originalCommit": {"oid": "f377e51294df33b895a22d50893c4ee8ba405392"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3933, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}