{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MzMxNTM3", "number": 4116, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDoyOTowMlrODmIrYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDoyMzoyOVrODo38bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE0NjU4OnYy", "diffSide": "RIGHT", "path": "doc/en/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDoyOTowMlrOFzYgAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDoyOTowMlrOFzYgAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzEwNg==", "bodyText": "Looks like a typo: process-resources.", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389423106", "createdAt": "2020-03-09T00:29:02Z", "author": {"login": "bradh"}, "path": "doc/en/README.md", "diffHunk": "@@ -11,9 +11,22 @@ To build:\n \n     mvn clean install\n \n+To package documentation into zip archives:\n+\n+    mvn assembly:single\n+\n+### REST API\n+\n To generate the REST API documentation:\n \n     mvn process-resources\n+    \n+To generate a specific REST API endpoint:\n+\n+    mvn process-resoruces:system-status", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE0Njk2OnYy", "diffSide": "RIGHT", "path": "doc/en/api/.swagger-codegen-ignore", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDoyOTo0OVrOFzYgOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDo0NjozNFrOFzYmZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzE2Mw==", "bodyText": "Do we actually need this file?", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389423163", "createdAt": "2020-03-09T00:29:49Z", "author": {"login": "bradh"}, "path": "doc/en/api/.swagger-codegen-ignore", "diffHunk": "@@ -0,0 +1,23 @@\n+# Swagger Codegen Ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyNDc0Mw==", "bodyText": "We need a file (or the tool makes a needless  warming) because the folder is not created yet.", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389424743", "createdAt": "2020-03-09T00:46:34Z", "author": {"login": "jodygarnett"}, "path": "doc/en/api/.swagger-codegen-ignore", "diffHunk": "@@ -0,0 +1,23 @@\n+# Swagger Codegen Ignore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzE2Mw=="}, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE0OTQ5OnYy", "diffSide": "RIGHT", "path": "doc/en/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDozMzo0MVrOFzYhoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDo0NzoxMlrOFzYmnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzUyMA==", "bodyText": "I think I liked the original version better. Not a big deal though.", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389423520", "createdAt": "2020-03-09T00:33:41Z", "author": {"login": "bradh"}, "path": "doc/en/pom.xml", "diffHunk": "@@ -24,234 +24,426 @@\n       <plugin>\n         <groupId>io.swagger</groupId>\n         <artifactId>swagger-codegen-maven-plugin</artifactId>\n-        <version>2.2.2</version>\n+        <version>2.4.12</version>\n+        <configuration>\n+          <language>html</language>\n+          <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+        </configuration>\n         <executions>\n           <!-- one execution per page -->\n           <execution>\n             <id>coverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyNDc5Nw==", "bodyText": "I had a lot of cut and paste to get through :)", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389424797", "createdAt": "2020-03-09T00:47:12Z", "author": {"login": "jodygarnett"}, "path": "doc/en/pom.xml", "diffHunk": "@@ -24,234 +24,426 @@\n       <plugin>\n         <groupId>io.swagger</groupId>\n         <artifactId>swagger-codegen-maven-plugin</artifactId>\n-        <version>2.2.2</version>\n+        <version>2.4.12</version>\n+        <configuration>\n+          <language>html</language>\n+          <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+        </configuration>\n         <executions>\n           <!-- one execution per page -->\n           <execution>\n             <id>coverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzUyMA=="}, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE1MTUwOnYy", "diffSide": "RIGHT", "path": "doc/en/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDozNzoxNlrOFzYiwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDo1NDo1NVrOFzYp0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzgwOA==", "bodyText": "I do see that file used here, but I don't see the override entries in it.", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389423808", "createdAt": "2020-03-09T00:37:16Z", "author": {"login": "bradh"}, "path": "doc/en/pom.xml", "diffHunk": "@@ -24,234 +24,426 @@\n       <plugin>\n         <groupId>io.swagger</groupId>\n         <artifactId>swagger-codegen-maven-plugin</artifactId>\n-        <version>2.2.2</version>\n+        <version>2.4.12</version>\n+        <configuration>\n+          <language>html</language>\n+          <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+        </configuration>\n         <executions>\n           <!-- one execution per page -->\n           <execution>\n             <id>coverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/coverages.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/coverages</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>coverageStores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/coveragestores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/coveragestores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>datastores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/datastores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/datastores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>featureTypes</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/featuretypes.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/featuretypes</output>\n             </configuration>\n           </execution>          \n           <execution>\n             <id>fonts</id>\n             <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/fonts.yaml</inputSpec>\n+              <output>${project.build.directory}/api/fonts</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcblobstores</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcblobstores.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcblobstores</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcbounds</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcbounds.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcbounds</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcdiskquota</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcdiskquota.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcdiskquota</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcfilterupdate</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcfilterupdate.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcfilterupdate</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcglobal</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcglobal.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcglobal</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcgridsets</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcgridsets.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcgridsets</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcindex</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcindex.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcindex</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwclayers</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwclayers.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwclayers</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcmasstruncate</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcmasstruncate.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcmasstruncate</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcmemorycachestatistics</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcmemorycachestatistics.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcmemorycachestatistics</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcreload</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcreload.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcreload</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcseed</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcseed.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcseed</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>importer</id>\n+            <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/fonts.yaml</inputSpec>\n+              <inputSpec>${project.basedir}/api/1.0.0/importer.yaml</inputSpec>\n               <language>html</language>\n-              <output>${project.build.directory}/api/fonts</output>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+              <output>${project.build.directory}/api/importer</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>layergroups</id>\n+            <id>importerData</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/layergroups.yaml</inputSpec>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerData.yaml</inputSpec>\n               <language>html</language>\n-              <output>${project.build.directory}/api/layergroups</output>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+              <output>${project.build.directory}/api/importerData</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>layers</id>\n+            <id>importerTasks</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerTasks.yaml</inputSpec>\n+              <output>${project.build.directory}/api/importerTasks</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>importerTransforms</id>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>generate</goal>\n+            </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerTransforms.yaml</inputSpec>\n+              <output>${project.build.directory}/api/importerTransforms</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>layergroups</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/layergroups.yaml</inputSpec>\n+              <output>${project.build.directory}/api/layergroups</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>layers</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/layers.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/layers</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>manifests</id>\n             <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/manifests.yaml</inputSpec>\n+              <output>${project.build.directory}/api/manifests</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>metadata</id>\n+            <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/manifests.yaml</inputSpec>\n-              <language>html</language>\n-              <output>${project.build.directory}/api/manifests</output>\n+              <inputSpec>${project.basedir}/api/1.0.0/metadata.yaml</inputSpec>\n+              <output>${project.build.directory}/api/metadata</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>namespaces</id>\n+            <id>monitoring</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/monitoring.yaml</inputSpec>\n+              <output>${project.build.directory}/api/monitoring</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>namespaces</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/namespaces.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/namespaces</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>owsServices</id>\n+            <id>opensearch-eo</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/opensearch-eo.yaml</inputSpec>\n+              <output>${project.build.directory}/api/opensearch-eo</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>owsservices</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/owsservices.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/owsservices</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>params-extractor</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/params-extractor.yaml</inputSpec>\n+              <output>${project.build.directory}/api/params-extractor</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>reload</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/reload.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/reload</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>resource</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/resource.yaml</inputSpec>\n+              <output>${project.build.directory}/api/resource</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>roles</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/roles.yaml</inputSpec>\n+              <output>${project.build.directory}/api/roles</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>security</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/security.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/security</output>\n             </configuration>\n           </execution>          \n           <execution>\n             <id>settings</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/settings.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/settings</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>structuredCoverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/structuredcoverages.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/structuredcoverages</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>styles</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/styles.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/styles</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>template</id>\n+            <id>system-status</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/system-status.yaml</inputSpec>\n+              <output>${project.build.directory}/api/system-status</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>templates</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/templates.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/templates</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>transforms</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/transforms.yaml</inputSpec>\n+              <output>${project.build.directory}/api/transforms</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>usergroup</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/usergroup.yaml</inputSpec>\n+              <output>${project.build.directory}/api/usergroup</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>wmslayers</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmslayers.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/wmslayers</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>wmsstores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmsstores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/wmsstores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>wmtslayers</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmtslayers.yaml</inputSpec>\n               <language>html</language>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 490}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyNTYxOA==", "bodyText": "It is just a workaround for the tool see - OpenAPITools/openapi-generator#4627", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389425618", "createdAt": "2020-03-09T00:54:55Z", "author": {"login": "jodygarnett"}, "path": "doc/en/pom.xml", "diffHunk": "@@ -24,234 +24,426 @@\n       <plugin>\n         <groupId>io.swagger</groupId>\n         <artifactId>swagger-codegen-maven-plugin</artifactId>\n-        <version>2.2.2</version>\n+        <version>2.4.12</version>\n+        <configuration>\n+          <language>html</language>\n+          <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+        </configuration>\n         <executions>\n           <!-- one execution per page -->\n           <execution>\n             <id>coverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/coverages.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/coverages</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>coverageStores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/coveragestores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/coveragestores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>datastores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/datastores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/datastores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>featureTypes</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/featuretypes.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/featuretypes</output>\n             </configuration>\n           </execution>          \n           <execution>\n             <id>fonts</id>\n             <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/fonts.yaml</inputSpec>\n+              <output>${project.build.directory}/api/fonts</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcblobstores</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcblobstores.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcblobstores</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcbounds</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcbounds.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcbounds</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcdiskquota</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcdiskquota.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcdiskquota</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcfilterupdate</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcfilterupdate.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcfilterupdate</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcglobal</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcglobal.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcglobal</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcgridsets</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcgridsets.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcgridsets</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcindex</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcindex.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcindex</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwclayers</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwclayers.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwclayers</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcmasstruncate</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcmasstruncate.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcmasstruncate</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcmemorycachestatistics</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcmemorycachestatistics.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcmemorycachestatistics</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcreload</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcreload.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcreload</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcseed</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcseed.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcseed</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>importer</id>\n+            <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/fonts.yaml</inputSpec>\n+              <inputSpec>${project.basedir}/api/1.0.0/importer.yaml</inputSpec>\n               <language>html</language>\n-              <output>${project.build.directory}/api/fonts</output>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+              <output>${project.build.directory}/api/importer</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>layergroups</id>\n+            <id>importerData</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/layergroups.yaml</inputSpec>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerData.yaml</inputSpec>\n               <language>html</language>\n-              <output>${project.build.directory}/api/layergroups</output>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+              <output>${project.build.directory}/api/importerData</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>layers</id>\n+            <id>importerTasks</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerTasks.yaml</inputSpec>\n+              <output>${project.build.directory}/api/importerTasks</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>importerTransforms</id>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>generate</goal>\n+            </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerTransforms.yaml</inputSpec>\n+              <output>${project.build.directory}/api/importerTransforms</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>layergroups</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/layergroups.yaml</inputSpec>\n+              <output>${project.build.directory}/api/layergroups</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>layers</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/layers.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/layers</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>manifests</id>\n             <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/manifests.yaml</inputSpec>\n+              <output>${project.build.directory}/api/manifests</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>metadata</id>\n+            <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/manifests.yaml</inputSpec>\n-              <language>html</language>\n-              <output>${project.build.directory}/api/manifests</output>\n+              <inputSpec>${project.basedir}/api/1.0.0/metadata.yaml</inputSpec>\n+              <output>${project.build.directory}/api/metadata</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>namespaces</id>\n+            <id>monitoring</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/monitoring.yaml</inputSpec>\n+              <output>${project.build.directory}/api/monitoring</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>namespaces</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/namespaces.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/namespaces</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>owsServices</id>\n+            <id>opensearch-eo</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/opensearch-eo.yaml</inputSpec>\n+              <output>${project.build.directory}/api/opensearch-eo</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>owsservices</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/owsservices.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/owsservices</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>params-extractor</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/params-extractor.yaml</inputSpec>\n+              <output>${project.build.directory}/api/params-extractor</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>reload</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/reload.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/reload</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>resource</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/resource.yaml</inputSpec>\n+              <output>${project.build.directory}/api/resource</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>roles</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/roles.yaml</inputSpec>\n+              <output>${project.build.directory}/api/roles</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>security</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/security.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/security</output>\n             </configuration>\n           </execution>          \n           <execution>\n             <id>settings</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/settings.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/settings</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>structuredCoverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/structuredcoverages.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/structuredcoverages</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>styles</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/styles.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/styles</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>template</id>\n+            <id>system-status</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/system-status.yaml</inputSpec>\n+              <output>${project.build.directory}/api/system-status</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>templates</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/templates.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/templates</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>transforms</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/transforms.yaml</inputSpec>\n+              <output>${project.build.directory}/api/transforms</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>usergroup</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/usergroup.yaml</inputSpec>\n+              <output>${project.build.directory}/api/usergroup</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>wmslayers</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmslayers.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/wmslayers</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>wmsstores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmsstores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/wmsstores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>wmtslayers</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmtslayers.yaml</inputSpec>\n               <language>html</language>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzgwOA=="}, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 490}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE1MTg3OnYy", "diffSide": "RIGHT", "path": "doc/en/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDozNzo1OVrOFzYi_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDozNzo1OVrOFzYi_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzg3MA==", "bodyText": "Do we still want the HTML here?", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389423870", "createdAt": "2020-03-09T00:37:59Z", "author": {"login": "bradh"}, "path": "doc/en/pom.xml", "diffHunk": "@@ -264,6 +456,7 @@\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmtsstores.yaml</inputSpec>\n               <language>html</language>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 497}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE1MjAzOnYy", "diffSide": "RIGHT", "path": "doc/en/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDozODoxMFrOFzYjEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDo0NzozOVrOFzYmxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzg4OQ==", "bodyText": "Do we still want the HTML here?", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389423889", "createdAt": "2020-03-09T00:38:10Z", "author": {"login": "bradh"}, "path": "doc/en/pom.xml", "diffHunk": "@@ -24,234 +24,426 @@\n       <plugin>\n         <groupId>io.swagger</groupId>\n         <artifactId>swagger-codegen-maven-plugin</artifactId>\n-        <version>2.2.2</version>\n+        <version>2.4.12</version>\n+        <configuration>\n+          <language>html</language>\n+          <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+        </configuration>\n         <executions>\n           <!-- one execution per page -->\n           <execution>\n             <id>coverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/coverages.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/coverages</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>coverageStores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/coveragestores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/coveragestores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>datastores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/datastores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/datastores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>featureTypes</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/featuretypes.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/featuretypes</output>\n             </configuration>\n           </execution>          \n           <execution>\n             <id>fonts</id>\n             <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/fonts.yaml</inputSpec>\n+              <output>${project.build.directory}/api/fonts</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcblobstores</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcblobstores.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcblobstores</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcbounds</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcbounds.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcbounds</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcdiskquota</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcdiskquota.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcdiskquota</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcfilterupdate</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcfilterupdate.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcfilterupdate</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcglobal</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcglobal.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcglobal</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcgridsets</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcgridsets.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcgridsets</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcindex</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcindex.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcindex</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwclayers</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwclayers.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwclayers</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcmasstruncate</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcmasstruncate.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcmasstruncate</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcmemorycachestatistics</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcmemorycachestatistics.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcmemorycachestatistics</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcreload</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcreload.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcreload</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcseed</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcseed.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcseed</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>importer</id>\n+            <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/fonts.yaml</inputSpec>\n+              <inputSpec>${project.basedir}/api/1.0.0/importer.yaml</inputSpec>\n               <language>html</language>\n-              <output>${project.build.directory}/api/fonts</output>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+              <output>${project.build.directory}/api/importer</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>layergroups</id>\n+            <id>importerData</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/layergroups.yaml</inputSpec>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerData.yaml</inputSpec>\n               <language>html</language>\n-              <output>${project.build.directory}/api/layergroups</output>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+              <output>${project.build.directory}/api/importerData</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>layers</id>\n+            <id>importerTasks</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerTasks.yaml</inputSpec>\n+              <output>${project.build.directory}/api/importerTasks</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>importerTransforms</id>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>generate</goal>\n+            </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerTransforms.yaml</inputSpec>\n+              <output>${project.build.directory}/api/importerTransforms</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>layergroups</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/layergroups.yaml</inputSpec>\n+              <output>${project.build.directory}/api/layergroups</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>layers</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/layers.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/layers</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>manifests</id>\n             <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/manifests.yaml</inputSpec>\n+              <output>${project.build.directory}/api/manifests</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>metadata</id>\n+            <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/manifests.yaml</inputSpec>\n-              <language>html</language>\n-              <output>${project.build.directory}/api/manifests</output>\n+              <inputSpec>${project.basedir}/api/1.0.0/metadata.yaml</inputSpec>\n+              <output>${project.build.directory}/api/metadata</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>namespaces</id>\n+            <id>monitoring</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/monitoring.yaml</inputSpec>\n+              <output>${project.build.directory}/api/monitoring</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>namespaces</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/namespaces.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/namespaces</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>owsServices</id>\n+            <id>opensearch-eo</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/opensearch-eo.yaml</inputSpec>\n+              <output>${project.build.directory}/api/opensearch-eo</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>owsservices</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/owsservices.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/owsservices</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>params-extractor</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/params-extractor.yaml</inputSpec>\n+              <output>${project.build.directory}/api/params-extractor</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>reload</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/reload.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/reload</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>resource</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/resource.yaml</inputSpec>\n+              <output>${project.build.directory}/api/resource</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>roles</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/roles.yaml</inputSpec>\n+              <output>${project.build.directory}/api/roles</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>security</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/security.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/security</output>\n             </configuration>\n           </execution>          \n           <execution>\n             <id>settings</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/settings.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/settings</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>structuredCoverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/structuredcoverages.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/structuredcoverages</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>styles</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/styles.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/styles</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>template</id>\n+            <id>system-status</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/system-status.yaml</inputSpec>\n+              <output>${project.build.directory}/api/system-status</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>templates</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/templates.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/templates</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>transforms</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/transforms.yaml</inputSpec>\n+              <output>${project.build.directory}/api/transforms</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>usergroup</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/usergroup.yaml</inputSpec>\n+              <output>${project.build.directory}/api/usergroup</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>wmslayers</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmslayers.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/wmslayers</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>wmsstores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmsstores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/wmsstores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>wmtslayers</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmtslayers.yaml</inputSpec>\n               <language>html</language>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 489}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyNDgzOQ==", "bodyText": "No I moved it up as common configuration, thanks for the catch.", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389424839", "createdAt": "2020-03-09T00:47:39Z", "author": {"login": "jodygarnett"}, "path": "doc/en/pom.xml", "diffHunk": "@@ -24,234 +24,426 @@\n       <plugin>\n         <groupId>io.swagger</groupId>\n         <artifactId>swagger-codegen-maven-plugin</artifactId>\n-        <version>2.2.2</version>\n+        <version>2.4.12</version>\n+        <configuration>\n+          <language>html</language>\n+          <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+        </configuration>\n         <executions>\n           <!-- one execution per page -->\n           <execution>\n             <id>coverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/coverages.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/coverages</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>coverageStores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/coveragestores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/coveragestores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>datastores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/datastores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/datastores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>featureTypes</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/featuretypes.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/featuretypes</output>\n             </configuration>\n           </execution>          \n           <execution>\n             <id>fonts</id>\n             <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/fonts.yaml</inputSpec>\n+              <output>${project.build.directory}/api/fonts</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcblobstores</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcblobstores.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcblobstores</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcbounds</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcbounds.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcbounds</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcdiskquota</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcdiskquota.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcdiskquota</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcfilterupdate</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcfilterupdate.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcfilterupdate</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcglobal</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcglobal.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcglobal</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcgridsets</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcgridsets.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcgridsets</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcindex</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcindex.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcindex</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwclayers</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwclayers.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwclayers</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcmasstruncate</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcmasstruncate.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcmasstruncate</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcmemorycachestatistics</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcmemorycachestatistics.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcmemorycachestatistics</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcreload</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcreload.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcreload</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>gwcseed</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/gwcseed.yaml</inputSpec>\n+              <output>${project.build.directory}/api/gwcseed</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>importer</id>\n+            <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/fonts.yaml</inputSpec>\n+              <inputSpec>${project.basedir}/api/1.0.0/importer.yaml</inputSpec>\n               <language>html</language>\n-              <output>${project.build.directory}/api/fonts</output>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+              <output>${project.build.directory}/api/importer</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>layergroups</id>\n+            <id>importerData</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/layergroups.yaml</inputSpec>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerData.yaml</inputSpec>\n               <language>html</language>\n-              <output>${project.build.directory}/api/layergroups</output>\n+              <ignoreFileOverride>${project.basedir}/api/.swagger-codegen-ignore</ignoreFileOverride>\n+              <output>${project.build.directory}/api/importerData</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>layers</id>\n+            <id>importerTasks</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerTasks.yaml</inputSpec>\n+              <output>${project.build.directory}/api/importerTasks</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>importerTransforms</id>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>generate</goal>\n+            </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/importerTransforms.yaml</inputSpec>\n+              <output>${project.build.directory}/api/importerTransforms</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>layergroups</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/layergroups.yaml</inputSpec>\n+              <output>${project.build.directory}/api/layergroups</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>layers</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/layers.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/layers</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>manifests</id>\n             <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/manifests.yaml</inputSpec>\n+              <output>${project.build.directory}/api/manifests</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>metadata</id>\n+            <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n             <configuration>\n-              <inputSpec>${project.basedir}/api/1.0.0/manifests.yaml</inputSpec>\n-              <language>html</language>\n-              <output>${project.build.directory}/api/manifests</output>\n+              <inputSpec>${project.basedir}/api/1.0.0/metadata.yaml</inputSpec>\n+              <output>${project.build.directory}/api/metadata</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>namespaces</id>\n+            <id>monitoring</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/monitoring.yaml</inputSpec>\n+              <output>${project.build.directory}/api/monitoring</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>namespaces</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/namespaces.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/namespaces</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>owsServices</id>\n+            <id>opensearch-eo</id>\n             <phase>process-resources</phase>\n             <goals>\n               <goal>generate</goal>\n             </goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/opensearch-eo.yaml</inputSpec>\n+              <output>${project.build.directory}/api/opensearch-eo</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>owsservices</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/owsservices.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/owsservices</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>params-extractor</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/params-extractor.yaml</inputSpec>\n+              <output>${project.build.directory}/api/params-extractor</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>reload</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/reload.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/reload</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>resource</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/resource.yaml</inputSpec>\n+              <output>${project.build.directory}/api/resource</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>roles</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/roles.yaml</inputSpec>\n+              <output>${project.build.directory}/api/roles</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>security</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/security.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/security</output>\n             </configuration>\n           </execution>          \n           <execution>\n             <id>settings</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/settings.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/settings</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>structuredCoverages</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/structuredcoverages.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/structuredcoverages</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>styles</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/styles.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/styles</output>\n             </configuration>\n           </execution>\n           <execution>\n-            <id>template</id>\n+            <id>system-status</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/system-status.yaml</inputSpec>\n+              <output>${project.build.directory}/api/system-status</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>templates</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/templates.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/templates</output>\n             </configuration>\n           </execution>\n+          <execution>\n+            <id>transforms</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/transforms.yaml</inputSpec>\n+              <output>${project.build.directory}/api/transforms</output>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>usergroup</id>\n+            <phase>process-resources</phase>\n+            <goals><goal>generate</goal></goals>\n+            <configuration>\n+              <inputSpec>${project.basedir}/api/1.0.0/usergroup.yaml</inputSpec>\n+              <output>${project.build.directory}/api/usergroup</output>\n+            </configuration>\n+          </execution>\n           <execution>\n             <id>wmslayers</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmslayers.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/wmslayers</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>wmsstores</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmsstores.yaml</inputSpec>\n-              <language>html</language>\n               <output>${project.build.directory}/api/wmsstores</output>\n             </configuration>\n           </execution>\n           <execution>\n             <id>wmtslayers</id>\n             <phase>process-resources</phase>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n+            <goals><goal>generate</goal></goals>\n             <configuration>\n               <inputSpec>${project.basedir}/api/1.0.0/wmtslayers.yaml</inputSpec>\n               <language>html</language>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMzg4OQ=="}, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 489}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzE1MzE4OnYy", "diffSide": "RIGHT", "path": "doc/en/release/rest.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDozOTozN1rOFzYjuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDo0ODoxM1rOFzYm-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyNDA1Ng==", "bodyText": "Seems like this is broader than just coverages.", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389424056", "createdAt": "2020-03-09T00:39:37Z", "author": {"login": "bradh"}, "path": "doc/en/release/rest.html", "diffHunk": "@@ -0,0 +1,257 @@\n+<!doctype html>\n+<html>\n+  <head>\n+    <title>GeoServer Coverages</title>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyNDg5MA==", "bodyText": "Good catch, I stole one of the generated files as an example.", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389424890", "createdAt": "2020-03-09T00:48:13Z", "author": {"login": "jodygarnett"}, "path": "doc/en/release/rest.html", "diffHunk": "@@ -0,0 +1,257 @@\n+<!doctype html>\n+<html>\n+  <head>\n+    <title>GeoServer Coverages</title>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyNDA1Ng=="}, "originalCommit": {"oid": "b310b2206db619150d99e59902d827eeb38c8c4c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzc4ODkwOnYy", "diffSide": "RIGHT", "path": "build/build_release.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwODozNzozMFrOFzeZ_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwODozNzozMFrOFzeZ_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUxOTg3MQ==", "bodyText": "This entire pull request is to enable this one line", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r389519871", "createdAt": "2020-03-09T08:37:30Z", "author": {"login": "jodygarnett"}, "path": "build/build_release.sh", "diffHunk": "@@ -309,27 +312,31 @@ popd > /dev/null\n \n pushd $artifacts > /dev/null\n \n-# setup doc artifacts\n-if [ -e user ]; then\n+htmldoc=geoserver-$tag-htmldoc.zip\n+\n+if [ -e ../../../doc/en/target/$htmldoc ]; then\n+  # use assembly\n+  cp ../../../doc/en/target/$htmldoc $htmldoc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baa3bedf9bfd5651b55a34dabbad81f8af98399a"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTg2MjIyOnYy", "diffSide": "RIGHT", "path": "doc/en/api/1.0.0/featuretypes.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDoyMzoyOVrOF3sn0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTo0MDozMVrOF3vCmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0NzA4OA==", "bodyText": "host is duplicated here, this has broken the hosted rest docs: https://docs.geoserver.org/latest/en/api/#1.0.0/featuretypes.yaml\n\nParser error\nduplicated mapping key", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r393947088", "createdAt": "2020-03-17T20:23:29Z", "author": {"login": "tbarsballe"}, "path": "doc/en/api/1.0.0/featuretypes.yaml", "diffHunk": "@@ -4,6 +4,11 @@ info:\n   version: 1.0.0\n   title: GeoServer Feature Types\n   description: A feature type is a vector based spatial resource or data set that originates from a data store. In some cases, such as with a shapefile, a feature type has a one-to-one relationship with its data store. In other cases, such as PostGIS, the relationship of feature type to data store is many-to-one, feature types corresponding to a table in the database.\n+  contact:\n+    name: GeoServer\n+    email: 'geoserver-users@sourceforge.net'\n+    url: 'http://geoserver.org/comm/'\n+host: localhost:8080\n host: localhost:8080", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baa3bedf9bfd5651b55a34dabbad81f8af98399a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4NjcxMw==", "bodyText": "Everything should be fixed here: #4129", "url": "https://github.com/geoserver/geoserver/pull/4116#discussion_r393986713", "createdAt": "2020-03-17T21:40:31Z", "author": {"login": "tbarsballe"}, "path": "doc/en/api/1.0.0/featuretypes.yaml", "diffHunk": "@@ -4,6 +4,11 @@ info:\n   version: 1.0.0\n   title: GeoServer Feature Types\n   description: A feature type is a vector based spatial resource or data set that originates from a data store. In some cases, such as with a shapefile, a feature type has a one-to-one relationship with its data store. In other cases, such as PostGIS, the relationship of feature type to data store is many-to-one, feature types corresponding to a table in the database.\n+  contact:\n+    name: GeoServer\n+    email: 'geoserver-users@sourceforge.net'\n+    url: 'http://geoserver.org/comm/'\n+host: localhost:8080\n host: localhost:8080", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0NzA4OA=="}, "originalCommit": {"oid": "baa3bedf9bfd5651b55a34dabbad81f8af98399a"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4020, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}