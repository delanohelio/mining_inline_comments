{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMjQ2NzU0", "number": 4033, "title": "[GEOS-9489] Invalid <OnlineResource> for external legend graphics accessible in WMS capability document", "bodyText": "JIRA : https://osgeo-org.atlassian.net/browse/GEOS-9489\n-UI page does not complain on URL and URI\n-cap doc does not prefix external URL/URIs with base url\n-legend urls are adverstised as get legend requests\n\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for community modules):\n\n There is a ticket in Jira describing the issue/improvement/feature (a notable exemptions is, changes not visible to end users)\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOS-XYZW] Title of the Jira ticket\" (export to XML in Jira generates the message in this exact form)\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Commits changing the UI, existing user workflows, or adding new functionality, need to include documentation updates (screenshots, text)\n Committs changing the REST API, or any configuration object, should check it the REST API docs (Swagger YAML files and classic documentation) need to be updated.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-02-07T05:51:38Z", "url": "https://github.com/geoserver/geoserver/pull/4033", "merged": true, "mergeCommit": {"oid": "f067d104c7e18d1e6e61e4830b62a0c4e255f3df"}, "closed": true, "closedAt": "2020-02-19T11:27:54Z", "author": {"login": "imranrajjad"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcB4yn1gH2gAyMzcyMjQ2NzU0OjAyYTljM2UzNDQ4MThiZDAyOWM2MzdlM2MyMjQ3Y2FkMTI3YzhlNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFfDtqgBqjMwNDY0NzMwNzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "02a9c3e344818bd029c637e3c2247cad127c8e67", "author": {"user": {"login": "imranrajjad", "name": "Imran"}}, "url": "https://github.com/geoserver/geoserver/commit/02a9c3e344818bd029c637e3c2247cad127c8e67", "committedDate": "2020-02-07T05:49:59Z", "message": "[GEOS-9489] Invalid <OnlineResource> for external legend graphics\naccessible over URL/URI in WMS capability document\n\n-UI page does not complain on URL and URI\n-cap doc does not prefix external URL/URIs with base url\n\t-legend urls are adverstised as get legend requests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTUzMjY3", "url": "https://github.com/geoserver/geoserver/pull/4033#pullrequestreview-355553267", "createdAt": "2020-02-08T15:37:12Z", "commit": {"oid": "02a9c3e344818bd029c637e3c2247cad127c8e67"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNTozNzoxMlrOFnQ9LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNjowNjowOFrOFnRCyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxNjU4OA==", "bodyText": "I don't get it, why a URI?", "url": "https://github.com/geoserver/geoserver/pull/4033#discussion_r376716588", "createdAt": "2020-02-08T15:37:12Z", "author": {"login": "jodygarnett"}, "path": "doc/en/user/source/styling/webadmin/index.rst", "diffHunk": "@@ -228,7 +228,7 @@ The :guilabel:`Legend` area allows you to add, modify, or delete a custom style,\n    * - :guilabel:`Add legend`\r\n      - Allows you to use a custom legend\r\n    * - :guilabel:`Online Resource`\r\n-     - Path to the custom legend graphic to use. Can be a URL or a local path (relative to the style file path). See :ref:`datadir_structure` for a description of the styles directory.\r\n+     - Path to the custom legend graphic to use. Can be a URL, URI or a local path (relative to the style file path). See :ref:`datadir_structure` for a description of the styles directory.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9c3e344818bd029c637e3c2247cad127c8e67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxNzg3Mw==", "bodyText": "Not looking for a file here, this is not used to access any file on the file system - instead only used to access a resource in the styles folder (ideally via Resource API.)", "url": "https://github.com/geoserver/geoserver/pull/4033#discussion_r376717873", "createdAt": "2020-02-08T16:03:23Z", "author": {"login": "jodygarnett"}, "path": "src/web/wms/src/main/java/org/geoserver/wms/web/data/ExternalGraphicPanel.java", "diffHunk": "@@ -64,6 +65,8 @@\n \n     private Model<String> showhideStyleModel = new Model<String>(\"\");\n \n+    private static String externalURIPattern = \"^(http|https|file)://.*$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9c3e344818bd029c637e3c2247cad127c8e67"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxODAyNQ==", "bodyText": "The logic is getting duplicated between transformers, may be worth some code reuse.", "url": "https://github.com/geoserver/geoserver/pull/4033#discussion_r376718025", "createdAt": "2020-02-08T16:06:08Z", "author": {"login": "jodygarnett"}, "path": "src/wms/src/main/java/org/geoserver/wms/capabilities/GetCapabilitiesTransformer.java", "diffHunk": "@@ -1488,121 +1485,87 @@ protected void handleAttribution(PublishedInfo layer) {\n         protected void handleLegendURL(\n                 LayerInfo layer, LegendInfo legend, StyleInfo style, StyleInfo sampleStyle) {\n             // add CapabilityUtil.validateLegendInfo\n+            int legendWidth = GetLegendGraphicRequest.DEFAULT_WIDTH;\n+            int legendHeight = GetLegendGraphicRequest.DEFAULT_HEIGHT;\n+\n+            String defaultFormat = GetLegendGraphicRequest.DEFAULT_FORMAT;\n+\n             if (validateLegendInfo(legend)) {\n                 if (LOGGER.isLoggable(Level.FINE)) {\n                     LOGGER.fine(\"using user supplied legend URL\");\n                 }\n+                // reading sizes of external graphics\n+                legendWidth = legend.getWidth();\n+                legendHeight = legend.getHeight();\n+                // remove any charset info\n+                defaultFormat = legend.getFormat().replaceFirst(\";charset=utf-8\", \"\");\n+\n+            } else if (sampleStyle != null) {\n+                // delegate to legendSample the calculus of proper legend size for\n+                // the given style\n+                Dimension dimension;\n+                try {\n+                    dimension = legendSample.getLegendURLSize(sampleStyle);\n+                    if (dimension != null) {\n+                        legendWidth = (int) dimension.getWidth();\n+                        legendHeight = (int) dimension.getHeight();\n+                    }\n+                } catch (Exception e) {\n+                    LOGGER.log(Level.WARNING, \"Error getting LegendURL dimensions from sample\", e);\n+                }\n+            }\n \n-                AttributesImpl attrs = new AttributesImpl();\n-                attrs.addAttribute(\"\", \"width\", \"width\", \"\", String.valueOf(legend.getWidth()));\n-                attrs.addAttribute(\"\", \"height\", \"height\", \"\", String.valueOf(legend.getHeight()));\n-\n-                start(\"LegendURL\", attrs);\n-\n-                element(\"Format\", legend.getFormat());\n-                attrs.clear();\n-                attrs.addAttribute(\"\", \"xmlns:xlink\", \"xmlns:xlink\", \"\", XLINK_NS);\n-                attrs.addAttribute(XLINK_NS, \"type\", \"xlink:type\", \"\", \"simple\");\n-                WorkspaceInfo styleWs = sampleStyle.getWorkspace();\n-                String legendUrl;\n-\n-                if (layer.getResource() instanceof WMSLayerInfo)\n-                    legendUrl = legend.getOnlineResource();\n-                else if (styleWs != null) {\n-                    legendUrl =\n-                            buildURL(\n-                                    request.getBaseUrl(),\n-                                    appendPath(\n-                                            \"styles\",\n-                                            styleWs.getName(),\n-                                            legend.getOnlineResource()),\n-                                    null,\n-                                    URLType.RESOURCE);\n-                } else {\n-                    legendUrl =\n-                            buildURL(\n-                                    request.getBaseUrl(),\n-                                    appendPath(\"styles\", legend.getOnlineResource()),\n-                                    null,\n-                                    URLType.RESOURCE);\n+            if (null == wmsConfig.getLegendGraphicOutputFormat(defaultFormat)) {\n+                if (LOGGER.isLoggable(Level.WARNING)) {\n+                    LOGGER.warning(\n+                            new StringBuffer(\"Default legend format (\")\n+                                    .append(defaultFormat)\n+                                    .append(\n+                                            \")is not supported (jai not available?), can't add LegendURL element\")\n+                                    .toString());\n                 }\n-                attrs.addAttribute(XLINK_NS, \"href\", \"xlink:href\", \"\", legendUrl);\n-                element(\"OnlineResource\", null, attrs);\n \n-                end(\"LegendURL\");\n-            } else {\n-                int legendWidth = GetLegendGraphicRequest.DEFAULT_WIDTH;\n-                int legendHeight = GetLegendGraphicRequest.DEFAULT_HEIGHT;\n+                return;\n+            }\n \n-                if (sampleStyle != null) {\n-                    // delegate to legendSample the calculus of proper legend size for\n-                    // the given style\n-                    Dimension dimension;\n-                    try {\n-                        dimension = legendSample.getLegendURLSize(sampleStyle);\n-                        if (dimension != null) {\n-                            legendWidth = (int) dimension.getWidth();\n-                            legendHeight = (int) dimension.getHeight();\n-                        }\n-                    } catch (Exception e) {\n-                        LOGGER.log(\n-                                Level.WARNING, \"Error getting LegendURL dimensions from sample\", e);\n-                    }\n-                }\n-                String defaultFormat = GetLegendGraphicRequest.DEFAULT_FORMAT;\n-\n-                if (null == wmsConfig.getLegendGraphicOutputFormat(defaultFormat)) {\n-                    if (LOGGER.isLoggable(Level.WARNING)) {\n-                        LOGGER.warning(\n-                                new StringBuffer(\"Default legend format (\")\n-                                        .append(defaultFormat)\n-                                        .append(\n-                                                \")is not supported (jai not available?), can't add LegendURL element\")\n-                                        .toString());\n-                    }\n+            if (LOGGER.isLoggable(Level.FINE)) {\n+                LOGGER.fine(\"Adding GetLegendGraphic call as LegendURL\");\n+            }\n \n-                    return;\n-                }\n+            AttributesImpl attrs = new AttributesImpl();\n+            attrs.addAttribute(\"\", \"width\", \"width\", \"\", String.valueOf(legendWidth));\n \n-                if (LOGGER.isLoggable(Level.FINE)) {\n-                    LOGGER.fine(\"Adding GetLegendGraphic call as LegendURL\");\n-                }\n+            attrs.addAttribute(\"\", \"height\", \"height\", \"\", String.valueOf(legendHeight));\n \n-                AttributesImpl attrs = new AttributesImpl();\n-                attrs.addAttribute(\"\", \"width\", \"width\", \"\", String.valueOf(legendWidth));\n-\n-                attrs.addAttribute(\"\", \"height\", \"height\", \"\", String.valueOf(legendHeight));\n-\n-                start(\"LegendURL\", attrs);\n-\n-                element(\"Format\", defaultFormat);\n-                attrs.clear();\n-\n-                String layerName = layer.prefixedName();\n-                Map<String, String> params =\n-                        params(\n-                                \"request\",\n-                                \"GetLegendGraphic\",\n-                                \"format\",\n-                                defaultFormat,\n-                                \"width\",\n-                                String.valueOf(GetLegendGraphicRequest.DEFAULT_WIDTH),\n-                                \"height\",\n-                                String.valueOf(GetLegendGraphicRequest.DEFAULT_HEIGHT),\n-                                \"layer\",\n-                                layerName);\n-                if (style != null) {\n-                    params.put(\"style\", style.getName());\n-                }\n-                String legendURL = buildURL(request.getBaseUrl(), \"wms\", params, URLType.SERVICE);\n+            start(\"LegendURL\", attrs);\n \n-                attrs.addAttribute(\"\", \"xmlns:xlink\", \"xmlns:xlink\", \"\", XLINK_NS);\n-                attrs.addAttribute(XLINK_NS, \"type\", \"xlink:type\", \"\", \"simple\");\n-                attrs.addAttribute(XLINK_NS, \"href\", \"xlink:href\", \"\", legendURL);\n-                element(\"OnlineResource\", null, attrs);\n+            element(\"Format\", defaultFormat);\n+            attrs.clear();\n \n-                end(\"LegendURL\");\n+            String layerName = layer.prefixedName();\n+            Map<String, String> params =\n+                    params(\n+                            \"request\",\n+                            \"GetLegendGraphic\",\n+                            \"format\",\n+                            defaultFormat,\n+                            \"width\",\n+                            String.valueOf(GetLegendGraphicRequest.DEFAULT_WIDTH),\n+                            \"height\",\n+                            String.valueOf(GetLegendGraphicRequest.DEFAULT_HEIGHT),\n+                            \"layer\",\n+                            layerName);\n+            if (style != null) {\n+                params.put(\"style\", style.getName());\n             }\n+            String legendURL = buildURL(request.getBaseUrl(), \"wms\", params, URLType.SERVICE);\n+\n+            attrs.addAttribute(\"\", \"xmlns:xlink\", \"xmlns:xlink\", \"\", XLINK_NS);\n+            attrs.addAttribute(XLINK_NS, \"type\", \"xlink:type\", \"\", \"simple\");\n+            attrs.addAttribute(XLINK_NS, \"href\", \"xlink:href\", \"\", legendURL);\n+            element(\"OnlineResource\", null, attrs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9c3e344818bd029c637e3c2247cad127c8e67"}, "originalPosition": 201}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6e89970519f119350682a5fd7a17e6aeb8a7c75", "author": {"user": {"login": "imranrajjad", "name": "Imran"}}, "url": "https://github.com/geoserver/geoserver/commit/b6e89970519f119350682a5fd7a17e6aeb8a7c75", "committedDate": "2020-02-11T18:56:24Z", "message": "[GEOS-9489] addressing Jody and Andrea comments\n\n-common utility method to populate legend attributes\n-reverted documentation change\n-removed direct file support outside data_dir/styles\n-updated unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjI5MTQz", "url": "https://github.com/geoserver/geoserver/pull/4033#pullrequestreview-357229143", "createdAt": "2020-02-12T07:15:10Z", "commit": {"oid": "b6e89970519f119350682a5fd7a17e6aeb8a7c75"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzoxNToxMFrOFojxZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzoxNToxMFrOFojxZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MzQ0NA==", "bodyText": "This method is not needed, the logic is already provided in the GeoServerDataDirectory class:\nA couple things - we don't want a File, we just want to check if a file exists.\nThe class GeoServerDataDirectory already has tested methods for these checks:\nResource icon = geoServerDataDirectory.getStylesget(value );\nreturn icon.getType() == Resource.Type.RESOURCE;", "url": "https://github.com/geoserver/geoserver/pull/4033#discussion_r378073444", "createdAt": "2020-02-12T07:15:10Z", "author": {"login": "jodygarnett"}, "path": "src/web/wms/src/main/java/org/geoserver/wms/web/data/ExternalGraphicPanel.java", "diffHunk": "@@ -350,7 +330,28 @@ private void updateVisibility(boolean b) {\n         show.setVisible(!b);\n     }\n \n-    private boolean isUrlOrFile(final String uri) {\n-        return externalURIPattern.matches(uri);\n+    private boolean isUrl(final String uri) {\n+        return uri.startsWith(\"http\");\n+    }\n+\n+    private File findResourceinStylesDirectory(WorkspaceInfo wsInfo, String value)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e89970519f119350682a5fd7a17e6aeb8a7c75"}, "originalPosition": 93}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b390d4d0d049dc6fce5d8c96f946c2e52fe38f3a", "author": {"user": {"login": "imranrajjad", "name": "Imran"}}, "url": "https://github.com/geoserver/geoserver/commit/b390d4d0d049dc6fce5d8c96f946c2e52fe38f3a", "committedDate": "2020-02-16T16:19:48Z", "message": "[GEOS-9489] rev 2 Addressing Jody comments\n\n-switched to GeoServerDataDirectory from Java File API"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NzcwNTM1", "url": "https://github.com/geoserver/geoserver/pull/4033#pullrequestreview-359770535", "createdAt": "2020-02-17T14:24:08Z", "commit": {"oid": "b390d4d0d049dc6fce5d8c96f946c2e52fe38f3a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoyNDowOFrOFqmL2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDozMDo0N1rOFqmaDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxMDEzNg==", "bodyText": "Commented out code?", "url": "https://github.com/geoserver/geoserver/pull/4033#discussion_r380210136", "createdAt": "2020-02-17T14:24:08Z", "author": {"login": "aaime"}, "path": "src/web/wms/src/main/java/org/geoserver/wms/web/data/ExternalGraphicPanel.java", "diffHunk": "@@ -304,25 +280,20 @@ protected URLConnection getExternalGraphic(AjaxRequestTarget target, Form<?> for\n         if (onlineResource.getModelObject() != null) {\n             URL url = null;\n             try {\n-                String baseUrl = baseURL(form);\n+                // String baseUrl = baseURL(form);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b390d4d0d049dc6fce5d8c96f946c2e52fe38f3a"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxMDgyNQ==", "bodyText": "Potentially inconsistent logic... here is uri.isAbsolute() && isUrl(value) but below in the class (getExternalGraphic) there is a uri.isAbsolute() || isUrl(value).", "url": "https://github.com/geoserver/geoserver/pull/4033#discussion_r380210825", "createdAt": "2020-02-17T14:25:28Z", "author": {"login": "aaime"}, "path": "src/web/wms/src/main/java/org/geoserver/wms/web/data/ExternalGraphicPanel.java", "diffHunk": "@@ -101,13 +100,8 @@ public void validate(IValidatable<String> input) {\n                         } catch (URISyntaxException e1) {\n                             // Unable to check if absolute\n                         }\n-                        if (uri != null && uri.isAbsolute()) {\n+                        if (uri != null && uri.isAbsolute() && isUrl(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b390d4d0d049dc6fce5d8c96f946c2e52fe38f3a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxMjMyNg==", "bodyText": "New public method, no javadoc.", "url": "https://github.com/geoserver/geoserver/pull/4033#discussion_r380212326", "createdAt": "2020-02-17T14:28:14Z", "author": {"login": "aaime"}, "path": "src/wms/src/main/java/org/geoserver/wms/capabilities/CapabilityUtil.java", "diffHunk": "@@ -186,4 +187,14 @@ public static boolean validateLegendInfo(LegendInfo legend) {\n                 && legend.getHeight() > 0\n                 && legend.getWidth() > 0;\n     }\n+\n+    public static AttributesImpl addGetLegendAttributes(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b390d4d0d049dc6fce5d8c96f946c2e52fe38f3a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxMzc3Mg==", "bodyText": "HTP_LEGND? HTTP_LEGEND was not that much longer (other instance in this file)", "url": "https://github.com/geoserver/geoserver/pull/4033#discussion_r380213772", "createdAt": "2020-02-17T14:30:47Z", "author": {"login": "aaime"}, "path": "src/wms/src/test/java/org/geoserver/wms/wms_1_1_1/LegendCapabilitiesTest.java", "diffHunk": "@@ -31,16 +33,22 @@\n     // Reusing layer and SLD files from another test; their content doesn't really matter.\n     // What is important for this test is the legend info we are adding.\n     private static final String LAYER_NAME = \"watertemp\";\n+    private static final String LAYER_NAME_HTP_LEGND = \"watertemp_http_legend\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b390d4d0d049dc6fce5d8c96f946c2e52fe38f3a"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMjAyNDMw", "url": "https://github.com/geoserver/geoserver/pull/4033#pullrequestreview-360202430", "createdAt": "2020-02-18T09:55:14Z", "commit": {"oid": "3e7a8b0b1a64830cea8f115da49fccc4aa986b70"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwOTo1NToxNVrOFq76pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwOTo1NToxNVrOFq76pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU2NjE4Mw==", "bodyText": "A check that we are about to include with the checkstyle upgrade will fail on undocumented params... either a param is there and documented, or it can be removed (won't complain for missing docs), but cannot be declared and undocumented.", "url": "https://github.com/geoserver/geoserver/pull/4033#discussion_r380566183", "createdAt": "2020-02-18T09:55:15Z", "author": {"login": "aaime"}, "path": "src/wms/src/main/java/org/geoserver/wms/capabilities/CapabilityUtil.java", "diffHunk": "@@ -188,6 +188,14 @@ public static boolean validateLegendInfo(LegendInfo legend) {\n                 && legend.getWidth() > 0;\n     }\n \n+    /**\n+     * A Utility method to populate legend url href attribute\n+     *\n+     * @param attrs AttributesImpl to be poplated with Legend URL href\n+     * @param legendURL URL String\n+     * @param XLINK_NS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7a8b0b1a64830cea8f115da49fccc4aa986b70"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c717a570b3fdb6fd7fc435d6d2cdd5a57481fc53", "author": {"user": {"login": "imranrajjad", "name": "Imran"}}, "url": "https://github.com/geoserver/geoserver/commit/c717a570b3fdb6fd7fc435d6d2cdd5a57481fc53", "committedDate": "2020-02-18T10:06:29Z", "message": "[GEOS-9489] AA requested changes rev 3\n\n-fixed logic inconsistency\n-cleaned up comments and unused variables\n-added javadocs to new method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e7a8b0b1a64830cea8f115da49fccc4aa986b70", "author": {"user": {"login": "imranrajjad", "name": "Imran"}}, "url": "https://github.com/geoserver/geoserver/commit/3e7a8b0b1a64830cea8f115da49fccc4aa986b70", "committedDate": "2020-02-18T08:10:19Z", "message": "[GEOS-9489] AA requested changes rev 3\n\n-fixed logic inconsistency\n-cleaned up comments and unused variables\n-added javadocs to new method"}, "afterCommit": {"oid": "c717a570b3fdb6fd7fc435d6d2cdd5a57481fc53", "author": {"user": {"login": "imranrajjad", "name": "Imran"}}, "url": "https://github.com/geoserver/geoserver/commit/c717a570b3fdb6fd7fc435d6d2cdd5a57481fc53", "committedDate": "2020-02-18T10:06:29Z", "message": "[GEOS-9489] AA requested changes rev 3\n\n-fixed logic inconsistency\n-cleaned up comments and unused variables\n-added javadocs to new method"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1481, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}