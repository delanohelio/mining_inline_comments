{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MDEzNDM2", "number": 4377, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0NTo0NFrOELSS4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0NjoyOFrOELSTcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjY5NTM5OnYy", "diffSide": "RIGHT", "path": "src/extension/sldService/src/main/java/org/geoserver/sldservice/utils/classifier/RasterSymbolizerBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0NTo0NFrOGsz4Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0NTo0NFrOGsz4Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY0MDU1MA==", "bodyText": "You extrac cm, but then use classMembers[i] right next line? :-D\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (cm != 0d && total != 0d) percentages[i] = (classMembers[i] / total) * 100;\n          \n          \n            \n                        if (cm != 0d && total != 0d) percentages[i] = (cm / total) * 100;", "url": "https://github.com/geoserver/geoserver/pull/4377#discussion_r449640550", "createdAt": "2020-07-03T15:45:44Z", "author": {"login": "aaime"}, "path": "src/extension/sldService/src/main/java/org/geoserver/sldservice/utils/classifier/RasterSymbolizerBuilder.java", "diffHunk": "@@ -496,7 +496,9 @@ private String getPercentagesLabelPortion(double[] percentages, int i) {\n         double total = DoubleStream.of(classMembers).sum();\n         double[] percentages = new double[classNum];\n         for (int i = 0; i < classNum; i++) {\n-            percentages[i] = (classMembers[i] / total) * 100;\n+            double cm = classMembers[i];\n+            if (cm != 0d && total != 0d) percentages[i] = (classMembers[i] / total) * 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4cac8a8042bb010417aa38bd849ca432c51154"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjY5NjU2OnYy", "diffSide": "RIGHT", "path": "src/extension/sldService/src/main/java/org/geoserver/sldservice/utils/classifier/RasterSymbolizerBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0NjoxOVrOGsz5IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0NjoxOVrOGsz5IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY0MDczNg==", "bodyText": "cm or classMembers? Consistency please :-D", "url": "https://github.com/geoserver/geoserver/pull/4377#discussion_r449640736", "createdAt": "2020-07-03T15:46:19Z", "author": {"login": "aaime"}, "path": "src/extension/sldService/src/main/java/org/geoserver/sldservice/utils/classifier/RasterSymbolizerBuilder.java", "diffHunk": "@@ -509,7 +511,9 @@ private String getPercentagesLabelPortion(double[] percentages, int i) {\n         double[] percentages = new double[intervals];\n         int total = IntStream.of(bins).sum();\n         for (int i = 0; i < intervals; i++) {\n-            percentages[i] = ((double) bins[i] / total) * 100;\n+            double classMembers = bins[i];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4cac8a8042bb010417aa38bd849ca432c51154"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjY5NjgyOnYy", "diffSide": "RIGHT", "path": "src/extension/sldService/src/main/java/org/geoserver/sldservice/utils/classifier/RulesBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0NjoyOFrOGsz5UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0NjoyOFrOGsz5UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY0MDc4NQ==", "bodyText": "See above", "url": "https://github.com/geoserver/geoserver/pull/4377#discussion_r449640785", "createdAt": "2020-07-03T15:46:28Z", "author": {"login": "aaime"}, "path": "src/extension/sldService/src/main/java/org/geoserver/sldservice/utils/classifier/RulesBuilder.java", "diffHunk": "@@ -559,7 +559,10 @@ private Expression normalizeProperty(\n     private double[] computeCustomPercentages(int[][] bins, double totalSize) {\n         double[] percentages = new double[bins.length];\n         for (int i = 0; i < bins.length; i++) {\n-            percentages[i] = ((double) bins[i][0] / totalSize) * 100;\n+            double classMembers = bins[i][0];\n+            if (classMembers != 0d && totalSize != 0d)\n+                percentages[i] = ((double) bins[i][0] / totalSize) * 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4cac8a8042bb010417aa38bd849ca432c51154"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3957, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}