{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NTY5MTkx", "number": 4264, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoxNjowMVrOEDYe7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo0NjowNVrOEIcmuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTgyMzE2OnYy", "diffSide": "RIGHT", "path": "src/extension/vectortiles/src/main/java/org/geoserver/wms/vector/VectorTileMapOutputFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoxNjowMVrOGgXhcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoxNjowMVrOGgXhcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5MzAwOQ==", "bodyText": "No need for the comment, the change must be covered by a test case anyways.", "url": "https://github.com/geoserver/geoserver/pull/4264#discussion_r436593009", "createdAt": "2020-06-08T10:16:01Z", "author": {"login": "aaime"}, "path": "src/extension/vectortiles/src/main/java/org/geoserver/wms/vector/VectorTileMapOutputFormat.java", "diffHunk": "@@ -203,7 +203,10 @@ void run(\n                     continue;\n                 }\n \n-                final String layerName = feature.getName().getLocalPart();\n+                final String layerName =\n+                        feature.getType()\n+                                .getName()\n+                                .getLocalPart(); // Pregeneralized have null getName()!!!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae30de389f847a654021b6dcea91a126bfa30d8f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTg1MTA2OnYy", "diffSide": "RIGHT", "path": "src/extension/vectortiles/src/main/java/org/geotools/renderer/lite/VectorMapRenderUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoyNDo0NlrOGgXy0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoyNDo0NlrOGgXy0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5NzQ1OQ==", "bodyText": "The screenmap is already set at the PipelineBuilder level, should probably be using that one (a code path to make it available needs to be created), but if you do, then the PreProcess step needs have the screenamap usage disabled.\nEven if they are kept separate, the two screenmaps should at least have the exact same config.", "url": "https://github.com/geoserver/geoserver/pull/4264#discussion_r436597459", "createdAt": "2020-06-08T10:24:46Z", "author": {"login": "aaime"}, "path": "src/extension/vectortiles/src/main/java/org/geotools/renderer/lite/VectorMapRenderUtils.java", "diffHunk": "@@ -105,10 +110,99 @@ public static Query getStyleQuery(Layer layer, WMSMapContent mapContent) throws\n         query.setProperties(Query.ALL_PROPERTIES);\n \n         Hints hints = query.getHints();\n+\n         hints.put(Hints.FEATURE_2D, Boolean.TRUE);\n \n+        // update the screenmaps\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae30de389f847a654021b6dcea91a126bfa30d8f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTg1Mzc5OnYy", "diffSide": "RIGHT", "path": "src/extension/vectortiles/src/main/java/org/geotools/renderer/lite/VectorMapRenderUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoyNTozNFrOGgX0bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoyNTozNFrOGgX0bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5Nzg3MA==", "bodyText": "Code should be updated to match the vector tiles context (there is no \"renderer screenmap\", but the code could be referring to the PreProcess pipeline step screenmap instead).", "url": "https://github.com/geoserver/geoserver/pull/4264#discussion_r436597870", "createdAt": "2020-06-08T10:25:34Z", "author": {"login": "aaime"}, "path": "src/extension/vectortiles/src/main/java/org/geotools/renderer/lite/VectorMapRenderUtils.java", "diffHunk": "@@ -105,10 +110,99 @@ public static Query getStyleQuery(Layer layer, WMSMapContent mapContent) throws\n         query.setProperties(Query.ALL_PROPERTIES);\n \n         Hints hints = query.getHints();\n+\n         hints.put(Hints.FEATURE_2D, Boolean.TRUE);\n \n+        // update the screenmaps\n+        try {\n+            CoordinateReferenceSystem crs = schema.getCoordinateReferenceSystem();\n+            if (crs != null) {\n+                FeatureSource<FeatureType, Feature> source =\n+                        (FeatureSource<FeatureType, Feature>) layer.getFeatureSource();\n+                Set<RenderingHints.Key> fsHints = source.getSupportedHints();\n+                CoordinateReferenceSystem destSRS = query.getCoordinateSystemReproject();\n+                MathTransform sourceToScreen =\n+                        buildFullTransform(\n+                                crs,\n+                                destSRS != null ? destSRS : crs,\n+                                mapContent.getRenderingTransform());\n+                double[] spans =\n+                        // fallback, use the entire rendering area\n+                        Decimator.computeGeneralizationDistances(\n+                                sourceToScreen.inverse(), screenSize, generalizationDistance);\n+                for (LiteFeatureTypeStyle fts : styleList) {\n+                    if (fts.screenMap != null) {\n+                        fts.screenMap.setTransform(sourceToScreen);\n+                        fts.screenMap.setSpans(spans[0], spans[1]);\n+                        if (fsHints.contains(Hints.SCREENMAP)) {\n+                            // replace the renderer screenmap with the hint, and avoid doing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae30de389f847a654021b6dcea91a126bfa30d8f"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjkyNzMxOnYy", "diffSide": "RIGHT", "path": "src/extension/vectortiles/src/main/java/org/geoserver/wms/vector/PipelineBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo0NjowNVrOGoajyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo0NjowNVrOGoajyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMTM3MA==", "bodyText": "Not so sure about this (actually copied from other Renderer). in case of GEOMETRY_SIMPLIFICATION do we have to skip the GEOMETRY_DISTANCE hint? why can't we leverage on both?\nNote also that with VectorTile GEOMETRY_SIMPLIFICATION is causing invalid geometries as discussed here", "url": "https://github.com/geoserver/geoserver/pull/4264#discussion_r445031370", "createdAt": "2020-06-24T16:46:05Z", "author": {"login": "ccancellieri"}, "path": "src/extension/vectortiles/src/main/java/org/geoserver/wms/vector/PipelineBuilder.java", "diffHunk": "@@ -268,8 +278,27 @@ public PipelineBuilder transform(final boolean transformToScreenCoordinates) {\n      *\n      * @param isTransformToScreenCoordinates Use screen coordinate space simplification tolerance\n      */\n-    public PipelineBuilder simplify(boolean isTransformToScreenCoordinates) {\n+    public PipelineBuilder simplify(\n+            boolean isTransformToScreenCoordinates,\n+            final Set<RenderingHints.Key> fsHints,\n+            final Hints qHints) {\n \n+        if (fsHints != null && qHints != null) {\n+            // ... if possible we let the datastore do the generalization\n+            if (fsHints.contains(Hints.GEOMETRY_SIMPLIFICATION)) {\n+                // good, we don't need to perform in memory generalization, the datastore\n+                // does it all for us\n+                qHints.put(Hints.GEOMETRY_SIMPLIFICATION, context.sourceCRSSimplificationDistance);\n+\n+                return this;\n+\n+            } else if (fsHints.contains(Hints.GEOMETRY_DISTANCE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0906d4a46a3b21f05b3615a791f53f1b7d7a2150"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3991, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}