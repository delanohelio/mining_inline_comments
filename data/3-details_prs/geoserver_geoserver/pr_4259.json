{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNjA5NzU1", "number": 4259, "title": "[GEOS-9630] Add details on store configuration in App-Schema Mongo in\u2026", "bodyText": "\u2026tegration doc\nJira ticket https://osgeo-org.atlassian.net/browse/GEOS-9630\nThis pull request add some details about mongo schema generation in the documentation regarding app-schema and mongo integration.\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for community modules):\n\n There is a ticket in Jira describing the issue/improvement/feature (a notable exemptions is, changes not visible to end users)\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOS-XYZW] Title of the Jira ticket\" (export to XML in Jira generates the message in this exact form)\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Commits changing the UI, existing user workflows, or adding new functionality, need to include documentation updates (screenshots, text)\n Commits changing the REST API, or any configuration object, should check if the REST API docs (Swagger YAML files and classic documentation) need to be updated.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-05-25T08:11:10Z", "url": "https://github.com/geoserver/geoserver/pull/4259", "merged": true, "mergeCommit": {"oid": "007424edd56cd98d36847982478846b9f3072d80"}, "closed": true, "closedAt": "2020-05-26T14:52:18Z", "author": {"login": "taba90"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckrhgIAH2gAyNDIyNjA5NzU1OmUzYjZlNTk0YzMyZTg5ZDcyY2U0ODc3ZjM2NDU2ZjUyMWQ0YTZiMTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclF3FFAH2gAyNDIyNjA5NzU1OmVlMzZjMjc5YzdmMzhhZGU4ZjViMjMzNWM0NDhlYWU5OTRlODdlNmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3b6e594c32e89d72ce4877f36456f521d4a6b11", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geoserver/geoserver/commit/e3b6e594c32e89d72ce4877f36456f521d4a6b11", "committedDate": "2020-05-25T08:09:52Z", "message": "[GEOS-9630] Add details on store configuration in App-Schema Mongo integration doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NjAxNjkw", "url": "https://github.com/geoserver/geoserver/pull/4259#pullrequestreview-417601690", "createdAt": "2020-05-25T09:58:16Z", "commit": {"oid": "e3b6e594c32e89d72ce4877f36456f521d4a6b11"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTo1ODoxN1rOGZ72JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDowMDozOFrOGZ76gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0ODEwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When configuring app-schema mappings for a MongoDB source there are few things to mind of regarding store configuration.\n          \n          \n            \n            When configuring app-schema mappings for a MongoDB source some connection parameters tweaks might be needed, in order to ensure that the full set of recognized and made available to the mapping.", "url": "https://github.com/geoserver/geoserver/pull/4259#discussion_r429848101", "createdAt": "2020-05-25T09:58:17Z", "author": {"login": "aaime"}, "path": "doc/en/user/source/data/app-schema/mongo-tutorial.rst", "diffHunk": "@@ -181,6 +181,39 @@ This is the schema that will be used to do the mappings in app-schema:\n Mappings\n --------\n \n+MongoDB Store\n+^^^^^^^^^^^^^\n+\n+When configuring app-schema mappings for a MongoDB source there are few things to mind of regarding store configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6e594c32e89d72ce4877f36456f521d4a6b11"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0ODMyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The building of a MongoDB Store implies the creation of a Mongo schema, inferred from the db collection. \n          \n          \n            \n            The setup of a MongoDB Store implies the creation of a Mongo schema, inferred from the db collection.", "url": "https://github.com/geoserver/geoserver/pull/4259#discussion_r429848328", "createdAt": "2020-05-25T09:58:45Z", "author": {"login": "aaime"}, "path": "doc/en/user/source/data/app-schema/mongo-tutorial.rst", "diffHunk": "@@ -181,6 +181,39 @@ This is the schema that will be used to do the mappings in app-schema:\n Mappings\n --------\n \n+MongoDB Store\n+^^^^^^^^^^^^^\n+\n+When configuring app-schema mappings for a MongoDB source there are few things to mind of regarding store configuration.\n+The building of a MongoDB Store implies the creation of a Mongo schema, inferred from the db collection. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6e594c32e89d72ce4877f36456f521d4a6b11"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0ODU3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The inferring process by default will use a random Mongo object from the collection. If that object doesn't contain all attributes of interest, the result will be an incomplete schema.  \n          \n          \n            \n            This process by default will use a random Mongo object from the collection. If that object doesn't contain all attributes of interest, the result will be an incomplete schema.", "url": "https://github.com/geoserver/geoserver/pull/4259#discussion_r429848571", "createdAt": "2020-05-25T09:59:17Z", "author": {"login": "aaime"}, "path": "doc/en/user/source/data/app-schema/mongo-tutorial.rst", "diffHunk": "@@ -181,6 +181,39 @@ This is the schema that will be used to do the mappings in app-schema:\n Mappings\n --------\n \n+MongoDB Store\n+^^^^^^^^^^^^^\n+\n+When configuring app-schema mappings for a MongoDB source there are few things to mind of regarding store configuration.\n+The building of a MongoDB Store implies the creation of a Mongo schema, inferred from the db collection. \n+The inferring process by default will use a random Mongo object from the collection. If that object doesn't contain all attributes of interest, the result will be an incomplete schema.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6e594c32e89d72ce4877f36456f521d4a6b11"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0ODc0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This behaviour can thus be controlled by means of the following two parameters that should be provided inside the ``<parameters>`` element under the ``<DataStore>`` node:\n          \n          \n            \n            This behaviour can thus be controlled by means of the following two parameters, which should be provided inside the ``<parameters>`` element under the ``<DataStore>`` node:", "url": "https://github.com/geoserver/geoserver/pull/4259#discussion_r429848744", "createdAt": "2020-05-25T09:59:38Z", "author": {"login": "aaime"}, "path": "doc/en/user/source/data/app-schema/mongo-tutorial.rst", "diffHunk": "@@ -181,6 +181,39 @@ This is the schema that will be used to do the mappings in app-schema:\n Mappings\n --------\n \n+MongoDB Store\n+^^^^^^^^^^^^^\n+\n+When configuring app-schema mappings for a MongoDB source there are few things to mind of regarding store configuration.\n+The building of a MongoDB Store implies the creation of a Mongo schema, inferred from the db collection. \n+The inferring process by default will use a random Mongo object from the collection. If that object doesn't contain all attributes of interest, the result will be an incomplete schema.  \n+This behaviour can thus be controlled by means of the following two parameters that should be provided inside the ``<parameters>`` element under the ``<DataStore>`` node:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6e594c32e89d72ce4877f36456f521d4a6b11"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0ODkwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * the parameter ``objs_id_schema``, which specifies a comma separeted list of MongoDB JSON object to be used to build the schema (not needed if ``max_objs_schema`` is present)\n          \n          \n            \n            * ``objs_id_schema``, which specifies a comma separeted list of MongoDB JSON object to be used to build the schema (not needed if ``max_objs_schema`` is present).", "url": "https://github.com/geoserver/geoserver/pull/4259#discussion_r429848900", "createdAt": "2020-05-25T09:59:57Z", "author": {"login": "aaime"}, "path": "doc/en/user/source/data/app-schema/mongo-tutorial.rst", "diffHunk": "@@ -181,6 +181,39 @@ This is the schema that will be used to do the mappings in app-schema:\n Mappings\n --------\n \n+MongoDB Store\n+^^^^^^^^^^^^^\n+\n+When configuring app-schema mappings for a MongoDB source there are few things to mind of regarding store configuration.\n+The building of a MongoDB Store implies the creation of a Mongo schema, inferred from the db collection. \n+The inferring process by default will use a random Mongo object from the collection. If that object doesn't contain all attributes of interest, the result will be an incomplete schema.  \n+This behaviour can thus be controlled by means of the following two parameters that should be provided inside the ``<parameters>`` element under the ``<DataStore>`` node:\n+\n+* the parameter ``objs_id_schema``, which specifies a comma separeted list of MongoDB JSON object to be used to build the schema (not needed if ``max_objs_schema`` is present)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6e594c32e89d72ce4877f36456f521d4a6b11"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0OTIxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * the parameter ``max_objs_schema``, which specifies the max number of MongoDB JSON object to be used to build the schema and where a value of ``-1`` means all the objects present in the collection (not needed if ``objs_id_schema`` is present)\n          \n          \n            \n            * ``max_objs_schema``, which specifies the max number of MongoDB JSON object to be used to build the schema and where a value of ``-1`` means all the objects present in the collection (not needed if ``objs_id_schema`` is present).", "url": "https://github.com/geoserver/geoserver/pull/4259#discussion_r429849216", "createdAt": "2020-05-25T10:00:38Z", "author": {"login": "aaime"}, "path": "doc/en/user/source/data/app-schema/mongo-tutorial.rst", "diffHunk": "@@ -181,6 +181,39 @@ This is the schema that will be used to do the mappings in app-schema:\n Mappings\n --------\n \n+MongoDB Store\n+^^^^^^^^^^^^^\n+\n+When configuring app-schema mappings for a MongoDB source there are few things to mind of regarding store configuration.\n+The building of a MongoDB Store implies the creation of a Mongo schema, inferred from the db collection. \n+The inferring process by default will use a random Mongo object from the collection. If that object doesn't contain all attributes of interest, the result will be an incomplete schema.  \n+This behaviour can thus be controlled by means of the following two parameters that should be provided inside the ``<parameters>`` element under the ``<DataStore>`` node:\n+\n+* the parameter ``objs_id_schema``, which specifies a comma separeted list of MongoDB JSON object to be used to build the schema (not needed if ``max_objs_schema`` is present)\n+\n+.. code-block:: xml\n+\n+  <Parameter>\n+    <name>objs_id_schema</name>\n+    <value>6eb85d889396eb0475f815ef,6eb85d889396eb0475f815eg</value>\n+  </Parameter>\n+\n+\n+* the parameter ``max_objs_schema``, which specifies the max number of MongoDB JSON object to be used to build the schema and where a value of ``-1`` means all the objects present in the collection (not needed if ``objs_id_schema`` is present)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6e594c32e89d72ce4877f36456f521d4a6b11"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee36c279c7f38ade8f5b2335c448eae994e87e6d", "author": {"user": {"login": "nmco", "name": "Nuno Oliveira"}}, "url": "https://github.com/geoserver/geoserver/commit/ee36c279c7f38ade8f5b2335c448eae994e87e6d", "committedDate": "2020-05-26T14:50:58Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Andrea Aime <andrea.aime@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1446, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}