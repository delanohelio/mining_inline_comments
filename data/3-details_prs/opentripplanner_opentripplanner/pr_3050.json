{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NDc5MzA3", "number": 3050, "title": "Allow multiple time-constrained accesses and egresses for each stop", "bodyText": "Currently the RAPTOR to itinerary mapper is limited to using only one access and egress per stop. Also the algorithm itself uses only one egress per stop. This pull request adds the functionality to add multiple time-constrained accesses and egresses. It is useful eg. when using a bike share scheme or flexible transit, with limited operating hours as the first and/or last mile.\nIt adds two methods, earliestDepartureTime and latestArrivalTime to RaptorTransfer . These are used depending on the search direction to set the either the departure or arrival times of the first and last leg. Current implementations return the given time, as there are no restrictions.\nTo be completed by pull request submitter:\n\n issue: Link to or create an issue that describes the relevant feature or bug. Add GitHub keywords to this PR's description (e.g., closes #45).\n roadmap: Check the roadmap for this feature or bug. If it is not already on the roadmap, PLC will discuss as part of the review process.\n tests: Have you added relevant test coverage? Are all the tests passing on the continuous integration service (Travis CI)?\n formatting: Have you followed the suggested code style?\n documentation: If you are adding a new configuration option, have you added an explanation to the configuration documentation tables and sections?\n changelog: add a bullet point to the changelog file with description and link to the linked issue\n\nTo be completed by @opentripplanner/plc:\n\n reviews and approvals by 2 members, ideally from different organizations\n after merging: update the relevant card on the roadmap", "createdAt": "2020-04-27T12:48:52Z", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050", "merged": true, "mergeCommit": {"oid": "c36e8e41fd3ae732a60109b58c9384f5506507e8"}, "closed": true, "closedAt": "2020-05-05T09:00:32Z", "author": {"login": "hannesj"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcb_FaTABqjMyNzkwMzQwNjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceQPczAFqTQwNTYwNjc4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6f5e5fa9e592aabd269dd4b09590cd0cb8a72ed", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f6f5e5fa9e592aabd269dd4b09590cd0cb8a72ed", "committedDate": "2020-04-27T11:19:19Z", "message": "Use earliestDepartureTime for egress legs"}, "afterCommit": {"oid": "ec8b0ac284e8e6412354fe22210475f9aca7422f", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ec8b0ac284e8e6412354fe22210475f9aca7422f", "committedDate": "2020-04-28T07:51:41Z", "message": "Use earliestDepartureTime for egress legs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNjYwMjE1", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#pullrequestreview-401660215", "createdAt": "2020-04-28T09:30:37Z", "commit": {"oid": "b7ac4fa1572b7885c18fc428abbd71ba7ae0fbcd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTozMDozN1rOGNLPoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTozMDozN1rOGNLPoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ2ODg5Nw==", "bodyText": "Use calculator", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r416468897", "createdAt": "2020-04-28T09:30:37Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/multicriteria/McRangeRaptorWorkerState.java", "diffHunk": "@@ -76,11 +76,17 @@ private void setupIteration() {\n \n     @Override\n     public void setInitialTimeForIteration(RaptorTransfer accessLeg, int iterationDepartureTime) {\n+        // Earliest possible departure time from the origin using this Access.\n+        int departureTime = accessLeg.earliestDepartureTime(iterationDepartureTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ac4fa1572b7885c18fc428abbd71ba7ae0fbcd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNjc0NDM1", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#pullrequestreview-401674435", "createdAt": "2020-04-28T09:49:06Z", "commit": {"oid": "ec8b0ac284e8e6412354fe22210475f9aca7422f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTo0OTowN1rOGNL9ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTo0OTowN1rOGNL9ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ4MDYzNQ==", "bodyText": "Pass costCalculator as an constructor argument", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r416480635", "createdAt": "2020-04-28T09:49:07Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/path/DestinationArrivalPaths.java", "diffHunk": "@@ -49,10 +49,19 @@ public DestinationArrivalPaths(\n     }\n \n     public void add(ArrivalView<T> egressStopArrival, RaptorTransfer egressLeg, int additionalCost) {\n+        int departureTime = calculator.departureTime(egressLeg, egressStopArrival.arrivalTime());\n \n-        int arrivalTime = calculator.plusDuration(egressStopArrival.arrivalTime(), egressLeg.durationInSeconds());\n+        if (departureTime == -1) { return; }\n \n-        DestinationArrival<T> destArrival = new DestinationArrival<>(egressLeg, egressStopArrival, arrivalTime, additionalCost);\n+        int arrivalTime = calculator.plusDuration(departureTime, egressLeg.durationInSeconds());\n+\n+        DestinationArrival<T> destArrival = new DestinationArrival<>(\n+            egressLeg,\n+            egressStopArrival,\n+            departureTime,\n+            arrivalTime,\n+            additionalCost // TODO Add wait cost here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b0ac284e8e6412354fe22210475f9aca7422f"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d04226a144cfb8f9ba7e4f3d170cb19868c3dfc9", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d04226a144cfb8f9ba7e4f3d170cb19868c3dfc9", "committedDate": "2020-04-28T13:37:19Z", "message": "Add wait cost at egress"}, "afterCommit": {"oid": "435bd1898df1028ce936fd3cfd470e5af02fd9dc", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/435bd1898df1028ce936fd3cfd470e5af02fd9dc", "committedDate": "2020-04-29T08:05:08Z", "message": "Add wait cost at egress"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMDkwMjk0", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#pullrequestreview-403090294", "createdAt": "2020-04-29T22:40:51Z", "commit": {"oid": "435bd1898df1028ce936fd3cfd470e5af02fd9dc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjo0MDo1MVrOGOTm_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzoyMTowOFrOGOc0rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1NDUyNA==", "bodyText": "Maybe requestedDepatureTime is a better name for the parameter. Also apply to arrivalTimein next function.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r417654524", "createdAt": "2020-04-29T22:40:51Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/transit/raptor/api/transit/RaptorTransfer.java", "diffHunk": "@@ -19,6 +19,23 @@\n      */\n     int stop();\n \n+    /**\n+     * Returns the earliest possible departure time for the leg. Used Eg. in flex routing and TNC\n+     * when the access leg can't start immediately, but have to wait for a vehicle arriving. Also\n+     * DRT systems or bike shares can have operation time limitations.\n+     *\n+     * Returns -1 if transfer is not possible after the departureTime\n+     */\n+    int earliestDepartureTime(int departureTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "435bd1898df1028ce936fd3cfd470e5af02fd9dc"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1NTA5MA==", "bodyText": "before the departure time\n\nshould be \"before the arrival-time\" ?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r417655090", "createdAt": "2020-04-29T22:42:22Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/transit/raptor/api/transit/RaptorTransfer.java", "diffHunk": "@@ -19,6 +19,23 @@\n      */\n     int stop();\n \n+    /**\n+     * Returns the earliest possible departure time for the leg. Used Eg. in flex routing and TNC\n+     * when the access leg can't start immediately, but have to wait for a vehicle arriving. Also\n+     * DRT systems or bike shares can have operation time limitations.\n+     *\n+     * Returns -1 if transfer is not possible after the departureTime\n+     */\n+    int earliestDepartureTime(int departureTime);\n+\n+    /**\n+     * Returns the latest possible arrival time for the leg. Used in DRT systems or bike shares\n+     * where they can have operation time limitations.\n+     *\n+     * Returns -1 if transfer is not possible before the departure time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "435bd1898df1028ce936fd3cfd470e5af02fd9dc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgwNTQ4Ng==", "bodyText": "This should be added to the Access/Egress-PathLeg sub-interfaces not to this. Use the as methods to switch type.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r417805486", "createdAt": "2020-04-30T07:21:08Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/transit/raptor/api/path/PathLeg.java", "diffHunk": "@@ -30,6 +31,11 @@\n      */\n     int toTime();\n \n+    /**\n+     * The access or egress connecting this leg to the start or end location of the search.\n+     */\n+    RaptorTransfer accessEgress();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "435bd1898df1028ce936fd3cfd470e5af02fd9dc"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57ac092505454f7763adcb8f2a3fe27b32f5cee7", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/57ac092505454f7763adcb8f2a3fe27b32f5cee7", "committedDate": "2020-04-30T10:43:47Z", "message": "Keep internal reference for access and egress legs\n\nThis allows us to map the correct accessa nd egress leg to the itinerary, when a stop has multiple possible accesses or egresses."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a00272cee45e3644e26c3e24fbffe4fe528bc245", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a00272cee45e3644e26c3e24fbffe4fe528bc245", "committedDate": "2020-04-30T10:43:56Z", "message": "Use multiple egresses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb569a176be45f517a2fd6b1e88ea4f65f4e0e50", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/eb569a176be45f517a2fd6b1e88ea4f65f4e0e50", "committedDate": "2020-04-30T10:43:56Z", "message": "Add earliestDepartureTime and latestArrivalTime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae87d0c118ec32e55703b8df0ef61c8e447024ec", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ae87d0c118ec32e55703b8df0ef61c8e447024ec", "committedDate": "2020-04-30T10:43:56Z", "message": "Use earliestDepartureTime for access legs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cbbe27662a630efbb16df36a5ebda97830a3f49", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2cbbe27662a630efbb16df36a5ebda97830a3f49", "committedDate": "2020-04-30T10:43:56Z", "message": "Use earliestDepartureTime for egress legs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8271d6be690aa5ea05afc9943c2d14a1a6e563f5", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8271d6be690aa5ea05afc9943c2d14a1a6e563f5", "committedDate": "2020-04-30T10:43:56Z", "message": "Extract setInitialTimeForIteration into RoutingStrategy\n\nIn order to separate the behaviour for NO_WAIT serches, which should not include time shifted acces or egress states.\nAlso rename TransitRoutingStrategy into RoutingStrategy, as the implementation now also covers how the access should be linked to the trasit part of the search."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc886a2c29093136714208a06f99df7d3ef1b3ed", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/bc886a2c29093136714208a06f99df7d3ef1b3ed", "committedDate": "2020-05-04T08:24:06Z", "message": "Store access in AccessStopArrivalState"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "435bd1898df1028ce936fd3cfd470e5af02fd9dc", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/435bd1898df1028ce936fd3cfd470e5af02fd9dc", "committedDate": "2020-04-29T08:05:08Z", "message": "Add wait cost at egress"}, "afterCommit": {"oid": "bc886a2c29093136714208a06f99df7d3ef1b3ed", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/bc886a2c29093136714208a06f99df7d3ef1b3ed", "committedDate": "2020-05-04T08:24:06Z", "message": "Store access in AccessStopArrivalState"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NjA2Nzg1", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#pullrequestreview-405606785", "createdAt": "2020-05-05T08:59:10Z", "commit": {"oid": "bc886a2c29093136714208a06f99df7d3ef1b3ed"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2105, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}