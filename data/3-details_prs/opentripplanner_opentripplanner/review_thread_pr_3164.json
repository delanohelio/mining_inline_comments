{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NjA4NTg4", "number": 3164, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxOTowMlrOEdLJMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzo0MjoyMFrOEfUY8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI2NzM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/algorithm/mapping/GraphPathToItineraryMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxOTowMlrOHILpXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODowNDoxNlrOHIuqkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTQ3MQ==", "bodyText": "PatternInterlineDwell edges should not exist anymore", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3164#discussion_r478341471", "createdAt": "2020-08-27T11:19:02Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/mapping/GraphPathToItineraryMapper.java", "diffHunk": "@@ -176,9 +176,8 @@ private static CoordinateArrayListSequence makeCoordinates(Edge[] edges) {\n \n     /**\n      * Slice a {@link State} array at the leg boundaries. Leg switches occur when:\n-     * 1. A LEG_SWITCH mode (which itself isn't part of any leg) is seen\n-     * 2. The mode changes otherwise, for instance from BICYCLE to WALK\n-     * 3. A PatternInterlineDwell edge (i.e. interlining) is seen\n+     * 1. The mode changes otherwise, for instance from BICYCLE to WALK\n+     * 2. A PatternInterlineDwell edge (i.e. interlining) is seen", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9073a5bb93d38524c74e9d97a4cac4eddcc81468"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxNTIxNg==", "bodyText": "You're right. I've changed the javadoc accordingly.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3164#discussion_r478915216", "createdAt": "2020-08-28T08:04:16Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/mapping/GraphPathToItineraryMapper.java", "diffHunk": "@@ -176,9 +176,8 @@ private static CoordinateArrayListSequence makeCoordinates(Edge[] edges) {\n \n     /**\n      * Slice a {@link State} array at the leg boundaries. Leg switches occur when:\n-     * 1. A LEG_SWITCH mode (which itself isn't part of any leg) is seen\n-     * 2. The mode changes otherwise, for instance from BICYCLE to WALK\n-     * 3. A PatternInterlineDwell edge (i.e. interlining) is seen\n+     * 1. The mode changes otherwise, for instance from BICYCLE to WALK\n+     * 2. A PatternInterlineDwell edge (i.e. interlining) is seen", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTQ3MQ=="}, "originalCommit": {"oid": "9073a5bb93d38524c74e9d97a4cac4eddcc81468"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDc5MDIxOnYy", "diffSide": "LEFT", "path": "src/main/java/org/opentripplanner/routing/edgetype/ParkAndRideEdge.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzozMjoxNVrOHIQiGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODowNTo1OFrOHIuxJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyMTUyOA==", "bodyText": "We will want to test that paths containing a park and ride transition are still properly broken into legs after these changes. It seems like they would be, but probably worth testing.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3164#discussion_r478421528", "createdAt": "2020-08-27T13:32:15Z", "author": {"login": "abyrd"}, "path": "src/main/java/org/opentripplanner/routing/edgetype/ParkAndRideEdge.java", "diffHunk": "@@ -51,7 +51,6 @@ public State traverse(State s0) {\n             s1.incrementWeight(time);\n             s1.incrementTimeInSeconds(time);\n             s1.setCarParked(false);\n-            s1.setBackMode(TraverseMode.LEG_SWITCH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9073a5bb93d38524c74e9d97a4cac4eddcc81468"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxNjkwMA==", "bodyText": "I did some tests of the park and ride functionality using the built-in client, and I got the the proper car->walk->transit transitions.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3164#discussion_r478916900", "createdAt": "2020-08-28T08:05:58Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/routing/edgetype/ParkAndRideEdge.java", "diffHunk": "@@ -51,7 +51,6 @@ public State traverse(State s0) {\n             s1.incrementWeight(time);\n             s1.incrementTimeInSeconds(time);\n             s1.setCarParked(false);\n-            s1.setBackMode(TraverseMode.LEG_SWITCH);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyMTUyOA=="}, "originalCommit": {"oid": "9073a5bb93d38524c74e9d97a4cac4eddcc81468"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjc1Mzc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/edgetype/StreetTransitLink.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzo0MjoyMFrOHLhUgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxNTo1NVrOHLqX4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg0MjMwNw==", "bodyText": "Now this is returned in the walking instructions, should we try to generate a more descriptive name? Just return the name of the stop?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3164#discussion_r481842307", "createdAt": "2020-09-02T07:42:20Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/routing/edgetype/StreetTransitLink.java", "diffHunk": "@@ -54,10 +54,6 @@ public LineString getGeometry() {\n         return GeometryUtils.getGeometryFactory().createLineString(coordinates);\n     }\n \n-    public TraverseMode getMode() {\n-        return TraverseMode.LEG_SWITCH;\n-    }\n-\n     public String getName() {\n         return \"street transit link\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d909eec9583e1de023d686b531515ca05ff231c6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MDYyNw==", "bodyText": "If we wanted to preserve the same behavior, just ignoring the edge would be correct, but that may not be what we want.\nWalk instructions like \"turn right onto Oslo Central Station\" does sound more useful to me. I pushed a commit with this change. I plan to work on moving the actual walk instructions over to the back end soon, and we may decide to further improve this. Maybe something like \"you are now at Oslo Central Station\".", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3164#discussion_r481990627", "createdAt": "2020-09-02T11:15:55Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/routing/edgetype/StreetTransitLink.java", "diffHunk": "@@ -54,10 +54,6 @@ public LineString getGeometry() {\n         return GeometryUtils.getGeometryFactory().createLineString(coordinates);\n     }\n \n-    public TraverseMode getMode() {\n-        return TraverseMode.LEG_SWITCH;\n-    }\n-\n     public String getName() {\n         return \"street transit link\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg0MjMwNw=="}, "originalCommit": {"oid": "d909eec9583e1de023d686b531515ca05ff231c6"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1662, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}