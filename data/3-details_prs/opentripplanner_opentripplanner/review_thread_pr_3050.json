{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NDc5MzA3", "number": 3050, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTozMDozN1rOD3G34w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzoyMTowN1rOD37AoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTEwODgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/multicriteria/McRangeRaptorWorkerState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTozMDozN1rOGNLPoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTozMDozN1rOGNLPoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ2ODg5Nw==", "bodyText": "Use calculator", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r416468897", "createdAt": "2020-04-28T09:30:37Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/multicriteria/McRangeRaptorWorkerState.java", "diffHunk": "@@ -76,11 +76,17 @@ private void setupIteration() {\n \n     @Override\n     public void setInitialTimeForIteration(RaptorTransfer accessLeg, int iterationDepartureTime) {\n+        // Earliest possible departure time from the origin using this Access.\n+        int departureTime = accessLeg.earliestDepartureTime(iterationDepartureTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ac4fa1572b7885c18fc428abbd71ba7ae0fbcd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTE4MzY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/path/DestinationArrivalPaths.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTo0OTowN1rOGNL9ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTo0OTowN1rOGNL9ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ4MDYzNQ==", "bodyText": "Pass costCalculator as an constructor argument", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r416480635", "createdAt": "2020-04-28T09:49:07Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/path/DestinationArrivalPaths.java", "diffHunk": "@@ -49,10 +49,19 @@ public DestinationArrivalPaths(\n     }\n \n     public void add(ArrivalView<T> egressStopArrival, RaptorTransfer egressLeg, int additionalCost) {\n+        int departureTime = calculator.departureTime(egressLeg, egressStopArrival.arrivalTime());\n \n-        int arrivalTime = calculator.plusDuration(egressStopArrival.arrivalTime(), egressLeg.durationInSeconds());\n+        if (departureTime == -1) { return; }\n \n-        DestinationArrival<T> destArrival = new DestinationArrival<>(egressLeg, egressStopArrival, arrivalTime, additionalCost);\n+        int arrivalTime = calculator.plusDuration(departureTime, egressLeg.durationInSeconds());\n+\n+        DestinationArrival<T> destArrival = new DestinationArrival<>(\n+            egressLeg,\n+            egressStopArrival,\n+            departureTime,\n+            arrivalTime,\n+            additionalCost // TODO Add wait cost here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec8b0ac284e8e6412354fe22210475f9aca7422f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODY1NzUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/transit/raptor/api/transit/RaptorTransfer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjo0MDo1MVrOGOTm_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjo0MDo1MVrOGOTm_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1NDUyNA==", "bodyText": "Maybe requestedDepatureTime is a better name for the parameter. Also apply to arrivalTimein next function.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r417654524", "createdAt": "2020-04-29T22:40:51Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/transit/raptor/api/transit/RaptorTransfer.java", "diffHunk": "@@ -19,6 +19,23 @@\n      */\n     int stop();\n \n+    /**\n+     * Returns the earliest possible departure time for the leg. Used Eg. in flex routing and TNC\n+     * when the access leg can't start immediately, but have to wait for a vehicle arriving. Also\n+     * DRT systems or bike shares can have operation time limitations.\n+     *\n+     * Returns -1 if transfer is not possible after the departureTime\n+     */\n+    int earliestDepartureTime(int departureTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "435bd1898df1028ce936fd3cfd470e5af02fd9dc"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODY2MTQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/transit/raptor/api/transit/RaptorTransfer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjo0MjoyMlrOGOTpMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjo0MjoyMlrOGOTpMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1NTA5MA==", "bodyText": "before the departure time\n\nshould be \"before the arrival-time\" ?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r417655090", "createdAt": "2020-04-29T22:42:22Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/transit/raptor/api/transit/RaptorTransfer.java", "diffHunk": "@@ -19,6 +19,23 @@\n      */\n     int stop();\n \n+    /**\n+     * Returns the earliest possible departure time for the leg. Used Eg. in flex routing and TNC\n+     * when the access leg can't start immediately, but have to wait for a vehicle arriving. Also\n+     * DRT systems or bike shares can have operation time limitations.\n+     *\n+     * Returns -1 if transfer is not possible after the departureTime\n+     */\n+    int earliestDepartureTime(int departureTime);\n+\n+    /**\n+     * Returns the latest possible arrival time for the leg. Used in DRT systems or bike shares\n+     * where they can have operation time limitations.\n+     *\n+     * Returns -1 if transfer is not possible before the departure time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "435bd1898df1028ce936fd3cfd470e5af02fd9dc"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTY1MDg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/transit/raptor/api/path/PathLeg.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzoyMTowOFrOGOc0rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzoyMTowOFrOGOc0rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgwNTQ4Ng==", "bodyText": "This should be added to the Access/Egress-PathLeg sub-interfaces not to this. Use the as methods to switch type.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3050#discussion_r417805486", "createdAt": "2020-04-30T07:21:08Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/transit/raptor/api/path/PathLeg.java", "diffHunk": "@@ -30,6 +31,11 @@\n      */\n     int toTime();\n \n+    /**\n+     * The access or egress connecting this leg to the start or end location of the search.\n+     */\n+    RaptorTransfer accessEgress();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "435bd1898df1028ce936fd3cfd470e5af02fd9dc"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1812, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}