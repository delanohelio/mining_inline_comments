{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NjQ3Nzc1", "number": 3077, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzowMDoxOVrOD9qYXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzoyMzo0OFrOD9q0ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTg0MDk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/algorithm/filterchain/ItineraryFilterChainBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzowMDoxOVrOGXSbFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzowMDoxOVrOGXSbFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3MjI3Nw==", "bodyText": "Typo: Wrppers => Wrappers", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3077#discussion_r427072277", "createdAt": "2020-05-19T07:00:19Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/filterchain/ItineraryFilterChainBuilder.java", "diffHunk": "@@ -103,6 +104,18 @@ public ItineraryFilter build() {\n             filters.add(new MaxLimitFilter(\"MAX\", maxLimit));\n         }\n \n-        return debug ? new DebugFilterChain(filters) : new FilterChain(filters);\n+        if(debug) {\n+            filters = addDebugWrppers(filters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bf18c1f36a1e7d97d2fbd122a5c060859701ef8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTg2MDIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/algorithm/filterchain/filters/DebugFilterWrapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzowNzowN1rOGXSnLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzowNzowN1rOGXSnLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTM3Mg==", "bodyText": "remaning? Although I think something like previouslyUnfiltered might make more sense.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3077#discussion_r427075372", "createdAt": "2020-05-19T07:07:07Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/filterchain/filters/DebugFilterWrapper.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.opentripplanner.routing.algorithm.filterchain.filters;\n+\n+import org.opentripplanner.model.SystemNotice;\n+import org.opentripplanner.model.plan.Itinerary;\n+import org.opentripplanner.routing.algorithm.filterchain.ItineraryFilter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class DebugFilterWrapper implements ItineraryFilter {\n+\n+  private final ItineraryFilter delegate;\n+  private final List<Itinerary> deletedItineraries;\n+\n+  public DebugFilterWrapper(ItineraryFilter delegate, List<Itinerary> deletedItineraries) {\n+    this.delegate = delegate;\n+    this.deletedItineraries = deletedItineraries;\n+  }\n+\n+  @Override\n+  public String name() {\n+    return delegate.name();\n+  }\n+\n+  @Override\n+  public List<Itinerary> filter(List<Itinerary> itineraries) {\n+    List<Itinerary> reminding = remindingItineraries(itineraries);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bf18c1f36a1e7d97d2fbd122a5c060859701ef8"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTkxMjY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/api/model/ApiTripSearchMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzoyMzo0OFrOGXTHfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo0MDozM1rOGYFpQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA4MzY0Nw==", "bodyText": "We might want to make it more explicit, that this is only when changing the direction of the search. Now it is not clear, when skimming the text. When searching in the same direction, there is no need to se the numOfItineraries any higher.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3077#discussion_r427083647", "createdAt": "2020-05-19T07:23:48Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/api/model/ApiTripSearchMetadata.java", "diffHunk": "@@ -9,12 +9,18 @@\n      * This is the time window used by the raptor search. The window is an optional parameter and\n      * OTP might override it/dynamically assign a new value.\n      * <p>\n+     * Note! This parameter is NOT adjusted when the number of itineraries are reduced due to the\n+     * request {@code numOfItineraries} parameter. When getting the next results\n+     * ({@code arriveBy=true}) or previous results({@code arriveBy=false}), be sure to set the\n+     * {@code numOfItineraries} high enough to include all itineraries. If not, the combined results\n+     * will be missing trips.\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f03aefcfb6d5e6d5ccfc6a4bcfec95b4684feeb4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxMTQ4OQ==", "bodyText": "I tried to make it clearer se the new doc on: searchWindow, nextDateTime and prevDateTime.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3077#discussion_r427911489", "createdAt": "2020-05-20T10:40:33Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/api/model/ApiTripSearchMetadata.java", "diffHunk": "@@ -9,12 +9,18 @@\n      * This is the time window used by the raptor search. The window is an optional parameter and\n      * OTP might override it/dynamically assign a new value.\n      * <p>\n+     * Note! This parameter is NOT adjusted when the number of itineraries are reduced due to the\n+     * request {@code numOfItineraries} parameter. When getting the next results\n+     * ({@code arriveBy=true}) or previous results({@code arriveBy=false}), be sure to set the\n+     * {@code numOfItineraries} high enough to include all itineraries. If not, the combined results\n+     * will be missing trips.\n+     * <p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA4MzY0Nw=="}, "originalCommit": {"oid": "f03aefcfb6d5e6d5ccfc6a4bcfec95b4684feeb4"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1827, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}