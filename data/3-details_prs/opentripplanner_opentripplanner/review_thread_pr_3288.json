{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2OTgwMDAz", "number": 3288, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyNzowNlrOFHGouQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo0MjowOVrOFHHDqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTkzMDgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/api/mapping/LegMapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyNzowNlrOIIbNpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyNzowNlrOIIbNpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwNTM4MA==", "bodyText": "We avoid using toString anywhere in the mapping. The internal model objects uses the toString for logging and debugging ONLY. Here you should use the: FeedScopedIdMapper.mapToApi(..), also we want to support different id implementation in the future, and this code would fail silently if we do that.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3288#discussion_r545705380", "createdAt": "2020-12-18T09:27:06Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/api/mapping/LegMapper.java", "diffHunk": "@@ -80,6 +80,9 @@ public ApiLeg mapLeg(Leg domain, Calendar arrivalTimeFromPlace, Calendar departu\n             api.tripShortName = trip.getTripShortName();\n             api.tripBlockId = trip.getBlockId();\n         }\n+        else if (domain.pathway) {\n+            api.route = domain.edgeIdentifier.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22e2ce4ddddd3c6a0f13ff57a26a25511033ed2f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTk1ODc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/graph_builder/module/AddTransitModelEntitiesToGraph.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozMTozM1rOIIbeYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozMTozM1rOIIbeYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwOTY2NQ==", "bodyText": "Minor thing, but try to keep the constructor arguments in the order they are defined. Theid is normally the first field in an entity class, but since the class inherit edge, put the id after the toVertex in the list.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3288#discussion_r545709665", "createdAt": "2020-12-18T09:31:33Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/graph_builder/module/AddTransitModelEntitiesToGraph.java", "diffHunk": "@@ -205,7 +205,8 @@ private void createPathwayEdgesAndAddThemToGraph(Graph graph) {\n                         pathway.getLength(),\n                         pathway.getStairCount(),\n                         pathway.getSlope(),\n-                        pathway.isPathwayModeWheelchairAccessible()\n+                        pathway.isPathwayModeWheelchairAccessible(),\n+                        pathway.getId()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22e2ce4ddddd3c6a0f13ff57a26a25511033ed2f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTk2MTk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/model/plan/Leg.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozMjoxOVrOIIbgcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozMjoxOVrOIIbgcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxMDE5Mw==", "bodyText": "We do not use * imports in OTP2.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3288#discussion_r545710193", "createdAt": "2020-12-18T09:32:19Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/model/plan/Leg.java", "diffHunk": "@@ -1,10 +1,6 @@\n package org.opentripplanner.model.plan;\n \n-import org.opentripplanner.model.Agency;\n-import org.opentripplanner.model.Operator;\n-import org.opentripplanner.model.Route;\n-import org.opentripplanner.model.StreetNote;\n-import org.opentripplanner.model.Trip;\n+import org.opentripplanner.model.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22e2ce4ddddd3c6a0f13ff57a26a25511033ed2f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTk2MjY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/model/plan/Leg.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozMjozMFrOIIbg2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozMjozMFrOIIbg2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxMDI5Ng==", "bodyText": "indentation", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3288#discussion_r545710296", "createdAt": "2020-12-18T09:32:30Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/model/plan/Leg.java", "diffHunk": "@@ -29,6 +25,7 @@\n    */\n   public final TraverseMode mode;\n \n+    public FeedScopedId edgeIdentifier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22e2ce4ddddd3c6a0f13ff57a26a25511033ed2f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTk2OTk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/algorithm/mapping/GraphPathToItineraryMapper.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozNDoyOFrOIIblCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMzo0NjozOVrOIaXm1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxMTM2OA==", "bodyText": "Rename and add javadoc", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3288#discussion_r545711368", "createdAt": "2020-12-18T09:34:28Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/mapping/GraphPathToItineraryMapper.java", "diffHunk": "@@ -357,6 +358,19 @@ private static void setLegPathwayFlag(List<Leg> legs, State[][] legsStates) {\n         }\n     }\n \n+    private static void setRoute(List<Leg> legs, State[][] legsStates) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22e2ce4ddddd3c6a0f13ff57a26a25511033ed2f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTczNDc5MA==", "bodyText": "Quick question about the rename comment is there a preferred name you would like for this to make sure I stay within convention?  @t2gran", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3288#discussion_r549734790", "createdAt": "2020-12-29T14:57:07Z", "author": {"login": "mmaranda-cs"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/mapping/GraphPathToItineraryMapper.java", "diffHunk": "@@ -357,6 +358,19 @@ private static void setLegPathwayFlag(List<Leg> legs, State[][] legsStates) {\n         }\n     }\n \n+    private static void setRoute(List<Leg> legs, State[][] legsStates) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxMTM2OA=="}, "originalCommit": {"oid": "22e2ce4ddddd3c6a0f13ff57a26a25511033ed2f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDUxMjU1Mg==", "bodyText": "I would expect a Route to be a transit Line/Route, this seems to be adding references to the PathwayEdge id. I am not to familiar with what those ids are - so a comment on which information is added to the Leg would be nice. I also  see that this is only done for one leg? Why? It might be ok to use the word Route, but I was not sure if this was a copy/paste error or not, since nothing else in this method include the word route.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3288#discussion_r564512552", "createdAt": "2021-01-26T13:34:33Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/mapping/GraphPathToItineraryMapper.java", "diffHunk": "@@ -357,6 +358,19 @@ private static void setLegPathwayFlag(List<Leg> legs, State[][] legsStates) {\n         }\n     }\n \n+    private static void setRoute(List<Leg> legs, State[][] legsStates) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxMTM2OA=="}, "originalCommit": {"oid": "22e2ce4ddddd3c6a0f13ff57a26a25511033ed2f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDUyMDY2Mg==", "bodyText": "Maybe something like setLegPathwayId.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3288#discussion_r564520662", "createdAt": "2021-01-26T13:46:39Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/mapping/GraphPathToItineraryMapper.java", "diffHunk": "@@ -357,6 +358,19 @@ private static void setLegPathwayFlag(List<Leg> legs, State[][] legsStates) {\n         }\n     }\n \n+    private static void setRoute(List<Leg> legs, State[][] legsStates) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxMTM2OA=="}, "originalCommit": {"oid": "22e2ce4ddddd3c6a0f13ff57a26a25511033ed2f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTk5OTc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/edgetype/PathwayEdge.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo0MjowOVrOIIb2CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo0MjowOVrOIIb2CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxNTcyMQ==", "bodyText": "Move id up as the first field. We try to keep things readable, and it is a common de-facto standard that ids are defined before other fields in entities.  The serialVersionUID is also defined after the constructor, could you clean it up a bit and move it up as the first declared field. I know you did not do that.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3288#discussion_r545715721", "createdAt": "2020-12-18T09:42:09Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/edgetype/PathwayEdge.java", "diffHunk": "@@ -23,6 +24,7 @@\n     private String name = \"pathway\";\n \n     private boolean wheelchairAccessible = true;\n+    private FeedScopedId id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22e2ce4ddddd3c6a0f13ff57a26a25511033ed2f"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1749, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}