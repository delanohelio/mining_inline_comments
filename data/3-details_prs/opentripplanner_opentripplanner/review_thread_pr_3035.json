{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MzY3Nzcw", "number": 3035, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODowNjoxMlrOD0nwoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyMDo1OFrOD035lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTAzOTY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/request/RoutingRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODowNjoxMlrOGJpHwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzo0NDoxMFrOGJ3N6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc2NDA5OA==", "bodyText": "This is repeated several times.  I suggest making a static parse function in the FeedScopedId.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3035#discussion_r412764098", "createdAt": "2020-04-22T08:06:12Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/request/RoutingRequest.java", "diffHunk": "@@ -820,7 +820,12 @@ public void setBikeBoardCost(int bikeBoardCost) {\n     public void setPreferredAgencies(String s) {\n         if (!s.isEmpty()) {\n             preferredAgencies = new HashSet<>();\n-            Collections.addAll(preferredAgencies, s.split(\",\"));\n+            Collections.addAll(\n+                preferredAgencies,\n+                Arrays.stream(s.split(\",\"))\n+                    .map(FeedScopedId::convertFromString)\n+                    .toArray(FeedScopedId[]::new)\n+            );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d07ca52cd4e45b8094a3aa8fea95a4f428b71cc"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk5NTA1MQ==", "bodyText": "Added a static method convertFromConcatenatedString  in FeedScopedId for this.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3035#discussion_r412995051", "createdAt": "2020-04-22T13:44:10Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/routing/request/RoutingRequest.java", "diffHunk": "@@ -820,7 +820,12 @@ public void setBikeBoardCost(int bikeBoardCost) {\n     public void setPreferredAgencies(String s) {\n         if (!s.isEmpty()) {\n             preferredAgencies = new HashSet<>();\n-            Collections.addAll(preferredAgencies, s.split(\",\"));\n+            Collections.addAll(\n+                preferredAgencies,\n+                Arrays.stream(s.split(\",\"))\n+                    .map(FeedScopedId::convertFromString)\n+                    .toArray(FeedScopedId[]::new)\n+            );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc2NDA5OA=="}, "originalCommit": {"oid": "5d07ca52cd4e45b8094a3aa8fea95a4f428b71cc"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzY4NDA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/model/FeedScopedId.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyMDo1OFrOGKB7fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODoxNDo1NFrOGKcn8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3MDU1Ng==", "bodyText": "I would call this function convertFromListOfIds or parseListOfIds. I prefer parseoverconvert`, but we already used convert for the single element version, so it should be consistent.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3035#discussion_r413170556", "createdAt": "2020-04-22T17:20:58Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/model/FeedScopedId.java", "diffHunk": "@@ -105,4 +108,14 @@ public static String convertToString(FeedScopedId aid) {\n     public static String concatenateId(String feedId, String id) {\n         return feedId + ID_SEPARATOR + id;\n     }\n+\n+    /**\n+     * Converts a string consisting of concatenated FeedScopedIds to a Set\n+     */\n+    public static HashSet<FeedScopedId> convertFromConcatenatedString(String s) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09792700539f9fc2cb36fea056d858ed77e73020"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYwNzkyMQ==", "bodyText": "Changed both of these to start with convert", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3035#discussion_r413607921", "createdAt": "2020-04-23T08:14:54Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/model/FeedScopedId.java", "diffHunk": "@@ -105,4 +108,14 @@ public static String convertToString(FeedScopedId aid) {\n     public static String concatenateId(String feedId, String id) {\n         return feedId + ID_SEPARATOR + id;\n     }\n+\n+    /**\n+     * Converts a string consisting of concatenated FeedScopedIds to a Set\n+     */\n+    public static HashSet<FeedScopedId> convertFromConcatenatedString(String s) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3MDU1Ng=="}, "originalCommit": {"oid": "09792700539f9fc2cb36fea056d858ed77e73020"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1804, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}