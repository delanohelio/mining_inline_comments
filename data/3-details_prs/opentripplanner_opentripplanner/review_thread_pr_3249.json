{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNTc3MTgz", "number": 3249, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDozMTo0NVrOFIG3Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDozMTo0NVrOFIG3Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDQ1Mzk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/graph/Graph.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDozMTo0NVrOIJ2UxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDozMTo0NVrOIJ2UxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE5ODE0OA==", "bodyText": "Clean up this doc: \"non thread-safe\" .. implementation", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3249#discussion_r547198148", "createdAt": "2020-12-22T10:31:45Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/graph/Graph.java", "diffHunk": "@@ -667,6 +667,26 @@ public CalendarService getCalendarService() {\n         return this.calendarService;\n     }\n \n+    /**\n+     * Get or create a serviceId for a given date. This method is used when a new trip is\n+     * added from a realtime data update.\n+     *\n+     * TODO OTP2 - This is NOT THREAD-SAFE and is used in the real-time updaters, we need to fix\n+     *           - this when doing the issue #3030.\n+     *\n+     * @param serviceDate service date for the added service id\n+     */\n+    public FeedScopedId getOrCreateServiceIdForDate(ServiceDate serviceDate) {\n+        // We make an explicit cast here, because we know the type, and we do not want\n+        // to expose the \"unsafe\" method in the {@link CalendarService} interface.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790fb437e87bddf2e9b3e6277feace3dcf527d34"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1732, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}