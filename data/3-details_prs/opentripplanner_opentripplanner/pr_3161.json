{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMjEzNDgz", "number": 3161, "title": "Change the itinerary filter order", "bodyText": "Change the order of the itinerary filters. Apply the \"absolute\" filters AFTER the \"group-by\" filters. This have the effect of removing even more none optimal itineraries.\nTo be completed by pull request submitter:\n\n issue: Related to issue #3015. It does not solve it entirely, but reduces the problem.\n roadmap: NO\n tests: NO\n formatting: Yes\n documentation: Java doc updated.\n changelog: Feature added in 2.x before, no changelog item added.\n\nTo be completed by @opentripplanner/plc:\n\n reviews and approvals by 2 members, ideally from different organizations\n after merging: update the relevant card on the roadmap", "createdAt": "2020-08-25T13:42:51Z", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161", "merged": true, "mergeCommit": {"oid": "d36f4f28547a195589077171c9d4934eee7261d6"}, "closed": true, "closedAt": "2020-09-03T12:44:11Z", "author": {"login": "t2gran"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCXThAgH2gAyNDczMjEzNDgzOjczODE3ODQ4ZDBmZjliYjc3MDUxYzk4NGIyMDQ4MTNhYWViM2YwY2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFP94_AFqTQ4MTc5ODc1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "73817848d0ff9bb77051c984b204813aaeb3f0ce", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/73817848d0ff9bb77051c984b204813aaeb3f0ce", "committedDate": "2020-08-25T13:34:13Z", "message": "Change the order of the filters so that the \"absolute\" filters are applied AFTER the \"group-by\" filters. This have the effect of removing even more none optimal itineraries."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee54a40002944b36727cf8d077f6840d2e814bad", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ee54a40002944b36727cf8d077f6840d2e814bad", "committedDate": "2020-09-01T12:14:27Z", "message": "Merge remote-tracking branch 'otp/dev-2.x' into otp2_filter_high_transit_cost_itineraries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NzA1ODU0", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#pullrequestreview-479705854", "createdAt": "2020-09-01T12:47:51Z", "commit": {"oid": "ee54a40002944b36727cf8d077f6840d2e814bad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjo0Nzo1MVrOHK0rcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjo0Nzo1MVrOHK0rcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExMDg5OA==", "bodyText": "My idea was that we should filter out all itineraries which are sorted to be after the first one which does not depart within the search window. That way we are guaranteed to return no worse itineraries than that one, and requiring the new search to include the first one removed.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#discussion_r481110898", "createdAt": "2020-09-01T12:47:51Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/filterchain/ItineraryFilterChainBuilder.java", "diffHunk": "@@ -71,15 +91,6 @@ public ItineraryFilter build() {\n             }\n         }\n \n-        // Sort list on {@code groupByP} in ascending order to keep as many of the elements in the\n-        // groups where the grouping parameter is relaxed as possible.\n-        List<GroupBySimilarity> groupBy = parameters.groupBySimilarity().stream()\n-            .sorted(Comparator.comparingDouble(o -> o.groupByP))\n-            .collect(Collectors.toList());\n-\n-        for (GroupBySimilarity it : groupBy) {\n-            filters.add(new GroupBySimilarLegsFilter(it.groupByP, it.approximateMinLimit));\n-        }\n \n         // Sort itineraries\n         filters.add(new OtpDefaultSortOrder(parameters.arriveBy()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee54a40002944b36727cf8d077f6840d2e814bad"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODE5OTUw", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#pullrequestreview-480819950", "createdAt": "2020-09-02T13:29:46Z", "commit": {"oid": "ee54a40002944b36727cf8d077f6840d2e814bad"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f11c3a9085f34d539078bef18594e5f2d3b9f05", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8f11c3a9085f34d539078bef18594e5f2d3b9f05", "committedDate": "2020-09-02T15:24:30Z", "message": "* Code cleanup - Make Leg in OTP domain reference other domain objetcts like Trip, Route and Agency - instead of copying fields which create unnecessary code and potential errors.\n* Bugfix - Transmodel API Line situations would fail hard if loaded(Class cast exception)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bac493569cb82dbb7b09f731c4335c4b4c37399c", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/bac493569cb82dbb7b09f731c4335c4b4c37399c", "committedDate": "2020-09-02T15:42:27Z", "message": "Buffix - Leg#isPartiallySameTransitLeg() fails for the same trip on different service dates. To lags are not the same if they are scheduled on different days."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e48b7eaf80bc0358018544d88b058e52843cb79", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9e48b7eaf80bc0358018544d88b058e52843cb79", "committedDate": "2020-09-02T15:59:00Z", "message": "Bugfix - Apply the \"number-of-itineraries-filter\" BEFORE the \"latest-departure-time-limit\" filter. All filters that prune the set based on other itineraries should be run before \"absolute\" filters witch only look at each itinerary individually."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0878fb57b213b2b269685db482779d739114eb1", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f0878fb57b213b2b269685db482779d739114eb1", "committedDate": "2020-09-02T16:01:46Z", "message": "Merge remote-tracking branch 'otp/dev-2.x' into otp2_filter_high_transit_cost_itineraries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNjU1MzY3", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#pullrequestreview-481655367", "createdAt": "2020-09-03T09:21:10Z", "commit": {"oid": "8f11c3a9085f34d539078bef18594e5f2d3b9f05"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyMToxMVrOHMd5Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyMToxMVrOHMd5Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNDcyMw==", "bodyText": "getTrip might cause NPE", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#discussion_r482834723", "createdAt": "2020-09-03T09:21:11Z", "author": {"login": "hannesj"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java", "diffHunk": "@@ -2018,23 +2018,13 @@ public GraphQLObjectType createPlanType(\n                         .name(\"authority\")\n                         .description(\"For ride legs, the service authority used for this legs. For non-ride legs, null.\")\n                         .type(authorityType)\n-                        .dataFetcher(environment -> {\n-                          return GqlUtil.getRoutingService(environment)\n-                              .getAgencyForId(((Leg) environment.getSource()).agencyId);\n-                        })\n+                        .dataFetcher(environment -> ((Leg) environment.getSource()).getAgency())\n                         .build())\n                 .field(GraphQLFieldDefinition.newFieldDefinition()\n                         .name(\"operator\")\n                         .description(\"For ride legs, the operator used for this legs. For non-ride legs, null.\")\n                         .type(operatorType)\n-                        .dataFetcher(\n-                                environment -> {\n-                                    FeedScopedId tripId = ((Leg) environment.getSource()).tripId;\n-                                  return tripId == null ? null : GqlUtil\n-                                      .getRoutingService(environment)\n-                                        .getTripForId().get(tripId).getOperator();\n-                                }\n-                        )\n+                        .dataFetcher(environment -> ((Leg) environment.getSource()).getTrip().getOperator())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f11c3a9085f34d539078bef18594e5f2d3b9f05"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNjYwMTgw", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#pullrequestreview-481660180", "createdAt": "2020-09-03T09:27:07Z", "commit": {"oid": "8f11c3a9085f34d539078bef18594e5f2d3b9f05"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyNzowN1rOHMeIJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyNzowN1rOHMeIJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzODU2NQ==", "bodyText": "These are missing", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#discussion_r482838565", "createdAt": "2020-09-03T09:27:07Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/api/mapping/LegMapper.java", "diffHunk": "@@ -55,22 +55,35 @@ public ApiLeg mapLeg(Leg domain, Calendar arrivalTimeFromPlace, Calendar departu\n         api.distance = domain.distanceMeters;\n         api.pathway = domain.pathway;\n         api.mode = TraverseModeMapper.mapToApi(domain.mode);\n-        api.transitLeg = domain.mode == null ? null : domain.mode.isTransit();\n-        api.route = domain.route;\n-        api.agencyName = domain.agencyName;\n-        api.agencyUrl = domain.agencyUrl;\n-        api.agencyBrandingUrl = domain.agencyBrandingUrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f11c3a9085f34d539078bef18594e5f2d3b9f05"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ae9f9a216c28f7638edfb04160486b29d645a43", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/5ae9f9a216c28f7638edfb04160486b29d645a43", "committedDate": "2020-09-03T12:37:06Z", "message": "Review fixes - Add a null-safe Leg#getOperator and add back mapping of agencyUrl and agencyBrandingUrl."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09ab141c77c041ce3ca9e734614781408e909d6b", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/09ab141c77c041ce3ca9e734614781408e909d6b", "committedDate": "2020-09-03T12:38:27Z", "message": "Merge remote-tracking branch 'otp/dev-2.x' into otp2_filter_high_transit_cost_itineraries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzk4NzU1", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3161#pullrequestreview-481798755", "createdAt": "2020-09-03T12:43:02Z", "commit": {"oid": "09ab141c77c041ce3ca9e734614781408e909d6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1950, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}