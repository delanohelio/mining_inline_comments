{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODUzOTk2", "number": 2975, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOToyMTo1M1rODf0yDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOToyMTo1M1rODf0yDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Njk3MjI5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/opentripplanner/transit/raptor/speed_test/options/SpeedTestCmdLineOpts.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOToyMTo1M1rOFpwIkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOToyMTo1M1rOFpwIkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyNDU2Mw==", "bodyText": "Checked with @t2gran, this method is just moved, not changed.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/2975#discussion_r379324563", "createdAt": "2020-02-14T09:21:53Z", "author": {"login": "abyrd"}, "path": "src/test/java/org/opentripplanner/transit/raptor/speed_test/options/SpeedTestCmdLineOpts.java", "diffHunk": "@@ -153,6 +125,34 @@ public boolean compareHeuristics() {\n         return parseCSVList(TEST_CASES);\n     }\n \n+    private Options options() {\n+        Options options = new Options();\n+\n+        // General options\n+        options.addOption(HELP, \"help\", false, \"Print all command line options, then exit. (Optional)\");\n+        options.addOption(VERBOSE, \"verbose\", false, \"Verbose output, print itineraries.\");\n+        options.addOption(ROOT_DIR, \"dir\", true, \"The directory where network and input files are located. (Optional)\");\n+\n+        // Search options\n+        options.addOption(PROFILES, \"profiles\", true, \"A coma separated list of configuration profiles:\\n\" + String.join(\"\\n\", SpeedTestProfile.options()));\n+        options.addOption(TEST_CASES, \"testCases\", true, \"A coma separated list of test case ids to run.\");\n+        options.addOption(SAMPLE_TEST_N_TIMES, \"sampleTestNTimes\", true, \"Repeat the test N times. Profiles are altered in a round robin fashion.\");\n+        options.addOption(NUM_OF_ADD_TRANSFERS, \"nExtraTransfers\", true, \"The maximum number of extra transfers allowed relative to the path with the fewest transfers.\");\n+\n+        // Result options\n+        options.addOption(NUM_OF_ITINERARIES, \"numOfItineraries\", true, \"Number of itineraries to return.\");\n+        options.addOption(COMPARE_HEURISTICS, \"compare\", false, \"Compare heuristics for the listed profiles. The 1st profile is compared with 2..n listed profiles.\");\n+\n+        // Debug options\n+        options.addOption(DEBUG, \"debug\", false, \"Enable debug info.\");\n+        options.addOption(DEBUG_STOPS, \"debugStops\", true, \"A coma separated list of stops to debug.\");\n+        options.addOption(DEBUG_PATH, \"debugPath\", true, \"A coma separated list of stops representing a trip/path to debug. \" +\n+                \"Use a '*' to indicate where to start debugging. For example '1,*2,3' will print event at stop 2 and 3, \" +\n+                \"but not stop 1 for all trips starting with the given stop sequence.\");\n+        options.addOption(DEBUG_REQUEST, \"debugRequest\", false, \"Debug request.\");\n+        return options;\n+   }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5720a27099a607379f9d551cb620eeba9124ae3f"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1904, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}