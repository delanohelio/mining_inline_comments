{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMTUxNTQ1", "number": 3159, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzowODo0MlrOEeTM_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzo1Nzo1MlrOEeUbxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjA3MzU4OnYy", "diffSide": "RIGHT", "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/model/stop/QuayAtDistanceType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzowODo0MlrOHJ4ErQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzowODo0MlrOHJ4ErQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDExNzkzMw==", "bodyText": "We should add a description as well, something like: \"The distance in meters to the given quay.\"", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3159#discussion_r480117933", "createdAt": "2020-08-31T13:08:42Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/model/stop/QuayAtDistanceType.java", "diffHunk": "@@ -31,7 +31,7 @@ public static GraphQLObjectType createQD(GraphQLOutputType quayType, Relay relay\n                     .build())\n             .field(GraphQLFieldDefinition.newFieldDefinition()\n                     .name(\"distance\")\n-                    .type(Scalars.GraphQLInt)\n+                    .type(Scalars.GraphQLFloat)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "475d7bb81c7fca25219b0f2acd808095872a51c5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjI3NTI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/api/request/RoutingRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzo1Nzo1MlrOHJ59-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzo1Nzo1MlrOHJ59-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0ODk4NQ==", "bodyText": "12 is a bit low - this should be set as high as possible without causing too much data to be returned to the client. This is a \"data transfer tuning\" parameter - we should adjust the search window to reduce the number of results. In the next version of the API, we will hopefully use the built in paging support in GraphQL - deprecating this parameter.\nThis should be documented at the end of the Query parameter changes section in the migration guide:\n\nnumItineraries The parameter is no longer used to terminate the request when the numItineraries is found. Instead the new searchWindow parameter is used to limit the search. The numItineraries will only filter the results AFTER the search is complete and reduce the number of itineraries as a threshold. The best option is to configure this on the server side and not use it as a client side input parameter. When the numItineraries reduces the result, a side effect is that OTP can not guarantee that an all pareto-optimal results are returned using the new paging functionality.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3159#discussion_r480148985", "createdAt": "2020-08-31T13:57:52Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/api/request/RoutingRequest.java", "diffHunk": "@@ -246,7 +246,7 @@\n     public boolean wheelchairAccessible = false;\n \n     /** The maximum number of itineraries to return. */\n-    public int numItineraries = 3;\n+    public int numItineraries = 12;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d025a5fa701c93a2c6ac07965a5eefed13f6e"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1655, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}