{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzNDY1MTkz", "number": 3178, "title": "Add changes in RAPTOR algorithm required for access/egress containing public service legs", "bodyText": "To be completed by pull request submitter:\n\n issue: Link to or create an issue that describes the relevant feature or bug. Add GitHub keywords to this PR's description (e.g., closes #45).\n roadmap: Check the roadmap for this feature or bug. If it is not already on the roadmap, PLC will discuss as part of the review process.\n tests: Have you added relevant test coverage? Are all the tests passing on the continuous integration service (Travis CI)?\n formatting: Have you followed the suggested code style?\n documentation: If you are adding a new configuration option, have you added an explanation to the configuration documentation tables and sections?\n changelog: add a bullet point to the changelog file with description and link to the linked issue\n\nTo be completed by @opentripplanner/plc:\n\n reviews and approvals by 2 members, ideally from different organizations\n after merging: update the relevant card on the roadmap", "createdAt": "2020-09-10T07:08:27Z", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178", "merged": true, "mergeCommit": {"oid": "19d6536a52e1ed0dc88ec25d3a7aaa49492d3417"}, "closed": true, "closedAt": "2020-09-15T11:09:42Z", "author": {"login": "hannesj"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHapi-gH2gAyNDgzNDY1MTkzOjMzMzkwOTUyZDljY2JlNzZiMTlmM2RlYmM2ZTk2ZjdiZmRhMzgzZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJFzuzgFqTQ4ODU3MTcwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "33390952d9ccbe76b19f3debc6e96f7bfda383fb", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/33390952d9ccbe76b19f3debc6e96f7bfda383fb", "committedDate": "2020-09-10T06:17:37Z", "message": "Fix bug, where the index was comapred, not the stop index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b71d17fd988c3c0fb7c96b834354211894c629b", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6b71d17fd988c3c0fb7c96b834354211894c629b", "committedDate": "2020-09-10T06:21:35Z", "message": "Add new methods in RaptorTransfer to support adding pre-existing legs into raptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42f5ecedd75266f2a484fc55325544a187fbbe7b", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/42f5ecedd75266f2a484fc55325544a187fbbe7b", "committedDate": "2020-09-10T06:33:02Z", "message": "Use more relaxed types for PathLeg"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "134ef832c815c1592014a7050dff42800a93ff12", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/134ef832c815c1592014a7050dff42800a93ff12", "committedDate": "2020-09-10T06:39:18Z", "message": "Calculate paretoRound in AccessStopArrival"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3cafb04a42c83f9b5f249f463603eae2a0f5f0b", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d3cafb04a42c83f9b5f249f463603eae2a0f5f0b", "committedDate": "2020-09-10T06:48:09Z", "message": "Add arrivals via transfers, if the egress leg is connectedByPublicService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15d52e0c6e28855bf92b440a86cc53ae7118e65d", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/15d52e0c6e28855bf92b440a86cc53ae7118e65d", "committedDate": "2020-09-10T06:49:09Z", "message": "Add transfer between access and transit in path mapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1c61f53a050966bdc2fc83951db4a27950dab0d", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/b1c61f53a050966bdc2fc83951db4a27950dab0d", "committedDate": "2020-09-10T06:52:50Z", "message": "Update transit times if access is connectedByPublicService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd76160e90888baa632466515ee1e290526c9194", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/fd76160e90888baa632466515ee1e290526c9194", "committedDate": "2020-09-10T07:02:46Z", "message": "Add access legs in multiple rounds"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NTkxMTM3", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-486591137", "createdAt": "2020-09-11T08:32:52Z", "commit": {"oid": "fd76160e90888baa632466515ee1e290526c9194"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODozMjo1M1rOHQTlVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODozMjo1M1rOHQTlVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2MDExOQ==", "bodyText": "services not part of the RAPTOR algorithm, such as flex or micromobility services, used as part of this RaptorTransfer", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r486860119", "createdAt": "2020-09-11T08:32:53Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/api/transit/RaptorTransfer.java", "diffHunk": "@@ -47,4 +47,23 @@\n      */\n     int durationInSeconds();\n \n+    /**\n+     * Return the number publicly available services for this {@link RaptorTransfer}. This is used by Raptor to get the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd76160e90888baa632466515ee1e290526c9194"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjMwNzkw", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-486630790", "createdAt": "2020-09-11T09:00:34Z", "commit": {"oid": "134ef832c815c1592014a7050dff42800a93ff12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowMDozNFrOHQUwOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowMDozNFrOHQUwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3OTI4OA==", "bodyText": "during the RAPTOR algorithm", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r486879288", "createdAt": "2020-09-11T09:00:34Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/multicriteria/arrivals/AbstractStopArrival.java", "diffHunk": "@@ -60,9 +60,9 @@\n     /**\n      * Initial state - first stop visited.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "134ef832c815c1592014a7050dff42800a93ff12"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjMxODU3", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-486631857", "createdAt": "2020-09-11T09:01:58Z", "commit": {"oid": "134ef832c815c1592014a7050dff42800a93ff12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowMTo1OFrOHQU1gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowMTo1OFrOHQU1gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4MDY0Mw==", "bodyText": "move calculation of the round to a separate method", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r486880643", "createdAt": "2020-09-11T09:01:58Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/multicriteria/arrivals/AccessStopArrival.java", "diffHunk": "@@ -15,7 +15,7 @@\n     private final RaptorTransfer access;\n \n     public AccessStopArrival(int departureTime, int cost, RaptorTransfer access) {\n-        super(access.stop(), departureTime, access.durationInSeconds(), cost);\n+        super(access.stop(), departureTime, access.durationInSeconds(), cost, access.numberOfPublicServiceLegs() * 2 - (access.connectedByPublicService() ? 1 : 0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "134ef832c815c1592014a7050dff42800a93ff12"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjM0OTI0", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-486634924", "createdAt": "2020-09-11T09:06:09Z", "commit": {"oid": "15d52e0c6e28855bf92b440a86cc53ae7118e65d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowNjowOVrOHQVFdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowNjowOVrOHQVFdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4NDcyNQ==", "bodyText": "Do this in a loop, checking the tyoes in an if-elseif-construct", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r486884725", "createdAt": "2020-09-11T09:06:09Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/path/ForwardPathMapper.java", "diffHunk": "@@ -39,6 +39,11 @@ private void setRangeRaptorIterationDepartureTime(int iterationDepartureTime) {\n         arrival = destinationArrival.previous();\n         lastLeg = createEgressPathLeg(destinationArrival);\n \n+        if (arrival.arrivedByTransfer()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d52e0c6e28855bf92b440a86cc53ae7118e65d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjM2ODUy", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-486636852", "createdAt": "2020-09-11T09:08:50Z", "commit": {"oid": "fd76160e90888baa632466515ee1e290526c9194"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowODo1MFrOHQVP6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowODo1MFrOHQVP6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4NzQwMg==", "bodyText": "Move this into findAllTransitForRound", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r486887402", "createdAt": "2020-09-11T09:08:50Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/RangeRaptorWorker.java", "diffHunk": "@@ -156,8 +156,15 @@ private void runRaptorForMinute(int iterationDepartureTime) {\n             // as that will be rare and complicates the code\n             timerByMinuteScheduleSearch().time(this::findAllTransitForRound);\n \n+            // TODO this needs to be below transitsForRoundComplete to not clear touched stops\n+            doTransfersForAccessLegs(iterationDepartureTime, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd76160e90888baa632466515ee1e290526c9194"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjM2OTYz", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-486636963", "createdAt": "2020-09-11T09:09:00Z", "commit": {"oid": "fd76160e90888baa632466515ee1e290526c9194"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowOTowMFrOHQVQwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTowOTowMFrOHQVQwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4NzYxNg==", "bodyText": "Move this into transfersForRound", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r486887616", "createdAt": "2020-09-11T09:09:00Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/RangeRaptorWorker.java", "diffHunk": "@@ -156,8 +156,15 @@ private void runRaptorForMinute(int iterationDepartureTime) {\n             // as that will be rare and complicates the code\n             timerByMinuteScheduleSearch().time(this::findAllTransitForRound);\n \n+            // TODO this needs to be below transitsForRoundComplete to not clear touched stops\n+            doTransfersForAccessLegs(iterationDepartureTime, true);\n+\n             timerByMinuteTransfers().time(this::transfersForRound);\n \n+            doTransfersForAccessLegs(iterationDepartureTime, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd76160e90888baa632466515ee1e290526c9194"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45f52e43e0aa20ed9f46ee4d74ff133ed0146c6d", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/45f52e43e0aa20ed9f46ee4d74ff133ed0146c6d", "committedDate": "2020-09-15T07:34:56Z", "message": "Make path mapping more robust"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108d4c20d958e7604e76c0be0a366cc6dbb96d8a", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/108d4c20d958e7604e76c0be0a366cc6dbb96d8a", "committedDate": "2020-09-15T08:00:41Z", "message": "Review fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4429245465fd09e3feb8ef62fd4252adafef277", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d4429245465fd09e3feb8ef62fd4252adafef277", "committedDate": "2020-09-15T08:03:06Z", "message": "Merge remote-tracking branch 'origin/dev-2.x' into flex-upstream-raptor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDY1MDE1", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-488465015", "createdAt": "2020-09-15T08:50:50Z", "commit": {"oid": "108d4c20d958e7604e76c0be0a366cc6dbb96d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1MDo1MFrOHR3hog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1MDo1MFrOHR3hog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NzU3MA==", "bodyText": "Move default implementation here", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r488497570", "createdAt": "2020-09-15T08:50:50Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/api/transit/RaptorTransfer.java", "diffHunk": "@@ -19,6 +19,22 @@\n      */\n     int stop();\n \n+    /**\n+     * The time duration to walk or travel the leg in seconds. This is not the entire duration from the journey origin,\n+     * but just:\n+     * <ul>\n+     *     <li>Access: journey origin to first stop.\n+     *     <li>Transit: stop to stop.\n+     *     <li>Egress: last stop to journey destination.\n+     * </ul>\n+     */\n+    int durationInSeconds();\n+\n+    /* TIME-DEPENDENT ACCESS/TRANSFER/EGRESS */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108d4c20d958e7604e76c0be0a366cc6dbb96d8a"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDY3MzU4", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-488467358", "createdAt": "2020-09-15T08:53:34Z", "commit": {"oid": "108d4c20d958e7604e76c0be0a366cc6dbb96d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1MzozNFrOHR3onQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1MzozNFrOHR3onQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5OTM1Nw==", "bodyText": "arrives/departs", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r488499357", "createdAt": "2020-09-15T08:53:34Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/api/transit/RaptorTransfer.java", "diffHunk": "@@ -36,32 +52,34 @@\n      */\n     int latestArrivalTime(int requestedArrivalTime);\n \n-    /**\n-     * The time duration to walk or travel the leg in seconds. This is not the entire duration from the journey origin,\n-     * but just:\n-     * <ul>\n-     *     <li>Access: journey origin to first stop.\n-     *     <li>Transit: stop to stop.\n-     *     <li>Egress: last stop to journey destination.\n-     * </ul>\n-     */\n-    int durationInSeconds();\n+    /* ACCESS/TRANSFER/EGRESS CONTAINING MULTIPLE LEGS */\n+    // The methods below should be only overridden when a RaptorTransfer contains information about\n+    // public services, which were generated outside the RAPTOR algorithm. Examples of such schemes\n+    // include flexible transit service and TNC. They should not be used for regular\n+    // access/transfer/egress.\n \n     /**\n-     * Return the number publicly available services for this {@link RaptorTransfer}. This is used by Raptor to get the\n-     * number of transfers correct witch is part of the criteria used to keep optimal result. This method apply to both\n-     * access and egress, but is not used for public-transit-transfers.\n+     * Some services involving transfers are not handled by the RAPTOR algorithm and need to be\n+     * inserted into the algorithm at a specific place of the algorithm, and to be accounted for,\n+     * in order to get the number of transfers correct, witch is part of the criteria used to keep\n+     * optimal result.\n+     *\n+     * @return the number legs generated by publicly available services, generated outside the\n+     * RAPTOR algorithm for this {@link RaptorTransfer}.\n      */\n     default int numberOfPublicServiceLegs() {\n         return 0;\n     }\n \n     /**\n-     * Is this {@link RaptorTransfer} is connected to the given {@code stop} by <b>transit</b>? For access and egress\n-     * paths we allow plugging in flex and other means of transport, witch might include one or more legs onboard a\n-     * vehicle. This method should return {@code true} if the leg connecting to the given stop is `onBoard` a public\n-     * transport or riding another kind of service like a taxi. This method apply to both access and egress, but is not\n-     * used for public-transit-transfers.\n+     * Is this {@link RaptorTransfer} is connected to the given {@code stop} directly by\n+     * <b>transit</b>? For access and egress paths we allow plugging in flexible transit and other\n+     * means of transport, witch might include one or more legs onboard a vehicle. This method\n+     * should return {@code true} if the leg connecting to the given stop arrives `onBoard` a public", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108d4c20d958e7604e76c0be0a366cc6dbb96d8a"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDc3NTI1", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-488477525", "createdAt": "2020-09-15T09:05:28Z", "commit": {"oid": "108d4c20d958e7604e76c0be0a366cc6dbb96d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTowNToyOFrOHR4HUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTowNToyOFrOHR4HUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwNzIxOQ==", "bodyText": "Move iterationDepartureTime  to be a field on RangeRaptorWorker", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r488507219", "createdAt": "2020-09-15T09:05:28Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/RangeRaptorWorker.java", "diffHunk": "@@ -154,16 +154,9 @@ private void runRaptorForMinute(int iterationDepartureTime) {\n \n             // NB since we have transfer limiting not bothering to cut off search when there are no more transfers\n             // as that will be rare and complicates the code\n-            timerByMinuteScheduleSearch().time(this::findAllTransitForRound);\n+            timerByMinuteScheduleSearch().time(() -> findAllTransitForRound(iterationDepartureTime));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108d4c20d958e7604e76c0be0a366cc6dbb96d8a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDgxMzEz", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-488481313", "createdAt": "2020-09-15T09:10:11Z", "commit": {"oid": "108d4c20d958e7604e76c0be0a366cc6dbb96d8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOToxMDoxMVrOHR4SMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOToxMDoxMVrOHR4SMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUxMDAwMw==", "bodyText": "Move to RoundTracker", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#discussion_r488510003", "createdAt": "2020-09-15T09:10:11Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/transit/raptor/rangeraptor/multicriteria/arrivals/AbstractStopArrival.java", "diffHunk": "@@ -22,6 +23,15 @@\n         return (l, r) -> l.arrivalTime < r.arrivalTime || l.paretoRound < r.paretoRound;\n     }\n \n+    /**\n+     * Return the number of paretoRounds a RaptorTransfer should take. This is used for computing\n+     * the correct paretoRound for accesses and egresses, which contain public service legs, which\n+     * originate outside the RAPTOR algorithm.\n+     */\n+    public static int getParetoRounds(RaptorTransfer access) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108d4c20d958e7604e76c0be0a366cc6dbb96d8a"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec2bc54ccec7cffb18ddea95d5424a028b8e6aa8", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ec2bc54ccec7cffb18ddea95d5424a028b8e6aa8", "committedDate": "2020-09-15T09:36:50Z", "message": "Inline default earliestDepartureTime and latestArrivalTime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "431e117d4218278be632f0c250b27fd1899de02b", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/431e117d4218278be632f0c250b27fd1899de02b", "committedDate": "2020-09-15T09:56:43Z", "message": "Pull iterationDepartureTime to a field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7d80baa261ae90e5a3a8129c0e2b0eb5827df66", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/b7d80baa261ae90e5a3a8129c0e2b0eb5827df66", "committedDate": "2020-09-15T10:21:50Z", "message": "Change numberOfPublicServiceLegs to numberOfLegs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "126cd0ea3f596b0a81c9b6382eb2d16ff9864ddb", "author": {"user": {"login": "hannesj", "name": "Hannes Junnila"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/126cd0ea3f596b0a81c9b6382eb2d16ff9864ddb", "committedDate": "2020-09-15T10:56:45Z", "message": "Rename connectedByPublicService to stopReachedOnBoard"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NTcxNzAx", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3178#pullrequestreview-488571701", "createdAt": "2020-09-15T11:08:36Z", "commit": {"oid": "126cd0ea3f596b0a81c9b6382eb2d16ff9864ddb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1967, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}