{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3ODQ5ODU3", "number": 3172, "title": "Missing transmodel queries", "bodyText": "To be completed by pull request submitter:\n\n issue: Link to or create an issue that describes the relevant feature or bug. Add GitHub keywords to this PR's description (e.g., closes #45).\n roadmap: Check the roadmap for this feature or bug. If it is not already on the roadmap, PLC will discuss as part of the review process.\n tests: Have you added relevant test coverage? Are all the tests passing on the continuous integration service (Travis CI)?\n formatting: Have you followed the suggested code style?\n documentation: If you are adding a new configuration option, have you added an explanation to the configuration documentation tables and sections?\n changelog: add a bullet point to the changelog file with description and link to the linked issue\n\nTo be completed by @opentripplanner/plc:\n\n reviews and approvals by 2 members, ideally from different organizations\n after merging: update the relevant card on the roadmap", "createdAt": "2020-09-02T14:12:18Z", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172", "merged": true, "mergeCommit": {"oid": "d565e3200cc78e464201e723048e968f4b8fc840"}, "closed": true, "closedAt": "2020-09-29T13:13:55Z", "author": {"login": "gmellemstrand"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG1LqIgBqjM3NDAyODE0OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNn4z2AFqTQ5ODQ0NjczMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d6baecf64b46a084a4f364e568f739194e44a52", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/4d6baecf64b46a084a4f364e568f739194e44a52", "committedDate": "2020-09-02T14:11:09Z", "message": "Add find bike parks by envelope method"}, "afterCommit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a62d2cb9148bb9237e3d6e01ede1e4e0c422f229", "committedDate": "2020-09-08T10:33:19Z", "message": "Add find bike parks by envelope method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MzQ2NzIz", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#pullrequestreview-484346723", "createdAt": "2020-09-08T17:21:56Z", "commit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzoyMTo1N1rOHOm7MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzoyMTo1N1rOHOm7MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3OTg1Nw==", "bodyText": "Is it time to remove this TODO?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#discussion_r485079857", "createdAt": "2020-09-08T17:21:57Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/model/stop/PlaceInterfaceType.java", "diffHunk": "@@ -38,17 +41,21 @@ public static GraphQLInterfaceType create(\n             .build())\n         .typeResolver(typeResolutionEnvironment -> {\n           Object o = typeResolutionEnvironment.getObject();\n+          GraphQLSchema schema = typeResolutionEnvironment.getSchema();\n \n           // TODO OTP2 - Add support for Station, osv", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MzQ5MzQ4", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#pullrequestreview-484349348", "createdAt": "2020-09-08T17:25:35Z", "commit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzoyNTozNVrOHOnDbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODowNDowN1rOHOoUgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4MTk2Ng==", "bodyText": "Why are these made none type safe?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#discussion_r485081966", "createdAt": "2020-09-08T17:25:35Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/model/stop/PlaceInterfaceType.java", "diffHunk": "@@ -38,17 +41,21 @@ public static GraphQLInterfaceType create(\n             .build())\n         .typeResolver(typeResolutionEnvironment -> {\n           Object o = typeResolutionEnvironment.getObject();\n+          GraphQLSchema schema = typeResolutionEnvironment.getSchema();\n \n           // TODO OTP2 - Add support for Station, osv\n \n           if (o instanceof Stop) {\n-            return (GraphQLObjectType) quayType;\n+            return schema.getObjectType(\"Quay\");\n+          }\n+          if (o instanceof MonoOrMultiModalStation) {\n+            return schema.getObjectType(\"StopPlace\");\n           }\n           if (o instanceof BikeRentalStation) {\n-            return (GraphQLObjectType) bikeRentalStationType;\n+            return schema.getObjectType(\"BikeRentalStation\");\n           }\n           if (o instanceof BikePark) {\n-            return (GraphQLObjectType) bikeParkType;\n+            return schema.getObjectType(\"BikePark\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4NDcwNw==", "bodyText": "I would have pushed the creation of the Envelope into the getBikeRentalStationForEnvelope method, passing in the 4 coordinates instead. Of cause this is an error in the API design not wrapping the coordinates in its own object of having a Envelop API type. Something to remember for the a new API.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#discussion_r485084707", "createdAt": "2020-09-08T17:30:23Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java", "diffHunk": "@@ -1595,7 +1489,16 @@ private GraphQLSchema create() {\n                 .name(\"maximumLongitude\")\n                 .type(Scalars.GraphQLFloat)\n                 .build())\n-            .dataFetcher(environment -> Collections.emptyList())\n+            .dataFetcher(environment -> GqlUtil\n+                .getRoutingService(environment)\n+                .getBikerentalStationService()\n+                .getBikeRentalStationForEnvelope(new Envelope(new Coordinate(\n+                    environment.getArgument(\"minimumLongitude\"),\n+                    environment.getArgument(\"minimumLatitude\")\n+                ), new Coordinate(\n+                    environment.getArgument(\"maximumLongitude\"),\n+                    environment.getArgument(\"maximumLatitude\")\n+                ))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229"}, "originalPosition": 539}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4NjI5Ng==", "bodyText": "I am not sure if the type qualification is needed if this is moved into a mapper class...", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#discussion_r485086296", "createdAt": "2020-09-08T17:33:26Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/mapping/TransmodelMappingUtil.java", "diffHunk": "@@ -38,26 +38,26 @@ public ServiceDate secondsSinceEpochToServiceDate(Long secondsSinceEpoch) {\n     }\n \n \n-    // public List<PlaceType> mapPlaceTypes(List<TransmodelPlaceType> inputTypes) {\n-    //     if (inputTypes == null) {\n-    //         return null;\n-    //     }\n-    //\n-    //     return inputTypes.stream().map(pt -> mapPlaceType(pt)).distinct().collect(Collectors.toList());\n-    // }\n+     public static List<org.opentripplanner.routing.graphfinder.PlaceType> mapPlaceTypes(List<TransmodelPlaceType> inputTypes) {\n+         if (inputTypes == null) {\n+             return null;\n+         }\n \n-    private PlaceType mapPlaceType(TransmodelPlaceType transmodelType){\n+         return inputTypes.stream().map(TransmodelMappingUtil::mapPlaceType).distinct().collect(Collectors.toList());\n+     }\n+\n+    private static org.opentripplanner.routing.graphfinder.PlaceType mapPlaceType(TransmodelPlaceType transmodelType){\n         if (transmodelType!=null) {\n             switch (transmodelType) {\n                 case QUAY:\n                 case STOP_PLACE:\n-                    return PlaceType.STOP;\n+                    return org.opentripplanner.routing.graphfinder.PlaceType.STOP;\n                 case BICYCLE_RENT:\n-                    return PlaceType.BICYCLE_RENT;\n+                    return org.opentripplanner.routing.graphfinder.PlaceType.BICYCLE_RENT;\n                 case BIKE_PARK:\n-                    return PlaceType.BIKE_PARK;\n+                    return org.opentripplanner.routing.graphfinder.PlaceType.BIKE_PARK;\n                 case CAR_PARK:\n-                    return PlaceType.CAR_PARK;\n+                    return org.opentripplanner.routing.graphfinder.PlaceType.CAR_PARK;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5MzM5NA==", "bodyText": "FYI: I plan to create a type-safe static resolver method for the ((PlaceAtDistance) environment.getSource()) like the:\nprivate static Trip trip(DataFetchingEnvironment environment) {\n    return environment.getSource();\n  }\n\nin ServiceJourneyType. It makes the code a bit easier to read, but I have not got around to refactor everything to use it. I hope extracting the data fetchers will help when we switch to a schema based approach later.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#discussion_r485093394", "createdAt": "2020-09-08T17:46:34Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/model/stop/PlaceAtDistanceType.java", "diffHunk": "@@ -20,16 +22,16 @@ public static GraphQLObjectType create(Relay relay) {\n                   .dataFetcher(environment -> relay.toGlobalId(NAME, \"N/A\"))\n                   .build()\n           )\n-//                .field(GraphQLFieldDefinition.newFieldDefinition()\n-//                        .name(\"place\")\n-//                        .type(placeInterface)\n-//                        .dataFetcher(environment -> ((GraphIndex.PlaceAndDistance) environment.getSource()).place)\n-//                        .build())\n-//                .field(GraphQLFieldDefinition.newFieldDefinition()\n-//                        .name(\"distance\")\n-//                        .type(Scalars.GraphQLInt)\n-//                        .dataFetcher(environment -> ((GraphIndex.PlaceAndDistance) environment.getSource()).distance)\n-//                        .build())\n+                .field(GraphQLFieldDefinition.newFieldDefinition()\n+                        .name(\"place\")\n+                        .type(placeInterface)\n+                        .dataFetcher(environment -> ((PlaceAtDistance) environment.getSource()).place)\n+                        .build())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5NjE3NQ==", "bodyText": "Can this be moved somewhere else? I would like this class to the \"index\" to the Schema types - wiring the Schema together. Mapping, resolving and fetching data should be some where else.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#discussion_r485096175", "createdAt": "2020-09-08T17:51:38Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java", "diffHunk": "@@ -1745,43 +1648,51 @@ private GraphQLSchema create() {\n \n \n \n+    /**\n+     * Create PlaceAndDistance objects for all unique stopPlaces according to specified multiModalMode if client has requested stopPlace type.\n+     *\n+     * Necessary because nearest does not support StopPlace (stations), so we need to fetch quays instead and map the response.\n+     *\n+     * Remove PlaceAndDistance objects for quays if client has not requested these.\n+     */\n+    private List<PlaceAtDistance> convertQuaysToStopPlaces(List<TransmodelPlaceType> placeTypes, List<PlaceAtDistance> places, String multiModalMode, RoutingService routingService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229"}, "originalPosition": 554}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEwMjcyMw==", "bodyText": "I think we should rename this type to InputPlaceIds, the name here is bad it does not reflect what it is, but the roll it plays in the one situation it is used. The name is defined in a global space and the name is fare too generic.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#discussion_r485102723", "createdAt": "2020-09-08T18:04:07Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java", "diffHunk": "@@ -680,34 +697,34 @@ private GraphQLSchema create() {\n //                        .build())\n //                .build();\n \n-//        GraphQLInputObjectType filterInputType = GraphQLInputObjectType.newInputObject()\n-//                .name(\"InputFilters\")\n-//                .field(GraphQLInputObjectField.newInputObjectField()\n-//                        .name(\"quays\")\n-//                        .description(\"Quays to include by id.\")\n-//                        .type(new GraphQLList(Scalars.GraphQLString))\n-//                        .build())\n-//                .field(GraphQLInputObjectField.newInputObjectField()\n-//                        .name(\"lines\")\n-//                        .description(\"Lines to include by id.\")\n-//                        .type(new GraphQLList(Scalars.GraphQLString))\n-//                        .build())\n-//                .field(GraphQLInputObjectField.newInputObjectField()\n-//                        .name(\"bikeRentalStations\")\n-//                        .description(\"Bike rentals to include by id.\")\n-//                        .type(new GraphQLList(Scalars.GraphQLString))\n-//                        .build())\n-//                .field(GraphQLInputObjectField.newInputObjectField()\n-//                        .name(\"bikeParks\")\n-//                        .description(\"Bike parks to include by id.\")\n-//                        .type(new GraphQLList(Scalars.GraphQLString))\n-//                        .build())\n-//                .field(GraphQLInputObjectField.newInputObjectField()\n-//                        .name(\"carParks\")\n-//                        .description(\"Car parks to include by id.\")\n-//                        .type(new GraphQLList(Scalars.GraphQLString))\n-//                        .build())\n-//                .build();\n+        GraphQLInputObjectType filterInputType = GraphQLInputObjectType.newInputObject()\n+                .name(\"InputFilters\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a62d2cb9148bb9237e3d6e01ede1e4e0c422f229"}, "originalPosition": 118}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15cba433cc24813ac64ebf6e3c4b956bc4403e5d", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/15cba433cc24813ac64ebf6e3c4b956bc4403e5d", "committedDate": "2020-09-09T10:55:18Z", "message": "Change name of filterPlaceIds to inputPlaceIds"}, "afterCommit": {"oid": "44f9022612fc994de1b987ebb581608e0062d0d2", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/44f9022612fc994de1b987ebb581608e0062d0d2", "committedDate": "2020-09-09T13:07:23Z", "message": "Change name of filterPlaceIds to inputPlaceIds"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODM0NjM4", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#pullrequestreview-487834638", "createdAt": "2020-09-14T14:34:19Z", "commit": {"oid": "4d085184e6ff8b49f2cff11970bcfb5bb63a76c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDozNDoxOVrOHRX-9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDozNDoxOVrOHRX-9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4MDc4OQ==", "bodyText": "Include that this should never be set higher than walkReluctance since that would lead to walking down the line to avoid waiting.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#discussion_r487980789", "createdAt": "2020-09-14T14:34:19Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLSchema.java", "diffHunk": "@@ -623,6 +623,12 @@ private GraphQLSchema create() {\n                         .type(Scalars.GraphQLFloat)\n                         .defaultValue(routing.request.walkReluctance)\n                         .build())\n+                .argument(GraphQLArgument.newArgument()\n+                        .name(\"waitReluctance\")\n+                        .description(\"Wait cost is multiplied by this value. Setting this to a value lower than 1 indicates that waiting is better than staying on a vehicle.\")\n+                        .type(Scalars.GraphQLFloat)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d085184e6ff8b49f2cff11970bcfb5bb63a76c2"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNTQxNDIy", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#pullrequestreview-491541422", "createdAt": "2020-09-18T14:55:08Z", "commit": {"oid": "b1a1336073ed85081884de0c460e0c1d81bba017"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDo1NTowOFrOHUQo-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDo1NTowOFrOHUQo-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAwNjIwMg==", "bodyText": ".type(gqlUtil.doubleFunctionScalar)", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#discussion_r491006202", "createdAt": "2020-09-18T14:55:08Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/model/DefaultRoutingRequestType.java", "diffHunk": "@@ -401,6 +401,12 @@ private GraphQLObjectType createGraphQLType() {\n                         .type(Scalars.GraphQLBoolean)\n                         .dataFetcher(env -> request.geoidElevation)\n                         .build())\n+                .field(GraphQLFieldDefinition.newFieldDefinition()\n+                        .name(\"transitGeneralizedCostLimit\")\n+                        .description(\"A relative maximum limit for the generalized cost for transit itineraries. The limit is a linear function of the minimum generalized-cost.\")\n+                        .type(Scalars.GraphQLString)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a1336073ed85081884de0c460e0c1d81bba017"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb21bc564f1cf56864cabb35a48143968fbd6658", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/eb21bc564f1cf56864cabb35a48143968fbd6658", "committedDate": "2020-09-29T12:57:34Z", "message": "Reimplement transmodel nearest search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6906d8f86cccea23ec23c1e34f026848b5444f6c", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6906d8f86cccea23ec23c1e34f026848b5444f6c", "committedDate": "2020-09-29T12:57:34Z", "message": "Add find bike parks by envelope method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ba17e41a2dab2cb5d4d7cc2f5da02015ec7def4", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/3ba17e41a2dab2cb5d4d7cc2f5da02015ec7def4", "committedDate": "2020-09-29T12:57:34Z", "message": "Remove TODO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "562e67f2f5f93aafb79ba79c0df4fb9fdadfb9da", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/562e67f2f5f93aafb79ba79c0df4fb9fdadfb9da", "committedDate": "2020-09-29T12:57:34Z", "message": "Fixed import on TransmodelMappingUtil"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e40e1f905a39f3cc4ecb9e78f571326d86d189fe", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e40e1f905a39f3cc4ecb9e78f571326d86d189fe", "committedDate": "2020-09-29T12:57:34Z", "message": "Move convertQuaysToStopPlaces method to the TransmodelMappingUtil class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c1113590cf501048e94786c7ec1a2e934f1c6b5", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8c1113590cf501048e94786c7ec1a2e934f1c6b5", "committedDate": "2020-09-29T12:57:34Z", "message": "Change name of filterPlaceIds to inputPlaceIds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "687cefc807c7b5c7debfb1fc51e90e959aec3dc1", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/687cefc807c7b5c7debfb1fc51e90e959aec3dc1", "committedDate": "2020-09-29T12:57:34Z", "message": "Added comment and removed unused parameters in PlaceInterfaceType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3de354717f48ee3a10d362903184dc10254d7890", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/3de354717f48ee3a10d362903184dc10254d7890", "committedDate": "2020-09-29T12:57:34Z", "message": "Update TransmodelMappingUtil.java\n\nAdd TODO to remember to refactor the TransmodelMappingUtil."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40eb64809ca2709a3fe84351ad616940d4a84d57", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/40eb64809ca2709a3fe84351ad616940d4a84d57", "committedDate": "2020-09-29T13:02:40Z", "message": "Clean code - delete the TransmodelMappingUtil class, and move the functionality into more appropriate domain specific places."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8ebf8cc91ea3408f7c1c38f3c92e8b1acd5ff44", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/b8ebf8cc91ea3408f7c1c38f3c92e8b1acd5ff44", "committedDate": "2020-09-29T13:02:40Z", "message": "Change parameters in getBikeRentalStationsForEnvelope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d460cc97fcf355bb2227dc71e9fb7f1f3ab4023", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/7d460cc97fcf355bb2227dc71e9fb7f1f3ab4023", "committedDate": "2020-09-29T13:02:40Z", "message": "Add wait reluctance parameter to transmodel api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fd042111ec0225888b65bef32c37dad222b559a", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/3fd042111ec0225888b65bef32c37dad222b559a", "committedDate": "2020-09-29T13:02:40Z", "message": "Add routingParameters-transitGeneralizedCostLimit to transmodel API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b69b774746c4a2c0843944dac75c26a5036734e", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2b69b774746c4a2c0843944dac75c26a5036734e", "committedDate": "2020-09-29T13:02:40Z", "message": "Updated transmodel api waitReluctance doc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "266b1cb18cbbd8b4525d7c9d9209ffc18397e8f4", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/266b1cb18cbbd8b4525d7c9d9209ffc18397e8f4", "committedDate": "2020-09-15T11:10:48Z", "message": "Updated transmodel api waitReluctance doc"}, "afterCommit": {"oid": "2b69b774746c4a2c0843944dac75c26a5036734e", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2b69b774746c4a2c0843944dac75c26a5036734e", "committedDate": "2020-09-29T13:02:40Z", "message": "Updated transmodel api waitReluctance doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NDQ2NzMy", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3172#pullrequestreview-498446732", "createdAt": "2020-09-29T13:06:36Z", "commit": {"oid": "2b69b774746c4a2c0843944dac75c26a5036734e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1961, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}