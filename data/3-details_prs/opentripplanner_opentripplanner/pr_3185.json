{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3OTUwODYx", "number": 3185, "title": "Otp2 netex flex import", "bodyText": "To be completed by pull request submitter:\n\n issue: Link to or create an issue that describes the relevant feature or bug. Add GitHub keywords to this PR's description (e.g., closes #45).\n roadmap: Check the roadmap for this feature or bug. If it is not already on the roadmap, PLC will discuss as part of the review process.\n tests: Have you added relevant test coverage? Are all the tests passing on the continuous integration service (Travis CI)?\n formatting: Have you followed the suggested code style?\n documentation: If you are adding a new configuration option, have you added an explanation to the configuration documentation tables and sections?\n changelog: add a bullet point to the changelog file with description and link to the linked issue\n\nTo be completed by @opentripplanner/plc:\n\n reviews and approvals by 2 members, ideally from different organizations\n after merging: update the relevant card on the roadmap", "createdAt": "2020-09-16T12:22:47Z", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185", "merged": true, "mergeCommit": {"oid": "b118341c3c9ea41c4ba7abc228d19339ae7c8b32"}, "closed": true, "closedAt": "2020-10-26T13:44:18Z", "author": {"login": "gmellemstrand"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNoBoTABqjM4MTk1MzI0MTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWTTWXAFqTUxNjcxNjM2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a56e84e1aa83b244dab962c8d168c5278ddac1f9", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a56e84e1aa83b244dab962c8d168c5278ddac1f9", "committedDate": "2020-09-21T09:40:43Z", "message": "Ignore passingTimes without arrival/departure time"}, "afterCommit": {"oid": "f0211ac39215fda1d9b4a2187aba17782c04851e", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f0211ac39215fda1d9b4a2187aba17782c04851e", "committedDate": "2020-09-29T13:16:02Z", "message": "Ignore passingTimes without arrival/departure time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff1c6fce46ce543729357b86cf8f4c297ee9726d", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ff1c6fce46ce543729357b86cf8f4c297ee9726d", "committedDate": "2020-10-16T08:53:26Z", "message": "Add FlexStopLocationMapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99c83c6ccca9165c33f8536121e46c694931ffd0", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/99c83c6ccca9165c33f8536121e46c694931ffd0", "committedDate": "2020-10-16T08:53:26Z", "message": "Added FlexibleStopPlace to netex parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21419d3588ff23ccc3e1148e67372c37b3efc4cc", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/21419d3588ff23ccc3e1148e67372c37b3efc4cc", "committedDate": "2020-10-16T08:53:26Z", "message": "Map FlexibleLines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b6b66030d156cee510342c05390e79ce52ec320", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/7b6b66030d156cee510342c05390e79ce52ec320", "committedDate": "2020-10-16T08:53:26Z", "message": "Map Flexible StopTimes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a116f37ea11a805505ed900107920a1e3481a08", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/1a116f37ea11a805505ed900107920a1e3481a08", "committedDate": "2020-10-16T08:53:26Z", "message": "Temporary mapping of UnscheduledTrip from NeTEx to GTFS format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01ca20dd8f0660ce2c1d28c1a7a898a24c6e326d", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/01ca20dd8f0660ce2c1d28c1a7a898a24c6e326d", "committedDate": "2020-10-16T08:53:26Z", "message": "Swap lat/lon in geometry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f3f9aaaf33fbcb6c29efc3aadd4e22e8f9cc39d", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0f3f9aaaf33fbcb6c29efc3aadd4e22e8f9cc39d", "committedDate": "2020-10-16T08:53:26Z", "message": "Ignore passingTimes without arrival/departure time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a89b65e6c8743b9ed1a5b7a3e4de76ed72e3a383", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a89b65e6c8743b9ed1a5b7a3e4de76ed72e3a383", "committedDate": "2020-10-16T08:53:26Z", "message": "Adjust for renamed methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ef2addc02abdf67249ddd84db35f44f6169ceba", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0ef2addc02abdf67249ddd84db35f44f6169ceba", "committedDate": "2020-10-16T08:53:26Z", "message": "Formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bd5047def7da2630330f4ee8a596bba6bd6095c", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/5bd5047def7da2630330f4ee8a596bba6bd6095c", "committedDate": "2020-09-29T13:26:53Z", "message": "Formatting"}, "afterCommit": {"oid": "0ef2addc02abdf67249ddd84db35f44f6169ceba", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0ef2addc02abdf67249ddd84db35f44f6169ceba", "committedDate": "2020-10-16T08:53:26Z", "message": "Formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/510b2caf15e4e25a690f4e9795f189512a1fee47", "committedDate": "2020-10-21T10:38:09Z", "message": "Merge branch 'dev-2.x' into otp2_netex_flex_import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNjkyOTI1", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#pullrequestreview-513692925", "createdAt": "2020-10-21T13:39:28Z", "commit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzozOToyOVrOHlsrOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTo0NToxNFrOHlzQGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI5MTMyMg==", "bodyText": "I looked at the side-effect, it is very simple to remove it, just returning the result an add it here. I will provide a commit that do that.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509291322", "createdAt": "2020-10-21T13:39:29Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/netex/NetexModule.java", "diffHunk": "@@ -86,6 +88,11 @@ public void buildGraph(\n \n                 calendarServiceData.add(transitBuilder.buildCalendarServiceData());\n \n+                // NB! The calls below have side effects - the builder state is updated!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI5NDg2Ng==", "bodyText": "Revert changing this file - this import is wrong.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509294866", "createdAt": "2020-10-21T13:43:53Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/netex/loader/NetexBundle.java", "diffHunk": "@@ -13,6 +17,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import javax.swing.text.html.parser.Entity;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMyMjkyNQ==", "bodyText": "Suggestion: if (OTPFeature.FlexRouting.isOn() && frame.getFlexibleStopPlaces() != null) {\nThis should allow us to move this code into production, with Flex in the data and use the OTPFeature to toggle FLEX on off, even if there is problems in the import mapping.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509322925", "createdAt": "2020-10-21T14:13:04Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/netex/loader/parser/SiteFrameParser.java", "diffHunk": "@@ -37,6 +40,10 @@ public void parse(Site_VersionFrameStructure frame) {\n         if (frame.getGroupsOfStopPlaces() != null) {\n             parseGroupsOfStopPlaces(frame.getGroupsOfStopPlaces().getGroupOfStopPlaces());\n         }\n+        if (frame.getFlexibleStopPlaces() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMyNTkwMw==", "bodyText": "else if (stopAssignment.getValue() instanceof FlexibleStopAssignment) {\n  if(OTPFeature.FlexRouting.isOn()) {", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509325903", "createdAt": "2020-10-21T14:16:22Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/netex/loader/parser/ServiceFrameParser.java", "diffHunk": "@@ -143,6 +159,24 @@ private void parseStopAssignments(StopAssignmentsInFrame_RelStructure stopAssign\n                     LOG.warn(\"Quay {} not found in stop place file.\", quayRef);\n                 }\n             }\n+            else if (stopAssignment.getValue() instanceof FlexibleStopAssignment) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMyNzE5Ng==", "bodyText": "if(OTPFeature.FlexRouting.isOn()) {\n  this.flexibleLines.add((FlexibleLine) element.getValue());\n}", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509327196", "createdAt": "2020-10-21T14:17:54Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/netex/loader/parser/ServiceFrameParser.java", "diffHunk": "@@ -193,6 +227,8 @@ private void parseLines(LinesInFrame_RelStructure lines) {\n         for (JAXBElement element : lines.getLine_()) {\n             if (element.getValue() instanceof Line) {\n                 this.lines.add((Line) element.getValue());\n+            } else if (element.getValue() instanceof FlexibleLine) {\n+                this.flexibleLines.add((FlexibleLine) element.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM0NzU0OQ==", "bodyText": "This should be a WARNING not halt the build process.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509347549", "createdAt": "2020-10-21T14:41:27Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/netex/loader/mapping/FlexStopLocationMapper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package org.opentripplanner.netex.loader.mapping;\n+\n+import net.opengis.gml._3.AbstractRingPropertyType;\n+import net.opengis.gml._3.LinearRingType;\n+import net.opengis.gml._3.PolygonType;\n+import org.locationtech.jts.geom.Coordinate;\n+import org.locationtech.jts.geom.CoordinateSequence;\n+import org.locationtech.jts.geom.Geometry;\n+import org.locationtech.jts.geom.LinearRing;\n+import org.locationtech.jts.geom.Polygon;\n+import org.opentripplanner.api.resource.CoordinateArrayListSequence;\n+import org.opentripplanner.common.geometry.GeometryUtils;\n+import org.opentripplanner.model.FlexStopLocation;\n+import org.rutebanken.netex.model.FlexibleArea;\n+import org.rutebanken.netex.model.FlexibleStopPlace;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class FlexStopLocationMapper {\n+\n+  private final FeedScopedIdFactory idFactory;\n+\n+  public FlexStopLocationMapper(FeedScopedIdFactory idFactory) {\n+    this.idFactory = idFactory;\n+  }\n+\n+  /**\n+   * Maps NeTEx FlexibleStopPlace to FlexStopLocation. This currently does not support\n+   * FlexLocationGroup, as an equivalent is not defined in the NeTEx Nordic profile.\n+   */\n+  public FlexStopLocation map(FlexibleStopPlace flexibleStopPlace) {\n+    FlexStopLocation result = new FlexStopLocation(idFactory.createId(flexibleStopPlace.getId()));\n+    result.setName(flexibleStopPlace.getName().getValue());\n+\n+    Object flexibleAreaOrFlexibleAreaRefOrHailAndRideArea = flexibleStopPlace\n+        .getAreas()\n+        .getFlexibleAreaOrFlexibleAreaRefOrHailAndRideArea()\n+        .get(0); // Only one area allowed in NeTEx Nordic profile.\n+\n+    if (flexibleAreaOrFlexibleAreaRefOrHailAndRideArea instanceof FlexibleArea) {\n+      result.setGeometry(mapGeometry((\n+          (FlexibleArea) flexibleAreaOrFlexibleAreaRefOrHailAndRideArea\n+      ).getPolygon()));\n+    }\n+    else {\n+      throw new IllegalArgumentException(\"Hail and ride areas are not currently supported.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM1NzA0NA==", "bodyText": "This is not readable. There is 3 problems: 1) Do NOT use long variable names for short lived local variables. 2) The line breaks should be breaking the outer-most scope, what is the expression before .getPolygon(). 3) C-style comment TRAILING code is not allowed, it should be put on a separate line BEFORE the expression.  This is much more readable:\n    // Only one area allowed in NeTEx Nordic profile, get the first one\n    Object area = flexibleStopPlace\n        .getAreas()\n        .getFlexibleAreaOrFlexibleAreaRefOrHailAndRideArea()\n        .get(0); \n\n    if (area instanceof FlexibleArea) {\n      var flexibleArea = (FlexibleArea) area;\n      result.setGeometry(mapGeometry(flexibleArea.getPolygon()));\n    }", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509357044", "createdAt": "2020-10-21T14:52:35Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/netex/loader/mapping/FlexStopLocationMapper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package org.opentripplanner.netex.loader.mapping;\n+\n+import net.opengis.gml._3.AbstractRingPropertyType;\n+import net.opengis.gml._3.LinearRingType;\n+import net.opengis.gml._3.PolygonType;\n+import org.locationtech.jts.geom.Coordinate;\n+import org.locationtech.jts.geom.CoordinateSequence;\n+import org.locationtech.jts.geom.Geometry;\n+import org.locationtech.jts.geom.LinearRing;\n+import org.locationtech.jts.geom.Polygon;\n+import org.opentripplanner.api.resource.CoordinateArrayListSequence;\n+import org.opentripplanner.common.geometry.GeometryUtils;\n+import org.opentripplanner.model.FlexStopLocation;\n+import org.rutebanken.netex.model.FlexibleArea;\n+import org.rutebanken.netex.model.FlexibleStopPlace;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class FlexStopLocationMapper {\n+\n+  private final FeedScopedIdFactory idFactory;\n+\n+  public FlexStopLocationMapper(FeedScopedIdFactory idFactory) {\n+    this.idFactory = idFactory;\n+  }\n+\n+  /**\n+   * Maps NeTEx FlexibleStopPlace to FlexStopLocation. This currently does not support\n+   * FlexLocationGroup, as an equivalent is not defined in the NeTEx Nordic profile.\n+   */\n+  public FlexStopLocation map(FlexibleStopPlace flexibleStopPlace) {\n+    FlexStopLocation result = new FlexStopLocation(idFactory.createId(flexibleStopPlace.getId()));\n+    result.setName(flexibleStopPlace.getName().getValue());\n+\n+    Object flexibleAreaOrFlexibleAreaRefOrHailAndRideArea = flexibleStopPlace\n+        .getAreas()\n+        .getFlexibleAreaOrFlexibleAreaRefOrHailAndRideArea()\n+        .get(0); // Only one area allowed in NeTEx Nordic profile.\n+\n+    if (flexibleAreaOrFlexibleAreaRefOrHailAndRideArea instanceof FlexibleArea) {\n+      result.setGeometry(mapGeometry((\n+          (FlexibleArea) flexibleAreaOrFlexibleAreaRefOrHailAndRideArea\n+      ).getPolygon()));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM4NjMwNQ==", "bodyText": "Move these mapping functions into a separat mapper, for example to OpenGisMapper. These are not part of Netex flex, but OpenGis. They are subject to reuse.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509386305", "createdAt": "2020-10-21T15:28:41Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/netex/loader/mapping/FlexStopLocationMapper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package org.opentripplanner.netex.loader.mapping;\n+\n+import net.opengis.gml._3.AbstractRingPropertyType;\n+import net.opengis.gml._3.LinearRingType;\n+import net.opengis.gml._3.PolygonType;\n+import org.locationtech.jts.geom.Coordinate;\n+import org.locationtech.jts.geom.CoordinateSequence;\n+import org.locationtech.jts.geom.Geometry;\n+import org.locationtech.jts.geom.LinearRing;\n+import org.locationtech.jts.geom.Polygon;\n+import org.opentripplanner.api.resource.CoordinateArrayListSequence;\n+import org.opentripplanner.common.geometry.GeometryUtils;\n+import org.opentripplanner.model.FlexStopLocation;\n+import org.rutebanken.netex.model.FlexibleArea;\n+import org.rutebanken.netex.model.FlexibleStopPlace;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class FlexStopLocationMapper {\n+\n+  private final FeedScopedIdFactory idFactory;\n+\n+  public FlexStopLocationMapper(FeedScopedIdFactory idFactory) {\n+    this.idFactory = idFactory;\n+  }\n+\n+  /**\n+   * Maps NeTEx FlexibleStopPlace to FlexStopLocation. This currently does not support\n+   * FlexLocationGroup, as an equivalent is not defined in the NeTEx Nordic profile.\n+   */\n+  public FlexStopLocation map(FlexibleStopPlace flexibleStopPlace) {\n+    FlexStopLocation result = new FlexStopLocation(idFactory.createId(flexibleStopPlace.getId()));\n+    result.setName(flexibleStopPlace.getName().getValue());\n+\n+    Object flexibleAreaOrFlexibleAreaRefOrHailAndRideArea = flexibleStopPlace\n+        .getAreas()\n+        .getFlexibleAreaOrFlexibleAreaRefOrHailAndRideArea()\n+        .get(0); // Only one area allowed in NeTEx Nordic profile.\n+\n+    if (flexibleAreaOrFlexibleAreaRefOrHailAndRideArea instanceof FlexibleArea) {\n+      result.setGeometry(mapGeometry((\n+          (FlexibleArea) flexibleAreaOrFlexibleAreaRefOrHailAndRideArea\n+      ).getPolygon()));\n+    }\n+    else {\n+      throw new IllegalArgumentException(\"Hail and ride areas are not currently supported.\");\n+    }\n+    return result;\n+  }\n+\n+  private Geometry mapGeometry(PolygonType polygonType) {\n+    return new Polygon(\n+        new LinearRing(mapCoordinateSequence(polygonType.getExterior()),\n+            GeometryUtils.getGeometryFactory()\n+        ),\n+        polygonType\n+            .getInterior()\n+            .stream()\n+            .map(c -> new LinearRing(mapCoordinateSequence(c), GeometryUtils.getGeometryFactory()))\n+            .toArray(LinearRing[]::new),\n+        GeometryUtils.getGeometryFactory()\n+    );\n+  }\n+\n+  private CoordinateSequence mapCoordinateSequence(\n+      AbstractRingPropertyType abstractRingPropertyType\n+  ) {\n+    List<Double> posList = ((LinearRingType) abstractRingPropertyType.getAbstractRing().getValue())\n+        .getPosList()\n+        .getValue();\n+\n+    // Convert a single list of alternating lat/lon values into coordinates\n+    ArrayList<Coordinate> coordinates = new ArrayList<>();\n+    for (int i = 0; i < posList.size(); i += 2) {\n+      coordinates.add(new Coordinate(posList.get(i + 1), posList.get(i)));\n+    }\n+\n+    return new CoordinateArrayListSequence(coordinates);\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5OTA2NA==", "bodyText": "Class member fields passed to a class member function. No need to pass these on.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509399064", "createdAt": "2020-10-21T15:45:14Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/netex/loader/mapping/StopTimesMapper.java", "diffHunk": "@@ -76,7 +87,13 @@ MappedStopTimes mapToStopTimes(\n             String pointInJourneyPattern = currentPassingTime.getPointInJourneyPatternRef().getValue().getRef();\n \n             StopPointInJourneyPattern stopPoint = findStopPoint(pointInJourneyPattern, journeyPattern);\n-            Stop stop = lookupStop(stopPoint, quayIdByStopPointRef, stopsById);\n+            StopLocation stop = lookUpStopLocation(\n+                stopPoint,\n+                quayIdByStopPointRef,\n+                flexibleStopPlaceIdByStopPointRef,\n+                stopsById,\n+                flexibleStopLocationsById", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NDU3MDE3", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#pullrequestreview-514457017", "createdAt": "2020-10-22T08:00:34Z", "commit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowMDozNFrOHmVT5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODowMDozNFrOHmVT5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk1NzA5NA==", "bodyText": "Wouldn't it be safe to always construct a multipolygon?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#discussion_r509957094", "createdAt": "2020-10-22T08:00:34Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/netex/loader/mapping/FlexStopLocationMapper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package org.opentripplanner.netex.loader.mapping;\n+\n+import net.opengis.gml._3.AbstractRingPropertyType;\n+import net.opengis.gml._3.LinearRingType;\n+import net.opengis.gml._3.PolygonType;\n+import org.locationtech.jts.geom.Coordinate;\n+import org.locationtech.jts.geom.CoordinateSequence;\n+import org.locationtech.jts.geom.Geometry;\n+import org.locationtech.jts.geom.LinearRing;\n+import org.locationtech.jts.geom.Polygon;\n+import org.opentripplanner.api.resource.CoordinateArrayListSequence;\n+import org.opentripplanner.common.geometry.GeometryUtils;\n+import org.opentripplanner.model.FlexStopLocation;\n+import org.rutebanken.netex.model.FlexibleArea;\n+import org.rutebanken.netex.model.FlexibleStopPlace;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class FlexStopLocationMapper {\n+\n+  private final FeedScopedIdFactory idFactory;\n+\n+  public FlexStopLocationMapper(FeedScopedIdFactory idFactory) {\n+    this.idFactory = idFactory;\n+  }\n+\n+  /**\n+   * Maps NeTEx FlexibleStopPlace to FlexStopLocation. This currently does not support\n+   * FlexLocationGroup, as an equivalent is not defined in the NeTEx Nordic profile.\n+   */\n+  public FlexStopLocation map(FlexibleStopPlace flexibleStopPlace) {\n+    FlexStopLocation result = new FlexStopLocation(idFactory.createId(flexibleStopPlace.getId()));\n+    result.setName(flexibleStopPlace.getName().getValue());\n+\n+    Object flexibleAreaOrFlexibleAreaRefOrHailAndRideArea = flexibleStopPlace\n+        .getAreas()\n+        .getFlexibleAreaOrFlexibleAreaRefOrHailAndRideArea()\n+        .get(0); // Only one area allowed in NeTEx Nordic profile.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510b2caf15e4e25a690f4e9795f189512a1fee47"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f49d066fbe70397c307285df083f8ee34a09806", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9f49d066fbe70397c307285df083f8ee34a09806", "committedDate": "2020-10-22T09:48:19Z", "message": "Changes based on comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3382d673e4c862a1f47accb60c79b5896838865", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d3382d673e4c862a1f47accb60c79b5896838865", "committedDate": "2020-10-22T09:48:38Z", "message": "Merge branch 'dev-2.x' into otp2_netex_flex_import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28b1150c7052eecfe86bae1c6f6fffe9b9caf864", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/28b1150c7052eecfe86bae1c6f6fffe9b9caf864", "committedDate": "2020-10-25T14:06:34Z", "message": "Filter lines by flex"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39b047f8476e9c7a4d145d440277b491d28690ac", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/39b047f8476e9c7a4d145d440277b491d28690ac", "committedDate": "2020-10-25T13:57:58Z", "message": "Filter lines by flex"}, "afterCommit": {"oid": "28b1150c7052eecfe86bae1c6f6fffe9b9caf864", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/28b1150c7052eecfe86bae1c6f6fffe9b9caf864", "committedDate": "2020-10-25T14:06:34Z", "message": "Filter lines by flex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53ac7a80a7a9924f05c417f2e72ec699173b5092", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/53ac7a80a7a9924f05c417f2e72ec699173b5092", "committedDate": "2020-10-26T11:53:19Z", "message": "Moved OpenGisMapper to netex package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af1d434b5aac4532b5347851f2a40980581e8153", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/af1d434b5aac4532b5347851f2a40980581e8153", "committedDate": "2020-10-26T12:03:51Z", "message": "Clean code: Remove side-effect from FlexTripsMapper, saving flex trips to the builder during mapping."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NzEzMDA0", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#pullrequestreview-516713004", "createdAt": "2020-10-26T12:07:42Z", "commit": {"oid": "af1d434b5aac4532b5347851f2a40980581e8153"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d0a33984dd661a278a6108fa405974a36b91197", "author": {"user": {"login": "t2gran", "name": "Thomas Gran"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9d0a33984dd661a278a6108fa405974a36b91197", "committedDate": "2020-10-26T12:11:49Z", "message": "Keep lambda in FlexTripMapper to get correct logger"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NzE2MzYz", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3185#pullrequestreview-516716363", "createdAt": "2020-10-26T12:12:54Z", "commit": {"oid": "9d0a33984dd661a278a6108fa405974a36b91197"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1970, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}