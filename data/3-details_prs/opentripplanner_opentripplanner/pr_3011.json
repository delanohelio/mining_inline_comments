{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMDMxMzE5", "number": 3011, "title": "Otp2 redesign api modes", "bodyText": "To be completed by pull request submitter:\n\n issue: #2777\n roadmap: Check the roadmap for this feature or bug. If it is not already on the roadmap, PLC will discuss as part of the review process.\n tests: Have you added relevant test coverage? Are all the tests passing on the continuous integration service (Travis CI)?\n formatting: Have you followed the suggested code style?\n documentation: If you are adding a new configuration option, have you added an explanation to the configuration documentation tables and sections?\n changelog: add a bullet point to the changelog file with description and link to the linked issue\n\nTo be completed by @opentripplanner/plc:\n\n reviews and approvals by 2 members, ideally from different organizations\n after merging: update the relevant card on the roadmap\n\nThis is a first step in reimplementing and improving how street routing works in OTP2. This builds on #3010, and should be merged after.\nI have done the following:\n\nMoved the RoutingRequest class to the org.opentripplanner.routing.request package.\nCreated a new RequestModes class that allows access, egress, direct and transit modes to be specified individually.\nCreated new TransitMode and StreetMode enums. Transit modes are specified as before, but street modes are a high level grouping, like WALKor BIKE_RENTAL which may include several smaller transitions. (Walk -> bike -> walk with bike -> bike).\nThe TraverseModeSet field is kept in the RoutingRequest, but it is only set by the getStreetSearchRequest method. This should be refactored so we have a separate request object for the street routing.\nThe Transmodel API has been changed to reflect the new way to specify modes.\nThe direct street routing has been extracted to its own class. A new subRequest with the correct settings for the applicable StreetMode is created.\nThe access and egress routing has been refactored to not create the same objects as transfer routing, but new AccessEgress objects that implement the same interface, but contain the states found during routing.\nA timeshift method has been added to the Itinerary class and is used when mapping access/egress legs in the RaptorPathToItineraryMapper.\nMade a best effort at mapping the REST API modes to the new format. This can be seen in the QualifiedModeSet.getRequestModes class. TraverseModes are now completely separated from the REST API, except the debug output at the bottom part of the PlannerResource class.\nThe NearbyStopFinder now has a new method that takes a RoutingRequest as a parameter. This allows access/egress searches using other modes than walk.\nTested the supported access/egress/direct modes. Which ones are supported for which searches is specified in the StreetMode class.\nAdded a check for bike rental that a bike has actually been rented before reaching the destination. This is in the State.isFinal method. This method is also called in the NearbyStopFinder in order to get the same functionality for the access/egress searches.", "createdAt": "2020-03-19T14:19:40Z", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011", "merged": true, "mergeCommit": {"oid": "c9c7a2b5de6c843af52f01905f5d8d552e976bf6"}, "closed": true, "closedAt": "2020-04-21T08:51:21Z", "author": {"login": "gmellemstrand"}, "timelineItems": {"totalCount": 64, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPLCk7gH2gAyMzkxMDMxMzE5OjFiZGU5NWMwMDllOWM0NTRjYTY4ZTMzMDQzOWI2ZDIzOWFkYzczYmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZvu8SAFqTM5NzEyMTkyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1bde95c009e9c454ca68e330439b6d239adc73bb", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/1bde95c009e9c454ca68e330439b6d239adc73bb", "committedDate": "2020-03-19T12:26:43Z", "message": "Move RoutingRequest to request package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f209ddc23530595f68a5c4403df67f00672fb1db", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f209ddc23530595f68a5c4403df67f00672fb1db", "committedDate": "2020-03-19T13:49:45Z", "message": "Add AllowedModes class to RoutingRequest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a1be2c006a7e800e60536023b3a86c40b159563", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6a1be2c006a7e800e60536023b3a86c40b159563", "committedDate": "2020-03-19T13:50:38Z", "message": "Add AllowedModes to Transmodel API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d734688c5ec16961c5d1ed94397966ce83c5b56", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2d734688c5ec16961c5d1ed94397966ce83c5b56", "committedDate": "2020-03-19T13:51:46Z", "message": "Rename allowBikeRental to bikeRental on RoutingRequest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce156316b26c8d03440747e2f741a7fe23238b82", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ce156316b26c8d03440747e2f741a7fe23238b82", "committedDate": "2020-03-19T13:53:30Z", "message": "Extract DirectStreetRouter to its own class and refactor AccessEgress to use its own class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dd13284e889d3bd0432910a12d3b4f69e416e9b", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0dd13284e889d3bd0432910a12d3b4f69e416e9b", "committedDate": "2020-03-19T13:54:03Z", "message": "Add timeshift methods to Itinerary"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c31b93279a3ace6765a63078781a24da453268b8", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/c31b93279a3ace6765a63078781a24da453268b8", "committedDate": "2020-03-19T15:46:54Z", "message": "Change TraverseMode to TransitMode in the transit model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f517179facced4b83dd1115bd21be59d36ecf87a", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/f517179facced4b83dd1115bd21be59d36ecf87a", "committedDate": "2020-03-23T09:15:08Z", "message": "Merge branch 'dev-2.x' into otp2_redesign_api_modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00e8d03bbe56b5a0f7038366430d9f5a70c2d534", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/00e8d03bbe56b5a0f7038366430d9f5a70c2d534", "committedDate": "2020-03-23T10:54:36Z", "message": "Best effort at mapping QualifiedModes to AllowedModes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMTQ1Mjg2", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-380145286", "createdAt": "2020-03-24T09:46:26Z", "commit": {"oid": "f209ddc23530595f68a5c4403df67f00672fb1db"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTo0NjoyN1rOF6oTFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTo0NjoyN1rOF6oTFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAyMTk3NQ==", "bodyText": "Expand javadoc to clarify the distinction between main request and subrequest modes.\nConsider renaming traversemodes to submodes and then rename AllowedModes to something like modes.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r397021975", "createdAt": "2020-03-24T09:46:27Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/routing/request/RoutingRequest.java", "diffHunk": "@@ -179,9 +179,23 @@\n     public boolean useRequestedDateTimeInMaxHours = false;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f209ddc23530595f68a5c4403df67f00672fb1db"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMTUxNjQ4", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-380151648", "createdAt": "2020-03-24T09:54:31Z", "commit": {"oid": "ce156316b26c8d03440747e2f741a7fe23238b82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTo1NDozMlrOF6onIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTo1NDozMlrOF6onIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAyNzEwNQ==", "bodyText": "Check that the correct heuristic is used for the direct street search", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r397027105", "createdAt": "2020-03-24T09:54:32Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/raptor/router/street/DirectStreetRouter.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package org.opentripplanner.routing.algorithm.raptor.router.street;\n+\n+import org.opentripplanner.common.geometry.SphericalDistanceLibrary;\n+import org.opentripplanner.model.plan.Itinerary;\n+import org.opentripplanner.routing.algorithm.mapping.GraphPathToItineraryMapper;\n+import org.opentripplanner.routing.algorithm.mapping.ItinerariesHelper;\n+import org.opentripplanner.routing.error.PathNotFoundException;\n+import org.opentripplanner.routing.impl.GraphPathFinder;\n+import org.opentripplanner.routing.request.RoutingRequest;\n+import org.opentripplanner.routing.spt.GraphPath;\n+import org.opentripplanner.standalone.server.Router;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Collections;\n+import java.util.List;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce156316b26c8d03440747e2f741a7fe23238b82"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMTU4MjQ2", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-380158246", "createdAt": "2020-03-24T10:02:51Z", "commit": {"oid": "00e8d03bbe56b5a0f7038366430d9f5a70c2d534"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDowMjo1MVrOF6o8aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDowMjo1MVrOF6o8aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAzMjU1Mw==", "bodyText": "The AllowedModes is not a good name. The Allowed does not not tell what this is, maybe RoutingRequestModes is better?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r397032553", "createdAt": "2020-03-24T10:02:51Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/request/AllowedModes.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.opentripplanner.routing.request;\n+\n+import org.opentripplanner.model.TransitMode;\n+\n+import java.util.Set;\n+\n+public class AllowedModes {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00e8d03bbe56b5a0f7038366430d9f5a70c2d534"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "739cf9c64b7b7615517547e63a47a361c1ebd9e1", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/739cf9c64b7b7615517547e63a47a361c1ebd9e1", "committedDate": "2020-03-24T12:54:48Z", "message": "Rename request modes/streetSubRequestModes parameters and expanded javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2424ab8aadeeb4333edb22f5afc5ad69138102ee", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2424ab8aadeeb4333edb22f5afc5ad69138102ee", "committedDate": "2020-03-24T13:35:03Z", "message": "Remove TraverseMode from REST API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2570de10fbb0a837b6cc313fa10e200e3f87000", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e2570de10fbb0a837b6cc313fa10e200e3f87000", "committedDate": "2020-03-24T13:51:19Z", "message": "Clean up the TraverseModeSet to not use string parameters in constructor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96935050ca9ffa240b020fba75af1ab8e05d1824", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/96935050ca9ffa240b020fba75af1ab8e05d1824", "committedDate": "2020-03-24T14:20:42Z", "message": "Change Qualifier enum to String"}, "afterCommit": {"oid": "d40f0c84e79126acd4d3c10bc5f1f877cffaac21", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d40f0c84e79126acd4d3c10bc5f1f877cffaac21", "committedDate": "2020-03-24T14:22:43Z", "message": "Change Qualifier enum to String"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8033d37135b495f5226eff7ff75fb6de25196be2", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8033d37135b495f5226eff7ff75fb6de25196be2", "committedDate": "2020-03-24T15:05:55Z", "message": "Change Qualifier enum to String"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eec7006e7902129351b1331ecf67ab152b6380ab", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/eec7006e7902129351b1331ecf67ab152b6380ab", "committedDate": "2020-03-24T15:27:51Z", "message": "Removed unused methods from RoutingRequest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d40f0c84e79126acd4d3c10bc5f1f877cffaac21", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d40f0c84e79126acd4d3c10bc5f1f877cffaac21", "committedDate": "2020-03-24T14:22:43Z", "message": "Change Qualifier enum to String"}, "afterCommit": {"oid": "eec7006e7902129351b1331ecf67ab152b6380ab", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/eec7006e7902129351b1331ecf67ab152b6380ab", "committedDate": "2020-03-24T15:27:51Z", "message": "Removed unused methods from RoutingRequest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8208820b2eadcc908ef0ba0eca016f1ccae00055", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8208820b2eadcc908ef0ba0eca016f1ccae00055", "committedDate": "2020-03-25T09:05:49Z", "message": "Merge branch 'dev-2.x' into otp2_redesign_api_modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d182695cff5c8d0c14af5d4a98adacbfa29d8c1", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0d182695cff5c8d0c14af5d4a98adacbfa29d8c1", "committedDate": "2020-03-25T11:18:02Z", "message": "Make bikerental work as direct mode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eab9599de7523277acd827b4fe3df6d4ead7ec26", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/eab9599de7523277acd827b4fe3df6d4ead7ec26", "committedDate": "2020-03-25T12:27:42Z", "message": "Update TODOs for StreetModes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95493e9f7f86c2f801b271a071b894318785f7dd", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/95493e9f7f86c2f801b271a071b894318785f7dd", "committedDate": "2020-03-25T12:47:50Z", "message": "Street modes now work for access/egress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c3e96e587e8563d8438b5e27a6662a7de59a3f8", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/4c3e96e587e8563d8438b5e27a6662a7de59a3f8", "committedDate": "2020-03-25T13:38:54Z", "message": "Update TODOs on StreetMode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62b8400bc26e71fdf101f845d497f44dda448f70", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/62b8400bc26e71fdf101f845d497f44dda448f70", "committedDate": "2020-03-25T14:11:44Z", "message": "Rename allowedModes to modes in Transmodel api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0427e588adb35750583eea85be283dc28a9e4765", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/0427e588adb35750583eea85be283dc28a9e4765", "committedDate": "2020-03-25T14:23:59Z", "message": "Rename AllowedModes class to RequestModes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9b8748405da45938dd8c025d2c960c650d82283", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/b9b8748405da45938dd8c025d2c960c650d82283", "committedDate": "2020-03-25T15:07:34Z", "message": "Update TODO for QualifiedModeSet mapping"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f2ee3f0d124640664d86432ad75bf6d2eab6d61", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8f2ee3f0d124640664d86432ad75bf6d2eab6d61", "committedDate": "2020-03-25T14:39:14Z", "message": "Update TODO for QualifiedModeSet mapping"}, "afterCommit": {"oid": "b9b8748405da45938dd8c025d2c960c650d82283", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/b9b8748405da45938dd8c025d2c960c650d82283", "committedDate": "2020-03-25T15:07:34Z", "message": "Update TODO for QualifiedModeSet mapping"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNjUzODcw", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-382653870", "createdAt": "2020-03-27T08:21:17Z", "commit": {"oid": "b9b8748405da45938dd8c025d2c960c650d82283"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwODoyMToxN1rOF8nErg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwODozMjo1OVrOF8na1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5OTA1NA==", "bodyText": "We should do ApiMode mapping in one place.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r399099054", "createdAt": "2020-03-27T08:21:17Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/api/model/ApiLeg.java", "diffHunk": "@@ -74,7 +72,7 @@\n      */\n     @XmlAttribute\n     @JsonSerialize\n-    public String mode = TraverseMode.WALK.toString();\n+    public String mode = \"WALK\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9b8748405da45938dd8c025d2c960c650d82283"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMDU2Mw==", "bodyText": "Why is these methods removed? They are part of the API.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r399100563", "createdAt": "2020-03-27T08:24:23Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/api/model/ApiLeg.java", "diffHunk": "@@ -240,35 +238,4 @@\n     @XmlAttribute\n     @JsonSerialize\n     public Boolean rentedBike;\n-\n-    /**\n-     * Whether this leg is a transit leg or not.\n-     * @return Boolean true if the leg is a transit leg\n-     */\n-    public Boolean isTransitLeg() {\n-        if (mode == null) return null;\n-        else if (mode.equals(TraverseMode.WALK.toString())) return false;\n-        else if (mode.equals(TraverseMode.CAR.toString())) return false;\n-        else if (mode.equals(TraverseMode.BICYCLE.toString())) return false;\n-        else return true;\n-    }\n-\n-    /**\n-     * The leg's duration in seconds\n-     */\n-    @XmlElement\n-    @JsonSerialize\n-    public double getDuration() {\n-        return endTime.getTimeInMillis()/1000.0 - startTime.getTimeInMillis()/1000.0;\n-    }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9b8748405da45938dd8c025d2c960c650d82283"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNDcyNg==", "bodyText": "Why is the Enum removed? It is part of the api and serve as documentation. We want to go in the directon of a more \"type-Safe\" direction, not the oposite way.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r399104726", "createdAt": "2020-03-27T08:32:59Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/api/parameter/QualifiedMode.java", "diffHunk": "@@ -1,66 +1,35 @@\n package org.opentripplanner.api.parameter;\n \n import com.google.common.collect.Sets;\n-import org.opentripplanner.routing.core.RoutingRequest;\n-import org.opentripplanner.routing.core.TraverseMode;\n \n import java.io.Serializable;\n-import java.security.InvalidParameterException;\n import java.util.Set;\n \n public class QualifiedMode implements Serializable {\n     private static final long serialVersionUID = 1L;\n     \n-    public final TraverseMode mode;\n-    public final Set<Qualifier> qualifiers = Sets.newHashSet();\n+    public final String mode;\n+    public final Set<String> qualifiers = Sets.newHashSet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9b8748405da45938dd8c025d2c960c650d82283"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzU5NzEx", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-382759711", "createdAt": "2020-03-27T11:00:41Z", "commit": {"oid": "b9b8748405da45938dd8c025d2c960c650d82283"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMTowMDo0MlrOF8sWQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMTowMDo0MlrOF8sWQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE4NTQ3Mw==", "bodyText": "AtomicReferences imply multithreading access, use something else to achive the callback thing.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r399185473", "createdAt": "2020-03-27T11:00:42Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelGraphQLPlanner.java", "diffHunk": "@@ -240,22 +240,24 @@ private RoutingRequest createRequest(DataFetchingEnvironment environment) {\n         }\n \n         if (hasArgument(environment, \"modes\")) {\n-            // Map modes to comma separated list in string first to be able to reuse logic in QualifiedModeSet\n-            // Remove CABLE_CAR from collection because QualifiedModeSet does not support mapping (splits on '_')\n-            Set<TraverseMode> modes = new HashSet<>(environment.getArgument(\"modes\"));\n-            boolean cableCar = modes.remove(TraverseMode.CABLE_CAR);\n-\n-            String modesAsString = modes.isEmpty() ? \"\" : Joiner.on(\",\").join(modes);\n-            if (!StringUtils.isEmpty(modesAsString)) {\n-                new QualifiedModeSet(modesAsString).applyToRoutingRequest(request);\n-                request.setModes(request.modes);\n-            } else if (cableCar) {\n-                // Clear default modes in case only cable car is selected\n-                request.clearModes();\n-            }\n+            AtomicReference<StreetMode> accessMode = new AtomicReference<>();\n+            AtomicReference<StreetMode> egressMode = new AtomicReference<>();\n+            AtomicReference<StreetMode> directMode = new AtomicReference<>();\n+            AtomicReference<ArrayList<TransitMode>> transitModes = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9b8748405da45938dd8c025d2c960c650d82283"}, "originalPosition": 71}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9093741fe3123bb95ed653b05678d2264aaf1b9b", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9093741fe3123bb95ed653b05678d2264aaf1b9b", "committedDate": "2020-03-27T12:12:47Z", "message": "Reverse remove methods from ApiLeg"}, "afterCommit": {"oid": "6a938dda32c709a937a6c7ff1ed094911ee272c4", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6a938dda32c709a937a6c7ff1ed094911ee272c4", "committedDate": "2020-03-27T12:42:29Z", "message": "Reverse remove methods from ApiLeg"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de93cb9cc98836e57dd1e3e19d1e345a54a3b10a", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/de93cb9cc98836e57dd1e3e19d1e345a54a3b10a", "committedDate": "2020-03-27T12:45:27Z", "message": "Reverse remove methods from ApiLeg"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a938dda32c709a937a6c7ff1ed094911ee272c4", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6a938dda32c709a937a6c7ff1ed094911ee272c4", "committedDate": "2020-03-27T12:42:29Z", "message": "Reverse remove methods from ApiLeg"}, "afterCommit": {"oid": "de93cb9cc98836e57dd1e3e19d1e345a54a3b10a", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/de93cb9cc98836e57dd1e3e19d1e345a54a3b10a", "committedDate": "2020-03-27T12:45:27Z", "message": "Reverse remove methods from ApiLeg"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODgwMTcx", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-391880171", "createdAt": "2020-04-12T17:42:47Z", "commit": {"oid": "de93cb9cc98836e57dd1e3e19d1e345a54a3b10a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNzo0Mjo0N1rOGEXXKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNzo0ODozNFrOGEXZ8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzMDI1MQ==", "bodyText": "Collections.emptySet returns an immutable set, which makes Set#add used below throw a NPE.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r407230251", "createdAt": "2020-04-12T17:42:47Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/api/parameter/QualifiedModeSet.java", "diffHunk": "@@ -29,32 +33,103 @@ public QualifiedModeSet(String s) {\n         }\n     }\n \n-    /**\n-     * Modify an existing routing request, setting fields to reflect these qualified modes.\n-     * This is intended as a temporary solution, and uses the current system of a single mode set,\n-     * accompanied by some flags to help with routing.\n-     */\n-    public void applyToRoutingRequest(RoutingRequest req) {\n+    public RequestModes getRequestModes() {\n+        RequestModes requestModes = new RequestModes(\n+            StreetMode.WALK,\n+            StreetMode.WALK,\n+            StreetMode.WALK,\n+            Collections.emptySet()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de93cb9cc98836e57dd1e3e19d1e345a54a3b10a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzMDQ4Ng==", "bodyText": "break is missing here", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r407230486", "createdAt": "2020-04-12T17:44:53Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/api/parameter/QualifiedModeSet.java", "diffHunk": "@@ -29,32 +33,103 @@ public QualifiedModeSet(String s) {\n         }\n     }\n \n-    /**\n-     * Modify an existing routing request, setting fields to reflect these qualified modes.\n-     * This is intended as a temporary solution, and uses the current system of a single mode set,\n-     * accompanied by some flags to help with routing.\n-     */\n-    public void applyToRoutingRequest(RoutingRequest req) {\n+    public RequestModes getRequestModes() {\n+        RequestModes requestModes = new RequestModes(\n+            StreetMode.WALK,\n+            StreetMode.WALK,\n+            StreetMode.WALK,\n+            Collections.emptySet()\n+        );\n \n-        if (qModes.isEmpty()) return;\n+        if (qModes.isEmpty()) return requestModes;\n \n-        /* Start with an empty mode set. */\n-        TraverseModeSet modes = new TraverseModeSet();\n-        req.setModes(modes);\n-        \n-        /* First, copy over all the unqualified modes and see if we are using transit. FIXME HACK */\n+        // Set transit modes\n         for (QualifiedMode qMode : qModes) {\n-            modes.setMode(qMode.mode, true);\n+             switch (qMode.mode) {\n+                 case \"RAIL\":\n+                     requestModes.transitModes.add(TransitMode.RAIL);\n+                     break;\n+                 case \"SUBWAY\":\n+                     requestModes.transitModes.add(TransitMode.SUBWAY);\n+                     break;\n+                 case \"BUS\":\n+                     requestModes.transitModes.add(TransitMode.BUS);\n+                     break;\n+                 case \"TRAM\":\n+                     requestModes.transitModes.add(TransitMode.TRAM);\n+                     break;\n+                 case \"FERRY\":\n+                     requestModes.transitModes.add(TransitMode.FERRY);\n+                     break;\n+                 case \"AIRPLANE\":\n+                     requestModes.transitModes.add(TransitMode.AIRPLANE);\n+                     break;\n+                 case \"CABLE_CAR\":\n+                     requestModes.transitModes.add(TransitMode.CABLE_CAR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de93cb9cc98836e57dd1e3e19d1e345a54a3b10a"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzMDg5OA==", "bodyText": "Shouldn't this have the default values for transit modes added, now there is no transit modes by default.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r407230898", "createdAt": "2020-04-12T17:48:11Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/api/parameter/QualifiedModeSet.java", "diffHunk": "@@ -29,32 +33,103 @@ public QualifiedModeSet(String s) {\n         }\n     }\n \n-    /**\n-     * Modify an existing routing request, setting fields to reflect these qualified modes.\n-     * This is intended as a temporary solution, and uses the current system of a single mode set,\n-     * accompanied by some flags to help with routing.\n-     */\n-    public void applyToRoutingRequest(RoutingRequest req) {\n+    public RequestModes getRequestModes() {\n+        RequestModes requestModes = new RequestModes(\n+            StreetMode.WALK,\n+            StreetMode.WALK,\n+            StreetMode.WALK,\n+            Collections.emptySet()\n+        );\n \n-        if (qModes.isEmpty()) return;\n+        if (qModes.isEmpty()) return requestModes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de93cb9cc98836e57dd1e3e19d1e345a54a3b10a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzMDk2MA==", "bodyText": "This adds all transit modes, when a street-only search is made", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r407230960", "createdAt": "2020-04-12T17:48:34Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/api/parameter/QualifiedModeSet.java", "diffHunk": "@@ -29,32 +33,103 @@ public QualifiedModeSet(String s) {\n         }\n     }\n \n-    /**\n-     * Modify an existing routing request, setting fields to reflect these qualified modes.\n-     * This is intended as a temporary solution, and uses the current system of a single mode set,\n-     * accompanied by some flags to help with routing.\n-     */\n-    public void applyToRoutingRequest(RoutingRequest req) {\n+    public RequestModes getRequestModes() {\n+        RequestModes requestModes = new RequestModes(\n+            StreetMode.WALK,\n+            StreetMode.WALK,\n+            StreetMode.WALK,\n+            Collections.emptySet()\n+        );\n \n-        if (qModes.isEmpty()) return;\n+        if (qModes.isEmpty()) return requestModes;\n \n-        /* Start with an empty mode set. */\n-        TraverseModeSet modes = new TraverseModeSet();\n-        req.setModes(modes);\n-        \n-        /* First, copy over all the unqualified modes and see if we are using transit. FIXME HACK */\n+        // Set transit modes\n         for (QualifiedMode qMode : qModes) {\n-            modes.setMode(qMode.mode, true);\n+             switch (qMode.mode) {\n+                 case \"RAIL\":\n+                     requestModes.transitModes.add(TransitMode.RAIL);\n+                     break;\n+                 case \"SUBWAY\":\n+                     requestModes.transitModes.add(TransitMode.SUBWAY);\n+                     break;\n+                 case \"BUS\":\n+                     requestModes.transitModes.add(TransitMode.BUS);\n+                     break;\n+                 case \"TRAM\":\n+                     requestModes.transitModes.add(TransitMode.TRAM);\n+                     break;\n+                 case \"FERRY\":\n+                     requestModes.transitModes.add(TransitMode.FERRY);\n+                     break;\n+                 case \"AIRPLANE\":\n+                     requestModes.transitModes.add(TransitMode.AIRPLANE);\n+                     break;\n+                 case \"CABLE_CAR\":\n+                     requestModes.transitModes.add(TransitMode.CABLE_CAR);\n+                 case \"GONDOLA\":\n+                     requestModes.transitModes.add(TransitMode.GONDOLA);\n+                     break;\n+                 case \"FUNICULAR\":\n+                     requestModes.transitModes.add(TransitMode.FUNICULAR);\n+                     break;\n+             }\n         }\n-        boolean usingTransit = modes.isTransit();\n-        \n-        // We used to always set WALK to true, but this forced walking when someone wanted to use a bike.\n-        // We also want it to be possible to force biking-only (e.g. this is done in some consistency tests).\n-        // TODO clearly define mode semantics: does presence of mode mean it is allowable, preferred... ?\n \n+        if (requestModes.transitModes.isEmpty()) {\n+            requestModes.transitModes = new HashSet<>(Arrays.asList(TransitMode.values()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de93cb9cc98836e57dd1e3e19d1e345a54a3b10a"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef2824212dc845bfe451b48a12b89f2c856c933e", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ef2824212dc845bfe451b48a12b89f2c856c933e", "committedDate": "2020-04-14T13:46:05Z", "message": "Merge branch 'dev-2.x' into otp2_redesign_api_modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "147f926bf60fa9970a2fce099219a5dd512c5857", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/147f926bf60fa9970a2fce099219a5dd512c5857", "committedDate": "2020-04-15T08:27:08Z", "message": "Changes to REST API suggested by hannesj"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f37f89cbfa658e11b5f3b7315733dd7cb7624f7", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8f37f89cbfa658e11b5f3b7315733dd7cb7624f7", "committedDate": "2020-04-15T08:25:02Z", "message": "Changes to REST API suggested by hannesj"}, "afterCommit": {"oid": "147f926bf60fa9970a2fce099219a5dd512c5857", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/147f926bf60fa9970a2fce099219a5dd512c5857", "committedDate": "2020-04-15T08:27:08Z", "message": "Changes to REST API suggested by hannesj"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e34459cee54c8f6c7fbf8cfb35b9a880397d4060", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e34459cee54c8f6c7fbf8cfb35b9a880397d4060", "committedDate": "2020-04-15T08:50:36Z", "message": "Changed REST API modes back to enums, but created new api enums separated from the internal model"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28a10f5fa45bd26ed9c90c47732d5e66a2c5421f", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/28a10f5fa45bd26ed9c90c47732d5e66a2c5421f", "committedDate": "2020-04-15T08:45:31Z", "message": "Changed REST API modes back to enums, but created new api enums separated from the internal model"}, "afterCommit": {"oid": "e34459cee54c8f6c7fbf8cfb35b9a880397d4060", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e34459cee54c8f6c7fbf8cfb35b9a880397d4060", "committedDate": "2020-04-15T08:50:36Z", "message": "Changed REST API modes back to enums, but created new api enums separated from the internal model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06c077a984e1147fb2f11cae678554b78cd65324", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/06c077a984e1147fb2f11cae678554b78cd65324", "committedDate": "2020-04-15T09:43:23Z", "message": "Replace AtomicReference with a simple wrapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "084199406fc7679863194670ec18682c57bd89f2", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/084199406fc7679863194670ec18682c57bd89f2", "committedDate": "2020-04-15T12:52:44Z", "message": "Clean up APIs and added support for not using access/egress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d44dc936a2ff2cf42b29c33c2d44d4c6f376ee58", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d44dc936a2ff2cf42b29c33c2d44d4c6f376ee58", "committedDate": "2020-04-15T13:25:32Z", "message": "Update migration guide"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "758ae1a55bafd6a0cee26ae038f53450bd14375a", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/758ae1a55bafd6a0cee26ae038f53450bd14375a", "committedDate": "2020-04-15T14:02:45Z", "message": "Set default RequestModes in RoutingRequest constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "781d046cb4487f0d716ce68a441c109c10e1966c", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/781d046cb4487f0d716ce68a441c109c10e1966c", "committedDate": "2020-04-15T14:08:43Z", "message": "Merge branch 'dev-2.x' into otp2_redesign_api_modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a699b54028a575d119f86c7dffa28716257daf92", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a699b54028a575d119f86c7dffa28716257daf92", "committedDate": "2020-04-16T07:03:55Z", "message": "Merge branch 'dev-2.x' into otp2_redesign_api_modes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDA4MDQ1", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-394408045", "createdAt": "2020-04-16T08:27:43Z", "commit": {"oid": "a699b54028a575d119f86c7dffa28716257daf92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoyNzo0M1rOGGaP-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoyNzo0M1rOGGaP-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM3NDcxNA==", "bodyText": "These should be uppercase, or checked against the enum values themselves", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r409374714", "createdAt": "2020-04-16T08:27:43Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/api/model/ApiLeg.java", "diffHunk": "@@ -247,9 +247,9 @@\n      */\n     public Boolean isTransitLeg() {\n         if (mode == null) return null;\n-        else if (mode.equals(TraverseMode.WALK.toString())) return false;\n-        else if (mode.equals(TraverseMode.CAR.toString())) return false;\n-        else if (mode.equals(TraverseMode.BICYCLE.toString())) return false;\n+        else if (mode.equals(\"Walk\")) return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a699b54028a575d119f86c7dffa28716257daf92"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "555ac31a1f5e33ea485f314cb3da7530015a2ecb", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/555ac31a1f5e33ea485f314cb3da7530015a2ecb", "committedDate": "2020-04-16T11:16:10Z", "message": "Merge branch 'dev-2.x' into otp2_redesign_api_modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6fb26973ab25c33d617fef24a602b3af626b76c", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d6fb26973ab25c33d617fef24a602b3af626b76c", "committedDate": "2020-04-16T11:16:34Z", "message": "Merge branch 'dev-2.x' into otp2_redesign_api_modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "874636249afd059e30b90d453178079ec77c98c2", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/874636249afd059e30b90d453178079ec77c98c2", "committedDate": "2020-04-16T11:18:36Z", "message": "Added changelog entry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdb66a66ee68f12776d96d559414dcd80c99d7a1", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/fdb66a66ee68f12776d96d559414dcd80c99d7a1", "committedDate": "2020-04-16T12:10:10Z", "message": "Fix check for transit modes specified before routing transit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aea244f4ebd831185e0a778c3ae534a94a45cb26", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/aea244f4ebd831185e0a778c3ae534a94a45cb26", "committedDate": "2020-04-16T12:54:43Z", "message": "Make fields on InspectorLayer class public to allow json serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be0c4710e59c6f8dbf16c50db1d3862bb772dc7", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/5be0c4710e59c6f8dbf16c50db1d3862bb772dc7", "committedDate": "2020-04-16T13:32:40Z", "message": "Fix check on access/egress mode supported"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDQyNjM3", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-394042637", "createdAt": "2020-04-15T18:47:42Z", "commit": {"oid": "781d046cb4487f0d716ce68a441c109c10e1966c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo0Nzo0MlrOGGG-DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo1MDoyMFrOGGHEJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1ODgyOA==", "bodyText": "This document is about \"what you have to do if you are using the REST API\", but the above description say no changes. Maybe there is something that was allowed before that does not work now or is there a limited set of combinations? Maybe some combinations map into a given set of mode transitions?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r409058828", "createdAt": "2020-04-15T18:47:42Z", "author": {"login": "t2gran"}, "path": "docs/OTP2-MigrationGuide.md", "diffHunk": "@@ -30,6 +30,9 @@ These properties changed names from:\n  - `searchWindow` Limit the departure window or arrival window for the routing search.\n  - `boardSlackByMode` How much time boarding a vehicle takes for each given mode.\n  - `alightSlackByMode` How much time alighting a vehicle takes for each given mode.\n+ - `modes` You now have to specify access/egress/direct/transit modes separately. This gives more\n+ fine-grained control of the results. The REST api is unchanged, but is mapped into this structure.\n+ The sandbox Transmodel API allows you to specify the structure directly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781d046cb4487f0d716ce68a441c109c10e1966c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2MDM5MA==", "bodyText": "The GtfsLibrary should operate on the GTFS import, not on the internal model. I have refactored already this in PR #3031.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r409060390", "createdAt": "2020-04-15T18:50:20Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/siri/SiriFuzzyTripMatcher.java", "diffHunk": "@@ -344,7 +344,7 @@ public FeedScopedId getTripId(String vehicleJourney) {\n \n         List<FeedScopedId> matches = new ArrayList<>();\n         for (Trip trip : cachedTripsBySiriId) {\n-            if (GtfsLibrary.getTraverseMode(trip.getRoute()).equals(traverseMode)\n+            if (GtfsLibrary.getTransitMode(trip.getRoute()).equals(traverseMode)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781d046cb4487f0d716ce68a441c109c10e1966c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4a422de2bfc0c887da67030aa4be835cdaf538e", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d4a422de2bfc0c887da67030aa4be835cdaf538e", "committedDate": "2020-04-17T09:07:28Z", "message": "Merge branch 'dev-2.x' into otp2_redesign_api_modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e87430a60db59397f29c7b4d935bc6aaa6599d23", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e87430a60db59397f29c7b4d935bc6aaa6599d23", "committedDate": "2020-04-17T11:07:24Z", "message": "Remove references to the transmodel api in the migration guide"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50c862cf2daec95575d67c76da7d511522e79165", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/50c862cf2daec95575d67c76da7d511522e79165", "committedDate": "2020-04-17T11:08:07Z", "message": "Merge branch 'otp2_redesign_api_modes' of github.com:entur/OpenTripPlanner into otp2_redesign_api_modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1c867b0c5d44f2a3cb5839beec2e2aec041ecb5", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/c1c867b0c5d44f2a3cb5839beec2e2aec041ecb5", "committedDate": "2020-04-17T11:21:37Z", "message": "Allow bicycle as access/egress, transfers will still be walk-only"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDExNDA4", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-395411408", "createdAt": "2020-04-17T12:31:33Z", "commit": {"oid": "c1c867b0c5d44f2a3cb5839beec2e2aec041ecb5"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjozMTozM1rOGHMC5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjozOTo0M1rOGHMS0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE5MDU2NQ==", "bodyText": "I do not like the fact that there is a chose of either access/transit/egress or direct, but as long as everyone (Mads) understand that this is a first try and that we will redesign this later i am ok with it. But, we will do this differently when migrating to a schema based API. This is OK for now.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r410190565", "createdAt": "2020-04-17T12:31:33Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/transmodelapi/TransmodelIndexGraphQLSchema.java", "diffHunk": "@@ -469,6 +477,41 @@ public TransmodelIndexGraphQLSchema(Graph graph, RoutingRequest defaultRequest)\n                         .build())\n                 .build();\n \n+        modesInputType = GraphQLInputObjectType.newInputObject()\n+            .name(\"Modes\")\n+            .description(\"Input format for specifying which modes will be allowed for this search. \"\n+                + \"If this element is not present, it will default to accessMode/egressMode/directMode \"\n+                + \"of foot and all transport modes will be allowed.\")\n+            .field(GraphQLInputObjectField.newInputObjectField()\n+                .name(\"accessMode\")\n+                .description(\"The mode used to get from the origin to the access stops in the transit \"\n+                    + \"network the transit network (first-mile). If the element is not present or null,\"\n+                    + \"only transit that can be immediately boarded from the origin will be used.\")\n+                .type(STREET_MODE)\n+                .build())\n+            .field(GraphQLInputObjectField.newInputObjectField()\n+                .name(\"egressMode\")\n+                .description(\"The mode used to get from the egress stops in the transit network to\"\n+                    + \"the destination (last-mile). If the element is not present or null,\"\n+                    + \"only transit that can immediately arrive at the origin will be used.\")\n+                .type(STREET_MODE)\n+                .build())\n+            .field(GraphQLInputObjectField.newInputObjectField()\n+                .name(\"directMode\")\n+                .description(\"The mode used to get from the origin to the destination directly, \"\n+                    + \"without using the transit network. If the element is not present or null,\"\n+                    + \"direct travel without using transit will be disallowed.\")\n+                .type(STREET_MODE)\n+                .build())\n+            .field(GraphQLInputObjectField.newInputObjectField()\n+                .name(\"transportMode\")\n+                .description(\"The allowed modes for the transit part of the trip. Use an empty list \"\n+                    + \"to disallow transit for this search. If the element is not present or null, \"\n+                    + \"it will default to all transport modes.\")\n+                .type(new GraphQLList(TRANSPORT_MODE))\n+                .build())\n+            .build();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1c867b0c5d44f2a3cb5839beec2e2aec041ecb5"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE5NDY0MQ==", "bodyText": "We try to keep all lines 100 characters wide, but I am not sure if we should apply it on markdown files. From what I see in the IDE and here on GitHub, it probably better to not do it (both wraps nicely, and Intelij do NOT wrap lines when I try to do auto reformatting). You can do as you like on this one, but we should state something in the developer guideline - I will do that.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r410194641", "createdAt": "2020-04-17T12:39:43Z", "author": {"login": "t2gran"}, "path": "docs/OTP2-MigrationGuide.md", "diffHunk": "@@ -32,6 +32,7 @@ These properties changed names from:\n  - `searchWindow` Limit the departure window or arrival window for the routing search.\n  - `boardSlackByMode` How much time boarding a vehicle takes for each given mode.\n  - `alightSlackByMode` How much time alighting a vehicle takes for each given mode.\n+ - `modes` The REST API is unchanged, but is mapped into a new structure in the RoutingRequest. This means not all combinations of non-transit modes that was available in OTP1 is available in OTP2.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1c867b0c5d44f2a3cb5839beec2e2aec041ecb5"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NjQ3MjAx", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-395647201", "createdAt": "2020-04-17T17:36:38Z", "commit": {"oid": "c1c867b0c5d44f2a3cb5839beec2e2aec041ecb5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzozNjozOFrOGHXE4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzozNjozOFrOGHXE4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM3MTI5OA==", "bodyText": "This breaks arriveBy-searches, as orginVertices get set to from on row 145. Either the direction of the routingRequest should be always forward, or the originVertives should be set in to and not from parameter in setRoutingContext .", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#discussion_r410371298", "createdAt": "2020-04-17T17:36:38Z", "author": {"login": "hannesj"}, "path": "src/main/java/org/opentripplanner/graph_builder/module/NearbyStopFinder.java", "diffHunk": "@@ -138,16 +139,16 @@ public NearbyStopFinder(Graph graph, double radiusMeters, boolean useStreets) {\n     public List<StopAtDistance> findNearbyStopsViaStreets (\n             Set<Vertex> originVertices,\n             boolean reverseDirection,\n-            boolean removeTempEdges\n+            boolean removeTempEdges,\n+            RoutingRequest routingRequest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1c867b0c5d44f2a3cb5839beec2e2aec041ecb5"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8f9848aacd7caf26350101aa926c86971cee99c", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/a8f9848aacd7caf26350101aa926c86971cee99c", "committedDate": "2020-04-20T09:48:10Z", "message": "Fix arriveBy searches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5592b56b6da229a81588008dc52d22574124782", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/d5592b56b6da229a81588008dc52d22574124782", "committedDate": "2020-04-20T11:18:53Z", "message": "Merge branch 'dev-2.x' into otp2_redesign_api_modes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6973b00479ad60441dce7d9ebb9b48c5583af0b6", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/6973b00479ad60441dce7d9ebb9b48c5583af0b6", "committedDate": "2020-04-20T11:36:16Z", "message": "Do not use arriveBy setting from main request when re-traversing edges in itinerary mapper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDI3NDU3", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-396427457", "createdAt": "2020-04-20T12:57:51Z", "commit": {"oid": "6973b00479ad60441dce7d9ebb9b48c5583af0b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MTIxOTI4", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3011#pullrequestreview-397121928", "createdAt": "2020-04-21T08:51:00Z", "commit": {"oid": "6973b00479ad60441dce7d9ebb9b48c5583af0b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2087, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}