{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MTU4NTM0", "number": 3090, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1NjozMVrOEEpsCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDozOToyNlrOEJFjZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzEyNzc5OnYy", "diffSide": "RIGHT", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1NjozMVrOGiZ-wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDowNDowOFrOGie8XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczMDQzMg==", "bodyText": "Line break", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438730432", "createdAt": "2020-06-11T11:56:31Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice\n+ */\n+public class GBFSUpdaterEndpointFetcher {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(GBFSUpdaterEndpointFetcher.class);\n+\n+  private static final int DEFAULT_FREQUENCY_SEC = 15;\n+\n+  public static List<GraphUpdater> createUpdatersFromEndpoint(String url) {\n+\n+    LOG.info(\"Fetching list of updaters from {}\", url);\n+\n+    List<GraphUpdater> updaters = new ArrayList<>();\n+\n+    try {\n+      InputStream is = HttpUtils.getData(url);\n+      JsonNode node = (new ObjectMapper()).readTree(is);\n+      for (JsonNode operator : node.get(\"operators\")) {\n+        String network = operator.get(\"name\").asText();\n+        String updaterUrl = adjustUrlForUpdater(operator.get(\"url\").asText());\n+\n+        GbfsDataSource dataSource = new GbfsDataSource(updaterUrl, network);\n+        GbfsUpdaterSourceConfig gbfsUpdaterSourceConfig = new GbfsUpdaterSourceConfig(dataSource);\n+        BikeRentalParameters bikeRentalParameters = new BikeRentalParameters(\n+            gbfsUpdaterSourceConfig,\n+            updaterUrl,\n+            DEFAULT_FREQUENCY_SEC,\n+            network\n+        );\n+        LOG.info(\"Fetched updater info for {} at url {}\", network, updaterUrl);\n+\n+        GraphUpdater updater = new BikeRentalUpdater(bikeRentalParameters);\n+        updaters.add(updater);\n+      }\n+    }\n+    catch (java.io.IOException e) {\n+      LOG.warn(\n+          \"Error fetching list of bike rental endpoints from {}\", url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxMTc0MA==", "bodyText": "You are silently eating the exception, print at least the exception message in the log.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438811740", "createdAt": "2020-06-11T14:04:08Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice\n+ */\n+public class GBFSUpdaterEndpointFetcher {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(GBFSUpdaterEndpointFetcher.class);\n+\n+  private static final int DEFAULT_FREQUENCY_SEC = 15;\n+\n+  public static List<GraphUpdater> createUpdatersFromEndpoint(String url) {\n+\n+    LOG.info(\"Fetching list of updaters from {}\", url);\n+\n+    List<GraphUpdater> updaters = new ArrayList<>();\n+\n+    try {\n+      InputStream is = HttpUtils.getData(url);\n+      JsonNode node = (new ObjectMapper()).readTree(is);\n+      for (JsonNode operator : node.get(\"operators\")) {\n+        String network = operator.get(\"name\").asText();\n+        String updaterUrl = adjustUrlForUpdater(operator.get(\"url\").asText());\n+\n+        GbfsDataSource dataSource = new GbfsDataSource(updaterUrl, network);\n+        GbfsUpdaterSourceConfig gbfsUpdaterSourceConfig = new GbfsUpdaterSourceConfig(dataSource);\n+        BikeRentalParameters bikeRentalParameters = new BikeRentalParameters(\n+            gbfsUpdaterSourceConfig,\n+            updaterUrl,\n+            DEFAULT_FREQUENCY_SEC,\n+            network\n+        );\n+        LOG.info(\"Fetched updater info for {} at url {}\", network, updaterUrl);\n+\n+        GraphUpdater updater = new BikeRentalUpdater(bikeRentalParameters);\n+        updaters.add(updater);\n+      }\n+    }\n+    catch (java.io.IOException e) {\n+      LOG.warn(\n+          \"Error fetching list of bike rental endpoints from {}\", url);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczMDQzMg=="}, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzE1Njg2OnYy", "diffSide": "RIGHT", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjowNjoyN1rOGiaQ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjowNjoyN1rOGiaQ7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNTA4NQ==", "bodyText": "We try to avoid using the 'org.apache.commons' when possible, and here you can rewrite this as:\nprivate static final String GBFS_JSON_FILENAME = \"gbfs.json\";\n:\nreturn url.endsWith(GBFS_JSON_FILENAME)\n        ? url.substring(0, url.length() - GBFS_JSON_FILENAME.length())\n        : url;", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438735085", "createdAt": "2020-06-11T12:06:27Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice\n+ */\n+public class GBFSUpdaterEndpointFetcher {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(GBFSUpdaterEndpointFetcher.class);\n+\n+  private static final int DEFAULT_FREQUENCY_SEC = 15;\n+\n+  public static List<GraphUpdater> createUpdatersFromEndpoint(String url) {\n+\n+    LOG.info(\"Fetching list of updaters from {}\", url);\n+\n+    List<GraphUpdater> updaters = new ArrayList<>();\n+\n+    try {\n+      InputStream is = HttpUtils.getData(url);\n+      JsonNode node = (new ObjectMapper()).readTree(is);\n+      for (JsonNode operator : node.get(\"operators\")) {\n+        String network = operator.get(\"name\").asText();\n+        String updaterUrl = adjustUrlForUpdater(operator.get(\"url\").asText());\n+\n+        GbfsDataSource dataSource = new GbfsDataSource(updaterUrl, network);\n+        GbfsUpdaterSourceConfig gbfsUpdaterSourceConfig = new GbfsUpdaterSourceConfig(dataSource);\n+        BikeRentalParameters bikeRentalParameters = new BikeRentalParameters(\n+            gbfsUpdaterSourceConfig,\n+            updaterUrl,\n+            DEFAULT_FREQUENCY_SEC,\n+            network\n+        );\n+        LOG.info(\"Fetched updater info for {} at url {}\", network, updaterUrl);\n+\n+        GraphUpdater updater = new BikeRentalUpdater(bikeRentalParameters);\n+        updaters.add(updater);\n+      }\n+    }\n+    catch (java.io.IOException e) {\n+      LOG.warn(\n+          \"Error fetching list of bike rental endpoints from {}\", url);\n+    }\n+\n+    LOG.info(\"{} updaters fetched\", updaters.size());\n+\n+    return updaters;\n+  }\n+\n+  /**\n+   * The GBFS standard defines \"gbfs.json\" as the entrypoint, while\n+   * {@link org.opentripplanner.updater.bike_rental.BikeRentalDataSource} expects the base url and\n+   * does not look at \"gbfs.json\". This method adjusts the URL to what the BikeRentalDataSource\n+   * expects.\n+   */\n+  private static String adjustUrlForUpdater(String url) {\n+    return url.endsWith(\"gbfs.json\")\n+        ? StringUtils.substring(url, 0, url.length() - 9)\n+        : url;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzE2MzI3OnYy", "diffSide": "RIGHT", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjowODo0NFrOGiaVIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjowODo0NFrOGiaVIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNjE2Mw==", "bodyText": "Follow the Java package naming convention using only lowercase letters, no underscores.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438736163", "createdAt": "2020-06-11T12:08:44Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzE2NzQ2OnYy", "diffSide": "RIGHT", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GbfsDataSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoxMDoxNFrOGiaX2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoxMDoxNFrOGiaX2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNjg1Ng==", "bodyText": "Should be named GbfsDataSourceParameters ?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438736856", "createdAt": "2020-06-11T12:10:14Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GbfsDataSource.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import org.opentripplanner.updater.bike_rental.GbfsBikeRentalDataSource;\n+\n+public class GbfsDataSource implements GbfsBikeRentalDataSource.Parameters {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzIwOTkwOnYy", "diffSide": "RIGHT", "path": "docs/sandbox/BikeShareUpdaterEndpoint.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoyNDoxN1rOGiayvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoyNDoxN1rOGiayvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0Mzc0Mg==", "bodyText": "It is not clear what this is from this documentation.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438743742", "createdAt": "2020-06-11T12:24:17Z", "author": {"login": "t2gran"}, "path": "docs/sandbox/BikeShareUpdaterEndpoint.md", "diffHunk": "@@ -0,0 +1,14 @@\n+# Bike share updater API support.\n+\n+## Contact Info\n+- Gard Mellemstrand, Entur, Norway\n+\n+## Changelog\n+- Initial implementation of bike share updater API support\n+\n+## Documentation\n+\n+This adds support for the GBFS endpoint component located at https://github.com/entur/bikeservice", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzIxNTQ1OnYy", "diffSide": "RIGHT", "path": "docs/sandbox/BikeShareUpdaterEndpoint.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoyNTo1NlrOGia2HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjozMDozNFrOGia_AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NDYwNQ==", "bodyText": "bikeShareUpdaterEndpoint is to generic.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438744605", "createdAt": "2020-06-11T12:25:56Z", "author": {"login": "t2gran"}, "path": "docs/sandbox/BikeShareUpdaterEndpoint.md", "diffHunk": "@@ -0,0 +1,14 @@\n+# Bike share updater API support.\n+\n+## Contact Info\n+- Gard Mellemstrand, Entur, Norway\n+\n+## Changelog\n+- Initial implementation of bike share updater API support\n+\n+## Documentation\n+\n+This adds support for the GBFS endpoint component located at https://github.com/entur/bikeservice\n+ \n+### Configuration\n+To enable this you need to specify a url for the `bikeShareUpdaterEndpoint` in the `router-config.json`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0Njg4MA==", "bodyText": "BikeShare or BikeRentalService? Is this a service locator, hub or a gateway?\nThe best name I can think of is BikeRentalServiceDirectory. Other similar names would be BikeRentalServiceLocatorService or BikeRentalServiceLookupService. From what I understand this is just a directory/name service - listing GBFS BikeRental endpoints. It does not act as a gateway/hub/proxy?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438746880", "createdAt": "2020-06-11T12:30:34Z", "author": {"login": "t2gran"}, "path": "docs/sandbox/BikeShareUpdaterEndpoint.md", "diffHunk": "@@ -0,0 +1,14 @@\n+# Bike share updater API support.\n+\n+## Contact Info\n+- Gard Mellemstrand, Entur, Norway\n+\n+## Changelog\n+- Initial implementation of bike share updater API support\n+\n+## Documentation\n+\n+This adds support for the GBFS endpoint component located at https://github.com/entur/bikeservice\n+ \n+### Configuration\n+To enable this you need to specify a url for the `bikeShareUpdaterEndpoint` in the `router-config.json`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NDYwNQ=="}, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzIyMTYwOnYy", "diffSide": "RIGHT", "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjoyNzo1NlrOGia57Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjowMjoxMlrOGlCjYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTU4MQ==", "bodyText": "The url is configurable, ref that not our url.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438745581", "createdAt": "2020-06-11T12:27:56Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NjgzOA==", "bodyText": "The endpoint url is configurable, but the component that provides the API is open source and located at that url. This is useful if someone else wants to set up their own bikeservice deployment.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r439296838", "createdAt": "2020-06-12T08:58:20Z", "author": {"login": "gmellemstrand"}, "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTU4MQ=="}, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5MjMyMA==", "bodyText": "Sorry, missed the fact that this is pointing to the implementation, not the running service.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441492320", "createdAt": "2020-06-17T12:02:12Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/updater_endpoint_fetcher/GBFSUpdaterEndpointFetcher.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.opentripplanner.ext.updater_endpoint_fetcher;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTU4MQ=="}, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzY1MzU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDowOTo0M1rOGifKPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDowOTo0M1rOGifKPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNTI5Mw==", "bodyText": "asURI(...)", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438815293", "createdAt": "2020-06-11T14:09:43Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -42,6 +44,9 @@ public RouterConfig(JsonNode node, String source, boolean logUnusedParams) {\n         this.streetRoutingTimeoutSeconds = adapter.asDouble(\n                 \"streetRoutingTimeout\", DEFAULT_STREET_ROUTING_TIMEOUT\n         );\n+        this.bikeShareUpdaterEndpoint = adapter.asText(\n+            \"bikeShareUpdaterEndpoint\", null\n+        );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzY1NDAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDowOTo0OFrOGifKdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDowOTo0OFrOGifKdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNTM1MQ==", "bodyText": "private final URI gbfsBikeRentalServiceDirectory;", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438815351", "createdAt": "2020-06-11T14:09:48Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -31,6 +32,7 @@\n \n     private final String requestLogFile;\n     private final double streetRoutingTimeoutSeconds;\n+    private final String bikeShareUpdaterEndpoint;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzY2NDk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/standalone/server/Router.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoxMjoxN1rOGifRlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoyNDozMFrOGlvH3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg==", "bodyText": "Can the gbfsBikeRentalServiceDirectory  part of the UpdaterConfig?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r438817172", "createdAt": "2020-06-11T14:12:17Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/standalone/server/Router.java", "diffHunk": "@@ -93,7 +93,11 @@ public void startup() {\n         }\n \n         /* Create Graph updater modules from JSON config. */\n-        GraphUpdaterConfigurator.setupGraph(this.graph, routerConfig.updaterConfig());\n+        GraphUpdaterConfigurator.setupGraph(\n+            this.graph,\n+            routerConfig.updaterConfig(),\n+            routerConfig.getBikeShareUpdaterEndpoint()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODAzMA==", "bodyText": "It could, but the reason I decided to separate them was to keep router-config json loading completely separate from the reading of this endpoint.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r439298030", "createdAt": "2020-06-12T09:00:40Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/standalone/server/Router.java", "diffHunk": "@@ -93,7 +93,11 @@ public void startup() {\n         }\n \n         /* Create Graph updater modules from JSON config. */\n-        GraphUpdaterConfigurator.setupGraph(this.graph, routerConfig.updaterConfig());\n+        GraphUpdaterConfigurator.setupGraph(\n+            this.graph,\n+            routerConfig.updaterConfig(),\n+            routerConfig.getBikeShareUpdaterEndpoint()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NzEzMg==", "bodyText": "The routerConfig.getBikeShareUpdaterEndpoint() is just reading the config, not reading the endpoint. There is a mismatch here witch make people ask? Why do we need to pass in two config objects, when the UpdaterConfig exist as the \"All the GraphUpdaterConfigurator need to know\" role?", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441657132", "createdAt": "2020-06-17T16:01:23Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/standalone/server/Router.java", "diffHunk": "@@ -93,7 +93,11 @@ public void startup() {\n         }\n \n         /* Create Graph updater modules from JSON config. */\n-        GraphUpdaterConfigurator.setupGraph(this.graph, routerConfig.updaterConfig());\n+        GraphUpdaterConfigurator.setupGraph(\n+            this.graph,\n+            routerConfig.updaterConfig(),\n+            routerConfig.getBikeShareUpdaterEndpoint()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE0NzY0OQ==", "bodyText": "It depends on whether we want to UpdaterConfig to have the role of reading all config from all sources, or the role of reading config from json specifically, as is stated in the javadoc.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r442147649", "createdAt": "2020-06-18T11:08:03Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/standalone/server/Router.java", "diffHunk": "@@ -93,7 +93,11 @@ public void startup() {\n         }\n \n         /* Create Graph updater modules from JSON config. */\n-        GraphUpdaterConfigurator.setupGraph(this.graph, routerConfig.updaterConfig());\n+        GraphUpdaterConfigurator.setupGraph(\n+            this.graph,\n+            routerConfig.updaterConfig(),\n+            routerConfig.getBikeShareUpdaterEndpoint()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIxMjM5OA==", "bodyText": "The bikeShareUpdaterEndpoint parameter is in the JSON file.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r442212398", "createdAt": "2020-06-18T13:09:00Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/standalone/server/Router.java", "diffHunk": "@@ -93,7 +93,11 @@ public void startup() {\n         }\n \n         /* Create Graph updater modules from JSON config. */\n-        GraphUpdaterConfigurator.setupGraph(this.graph, routerConfig.updaterConfig());\n+        GraphUpdaterConfigurator.setupGraph(\n+            this.graph,\n+            routerConfig.updaterConfig(),\n+            routerConfig.getBikeShareUpdaterEndpoint()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMjU1Nw==", "bodyText": "I see what you mean now. That method is reading the config, which is an endpoint, just for the configuration. I see that I already rename it to getBikeRentalServiceDirectoryUrl.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r442222557", "createdAt": "2020-06-18T13:24:30Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/standalone/server/Router.java", "diffHunk": "@@ -93,7 +93,11 @@ public void startup() {\n         }\n \n         /* Create Graph updater modules from JSON config. */\n-        GraphUpdaterConfigurator.setupGraph(this.graph, routerConfig.updaterConfig());\n+        GraphUpdaterConfigurator.setupGraph(\n+            this.graph,\n+            routerConfig.updaterConfig(),\n+            routerConfig.getBikeShareUpdaterEndpoint()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNzE3Mg=="}, "originalCommit": {"oid": "50f8abc2c4466c08690da09302e3f02b9e4d1819"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDYzNTIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjowODo0MlrOGlCv_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjowODo0MlrOGlCv_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5NTU0OA==", "bodyText": "Add a short javadoc to this method including that it configure a Sandbox feature.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441495548", "createdAt": "2020-06-17T12:08:42Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -65,6 +70,10 @@ public double streetRoutingTimeoutSeconds() {\n         return streetRoutingTimeoutSeconds;\n     }\n \n+    public URI getBikeRentalServiceDirectoryUrl() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "124612b5544ece60fbdcad7d3e98f4fdc5f22441"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDY0NDU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjoxMToyMVrOGlC1iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDo1OTo0NFrOGlqTOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5Njk2OQ==", "bodyText": "This parameter need documentation in the Configuration.md - Not much, but clearly stated that it is a Sandbox feature.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441496969", "createdAt": "2020-06-17T12:11:21Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -42,6 +44,9 @@ public RouterConfig(JsonNode node, String source, boolean logUnusedParams) {\n         this.streetRoutingTimeoutSeconds = adapter.asDouble(\n                 \"streetRoutingTimeout\", DEFAULT_STREET_ROUTING_TIMEOUT\n         );\n+        this.bikeRentalServiceDirectoryUrl = adapter.asUri(\n+            \"bikeRentalServiceDirectoryUrl\", null\n+        );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "124612b5544ece60fbdcad7d3e98f4fdc5f22441"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2NTQ0NQ==", "bodyText": "I added a config parameter for the TransmodelAPI today, this is how I did it:\nConfiguration.md:\n\ntransmodelApi | configure Entur Transmodel API (Sandbox) | object | null | See the code for parameters, no doc provided.\n\nThis allow us to add as many parametes as needed later, and the parameter is extracted in the RouterConfiglike this:\nthis.transmodelApiHideFeedId = adapter.path(\"transmodelApi\").asBoolean(\"hideFeedId\", false);\nI did not create a POJO for the one parameter - I will do that next time I add a new parameter, but the JSON structure account for such change.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r441665445", "createdAt": "2020-06-17T16:14:58Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -42,6 +44,9 @@ public RouterConfig(JsonNode node, String source, boolean logUnusedParams) {\n         this.streetRoutingTimeoutSeconds = adapter.asDouble(\n                 \"streetRoutingTimeout\", DEFAULT_STREET_ROUTING_TIMEOUT\n         );\n+        this.bikeRentalServiceDirectoryUrl = adapter.asUri(\n+            \"bikeRentalServiceDirectoryUrl\", null\n+        );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5Njk2OQ=="}, "originalCommit": {"oid": "124612b5544ece60fbdcad7d3e98f4fdc5f22441"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE0MzU0Nw==", "bodyText": "I have added documentation in Configuration.md for this now", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r442143547", "createdAt": "2020-06-18T10:59:44Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/standalone/config/RouterConfig.java", "diffHunk": "@@ -42,6 +44,9 @@ public RouterConfig(JsonNode node, String source, boolean logUnusedParams) {\n         this.streetRoutingTimeoutSeconds = adapter.asDouble(\n                 \"streetRoutingTimeout\", DEFAULT_STREET_ROUTING_TIMEOUT\n         );\n+        this.bikeRentalServiceDirectoryUrl = adapter.asUri(\n+            \"bikeRentalServiceDirectoryUrl\", null\n+        );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5Njk2OQ=="}, "originalCommit": {"oid": "124612b5544ece60fbdcad7d3e98f4fdc5f22441"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTU2ODkzOnYy", "diffSide": "RIGHT", "path": "src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/GbfsUpdaterSourceConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDoxNTowMFrOGpbkWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDoxNTowMFrOGpbkWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA5NjQ3NA==", "bodyText": "FYI: The UpdaterDataSourceConfig is still a bit \"stange\", but not part of this PR. I might look at it later.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r446096474", "createdAt": "2020-06-26T10:15:00Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/GbfsUpdaterSourceConfig.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.opentripplanner.ext.bikerentalservicedirectory;\n+\n+import org.opentripplanner.updater.UpdaterDataSourceConfig;\n+import org.opentripplanner.updater.UpdaterDataSourceParameters;\n+\n+public class GbfsUpdaterSourceConfig implements UpdaterDataSourceConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49ac74015e01bbfad12722f71a1c494a5d3f0ff6"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTYwODExOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/updater/GraphUpdaterConfigurator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDoyODoyNVrOGpb8Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDoyODoyNVrOGpb8Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEwMjU3OA==", "bodyText": "The boxing here is unnecessary - I will remove it.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r446102578", "createdAt": "2020-06-26T10:28:25Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/updater/GraphUpdaterConfigurator.java", "diffHunk": "@@ -41,11 +41,17 @@\n \n     private static Logger LOG = LoggerFactory.getLogger(GraphUpdaterConfigurator.class);\n \n-    public static void setupGraph(Graph graph, UpdaterConfig updaterConfig) {\n+    public static void setupGraph(\n+        Graph graph,\n+        UpdaterParameters updaterParameters\n+    ) {\n \n-        List<GraphUpdater> updaters = new ArrayList<>();\n+        List<GraphUpdater> updaters = new ArrayList<>(createUpdatersFromConfig(updaterParameters));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49ac74015e01bbfad12722f71a1c494a5d3f0ff6"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTYzNjIyOnYy", "diffSide": "RIGHT", "path": "src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/BikeRentalServiceDirectoryFetcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDozOToyNlrOGpcN-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDozOToyNlrOGpcN-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEwNzEyOQ==", "bodyText": "The getData method should be refactored to take in a type-safe argument when we have it. I will fix this.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3090#discussion_r446107129", "createdAt": "2020-06-26T10:39:26Z", "author": {"login": "t2gran"}, "path": "src/ext/java/org/opentripplanner/ext/bikerentalservicedirectory/BikeRentalServiceDirectoryFetcher.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package org.opentripplanner.ext.bikerentalservicedirectory;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.opentripplanner.updater.GraphUpdater;\n+import org.opentripplanner.updater.bike_rental.BikeRentalUpdater;\n+import org.opentripplanner.util.HttpUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.InputStream;\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Fetches GBFS endpoints from the Bikeservice component located at\n+ * https://github.com/entur/bikeservice, which is an API for aggregating GBFS endpoints.\n+ */\n+public class BikeRentalServiceDirectoryFetcher {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(BikeRentalServiceDirectoryFetcher.class);\n+\n+  private static final int DEFAULT_FREQUENCY_SEC = 15;\n+\n+  private static final String GBFS_JSON_FILENAME = \"gbfs.json\";\n+\n+  public static List<GraphUpdater> createUpdatersFromEndpoint(URI url) {\n+\n+    LOG.info(\"Fetching list of updaters from {}\", url);\n+\n+    List<GraphUpdater> updaters = new ArrayList<>();\n+\n+    try {\n+      InputStream is = HttpUtils.getData(url.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49ac74015e01bbfad12722f71a1c494a5d3f0ff6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1839, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}