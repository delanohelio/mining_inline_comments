{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDcxMTE0", "number": 3104, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTo0NDoyNFrOEGrbCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTo0NDoyNFrOEGrbCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDM4MzQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/model/plan/Leg.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTo0NDoyNFrOGln11g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTo0NDoyNFrOGln11g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEwMzI1NA==", "bodyText": "Use the to/from stopIndex, also fix the itinerary mapper.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3104#discussion_r442103254", "createdAt": "2020-06-18T09:44:24Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/model/plan/Leg.java", "diffHunk": "@@ -244,19 +244,22 @@ public void addAlertPatch(AlertPatch alertPatch) {\n     }\n \n     /**\n-     * Compare to legs to determine if they start and end at the same place and time.\n-     *\n-     * Note! Properties like mode and trip is NOT considered.\n+     * Return {@code true} if to legs ride the same trip(same tripId) and at least part of the\n+     * rides overlap in time.\n      */\n-    public boolean sameStartAndEnd(Leg other) {\n-        if (this == other) { return true; }\n-        return startTime.equals(other.startTime)\n-                && endTime.equals(other.endTime)\n-                && from.sameLocation(other.from)\n-                && to.sameLocation(other.to);\n+    public boolean isPartiallySameTransitLeg(Leg other) {\n+      // Assert both legs are transit legs\n+      if(!isTransitLeg() || !other.isTransitLeg()) { throw new IllegalStateException(); }\n+\n+      // If NOT the same trip, return false\n+      if(!tripId.equals(other.tripId)) { return false; }\n+\n+      // If not riding at least part of the same stretch of the trip.\n+      // If a pattern goes in a loop, this make sure two legs are riding the trip in the same loop.\n+      return startTime.before(other.endTime) && endTime.after(other.startTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "435ccc9ed0b9af4a5dc3474fb952091a8e1c7556"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1846, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}