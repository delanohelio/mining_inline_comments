{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Mjk1Mzg2", "number": 3133, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozMjowOFrOETriZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozOTowNlrOETrtuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDcxNzE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozMjowOFrOG5jKNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozMjowOFrOG5jKNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5ODA3MA==", "bodyText": "Use List.of(...) and not Collections.singletonList(...). I know you just copied the code, so maybe update the existing code as well. This is an old code smell, but to make OTP a better place we try to improve a little for every PR.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3133#discussion_r462998070", "createdAt": "2020-07-30T13:32:08Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -96,6 +96,12 @@ public RoutingResponse route(Router router) {\n         request.setRoutingContext(router.graph);\n         if (request.modes.transitModes.isEmpty()) { return Collections.emptyList(); }\n \n+        if (!router.graph.transitFeedCovers(request.dateTime)) {\n+            throw new RoutingValidationException(Collections.singletonList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24b6d16d16bbacbff56654ddcd2bdde9e4dc8926"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDc0NjE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozOTowNlrOG5jcMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozOTowNlrOG5jcMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwMjY3NA==", "bodyText": "This error is because the request.dateTime is outside the service period, so we should return a constant(enum) for that even if it is just one possibility. Add DATE_TIME to InputField and call the constructor of RoutingError with that.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3133#discussion_r463002674", "createdAt": "2020-07-30T13:39:06Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -96,6 +96,12 @@ public RoutingResponse route(Router router) {\n         request.setRoutingContext(router.graph);\n         if (request.modes.transitModes.isEmpty()) { return Collections.emptyList(); }\n \n+        if (!router.graph.transitFeedCovers(request.dateTime)) {\n+            throw new RoutingValidationException(Collections.singletonList(\n+                    new RoutingError(RoutingErrorCode.OUTSIDE_SERVICE_PERIOD, null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24b6d16d16bbacbff56654ddcd2bdde9e4dc8926"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1870, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}