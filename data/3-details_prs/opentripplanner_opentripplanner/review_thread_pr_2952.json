{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMTg0OTk2", "number": 2952, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTo1ODoxNFrODfHSrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTo1ODoxNFrODfHSrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTUxOTE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/opentripplanner/common/geometry/SphericalDistanceLibrary.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTo1ODoxNFrOFooO8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDo1MDo0N1rOFoxhkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE0NjU0NA==", "bodyText": "Rename to degreesLatitudeToMeters and add comment that this does not work for longitude (overestimates).", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/2952#discussion_r378146544", "createdAt": "2020-02-12T09:58:14Z", "author": {"login": "abyrd"}, "path": "src/main/java/org/opentripplanner/common/geometry/SphericalDistanceLibrary.java", "diffHunk": "@@ -156,6 +156,10 @@ public static double metersToDegrees(double distanceMeters) {\n         return 360 * distanceMeters / (2 * Math.PI * RADIUS_OF_EARTH_IN_M);\n     }\n \n+    public static double degreesToMeters(double distanceDegrees) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "646910b04b7e7c28ec23933e63318d7694887afb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5ODc3MQ==", "bodyText": "I ended up using the actual distance calculation that takes into account the curvature of the Earth, as I think we can afford the performance hit here.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/2952#discussion_r378298771", "createdAt": "2020-02-12T14:50:47Z", "author": {"login": "gmellemstrand"}, "path": "src/main/java/org/opentripplanner/common/geometry/SphericalDistanceLibrary.java", "diffHunk": "@@ -156,6 +156,10 @@ public static double metersToDegrees(double distanceMeters) {\n         return 360 * distanceMeters / (2 * Math.PI * RADIUS_OF_EARTH_IN_M);\n     }\n \n+    public static double degreesToMeters(double distanceDegrees) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE0NjU0NA=="}, "originalCommit": {"oid": "646910b04b7e7c28ec23933e63318d7694887afb"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1895, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}