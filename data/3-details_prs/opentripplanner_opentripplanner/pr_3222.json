{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NTc5MTYw", "number": 3222, "title": "Alternative implementation of multi day trips", "bodyText": "This is an alternative approach to implementing #3199. To be discussed in the next OTP developer meeting.\nWhat this PR does:\n\nCreate TripPatternForDate objects the same way as before. One object for each start date.\nThe TripPatternForDate object now contains a startOfRunningPeriod DateTime, as well as an endOfRunningPeriod DateTime.\nTripPatternForDate objects are now indexed by each date they are running through.\nThe filtering by date now filters out each TripPatternForDate that runs through each filter date. Default is today, tomorrow and the day after tomorrow. The exact filtering window can be changed later, or made dynamic.\nThe method that would merge together TripPatternForDates that refer to the same TripPattern but on different dates has been changed to accommodate the new structure.\n\nI have profiled these changes, and I see no difference in performance compared to before.", "createdAt": "2020-10-25T11:45:10Z", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222", "merged": true, "mergeCommit": {"oid": "2627cd47607eecdb04e6bc5996982bf87fcda551"}, "closed": true, "closedAt": "2020-11-04T09:18:48Z", "author": {"login": "gmellemstrand"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWVbiLgBqjM5MjEwODgzNDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZKM7lgFqTUyMzE3MTU1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8aba76e4cbd91abf85e458379fc7b491737cf97b", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/8aba76e4cbd91abf85e458379fc7b491737cf97b", "committedDate": "2020-10-25T11:42:45Z", "message": "Added support for multi day trips"}, "afterCommit": {"oid": "b7b3a2485915fcd7e71d874885aaa69817b7d2a9", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/b7b3a2485915fcd7e71d874885aaa69817b7d2a9", "committedDate": "2020-10-26T14:40:15Z", "message": "Added support for multi day trips"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa3d029f72bcc2c49f2e65b4745ff06a05f9306c", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/fa3d029f72bcc2c49f2e65b4745ff06a05f9306c", "committedDate": "2020-10-27T12:22:19Z", "message": "Added support for multi day trips"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ad73b716cca0d1799d60257b6d7652284bceeaf2", "committedDate": "2020-10-27T12:22:19Z", "message": "Fixed test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "385d0b75bbd052332a865592ae5df94b5aba0a6e", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/385d0b75bbd052332a865592ae5df94b5aba0a6e", "committedDate": "2020-10-27T10:46:10Z", "message": "Fixed test"}, "afterCommit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/ad73b716cca0d1799d60257b6d7652284bceeaf2", "committedDate": "2020-10-27T12:22:19Z", "message": "Fixed test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjYwMTEw", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#pullrequestreview-517660110", "createdAt": "2020-10-27T12:44:02Z", "commit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjo0NDowM1rOHo6TTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMTo0NDowOFrOHpmGRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2MDMwMQ==", "bodyText": "This allow us to find trips in remote areas with low frequency trips. Could you @gmellemstrand  provide us with som numbers on how this affect performance. The most important thing is that short trips in high frequency areas is affected.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#discussion_r512660301", "createdAt": "2020-10-27T12:44:03Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/RoutingWorker.java", "diffHunk": "@@ -63,7 +63,7 @@\n      * and would also need to board trips starting tomorrow. If a search window that lasts more than\n      * a day is used, this will need to be increased.\n      */\n-    private static final int ADDITIONAL_SEARCH_DAYS_AFTER_TODAY = 1;\n+    private static final int ADDITIONAL_SEARCH_DAYS_AFTER_TODAY = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcyOTAwNQ==", "bodyText": "We should not pollute the main code with test code if not absolutely necessary. So can this be made to the test that uses it, and then use the public constructor. Delete the private constructor.\nThis method should also be renamed, it does not get anything it create a ne instance.\nIt should also be moved after the constructors.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#discussion_r512729005", "createdAt": "2020-10-27T14:16:01Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TripPatternForDate.java", "diffHunk": "@@ -26,10 +29,56 @@\n     /** The date for which the filtering was performed. */\n     private final LocalDate localDate;\n \n-    public TripPatternForDate(TripPatternWithRaptorStopIndexes tripPattern, TripTimes[] tripTimes, LocalDate localDate) {\n+    /**\n+     * The first departure time of the first trip.\n+     */\n+    private final LocalDateTime startOfRunningPeriod;\n+\n+    /**\n+     * The last arrival time of the last trip.\n+     */\n+    private final LocalDateTime endOfRunningPeriod;\n+\n+    public static TripPatternForDate getTripPatternForDateForTest(\n+        TripPatternWithRaptorStopIndexes tripPattern,\n+        int startSecondsOfDay,\n+        int endSecondsOfDay,\n+        LocalDate localDate\n+    ) {\n+        return new TripPatternForDate(tripPattern, startSecondsOfDay, endSecondsOfDay, localDate);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjczMTY4MQ==", "bodyText": "Should be deleted.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#discussion_r512731681", "createdAt": "2020-10-27T14:19:13Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TripPatternForDate.java", "diffHunk": "@@ -26,10 +29,56 @@\n     /** The date for which the filtering was performed. */\n     private final LocalDate localDate;\n \n-    public TripPatternForDate(TripPatternWithRaptorStopIndexes tripPattern, TripTimes[] tripTimes, LocalDate localDate) {\n+    /**\n+     * The first departure time of the first trip.\n+     */\n+    private final LocalDateTime startOfRunningPeriod;\n+\n+    /**\n+     * The last arrival time of the last trip.\n+     */\n+    private final LocalDateTime endOfRunningPeriod;\n+\n+    public static TripPatternForDate getTripPatternForDateForTest(\n+        TripPatternWithRaptorStopIndexes tripPattern,\n+        int startSecondsOfDay,\n+        int endSecondsOfDay,\n+        LocalDate localDate\n+    ) {\n+        return new TripPatternForDate(tripPattern, startSecondsOfDay, endSecondsOfDay, localDate);\n+    }\n+\n+    public TripPatternForDate(\n+        TripPatternWithRaptorStopIndexes tripPattern,\n+        TripTimes[] tripTimes,\n+        LocalDate localDate\n+    ) {\n         this.tripPattern = tripPattern;\n         this.tripTimes = tripTimes;\n         this.localDate = localDate;\n+\n+        // These depend on the tripTimes array being sorted\n+        this.startOfRunningPeriod = localDate\n+            .atStartOfDay()\n+            .plusSeconds(tripTimes[0].getDepartureTime(0));\n+        this.endOfRunningPeriod = localDate\n+            .atStartOfDay()\n+            .plusSeconds(tripTimes[tripTimes.length - 1].getArrivalTime(\n+                tripTimes[tripTimes.length - 1].getNumStops() - 1));\n+    }\n+\n+    // For testing\n+    private TripPatternForDate(\n+        TripPatternWithRaptorStopIndexes tripPattern,\n+        int startSecondsOfDay,\n+        int endSecondsOfDay,\n+        LocalDate localDate\n+    ) {\n+        this.tripPattern = tripPattern;\n+        this.tripTimes = new TripTimes[] {null};\n+        this.localDate = localDate;\n+        this.startOfRunningPeriod = localDate.atStartOfDay().plusSeconds(startSecondsOfDay);\n+        this.endOfRunningPeriod = localDate.atStartOfDay().plusSeconds(endSecondsOfDay);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc2NDk2Nw==", "bodyText": "/** The date for which the filtering was performed. */\n    private final LocalDate localDate;\n\nThe code below made me look the above field and JavaDoc. From the name and JavaDoc I can not understand what this is. The name is just the name of the type. Is this the time used to calculate all the board/alight times? In that case this is the serviceDate.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#discussion_r512764967", "createdAt": "2020-10-27T14:57:40Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TripPatternForDate.java", "diffHunk": "@@ -26,10 +29,56 @@\n     /** The date for which the filtering was performed. */\n     private final LocalDate localDate;\n \n-    public TripPatternForDate(TripPatternWithRaptorStopIndexes tripPattern, TripTimes[] tripTimes, LocalDate localDate) {\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc3MjEwMA==", "bodyText": "If the localDate is the serviceDate then this calculation is should using the DateMapper. The DateMapper take a ZonedDateTime so I am not sure how to fix it. This calculation is not accounting for the DST, and possible have some zone issues.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#discussion_r512772100", "createdAt": "2020-10-27T15:06:01Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TripPatternForDate.java", "diffHunk": "@@ -26,10 +29,56 @@\n     /** The date for which the filtering was performed. */\n     private final LocalDate localDate;\n \n-    public TripPatternForDate(TripPatternWithRaptorStopIndexes tripPattern, TripTimes[] tripTimes, LocalDate localDate) {\n+    /**\n+     * The first departure time of the first trip.\n+     */\n+    private final LocalDateTime startOfRunningPeriod;\n+\n+    /**\n+     * The last arrival time of the last trip.\n+     */\n+    private final LocalDateTime endOfRunningPeriod;\n+\n+    public static TripPatternForDate getTripPatternForDateForTest(\n+        TripPatternWithRaptorStopIndexes tripPattern,\n+        int startSecondsOfDay,\n+        int endSecondsOfDay,\n+        LocalDate localDate\n+    ) {\n+        return new TripPatternForDate(tripPattern, startSecondsOfDay, endSecondsOfDay, localDate);\n+    }\n+\n+    public TripPatternForDate(\n+        TripPatternWithRaptorStopIndexes tripPattern,\n+        TripTimes[] tripTimes,\n+        LocalDate localDate\n+    ) {\n         this.tripPattern = tripPattern;\n         this.tripTimes = tripTimes;\n         this.localDate = localDate;\n+\n+        // These depend on the tripTimes array being sorted\n+        this.startOfRunningPeriod = localDate\n+            .atStartOfDay()\n+            .plusSeconds(tripTimes[0].getDepartureTime(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM3MTUzNA==", "bodyText": "Later in this PR, you are taking about \"active date\", I suggest we uses \"serviceDate\" everywhere. And define what that means in the JavaDoc on the \"localDate -> serviceDate\" above.", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#discussion_r513371534", "createdAt": "2020-10-28T11:32:41Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TripPatternForDate.java", "diffHunk": "@@ -26,10 +29,56 @@\n     /** The date for which the filtering was performed. */\n     private final LocalDate localDate;\n \n-    public TripPatternForDate(TripPatternWithRaptorStopIndexes tripPattern, TripTimes[] tripTimes, LocalDate localDate) {\n+    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc2NDk2Nw=="}, "originalCommit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM3Nzg2MA==", "bodyText": "I think this is OK when comes to TimeZone, I looked into this, and even if I diden\u00b4t find a clear statment both the doc and a small test, show that the above calculation do NOT adjust for DST at all, which is the desired logic. But we should use the DateMapper in all paces we do this kind of logic until we can refactor this and make the internal model of OTP use only one time representation (some kind of epoc  time).", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#discussion_r513377860", "createdAt": "2020-10-28T11:44:08Z", "author": {"login": "t2gran"}, "path": "src/main/java/org/opentripplanner/routing/algorithm/raptor/transit/TripPatternForDate.java", "diffHunk": "@@ -26,10 +29,56 @@\n     /** The date for which the filtering was performed. */\n     private final LocalDate localDate;\n \n-    public TripPatternForDate(TripPatternWithRaptorStopIndexes tripPattern, TripTimes[] tripTimes, LocalDate localDate) {\n+    /**\n+     * The first departure time of the first trip.\n+     */\n+    private final LocalDateTime startOfRunningPeriod;\n+\n+    /**\n+     * The last arrival time of the last trip.\n+     */\n+    private final LocalDateTime endOfRunningPeriod;\n+\n+    public static TripPatternForDate getTripPatternForDateForTest(\n+        TripPatternWithRaptorStopIndexes tripPattern,\n+        int startSecondsOfDay,\n+        int endSecondsOfDay,\n+        LocalDate localDate\n+    ) {\n+        return new TripPatternForDate(tripPattern, startSecondsOfDay, endSecondsOfDay, localDate);\n+    }\n+\n+    public TripPatternForDate(\n+        TripPatternWithRaptorStopIndexes tripPattern,\n+        TripTimes[] tripTimes,\n+        LocalDate localDate\n+    ) {\n         this.tripPattern = tripPattern;\n         this.tripTimes = tripTimes;\n         this.localDate = localDate;\n+\n+        // These depend on the tripTimes array being sorted\n+        this.startOfRunningPeriod = localDate\n+            .atStartOfDay()\n+            .plusSeconds(tripTimes[0].getDepartureTime(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc3MjEwMA=="}, "originalCommit": {"oid": "ad73b716cca0d1799d60257b6d7652284bceeaf2"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f1a4fb8bfe7eeb9a1d24b7543b6739d6a1ef0d4", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/4f1a4fb8bfe7eeb9a1d24b7543b6739d6a1ef0d4", "committedDate": "2020-10-29T16:42:57Z", "message": "Move DateTime logic to DateMapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d3a64ab3696c38c6ce307033eb04abfed87d5ed", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/4d3a64ab3696c38c6ce307033eb04abfed87d5ed", "committedDate": "2020-10-29T17:01:31Z", "message": "Remove extra constructor on TripPatternForDate and fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e6a081adbac4c6389f5b0bade7882e2a97c739c", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/9e6a081adbac4c6389f5b0bade7882e2a97c739c", "committedDate": "2020-10-29T17:01:54Z", "message": "Merge branch 'dev-2.x' into otp2_support_for_multi_day_trips_alternative_implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f761f86f63d7cb360af5c5b214b7e1026500479", "author": {"user": {"login": "gmellemstrand", "name": null}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/3f761f86f63d7cb360af5c5b214b7e1026500479", "committedDate": "2020-11-03T09:44:22Z", "message": "Merge branch 'dev-2.x' into otp2_support_for_multi_day_trips_alternative_implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDczODAx", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#pullrequestreview-523073801", "createdAt": "2020-11-04T06:33:54Z", "commit": {"oid": "3f761f86f63d7cb360af5c5b214b7e1026500479"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2269d6832a3c0316d7cf396fbe7ffcfda32b87f0", "author": {"user": {"login": "abyrd", "name": "Andrew Byrd"}}, "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/2269d6832a3c0316d7cf396fbe7ffcfda32b87f0", "committedDate": "2020-11-04T06:34:03Z", "message": "Merge branch 'dev-2.x' into otp2_support_for_multi_day_trips_alternative_implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMTcxNTU2", "url": "https://github.com/opentripplanner/OpenTripPlanner/pull/3222#pullrequestreview-523171556", "createdAt": "2020-11-04T09:18:30Z", "commit": {"oid": "2269d6832a3c0316d7cf396fbe7ffcfda32b87f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2001, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}