{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNTY0ODU1", "number": 2773, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwODowMjo0N1rOEKyhVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwODowMjo0N1rOEKyhVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzQ4OTQ5OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/UsersManagerBlImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwODowMjo0N1rOGsB2FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo0ODoyM1rOGsFruQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgyMDc1Nw==", "bodyText": "I can't see the changePassword method call.", "url": "https://github.com/CESNET/perun/pull/2773#discussion_r448820757", "createdAt": "2020-07-02T08:02:47Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/UsersManagerBlImpl.java", "diffHunk": "@@ -2064,43 +2061,38 @@ public void removeAllUserExtSources(PerunSession sess, User user) {\n \t}\n \n \t@Override\n-\tpublic String changePasswordRandom(PerunSession session, User user, String loginNamespace) throws PasswordOperationTimeoutException, LoginNotExistsException, PasswordChangeFailedException, InvalidLoginException, PasswordStrengthException {\n-\n-\t\tchar[] possibleCharacters =\n-\t\t\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%&*()-_=+;:,<.>/?\"\n-\t\t\t\t\t\t.toCharArray();\n-\t\tint count = 12;\n-\n-\t\t// FIXME - We will replace following logic once each login-namespace will implement\n-\t\t// FIXME   pwd-manager module and have server side checks\n-\t\tif (Objects.equals(loginNamespace, \"vsup\")) {\n-\t\t\tcount = 14;\n-\t\t\t// removed O, l, specific only: +, -, *, /, .\n-\t\t\tpossibleCharacters = \"ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz0123456789+-*/.\".toCharArray();\n-\t\t}\n-\n-\t\tString newRandomPassword = RandomStringUtils.random(count, 0, possibleCharacters.length - 1, false,\n-\t\t\t\tfalse, possibleCharacters, new SecureRandom());\n+\tpublic String changePasswordRandom(PerunSession session, User user, String namespace) throws PasswordOperationTimeoutException, LoginNotExistsException, PasswordChangeFailedException, InvalidLoginException, PasswordStrengthException {\n \n+\t\t// first check if user has login in specified namespace!\n+\t\tString userLogin;\n \t\ttry {\n-\t\t\t// FIXME - we want to re-generate password if it was considered weak\n-\t\t\tchangePassword(session, user, loginNamespace, null, newRandomPassword, false);\n-\t\t} catch (PasswordDoesntMatchException | PasswordStrengthFailedException e) {\n-\t\t\t// should not happen when we are not using the old password\n+\t\t\tAttribute userLoginAttribute = getPerunBl().getAttributesManagerBl().getAttribute(session, user, AttributesManager.NS_USER_ATTR_DEF + \":login-namespace:\" + namespace);\n+\t\t\tuserLogin = (String) userLoginAttribute.getValue();\n+\t\t} catch (WrongAttributeAssignmentException | AttributeNotExistsException e) {\n+\t\t\t// should not happen since the changePassword method passed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aa3a79320aeae959b09180a0201545594eb4cd"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4MzY0MQ==", "bodyText": "It was moved to the line 2087, since we now first check if user has login and then perform other logic.", "url": "https://github.com/CESNET/perun/pull/2773#discussion_r448883641", "createdAt": "2020-07-02T09:48:23Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/UsersManagerBlImpl.java", "diffHunk": "@@ -2064,43 +2061,38 @@ public void removeAllUserExtSources(PerunSession sess, User user) {\n \t}\n \n \t@Override\n-\tpublic String changePasswordRandom(PerunSession session, User user, String loginNamespace) throws PasswordOperationTimeoutException, LoginNotExistsException, PasswordChangeFailedException, InvalidLoginException, PasswordStrengthException {\n-\n-\t\tchar[] possibleCharacters =\n-\t\t\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%&*()-_=+;:,<.>/?\"\n-\t\t\t\t\t\t.toCharArray();\n-\t\tint count = 12;\n-\n-\t\t// FIXME - We will replace following logic once each login-namespace will implement\n-\t\t// FIXME   pwd-manager module and have server side checks\n-\t\tif (Objects.equals(loginNamespace, \"vsup\")) {\n-\t\t\tcount = 14;\n-\t\t\t// removed O, l, specific only: +, -, *, /, .\n-\t\t\tpossibleCharacters = \"ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz0123456789+-*/.\".toCharArray();\n-\t\t}\n-\n-\t\tString newRandomPassword = RandomStringUtils.random(count, 0, possibleCharacters.length - 1, false,\n-\t\t\t\tfalse, possibleCharacters, new SecureRandom());\n+\tpublic String changePasswordRandom(PerunSession session, User user, String namespace) throws PasswordOperationTimeoutException, LoginNotExistsException, PasswordChangeFailedException, InvalidLoginException, PasswordStrengthException {\n \n+\t\t// first check if user has login in specified namespace!\n+\t\tString userLogin;\n \t\ttry {\n-\t\t\t// FIXME - we want to re-generate password if it was considered weak\n-\t\t\tchangePassword(session, user, loginNamespace, null, newRandomPassword, false);\n-\t\t} catch (PasswordDoesntMatchException | PasswordStrengthFailedException e) {\n-\t\t\t// should not happen when we are not using the old password\n+\t\t\tAttribute userLoginAttribute = getPerunBl().getAttributesManagerBl().getAttribute(session, user, AttributesManager.NS_USER_ATTR_DEF + \":login-namespace:\" + namespace);\n+\t\t\tuserLogin = (String) userLoginAttribute.getValue();\n+\t\t} catch (WrongAttributeAssignmentException | AttributeNotExistsException e) {\n+\t\t\t// should not happen since the changePassword method passed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgyMDc1Nw=="}, "originalCommit": {"oid": "58aa3a79320aeae959b09180a0201545594eb4cd"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1920, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}