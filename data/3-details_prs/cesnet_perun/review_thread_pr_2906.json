{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNDExODIw", "number": 2906, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo0OToyOVrOEmajmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTozMTo0M1rOEmiPBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzE2NDQyOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo0OToyOVrOHWa09g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODo0MjoxOFrOHWd6UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3MDI2Mg==", "bodyText": "I am afraid string like ',1234' will pass through this regular expression.", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493270262", "createdAt": "2020-09-23T07:49:29Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java", "diffHunk": "@@ -23,12 +26,15 @@\n \tprivate static final Pattern datePattern = Pattern.compile(\"^[0-9]+([dmy])$\");\n \tprivate static final Pattern loaPattern = Pattern.compile(\"^(([0-9]+,)|([0-9]+,[ ]))*[0-9]+$\");\n \tprivate static final Pattern periodLoaPattern = Pattern.compile(\"^[0-9]+[|](([0-9]+[.][0-9]+[.])|([+][0-9]+([dmy])))[.]?$\");\n+\tprivate static final Pattern extSourcesPatter = Pattern.compile(\"^(\\\\d+)?(,\\\\d+)*$\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca3a9e664006d1d918efa9dc9de2ad07141061a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMyMDc4NA==", "bodyText": "You are right. I have added a test use case and fixed the problem.", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493320784", "createdAt": "2020-09-23T08:42:18Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java", "diffHunk": "@@ -23,12 +26,15 @@\n \tprivate static final Pattern datePattern = Pattern.compile(\"^[0-9]+([dmy])$\");\n \tprivate static final Pattern loaPattern = Pattern.compile(\"^(([0-9]+,)|([0-9]+,[ ]))*[0-9]+$\");\n \tprivate static final Pattern periodLoaPattern = Pattern.compile(\"^[0-9]+[|](([0-9]+[.][0-9]+[.])|([+][0-9]+([dmy])))[.]?$\");\n+\tprivate static final Pattern extSourcesPatter = Pattern.compile(\"^(\\\\d+)?(,\\\\d+)*$\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3MDI2Mg=="}, "originalCommit": {"oid": "1ca3a9e664006d1d918efa9dc9de2ad07141061a"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzE4OTA1OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo1NDozOVrOHWbEZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODo0MjoyNlrOHWd6xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NDIxMg==", "bodyText": "Wrong character for splitting. Tests should found it.", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493274212", "createdAt": "2020-09-23T07:54:39Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java", "diffHunk": "@@ -109,10 +115,48 @@ public void checkAttributeSyntax(PerunSessionImpl sess, T entity, Attribute attr\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\n+\t\tparameter = autoExtensionLastLoginPeriod;\n+\t\tif (keys.contains(parameter)) {\n+\t\t\tMatcher dateMatcher = datePattern.matcher(attrValue.get(autoExtensionLastLoginPeriod));\n+\t\t\tif (!dateMatcher.find()) {\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, \"There is not allowed value for parameter '\" +\n+\t\t\t\t\t\tparameter + \"': \" + attrValue.get(parameter));\n+\t\t\t}\n+\t\t}\n+\n+\t\tparameter = autoExtensionExtSources;\n+\t\tif (keys.contains(parameter)) {\n+\t\t\tMatcher extSourcesMatcher = extSourcesPatter.matcher(attrValue.get(autoExtensionExtSources));\n+\t\t\tif (!extSourcesMatcher.find()) {\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, \"There is not allowed value for parameter '\" +\n+\t\t\t\t\t\tparameter + \"': \" + attrValue.get(parameter));\n+\t\t\t}\n+\t\t}\n \t}\n \n-\tpublic void checkAttributeSemantics(PerunSessionImpl perunSession, T entity, Attribute attribute) {\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, T entity, Attribute attribute) throws WrongReferenceAttributeValueException {\n+\t\tMap<String, String> attrValue;\n+\n+\t\t//For no value is correct (it means no rules)\n+\t\tif(attribute.getValue() == null) return;\n+\n+\t\t//save value to map attrValue\n+\t\tattrValue = attribute.valueAsMap();\n+\n+\t\t//Same for empty HashList\n+\t\tif(attrValue.isEmpty()) return;\n \n+\t\tif (attrValue.containsKey(autoExtensionExtSources)) {\n+\t\t\tString[] extSourceIds = attrValue.get(autoExtensionExtSources).split(\"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca3a9e664006d1d918efa9dc9de2ad07141061a"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMyMDkwMw==", "bodyText": "You are right. I have added a test use case and fixed the problem.", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493320903", "createdAt": "2020-09-23T08:42:26Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/implApi/modules/attributes/AbstractMembershipExpirationRulesModule.java", "diffHunk": "@@ -109,10 +115,48 @@ public void checkAttributeSyntax(PerunSessionImpl sess, T entity, Attribute attr\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\n+\t\tparameter = autoExtensionLastLoginPeriod;\n+\t\tif (keys.contains(parameter)) {\n+\t\t\tMatcher dateMatcher = datePattern.matcher(attrValue.get(autoExtensionLastLoginPeriod));\n+\t\t\tif (!dateMatcher.find()) {\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, \"There is not allowed value for parameter '\" +\n+\t\t\t\t\t\tparameter + \"': \" + attrValue.get(parameter));\n+\t\t\t}\n+\t\t}\n+\n+\t\tparameter = autoExtensionExtSources;\n+\t\tif (keys.contains(parameter)) {\n+\t\t\tMatcher extSourcesMatcher = extSourcesPatter.matcher(attrValue.get(autoExtensionExtSources));\n+\t\t\tif (!extSourcesMatcher.find()) {\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, \"There is not allowed value for parameter '\" +\n+\t\t\t\t\t\tparameter + \"': \" + attrValue.get(parameter));\n+\t\t\t}\n+\t\t}\n \t}\n \n-\tpublic void checkAttributeSemantics(PerunSessionImpl perunSession, T entity, Attribute attribute) {\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, T entity, Attribute attribute) throws WrongReferenceAttributeValueException {\n+\t\tMap<String, String> attrValue;\n+\n+\t\t//For no value is correct (it means no rules)\n+\t\tif(attribute.getValue() == null) return;\n+\n+\t\t//save value to map attrValue\n+\t\tattrValue = attribute.valueAsMap();\n+\n+\t\t//Same for empty HashList\n+\t\tif(attrValue.isEmpty()) return;\n \n+\t\tif (attrValue.containsKey(autoExtensionExtSources)) {\n+\t\t\tString[] extSourceIds = attrValue.get(autoExtensionExtSources).split(\"'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NDIxMg=="}, "originalCommit": {"oid": "1ca3a9e664006d1d918efa9dc9de2ad07141061a"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODQyMjQ1OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTozMTo0M1rOHWnkWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTozMTo0M1rOHWnkWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ3OTAwMQ==", "bodyText": "\"?\" quantifier seems to be unnecessary.", "url": "https://github.com/CESNET/perun/pull/2906#discussion_r493479001", "createdAt": "2020-09-23T11:31:43Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java", "diffHunk": "@@ -1514,6 +1514,36 @@ public static LocalDate extendDateByPeriod(LocalDate localDate, String period) {\n \t\t}\n \t}\n \n+\t/**\n+\t * Shortens the given date by the given period.\n+\t *\n+\t * @param localDate date to be shortened\n+\t * @param period string of format ([0-9]+)([dmy]?)\n+\t * @return shortened date\n+\t */\n+\tpublic static LocalDate shortenDateByPeriod(LocalDate localDate, String period) {\n+\t\tPattern p = Pattern.compile(\"([0-9]+)([dmy]?)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4a721c3370cadc5e4a30408c5d3df3f6aa2109c"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2292, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}