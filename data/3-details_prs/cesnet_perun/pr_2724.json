{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MDA0NDA2", "number": 2724, "title": "New assignServices method", "bodyText": "Created new method that can assign multiple services to given\nresource.\nI have created new methods on all layers.\nThe old method assignService now uses the implementation of this new\nmethod to reuse code.\nI have created unit tests to test all new methods.\nI have added the new method to the openAPI specification.", "createdAt": "2020-06-01T14:09:10Z", "url": "https://github.com/CESNET/perun/pull/2724", "merged": true, "mergeCommit": {"oid": "ceaca6e67f2b920aaa22b106927e46d6a3eb9b24"}, "closed": true, "closedAt": "2020-06-15T09:39:36Z", "author": {"login": "Vojtech-Sassmann"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnBFmYgBqjMzOTMzNjU1NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrcmXCAFqTQzMDQzODQzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2e7700816d08ce784d4416c1161361f4c05f175", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/b2e7700816d08ce784d4416c1161361f4c05f175", "committedDate": "2020-06-01T14:06:55Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}, "afterCommit": {"oid": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/f79c1a376bef678940c67aa3a35fdcc17c98fdc8", "committedDate": "2020-06-01T14:24:56Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyOTg0NDI5", "url": "https://github.com/CESNET/perun/pull/2724#pullrequestreview-422984429", "createdAt": "2020-06-02T19:15:58Z", "commit": {"oid": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOToxNTo1OFrOGeAhlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOToyNjowMVrOGeA3cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExOTA2Mg==", "bodyText": "I believe you want to add result into the attributes list. Also, what if required attributes of passed services overlap? We probably should gather them into the set before returning as list.", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434119062", "createdAt": "2020-06-02T19:15:58Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -3029,6 +3037,15 @@ public void deleteAttribute(PerunSession sess, AttributeDefinition attributeDefi\n \t\treturn attributes;\n \t}\n \n+\t@Override\n+\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Facility facility, Resource resource, User user, Member member) throws InternalErrorException, MemberResourceMismatchException {\n+\t\tList<Attribute> attributes = new ArrayList<>();\n+\t\tfor (Service service : services) {\n+\t\t\tgetRequiredAttributes(sess, service, facility, resource, user, member);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyMzQ1Nw==", "bodyText": "We should make sure, that attribute IDs are unique, since they may overlap for multiple services.", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434123457", "createdAt": "2020-06-02T19:23:52Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java", "diffHunk": "@@ -3239,18 +3240,33 @@ public void deleteAllAttributeAuthz(PerunSession sess, AttributeDefinition attri\n \n \t@Override\n \tpublic List<Attribute> getRequiredAttributes(PerunSession sess, Service service, Resource resource, Group group) throws InternalErrorException {\n+\t\treturn getRequiredAttributes(sess, Collections.singletonList(service), resource, group);\n+\t}\n+\n+\t@Override\n+\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Resource resource, Group group) throws InternalErrorException {\n \t\tif(!CacheManager.isCacheDisabled() && !perun.getCacheManager().wasCacheUpdatedInTransaction()) {\n-\t\t\tList<Integer> attrIds = getRequiredAttributeIds(service);\n-\t\t\tList<Attribute> attrs = perun.getCacheManager().getAttributesByIds(attrIds, new Holder(group.getId(), Holder.HolderType.GROUP), new Holder(resource.getId(), Holder.HolderType.RESOURCE));\n+\t\t\tList<Integer> attrIds = new ArrayList<>();\n+\t\t\tfor (Service service : services) {\n+\t\t\t\tattrIds.addAll(getRequiredAttributeIds(service));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNDY1OA==", "bodyText": "Again we should have unique set of attribute ids.", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r434124658", "createdAt": "2020-06-02T19:26:01Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/AttributesManagerImpl.java", "diffHunk": "@@ -3565,18 +3581,32 @@ public void deleteAllAttributeAuthz(PerunSession sess, AttributeDefinition attri\n \n \t@Override\n \tpublic List<Attribute> getRequiredAttributes(PerunSession sess, Service service, Group group) throws InternalErrorException {\n+\t\treturn getRequiredAttributes(sess, Collections.singletonList(service), group);\n+\t}\n+\n+\t@Override\n+\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Group group) throws InternalErrorException {\n \t\tif(!CacheManager.isCacheDisabled() && !perun.getCacheManager().wasCacheUpdatedInTransaction()) {\n-\t\t\tList<Integer> attrIds = getRequiredAttributeIds(service);\n+\t\t\tList<Integer> attrIds = new ArrayList<>();\n+\t\t\tfor (Service service : services) {\n+\t\t\t\tattrIds.addAll(getRequiredAttributeIds(service));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f79c1a376bef678940c67aa3a35fdcc17c98fdc8", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/f79c1a376bef678940c67aa3a35fdcc17c98fdc8", "committedDate": "2020-06-01T14:24:56Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}, "afterCommit": {"oid": "72af2b8a6d234e24550a91c5ec33bde65b9ff0a1", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/72af2b8a6d234e24550a91c5ec33bde65b9ff0a1", "committedDate": "2020-06-03T09:22:02Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72af2b8a6d234e24550a91c5ec33bde65b9ff0a1", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/72af2b8a6d234e24550a91c5ec33bde65b9ff0a1", "committedDate": "2020-06-03T09:22:02Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}, "afterCommit": {"oid": "10df17bd114821c682be8ce1daaee60a554aa6ec", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/10df17bd114821c682be8ce1daaee60a554aa6ec", "committedDate": "2020-06-03T09:25:00Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10df17bd114821c682be8ce1daaee60a554aa6ec", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/10df17bd114821c682be8ce1daaee60a554aa6ec", "committedDate": "2020-06-03T09:25:00Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}, "afterCommit": {"oid": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/21d5ac8fc025ee141d21b2833ec89f06aa6c3810", "committedDate": "2020-06-03T09:26:38Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzOTE1MDIw", "url": "https://github.com/CESNET/perun/pull/2724#pullrequestreview-423915020", "createdAt": "2020-06-03T20:44:07Z", "commit": {"oid": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MDQ3Mzcw", "url": "https://github.com/CESNET/perun/pull/2724#pullrequestreview-427047370", "createdAt": "2020-06-09T11:32:51Z", "commit": {"oid": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTozMjo1MVrOGhFCaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NTozMlrOGhFwBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzODcyOQ==", "bodyText": "It would be nice to have these checks before the authorization check. The new authorization model needs to be sure that all objects exist when the authorization checks are performed.", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r437338729", "createdAt": "2020-06-09T11:32:51Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/ResourcesManagerEntry.java", "diffHunk": "@@ -542,6 +542,23 @@ public void assignService(PerunSession sess, Resource resource, Service service)\n \t\tgetResourcesManagerBl().assignService(sess, resource, service);\n \t}\n \n+\t@Override\n+\tpublic void assignServices(PerunSession sess, Resource resource, List<Service> services) throws PrivilegeException, ResourceNotExistsException, ServiceNotExistsException, ServiceAlreadyAssignedException, WrongAttributeValueException, WrongReferenceAttributeValueException {\n+\t\tUtils.checkPerunSession(sess);\n+\t\tgetResourcesManagerBl().checkResourceExists(sess, resource);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.isAuthorized(sess, Role.FACILITYADMIN, resource)) {\n+\t\t\tthrow new PrivilegeException(sess, \"assignServices\");\n+\t\t}\n+\n+\t\tfor (Service service : services) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0ODU5OQ==", "bodyText": "Typo", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r437348599", "createdAt": "2020-06-09T11:52:13Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/AttributesManagerBl.java", "diffHunk": "@@ -2364,6 +2391,27 @@\n \t */\n \tList<Attribute> getRequiredAttributes(PerunSession sess, Service service, Facility facility, Resource resource, User user, Member member) throws InternalErrorException, MemberResourceMismatchException;\n \n+\t/**\n+\t * Get memner, user, member-resource, user-facility attributes which are required by the services.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1MDQwNA==", "bodyText": "You can use parameterized constructor call instead of addAll()", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r437350404", "createdAt": "2020-06-09T11:55:32Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -3042,6 +3059,18 @@ public void deleteAttribute(PerunSession sess, AttributeDefinition attributeDefi\n \n \t}\n \n+\t@Override\n+\tpublic List<Attribute> getRequiredAttributes(PerunSession sess, List<Service> services, Resource resource, Group group, boolean withGroupAttributes) throws GroupResourceMismatchException {\n+\t\tthis.checkGroupIsFromTheSameVoLikeResource(sess, group, resource);\n+\n+\t\tList<Attribute> attributes = new ArrayList<>();\n+\t\tattributes.addAll(getAttributesManagerImpl().getRequiredAttributes(sess, services, resource, group));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21d5ac8fc025ee141d21b2833ec89f06aa6c3810", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/21d5ac8fc025ee141d21b2833ec89f06aa6c3810", "committedDate": "2020-06-03T09:26:38Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}, "afterCommit": {"oid": "dc39022b12438a2fd103cd1df6118c737c9c4c30", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/dc39022b12438a2fd103cd1df6118c737c9c4c30", "committedDate": "2020-06-09T13:25:16Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTg5OTc4", "url": "https://github.com/CESNET/perun/pull/2724#pullrequestreview-427189978", "createdAt": "2020-06-09T14:09:05Z", "commit": {"oid": "dc39022b12438a2fd103cd1df6118c737c9c4c30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc39022b12438a2fd103cd1df6118c737c9c4c30", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/dc39022b12438a2fd103cd1df6118c737c9c4c30", "committedDate": "2020-06-09T13:25:16Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}, "afterCommit": {"oid": "01b824bc02bedb3118f122e63579448d055ca50f", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/01b824bc02bedb3118f122e63579448d055ca50f", "committedDate": "2020-06-10T14:47:25Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjU4MTUy", "url": "https://github.com/CESNET/perun/pull/2724#pullrequestreview-429658152", "createdAt": "2020-06-12T11:11:32Z", "commit": {"oid": "01b824bc02bedb3118f122e63579448d055ca50f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjYwMjU4", "url": "https://github.com/CESNET/perun/pull/2724#pullrequestreview-429660258", "createdAt": "2020-06-12T11:15:03Z", "commit": {"oid": "01b824bc02bedb3118f122e63579448d055ca50f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMToxNTowNFrOGjAV6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMToxNTowNFrOGjAV6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1ODk1Mw==", "bodyText": "This was changed on the master branch to parms.stateChangingCheck().", "url": "https://github.com/CESNET/perun/pull/2724#discussion_r439358953", "createdAt": "2020-06-12T11:15:04Z", "author": {"login": "zlamalp"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/ResourcesManagerMethod.java", "diffHunk": "@@ -687,6 +688,32 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t\t}\n \t},\n \n+\t/*#\n+\t * Assign services to resource.\n+\t *\n+\t * @param resource int Resource <code>id</code>\n+\t * @param services List<Integer> list of services IDs\n+\t */\n+\tassignServices {\n+\n+\t\t@Override\n+\t\tpublic Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n+\t\t\tac.stateChangingCheck();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b824bc02bedb3118f122e63579448d055ca50f"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "808d19eb0aa9ba0d5b58c334003d3612264e0b0c", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/808d19eb0aa9ba0d5b58c334003d3612264e0b0c", "committedDate": "2020-06-15T08:14:58Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01b824bc02bedb3118f122e63579448d055ca50f", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/01b824bc02bedb3118f122e63579448d055ca50f", "committedDate": "2020-06-10T14:47:25Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}, "afterCommit": {"oid": "808d19eb0aa9ba0d5b58c334003d3612264e0b0c", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/808d19eb0aa9ba0d5b58c334003d3612264e0b0c", "committedDate": "2020-06-15T08:14:58Z", "message": "New assignServices method\n\n* Created new method that can assign multiple services to given\nresource.\n* I have created new methods on all layers.\n* The old method assignService now uses the implementation of this new\nmethod to reuse code.\n* I have created unit tests to test all new methods.\n* I have added the new method to the openAPI specification."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDM4NDMw", "url": "https://github.com/CESNET/perun/pull/2724#pullrequestreview-430438430", "createdAt": "2020-06-15T08:44:04Z", "commit": {"oid": "808d19eb0aa9ba0d5b58c334003d3612264e0b0c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1179, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}