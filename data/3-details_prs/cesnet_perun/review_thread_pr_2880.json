{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3Njg3MTQ3", "number": 2880, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjozNTo0OFrOEfbtzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjo1NjoxNlrOEgQ8HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzk1NDA0OnYy", "diffSide": "RIGHT", "path": "perun-base/src/main/resources/perun-roles.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjozNTo0OFrOHLs9yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjo1OToxNVrOHLt5yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAzMzA5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                policy_roles:\n          \n          \n            \n                policy_roles: []", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r482033099", "createdAt": "2020-09-02T12:35:48Z", "author": {"login": "balcirakpeter"}, "path": "perun-base/src/main/resources/perun-roles.yml", "diffHunk": "@@ -4306,6 +4306,11 @@ perun_policies:\n     include_policies:\n       - default_policy\n \n+  createServiceUser_policy:\n+    policy_roles:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9a01b1bdc41fb824b27d78fe9354fc036bcdc2a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0ODQ1OQ==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r482048459", "createdAt": "2020-09-02T12:59:15Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-base/src/main/resources/perun-roles.yml", "diffHunk": "@@ -4306,6 +4306,11 @@ perun_policies:\n     include_policies:\n       - default_policy\n \n+  createServiceUser_policy:\n+    policy_roles:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAzMzA5OQ=="}, "originalCommit": {"oid": "d9a01b1bdc41fb824b27d78fe9354fc036bcdc2a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjY3MzU3OnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjo1NjowM1rOHNB4gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0NzoyN1rOHN6kUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQyNDM4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n          \n          \n            \n            \t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsUes\");", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r483424387", "createdAt": "2020-09-04T06:56:03Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "diffHunk": "@@ -1422,6 +1424,64 @@ public void findUserByUserExtSourceLogin() {\n \t\tassertEquals(user, users.get(0));\n \t}\n \n+\t@Test\n+\tpublic void testCreateServiceUser() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUser\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tcreatedUser = usersManager.getUserById(sess, createdUser.getId());\n+\n+\t\tassertThat(createdUser).isEqualToComparingOnlyGivenFields(candidate, \"firstName\", \"lastName\");\n+\t\tassertThat(createdUser.isServiceUser());\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsAttributes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\t\tMap<String, String> attrs = new HashMap<>();\n+\t\tString value = \"asdf@sdf.df\";\n+\t\tattrs.put(URN_ATTR_USER_PREFERRED_MAIL, value);\n+\t\tcandidate.setAttributes(attrs);\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tAttribute attr = perun.getAttributesManagerBl().getAttribute(sess, createdUser, URN_ATTR_USER_PREFERRED_MAIL);\n+\n+\t\tassertThat(attr.getValue()).isEqualTo(value);\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsUes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "591f1f649d916733cfedca5e94cf9d0750bcbe4e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1MzEwNA==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r484353104", "createdAt": "2020-09-07T10:47:27Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "diffHunk": "@@ -1422,6 +1424,64 @@ public void findUserByUserExtSourceLogin() {\n \t\tassertEquals(user, users.get(0));\n \t}\n \n+\t@Test\n+\tpublic void testCreateServiceUser() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUser\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tcreatedUser = usersManager.getUserById(sess, createdUser.getId());\n+\n+\t\tassertThat(createdUser).isEqualToComparingOnlyGivenFields(candidate, \"firstName\", \"lastName\");\n+\t\tassertThat(createdUser.isServiceUser());\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsAttributes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\t\tMap<String, String> attrs = new HashMap<>();\n+\t\tString value = \"asdf@sdf.df\";\n+\t\tattrs.put(URN_ATTR_USER_PREFERRED_MAIL, value);\n+\t\tcandidate.setAttributes(attrs);\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tAttribute attr = perun.getAttributesManagerBl().getAttribute(sess, createdUser, URN_ATTR_USER_PREFERRED_MAIL);\n+\n+\t\tassertThat(attr.getValue()).isEqualTo(value);\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsUes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQyNDM4Nw=="}, "originalCommit": {"oid": "591f1f649d916733cfedca5e94cf9d0750bcbe4e"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjY3NDIxOnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjo1NjoxNlrOHNB43g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0NzozMlrOHN6kgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQyNDQ3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n          \n          \n            \n            \t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserFailsForAlreadyExistingUes\");", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r483424478", "createdAt": "2020-09-04T06:56:16Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "diffHunk": "@@ -1422,6 +1424,64 @@ public void findUserByUserExtSourceLogin() {\n \t\tassertEquals(user, users.get(0));\n \t}\n \n+\t@Test\n+\tpublic void testCreateServiceUser() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUser\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tcreatedUser = usersManager.getUserById(sess, createdUser.getId());\n+\n+\t\tassertThat(createdUser).isEqualToComparingOnlyGivenFields(candidate, \"firstName\", \"lastName\");\n+\t\tassertThat(createdUser.isServiceUser());\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsAttributes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\t\tMap<String, String> attrs = new HashMap<>();\n+\t\tString value = \"asdf@sdf.df\";\n+\t\tattrs.put(URN_ATTR_USER_PREFERRED_MAIL, value);\n+\t\tcandidate.setAttributes(attrs);\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tAttribute attr = perun.getAttributesManagerBl().getAttribute(sess, createdUser, URN_ATTR_USER_PREFERRED_MAIL);\n+\n+\t\tassertThat(attr.getValue()).isEqualTo(value);\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsUes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tUserExtSource candidateUes = candidate.getUserExtSource();\n+\t\tUser userByUes = usersManager.getUserByExtSourceNameAndExtLogin(sess, candidateUes.getExtSource().getName(),\n+\t\t\t\tcandidateUes.getLogin());\n+\n+\t\tassertThat(createdUser).isEqualByComparingTo(userByUes);\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserFailsForAlreadyExistingUes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "591f1f649d916733cfedca5e94cf9d0750bcbe4e"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1MzE1Mg==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2880#discussion_r484353152", "createdAt": "2020-09-07T10:47:32Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "diffHunk": "@@ -1422,6 +1424,64 @@ public void findUserByUserExtSourceLogin() {\n \t\tassertEquals(user, users.get(0));\n \t}\n \n+\t@Test\n+\tpublic void testCreateServiceUser() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUser\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tcreatedUser = usersManager.getUserById(sess, createdUser.getId());\n+\n+\t\tassertThat(createdUser).isEqualToComparingOnlyGivenFields(candidate, \"firstName\", \"lastName\");\n+\t\tassertThat(createdUser.isServiceUser());\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsAttributes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\t\tMap<String, String> attrs = new HashMap<>();\n+\t\tString value = \"asdf@sdf.df\";\n+\t\tattrs.put(URN_ATTR_USER_PREFERRED_MAIL, value);\n+\t\tcandidate.setAttributes(attrs);\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tAttribute attr = perun.getAttributesManagerBl().getAttribute(sess, createdUser, URN_ATTR_USER_PREFERRED_MAIL);\n+\n+\t\tassertThat(attr.getValue()).isEqualTo(value);\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserSetsUes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");\n+\n+\t\tCandidate candidate = setUpCandidateForSpecificUser1();\n+\n+\t\tUser createdUser = usersManager.createServiceUser(sess, candidate, Collections.emptyList());\n+\n+\t\tUserExtSource candidateUes = candidate.getUserExtSource();\n+\t\tUser userByUes = usersManager.getUserByExtSourceNameAndExtLogin(sess, candidateUes.getExtSource().getName(),\n+\t\t\t\tcandidateUes.getLogin());\n+\n+\t\tassertThat(createdUser).isEqualByComparingTo(userByUes);\n+\t}\n+\n+\t@Test\n+\tpublic void testCreateServiceUserFailsForAlreadyExistingUes() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"testCreateServiceUserSetsAttributes\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQyNDQ3OA=="}, "originalCommit": {"oid": "591f1f649d916733cfedca5e94cf9d0750bcbe4e"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2255, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}