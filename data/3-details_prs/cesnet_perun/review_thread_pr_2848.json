{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MTIwOTM0", "number": 2848, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNzoyMDowMlrOEYXS6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxODo0MTo1NVrOEhAenw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTgyOTUzOnYy", "diffSide": "RIGHT", "path": "perun-base/src/test/resources/test-schema.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNzoyMDowMlrOHAqMDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1ODo1NVrOHAtF2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1MzI2MQ==", "bodyText": "Please change also DB version i this file.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470453261", "createdAt": "2020-08-14T07:20:02Z", "author": {"login": "stavamichal"}, "path": "perun-base/src/test/resources/test-schema.sql", "diffHunk": "@@ -1314,6 +1314,24 @@ create table blacklists (\n \tconstraint bllist_user_fk foreign key (user_id) references users(id)\n );\n \n+create table vos_bans (\n+\tid integer not null,\n+\tmember_id integer not null,\n+\tvo_id integer not null,\n+\tdescription longvarchar,\n+\tbanned_to timestamp not null,\n+\tcreated_at timestamp default current_date not null,\n+\tcreated_by longvarchar default user not null,\n+\tmodified_at timestamp default current_date not null,\n+\tmodified_by longvarchar default user not null,\n+\tcreated_by_uid integer,\n+\tmodified_by_uid integer,\n+\tconstraint vos_bans_pk primary key (id),\n+\tconstraint vos_bans_u unique (member_id),\n+\tconstraint vos_bans_mem_fk foreign key (member_id) references members (id),\n+\tconstraint vos_bans_vo_fk foreign key (vo_id) references vos (id)\n+);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwMDgyNA==", "bodyText": "Done.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470500824", "createdAt": "2020-08-14T08:58:55Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-base/src/test/resources/test-schema.sql", "diffHunk": "@@ -1314,6 +1314,24 @@ create table blacklists (\n \tconstraint bllist_user_fk foreign key (user_id) references users(id)\n );\n \n+create table vos_bans (\n+\tid integer not null,\n+\tmember_id integer not null,\n+\tvo_id integer not null,\n+\tdescription longvarchar,\n+\tbanned_to timestamp not null,\n+\tcreated_at timestamp default current_date not null,\n+\tcreated_by longvarchar default user not null,\n+\tmodified_at timestamp default current_date not null,\n+\tmodified_by longvarchar default user not null,\n+\tcreated_by_uid integer,\n+\tmodified_by_uid integer,\n+\tconstraint vos_bans_pk primary key (id),\n+\tconstraint vos_bans_u unique (member_id),\n+\tconstraint vos_bans_mem_fk foreign key (member_id) references members (id),\n+\tconstraint vos_bans_vo_fk foreign key (vo_id) references vos (id)\n+);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ1MzI2MQ=="}, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTk4NTMyOnYy", "diffSide": "RIGHT", "path": "perun-db/postgres.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODoxNDowNFrOHArqZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1OTozOFrOHAtHbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3NzQxNQ==", "bodyText": "You should also remove \"suspendedTo\" from members table.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470477415", "createdAt": "2020-08-14T08:14:04Z", "author": {"login": "stavamichal"}, "path": "perun-db/postgres.sql", "diffHunk": "@@ -1,4 +1,4 @@\n--- database version 3.1.65 (don't forget to update insert statement at the end of file)\n+-- database version 3.1.66 (don't forget to update insert statement at the end of file)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwMTIyOQ==", "bodyText": "Done.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470501229", "createdAt": "2020-08-14T08:59:38Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-db/postgres.sql", "diffHunk": "@@ -1,4 +1,4 @@\n--- database version 3.1.65 (don't forget to update insert statement at the end of file)\n+-- database version 3.1.66 (don't forget to update insert statement at the end of file)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3NzQxNQ=="}, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTk4NjI2OnYy", "diffSide": "RIGHT", "path": "perun-base/src/test/resources/test-schema.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODoxNDoyMVrOHArq9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1OTo1M1rOHAtH7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3NzU1Ng==", "bodyText": "You should also remove \"suspendedTo\" from members table.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470477556", "createdAt": "2020-08-14T08:14:21Z", "author": {"login": "stavamichal"}, "path": "perun-base/src/test/resources/test-schema.sql", "diffHunk": "@@ -1314,6 +1314,24 @@ create table blacklists (\n \tconstraint bllist_user_fk foreign key (user_id) references users(id)\n );\n \n+create table vos_bans (\n+\tid integer not null,\n+\tmember_id integer not null,\n+\tvo_id integer not null,\n+\tdescription longvarchar,\n+\tbanned_to timestamp not null,\n+\tcreated_at timestamp default current_date not null,\n+\tcreated_by longvarchar default user not null,\n+\tmodified_at timestamp default current_date not null,\n+\tmodified_by longvarchar default user not null,\n+\tcreated_by_uid integer,\n+\tmodified_by_uid integer,\n+\tconstraint vos_bans_pk primary key (id),\n+\tconstraint vos_bans_u unique (member_id),\n+\tconstraint vos_bans_mem_fk foreign key (member_id) references members (id),\n+\tconstraint vos_bans_vo_fk foreign key (vo_id) references vos (id)\n+);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwMTM1Nw==", "bodyText": "done", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470501357", "createdAt": "2020-08-14T08:59:53Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-base/src/test/resources/test-schema.sql", "diffHunk": "@@ -1314,6 +1314,24 @@ create table blacklists (\n \tconstraint bllist_user_fk foreign key (user_id) references users(id)\n );\n \n+create table vos_bans (\n+\tid integer not null,\n+\tmember_id integer not null,\n+\tvo_id integer not null,\n+\tdescription longvarchar,\n+\tbanned_to timestamp not null,\n+\tcreated_at timestamp default current_date not null,\n+\tcreated_by longvarchar default user not null,\n+\tmodified_at timestamp default current_date not null,\n+\tmodified_by longvarchar default user not null,\n+\tcreated_by_uid integer,\n+\tmodified_by_uid integer,\n+\tconstraint vos_bans_pk primary key (id),\n+\tconstraint vos_bans_u unique (member_id),\n+\tconstraint vos_bans_mem_fk foreign key (member_id) references members (id),\n+\tconstraint vos_bans_vo_fk foreign key (vo_id) references vos (id)\n+);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3NzU1Ng=="}, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTk5MDE3OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/resources/postgresChangelog.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODoxNTozNlrOHArtQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOToxNTozN1rOHAtmMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3ODE0NA==", "bodyText": "What about records where suspended_to is null? Do you have a default in the new table? In code you are working with date in the far future.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470478144", "createdAt": "2020-08-14T08:15:36Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/resources/postgresChangelog.txt", "diffHunk": "@@ -6,6 +6,17 @@\n -- Directly under version number should be version commands. They will be executed in the order they are written here.\n -- Comments are prefixed with -- and can be written only between version blocks, that means not in the lines with commands. They have to be at the start of the line.\n \n+3.1.66\n+CREATE TABLE vos_bans (id integer not null, member_id integer not null, vo_id integer not null, description varchar, banned_to timestamp not null, created_at timestamp default statement_timestamp() not null, created_by varchar default user not null, modified_at timestamp default statement_timestamp() not null, modified_by varchar default user not null, created_by_uid integer, modified_by_uid integer, constraint vos_bans_pk primary key (id), constraint vos_bans_u unique (member_id), constraint vos_bans_mem_fk foreign key (member_id) references members (id), constraint vos_bans_vo_fk foreign key (vo_id) references vos (id));\n+CREATE SEQUENCE \"vos_bans_id_seq\";\n+CREATE INDEX idx_fk_vos_ban_member ON vos_bans (member_id);\n+CREATE INDEX idx_fk_vos_ban_vos ON vos_bans (vo_id);\n+GRANT ALL ON vos_bans TO perun;\n+INSERT INTO vos_bans (id, description, banned_to, member_id, vo_id) SELECT nextval('vos_bans_id_seq'), 'AUTO CREATED FROM SUSPEND STATUS', members.suspended_to, members.id, members.vo_id FROM members WHERE status = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwOTEwNg==", "bodyText": "That's a good point. I have added a default value for the table.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470509106", "createdAt": "2020-08-14T09:15:37Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/resources/postgresChangelog.txt", "diffHunk": "@@ -6,6 +6,17 @@\n -- Directly under version number should be version commands. They will be executed in the order they are written here.\n -- Comments are prefixed with -- and can be written only between version blocks, that means not in the lines with commands. They have to be at the start of the line.\n \n+3.1.66\n+CREATE TABLE vos_bans (id integer not null, member_id integer not null, vo_id integer not null, description varchar, banned_to timestamp not null, created_at timestamp default statement_timestamp() not null, created_by varchar default user not null, modified_at timestamp default statement_timestamp() not null, modified_by varchar default user not null, created_by_uid integer, modified_by_uid integer, constraint vos_bans_pk primary key (id), constraint vos_bans_u unique (member_id), constraint vos_bans_mem_fk foreign key (member_id) references members (id), constraint vos_bans_vo_fk foreign key (vo_id) references vos (id));\n+CREATE SEQUENCE \"vos_bans_id_seq\";\n+CREATE INDEX idx_fk_vos_ban_member ON vos_bans (member_id);\n+CREATE INDEX idx_fk_vos_ban_vos ON vos_bans (vo_id);\n+GRANT ALL ON vos_bans TO perun;\n+INSERT INTO vos_bans (id, description, banned_to, member_id, vo_id) SELECT nextval('vos_bans_id_seq'), 'AUTO CREATED FROM SUSPEND STATUS', members.suspended_to, members.id, members.vo_id FROM members WHERE status = 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3ODE0NA=="}, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDAyNTk2OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/VosManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODoyNzo1M1rOHAsD0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTowMjowMVrOHAtMGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ4MzkyMw==", "bodyText": "Shouldn't you also set \"created_by\" and \"created_at\"?", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470483923", "createdAt": "2020-08-14T08:27:53Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/VosManagerImpl.java", "diffHunk": "@@ -358,5 +384,124 @@ public int getVosCount(PerunSession sess) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo banOnVo) {\n+\t\tUtils.notNull(banOnVo.getValidityTo(), \"banOnVo.getValidityTo\");\n+\t\ttry {\n+\t\t\tint newId = Utils.getNewId(jdbc, \"vos_bans_id_seq\");\n+\n+\t\t\tjdbc.update(\"insert into vos_bans(\" +\n+\t\t\t\t\t\t\t\"id, \" +\n+\t\t\t\t\t\t\t\"description, \" +\n+\t\t\t\t\t\t\t\"banned_to, \" +\n+\t\t\t\t\t\t\t\"member_id, \" +\n+\t\t\t\t\t\t\t\"vo_id, \" +\n+\t\t\t\t\t\t\t\"modified_by, \" +\n+\t\t\t\t\t\t\t\"modified_at, \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwMjQyNQ==", "bodyText": "Yes, I should add the created_by, but the created_at and modified_at are not needed because they will have a default value set in DB. I have added the created_by and removed modified_at.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470502425", "createdAt": "2020-08-14T09:02:01Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/VosManagerImpl.java", "diffHunk": "@@ -358,5 +384,124 @@ public int getVosCount(PerunSession sess) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo banOnVo) {\n+\t\tUtils.notNull(banOnVo.getValidityTo(), \"banOnVo.getValidityTo\");\n+\t\ttry {\n+\t\t\tint newId = Utils.getNewId(jdbc, \"vos_bans_id_seq\");\n+\n+\t\t\tjdbc.update(\"insert into vos_bans(\" +\n+\t\t\t\t\t\t\t\"id, \" +\n+\t\t\t\t\t\t\t\"description, \" +\n+\t\t\t\t\t\t\t\"banned_to, \" +\n+\t\t\t\t\t\t\t\"member_id, \" +\n+\t\t\t\t\t\t\t\"vo_id, \" +\n+\t\t\t\t\t\t\t\"modified_by, \" +\n+\t\t\t\t\t\t\t\"modified_at, \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ4MzkyMw=="}, "originalCommit": {"oid": "a853399ee9ba46df1bfc938b32b392ebe8bcb936"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDIyOTg0OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/resources/postgresChangelog.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOToyODoxNFrOHAt-hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMTowNTozNVrOHAwqwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUxNTMzNA==", "bodyText": "The default value of banned_to is missing here.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470515334", "createdAt": "2020-08-14T09:28:14Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/resources/postgresChangelog.txt", "diffHunk": "@@ -6,6 +6,17 @@\n -- Directly under version number should be version commands. They will be executed in the order they are written here.\n -- Comments are prefixed with -- and can be written only between version blocks, that means not in the lines with commands. They have to be at the start of the line.\n \n+3.1.66\n+CREATE TABLE vos_bans (id integer not null, member_id integer not null, vo_id integer not null, description varchar, banned_to timestamp not null, created_at timestamp default statement_timestamp() not null, created_by varchar default user not null, modified_at timestamp default statement_timestamp() not null, modified_by varchar default user not null, created_by_uid integer, modified_by_uid integer, constraint vos_bans_pk primary key (id), constraint vos_bans_u unique (member_id), constraint vos_bans_mem_fk foreign key (member_id) references members (id), constraint vos_bans_vo_fk foreign key (vo_id) references vos (id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae26618b3bf550d17bde5abc53389cf00664dba4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1OTQyNA==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470559424", "createdAt": "2020-08-14T11:05:35Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/resources/postgresChangelog.txt", "diffHunk": "@@ -6,6 +6,17 @@\n -- Directly under version number should be version commands. They will be executed in the order they are written here.\n -- Comments are prefixed with -- and can be written only between version blocks, that means not in the lines with commands. They have to be at the start of the line.\n \n+3.1.66\n+CREATE TABLE vos_bans (id integer not null, member_id integer not null, vo_id integer not null, description varchar, banned_to timestamp not null, created_at timestamp default statement_timestamp() not null, created_by varchar default user not null, modified_at timestamp default statement_timestamp() not null, modified_by varchar default user not null, created_by_uid integer, modified_by_uid integer, constraint vos_bans_pk primary key (id), constraint vos_bans_u unique (member_id), constraint vos_bans_mem_fk foreign key (member_id) references members (id), constraint vos_bans_vo_fk foreign key (vo_id) references vos (id));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUxNTMzNA=="}, "originalCommit": {"oid": "ae26618b3bf550d17bde5abc53389cf00664dba4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDIzMzQ1OnYy", "diffSide": "RIGHT", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/GroupsManagerMethod.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOToyOToxNFrOHAuAog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMTowNToyM1rOHAwqdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUxNTg3NA==", "bodyText": "Why is this change in this PR?", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470515874", "createdAt": "2020-08-14T09:29:14Z", "author": {"login": "stavamichal"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/GroupsManagerMethod.java", "diffHunk": "@@ -1573,7 +1573,7 @@ public RichGroup call(ApiCaller ac, Deserializer parms) throws PerunException {\n \n \t\t\treturn ac.getGroupsManager().getRichGroupByIdWithAttributesByNames(ac.getSession(),\n \t\t\t\t\tparms.readInt(\"groupId\"),\n-\t\t\t\t\tparms.readList(\"attrNames\", String.class));\n+\t\t\t\t\tnull);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae26618b3bf550d17bde5abc53389cf00664dba4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1OTM0OQ==", "bodyText": "I added this by accident. I have removed it.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r470559349", "createdAt": "2020-08-14T11:05:23Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/GroupsManagerMethod.java", "diffHunk": "@@ -1573,7 +1573,7 @@ public RichGroup call(ApiCaller ac, Deserializer parms) throws PerunException {\n \n \t\t\treturn ac.getGroupsManager().getRichGroupByIdWithAttributesByNames(ac.getSession(),\n \t\t\t\t\tparms.readInt(\"groupId\"),\n-\t\t\t\t\tparms.readList(\"attrNames\", String.class));\n+\t\t\t\t\tnull);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUxNTg3NA=="}, "originalCommit": {"oid": "ae26618b3bf550d17bde5abc53389cf00664dba4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTM1NDMwOnYy", "diffSide": "RIGHT", "path": "perun-base/src/main/resources/perun-roles.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjo1MjozMVrOHCSYcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoxOToxM1rOHC8Z-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE2MDM3MQ==", "bodyText": "Policies for \"get\" methods should contain also PERUNOBSERVER role.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472160371", "createdAt": "2020-08-18T12:52:31Z", "author": {"login": "balcirakpeter"}, "path": "perun-base/src/main/resources/perun-roles.yml", "diffHunk": "@@ -4386,6 +4386,47 @@ perun_policies:\n     include_policies:\n       - default_policy\n \n+  setBan_BanOnVo_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  vo-removeBan_int_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  vo-removeBanForMember_member_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  vo-getBanById_int_policy:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg0ODg5MQ==", "bodyText": "Done.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472848891", "createdAt": "2020-08-19T08:19:13Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-base/src/main/resources/perun-roles.yml", "diffHunk": "@@ -4386,6 +4386,47 @@ perun_policies:\n     include_policies:\n       - default_policy\n \n+  setBan_BanOnVo_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  vo-removeBan_int_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  vo-removeBanForMember_member_policy:\n+    policy_roles:\n+      - VOADMIN: Vo\n+    include_policies:\n+      - default_policy\n+\n+  vo-getBanById_int_policy:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE2MDM3MQ=="}, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTUwNzUwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/VosManagerEntry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzoxODo0MVrOHCT9Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoxOToyMlrOHC8acg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4NjIwNw==", "bodyText": "Please add check if a member exists.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472186207", "createdAt": "2020-08-18T13:18:41Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/VosManagerEntry.java", "diffHunk": "@@ -594,6 +595,96 @@ public void removeSponsorRole(PerunSession sess, Vo vo, Group group) throws Grou\n \t\tAuthzResolverBlImpl.unsetRole(sess, group, vo, Role.SPONSOR);\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo ban) throws PrivilegeException, MemberNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// We have to fetch the member object from DB because of authorization. The given ban object might contain\n+\t\t// invalid combination of voId and memberId\n+\t\tMember member = perunBl.getMembersManagerBl().getMemberById(sess, ban.getMemberId());\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"setBan_BanOnVo_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"setBan\");\n+\t\t}\n+\n+\t\treturn vosManagerBl.setBan(sess, ban);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBan(PerunSession sess, int banId) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo banOnVo = perunBl.getVosManagerBl().getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBan_int_policy\", Collections.singletonList(banOnVo))) {\n+\t\t\tthrow new PrivilegeException(\"removeBan\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBan(sess, banId);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBanForMember(PerunSession sess, Member member) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBanForMember_member_policy\", Collections.singletonList(member))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg0OTAxMA==", "bodyText": "Done.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472849010", "createdAt": "2020-08-19T08:19:22Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/VosManagerEntry.java", "diffHunk": "@@ -594,6 +595,96 @@ public void removeSponsorRole(PerunSession sess, Vo vo, Group group) throws Grou\n \t\tAuthzResolverBlImpl.unsetRole(sess, group, vo, Role.SPONSOR);\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo ban) throws PrivilegeException, MemberNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// We have to fetch the member object from DB because of authorization. The given ban object might contain\n+\t\t// invalid combination of voId and memberId\n+\t\tMember member = perunBl.getMembersManagerBl().getMemberById(sess, ban.getMemberId());\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"setBan_BanOnVo_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"setBan\");\n+\t\t}\n+\n+\t\treturn vosManagerBl.setBan(sess, ban);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBan(PerunSession sess, int banId) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo banOnVo = perunBl.getVosManagerBl().getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBan_int_policy\", Collections.singletonList(banOnVo))) {\n+\t\t\tthrow new PrivilegeException(\"removeBan\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBan(sess, banId);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBanForMember(PerunSession sess, Member member) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBanForMember_member_policy\", Collections.singletonList(member))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4NjIwNw=="}, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTUxNzIxOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/VosManagerEntry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzoyMDoxOVrOHCUDoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoxOTozNFrOHC8bBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4NzgwOA==", "bodyText": "You don't have to use a singleton list.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472187808", "createdAt": "2020-08-18T13:20:19Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/VosManagerEntry.java", "diffHunk": "@@ -594,6 +595,96 @@ public void removeSponsorRole(PerunSession sess, Vo vo, Group group) throws Grou\n \t\tAuthzResolverBlImpl.unsetRole(sess, group, vo, Role.SPONSOR);\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo ban) throws PrivilegeException, MemberNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// We have to fetch the member object from DB because of authorization. The given ban object might contain\n+\t\t// invalid combination of voId and memberId\n+\t\tMember member = perunBl.getMembersManagerBl().getMemberById(sess, ban.getMemberId());\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"setBan_BanOnVo_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"setBan\");\n+\t\t}\n+\n+\t\treturn vosManagerBl.setBan(sess, ban);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBan(PerunSession sess, int banId) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo banOnVo = perunBl.getVosManagerBl().getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBan_int_policy\", Collections.singletonList(banOnVo))) {\n+\t\t\tthrow new PrivilegeException(\"removeBan\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBan(sess, banId);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBanForMember(PerunSession sess, Member member) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBanForMember_member_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"removeBanForMember\");\n+\t\t}\n+\n+\t\tOptional<BanOnVo> banOnVo = perunBl.getVosManagerBl().getBanForMember(sess, member.getId());\n+\n+\t\tif (!banOnVo.isPresent()) {\n+\t\t\tthrow new BanNotExistsException(\"Given member is not banned.\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBanForMember(sess, member.getId());\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanById(PerunSession sess, int banId) throws BanNotExistsException, PrivilegeException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo ban = vosManagerBl.getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-getBanById_int_policy\", Collections.singletonList(ban))) {\n+\t\t\tthrow new PrivilegeException(\"getBanById\");\n+\t\t}\n+\n+\t\treturn ban;\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanForMember(PerunSession sess, Member member) throws PrivilegeException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tOptional<BanOnVo> ban = vosManagerBl.getBanForMember(sess, member.getId());\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-getBanForMember_member_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"getBanForMember\");\n+\t\t}\n+\n+\t\treturn ban.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic List<BanOnVo> getBansForVo(PerunSession sess, int voId) throws PrivilegeException, VoNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tVo vo = vosManagerBl.getVoById(sess, voId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"getBansForVo_int_policy\", Collections.singletonList(vo))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg0OTE1OQ==", "bodyText": "Yes, I have removed it.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472849159", "createdAt": "2020-08-19T08:19:34Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/VosManagerEntry.java", "diffHunk": "@@ -594,6 +595,96 @@ public void removeSponsorRole(PerunSession sess, Vo vo, Group group) throws Grou\n \t\tAuthzResolverBlImpl.unsetRole(sess, group, vo, Role.SPONSOR);\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo ban) throws PrivilegeException, MemberNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// We have to fetch the member object from DB because of authorization. The given ban object might contain\n+\t\t// invalid combination of voId and memberId\n+\t\tMember member = perunBl.getMembersManagerBl().getMemberById(sess, ban.getMemberId());\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"setBan_BanOnVo_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"setBan\");\n+\t\t}\n+\n+\t\treturn vosManagerBl.setBan(sess, ban);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBan(PerunSession sess, int banId) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo banOnVo = perunBl.getVosManagerBl().getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBan_int_policy\", Collections.singletonList(banOnVo))) {\n+\t\t\tthrow new PrivilegeException(\"removeBan\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBan(sess, banId);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBanForMember(PerunSession sess, Member member) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBanForMember_member_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"removeBanForMember\");\n+\t\t}\n+\n+\t\tOptional<BanOnVo> banOnVo = perunBl.getVosManagerBl().getBanForMember(sess, member.getId());\n+\n+\t\tif (!banOnVo.isPresent()) {\n+\t\t\tthrow new BanNotExistsException(\"Given member is not banned.\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBanForMember(sess, member.getId());\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanById(PerunSession sess, int banId) throws BanNotExistsException, PrivilegeException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo ban = vosManagerBl.getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-getBanById_int_policy\", Collections.singletonList(ban))) {\n+\t\t\tthrow new PrivilegeException(\"getBanById\");\n+\t\t}\n+\n+\t\treturn ban;\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanForMember(PerunSession sess, Member member) throws PrivilegeException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tOptional<BanOnVo> ban = vosManagerBl.getBanForMember(sess, member.getId());\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-getBanForMember_member_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"getBanForMember\");\n+\t\t}\n+\n+\t\treturn ban.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic List<BanOnVo> getBansForVo(PerunSession sess, int voId) throws PrivilegeException, VoNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tVo vo = vosManagerBl.getVoById(sess, voId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"getBansForVo_int_policy\", Collections.singletonList(vo))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4NzgwOA=="}, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTU0MTIwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/VosManagerEntry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzoyNDowNFrOHCUTNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoxOTo1NVrOHC8cnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE5MTc5OA==", "bodyText": "Consider adding GROUPADMIN privileges for get methods.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472191798", "createdAt": "2020-08-18T13:24:04Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/VosManagerEntry.java", "diffHunk": "@@ -594,6 +595,96 @@ public void removeSponsorRole(PerunSession sess, Vo vo, Group group) throws Grou\n \t\tAuthzResolverBlImpl.unsetRole(sess, group, vo, Role.SPONSOR);\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo ban) throws PrivilegeException, MemberNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// We have to fetch the member object from DB because of authorization. The given ban object might contain\n+\t\t// invalid combination of voId and memberId\n+\t\tMember member = perunBl.getMembersManagerBl().getMemberById(sess, ban.getMemberId());\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"setBan_BanOnVo_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"setBan\");\n+\t\t}\n+\n+\t\treturn vosManagerBl.setBan(sess, ban);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBan(PerunSession sess, int banId) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo banOnVo = perunBl.getVosManagerBl().getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBan_int_policy\", Collections.singletonList(banOnVo))) {\n+\t\t\tthrow new PrivilegeException(\"removeBan\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBan(sess, banId);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBanForMember(PerunSession sess, Member member) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBanForMember_member_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"removeBanForMember\");\n+\t\t}\n+\n+\t\tOptional<BanOnVo> banOnVo = perunBl.getVosManagerBl().getBanForMember(sess, member.getId());\n+\n+\t\tif (!banOnVo.isPresent()) {\n+\t\t\tthrow new BanNotExistsException(\"Given member is not banned.\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBanForMember(sess, member.getId());\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanById(PerunSession sess, int banId) throws BanNotExistsException, PrivilegeException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo ban = vosManagerBl.getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-getBanById_int_policy\", Collections.singletonList(ban))) {\n+\t\t\tthrow new PrivilegeException(\"getBanById\");\n+\t\t}\n+\n+\t\treturn ban;\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanForMember(PerunSession sess, Member member) throws PrivilegeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg0OTU2NQ==", "bodyText": "I have added GROUPADMIN to all policies for getting vobans.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472849565", "createdAt": "2020-08-19T08:19:55Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/VosManagerEntry.java", "diffHunk": "@@ -594,6 +595,96 @@ public void removeSponsorRole(PerunSession sess, Vo vo, Group group) throws Grou\n \t\tAuthzResolverBlImpl.unsetRole(sess, group, vo, Role.SPONSOR);\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo ban) throws PrivilegeException, MemberNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// We have to fetch the member object from DB because of authorization. The given ban object might contain\n+\t\t// invalid combination of voId and memberId\n+\t\tMember member = perunBl.getMembersManagerBl().getMemberById(sess, ban.getMemberId());\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"setBan_BanOnVo_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"setBan\");\n+\t\t}\n+\n+\t\treturn vosManagerBl.setBan(sess, ban);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBan(PerunSession sess, int banId) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo banOnVo = perunBl.getVosManagerBl().getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBan_int_policy\", Collections.singletonList(banOnVo))) {\n+\t\t\tthrow new PrivilegeException(\"removeBan\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBan(sess, banId);\n+\t}\n+\n+\t@Override\n+\tpublic void removeBanForMember(PerunSession sess, Member member) throws PrivilegeException, BanNotExistsException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-removeBanForMember_member_policy\", Collections.singletonList(member))) {\n+\t\t\tthrow new PrivilegeException(\"removeBanForMember\");\n+\t\t}\n+\n+\t\tOptional<BanOnVo> banOnVo = perunBl.getVosManagerBl().getBanForMember(sess, member.getId());\n+\n+\t\tif (!banOnVo.isPresent()) {\n+\t\t\tthrow new BanNotExistsException(\"Given member is not banned.\");\n+\t\t}\n+\n+\t\tvosManagerBl.removeBanForMember(sess, member.getId());\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanById(PerunSession sess, int banId) throws BanNotExistsException, PrivilegeException {\n+\t\tUtils.checkPerunSession(sess);\n+\n+\t\tBanOnVo ban = vosManagerBl.getBanById(sess, banId);\n+\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"vo-getBanById_int_policy\", Collections.singletonList(ban))) {\n+\t\t\tthrow new PrivilegeException(\"getBanById\");\n+\t\t}\n+\n+\t\treturn ban;\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanForMember(PerunSession sess, Member member) throws PrivilegeException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE5MTc5OA=="}, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTU1ODk2OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/VosManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzoyNjo0NVrOHCUekw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyMDoxMlrOHC8dmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE5NDcwNw==", "bodyText": "Query does not throw EmptyResultDataAccessException.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472194707", "createdAt": "2020-08-18T13:26:45Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/VosManagerImpl.java", "diffHunk": "@@ -358,5 +384,125 @@ public int getVosCount(PerunSession sess) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo banOnVo) {\n+\t\tUtils.notNull(banOnVo.getValidityTo(), \"banOnVo.getValidityTo\");\n+\t\ttry {\n+\t\t\tint newId = Utils.getNewId(jdbc, \"vos_bans_id_seq\");\n+\n+\t\t\tjdbc.update(\"insert into vos_bans(\" +\n+\t\t\t\t\t\t\t\"id, \" +\n+\t\t\t\t\t\t\t\"description, \" +\n+\t\t\t\t\t\t\t\"banned_to, \" +\n+\t\t\t\t\t\t\t\"member_id, \" +\n+\t\t\t\t\t\t\t\"vo_id, \" +\n+\t\t\t\t\t\t\t\"modified_by, \" +\n+\t\t\t\t\t\t\t\"created_by, \" +\n+\t\t\t\t\t\t\t\"created_by_uid, \" +\n+\t\t\t\t\t\t\t\"modified_by_uid) values (?,?,?,?,?,?,?,?,?)\",\n+\t\t\t\t\tnewId,\n+\t\t\t\t\tbanOnVo.getDescription(),\n+\t\t\t\t\tCompatibility.getDate(banOnVo.getValidityTo().getTime()),\n+\t\t\t\t\tbanOnVo.getMemberId(),\n+\t\t\t\t\tbanOnVo.getVoId(),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId()\n+\t\t\t);\n+\n+\t\t\tbanOnVo.setId(newId);\n+\n+\t\t\treturn banOnVo;\n+\t\t} catch(RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanById(PerunSession sess, int banId) throws BanNotExistsException {\n+\t\ttry {\n+\t\t\treturn jdbc.queryForObject(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where id=? \",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, banId);\n+\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\tthrow new BanNotExistsException(\"Ban with id \" + banId + \" not exists for any vo.\");\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<BanOnVo> getBansForVo(PerunSession sess, int voId) {\n+\t\ttry {\n+\t\t\treturn jdbc.query(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where vo_id=?\",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, voId);\n+\t\t} catch (EmptyResultDataAccessException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg0OTgxOQ==", "bodyText": "Removed catch.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472849819", "createdAt": "2020-08-19T08:20:12Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/VosManagerImpl.java", "diffHunk": "@@ -358,5 +384,125 @@ public int getVosCount(PerunSession sess) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo banOnVo) {\n+\t\tUtils.notNull(banOnVo.getValidityTo(), \"banOnVo.getValidityTo\");\n+\t\ttry {\n+\t\t\tint newId = Utils.getNewId(jdbc, \"vos_bans_id_seq\");\n+\n+\t\t\tjdbc.update(\"insert into vos_bans(\" +\n+\t\t\t\t\t\t\t\"id, \" +\n+\t\t\t\t\t\t\t\"description, \" +\n+\t\t\t\t\t\t\t\"banned_to, \" +\n+\t\t\t\t\t\t\t\"member_id, \" +\n+\t\t\t\t\t\t\t\"vo_id, \" +\n+\t\t\t\t\t\t\t\"modified_by, \" +\n+\t\t\t\t\t\t\t\"created_by, \" +\n+\t\t\t\t\t\t\t\"created_by_uid, \" +\n+\t\t\t\t\t\t\t\"modified_by_uid) values (?,?,?,?,?,?,?,?,?)\",\n+\t\t\t\t\tnewId,\n+\t\t\t\t\tbanOnVo.getDescription(),\n+\t\t\t\t\tCompatibility.getDate(banOnVo.getValidityTo().getTime()),\n+\t\t\t\t\tbanOnVo.getMemberId(),\n+\t\t\t\t\tbanOnVo.getVoId(),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId()\n+\t\t\t);\n+\n+\t\t\tbanOnVo.setId(newId);\n+\n+\t\t\treturn banOnVo;\n+\t\t} catch(RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanById(PerunSession sess, int banId) throws BanNotExistsException {\n+\t\ttry {\n+\t\t\treturn jdbc.queryForObject(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where id=? \",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, banId);\n+\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\tthrow new BanNotExistsException(\"Ban with id \" + banId + \" not exists for any vo.\");\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<BanOnVo> getBansForVo(PerunSession sess, int voId) {\n+\t\ttry {\n+\t\t\treturn jdbc.query(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where vo_id=?\",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, voId);\n+\t\t} catch (EmptyResultDataAccessException ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE5NDcwNw=="}, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTU5MjM4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/VosManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzozMzozOVrOHCUz4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyMDoxN1rOHC8d-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIwMDE2MA==", "bodyText": "This check is unnecessary.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472200160", "createdAt": "2020-08-18T13:33:39Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/VosManagerImpl.java", "diffHunk": "@@ -358,5 +384,125 @@ public int getVosCount(PerunSession sess) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo banOnVo) {\n+\t\tUtils.notNull(banOnVo.getValidityTo(), \"banOnVo.getValidityTo\");\n+\t\ttry {\n+\t\t\tint newId = Utils.getNewId(jdbc, \"vos_bans_id_seq\");\n+\n+\t\t\tjdbc.update(\"insert into vos_bans(\" +\n+\t\t\t\t\t\t\t\"id, \" +\n+\t\t\t\t\t\t\t\"description, \" +\n+\t\t\t\t\t\t\t\"banned_to, \" +\n+\t\t\t\t\t\t\t\"member_id, \" +\n+\t\t\t\t\t\t\t\"vo_id, \" +\n+\t\t\t\t\t\t\t\"modified_by, \" +\n+\t\t\t\t\t\t\t\"created_by, \" +\n+\t\t\t\t\t\t\t\"created_by_uid, \" +\n+\t\t\t\t\t\t\t\"modified_by_uid) values (?,?,?,?,?,?,?,?,?)\",\n+\t\t\t\t\tnewId,\n+\t\t\t\t\tbanOnVo.getDescription(),\n+\t\t\t\t\tCompatibility.getDate(banOnVo.getValidityTo().getTime()),\n+\t\t\t\t\tbanOnVo.getMemberId(),\n+\t\t\t\t\tbanOnVo.getVoId(),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId()\n+\t\t\t);\n+\n+\t\t\tbanOnVo.setId(newId);\n+\n+\t\t\treturn banOnVo;\n+\t\t} catch(RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanById(PerunSession sess, int banId) throws BanNotExistsException {\n+\t\ttry {\n+\t\t\treturn jdbc.queryForObject(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where id=? \",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, banId);\n+\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\tthrow new BanNotExistsException(\"Ban with id \" + banId + \" not exists for any vo.\");\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<BanOnVo> getBansForVo(PerunSession sess, int voId) {\n+\t\ttry {\n+\t\t\treturn jdbc.query(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where vo_id=?\",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, voId);\n+\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\treturn new ArrayList<>();\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanForMember(PerunSession sess, int memberId) throws BanNotExistsException {\n+\t\ttry {\n+\t\t\treturn jdbc.queryForObject(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where member_id=? \",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, memberId);\n+\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\tthrow new BanNotExistsException(\"Ban for member with id \" + memberId + \" does not exist.\");\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo updateBan(PerunSession sess, BanOnVo banOnVo) {\n+\t\ttry {\n+\t\t\tjdbc.update(\"UPDATE vos_bans SET \" +\n+\t\t\t\t\t\t\t\"description=?, \" +\n+\t\t\t\t\t\t\t\"banned_to=?, \" +\n+\t\t\t\t\t\t\t\"modified_by=?, \" +\n+\t\t\t\t\t\t\t\"modified_by_uid=?, \" +\n+\t\t\t\t\t\t\t\"modified_at= \"+ Compatibility.getSysdate() +\n+\t\t\t\t\t\t\t\" WHERE id=?\",\n+\t\t\t\t\tbanOnVo.getDescription(),\n+\t\t\t\t\tCompatibility.getDate(banOnVo.getValidityTo().getTime()),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId(),\n+\t\t\t\t\tbanOnVo.getId());\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\n+\t\treturn banOnVo;\n+\t}\n \n+\t@Override\n+\tpublic void removeBan(PerunSession sess, int banId) throws BanNotExistsException {\n+\t\ttry {\n+\t\t\tint numAffected = jdbc.update(\"delete from vos_bans where id=?\", banId);\n+\t\t\tif (numAffected != 1) {\n+\t\t\t\tthrow new BanNotExistsException(\"Ban with id \" + banId + \" can't be remove, because not exists yet.\");\n+\t\t\t}\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic boolean isMemberBanned(PerunSession sess, int memberId) {\n+\t\ttry {\n+\t\t\tint numberOfExistences = jdbc.queryForInt(\"select count(1) from vos_bans where member_id=?\", memberId);\n+\t\t\tif (numberOfExistences == 1) {\n+\t\t\t\treturn true;\n+\t\t\t} else if (numberOfExistences > 1) {\n+\t\t\t\tthrow new ConsistencyErrorException(\"Ban on member with ID=\" + memberId + \" exists more than once.\");\n+\t\t\t}\n+\t\t\treturn false;\n+\t\t} catch(EmptyResultDataAccessException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg0OTkxNQ==", "bodyText": "Removed.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472849915", "createdAt": "2020-08-19T08:20:17Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/VosManagerImpl.java", "diffHunk": "@@ -358,5 +384,125 @@ public int getVosCount(PerunSession sess) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic BanOnVo setBan(PerunSession sess, BanOnVo banOnVo) {\n+\t\tUtils.notNull(banOnVo.getValidityTo(), \"banOnVo.getValidityTo\");\n+\t\ttry {\n+\t\t\tint newId = Utils.getNewId(jdbc, \"vos_bans_id_seq\");\n+\n+\t\t\tjdbc.update(\"insert into vos_bans(\" +\n+\t\t\t\t\t\t\t\"id, \" +\n+\t\t\t\t\t\t\t\"description, \" +\n+\t\t\t\t\t\t\t\"banned_to, \" +\n+\t\t\t\t\t\t\t\"member_id, \" +\n+\t\t\t\t\t\t\t\"vo_id, \" +\n+\t\t\t\t\t\t\t\"modified_by, \" +\n+\t\t\t\t\t\t\t\"created_by, \" +\n+\t\t\t\t\t\t\t\"created_by_uid, \" +\n+\t\t\t\t\t\t\t\"modified_by_uid) values (?,?,?,?,?,?,?,?,?)\",\n+\t\t\t\t\tnewId,\n+\t\t\t\t\tbanOnVo.getDescription(),\n+\t\t\t\t\tCompatibility.getDate(banOnVo.getValidityTo().getTime()),\n+\t\t\t\t\tbanOnVo.getMemberId(),\n+\t\t\t\t\tbanOnVo.getVoId(),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId()\n+\t\t\t);\n+\n+\t\t\tbanOnVo.setId(newId);\n+\n+\t\t\treturn banOnVo;\n+\t\t} catch(RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanById(PerunSession sess, int banId) throws BanNotExistsException {\n+\t\ttry {\n+\t\t\treturn jdbc.queryForObject(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where id=? \",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, banId);\n+\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\tthrow new BanNotExistsException(\"Ban with id \" + banId + \" not exists for any vo.\");\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<BanOnVo> getBansForVo(PerunSession sess, int voId) {\n+\t\ttry {\n+\t\t\treturn jdbc.query(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where vo_id=?\",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, voId);\n+\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\treturn new ArrayList<>();\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo getBanForMember(PerunSession sess, int memberId) throws BanNotExistsException {\n+\t\ttry {\n+\t\t\treturn jdbc.queryForObject(\"select \" + banOnVoMappingSelectQuery + \" from vos_bans where member_id=? \",\n+\t\t\t\t\tBAN_ON_VO_MAPPER, memberId);\n+\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\tthrow new BanNotExistsException(\"Ban for member with id \" + memberId + \" does not exist.\");\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic BanOnVo updateBan(PerunSession sess, BanOnVo banOnVo) {\n+\t\ttry {\n+\t\t\tjdbc.update(\"UPDATE vos_bans SET \" +\n+\t\t\t\t\t\t\t\"description=?, \" +\n+\t\t\t\t\t\t\t\"banned_to=?, \" +\n+\t\t\t\t\t\t\t\"modified_by=?, \" +\n+\t\t\t\t\t\t\t\"modified_by_uid=?, \" +\n+\t\t\t\t\t\t\t\"modified_at= \"+ Compatibility.getSysdate() +\n+\t\t\t\t\t\t\t\" WHERE id=?\",\n+\t\t\t\t\tbanOnVo.getDescription(),\n+\t\t\t\t\tCompatibility.getDate(banOnVo.getValidityTo().getTime()),\n+\t\t\t\t\tsess.getPerunPrincipal().getActor(),\n+\t\t\t\t\tsess.getPerunPrincipal().getUserId(),\n+\t\t\t\t\tbanOnVo.getId());\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\n+\t\treturn banOnVo;\n+\t}\n \n+\t@Override\n+\tpublic void removeBan(PerunSession sess, int banId) throws BanNotExistsException {\n+\t\ttry {\n+\t\t\tint numAffected = jdbc.update(\"delete from vos_bans where id=?\", banId);\n+\t\t\tif (numAffected != 1) {\n+\t\t\t\tthrow new BanNotExistsException(\"Ban with id \" + banId + \" can't be remove, because not exists yet.\");\n+\t\t\t}\n+\t\t} catch (RuntimeException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic boolean isMemberBanned(PerunSession sess, int memberId) {\n+\t\ttry {\n+\t\t\tint numberOfExistences = jdbc.queryForInt(\"select count(1) from vos_bans where member_id=?\", memberId);\n+\t\t\tif (numberOfExistences == 1) {\n+\t\t\t\treturn true;\n+\t\t\t} else if (numberOfExistences > 1) {\n+\t\t\t\tthrow new ConsistencyErrorException(\"Ban on member with ID=\" + memberId + \" exists more than once.\");\n+\t\t\t}\n+\t\t\treturn false;\n+\t\t} catch(EmptyResultDataAccessException ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIwMDE2MA=="}, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 171}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTYxNTg1OnYy", "diffSide": "RIGHT", "path": "perun-openapi/openapi.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzozODozNlrOHCVCOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyMDoyOFrOHC8elA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIwMzgzNQ==", "bodyText": "I think this operationId is wrong", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472203835", "createdAt": "2020-08-18T13:38:36Z", "author": {"login": "balcirakpeter"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -11309,6 +11342,103 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n+  /json/vosManager/setBan:\n+    post:\n+      tags:\n+        - VosManager\n+      operationId: getBanById", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MDA2OA==", "bodyText": "Yes, I have changed it.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r472850068", "createdAt": "2020-08-19T08:20:28Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -11309,6 +11342,103 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n+  /json/vosManager/setBan:\n+    post:\n+      tags:\n+        - VosManager\n+      operationId: getBanById", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIwMzgzNQ=="}, "originalCommit": {"oid": "b2b0eab087255beb8c9fa80775d04f16fee96983"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODg4NDQ3OnYy", "diffSide": "RIGHT", "path": "perun-base/src/main/java/cz/metacentrum/perun/audit/events/MembersManagerEvents/MemberUnsuspended.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyMzoyNFrOHMd-vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyMzoyNFrOHMd-vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNjE1Ng==", "bodyText": "We no longer recognize force engine events by the keyword forceit in the message, but rather by the object own interface EngineForceEvent. Please remove it from this message and also from MemberSuspended message. Constant from the Auditer class can be removed too. Also please update regex pattern in perun-ldapc.xml accordingly:\nfrom:\n<property name=\"pattern\" value=\"expired.$|disabled.$|invalidated.$|suspended #\"/>\nto:\n<property name=\"pattern\" value=\"expired.$|disabled.$|invalidated.$|suspended.$\"/>", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r482836156", "createdAt": "2020-09-03T09:23:24Z", "author": {"login": "zlamalp"}, "path": "perun-base/src/main/java/cz/metacentrum/perun/audit/events/MembersManagerEvents/MemberUnsuspended.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package cz.metacentrum.perun.audit.events.MembersManagerEvents;\n+\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.audit.events.EngineForceEvent;\n+import cz.metacentrum.perun.core.api.Member;\n+\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+public class MemberUnsuspended extends AuditEvent implements EngineForceEvent {\n+\n+\tprivate Member member;\n+\tprivate String engineForceKeyword;\n+\tprivate String message;\n+\n+\t@SuppressWarnings(\"unused\") // used by jackson mapper\n+\tpublic MemberUnsuspended() { }\n+\n+\tpublic MemberUnsuspended(Member member, String engineForceKeyword) {\n+\t\tthis.member = member;\n+\t\tthis.engineForceKeyword = engineForceKeyword;\n+\t\tthis.message = formatMessage(\"%s unsuspended #%s.\", member, engineForceKeyword);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945aee52e911ee12146961f13984adb580623358"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTE1ODE0OnYy", "diffSide": "RIGHT", "path": "perun-db/postgres.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDozNDowNlrOHMghug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDozNDowNlrOHMghug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3Nzg4Mg==", "bodyText": "I wonder, if this grant shouldn't be part of the changelog, but we never did this and never encountered any problem. So it question its own presence in the DB definition file.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r482877882", "createdAt": "2020-09-03T10:34:06Z", "author": {"login": "zlamalp"}, "path": "perun-db/postgres.sql", "diffHunk": "@@ -1706,13 +1726,14 @@ grant all on security_teams_facilities to perun;\n grant all on blacklists to perun;\n grant all on resources_bans to perun;\n grant all on facilities_bans to perun;\n+grant all on vos_bans to perun;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945aee52e911ee12146961f13984adb580623358"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTE3MjMxOnYy", "diffSide": "RIGHT", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDozODo0OFrOHMgqcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDozODo0OFrOHMgqcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4MDExNA==", "bodyText": "I think, that also unsuspendMember below should be marked as deprecated, since we should be managing Bans instead of member suspension now.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r482880114", "createdAt": "2020-09-03T10:38:48Z", "author": {"login": "zlamalp"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "diffHunk": "@@ -1154,6 +1154,7 @@ public Member call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t *\n \t * For almost unlimited time please use time in the far future.\n \t *\n+\t * @deprecated use vosManager setBan", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945aee52e911ee12146961f13984adb580623358"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTI0NTQyOnYy", "diffSide": "LEFT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDo1ODo1MVrOHMhVeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMTowODo1MVrOHMhpEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg5MTEyOA==", "bodyText": "Please update RPC javadoc of setStatus method, since it mentions SUSPENDED as one of possible statuses to be sent to the API.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r482891128", "createdAt": "2020-09-03T10:58:51Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -1425,9 +1436,6 @@ public Member setStatus(PerunSession sess, Member member, Status status) throws\n \t\t\tcase INVALID:\n \t\t\t\treturn invalidateMember(sess, member);\n \t\t\t//break;\n-\t\t\tcase SUSPENDED:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945aee52e911ee12146961f13984adb580623358"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg5NjE0Nw==", "bodyText": "This probably applies to the other methods from the members manager too, like getCompleteRichMembers etc.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r482896147", "createdAt": "2020-09-03T11:08:51Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -1425,9 +1436,6 @@ public Member setStatus(PerunSession sess, Member member, Status status) throws\n \t\t\tcase INVALID:\n \t\t\t\treturn invalidateMember(sess, member);\n \t\t\t//break;\n-\t\t\tcase SUSPENDED:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg5MTEyOA=="}, "originalCommit": {"oid": "945aee52e911ee12146961f13984adb580623358"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDQ1NjU4OnYy", "diffSide": "RIGHT", "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxODozNjo0OVrOHOGIZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDo0NzoyMlrOHPBl9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU0MjU2NA==", "bodyText": "If setStatus() method version with message param was removed, we should remove its docs completely.", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r484542564", "createdAt": "2020-09-07T18:36:49Z", "author": {"login": "zlamalp"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "diffHunk": "@@ -1122,18 +1122,20 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t/*#\n \t * Set membership status of a member.\n \t *\n+\t * @deprecated use vosManager setBan to suspend a member\n+\t *\n \t * @param member int Member <code>id</code>\n-\t * @param status String VALID | INVALID | SUSPENDED | EXPIRED | DISABLED\n-\t * @exampleParam status \"SUSPENDED\"\n+\t * @param status String VALID | INVALID | EXPIRED | DISABLED\n+\t * @exampleParam status \"VALID\"\n \t * @param message String reason for suspension", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70dfc99bc770ce653973bc900caba70117543689"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUxNjc4OQ==", "bodyText": "removed", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r485516789", "createdAt": "2020-09-09T10:47:22Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/MembersManagerMethod.java", "diffHunk": "@@ -1122,18 +1122,20 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t/*#\n \t * Set membership status of a member.\n \t *\n+\t * @deprecated use vosManager setBan to suspend a member\n+\t *\n \t * @param member int Member <code>id</code>\n-\t * @param status String VALID | INVALID | SUSPENDED | EXPIRED | DISABLED\n-\t * @exampleParam status \"SUSPENDED\"\n+\t * @param status String VALID | INVALID | EXPIRED | DISABLED\n+\t * @exampleParam status \"VALID\"\n \t * @param message String reason for suspension", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU0MjU2NA=="}, "originalCommit": {"oid": "70dfc99bc770ce653973bc900caba70117543689"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDQ2MzAzOnYy", "diffSide": "LEFT", "path": "perun-web-gui/src/main/java/cz/metacentrum/perun/webgui/tabs/memberstabs/ChangeStatusTabItem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxODo0MTo1NVrOHOGLvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDo0NzoyN1rOHPBmMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU0MzQyMQ==", "bodyText": "We can also remove whole usage of messageArea, since no other status change takes a message. Consequently we can simplify json/membersManager/SetStatus.java and remove message param from that callback (constructor, variable etc.).", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r484543421", "createdAt": "2020-09-07T18:41:55Z", "author": {"login": "zlamalp"}, "path": "perun-web-gui/src/main/java/cz/metacentrum/perun/webgui/tabs/memberstabs/ChangeStatusTabItem.java", "diffHunk": "@@ -90,7 +90,6 @@ public Widget draw() {\n \t\tfinal ListBox lb = new ListBox(false);\n \t\tlb.addItem(\"VALID\", \"VALID\");\n \t\tlb.addItem(\"INVALID\", \"INVALID\");\n-\t\tlb.addItem(\"SUSPENDED\", \"SUSPENDED\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70dfc99bc770ce653973bc900caba70117543689"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUxNjg0OQ==", "bodyText": "removed", "url": "https://github.com/CESNET/perun/pull/2848#discussion_r485516849", "createdAt": "2020-09-09T10:47:27Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-web-gui/src/main/java/cz/metacentrum/perun/webgui/tabs/memberstabs/ChangeStatusTabItem.java", "diffHunk": "@@ -90,7 +90,6 @@ public Widget draw() {\n \t\tfinal ListBox lb = new ListBox(false);\n \t\tlb.addItem(\"VALID\", \"VALID\");\n \t\tlb.addItem(\"INVALID\", \"INVALID\");\n-\t\tlb.addItem(\"SUSPENDED\", \"SUSPENDED\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU0MzQyMQ=="}, "originalCommit": {"oid": "70dfc99bc770ce653973bc900caba70117543689"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2409, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}