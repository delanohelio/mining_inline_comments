{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMzY1NTk4", "number": 2594, "title": "OpenAPI - service manager implemented", "bodyText": "service manager methods completed\nadded new schemas, responses, parameters", "createdAt": "2020-03-02T12:49:06Z", "url": "https://github.com/CESNET/perun/pull/2594", "merged": true, "mergeCommit": {"oid": "266574fcc1ac61c3ff91a26af8e83f9fbf5ccc03"}, "closed": true, "closedAt": "2020-03-16T13:37:13Z", "author": {"login": "xkureck"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ_DlUAFqTM2NzgxOTAxMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOMFhjgH2gAyMzgyMzY1NTk4OmM5ZGNmNmYwMmFjNjk4ZjQyN2UxOWM5YjJmMjZmMjU5YWQ3N2IyOGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODE5MDEz", "url": "https://github.com/CESNET/perun/pull/2594#pullrequestreview-367819013", "createdAt": "2020-03-03T09:28:43Z", "commit": {"oid": "7413faec8ccfa8e1fd761abe1a7204d1eb599860"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOToyODo0M1rOFw-EzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTozNDozOFrOFw-SWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg5MzAwNQ==", "bodyText": "There is an already created schema named attributes. You can reuse it here. Moreover, when passing a list of values in a URL parameter, the name of the parameter should end with the [] brackets.", "url": "https://github.com/CESNET/perun/pull/2594#discussion_r386893005", "createdAt": "2020-03-03T09:28:43Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -8290,296 +8354,1032 @@ paths:\n   #################################################\n   #                                               #\n   # ServicesManager                               #\n-  #  (complete with TODOs)                        #\n+  #                                               #\n   #################################################\n \n-  #TODO blockServiceOnFacility\n-\n-  #TODO blockServiceOnDestination\n-\n-  #TODO blockAllServicesOnFacility\n-\n-  #TODO blockAllServicesOnDestination\n-\n-  #TODO getServicesBlockedOnFacility\n-\n-  #TODO getServicesBlockedOnDestination\n-\n-  #TODO isServiceBlockedOnFacility\n-\n-  #TODO isServiceBlockedOnDestination\n-\n-  #TODO unblockAllServicesOnFacility\n-\n-  #TODO unblockAllServicesOnDestination\n-\n-  #TODO unblockServiceOnFacility\n-\n-  #TODO unblockServiceOnDestination\n-\n-  #TODO forceServicePropagation\n-\n-  #TODO planServicePropagation\n-\n-  #TODO getFacilityAssignedServicesForGUI\n-\n-  #TODO createService\n-\n-  #TODO deleteService\n-\n-  #TODO updateService\n-\n-  /json/servicesManager/getServiceById:\n-    get:\n+  /urlinjsonout/servicesManager/blockServiceOnFacility:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getServiceById\n-      summary: Returns a service by its id.\n+      operationId: blockServiceOnFacility\n+      summary: Bans service on a facility.\n       parameters:\n-        - $ref: '#/components/parameters/id'\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ServiceResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getServiceByName:\n-    get:\n+  /urlinjsonout/servicesManager/blockServiceOnDestination/s-d:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getServiceByName\n-      summary: Returns a service by its name.\n+      operationId: blockServiceOnDestination\n+      summary: Bans Service on a destination.\n       parameters:\n-        - name: name\n-          description: name of service\n-          required: true\n-          in: query\n-          schema:\n-            type: string\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ServiceResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getServices\n-\n-  #TODO getServicesByAttributeDefinition\n-\n-  #TODO getHierarchicalData\n-\n-  #TODO getFlatData\n-\n-  #TODO getDataWithGroups\n-\n-  #TODO getDataWithVos\n-\n-  #TODO getServicesPackages\n-\n-  #TODO getServicesPackageById\n-\n-  #TODO getServicesPackageByName\n-\n-  #TODO createServicesPackage\n-\n-  #TODO deleteServicesPackage\n-\n-  #TODO updateServicesPackage\n-\n-  #TODO addServiceToServicesPackage\n-\n-  #TODO removeServiceFromServicesPackage\n-\n-  #TODO getServicesFromServicesPackage\n-\n-  #TODO addRequiredAttribute\n-\n-  #TODO addRequiredAttributes\n-\n-  #TODO removeRequiredAttribute\n-\n-  #TODO removeRequiredAttributes\n+  /urlinjsonout/servicesManager/blockServiceOnDestination/s-dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: blockServiceOnDestinationWithNameAndType\n+      summary: Bans Service on a destination.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO removeAllRequiredAttributes\n+  /urlinjsonout/servicesManager/blockAllServicesOnFacility:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: blockAllServicesOnFacility\n+      summary: Block all services currently assigned on this facility.\n+              Newly assigned services are still allowed for propagation.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinationById:\n-    get:\n+  /urlinjsonout/servicesManager/blockAllServicesOnDestination/d:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getDestinationById\n-      summary: Returns a destination by its id.\n+      operationId: blockAllServicesOnDestinationById\n+      summary: Block all services currently assigned on this destination.\n+               Newly assigned services are still allowed for propagation.\n       parameters:\n-        - $ref: '#/components/parameters/id'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinations/s-f:\n-    get:\n+  /urlinjsonout/servicesManager/blockAllServicesOnDestination/dname-dtype:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getDestinations\n-      summary: Returns list of all destinations defined for the service and facility.\n+      operationId: blockAllServicesOnDestinationByName\n+      summary: Block all services currently assigned on this destination.\n+        Newly assigned services are still allowed for propagation.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfDestinationsResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinations/all:\n+  /json/servicesManager/getServicesBlockedOnFacility:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getAllDestinations\n-      summary: Get list of all destinations.\n+      operationId: getServicesBlockedOnFacility\n+      summary: Returns list of denials for a facility.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfDestinationsResponse'\n+          $ref: '#/components/responses/ListOfServicesResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-\n-  /json/servicesManager/getAllRichDestinations/s:\n+  /json/servicesManager/getServicesBlockedOnDestination:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinationsForService\n-      summary: Returns list of all rich destinations defined for the service.\n+      operationId: getServicesBlockedOnDestination\n+      summary: Returns list of denials for a destination.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/ListOfServicesResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getAllRichDestinations/f:\n+  /json/servicesManager/isServiceBlockedOnFacility:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinationsForFacility\n-      summary: Returns list of all rich destinations defined for the facility.\n+      operationId: isServiceBlockedOnFacility\n+      summary: Is this Service denied on the facility?\n+        Return int 1 = true - the Service is denied on the facility, 0 = false - the Service is NOT denied on the facility\n       parameters:\n+        - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/IntegerResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getRichDestinations:\n+  /json/servicesManager/isServiceBlockedOnDestination:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinations\n-      summary: Returns list of all rich destinations defined for the service and facility.\n+      operationId: isServiceBlockedOnDestination\n+      summary: Is this Service denied on the destination?\n+        Return int 1 = true - the Service is denied on the destination, 0 = false - the Service is NOT denied on the destination\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/IntegerResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/addDestination:\n+  /urlinjsonout/servicesManager/unblockAllServicesOnFacility:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: addDestination\n-      summary: Adds an destination for a facility and service. If destination doesn't exist it will be created.\n+      operationId: unblockAllServicesOnFacility\n+      summary: Erase all the possible denials on this facility.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n-        - { name: destination, description: \"Destination's destination, usually a DNS name\", schema: { type: string },  in: query, required: true }\n-        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n-        - { name: propagationType, description: \"Destination's propagationType\", schema: { $ref: '#/components/schemas/DestinationPropagationType' },  in: query, required: true }\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/addDestination:\n+  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/d:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: addDestinationToMultipleServices\n-      description: Adds an destination for a facility and list of services. If destination doesn't exist it will be created.\n+      operationId: unblockAllServicesOnDestinationById\n+      summary: Erase all the possible denials on this destination.\n+      parameters:\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n-      requestBody:\n-        required: true\n-        content:\n-          application/json:\n-            schema:\n-              title: InputAddDestinationToMultipleServices\n-              description: \"input to addDestinationToMultipleServices\"\n-              type: object\n-              required:\n-                - services\n-                - facility\n-                - destination\n-                - type\n-                - propagationType\n-              properties:\n-                services:\n-                  type: array\n-                  items:\n-                    $ref: '#/components/schemas/Service'\n-                facility: { type: integer }\n-                destination: { type: string }\n-                type: { $ref: '#/components/schemas/DestinationType' }\n-                propagationType: { $ref: '#/components/schemas/DestinationPropagationType' }\n-\n \n-  #TODO addDestinationsForAllServicesOnFacility\n-\n-  #TODO addDestinationsDefinedByHostsOnFacility\n+  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: unblockAllServicesOnDestinationByName\n+      summary: Erase all the possible denials on this destination.\n+      parameters:\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/removeDestination:\n+  /urlinjsonout/servicesManager/unblockServiceOnFacility:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: removeDestination\n-      summary: Removes the specified destination from the facility and service.\n+      operationId: unblockServiceOnFacility\n+      summary: Free the denial of the Service on this facility. If the Service was banned\n+              on this facility, it will be freed. In case the Service was not banned on\n+              this facility, nothing will happen.\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n-        - { name: destination, description: \"Destination's destination\", schema: { type: string },  in: query, required: true }\n-        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n       responses:\n         '200':\n           $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/removeAllDestinations:\n+  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-d:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: removeAllDestinations\n-      summary: Removes all destinations from a facility and service.\n+      operationId: unblockServiceOnDestinationById\n+      summary: Free the denial of the Service on this destination. If the Service was banned on\n+         this destination, it will be freed. In case the Service was not banned on this\n+         destination, nothing will happen.\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: unblockServiceOnDestinationByName\n+      summary: Free the denial of the Service on this destination. If the Service was banned on\n+        this destination, it will be freed. In case the Service was not banned on this\n+        destination, nothing will happen.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n       responses:\n         '200':\n           $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getFacilitiesDestinations\n+  /urlinjsonout/servicesManager/forceServicePropagation:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: forceServicePropagation\n+      summary: Forces service propagation on defined facility.\n+              Return int 1 = true if it is possible, 0 = false if not\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/optionalFacilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getDestinationsCount\n+  /urlinjsonout/servicesManager/planServicePropagation:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: planServicePropagation\n+      summary: Plans service propagation on defined facility.\n+        Return int 1 = true if it is possible, 0 = false if not\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/optionalFacilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getFacilityAssignedServicesForGUI:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getFacilityAssignedServicesForGUI\n+      summary: Return list of ServiceForGUI assigned on facility, (Service with \"allowedOnFacility\" property filled).\n+              1 - allowed / 0 - service is service is denied.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServiceForGUIResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/createService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServiceWithService\n+      summary: Creates a new service.\n+        Service object must contain name. Parameters desctiption, script, delay, recurrence, enabled are optional. Other parameters ignored.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputCreateService\n+              description: \"input to createService\"\n+              type: object\n+              required:\n+                - service\n+              properties:\n+                service: { $ref: '#/components/schemas/Service' }\n+\n+  /urlinjsonout/servicesManager/createService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createService\n+      summary: Creates a new service.\n+      parameters:\n+        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n+        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n+        - { name: script, description: \"script which should be constructed like ./service_name (where anything else than [a-z,A-Z] is converted to _)\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/deleteService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: deleteService\n+      summary: Deletes a service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/updateService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: updateService\n+      summary: Updates a service.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputUpdateService\n+              description: \"input to updateService\"\n+              type: object\n+              required:\n+                - service\n+              properties:\n+                service: { $ref: '#/components/schemas/Service' }\n+\n+  /json/servicesManager/getServiceById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServiceById\n+      summary: Returns a service by its id.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServiceByName:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServiceByName\n+      summary: Returns a service by its name.\n+      parameters:\n+        - name: name\n+          description: name of service\n+          required: true\n+          in: query\n+          schema:\n+            type: string\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServices:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServices\n+      summary: Returns all services.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesByAttributeDefinition:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesByAttributeDefinition\n+      summary: Get all services with given attribute.\n+      parameters:\n+        - $ref: '#/components/parameters/attributeDefinitionId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getHierarchicalData:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getHierarchicalData\n+      summary: Generates the list of attributes per each member associated with the resource.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getFlatData:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getFlatData\n+      summary: Generates the list of attributes per each user and per each resource. Never return member or member-resource attribute.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDataWithGroups:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDataWithGroups\n+      summary: Generates the list of attributes per each member associated with the resources and groups.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDataWithVos:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDataWithVos\n+      summary: Generates the list of attributes per each member associated with the resources and groups in vos.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackages:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackages\n+      summary: Returns packages.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackageById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackageById\n+      summary: Gets package by id.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackageByName:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackageByName\n+      summary: Gets package by name.\n+      parameters:\n+        - { name: name, description: \"ServicesPackage name\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/createServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServicesPackage\n+      summary: Creates a new services package.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              type: object\n+              title: InputCreateServicesPackage\n+              description: Input to createServicesPackage\n+              required:\n+                - servicesPackage\n+              properties:\n+                servicesPackage:\n+                  $ref: '#/components/schemas/ServicesPackage'\n+\n+  /urlinjsonout/servicesManager/createServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServicesPackageByNameAndDescription\n+      summary: Creates a new services package.\n+      parameters:\n+        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n+        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/deleteServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: deleteServicesPackage\n+      summary: Deletes a services package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/updateServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: updateServicesPackage\n+      summary: Updates a service package.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              type: object\n+              title: InputUpdateServicesPackage\n+              description: Input to updateServicesPackage\n+              required:\n+                - servicesPackage\n+              properties:\n+                servicesPackage:\n+                  $ref: '#/components/schemas/ServicesPackage'\n+\n+  /urlinjsonout/servicesManager/addServiceToServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addServiceToServicesPackage\n+      summary: Adds a Service to a Services Package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeServiceFromServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeServiceFromServicesPackage\n+      summary: Removes a Service from a Services Package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesFromServicesPackage:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesFromServicesPackage\n+      summary: Lists services stored in a package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addRequiredAttribute:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addRequiredAttribute\n+      summary: Mark the attribute as required for the service. Required attributes are requisite for Service to run.\n+           If you add attribute which has a default attribute then this default attribute will be automatically add too.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/attributeId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addRequiredAttributes:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addRequiredAttributes\n+      summary: Batch version of addRequiredAttribute.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - name: attributes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7413faec8ccfa8e1fd761abe1a7204d1eb599860"}, "originalPosition": 965}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg5MzI1OQ==", "bodyText": "Same here.", "url": "https://github.com/CESNET/perun/pull/2594#discussion_r386893259", "createdAt": "2020-03-03T09:29:12Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -8290,296 +8354,1032 @@ paths:\n   #################################################\n   #                                               #\n   # ServicesManager                               #\n-  #  (complete with TODOs)                        #\n+  #                                               #\n   #################################################\n \n-  #TODO blockServiceOnFacility\n-\n-  #TODO blockServiceOnDestination\n-\n-  #TODO blockAllServicesOnFacility\n-\n-  #TODO blockAllServicesOnDestination\n-\n-  #TODO getServicesBlockedOnFacility\n-\n-  #TODO getServicesBlockedOnDestination\n-\n-  #TODO isServiceBlockedOnFacility\n-\n-  #TODO isServiceBlockedOnDestination\n-\n-  #TODO unblockAllServicesOnFacility\n-\n-  #TODO unblockAllServicesOnDestination\n-\n-  #TODO unblockServiceOnFacility\n-\n-  #TODO unblockServiceOnDestination\n-\n-  #TODO forceServicePropagation\n-\n-  #TODO planServicePropagation\n-\n-  #TODO getFacilityAssignedServicesForGUI\n-\n-  #TODO createService\n-\n-  #TODO deleteService\n-\n-  #TODO updateService\n-\n-  /json/servicesManager/getServiceById:\n-    get:\n+  /urlinjsonout/servicesManager/blockServiceOnFacility:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getServiceById\n-      summary: Returns a service by its id.\n+      operationId: blockServiceOnFacility\n+      summary: Bans service on a facility.\n       parameters:\n-        - $ref: '#/components/parameters/id'\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ServiceResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getServiceByName:\n-    get:\n+  /urlinjsonout/servicesManager/blockServiceOnDestination/s-d:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getServiceByName\n-      summary: Returns a service by its name.\n+      operationId: blockServiceOnDestination\n+      summary: Bans Service on a destination.\n       parameters:\n-        - name: name\n-          description: name of service\n-          required: true\n-          in: query\n-          schema:\n-            type: string\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ServiceResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getServices\n-\n-  #TODO getServicesByAttributeDefinition\n-\n-  #TODO getHierarchicalData\n-\n-  #TODO getFlatData\n-\n-  #TODO getDataWithGroups\n-\n-  #TODO getDataWithVos\n-\n-  #TODO getServicesPackages\n-\n-  #TODO getServicesPackageById\n-\n-  #TODO getServicesPackageByName\n-\n-  #TODO createServicesPackage\n-\n-  #TODO deleteServicesPackage\n-\n-  #TODO updateServicesPackage\n-\n-  #TODO addServiceToServicesPackage\n-\n-  #TODO removeServiceFromServicesPackage\n-\n-  #TODO getServicesFromServicesPackage\n-\n-  #TODO addRequiredAttribute\n-\n-  #TODO addRequiredAttributes\n-\n-  #TODO removeRequiredAttribute\n-\n-  #TODO removeRequiredAttributes\n+  /urlinjsonout/servicesManager/blockServiceOnDestination/s-dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: blockServiceOnDestinationWithNameAndType\n+      summary: Bans Service on a destination.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO removeAllRequiredAttributes\n+  /urlinjsonout/servicesManager/blockAllServicesOnFacility:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: blockAllServicesOnFacility\n+      summary: Block all services currently assigned on this facility.\n+              Newly assigned services are still allowed for propagation.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinationById:\n-    get:\n+  /urlinjsonout/servicesManager/blockAllServicesOnDestination/d:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getDestinationById\n-      summary: Returns a destination by its id.\n+      operationId: blockAllServicesOnDestinationById\n+      summary: Block all services currently assigned on this destination.\n+               Newly assigned services are still allowed for propagation.\n       parameters:\n-        - $ref: '#/components/parameters/id'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinations/s-f:\n-    get:\n+  /urlinjsonout/servicesManager/blockAllServicesOnDestination/dname-dtype:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getDestinations\n-      summary: Returns list of all destinations defined for the service and facility.\n+      operationId: blockAllServicesOnDestinationByName\n+      summary: Block all services currently assigned on this destination.\n+        Newly assigned services are still allowed for propagation.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfDestinationsResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinations/all:\n+  /json/servicesManager/getServicesBlockedOnFacility:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getAllDestinations\n-      summary: Get list of all destinations.\n+      operationId: getServicesBlockedOnFacility\n+      summary: Returns list of denials for a facility.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfDestinationsResponse'\n+          $ref: '#/components/responses/ListOfServicesResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-\n-  /json/servicesManager/getAllRichDestinations/s:\n+  /json/servicesManager/getServicesBlockedOnDestination:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinationsForService\n-      summary: Returns list of all rich destinations defined for the service.\n+      operationId: getServicesBlockedOnDestination\n+      summary: Returns list of denials for a destination.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/ListOfServicesResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getAllRichDestinations/f:\n+  /json/servicesManager/isServiceBlockedOnFacility:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinationsForFacility\n-      summary: Returns list of all rich destinations defined for the facility.\n+      operationId: isServiceBlockedOnFacility\n+      summary: Is this Service denied on the facility?\n+        Return int 1 = true - the Service is denied on the facility, 0 = false - the Service is NOT denied on the facility\n       parameters:\n+        - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/IntegerResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getRichDestinations:\n+  /json/servicesManager/isServiceBlockedOnDestination:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinations\n-      summary: Returns list of all rich destinations defined for the service and facility.\n+      operationId: isServiceBlockedOnDestination\n+      summary: Is this Service denied on the destination?\n+        Return int 1 = true - the Service is denied on the destination, 0 = false - the Service is NOT denied on the destination\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/IntegerResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/addDestination:\n+  /urlinjsonout/servicesManager/unblockAllServicesOnFacility:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: addDestination\n-      summary: Adds an destination for a facility and service. If destination doesn't exist it will be created.\n+      operationId: unblockAllServicesOnFacility\n+      summary: Erase all the possible denials on this facility.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n-        - { name: destination, description: \"Destination's destination, usually a DNS name\", schema: { type: string },  in: query, required: true }\n-        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n-        - { name: propagationType, description: \"Destination's propagationType\", schema: { $ref: '#/components/schemas/DestinationPropagationType' },  in: query, required: true }\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/addDestination:\n+  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/d:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: addDestinationToMultipleServices\n-      description: Adds an destination for a facility and list of services. If destination doesn't exist it will be created.\n+      operationId: unblockAllServicesOnDestinationById\n+      summary: Erase all the possible denials on this destination.\n+      parameters:\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n-      requestBody:\n-        required: true\n-        content:\n-          application/json:\n-            schema:\n-              title: InputAddDestinationToMultipleServices\n-              description: \"input to addDestinationToMultipleServices\"\n-              type: object\n-              required:\n-                - services\n-                - facility\n-                - destination\n-                - type\n-                - propagationType\n-              properties:\n-                services:\n-                  type: array\n-                  items:\n-                    $ref: '#/components/schemas/Service'\n-                facility: { type: integer }\n-                destination: { type: string }\n-                type: { $ref: '#/components/schemas/DestinationType' }\n-                propagationType: { $ref: '#/components/schemas/DestinationPropagationType' }\n-\n \n-  #TODO addDestinationsForAllServicesOnFacility\n-\n-  #TODO addDestinationsDefinedByHostsOnFacility\n+  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: unblockAllServicesOnDestinationByName\n+      summary: Erase all the possible denials on this destination.\n+      parameters:\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/removeDestination:\n+  /urlinjsonout/servicesManager/unblockServiceOnFacility:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: removeDestination\n-      summary: Removes the specified destination from the facility and service.\n+      operationId: unblockServiceOnFacility\n+      summary: Free the denial of the Service on this facility. If the Service was banned\n+              on this facility, it will be freed. In case the Service was not banned on\n+              this facility, nothing will happen.\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n-        - { name: destination, description: \"Destination's destination\", schema: { type: string },  in: query, required: true }\n-        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n       responses:\n         '200':\n           $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/removeAllDestinations:\n+  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-d:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: removeAllDestinations\n-      summary: Removes all destinations from a facility and service.\n+      operationId: unblockServiceOnDestinationById\n+      summary: Free the denial of the Service on this destination. If the Service was banned on\n+         this destination, it will be freed. In case the Service was not banned on this\n+         destination, nothing will happen.\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: unblockServiceOnDestinationByName\n+      summary: Free the denial of the Service on this destination. If the Service was banned on\n+        this destination, it will be freed. In case the Service was not banned on this\n+        destination, nothing will happen.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n       responses:\n         '200':\n           $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getFacilitiesDestinations\n+  /urlinjsonout/servicesManager/forceServicePropagation:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: forceServicePropagation\n+      summary: Forces service propagation on defined facility.\n+              Return int 1 = true if it is possible, 0 = false if not\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/optionalFacilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getDestinationsCount\n+  /urlinjsonout/servicesManager/planServicePropagation:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: planServicePropagation\n+      summary: Plans service propagation on defined facility.\n+        Return int 1 = true if it is possible, 0 = false if not\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/optionalFacilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getFacilityAssignedServicesForGUI:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getFacilityAssignedServicesForGUI\n+      summary: Return list of ServiceForGUI assigned on facility, (Service with \"allowedOnFacility\" property filled).\n+              1 - allowed / 0 - service is service is denied.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServiceForGUIResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/createService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServiceWithService\n+      summary: Creates a new service.\n+        Service object must contain name. Parameters desctiption, script, delay, recurrence, enabled are optional. Other parameters ignored.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputCreateService\n+              description: \"input to createService\"\n+              type: object\n+              required:\n+                - service\n+              properties:\n+                service: { $ref: '#/components/schemas/Service' }\n+\n+  /urlinjsonout/servicesManager/createService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createService\n+      summary: Creates a new service.\n+      parameters:\n+        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n+        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n+        - { name: script, description: \"script which should be constructed like ./service_name (where anything else than [a-z,A-Z] is converted to _)\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/deleteService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: deleteService\n+      summary: Deletes a service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/updateService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: updateService\n+      summary: Updates a service.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputUpdateService\n+              description: \"input to updateService\"\n+              type: object\n+              required:\n+                - service\n+              properties:\n+                service: { $ref: '#/components/schemas/Service' }\n+\n+  /json/servicesManager/getServiceById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServiceById\n+      summary: Returns a service by its id.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServiceByName:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServiceByName\n+      summary: Returns a service by its name.\n+      parameters:\n+        - name: name\n+          description: name of service\n+          required: true\n+          in: query\n+          schema:\n+            type: string\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServices:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServices\n+      summary: Returns all services.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesByAttributeDefinition:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesByAttributeDefinition\n+      summary: Get all services with given attribute.\n+      parameters:\n+        - $ref: '#/components/parameters/attributeDefinitionId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getHierarchicalData:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getHierarchicalData\n+      summary: Generates the list of attributes per each member associated with the resource.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getFlatData:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getFlatData\n+      summary: Generates the list of attributes per each user and per each resource. Never return member or member-resource attribute.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDataWithGroups:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDataWithGroups\n+      summary: Generates the list of attributes per each member associated with the resources and groups.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDataWithVos:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDataWithVos\n+      summary: Generates the list of attributes per each member associated with the resources and groups in vos.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackages:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackages\n+      summary: Returns packages.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackageById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackageById\n+      summary: Gets package by id.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackageByName:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackageByName\n+      summary: Gets package by name.\n+      parameters:\n+        - { name: name, description: \"ServicesPackage name\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/createServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServicesPackage\n+      summary: Creates a new services package.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              type: object\n+              title: InputCreateServicesPackage\n+              description: Input to createServicesPackage\n+              required:\n+                - servicesPackage\n+              properties:\n+                servicesPackage:\n+                  $ref: '#/components/schemas/ServicesPackage'\n+\n+  /urlinjsonout/servicesManager/createServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServicesPackageByNameAndDescription\n+      summary: Creates a new services package.\n+      parameters:\n+        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n+        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/deleteServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: deleteServicesPackage\n+      summary: Deletes a services package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/updateServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: updateServicesPackage\n+      summary: Updates a service package.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              type: object\n+              title: InputUpdateServicesPackage\n+              description: Input to updateServicesPackage\n+              required:\n+                - servicesPackage\n+              properties:\n+                servicesPackage:\n+                  $ref: '#/components/schemas/ServicesPackage'\n+\n+  /urlinjsonout/servicesManager/addServiceToServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addServiceToServicesPackage\n+      summary: Adds a Service to a Services Package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeServiceFromServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeServiceFromServicesPackage\n+      summary: Removes a Service from a Services Package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesFromServicesPackage:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesFromServicesPackage\n+      summary: Lists services stored in a package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addRequiredAttribute:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addRequiredAttribute\n+      summary: Mark the attribute as required for the service. Required attributes are requisite for Service to run.\n+           If you add attribute which has a default attribute then this default attribute will be automatically add too.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/attributeId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addRequiredAttributes:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addRequiredAttributes\n+      summary: Batch version of addRequiredAttribute.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - name: attributes\n+          description: 'Attribute IDs'\n+          schema:\n+            type: array\n+            items:\n+              type: integer\n+          in: query\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeRequiredAttribute:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeRequiredAttribute\n+      summary: Remove required attribute from service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/attributeId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeRequiredAttributes:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeRequiredAttributes\n+      summary: Remove required attributes from service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - name: attributes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7413faec8ccfa8e1fd761abe1a7204d1eb599860"}, "originalPosition": 1002}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg5NjQ3Mg==", "bodyText": "If all of the possible input fields are required, it is impossible to call this method with only some of them, which is actually allowed by the implementation. You should probably split this method into multiple versions.", "url": "https://github.com/CESNET/perun/pull/2594#discussion_r386896472", "createdAt": "2020-03-03T09:34:38Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -8290,296 +8354,1032 @@ paths:\n   #################################################\n   #                                               #\n   # ServicesManager                               #\n-  #  (complete with TODOs)                        #\n+  #                                               #\n   #################################################\n \n-  #TODO blockServiceOnFacility\n-\n-  #TODO blockServiceOnDestination\n-\n-  #TODO blockAllServicesOnFacility\n-\n-  #TODO blockAllServicesOnDestination\n-\n-  #TODO getServicesBlockedOnFacility\n-\n-  #TODO getServicesBlockedOnDestination\n-\n-  #TODO isServiceBlockedOnFacility\n-\n-  #TODO isServiceBlockedOnDestination\n-\n-  #TODO unblockAllServicesOnFacility\n-\n-  #TODO unblockAllServicesOnDestination\n-\n-  #TODO unblockServiceOnFacility\n-\n-  #TODO unblockServiceOnDestination\n-\n-  #TODO forceServicePropagation\n-\n-  #TODO planServicePropagation\n-\n-  #TODO getFacilityAssignedServicesForGUI\n-\n-  #TODO createService\n-\n-  #TODO deleteService\n-\n-  #TODO updateService\n-\n-  /json/servicesManager/getServiceById:\n-    get:\n+  /urlinjsonout/servicesManager/blockServiceOnFacility:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getServiceById\n-      summary: Returns a service by its id.\n+      operationId: blockServiceOnFacility\n+      summary: Bans service on a facility.\n       parameters:\n-        - $ref: '#/components/parameters/id'\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ServiceResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getServiceByName:\n-    get:\n+  /urlinjsonout/servicesManager/blockServiceOnDestination/s-d:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getServiceByName\n-      summary: Returns a service by its name.\n+      operationId: blockServiceOnDestination\n+      summary: Bans Service on a destination.\n       parameters:\n-        - name: name\n-          description: name of service\n-          required: true\n-          in: query\n-          schema:\n-            type: string\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ServiceResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getServices\n-\n-  #TODO getServicesByAttributeDefinition\n-\n-  #TODO getHierarchicalData\n-\n-  #TODO getFlatData\n-\n-  #TODO getDataWithGroups\n-\n-  #TODO getDataWithVos\n-\n-  #TODO getServicesPackages\n-\n-  #TODO getServicesPackageById\n-\n-  #TODO getServicesPackageByName\n-\n-  #TODO createServicesPackage\n-\n-  #TODO deleteServicesPackage\n-\n-  #TODO updateServicesPackage\n-\n-  #TODO addServiceToServicesPackage\n-\n-  #TODO removeServiceFromServicesPackage\n-\n-  #TODO getServicesFromServicesPackage\n-\n-  #TODO addRequiredAttribute\n-\n-  #TODO addRequiredAttributes\n-\n-  #TODO removeRequiredAttribute\n-\n-  #TODO removeRequiredAttributes\n+  /urlinjsonout/servicesManager/blockServiceOnDestination/s-dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: blockServiceOnDestinationWithNameAndType\n+      summary: Bans Service on a destination.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO removeAllRequiredAttributes\n+  /urlinjsonout/servicesManager/blockAllServicesOnFacility:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: blockAllServicesOnFacility\n+      summary: Block all services currently assigned on this facility.\n+              Newly assigned services are still allowed for propagation.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinationById:\n-    get:\n+  /urlinjsonout/servicesManager/blockAllServicesOnDestination/d:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getDestinationById\n-      summary: Returns a destination by its id.\n+      operationId: blockAllServicesOnDestinationById\n+      summary: Block all services currently assigned on this destination.\n+               Newly assigned services are still allowed for propagation.\n       parameters:\n-        - $ref: '#/components/parameters/id'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinations/s-f:\n-    get:\n+  /urlinjsonout/servicesManager/blockAllServicesOnDestination/dname-dtype:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getDestinations\n-      summary: Returns list of all destinations defined for the service and facility.\n+      operationId: blockAllServicesOnDestinationByName\n+      summary: Block all services currently assigned on this destination.\n+        Newly assigned services are still allowed for propagation.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfDestinationsResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinations/all:\n+  /json/servicesManager/getServicesBlockedOnFacility:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getAllDestinations\n-      summary: Get list of all destinations.\n+      operationId: getServicesBlockedOnFacility\n+      summary: Returns list of denials for a facility.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfDestinationsResponse'\n+          $ref: '#/components/responses/ListOfServicesResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-\n-  /json/servicesManager/getAllRichDestinations/s:\n+  /json/servicesManager/getServicesBlockedOnDestination:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinationsForService\n-      summary: Returns list of all rich destinations defined for the service.\n+      operationId: getServicesBlockedOnDestination\n+      summary: Returns list of denials for a destination.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/ListOfServicesResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getAllRichDestinations/f:\n+  /json/servicesManager/isServiceBlockedOnFacility:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinationsForFacility\n-      summary: Returns list of all rich destinations defined for the facility.\n+      operationId: isServiceBlockedOnFacility\n+      summary: Is this Service denied on the facility?\n+        Return int 1 = true - the Service is denied on the facility, 0 = false - the Service is NOT denied on the facility\n       parameters:\n+        - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/IntegerResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getRichDestinations:\n+  /json/servicesManager/isServiceBlockedOnDestination:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinations\n-      summary: Returns list of all rich destinations defined for the service and facility.\n+      operationId: isServiceBlockedOnDestination\n+      summary: Is this Service denied on the destination?\n+        Return int 1 = true - the Service is denied on the destination, 0 = false - the Service is NOT denied on the destination\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/IntegerResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/addDestination:\n+  /urlinjsonout/servicesManager/unblockAllServicesOnFacility:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: addDestination\n-      summary: Adds an destination for a facility and service. If destination doesn't exist it will be created.\n+      operationId: unblockAllServicesOnFacility\n+      summary: Erase all the possible denials on this facility.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n-        - { name: destination, description: \"Destination's destination, usually a DNS name\", schema: { type: string },  in: query, required: true }\n-        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n-        - { name: propagationType, description: \"Destination's propagationType\", schema: { $ref: '#/components/schemas/DestinationPropagationType' },  in: query, required: true }\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/addDestination:\n+  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/d:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: addDestinationToMultipleServices\n-      description: Adds an destination for a facility and list of services. If destination doesn't exist it will be created.\n+      operationId: unblockAllServicesOnDestinationById\n+      summary: Erase all the possible denials on this destination.\n+      parameters:\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n-      requestBody:\n-        required: true\n-        content:\n-          application/json:\n-            schema:\n-              title: InputAddDestinationToMultipleServices\n-              description: \"input to addDestinationToMultipleServices\"\n-              type: object\n-              required:\n-                - services\n-                - facility\n-                - destination\n-                - type\n-                - propagationType\n-              properties:\n-                services:\n-                  type: array\n-                  items:\n-                    $ref: '#/components/schemas/Service'\n-                facility: { type: integer }\n-                destination: { type: string }\n-                type: { $ref: '#/components/schemas/DestinationType' }\n-                propagationType: { $ref: '#/components/schemas/DestinationPropagationType' }\n-\n \n-  #TODO addDestinationsForAllServicesOnFacility\n-\n-  #TODO addDestinationsDefinedByHostsOnFacility\n+  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: unblockAllServicesOnDestinationByName\n+      summary: Erase all the possible denials on this destination.\n+      parameters:\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/removeDestination:\n+  /urlinjsonout/servicesManager/unblockServiceOnFacility:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: removeDestination\n-      summary: Removes the specified destination from the facility and service.\n+      operationId: unblockServiceOnFacility\n+      summary: Free the denial of the Service on this facility. If the Service was banned\n+              on this facility, it will be freed. In case the Service was not banned on\n+              this facility, nothing will happen.\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n-        - { name: destination, description: \"Destination's destination\", schema: { type: string },  in: query, required: true }\n-        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n       responses:\n         '200':\n           $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/removeAllDestinations:\n+  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-d:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: removeAllDestinations\n-      summary: Removes all destinations from a facility and service.\n+      operationId: unblockServiceOnDestinationById\n+      summary: Free the denial of the Service on this destination. If the Service was banned on\n+         this destination, it will be freed. In case the Service was not banned on this\n+         destination, nothing will happen.\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: unblockServiceOnDestinationByName\n+      summary: Free the denial of the Service on this destination. If the Service was banned on\n+        this destination, it will be freed. In case the Service was not banned on this\n+        destination, nothing will happen.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n       responses:\n         '200':\n           $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getFacilitiesDestinations\n+  /urlinjsonout/servicesManager/forceServicePropagation:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: forceServicePropagation\n+      summary: Forces service propagation on defined facility.\n+              Return int 1 = true if it is possible, 0 = false if not\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/optionalFacilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getDestinationsCount\n+  /urlinjsonout/servicesManager/planServicePropagation:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: planServicePropagation\n+      summary: Plans service propagation on defined facility.\n+        Return int 1 = true if it is possible, 0 = false if not\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/optionalFacilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getFacilityAssignedServicesForGUI:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getFacilityAssignedServicesForGUI\n+      summary: Return list of ServiceForGUI assigned on facility, (Service with \"allowedOnFacility\" property filled).\n+              1 - allowed / 0 - service is service is denied.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServiceForGUIResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/createService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServiceWithService\n+      summary: Creates a new service.\n+        Service object must contain name. Parameters desctiption, script, delay, recurrence, enabled are optional. Other parameters ignored.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputCreateService\n+              description: \"input to createService\"\n+              type: object\n+              required:\n+                - service\n+              properties:\n+                service: { $ref: '#/components/schemas/Service' }\n+\n+  /urlinjsonout/servicesManager/createService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createService\n+      summary: Creates a new service.\n+      parameters:\n+        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n+        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n+        - { name: script, description: \"script which should be constructed like ./service_name (where anything else than [a-z,A-Z] is converted to _)\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/deleteService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: deleteService\n+      summary: Deletes a service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/updateService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: updateService\n+      summary: Updates a service.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputUpdateService\n+              description: \"input to updateService\"\n+              type: object\n+              required:\n+                - service\n+              properties:\n+                service: { $ref: '#/components/schemas/Service' }\n+\n+  /json/servicesManager/getServiceById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServiceById\n+      summary: Returns a service by its id.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServiceByName:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServiceByName\n+      summary: Returns a service by its name.\n+      parameters:\n+        - name: name\n+          description: name of service\n+          required: true\n+          in: query\n+          schema:\n+            type: string\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServices:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServices\n+      summary: Returns all services.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesByAttributeDefinition:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesByAttributeDefinition\n+      summary: Get all services with given attribute.\n+      parameters:\n+        - $ref: '#/components/parameters/attributeDefinitionId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getHierarchicalData:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getHierarchicalData\n+      summary: Generates the list of attributes per each member associated with the resource.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getFlatData:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getFlatData\n+      summary: Generates the list of attributes per each user and per each resource. Never return member or member-resource attribute.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDataWithGroups:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDataWithGroups\n+      summary: Generates the list of attributes per each member associated with the resources and groups.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDataWithVos:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDataWithVos\n+      summary: Generates the list of attributes per each member associated with the resources and groups in vos.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackages:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackages\n+      summary: Returns packages.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackageById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackageById\n+      summary: Gets package by id.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackageByName:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackageByName\n+      summary: Gets package by name.\n+      parameters:\n+        - { name: name, description: \"ServicesPackage name\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/createServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServicesPackage\n+      summary: Creates a new services package.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              type: object\n+              title: InputCreateServicesPackage\n+              description: Input to createServicesPackage\n+              required:\n+                - servicesPackage\n+              properties:\n+                servicesPackage:\n+                  $ref: '#/components/schemas/ServicesPackage'\n+\n+  /urlinjsonout/servicesManager/createServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServicesPackageByNameAndDescription\n+      summary: Creates a new services package.\n+      parameters:\n+        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n+        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/deleteServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: deleteServicesPackage\n+      summary: Deletes a services package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/updateServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: updateServicesPackage\n+      summary: Updates a service package.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              type: object\n+              title: InputUpdateServicesPackage\n+              description: Input to updateServicesPackage\n+              required:\n+                - servicesPackage\n+              properties:\n+                servicesPackage:\n+                  $ref: '#/components/schemas/ServicesPackage'\n+\n+  /urlinjsonout/servicesManager/addServiceToServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addServiceToServicesPackage\n+      summary: Adds a Service to a Services Package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeServiceFromServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeServiceFromServicesPackage\n+      summary: Removes a Service from a Services Package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesFromServicesPackage:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesFromServicesPackage\n+      summary: Lists services stored in a package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addRequiredAttribute:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addRequiredAttribute\n+      summary: Mark the attribute as required for the service. Required attributes are requisite for Service to run.\n+           If you add attribute which has a default attribute then this default attribute will be automatically add too.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/attributeId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addRequiredAttributes:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addRequiredAttributes\n+      summary: Batch version of addRequiredAttribute.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - name: attributes\n+          description: 'Attribute IDs'\n+          schema:\n+            type: array\n+            items:\n+              type: integer\n+          in: query\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeRequiredAttribute:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeRequiredAttribute\n+      summary: Remove required attribute from service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/attributeId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeRequiredAttributes:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeRequiredAttributes\n+      summary: Remove required attributes from service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - name: attributes\n+          description: 'Attribute IDs'\n+          schema:\n+            type: array\n+            items:\n+              type: integer\n+          in: query\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeAllRequiredAttributes:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeAllRequiredAttributes\n+      summary: Remove all required attributes from service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDestinationById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDestinationById\n+      summary: Returns a destination by its id.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/DestinationResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDestinations/s-f:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDestinations\n+      summary: Returns list of all destinations defined for the service and facility.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDestinations/all:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getAllDestinations\n+      summary: Get list of all destinations.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+\n+  /json/servicesManager/getAllRichDestinations/s:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getAllRichDestinationsForService\n+      summary: Returns list of all rich destinations defined for the service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getAllRichDestinations/f:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getAllRichDestinationsForFacility\n+      summary: Returns list of all rich destinations defined for the facility.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getRichDestinations:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getRichDestinations\n+      summary: Returns list of all rich destinations defined for the service and facility.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addDestination:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addDestination\n+      summary: Adds an destination for a facility and service. If destination doesn't exist it will be created.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: destination, description: \"Destination's destination, usually a DNS name\", schema: { type: string },  in: query, required: true }\n+        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n+        - { name: propagationType, description: \"Destination's propagationType\", schema: { $ref: '#/components/schemas/DestinationPropagationType' },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/DestinationResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/addDestination:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addDestinationToMultipleServices\n+      description: Adds an destination for a facility and list of services. If destination doesn't exist it will be created.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/DestinationResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputAddDestinationToMultipleServices\n+              description: \"input to addDestinationToMultipleServices\"\n+              type: object\n+              required:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7413faec8ccfa8e1fd761abe1a7204d1eb599860"}, "originalPosition": 1152}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "657da336e67896e99f79278e27d54ae31bb9705d", "author": {"user": {"login": "zlamalp", "name": "Pavel Zl\u00e1mal"}}, "url": "https://github.com/CESNET/perun/commit/657da336e67896e99f79278e27d54ae31bb9705d", "committedDate": "2020-03-03T14:59:28Z", "message": "Merge pull request #2599 from Vojtech-Sassmann/oopoaspdf\n\nFix param names in open api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eb1a79a9a311aa34b9ce72e0bd3e315293966f6", "author": {"user": null}, "url": "https://github.com/CESNET/perun/commit/2eb1a79a9a311aa34b9ce72e0bd3e315293966f6", "committedDate": "2020-03-03T16:54:37Z", "message": "OpenAPI - service manager implemented\n* service manager methods completed\n* added new schemas, responses, parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e73063490faddf14aaec97cbe9c8bb09dae3458", "author": {"user": null}, "url": "https://github.com/CESNET/perun/commit/2e73063490faddf14aaec97cbe9c8bb09dae3458", "committedDate": "2020-03-03T17:00:07Z", "message": "OpenAPI - service manager implemented\n* changes according to review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7413faec8ccfa8e1fd761abe1a7204d1eb599860", "author": {"user": null}, "url": "https://github.com/CESNET/perun/commit/7413faec8ccfa8e1fd761abe1a7204d1eb599860", "committedDate": "2020-03-02T12:48:04Z", "message": "OpenAPI - service manager implemented\n* service manager methods completed\n* added new schemas, responses, parameters"}, "afterCommit": {"oid": "2e73063490faddf14aaec97cbe9c8bb09dae3458", "author": {"user": null}, "url": "https://github.com/CESNET/perun/commit/2e73063490faddf14aaec97cbe9c8bb09dae3458", "committedDate": "2020-03-03T17:00:07Z", "message": "OpenAPI - service manager implemented\n* changes according to review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTQ1MjE1", "url": "https://github.com/CESNET/perun/pull/2594#pullrequestreview-368545215", "createdAt": "2020-03-04T07:10:00Z", "commit": {"oid": "2e73063490faddf14aaec97cbe9c8bb09dae3458"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNzoxMDowMFrOFxiCfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNzoxMDowMFrOFxiCfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ4MjIzNg==", "bodyText": "@xkureck this is not fixed", "url": "https://github.com/CESNET/perun/pull/2594#discussion_r387482236", "createdAt": "2020-03-04T07:10:00Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -8290,296 +8354,1032 @@ paths:\n   #################################################\n   #                                               #\n   # ServicesManager                               #\n-  #  (complete with TODOs)                        #\n+  #                                               #\n   #################################################\n \n-  #TODO blockServiceOnFacility\n-\n-  #TODO blockServiceOnDestination\n-\n-  #TODO blockAllServicesOnFacility\n-\n-  #TODO blockAllServicesOnDestination\n-\n-  #TODO getServicesBlockedOnFacility\n-\n-  #TODO getServicesBlockedOnDestination\n-\n-  #TODO isServiceBlockedOnFacility\n-\n-  #TODO isServiceBlockedOnDestination\n-\n-  #TODO unblockAllServicesOnFacility\n-\n-  #TODO unblockAllServicesOnDestination\n-\n-  #TODO unblockServiceOnFacility\n-\n-  #TODO unblockServiceOnDestination\n-\n-  #TODO forceServicePropagation\n-\n-  #TODO planServicePropagation\n-\n-  #TODO getFacilityAssignedServicesForGUI\n-\n-  #TODO createService\n-\n-  #TODO deleteService\n-\n-  #TODO updateService\n-\n-  /json/servicesManager/getServiceById:\n-    get:\n+  /urlinjsonout/servicesManager/blockServiceOnFacility:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getServiceById\n-      summary: Returns a service by its id.\n+      operationId: blockServiceOnFacility\n+      summary: Bans service on a facility.\n       parameters:\n-        - $ref: '#/components/parameters/id'\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ServiceResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getServiceByName:\n-    get:\n+  /urlinjsonout/servicesManager/blockServiceOnDestination/s-d:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getServiceByName\n-      summary: Returns a service by its name.\n+      operationId: blockServiceOnDestination\n+      summary: Bans Service on a destination.\n       parameters:\n-        - name: name\n-          description: name of service\n-          required: true\n-          in: query\n-          schema:\n-            type: string\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ServiceResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getServices\n-\n-  #TODO getServicesByAttributeDefinition\n-\n-  #TODO getHierarchicalData\n-\n-  #TODO getFlatData\n-\n-  #TODO getDataWithGroups\n-\n-  #TODO getDataWithVos\n-\n-  #TODO getServicesPackages\n-\n-  #TODO getServicesPackageById\n-\n-  #TODO getServicesPackageByName\n-\n-  #TODO createServicesPackage\n-\n-  #TODO deleteServicesPackage\n-\n-  #TODO updateServicesPackage\n-\n-  #TODO addServiceToServicesPackage\n-\n-  #TODO removeServiceFromServicesPackage\n-\n-  #TODO getServicesFromServicesPackage\n-\n-  #TODO addRequiredAttribute\n-\n-  #TODO addRequiredAttributes\n-\n-  #TODO removeRequiredAttribute\n-\n-  #TODO removeRequiredAttributes\n+  /urlinjsonout/servicesManager/blockServiceOnDestination/s-dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: blockServiceOnDestinationWithNameAndType\n+      summary: Bans Service on a destination.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO removeAllRequiredAttributes\n+  /urlinjsonout/servicesManager/blockAllServicesOnFacility:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: blockAllServicesOnFacility\n+      summary: Block all services currently assigned on this facility.\n+              Newly assigned services are still allowed for propagation.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinationById:\n-    get:\n+  /urlinjsonout/servicesManager/blockAllServicesOnDestination/d:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getDestinationById\n-      summary: Returns a destination by its id.\n+      operationId: blockAllServicesOnDestinationById\n+      summary: Block all services currently assigned on this destination.\n+               Newly assigned services are still allowed for propagation.\n       parameters:\n-        - $ref: '#/components/parameters/id'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinations/s-f:\n-    get:\n+  /urlinjsonout/servicesManager/blockAllServicesOnDestination/dname-dtype:\n+    post:\n       tags:\n         - ServicesManager\n-      operationId: getDestinations\n-      summary: Returns list of all destinations defined for the service and facility.\n+      operationId: blockAllServicesOnDestinationByName\n+      summary: Block all services currently assigned on this destination.\n+        Newly assigned services are still allowed for propagation.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfDestinationsResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getDestinations/all:\n+  /json/servicesManager/getServicesBlockedOnFacility:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getAllDestinations\n-      summary: Get list of all destinations.\n+      operationId: getServicesBlockedOnFacility\n+      summary: Returns list of denials for a facility.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfDestinationsResponse'\n+          $ref: '#/components/responses/ListOfServicesResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-\n-  /json/servicesManager/getAllRichDestinations/s:\n+  /json/servicesManager/getServicesBlockedOnDestination:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinationsForService\n-      summary: Returns list of all rich destinations defined for the service.\n+      operationId: getServicesBlockedOnDestination\n+      summary: Returns list of denials for a destination.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/ListOfServicesResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getAllRichDestinations/f:\n+  /json/servicesManager/isServiceBlockedOnFacility:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinationsForFacility\n-      summary: Returns list of all rich destinations defined for the facility.\n+      operationId: isServiceBlockedOnFacility\n+      summary: Is this Service denied on the facility?\n+        Return int 1 = true - the Service is denied on the facility, 0 = false - the Service is NOT denied on the facility\n       parameters:\n+        - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/IntegerResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/getRichDestinations:\n+  /json/servicesManager/isServiceBlockedOnDestination:\n     get:\n       tags:\n         - ServicesManager\n-      operationId: getRichDestinations\n-      summary: Returns list of all rich destinations defined for the service and facility.\n+      operationId: isServiceBlockedOnDestination\n+      summary: Is this Service denied on the destination?\n+        Return int 1 = true - the Service is denied on the destination, 0 = false - the Service is NOT denied on the destination\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+          $ref: '#/components/responses/IntegerResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/addDestination:\n+  /urlinjsonout/servicesManager/unblockAllServicesOnFacility:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: addDestination\n-      summary: Adds an destination for a facility and service. If destination doesn't exist it will be created.\n+      operationId: unblockAllServicesOnFacility\n+      summary: Erase all the possible denials on this facility.\n       parameters:\n-        - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n-        - { name: destination, description: \"Destination's destination, usually a DNS name\", schema: { type: string },  in: query, required: true }\n-        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n-        - { name: propagationType, description: \"Destination's propagationType\", schema: { $ref: '#/components/schemas/DestinationPropagationType' },  in: query, required: true }\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /json/servicesManager/addDestination:\n+  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/d:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: addDestinationToMultipleServices\n-      description: Adds an destination for a facility and list of services. If destination doesn't exist it will be created.\n+      operationId: unblockAllServicesOnDestinationById\n+      summary: Erase all the possible denials on this destination.\n+      parameters:\n+        - $ref: '#/components/parameters/destinationId'\n       responses:\n         '200':\n-          $ref: '#/components/responses/DestinationResponse'\n+          $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n-      requestBody:\n-        required: true\n-        content:\n-          application/json:\n-            schema:\n-              title: InputAddDestinationToMultipleServices\n-              description: \"input to addDestinationToMultipleServices\"\n-              type: object\n-              required:\n-                - services\n-                - facility\n-                - destination\n-                - type\n-                - propagationType\n-              properties:\n-                services:\n-                  type: array\n-                  items:\n-                    $ref: '#/components/schemas/Service'\n-                facility: { type: integer }\n-                destination: { type: string }\n-                type: { $ref: '#/components/schemas/DestinationType' }\n-                propagationType: { $ref: '#/components/schemas/DestinationPropagationType' }\n-\n \n-  #TODO addDestinationsForAllServicesOnFacility\n-\n-  #TODO addDestinationsDefinedByHostsOnFacility\n+  /urlinjsonout/servicesManager/unblockAllServicesOnDestination/dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: unblockAllServicesOnDestinationByName\n+      summary: Erase all the possible denials on this destination.\n+      parameters:\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/removeDestination:\n+  /urlinjsonout/servicesManager/unblockServiceOnFacility:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: removeDestination\n-      summary: Removes the specified destination from the facility and service.\n+      operationId: unblockServiceOnFacility\n+      summary: Free the denial of the Service on this facility. If the Service was banned\n+              on this facility, it will be freed. In case the Service was not banned on\n+              this facility, nothing will happen.\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n         - $ref: '#/components/parameters/facilityId'\n-        - { name: destination, description: \"Destination's destination\", schema: { type: string },  in: query, required: true }\n-        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n       responses:\n         '200':\n           $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  /urlinjsonout/servicesManager/removeAllDestinations:\n+  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-d:\n     post:\n       tags:\n         - ServicesManager\n-      operationId: removeAllDestinations\n-      summary: Removes all destinations from a facility and service.\n+      operationId: unblockServiceOnDestinationById\n+      summary: Free the denial of the Service on this destination. If the Service was banned on\n+         this destination, it will be freed. In case the Service was not banned on this\n+         destination, nothing will happen.\n       parameters:\n         - $ref: '#/components/parameters/serviceId'\n-        - $ref: '#/components/parameters/facilityId'\n+        - $ref: '#/components/parameters/destinationId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/unblockServiceOnDestination/s-dname-dtype:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: unblockServiceOnDestinationByName\n+      summary: Free the denial of the Service on this destination. If the Service was banned on\n+        this destination, it will be freed. In case the Service was not banned on this\n+        destination, nothing will happen.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/destinationName'\n+        - $ref: '#/components/parameters/destinationType'\n       responses:\n         '200':\n           $ref: '#/components/responses/VoidResponse'\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getFacilitiesDestinations\n+  /urlinjsonout/servicesManager/forceServicePropagation:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: forceServicePropagation\n+      summary: Forces service propagation on defined facility.\n+              Return int 1 = true if it is possible, 0 = false if not\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/optionalFacilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getDestinationsCount\n+  /urlinjsonout/servicesManager/planServicePropagation:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: planServicePropagation\n+      summary: Plans service propagation on defined facility.\n+        Return int 1 = true if it is possible, 0 = false if not\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/optionalFacilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/IntegerResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getFacilityAssignedServicesForGUI:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getFacilityAssignedServicesForGUI\n+      summary: Return list of ServiceForGUI assigned on facility, (Service with \"allowedOnFacility\" property filled).\n+              1 - allowed / 0 - service is service is denied.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServiceForGUIResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/createService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServiceWithService\n+      summary: Creates a new service.\n+        Service object must contain name. Parameters desctiption, script, delay, recurrence, enabled are optional. Other parameters ignored.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputCreateService\n+              description: \"input to createService\"\n+              type: object\n+              required:\n+                - service\n+              properties:\n+                service: { $ref: '#/components/schemas/Service' }\n+\n+  /urlinjsonout/servicesManager/createService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createService\n+      summary: Creates a new service.\n+      parameters:\n+        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n+        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n+        - { name: script, description: \"script which should be constructed like ./service_name (where anything else than [a-z,A-Z] is converted to _)\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/deleteService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: deleteService\n+      summary: Deletes a service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/updateService:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: updateService\n+      summary: Updates a service.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputUpdateService\n+              description: \"input to updateService\"\n+              type: object\n+              required:\n+                - service\n+              properties:\n+                service: { $ref: '#/components/schemas/Service' }\n+\n+  /json/servicesManager/getServiceById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServiceById\n+      summary: Returns a service by its id.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServiceByName:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServiceByName\n+      summary: Returns a service by its name.\n+      parameters:\n+        - name: name\n+          description: name of service\n+          required: true\n+          in: query\n+          schema:\n+            type: string\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServices:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServices\n+      summary: Returns all services.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesByAttributeDefinition:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesByAttributeDefinition\n+      summary: Get all services with given attribute.\n+      parameters:\n+        - $ref: '#/components/parameters/attributeDefinitionId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getHierarchicalData:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getHierarchicalData\n+      summary: Generates the list of attributes per each member associated with the resource.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getFlatData:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getFlatData\n+      summary: Generates the list of attributes per each user and per each resource. Never return member or member-resource attribute.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDataWithGroups:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDataWithGroups\n+      summary: Generates the list of attributes per each member associated with the resources and groups.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDataWithVos:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDataWithVos\n+      summary: Generates the list of attributes per each member associated with the resources and groups in vos.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: filterExpiredMembers, description: \"if true the method does not take members expired in groups into account\", schema: { type: boolean },  in: query, required: false }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServiceAttributesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackages:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackages\n+      summary: Returns packages.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackageById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackageById\n+      summary: Gets package by id.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesPackageByName:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesPackageByName\n+      summary: Gets package by name.\n+      parameters:\n+        - { name: name, description: \"ServicesPackage name\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/createServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServicesPackage\n+      summary: Creates a new services package.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              type: object\n+              title: InputCreateServicesPackage\n+              description: Input to createServicesPackage\n+              required:\n+                - servicesPackage\n+              properties:\n+                servicesPackage:\n+                  $ref: '#/components/schemas/ServicesPackage'\n+\n+  /urlinjsonout/servicesManager/createServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: createServicesPackageByNameAndDescription\n+      summary: Creates a new services package.\n+      parameters:\n+        - { name: name, description: \"name\", schema: { type: string },  in: query, required: true }\n+        - { name: description, description: \"description\", schema: { type: string },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ServicesPackageResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/deleteServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: deleteServicesPackage\n+      summary: Deletes a services package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/updateServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: updateServicesPackage\n+      summary: Updates a service package.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              type: object\n+              title: InputUpdateServicesPackage\n+              description: Input to updateServicesPackage\n+              required:\n+                - servicesPackage\n+              properties:\n+                servicesPackage:\n+                  $ref: '#/components/schemas/ServicesPackage'\n+\n+  /urlinjsonout/servicesManager/addServiceToServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addServiceToServicesPackage\n+      summary: Adds a Service to a Services Package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeServiceFromServicesPackage:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeServiceFromServicesPackage\n+      summary: Removes a Service from a Services Package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getServicesFromServicesPackage:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getServicesFromServicesPackage\n+      summary: Lists services stored in a package.\n+      parameters:\n+        - $ref: '#/components/parameters/servicesPackageId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfServicesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addRequiredAttribute:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addRequiredAttribute\n+      summary: Mark the attribute as required for the service. Required attributes are requisite for Service to run.\n+           If you add attribute which has a default attribute then this default attribute will be automatically add too.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/attributeId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addRequiredAttributes:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addRequiredAttributes\n+      summary: Batch version of addRequiredAttribute.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - name: attributes\n+          description: 'Attribute IDs'\n+          schema:\n+            type: array\n+            items:\n+              type: integer\n+          in: query\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeRequiredAttribute:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeRequiredAttribute\n+      summary: Remove required attribute from service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/attributeId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeRequiredAttributes:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeRequiredAttributes\n+      summary: Remove required attributes from service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - name: attributes\n+          description: 'Attribute IDs'\n+          schema:\n+            type: array\n+            items:\n+              type: integer\n+          in: query\n+          required: true\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/removeAllRequiredAttributes:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: removeAllRequiredAttributes\n+      summary: Remove all required attributes from service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDestinationById:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDestinationById\n+      summary: Returns a destination by its id.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/DestinationResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDestinations/s-f:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getDestinations\n+      summary: Returns list of all destinations defined for the service and facility.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getDestinations/all:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getAllDestinations\n+      summary: Get list of all destinations.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+\n+  /json/servicesManager/getAllRichDestinations/s:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getAllRichDestinationsForService\n+      summary: Returns list of all rich destinations defined for the service.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getAllRichDestinations/f:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getAllRichDestinationsForFacility\n+      summary: Returns list of all rich destinations defined for the facility.\n+      parameters:\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/getRichDestinations:\n+    get:\n+      tags:\n+        - ServicesManager\n+      operationId: getRichDestinations\n+      summary: Returns list of all rich destinations defined for the service and facility.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfRichDestinationsResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/servicesManager/addDestination:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addDestination\n+      summary: Adds an destination for a facility and service. If destination doesn't exist it will be created.\n+      parameters:\n+        - $ref: '#/components/parameters/serviceId'\n+        - $ref: '#/components/parameters/facilityId'\n+        - { name: destination, description: \"Destination's destination, usually a DNS name\", schema: { type: string },  in: query, required: true }\n+        - { name: type, description: \"Destination's type\", schema: { $ref: '#/components/schemas/DestinationType' },  in: query, required: true }\n+        - { name: propagationType, description: \"Destination's propagationType\", schema: { $ref: '#/components/schemas/DestinationPropagationType' },  in: query, required: true }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/DestinationResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/servicesManager/addDestination:\n+    post:\n+      tags:\n+        - ServicesManager\n+      operationId: addDestinationToMultipleServices\n+      description: Adds an destination for a facility and list of services. If destination doesn't exist it will be created.\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/DestinationResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+      requestBody:\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              title: InputAddDestinationToMultipleServices\n+              description: \"input to addDestinationToMultipleServices\"\n+              type: object\n+              required:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg5NjQ3Mg=="}, "originalCommit": {"oid": "7413faec8ccfa8e1fd761abe1a7204d1eb599860"}, "originalPosition": 1152}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMjY1NDYy", "url": "https://github.com/CESNET/perun/pull/2594#pullrequestreview-371265462", "createdAt": "2020-03-09T15:07:51Z", "commit": {"oid": "2e73063490faddf14aaec97cbe9c8bb09dae3458"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e77f3e34c4462a58ef875c02d0924be3c5da67d", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/8e77f3e34c4462a58ef875c02d0924be3c5da67d", "committedDate": "2020-03-16T10:52:36Z", "message": "Merge branch 'master' into openapiService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9dcf6f02ac698f427e19c9b2f26f259ad77b28d", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/c9dcf6f02ac698f427e19c9b2f26f259ad77b28d", "committedDate": "2020-03-16T11:05:55Z", "message": "Update openapi.yml"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1441, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}