{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNDA4NTA3", "number": 2686, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDowMDo1MlrOD5VYSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoyOToxNVrOD5Zydg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDQ1NzA3OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDowMDo1MlrOGQifLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDozMjo1OVrOGQjfNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5NTQzOA==", "bodyText": "Since you end each branch with single return true; you can probably remove else from all branches and simply return false at the end if no previous if was true.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r419995438", "createdAt": "2020-05-05T10:00:52Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails.java", "diffHunk": "@@ -0,0 +1,161 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSet<String> tcsMailsValue = new HashSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\t\tList<AuditEvent> resolvingMessages = new ArrayList<>();\n+\n+\t\t// handle source user attributes changes\n+\t\tif (message instanceof AttributeSetForUser && isAffectedAttribute(((AttributeSetForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser && isAffectedAttribute(((AttributeRemovedForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n+\n+\t\t}\n+\n+\t\treturn resolvingMessages;\n+\t}\n+\n+\t/**\n+\t * Return true if attribute name is one of affected attributes in this virtual module.\n+\t *\n+\t * @param nameOfAttribute name of attribute to check\n+\t * @return true if attribute is one of affected, false otherwise\n+\t */\n+\tprivate boolean isAffectedAttribute(String nameOfAttribute) {\n+\t\tif(preferredMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(isMailFriendlyName.equals(nameOfAttribute)) return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8c9083d8d1dab4f928a3f84c14dd9c4d5355646"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAxMTgyOA==", "bodyText": "Changed.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420011828", "createdAt": "2020-05-05T10:32:59Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails.java", "diffHunk": "@@ -0,0 +1,161 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSet<String> tcsMailsValue = new HashSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\t\tList<AuditEvent> resolvingMessages = new ArrayList<>();\n+\n+\t\t// handle source user attributes changes\n+\t\tif (message instanceof AttributeSetForUser && isAffectedAttribute(((AttributeSetForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser && isAffectedAttribute(((AttributeRemovedForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n+\n+\t\t}\n+\n+\t\treturn resolvingMessages;\n+\t}\n+\n+\t/**\n+\t * Return true if attribute name is one of affected attributes in this virtual module.\n+\t *\n+\t * @param nameOfAttribute name of attribute to check\n+\t * @return true if attribute is one of affected, false otherwise\n+\t */\n+\tprivate boolean isAffectedAttribute(String nameOfAttribute) {\n+\t\tif(preferredMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(isMailFriendlyName.equals(nameOfAttribute)) return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5NTQzOA=="}, "originalCommit": {"oid": "a8c9083d8d1dab4f928a3f84c14dd9c4d5355646"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDQ4MjA4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDowODoxOVrOGQiukA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDo1MDo0NFrOGQkC8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5OTM3Ng==", "bodyText": "I would probably prefer more MU specific attribute name or usage of namespace, since request for TCS mails attribute might be required by others, but they will require own source attributes (different implementation). But for now, there is nobody else requiring it, so its just suggestion.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r419999376", "createdAt": "2020-05-05T10:08:19Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails.java", "diffHunk": "@@ -0,0 +1,161 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "466174b2d418e623baba2dd6547d32d2a1b4beb0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyMDk3Nw==", "bodyText": "Name was changed to have namespace mu in it.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420020977", "createdAt": "2020-05-05T10:50:44Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails.java", "diffHunk": "@@ -0,0 +1,161 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5OTM3Ng=="}, "originalCommit": {"oid": "466174b2d418e623baba2dd6547d32d2a1b4beb0"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDUzMDAwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMailsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDoyMzoxMFrOGQjL7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDozNDozM1rOGQjiTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAwNjg5NA==", "bodyText": "when(perunBl.getModulesUtilsBl()).thenReturn(mu);\nwhen(mu.getUserFromMessage(eq(sess), any(String.class))).thenReturn(user);\n\nYou don't seem to be using above two methods, hence no need to mock them.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420006894", "createdAt": "2020-05-05T10:23:10Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMailsTest.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.bl.ModulesUtilsBl;\n+import cz.metacentrum.perun.core.bl.PerunBl;\n+import cz.metacentrum.perun.core.bl.UsersManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.hamcrest.CoreMatchers;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_tcsMailsTest {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMailsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_tcsMails classInstance = new urn_perun_user_attribute_def_virt_tcsMails();\n+\tprivate final AttributeDefinition tcsMailsAttrDef = classInstance.getAttributeDefinition();\n+\n+\tprivate final User user = new User(10, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\n+\tprivate final String email1 = \"email1@mail.cz\";\n+\tprivate final String email2 = \"email2@mail.cz\";\n+\tprivate final String email3 = \"email3@mail.cz\";\n+\tprivate final String email4 = \"email4@mail.cz\";\n+\tprivate final String email5 = \"email5@mail.cz\";\n+\n+\tAttribute preferredMailAttr = setUpUserAttribute(1, \"preferredMail\", String.class.getName(), email1);\n+\tAttribute isMailAttr = setUpUserAttribute(2, \"ISMail\", String.class.getName(), email2);\n+\tAttribute publicMailsAttr = setUpUserAttribute(3, \"publicAliasMails\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email3, email4)));\n+\tAttribute privateMailsAttr = setUpUserAttribute(4, \"privateAliasMails\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email4, email5)));\n+\tAttribute o365MailsAttr = setUpUserAttribute(5, \"o365EmailAddresses:mu\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email1, email3, email5)));\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\ttcsMailsAttrDef.setId(100);\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class);\n+\t\tPerunBl perunBl = mock(PerunBl.class);\n+\t\tAttributesManagerBl am = mock(AttributesManagerBl.class);\n+\t\tUsersManagerBl um = mock(UsersManagerBl.class);\n+\t\tModulesUtilsBl mu = mock(ModulesUtilsBl.class);\n+\t\twhen(sess.getPerunBl()).thenReturn(perunBl);\n+\t\twhen(perunBl.getAttributesManagerBl()).thenReturn(am);\n+\t\twhen(perunBl.getUsersManagerBl()).thenReturn(um);\n+\t\twhen(perunBl.getModulesUtilsBl()).thenReturn(mu);\n+\t\twhen(mu.getUserFromMessage(eq(sess), any(String.class))).thenReturn(user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "466174b2d418e623baba2dd6547d32d2a1b4beb0"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAxMjYyMQ==", "bodyText": "Removed.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420012621", "createdAt": "2020-05-05T10:34:33Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMailsTest.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.bl.ModulesUtilsBl;\n+import cz.metacentrum.perun.core.bl.PerunBl;\n+import cz.metacentrum.perun.core.bl.UsersManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.hamcrest.CoreMatchers;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_tcsMailsTest {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMailsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_tcsMails classInstance = new urn_perun_user_attribute_def_virt_tcsMails();\n+\tprivate final AttributeDefinition tcsMailsAttrDef = classInstance.getAttributeDefinition();\n+\n+\tprivate final User user = new User(10, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\n+\tprivate final String email1 = \"email1@mail.cz\";\n+\tprivate final String email2 = \"email2@mail.cz\";\n+\tprivate final String email3 = \"email3@mail.cz\";\n+\tprivate final String email4 = \"email4@mail.cz\";\n+\tprivate final String email5 = \"email5@mail.cz\";\n+\n+\tAttribute preferredMailAttr = setUpUserAttribute(1, \"preferredMail\", String.class.getName(), email1);\n+\tAttribute isMailAttr = setUpUserAttribute(2, \"ISMail\", String.class.getName(), email2);\n+\tAttribute publicMailsAttr = setUpUserAttribute(3, \"publicAliasMails\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email3, email4)));\n+\tAttribute privateMailsAttr = setUpUserAttribute(4, \"privateAliasMails\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email4, email5)));\n+\tAttribute o365MailsAttr = setUpUserAttribute(5, \"o365EmailAddresses:mu\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email1, email3, email5)));\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\ttcsMailsAttrDef.setId(100);\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class);\n+\t\tPerunBl perunBl = mock(PerunBl.class);\n+\t\tAttributesManagerBl am = mock(AttributesManagerBl.class);\n+\t\tUsersManagerBl um = mock(UsersManagerBl.class);\n+\t\tModulesUtilsBl mu = mock(ModulesUtilsBl.class);\n+\t\twhen(sess.getPerunBl()).thenReturn(perunBl);\n+\t\twhen(perunBl.getAttributesManagerBl()).thenReturn(am);\n+\t\twhen(perunBl.getUsersManagerBl()).thenReturn(um);\n+\t\twhen(perunBl.getModulesUtilsBl()).thenReturn(mu);\n+\t\twhen(mu.getUserFromMessage(eq(sess), any(String.class))).thenReturn(user);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAwNjg5NA=="}, "originalCommit": {"oid": "466174b2d418e623baba2dd6547d32d2a1b4beb0"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDUzNzI1OnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMailsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDoyNToyN1rOGQjQPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDozMzoxNVrOGQjfqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAwNzk5Nw==", "bodyText": "You have this unused variable countries in all tests. Why?", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420007997", "createdAt": "2020-05-05T10:25:27Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMailsTest.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.bl.ModulesUtilsBl;\n+import cz.metacentrum.perun.core.bl.PerunBl;\n+import cz.metacentrum.perun.core.bl.UsersManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.hamcrest.CoreMatchers;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_tcsMailsTest {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMailsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_tcsMails classInstance = new urn_perun_user_attribute_def_virt_tcsMails();\n+\tprivate final AttributeDefinition tcsMailsAttrDef = classInstance.getAttributeDefinition();\n+\n+\tprivate final User user = new User(10, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\n+\tprivate final String email1 = \"email1@mail.cz\";\n+\tprivate final String email2 = \"email2@mail.cz\";\n+\tprivate final String email3 = \"email3@mail.cz\";\n+\tprivate final String email4 = \"email4@mail.cz\";\n+\tprivate final String email5 = \"email5@mail.cz\";\n+\n+\tAttribute preferredMailAttr = setUpUserAttribute(1, \"preferredMail\", String.class.getName(), email1);\n+\tAttribute isMailAttr = setUpUserAttribute(2, \"ISMail\", String.class.getName(), email2);\n+\tAttribute publicMailsAttr = setUpUserAttribute(3, \"publicAliasMails\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email3, email4)));\n+\tAttribute privateMailsAttr = setUpUserAttribute(4, \"privateAliasMails\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email4, email5)));\n+\tAttribute o365MailsAttr = setUpUserAttribute(5, \"o365EmailAddresses:mu\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email1, email3, email5)));\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\ttcsMailsAttrDef.setId(100);\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class);\n+\t\tPerunBl perunBl = mock(PerunBl.class);\n+\t\tAttributesManagerBl am = mock(AttributesManagerBl.class);\n+\t\tUsersManagerBl um = mock(UsersManagerBl.class);\n+\t\tModulesUtilsBl mu = mock(ModulesUtilsBl.class);\n+\t\twhen(sess.getPerunBl()).thenReturn(perunBl);\n+\t\twhen(perunBl.getAttributesManagerBl()).thenReturn(am);\n+\t\twhen(perunBl.getUsersManagerBl()).thenReturn(um);\n+\t\twhen(perunBl.getModulesUtilsBl()).thenReturn(mu);\n+\t\twhen(mu.getUserFromMessage(eq(sess), any(String.class))).thenReturn(user);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, preferredMailAttr.getName())).thenReturn(preferredMailAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, isMailAttr.getName())).thenReturn(isMailAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, publicMailsAttr.getName())).thenReturn(publicMailsAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, privateMailsAttr.getName())).thenReturn(privateMailsAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, o365MailsAttr.getName())).thenReturn(o365MailsAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, tcsMailsAttrDef.getName())).thenReturn(tcsMailsAttrDef);\n+\t}\n+\n+\tprivate Attribute setUpUserAttribute(int id, String friendlyName, String type, Object value) {\n+\t\tAttributeDefinition attrDef = new AttributeDefinition();\n+\t\tattrDef.setId(id);\n+\t\tattrDef.setFriendlyName(friendlyName);\n+\t\tattrDef.setNamespace(AttributesManager.NS_USER_ATTR_DEF);\n+\t\tattrDef.setType(type);\n+\t\tAttribute attr = new Attribute(attrDef);\n+\t\tattr.setValue(value);\n+\t\treturn attr;\n+\t}\n+\n+\t@Test\n+\tpublic void getAttributeValue() throws Exception {\n+\t\t@SuppressWarnings(\"unchecked\") ArrayList<String> attributeValue = classInstance.getAttributeValue(sess, user, tcsMailsAttrDef).valueAsList();\n+\t\tassertThat(attributeValue, is(notNullValue()));\n+\t\t//we want to be sure, that preferredEmail is first (defined by sorting in module)\n+\t\tassertTrue(attributeValue.get(0).equals(email1));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email1));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email2));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email3));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email4));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email5));\n+\t\tassertThat(attributeValue.size(), is(5));\n+\t}\n+\n+\t@Test\n+\tpublic void resolveVirtualAttributeValueChangeSet1() throws Exception {\n+\t\tAttributeDefinition countries = classInstance.getAttributeDefinition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "466174b2d418e623baba2dd6547d32d2a1b4beb0"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAxMTk0Ng==", "bodyText": "Copy & paste. Removed.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420011946", "createdAt": "2020-05-05T10:33:15Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMailsTest.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.bl.ModulesUtilsBl;\n+import cz.metacentrum.perun.core.bl.PerunBl;\n+import cz.metacentrum.perun.core.bl.UsersManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.hamcrest.CoreMatchers;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_tcsMailsTest {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMailsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_tcsMails classInstance = new urn_perun_user_attribute_def_virt_tcsMails();\n+\tprivate final AttributeDefinition tcsMailsAttrDef = classInstance.getAttributeDefinition();\n+\n+\tprivate final User user = new User(10, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\n+\tprivate final String email1 = \"email1@mail.cz\";\n+\tprivate final String email2 = \"email2@mail.cz\";\n+\tprivate final String email3 = \"email3@mail.cz\";\n+\tprivate final String email4 = \"email4@mail.cz\";\n+\tprivate final String email5 = \"email5@mail.cz\";\n+\n+\tAttribute preferredMailAttr = setUpUserAttribute(1, \"preferredMail\", String.class.getName(), email1);\n+\tAttribute isMailAttr = setUpUserAttribute(2, \"ISMail\", String.class.getName(), email2);\n+\tAttribute publicMailsAttr = setUpUserAttribute(3, \"publicAliasMails\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email3, email4)));\n+\tAttribute privateMailsAttr = setUpUserAttribute(4, \"privateAliasMails\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email4, email5)));\n+\tAttribute o365MailsAttr = setUpUserAttribute(5, \"o365EmailAddresses:mu\", ArrayList.class.getName(), new ArrayList(Arrays.asList(email1, email3, email5)));\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\ttcsMailsAttrDef.setId(100);\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class);\n+\t\tPerunBl perunBl = mock(PerunBl.class);\n+\t\tAttributesManagerBl am = mock(AttributesManagerBl.class);\n+\t\tUsersManagerBl um = mock(UsersManagerBl.class);\n+\t\tModulesUtilsBl mu = mock(ModulesUtilsBl.class);\n+\t\twhen(sess.getPerunBl()).thenReturn(perunBl);\n+\t\twhen(perunBl.getAttributesManagerBl()).thenReturn(am);\n+\t\twhen(perunBl.getUsersManagerBl()).thenReturn(um);\n+\t\twhen(perunBl.getModulesUtilsBl()).thenReturn(mu);\n+\t\twhen(mu.getUserFromMessage(eq(sess), any(String.class))).thenReturn(user);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, preferredMailAttr.getName())).thenReturn(preferredMailAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, isMailAttr.getName())).thenReturn(isMailAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, publicMailsAttr.getName())).thenReturn(publicMailsAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, privateMailsAttr.getName())).thenReturn(privateMailsAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, o365MailsAttr.getName())).thenReturn(o365MailsAttr);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, tcsMailsAttrDef.getName())).thenReturn(tcsMailsAttrDef);\n+\t}\n+\n+\tprivate Attribute setUpUserAttribute(int id, String friendlyName, String type, Object value) {\n+\t\tAttributeDefinition attrDef = new AttributeDefinition();\n+\t\tattrDef.setId(id);\n+\t\tattrDef.setFriendlyName(friendlyName);\n+\t\tattrDef.setNamespace(AttributesManager.NS_USER_ATTR_DEF);\n+\t\tattrDef.setType(type);\n+\t\tAttribute attr = new Attribute(attrDef);\n+\t\tattr.setValue(value);\n+\t\treturn attr;\n+\t}\n+\n+\t@Test\n+\tpublic void getAttributeValue() throws Exception {\n+\t\t@SuppressWarnings(\"unchecked\") ArrayList<String> attributeValue = classInstance.getAttributeValue(sess, user, tcsMailsAttrDef).valueAsList();\n+\t\tassertThat(attributeValue, is(notNullValue()));\n+\t\t//we want to be sure, that preferredEmail is first (defined by sorting in module)\n+\t\tassertTrue(attributeValue.get(0).equals(email1));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email1));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email2));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email3));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email4));\n+\t\tassertThat(attributeValue, CoreMatchers.hasItem(email5));\n+\t\tassertThat(attributeValue.size(), is(5));\n+\t}\n+\n+\t@Test\n+\tpublic void resolveVirtualAttributeValueChangeSet1() throws Exception {\n+\t\tAttributeDefinition countries = classInstance.getAttributeDefinition();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAwNzk5Nw=="}, "originalCommit": {"oid": "466174b2d418e623baba2dd6547d32d2a1b4beb0"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTAwMzI5OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo0NjoyNFrOGQnrhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozMjoyMVrOGRTIWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4MDUxOA==", "bodyText": "You don't have to throw InternalErrorException in any of these methods :)", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420080518", "createdAt": "2020-05-05T12:46:24Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5MjQxMQ==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420792411", "createdAt": "2020-05-06T13:32:21Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4MDUxOA=="}, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTA4NzU4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzowNzo1NVrOGQogSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozMjoxNlrOGRTIIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5NDAyNw==", "bodyText": "Exceptions WrongReferenceAttributeValueException and WrongAttributeAssignmentException are not thrown in this method.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420094027", "createdAt": "2020-05-05T13:07:55Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSortedSet<String> tcsMailsValue = new TreeSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5MjM1NA==", "bodyText": "Removed.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420792354", "createdAt": "2020-05-06T13:32:16Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSortedSet<String> tcsMailsValue = new TreeSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5NDAyNw=="}, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTExOTM1OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoxNToyNVrOGQo0Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozMjoxMFrOGRTH1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5OTA5MA==", "bodyText": "Use new ArrayList<>(tcsMailsValue) to prevent Unchecked call warning.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420099090", "createdAt": "2020-05-05T13:15:25Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSortedSet<String> tcsMailsValue = new TreeSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5MjI3OQ==", "bodyText": "Changed.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420792279", "createdAt": "2020-05-06T13:32:10Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSortedSet<String> tcsMailsValue = new TreeSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5OTA5MA=="}, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTE3MDY4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoyNzoxNVrOGQpUXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozMjowNlrOGRTHrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwNzM1OQ==", "bodyText": "This code is duplicate. Moreover, repeated \"add\" operations are not necessary.\nYou can use something like this:\n\t\treturn Arrays.asList(\n\t\t\tA_U_D_preferredMail, \n\t\t\tA_U_D_ISMail, \n\t\t\tA_U_D_publicAliasMails, \n\t\t\tA_U_D_privateAliasMails, \n\t\t\tA_U_D_o365EmailAddressesMU);", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420107359", "createdAt": "2020-05-05T13:27:15Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSortedSet<String> tcsMailsValue = new TreeSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\t\tList<AuditEvent> resolvingMessages = new ArrayList<>();\n+\n+\t\t// handle source user attributes changes\n+\t\tif (message instanceof AttributeSetForUser && isAffectedAttribute(((AttributeSetForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser && isAffectedAttribute(((AttributeRemovedForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n+\n+\t\t}\n+\n+\t\treturn resolvingMessages;\n+\t}\n+\n+\t/**\n+\t * Return true if attribute name is one of affected attributes in this virtual module.\n+\t *\n+\t * @param nameOfAttribute name of attribute to check\n+\t * @return true if attribute is one of affected, false otherwise\n+\t */\n+\tprivate boolean isAffectedAttribute(String nameOfAttribute) {\n+\t\tif(preferredMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(isMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(o365MailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(publicMailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(privateMailsFriendlyName.equals(nameOfAttribute)) return true;\n+\n+\t\treturn false;\n+\t}\n+\n+\t/**\n+\t * Return email values as sorted set from attribute by name.\n+\t *\n+\t * It works only for String and List attributes. If attribute has different type of value, it will be logged and skipped.\n+\t * If attribute has empty value, it will return empty set.\n+\t * If attribute not exists, it will be logged and skipped.\n+\t *\n+\t * @param sess perun session\n+\t * @param user user to get values for\n+\t * @param nameOfAttribute name of attribute for which values should be returned\n+\t *\n+\t * @return sorted set of values of attribute defined by name\n+\t */\n+\tprivate SortedSet<String> getEmailValues(PerunSessionImpl sess, User user, String nameOfAttribute) {\n+\t\tSortedSet<String> valuesToAdd = new TreeSet<>();\n+\t\ttry {\n+\t\t\tAttribute sourceAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, nameOfAttribute);\n+\t\t\tif (sourceAttribute.getType().equals(String.class.getName())) {\n+\t\t\t\tif (sourceAttribute.getValue() != null) valuesToAdd.add(sourceAttribute.valueAsString());\n+\t\t\t} else if (sourceAttribute.getType().equals(ArrayList.class.getName())) {\n+\t\t\t\tif (sourceAttribute.getValue() != null) valuesToAdd.addAll(sourceAttribute.valueAsList());\n+\t\t\t} else {\n+\t\t\t\t//unexpected type of value, log it and skip the attribute\n+\t\t\t\tlog.error(\"Unexpected type of attribute (should be String or ArrayList) {}. It will be skipped.\", sourceAttribute);\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException ex) {\n+\t\t\t//we can log this situation and skip the attribute from computing\n+\t\t\tlog.warn(\"When counting value of attribute {} we are missing source attribute {}. Exception: {}. It will be skipped.\", this.getAttributeDefinition(), nameOfAttribute, ex);\n+\t\t} catch (WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\n+\t\treturn valuesToAdd;\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getStrongDependencies() {\n+\t\tList<String> strongDependencies = new ArrayList<>();\n+\t\tstrongDependencies.add(A_U_D_preferredMail);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5MjIzNw==", "bodyText": "Changed.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420792237", "createdAt": "2020-05-06T13:32:06Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSortedSet<String> tcsMailsValue = new TreeSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\t\tList<AuditEvent> resolvingMessages = new ArrayList<>();\n+\n+\t\t// handle source user attributes changes\n+\t\tif (message instanceof AttributeSetForUser && isAffectedAttribute(((AttributeSetForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser && isAffectedAttribute(((AttributeRemovedForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n+\n+\t\t}\n+\n+\t\treturn resolvingMessages;\n+\t}\n+\n+\t/**\n+\t * Return true if attribute name is one of affected attributes in this virtual module.\n+\t *\n+\t * @param nameOfAttribute name of attribute to check\n+\t * @return true if attribute is one of affected, false otherwise\n+\t */\n+\tprivate boolean isAffectedAttribute(String nameOfAttribute) {\n+\t\tif(preferredMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(isMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(o365MailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(publicMailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(privateMailsFriendlyName.equals(nameOfAttribute)) return true;\n+\n+\t\treturn false;\n+\t}\n+\n+\t/**\n+\t * Return email values as sorted set from attribute by name.\n+\t *\n+\t * It works only for String and List attributes. If attribute has different type of value, it will be logged and skipped.\n+\t * If attribute has empty value, it will return empty set.\n+\t * If attribute not exists, it will be logged and skipped.\n+\t *\n+\t * @param sess perun session\n+\t * @param user user to get values for\n+\t * @param nameOfAttribute name of attribute for which values should be returned\n+\t *\n+\t * @return sorted set of values of attribute defined by name\n+\t */\n+\tprivate SortedSet<String> getEmailValues(PerunSessionImpl sess, User user, String nameOfAttribute) {\n+\t\tSortedSet<String> valuesToAdd = new TreeSet<>();\n+\t\ttry {\n+\t\t\tAttribute sourceAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, user, nameOfAttribute);\n+\t\t\tif (sourceAttribute.getType().equals(String.class.getName())) {\n+\t\t\t\tif (sourceAttribute.getValue() != null) valuesToAdd.add(sourceAttribute.valueAsString());\n+\t\t\t} else if (sourceAttribute.getType().equals(ArrayList.class.getName())) {\n+\t\t\t\tif (sourceAttribute.getValue() != null) valuesToAdd.addAll(sourceAttribute.valueAsList());\n+\t\t\t} else {\n+\t\t\t\t//unexpected type of value, log it and skip the attribute\n+\t\t\t\tlog.error(\"Unexpected type of attribute (should be String or ArrayList) {}. It will be skipped.\", sourceAttribute);\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException ex) {\n+\t\t\t//we can log this situation and skip the attribute from computing\n+\t\t\tlog.warn(\"When counting value of attribute {} we are missing source attribute {}. Exception: {}. It will be skipped.\", this.getAttributeDefinition(), nameOfAttribute, ex);\n+\t\t} catch (WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\n+\t\treturn valuesToAdd;\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getStrongDependencies() {\n+\t\tList<String> strongDependencies = new ArrayList<>();\n+\t\tstrongDependencies.add(A_U_D_preferredMail);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwNzM1OQ=="}, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTE3OTQyOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoyOToxNVrOGQpaFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzowOToxN1rOGRxNWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwODgyMg==", "bodyText": "You can change the last \"else if\" to:\nreturn (privateMailsFriendlyName.equals(nameOfAttribute));\n\nTherefore, you do not have to have that extra code at the end of the method.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420108822", "createdAt": "2020-05-05T13:29:15Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSortedSet<String> tcsMailsValue = new TreeSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\t\tList<AuditEvent> resolvingMessages = new ArrayList<>();\n+\n+\t\t// handle source user attributes changes\n+\t\tif (message instanceof AttributeSetForUser && isAffectedAttribute(((AttributeSetForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser && isAffectedAttribute(((AttributeRemovedForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n+\n+\t\t}\n+\n+\t\treturn resolvingMessages;\n+\t}\n+\n+\t/**\n+\t * Return true if attribute name is one of affected attributes in this virtual module.\n+\t *\n+\t * @param nameOfAttribute name of attribute to check\n+\t * @return true if attribute is one of affected, false otherwise\n+\t */\n+\tprivate boolean isAffectedAttribute(String nameOfAttribute) {\n+\t\tif(preferredMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(isMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(o365MailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(publicMailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(privateMailsFriendlyName.equals(nameOfAttribute)) return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5MjIwMg==", "bodyText": "I don't think it is necessary and it is easier to read the simple version than the shorter one.", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r420792202", "createdAt": "2020-05-06T13:32:03Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSortedSet<String> tcsMailsValue = new TreeSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\t\tList<AuditEvent> resolvingMessages = new ArrayList<>();\n+\n+\t\t// handle source user attributes changes\n+\t\tif (message instanceof AttributeSetForUser && isAffectedAttribute(((AttributeSetForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser && isAffectedAttribute(((AttributeRemovedForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n+\n+\t\t}\n+\n+\t\treturn resolvingMessages;\n+\t}\n+\n+\t/**\n+\t * Return true if attribute name is one of affected attributes in this virtual module.\n+\t *\n+\t * @param nameOfAttribute name of attribute to check\n+\t * @return true if attribute is one of affected, false otherwise\n+\t */\n+\tprivate boolean isAffectedAttribute(String nameOfAttribute) {\n+\t\tif(preferredMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(isMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(o365MailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(publicMailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(privateMailsFriendlyName.equals(nameOfAttribute)) return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwODgyMg=="}, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4NTIxMA==", "bodyText": "Ok :)", "url": "https://github.com/CESNET/perun/pull/2686#discussion_r421285210", "createdAt": "2020-05-07T07:09:17Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_tcsMails_mu.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AllAttributesRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeChangedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeRemovedForUser;\n+import cz.metacentrum.perun.audit.events.AttributesManagerEvents.AttributeSetForUser;\n+import cz.metacentrum.perun.audit.events.AuditEvent;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * Get all emails from Perun for purpose of TCS.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_tcsMails_mu extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String preferredMailFriendlyName = \"preferredMail\";\n+\tprivate static final String isMailFriendlyName = \"ISMail\";\n+\tprivate static final String publicMailsFriendlyName = \"publicAliasMails\";\n+\tprivate static final String privateMailsFriendlyName = \"privateAliasMails\";\n+\tprivate static final String o365MailsFriendlyName = \"o365EmailAddresses:mu\";\n+\n+\tprivate static final String A_U_D_preferredMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + preferredMailFriendlyName;\n+\tprivate static final String A_U_D_ISMail = AttributesManager.NS_USER_ATTR_DEF + \":\" + isMailFriendlyName;\n+\tprivate static final String A_U_D_publicAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + publicMailsFriendlyName;\n+\tprivate static final String A_U_D_privateAliasMails = AttributesManager.NS_USER_ATTR_DEF + \":\" + privateMailsFriendlyName;\n+\tprivate static final String A_U_D_o365EmailAddressesMU = AttributesManager.NS_USER_ATTR_DEF + \":\" + o365MailsFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_tcsMails_mu.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSortedSet<String> tcsMailsValue = new TreeSet<>();\n+\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_preferredMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_ISMail));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_o365EmailAddressesMU));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_publicAliasMails));\n+\t\ttcsMailsValue.addAll(getEmailValues(sess, user, A_U_D_privateAliasMails));\n+\n+\t\tattribute.setValue(new ArrayList(tcsMailsValue));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\t\tList<AuditEvent> resolvingMessages = new ArrayList<>();\n+\n+\t\t// handle source user attributes changes\n+\t\tif (message instanceof AttributeSetForUser && isAffectedAttribute(((AttributeSetForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser && isAffectedAttribute(((AttributeRemovedForUser) message).getAttribute().getFriendlyName())) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, this.getAttributeDefinition().getName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n+\n+\t\t}\n+\n+\t\treturn resolvingMessages;\n+\t}\n+\n+\t/**\n+\t * Return true if attribute name is one of affected attributes in this virtual module.\n+\t *\n+\t * @param nameOfAttribute name of attribute to check\n+\t * @return true if attribute is one of affected, false otherwise\n+\t */\n+\tprivate boolean isAffectedAttribute(String nameOfAttribute) {\n+\t\tif(preferredMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(isMailFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(o365MailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(publicMailsFriendlyName.equals(nameOfAttribute)) return true;\n+\t\telse if(privateMailsFriendlyName.equals(nameOfAttribute)) return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwODgyMg=="}, "originalCommit": {"oid": "ac1c312fe445c2cac297d13a435d62e61270defd"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2033, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}