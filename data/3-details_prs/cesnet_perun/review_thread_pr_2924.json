{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNDc0MTQ2", "number": 2924, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMDo1MDozNFrOEr_46Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMDo1MDozNFrOEr_46Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTcwOTg1OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMDo1MDozNFrOHfEyHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwODo0MjoxNlrOHgb2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM0NjI2OQ==", "bodyText": "I am not sure if this will help. On the left side, you have data from the database. So, for example:\nfirst_name = 'Michal'\nmiddle_name = ''\nlast_name = 'Stava'\nthe operation || will join these Strings, and I expect something like 'MichalStava'. Then we expect that it should be the same as the input from the user (the variable :nameString) where I would expect something like \"Michal Stava\". So replacing spaces on the left side is ok, but shouldn't you do the same on the right side?\nSame for the other situations.\nIt looks like this works in tests below only because there is a quick fix that is doing replacing of spaces in the parameter itself.", "url": "https://github.com/CESNET/perun/pull/2924#discussion_r502346269", "createdAt": "2020-10-09T10:50:34Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java", "diffHunk": "@@ -1682,9 +1682,9 @@ public static void validateGroupName(String name, String regex) throws InvalidGr\n \t */\n \tpublic static String prepareUserSearchQueryExactMatch() {\n \t\tif (Compatibility.isPostgreSql()) {\n-\t\t\treturn \" lower(\"+Compatibility.convertToAscii(\"COALESCE(users.first_name,'') || COALESCE(users.middle_name,'') || COALESCE(users.last_name,'')\")+\")=:nameString\";\n+\t\t\treturn \" replace(lower(\"+Compatibility.convertToAscii(\"COALESCE(users.first_name,'') || COALESCE(users.middle_name,'') || COALESCE(users.last_name,'')\")+\"), ' ', '')=:nameString\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92f5c2cb9fa856a8ca9318088c537aadd79465bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc3MTY2MQ==", "bodyText": "In that case shouldn't we use lower() on the right side as well? Because only the parameter itself is turned to lower case.", "url": "https://github.com/CESNET/perun/pull/2924#discussion_r503771661", "createdAt": "2020-10-13T08:40:29Z", "author": {"login": "cuadradek"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java", "diffHunk": "@@ -1682,9 +1682,9 @@ public static void validateGroupName(String name, String regex) throws InvalidGr\n \t */\n \tpublic static String prepareUserSearchQueryExactMatch() {\n \t\tif (Compatibility.isPostgreSql()) {\n-\t\t\treturn \" lower(\"+Compatibility.convertToAscii(\"COALESCE(users.first_name,'') || COALESCE(users.middle_name,'') || COALESCE(users.last_name,'')\")+\")=:nameString\";\n+\t\t\treturn \" replace(lower(\"+Compatibility.convertToAscii(\"COALESCE(users.first_name,'') || COALESCE(users.middle_name,'') || COALESCE(users.last_name,'')\")+\"), ' ', '')=:nameString\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM0NjI2OQ=="}, "originalCommit": {"oid": "92f5c2cb9fa856a8ca9318088c537aadd79465bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc3MjcyMQ==", "bodyText": "In my opinion, we should do the same operations (database operations) on both sides.", "url": "https://github.com/CESNET/perun/pull/2924#discussion_r503772721", "createdAt": "2020-10-13T08:42:16Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/Utils.java", "diffHunk": "@@ -1682,9 +1682,9 @@ public static void validateGroupName(String name, String regex) throws InvalidGr\n \t */\n \tpublic static String prepareUserSearchQueryExactMatch() {\n \t\tif (Compatibility.isPostgreSql()) {\n-\t\t\treturn \" lower(\"+Compatibility.convertToAscii(\"COALESCE(users.first_name,'') || COALESCE(users.middle_name,'') || COALESCE(users.last_name,'')\")+\")=:nameString\";\n+\t\t\treturn \" replace(lower(\"+Compatibility.convertToAscii(\"COALESCE(users.first_name,'') || COALESCE(users.middle_name,'') || COALESCE(users.last_name,'')\")+\"), ' ', '')=:nameString\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM0NjI2OQ=="}, "originalCommit": {"oid": "92f5c2cb9fa856a8ca9318088c537aadd79465bc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2325, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}