{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5ODk0NzI0", "number": 2707, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODoyMjowMFrOD9sGhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDoyNDoxMFrOD-jGRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDEyMjk1OnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODoyMjowMFrOGXVLkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTowODo1M1rOGXXGXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExNzQ1Nw==", "bodyText": "You should remove this comment.", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427117457", "createdAt": "2020-05-19T08:22:00Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java", "diffHunk": "@@ -5607,7 +5607,8 @@ public void testUniqAttributes() throws Exception {\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase \"member_group\":\n \t\t\t\t\t\t\tattributesManager.setAttribute(sess, member1OfUser1, group1InVo1, a);\n-\t\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser1, group1InVo1, b);\n+\t\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser2, group2InVo1, b);\n+\t\t\t\t\t\t\t//attributesManager.setAttribute(sess, member2OfUser1, group1InVo1, b);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODg5Mw==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427148893", "createdAt": "2020-05-19T09:08:53Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/AttributesManagerEntryIntegrationTestAbstract.java", "diffHunk": "@@ -5607,7 +5607,8 @@ public void testUniqAttributes() throws Exception {\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase \"member_group\":\n \t\t\t\t\t\t\tattributesManager.setAttribute(sess, member1OfUser1, group1InVo1, a);\n-\t\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser1, group1InVo1, b);\n+\t\t\t\t\t\t\tattributesManager.setAttribute(sess, member2OfUser2, group2InVo1, b);\n+\t\t\t\t\t\t\t//attributesManager.setAttribute(sess, member2OfUser1, group1InVo1, b);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExNzQ1Nw=="}, "originalCommit": {"oid": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDEzMzExOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODoyNDoxN1rOGXVRkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOToyMjo0MlrOGXXoQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg==", "bodyText": "Why are you adding exception MemberGroupMismatchException to the methods, where is no control of it?", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427118992", "createdAt": "2020-05-19T08:24:17Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -356,7 +362,7 @@ public AttributesManagerBlImpl(AttributesManagerImplApi attributesManagerImpl) {\n \t}\n \n \t@Override\n-\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException {\n+\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException, MemberGroupMismatchException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0NTg0MQ==", "bodyText": "Its enforced by the calling getAttributes(sess, member, group) within the method, but you are right that we should check it, since for the case of non-empty attrNames it wouldn't be checked at all.", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427145841", "createdAt": "2020-05-19T09:04:11Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -356,7 +362,7 @@ public AttributesManagerBlImpl(AttributesManagerImplApi attributesManagerImpl) {\n \t}\n \n \t@Override\n-\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException {\n+\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException, MemberGroupMismatchException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg=="}, "originalCommit": {"oid": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0ODk0Ng==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427148946", "createdAt": "2020-05-19T09:09:00Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -356,7 +362,7 @@ public AttributesManagerBlImpl(AttributesManagerImplApi attributesManagerImpl) {\n \t}\n \n \t@Override\n-\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException {\n+\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException, MemberGroupMismatchException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg=="}, "originalCommit": {"oid": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1NjQzNQ==", "bodyText": "It is not just in this method. So it was more a rhetorical question. If they need to have this check just because of under-layer method, then it is ok.", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427156435", "createdAt": "2020-05-19T09:20:48Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -356,7 +362,7 @@ public AttributesManagerBlImpl(AttributesManagerImplApi attributesManagerImpl) {\n \t}\n \n \t@Override\n-\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException {\n+\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException, MemberGroupMismatchException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg=="}, "originalCommit": {"oid": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1NzU2OA==", "bodyText": "Ok. I'll check other methods, to be sure check is not skipped like it was there.", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r427157568", "createdAt": "2020-05-19T09:22:42Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -356,7 +362,7 @@ public AttributesManagerBlImpl(AttributesManagerImplApi attributesManagerImpl) {\n \t}\n \n \t@Override\n-\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException {\n+\tpublic List<Attribute> getAttributes(PerunSession sess, Group group, Member member, Resource resource, List<String> attrNames, boolean workWithUserAttributes) throws InternalErrorException, MemberResourceMismatchException, GroupResourceMismatchException, MemberGroupMismatchException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzExODk5Mg=="}, "originalCommit": {"oid": "3ec3eb111cbc6b3c7b4cf8397b163af101a7d778"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTEzMzUwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDoyNDoxMFrOGYt0ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzowMjozM1rOGY7Gfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2OTc4Ng==", "bodyText": "I think you can move the check before the if.", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r428569786", "createdAt": "2020-05-21T10:24:10Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -3499,28 +3515,31 @@ public void checkAttributesSemantics(PerunSession sess, Member member, Resource\n \t}\n \n \t@Override\n-\tpublic void checkAttributeSemantics(PerunSession sess, Member member, Group group, Attribute attribute) throws InternalErrorException, WrongAttributeAssignmentException {\n+\tpublic void checkAttributeSemantics(PerunSession sess, Member member, Group group, Attribute attribute) throws InternalErrorException, WrongAttributeAssignmentException, MemberGroupMismatchException {\n+\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);\n \t\tgetAttributesManagerImpl().checkNamespace(sess, attribute, NS_MEMBER_GROUP_ATTR);\n \n \t\tif (attribute.getValue() == null && !isTrulyRequiredAttribute(sess, member, group, attribute)) return;\n \t\tgetAttributesManagerImpl().checkAttributeSemantics(sess, member, group, attribute);\n \t}\n \n \t@Override\n-\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException {\n+\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException, MemberGroupMismatchException {\n \t\tcheckAttributesSemantics(sess, member, group, attributes, false);\n \t}\n \n \t@Override\n-\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes, boolean workWithUserAttributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException {\n+\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes, boolean workWithUserAttributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException, MemberGroupMismatchException {\n \t\tif (!workWithUserAttributes) {\n \t\t\tgetAttributesManagerImpl().checkNamespace(sess, attributes, NS_MEMBER_GROUP_ATTR);\n+\t\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);\n \n \t\t\tfor (Attribute attribute : attributes) {\n \t\t\t\tif (attribute.getValue() == null && !isTrulyRequiredAttribute(sess, member, group, attribute)) continue;\n \t\t\t\tgetAttributesManagerImpl().checkAttributeSemantics(sess, member, group, attribute);\n \t\t\t}\n \t\t} else {\n+\t\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97e78bcf8b6c96916534402f3229a92a35ac1a3e"}, "originalPosition": 258}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc4NzMyNw==", "bodyText": "Thanks for noticing, I fixed it and added lazy loading of user object for later checks.", "url": "https://github.com/CESNET/perun/pull/2707#discussion_r428787327", "createdAt": "2020-05-21T17:02:33Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/AttributesManagerBlImpl.java", "diffHunk": "@@ -3499,28 +3515,31 @@ public void checkAttributesSemantics(PerunSession sess, Member member, Resource\n \t}\n \n \t@Override\n-\tpublic void checkAttributeSemantics(PerunSession sess, Member member, Group group, Attribute attribute) throws InternalErrorException, WrongAttributeAssignmentException {\n+\tpublic void checkAttributeSemantics(PerunSession sess, Member member, Group group, Attribute attribute) throws InternalErrorException, WrongAttributeAssignmentException, MemberGroupMismatchException {\n+\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);\n \t\tgetAttributesManagerImpl().checkNamespace(sess, attribute, NS_MEMBER_GROUP_ATTR);\n \n \t\tif (attribute.getValue() == null && !isTrulyRequiredAttribute(sess, member, group, attribute)) return;\n \t\tgetAttributesManagerImpl().checkAttributeSemantics(sess, member, group, attribute);\n \t}\n \n \t@Override\n-\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException {\n+\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException, MemberGroupMismatchException {\n \t\tcheckAttributesSemantics(sess, member, group, attributes, false);\n \t}\n \n \t@Override\n-\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes, boolean workWithUserAttributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException {\n+\tpublic void checkAttributesSemantics(PerunSession sess, Member member, Group group, List<Attribute> attributes, boolean workWithUserAttributes) throws InternalErrorException, WrongAttributeAssignmentException, WrongReferenceAttributeValueException, MemberGroupMismatchException {\n \t\tif (!workWithUserAttributes) {\n \t\t\tgetAttributesManagerImpl().checkNamespace(sess, attributes, NS_MEMBER_GROUP_ATTR);\n+\t\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);\n \n \t\t\tfor (Attribute attribute : attributes) {\n \t\t\t\tif (attribute.getValue() == null && !isTrulyRequiredAttribute(sess, member, group, attribute)) continue;\n \t\t\t\tgetAttributesManagerImpl().checkAttributeSemantics(sess, member, group, attribute);\n \t\t\t}\n \t\t} else {\n+\t\t\tthis.checkMemberIsFromTheSameVoLikeGroup(sess, member, group);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2OTc4Ng=="}, "originalCommit": {"oid": "97e78bcf8b6c96916534402f3229a92a35ac1a3e"}, "originalPosition": 258}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2045, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}