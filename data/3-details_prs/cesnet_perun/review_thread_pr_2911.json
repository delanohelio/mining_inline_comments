{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNTI4MzE1", "number": 2911, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjoyOTozOVrOEnUx4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjo1MDowN1rOEnVHgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjcwMzcwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjoyOTozOVrOHX2oAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODo0MjoyN1rOHbAYog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDI3NQ==", "bodyText": "The regex could be maybe a constant?", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494774275", "createdAt": "2020-09-25T06:29:39Z", "author": {"login": "metodej"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();\n+\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n+\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n+\t\t\tif(!canonicalPath.matches(\"^[-a-zA-Z.0-9_/:=,]+$\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMTk5Mg==", "bodyText": "You are right Metodej, but even better would be to create a static variable outside of this method and precompile the regex there so it does not have to be compiled each time this method Is called.", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r495531992", "createdAt": "2020-09-27T05:40:36Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();\n+\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n+\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n+\t\t\tif(!canonicalPath.matches(\"^[-a-zA-Z.0-9_/:=,]+$\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDI3NQ=="}, "originalCommit": {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3OTkwNg==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r498079906", "createdAt": "2020-10-01T08:42:27Z", "author": {"login": "mvocu"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();\n+\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n+\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n+\t\t\tif(!canonicalPath.matches(\"^[-a-zA-Z.0-9_/:=,]+$\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDI3NQ=="}, "originalCommit": {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjcwNTUxOnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/ModulesUtilsEntryIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjozMDoxMVrOHX2o9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODo1NTo0NlrOHbA4Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDUxOA==", "bodyText": "I think there is supposed to be name of the test in comment.", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494774518", "createdAt": "2020-09-25T06:30:11Z", "author": {"login": "metodej"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/ModulesUtilsEntryIntegrationTest.java", "diffHunk": "@@ -715,6 +715,15 @@ public void checkQuotasErrorInValue() throws Exception {\n \t\tmodulesUtilsBl.checkAndTransferQuotas(dataQuotasAttribute, resource, null, true);\n \t}\n \n+\t@Test(expected=WrongAttributeValueException.class)\n+\tpublic void checkQuotasErrorInPath() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"WrongAttributeValueException\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA4ODAzOQ==", "bodyText": "Fixed in the original method also.", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r498088039", "createdAt": "2020-10-01T08:55:46Z", "author": {"login": "mvocu"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/ModulesUtilsEntryIntegrationTest.java", "diffHunk": "@@ -715,6 +715,15 @@ public void checkQuotasErrorInValue() throws Exception {\n \t\tmodulesUtilsBl.checkAndTransferQuotas(dataQuotasAttribute, resource, null, true);\n \t}\n \n+\t@Test(expected=WrongAttributeValueException.class)\n+\tpublic void checkQuotasErrorInPath() throws Exception {\n+\t\tSystem.out.println(CLASS_NAME + \"WrongAttributeValueException\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NDUxOA=="}, "originalCommit": {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjcwOTA2OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjozMTozOFrOHX2rCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODo0MzoxN1rOHbAasA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NTA1MA==", "bodyText": "I think the declaration and the assignment of the variable could be on one line.", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494775050", "createdAt": "2020-09-25T06:31:38Z", "author": {"login": "metodej"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA4MDQzMg==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r498080432", "createdAt": "2020-10-01T08:43:17Z", "author": {"login": "mvocu"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc3NTA1MA=="}, "originalCommit": {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Njc1OTA0OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjo1MDowOFrOHX3IEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMDo1MzoyOVrOHX-0bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc4MjQ4MA==", "bodyText": "Also I think that the normalize() function changes slashes in windows and then the regex does not match there. But I don't know if we care about users with windows...", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494782480", "createdAt": "2020-09-25T06:50:08Z", "author": {"login": "metodej"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkwODUyNw==", "bodyText": "We are not supporting window's path at this moment so this is ok.", "url": "https://github.com/CESNET/perun/pull/2911#discussion_r494908527", "createdAt": "2020-09-25T10:53:29Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -784,11 +785,10 @@ public void checkIfQuotasIsInLimit(Map<String, Pair<BigDecimal, BigDecimal>> quo\n \n \t\t\t//testing if path is unique\n \t\t\tString canonicalPath;\n-\t\t\ttry {\n-\t\t\t\tcanonicalPath = new URI(path).normalize().getPath();\n-\t\t\t\t//path should not end on '/' (problem with some systems as GPFS)\n-\t\t\t\tif(!canonicalPath.equals(\"/\") && canonicalPath.endsWith(\"/\")) canonicalPath = canonicalPath.substring(0, canonicalPath.length() - 1);\n-\t\t\t} catch (URISyntaxException ex) {\n+\t\t\tcanonicalPath = Paths.get(path).normalize().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc4MjQ4MA=="}, "originalCommit": {"oid": "b5b759485a9cd7296f4ebc2992dcac309e8c042e"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2301, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}