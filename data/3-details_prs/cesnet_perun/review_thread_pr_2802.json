{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NDc4Mzg4", "number": 2802, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoxODoyNVrOEQnlag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoxODoyNVrOEQnlag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODYxMjI2OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/SearcherImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoxODoyNVrOG03gQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo1NjoxMFrOG1DeDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4ODUxNA==", "bodyText": "There is nothing like large objects anymore, so can't we remove these special parts too?", "url": "https://github.com/CESNET/perun/pull/2802#discussion_r458088514", "createdAt": "2020-07-21T13:18:25Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/SearcherImpl.java", "diffHunk": "@@ -186,62 +183,37 @@ private void insertWhereClausesAndQueryParametersFromAttributes(StringBuilder qu\n \t\t\tquery.append(\"left join attr_names nam\").append(counter).append(\" on val\").append(counter).append(\".attr_id=nam\").append(counter).append(\".id \");\n \n \t\t\tif (value == null || value.isEmpty()) {\n-\t\t\t\tif(key.getType().equals(LinkedHashMap.class.getName()) ||\n-\t\t\t\t\t\tkey.getType().equals(BeansUtils.largeStringClassName) ||\n-\t\t\t\t\t\tkey.getType().equals(BeansUtils.largeArrayListClassName)) {\n-\t\t\t\t\twhereClauses.add(\"val\" + counter + \".attr_value_text IS NULL \");\n-\t\t\t\t} else {\n-\t\t\t\t\twhereClauses.add(\"val\" + counter + \".attr_value IS NULL \");\n-\t\t\t\t}\n+\t\t\t\twhereClauses.add(\"val\" + counter + \".attr_value IS NULL \");\n \t\t\t} else {\n \t\t\t\tif (key.getType().equals(Integer.class.getName())) {\n \t\t\t\t\tkey.setValue(Integer.valueOf(value));\n \t\t\t\t\twhereClauses.add(\"val\" + counter + \".attr_value=:v\" + counter + \" \");\n \t\t\t\t\twhereClauses.add(\"nam\" + counter + \".type=:n\" + counter + \" \");\n \t\t\t\t\tparameters.addValue(\"n\" + counter, Integer.class.getName());\n \t\t\t\t\tparameters.addValue(\"v\" + counter, BeansUtils.attributeValueToString(key));\n-\t\t\t\t} else if (key.getType().equals(String.class.getName())) {\n+\t\t\t\t} else if (key.getType().equals(String.class.getName()) || key.getType().equals(BeansUtils.largeStringClassName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c8e7105be9feeb3adafbc9089b4cccefa682bc8"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4NDU1Ng==", "bodyText": "I'd like to, but for now we have existing attributes with these types and I'm not sure, that nobody has that harcoded when calling API. But If we agree and let others know, we can convert all such attributes to their default type using DB changelog and then it can be removed from everywhere (gui/cli/core).", "url": "https://github.com/CESNET/perun/pull/2802#discussion_r458284556", "createdAt": "2020-07-21T17:56:10Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/SearcherImpl.java", "diffHunk": "@@ -186,62 +183,37 @@ private void insertWhereClausesAndQueryParametersFromAttributes(StringBuilder qu\n \t\t\tquery.append(\"left join attr_names nam\").append(counter).append(\" on val\").append(counter).append(\".attr_id=nam\").append(counter).append(\".id \");\n \n \t\t\tif (value == null || value.isEmpty()) {\n-\t\t\t\tif(key.getType().equals(LinkedHashMap.class.getName()) ||\n-\t\t\t\t\t\tkey.getType().equals(BeansUtils.largeStringClassName) ||\n-\t\t\t\t\t\tkey.getType().equals(BeansUtils.largeArrayListClassName)) {\n-\t\t\t\t\twhereClauses.add(\"val\" + counter + \".attr_value_text IS NULL \");\n-\t\t\t\t} else {\n-\t\t\t\t\twhereClauses.add(\"val\" + counter + \".attr_value IS NULL \");\n-\t\t\t\t}\n+\t\t\t\twhereClauses.add(\"val\" + counter + \".attr_value IS NULL \");\n \t\t\t} else {\n \t\t\t\tif (key.getType().equals(Integer.class.getName())) {\n \t\t\t\t\tkey.setValue(Integer.valueOf(value));\n \t\t\t\t\twhereClauses.add(\"val\" + counter + \".attr_value=:v\" + counter + \" \");\n \t\t\t\t\twhereClauses.add(\"nam\" + counter + \".type=:n\" + counter + \" \");\n \t\t\t\t\tparameters.addValue(\"n\" + counter, Integer.class.getName());\n \t\t\t\t\tparameters.addValue(\"v\" + counter, BeansUtils.attributeValueToString(key));\n-\t\t\t\t} else if (key.getType().equals(String.class.getName())) {\n+\t\t\t\t} else if (key.getType().equals(String.class.getName()) || key.getType().equals(BeansUtils.largeStringClassName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4ODUxNA=="}, "originalCommit": {"oid": "6c8e7105be9feeb3adafbc9089b4cccefa682bc8"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1953, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}