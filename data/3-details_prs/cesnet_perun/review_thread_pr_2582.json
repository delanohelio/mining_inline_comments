{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MDk1MzE0", "number": 2582, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoxMDo0NFrODiaCrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzozMjoyNFrODiagvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDA0ODQ3OnYy", "diffSide": "RIGHT", "path": "perun-openapi/openapi.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoxMDo0NFrOFtor0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoxMDo0NFrOFtor0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5NjgxOA==", "bodyText": "There is no need to have two separate methods deleteVo and deleteVoForce, the \"force\" parameter can be declared \"required: false\" which makes it optional. Keep just one deleteVo method with the optional parameter.", "url": "https://github.com/CESNET/perun/pull/2582#discussion_r383396818", "createdAt": "2020-02-24T17:10:44Z", "author": {"login": "martin-kuba"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -6832,11 +6868,104 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO deleteVo\n+  /urlinjsonout/vosManager/deleteVo/pure:\n+    post:\n+      tags:\n+        - VosManager\n+      operationId: deleteVo\n+      summary: Deletes a VO. If VO contain members, group or resources, it's not deleted and exception is thrown.\n+      parameters:\n+        - $ref: '#/components/parameters/voId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO createVo\n+  /urlinjsonout/vosManager/deleteVo/withAll:\n+    post:\n+      tags:\n+        - VosManager\n+      operationId: deleteVoForce\n+      summary: Deletes a VO. If <code>force == true</code> then VO is deleted including members, groups and resources.\n+               Otherwise only empty VO is deleted or exception is thrown.\n+      parameters:\n+        - $ref: '#/components/parameters/voId'\n+        - { name: force, description: \"Force must be true\", schema: { type: boolean },  in: query, required: true }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e959fa09acdd5ec6800352870caa3ace3afe4ebf"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDA2NjM2OnYy", "diffSide": "RIGHT", "path": "perun-openapi/openapi.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoxNTo1M1rOFto20A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoxNTo1M1rOFto20A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5OTYzMg==", "bodyText": "The operations /json/vosManager/findCandidates and /json/vosManager/findCandidates/withMaxNumberResults can be merged into one with optional parameter maxNumOfResults.", "url": "https://github.com/CESNET/perun/pull/2582#discussion_r383399632", "createdAt": "2020-02-24T17:15:53Z", "author": {"login": "martin-kuba"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -6866,11 +6995,126 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO findCandidates\n+  /json/vosManager/findCandidates:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: findCandidates\n+      summary: |\n+              Find candidates for VO. Candidates can be used to create new members. Candidates are searched\n+              in VOs external sources (if available). Candidates, which are already members of VO are never\n+              returned even if they match searchString.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+        - { name: searchString, schema: { type: string}, in: query, required: true, description: 'Text to search by' }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfCandidatesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getCompleteCandidates\n+  /json/vosManager/findCandidates/withMaxNumberResults:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: findCandidatesWithMaximumNumberResults\n+      summary: |\n+              Find candidates for VO with specified maximum number of results. Candidates can be used to create new members.\n+              Candidates are searched in VOs external sources (if available). Candidates, which are already members of VO are never\n+              returned even if they match searchString.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+        - { name: searchString, schema: { type: string}, in: query, required: true, description: 'Text to search by' }\n+        - { name: maxNumOfResults, schema: { type: integer}, in: query, required: true, description: 'Number of maximum results' }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e959fa09acdd5ec6800352870caa3ace3afe4ebf"}, "originalPosition": 203}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDA3MjQxOnYy", "diffSide": "RIGHT", "path": "perun-openapi/openapi.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoxNzo0M1rOFto6ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoxNzo0M1rOFto6ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwMDYwNg==", "bodyText": "Can be replaced with $ref: '#/components/parameters/attrNames'", "url": "https://github.com/CESNET/perun/pull/2582#discussion_r383400606", "createdAt": "2020-02-24T17:17:43Z", "author": {"login": "martin-kuba"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -6866,11 +6995,126 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO findCandidates\n+  /json/vosManager/findCandidates:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: findCandidates\n+      summary: |\n+              Find candidates for VO. Candidates can be used to create new members. Candidates are searched\n+              in VOs external sources (if available). Candidates, which are already members of VO are never\n+              returned even if they match searchString.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+        - { name: searchString, schema: { type: string}, in: query, required: true, description: 'Text to search by' }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfCandidatesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getCompleteCandidates\n+  /json/vosManager/findCandidates/withMaxNumberResults:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: findCandidatesWithMaximumNumberResults\n+      summary: |\n+              Find candidates for VO with specified maximum number of results. Candidates can be used to create new members.\n+              Candidates are searched in VOs external sources (if available). Candidates, which are already members of VO are never\n+              returned even if they match searchString.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+        - { name: searchString, schema: { type: string}, in: query, required: true, description: 'Text to search by' }\n+        - { name: maxNumOfResults, schema: { type: integer}, in: query, required: true, description: 'Number of maximum results' }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfCandidatesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getVosCount\n+  /json/vosManager/findCandidates/forGroup:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: findCandidatesForGroup\n+      summary: |\n+              Find candidates for Group. Candidates can be used to create new VO and Group members. Candidates are searched\n+              in Groups external sources (if available). Candidates, which are already members of VO are never\n+              returned even if they match searchString.\n+      parameters:\n+        - { name: group, schema: { type: integer}, in: query, required: true, description: 'group id' }\n+        - { name: searchString, schema: { type: string}, in: query, required: true, description: 'Text to search by' }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfCandidatesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/vosManager/getCompleteCandidates/forVo:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: getCompleteCandidatesForVo\n+      summary: |\n+                Find MemberCandidates for VO. MemberCandidates can be used to create new members. They are made of Candidate,\n+                RichUser and Member objects. Candidates are searched in VO's external sources (if available). RichUsers are\n+                searched in given VO and are associated with appropriate candidate and member. RichUsers for MemberCandidates\n+                may also be searched in the whole Perun.\n+      parameters:\n+        - { name: vo, schema: { type: integer}, in: query, required: true, description: 'vo id' }\n+        - name: attrNames", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e959fa09acdd5ec6800352870caa3ace3afe4ebf"}, "originalPosition": 241}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDA3MzM5OnYy", "diffSide": "RIGHT", "path": "perun-openapi/openapi.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoxODowMlrOFto7QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoxODowMlrOFto7QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwMDc2OA==", "bodyText": "dtto", "url": "https://github.com/CESNET/perun/pull/2582#discussion_r383400768", "createdAt": "2020-02-24T17:18:02Z", "author": {"login": "martin-kuba"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -6866,11 +6995,126 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO findCandidates\n+  /json/vosManager/findCandidates:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: findCandidates\n+      summary: |\n+              Find candidates for VO. Candidates can be used to create new members. Candidates are searched\n+              in VOs external sources (if available). Candidates, which are already members of VO are never\n+              returned even if they match searchString.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+        - { name: searchString, schema: { type: string}, in: query, required: true, description: 'Text to search by' }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfCandidatesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getCompleteCandidates\n+  /json/vosManager/findCandidates/withMaxNumberResults:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: findCandidatesWithMaximumNumberResults\n+      summary: |\n+              Find candidates for VO with specified maximum number of results. Candidates can be used to create new members.\n+              Candidates are searched in VOs external sources (if available). Candidates, which are already members of VO are never\n+              returned even if they match searchString.\n+      parameters:\n+        - $ref: '#/components/parameters/id'\n+        - { name: searchString, schema: { type: string}, in: query, required: true, description: 'Text to search by' }\n+        - { name: maxNumOfResults, schema: { type: integer}, in: query, required: true, description: 'Number of maximum results' }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfCandidatesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO getVosCount\n+  /json/vosManager/findCandidates/forGroup:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: findCandidatesForGroup\n+      summary: |\n+              Find candidates for Group. Candidates can be used to create new VO and Group members. Candidates are searched\n+              in Groups external sources (if available). Candidates, which are already members of VO are never\n+              returned even if they match searchString.\n+      parameters:\n+        - { name: group, schema: { type: integer}, in: query, required: true, description: 'group id' }\n+        - { name: searchString, schema: { type: string}, in: query, required: true, description: 'Text to search by' }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfCandidatesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/vosManager/getCompleteCandidates/forVo:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: getCompleteCandidatesForVo\n+      summary: |\n+                Find MemberCandidates for VO. MemberCandidates can be used to create new members. They are made of Candidate,\n+                RichUser and Member objects. Candidates are searched in VO's external sources (if available). RichUsers are\n+                searched in given VO and are associated with appropriate candidate and member. RichUsers for MemberCandidates\n+                may also be searched in the whole Perun.\n+      parameters:\n+        - { name: vo, schema: { type: integer}, in: query, required: true, description: 'vo id' }\n+        - name: attrNames\n+          description: 'list with names of attributes that should be find'\n+          schema:\n+            type: array\n+            items:\n+              type: string\n+          in: query\n+          required: true\n+        - { name: searchString, schema: { type: string}, in: query, required: true, description: 'Text to search by' }\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/ListOfMemberCandidatesResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/vosManager/getCompleteCandidates/forGroup:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: getCompleteCandidatesForGroup\n+      summary: |\n+                Find MemberCandidates for GROUP. MemberCandidates can be used to create new members. They are made of Candidate,\n+                RichUser and Member objects. Candidates are searched in VO's or GROUP's (depends on privileges) external sources\n+                (if available). RichUsers are searched in given VO and are associated with appropriate candidate and member.\n+                RichUsers for appropriate Candidate are also searched in the whole Perun.\n+      parameters:\n+        - { name: group, schema: { type: integer}, in: query, required: true, description: 'group id' }\n+        - name: attrNames", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e959fa09acdd5ec6800352870caa3ace3afe4ebf"}, "originalPosition": 268}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDEwNTMxOnYy", "diffSide": "RIGHT", "path": "perun-openapi/openapi.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoyNjozM1rOFtpObg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoyNjozM1rOFtpObg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwNTY3OA==", "bodyText": "The authorizedGroup parameter is repeated at methods addSponsorRoleToGroup, removeSponsorRoleFromGroup, addVoAdminGroup, removeVoAdminGroup, addFacilityAdminGroup, removeFacilityAdminGroup, addAdminToGroup, removeGroupAdminResource. Please declare it in #/components/parameters and use $ref to reference it.", "url": "https://github.com/CESNET/perun/pull/2582#discussion_r383405678", "createdAt": "2020-02-24T17:26:33Z", "author": {"login": "martin-kuba"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -6934,7 +7206,35 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-  #TODO removeSponsorRole\n+  /urlinjsonout/vosManager/removeSponsorRole/user:\n+    post:\n+      tags:\n+        - VosManager\n+      operationId: removeSponsorRoleFromUser\n+      summary: Removes user as a sponsor. His or her sponsored members will be set as expired if the user was their last sponsor.\n+      parameters:\n+        - $ref: '#/components/parameters/voId'\n+        - $ref: '#/components/parameters/userId'\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/VoidResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /urlinjsonout/vosManager/removeSponsorRole/group:\n+    post:\n+      tags:\n+        - VosManager\n+      operationId: removeSponsorRoleFromGroup\n+      summary: Removes group as a sponsor. All group members will cease to be sponsors, and their sponsored members will be set as expired if the group member was their last sponsor.\n+      parameters:\n+        - $ref: '#/components/parameters/voId'\n+        - { name: authorizedGroup, schema: { type: integer}, in: query, required: true, description: 'Group id' }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e959fa09acdd5ec6800352870caa3ace3afe4ebf"}, "originalPosition": 362}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDEyNTQyOnYy", "diffSide": "RIGHT", "path": "perun-openapi/openapi.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzozMjoyNFrOFtpaxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzozMjoyNFrOFtpaxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwODgzOA==", "bodyText": "Please use the shorter \"flow mapping\" syntax as for the other parameters.", "url": "https://github.com/CESNET/perun/pull/2582#discussion_r383408838", "createdAt": "2020-02-24T17:32:24Z", "author": {"login": "martin-kuba"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -6972,8 +7272,34 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n-\n-  #TODO getRichAdmins\n+  /json/vosManager/getRichAdmins:\n+    get:\n+      tags:\n+        - VosManager\n+      operationId: getRichAdminsForVo\n+      description: |\n+        Get list of all richUser administrators for the vo and supported role with specific attributes.\n+        Supported roles: VOOBSERVER, TOPGROUPCREATOR, VOADMIN\n+        If \"onlyDirectAdmins\" is == true, return only direct admins of the vo for supported role with specific attributes.\n+        If \"allUserAttributes\" is == true, do not specify attributes through list and return them all in objects richUser. Ignoring list of specific attributes.\n+      parameters:\n+        - $ref: '#/components/parameters/voId'\n+        - { name: role, schema: { $ref: '#/components/schemas/VoAdminRoles' }, in: query, required: true, description: 'role name'}\n+        - name: specificAttributes\n+          description: 'list of specified attributes which are needed in object richUser'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e959fa09acdd5ec6800352870caa3ace3afe4ebf"}, "originalPosition": 391}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2100, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}