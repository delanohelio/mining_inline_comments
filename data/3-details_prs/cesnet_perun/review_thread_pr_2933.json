{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzU3MDE4", "number": 2933, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzoxNjo0NlrOEtequw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwOToxMTo0MFrOEuYwuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTIzODM1OnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzoxNjo0NlrOHhSfyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzo1OTo1NlrOHhUidQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2ODEwNw==", "bodyText": "This would create ExtSource with name RC and type as value of birthNumber. At V\u0160UP type of RC ExtSource is INTERNAL, we should have constant for it somewhere.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504668107", "createdAt": "2020-10-14T13:16:46Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -159,6 +194,31 @@ public Application approveApplication(PerunSession session, Application app) thr\n \n \t\t}\n \n+\t\t// create ues RC for future merging\n+\t\tList<ApplicationFormItemData> data = new ArrayList<>();\n+\t\ttry {\n+\t\t\tdata = registrar.getApplicationDataById(session, app.getId());\n+\t\t} catch (RegistrarException e) {\n+\t\t\t// ignore because application's id is not null\n+\t\t}\n+\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\tString rc = item.getValue();\n+\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", rc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f84e2a56378239dea36fb37aa28826ea7024b6"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwMTU1Nw==", "bodyText": "Replaced with INTERVAL constant.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504701557", "createdAt": "2020-10-14T13:59:56Z", "author": {"login": "metodej"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -159,6 +194,31 @@ public Application approveApplication(PerunSession session, Application app) thr\n \n \t\t}\n \n+\t\t// create ues RC for future merging\n+\t\tList<ApplicationFormItemData> data = new ArrayList<>();\n+\t\ttry {\n+\t\t\tdata = registrar.getApplicationDataById(session, app.getId());\n+\t\t} catch (RegistrarException e) {\n+\t\t\t// ignore because application's id is not null\n+\t\t}\n+\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\tString rc = item.getValue();\n+\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", rc);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2ODEwNw=="}, "originalCommit": {"oid": "c9f84e2a56378239dea36fb37aa28826ea7024b6"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTI1NjQ5OnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzoyMDozN1rOHhSqtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzo1OTowN1rOHhUfww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3MDkwMg==", "bodyText": "You shouldn't pass identity from application into the RC UserExtSource. It should contain login from the rc, like\nnew UserExtSource(es, 0, rc));", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504670902", "createdAt": "2020-10-14T13:20:37Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -159,6 +194,31 @@ public Application approveApplication(PerunSession session, Application app) thr\n \n \t\t}\n \n+\t\t// create ues RC for future merging\n+\t\tList<ApplicationFormItemData> data = new ArrayList<>();\n+\t\ttry {\n+\t\t\tdata = registrar.getApplicationDataById(session, app.getId());\n+\t\t} catch (RegistrarException e) {\n+\t\t\t// ignore because application's id is not null\n+\t\t}\n+\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\tString rc = item.getValue();\n+\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", rc);\n+\t\t\t\t\tUserExtSource ues = new UserExtSource(es, app.getExtSourceLoa(), app.getCreatedBy());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f84e2a56378239dea36fb37aa28826ea7024b6"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwMDg2Nw==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504700867", "createdAt": "2020-10-14T13:59:07Z", "author": {"login": "metodej"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -159,6 +194,31 @@ public Application approveApplication(PerunSession session, Application app) thr\n \n \t\t}\n \n+\t\t// create ues RC for future merging\n+\t\tList<ApplicationFormItemData> data = new ArrayList<>();\n+\t\ttry {\n+\t\t\tdata = registrar.getApplicationDataById(session, app.getId());\n+\t\t} catch (RegistrarException e) {\n+\t\t\t// ignore because application's id is not null\n+\t\t}\n+\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\tString rc = item.getValue();\n+\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", rc);\n+\t\t\t\t\tUserExtSource ues = new UserExtSource(es, app.getExtSourceLoa(), app.getCreatedBy());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3MDkwMg=="}, "originalCommit": {"oid": "c9f84e2a56378239dea36fb37aa28826ea7024b6"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTMyMDUxOnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzozNDo1MlrOHhTSmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzo1OToxNFrOHhUgNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY4MTExMg==", "bodyText": "Message will contain toString() from the User object, which is not most user friendly way. I would prefer printing just displayName and ID.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504681112", "createdAt": "2020-10-14T13:34:52Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +43,87 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user + \" already in Perun and thus would be merged with him.\", null, null, null, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f84e2a56378239dea36fb37aa28826ea7024b6"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwMDk4Mg==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r504700982", "createdAt": "2020-10-14T13:59:14Z", "author": {"login": "metodej"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +43,87 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user + \" already in Perun and thus would be merged with him.\", null, null, null, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY4MTExMg=="}, "originalCommit": {"oid": "c9f84e2a56378239dea36fb37aa28826ea7024b6"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTk1NzM1OnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDoyNzo0MVrOHiBPYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjowODowOFrOHiPWxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzMzk1NA==", "bodyText": "Should be:\nperun.getExtSourcesManager().checkOrCreateExtSource(session, \"RC\", ExtSourcesManager.EXTSOURCE_INTERNAL);", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505433954", "createdAt": "2020-10-15T10:27:41Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -159,6 +196,31 @@ public Application approveApplication(PerunSession session, Application app) thr\n \n \t\t}\n \n+\t\t// create ues RC for future merging\n+\t\tList<ApplicationFormItemData> data = new ArrayList<>();\n+\t\ttry {\n+\t\t\tdata = registrar.getApplicationDataById(session, app.getId());\n+\t\t} catch (RegistrarException e) {\n+\t\t\t// ignore because application's id is not null\n+\t\t}\n+\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\tString rc = item.getValue();\n+\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, ExtSourcesManager.EXTSOURCE_NAME_INTERNAL, rc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec94fe3bc2defba257b0f7f844deb9a16c45764f"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NTIyMw==", "bodyText": "Fixed.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505665223", "createdAt": "2020-10-15T16:08:08Z", "author": {"login": "metodej"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -159,6 +196,31 @@ public Application approveApplication(PerunSession session, Application app) thr\n \n \t\t}\n \n+\t\t// create ues RC for future merging\n+\t\tList<ApplicationFormItemData> data = new ArrayList<>();\n+\t\ttry {\n+\t\t\tdata = registrar.getApplicationDataById(session, app.getId());\n+\t\t} catch (RegistrarException e) {\n+\t\t\t// ignore because application's id is not null\n+\t\t}\n+\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\tString rc = item.getValue();\n+\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\t\t\t\t\tExtSource es = perun.getExtSourcesManager().checkOrCreateExtSource(session, ExtSourcesManager.EXTSOURCE_NAME_INTERNAL, rc);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzMzk1NA=="}, "originalCommit": {"oid": "ec94fe3bc2defba257b0f7f844deb9a16c45764f"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTk4MzAwOnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDozNDoyMVrOHiBeyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjowODowMFrOHiPWcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzNzg5Ng==", "bodyText": "Are you sure this should react to any exception? Because if there will be for example \"InternalErrorException\", this will say that the application can be approved if I understand it right.\n@zlamalp should it work this way?", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505437896", "createdAt": "2020-10-15T10:34:21Z", "author": {"login": "stavamichal"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +44,88 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n+\t\t\t\t\t\t\tthrow ex;\n+\t\t\t\t\t\t} catch (Exception ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec94fe3bc2defba257b0f7f844deb9a16c45764f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ2ODQ5Ng==", "bodyText": "You are right, that we should fail at least on InternalErrorException and ExtSourceNotExistsException. Generally we should catch and ignore only safe exceptions thrown by the getUserByExtSourceNameAndExtLogin()", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505468496", "createdAt": "2020-10-15T11:31:33Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +44,88 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n+\t\t\t\t\t\t\tthrow ex;\n+\t\t\t\t\t\t} catch (Exception ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzNzg5Ng=="}, "originalCommit": {"oid": "ec94fe3bc2defba257b0f7f844deb9a16c45764f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NTEzNw==", "bodyText": "Ok, I've change the catched exception only to those that are thrown by getUserByExtSourceNameAndExtLogin().", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505665137", "createdAt": "2020-10-15T16:08:00Z", "author": {"login": "metodej"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +44,88 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n+\t\t\t\t\t\t\tthrow ex;\n+\t\t\t\t\t\t} catch (Exception ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzNzg5Ng=="}, "originalCommit": {"oid": "ec94fe3bc2defba257b0f7f844deb9a16c45764f"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjMwNjk0OnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjowODowMlrOHiEjNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjowOTozN1rOHiPamA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4ODE4Mw==", "bodyText": "I realized, that this won't handle the cases, when found user is already a member, since after this method, normal approval process takes place. So here, for case when user is not null, please add check, whether user is already a member of VO, eg.:\ntry {\n\tMember member = ((PerunBl) session.getPerun()).getMembersManagerBl().getMemberByUser(session, app.getVo(), app.getUser());\n\t// user is already a member, switch application type\n\tif (Application.AppType.INITIAL.equals(app.getType())) {\n\t\tapp.setType(Application.AppType.EXTENSION);\n\t\tregistrar.updateApplicationType(session, app);\n\t\tlog.debug(\"Updating application type to EXTENSION since we matched user which is VO member!\");\n\t}\n} catch (MemberNotExistsException e) {\n\t// OK state\n}\nYou must also implement new method in the RegistrarManager to update application type in a DB. It must be public, but there is no need to add it to the RPC, so we don't need authorization in it yet.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505488183", "createdAt": "2020-10-15T12:08:02Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +44,88 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n+\t\t\t\t\t\t\tthrow ex;\n+\t\t\t\t\t\t} catch (Exception ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Application beforeApprove(PerunSession session, Application app) throws RegistrarException, PrivilegeException {\n+\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n \n \t\t\tfor (ApplicationFormItemData item : data) {\n \t\t\t\tif (item.getFormItem() != null &&\n-\t\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF+\":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n \n \t\t\t\t\t// if application contains birth number, try to map to existing user\n \t\t\t\t\tString rc = item.getValue();\n \t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n \n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n-\t\t\t\t\t\t\tapplication.setUser(user);\n-\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, application);\n-\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", application);\n+\t\t\t\t\t\t\tapp.setUser(user);\n+\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, app);\n+\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", app);\n \t\t\t\t\t\t} catch (Exception ex) {\n-\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", application, ex);\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n \t\t\t\t\t\t}\n \n \t\t\t\t\t\t// associate existing user with the identity used on registration form\n-\t\t\t\t\t\tif (application.getUser() != null) {\n+\t\t\t\t\t\tif (app.getUser() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec94fe3bc2defba257b0f7f844deb9a16c45764f"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NjIwMA==", "bodyText": "Okay, thank you for comment, I've added this check and also the mentioned method.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r505666200", "createdAt": "2020-10-15T16:09:37Z", "author": {"login": "metodej"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +44,88 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (CantBeApprovedException ex) {\n+\t\t\t\t\t\t\tthrow ex;\n+\t\t\t\t\t\t} catch (Exception ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Application beforeApprove(PerunSession session, Application app) throws RegistrarException, PrivilegeException {\n+\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n \n \t\t\tfor (ApplicationFormItemData item : data) {\n \t\t\t\tif (item.getFormItem() != null &&\n-\t\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF+\":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n \n \t\t\t\t\t// if application contains birth number, try to map to existing user\n \t\t\t\t\tString rc = item.getValue();\n \t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n \n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n-\t\t\t\t\t\t\tapplication.setUser(user);\n-\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, application);\n-\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", application);\n+\t\t\t\t\t\t\tapp.setUser(user);\n+\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, app);\n+\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", app);\n \t\t\t\t\t\t} catch (Exception ex) {\n-\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", application, ex);\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n \t\t\t\t\t\t}\n \n \t\t\t\t\t\t// associate existing user with the identity used on registration form\n-\t\t\t\t\t\tif (application.getUser() != null) {\n+\t\t\t\t\t\tif (app.getUser() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4ODE4Mw=="}, "originalCommit": {"oid": "ec94fe3bc2defba257b0f7f844deb9a16c45764f"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MDM3MTk3OnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNzo1NDoyOVrOHisXXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODo0MTo1MlrOHiutNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE0MDUxMA==", "bodyText": "Isn't here the app.getUser() always null? This should probably be located elsewhere.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r506140510", "createdAt": "2020-10-16T07:54:29Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +46,98 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n \n \t\t\tfor (ApplicationFormItemData item : data) {\n \t\t\t\tif (item.getFormItem() != null &&\n-\t\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF+\":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n \n \t\t\t\t\t// if application contains birth number, try to map to existing user\n \t\t\t\t\tString rc = item.getValue();\n \t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n \n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n-\t\t\t\t\t\t\tapplication.setUser(user);\n-\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, application);\n-\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", application);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (ExtSourceNotExistsException | UserExtSourceNotExistsException | UserNotExistsException ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Application beforeApprove(PerunSession session, Application app) throws RegistrarException, PrivilegeException {\n+\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tapp.setUser(user);\n+\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, app);\n+\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", app);\n \t\t\t\t\t\t} catch (Exception ex) {\n-\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", application, ex);\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n \t\t\t\t\t\t}\n \n \t\t\t\t\t\t// associate existing user with the identity used on registration form\n-\t\t\t\t\t\tif (application.getUser() != null) {\n+\t\t\t\t\t\tif (app.getUser() != null) {\n \t\t\t\t\t\t\tPerunBl perunBl = (PerunBl)session.getPerun();\n-\t\t\t\t\t\t\tExtSource es = perunBl.getExtSourcesManager().checkOrCreateExtSource(session, application.getExtSourceName(), application.getExtSourceType());\n-\t\t\t\t\t\t\tUserExtSource ues = new UserExtSource(es, application.getExtSourceLoa(), application.getCreatedBy());\n+\t\t\t\t\t\t\tExtSource es = perunBl.getExtSourcesManager().checkOrCreateExtSource(session, app.getExtSourceName(), app.getExtSourceType());\n+\t\t\t\t\t\t\tUserExtSource ues = new UserExtSource(es, app.getExtSourceLoa(), app.getCreatedBy());\n \t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tues = perunBl.getUsersManagerBl().addUserExtSource(session, application.getUser(), ues);\n-\t\t\t\t\t\t\t\tlog.debug(\"{} associated with {} from application {}\", application.getUser(), ues, application);\n+\t\t\t\t\t\t\t\tues = perunBl.getUsersManagerBl().addUserExtSource(session, app.getUser(), ues);\n+\t\t\t\t\t\t\t\tlog.debug(\"{} associated with {} from application {}\", app.getUser(), ues, app);\n \t\t\t\t\t\t\t} catch (UserExtSourceExistsException ex) {\n \t\t\t\t\t\t\t\t// we can ignore, user will be paired with application\n-\t\t\t\t\t\t\t\tlog.warn(\"{} already had identity associated from application {}\", application.getUser(), application);\n+\t\t\t\t\t\t\t\tlog.warn(\"{} already had identity associated from application {}\", app.getUser(), app);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\tMember member = ((PerunBl) session.getPerun()).getMembersManagerBl().getMemberByUser(session, app.getVo(), app.getUser());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cefa53fbed5715b4f2397e3249ab26e5a62af401"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3ODg3MA==", "bodyText": "Yes, it should have been in the other branch of if, thank you.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r506178870", "createdAt": "2020-10-16T08:41:52Z", "author": {"login": "metodej"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/modules/Vsup.java", "diffHunk": "@@ -40,55 +46,98 @@\n \tprivate final static Logger log = LoggerFactory.getLogger(Vsup.class);\n \n \t@Override\n-\tpublic List<ApplicationFormItemData> createApplication(PerunSession session, Application application, List<ApplicationFormItemData> data) throws PerunException {\n+\tpublic void canBeApproved(PerunSession session, Application app) throws PerunException {\n \n-\t\tif (application.getUser() == null) {\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n \n \t\t\tfor (ApplicationFormItemData item : data) {\n \t\t\t\tif (item.getFormItem() != null &&\n-\t\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF+\":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n \n \t\t\t\t\t// if application contains birth number, try to map to existing user\n \t\t\t\t\tString rc = item.getValue();\n \t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n \n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n-\t\t\t\t\t\t\tapplication.setUser(user);\n-\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, application);\n-\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", application);\n+\t\t\t\t\t\t\tthrow new CantBeApprovedException(\"Application has the same birth number \" + rc + \" as user \" + user.getDisplayName() + \" with id \" + user.getId() +\n+\t\t\t\t\t\t\t\t\" that is already in Perun and thus would be merged with him.\", null, null, null, true);\n+\t\t\t\t\t\t} catch (ExtSourceNotExistsException | UserExtSourceNotExistsException | UserNotExistsException ex) {\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Application beforeApprove(PerunSession session, Application app) throws RegistrarException, PrivilegeException {\n+\n+\t\tList<ApplicationFormItemData> data = registrar.getApplicationDataById(session, app.getId());\n+\n+\t\tif (app.getUser() == null) {\n+\n+\t\t\tfor (ApplicationFormItemData item : data) {\n+\t\t\t\tif (item.getFormItem() != null &&\n+\t\t\t\t\tObjects.equals(AttributesManager.NS_USER_ATTR_DEF + \":birthNumber\", item.getFormItem().getPerunDestinationAttribute())) {\n+\n+\t\t\t\t\t// if application contains birth number, try to map to existing user\n+\t\t\t\t\tString rc = item.getValue();\n+\t\t\t\t\tif (rc != null && !rc.isEmpty()) {\n+\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tUser user = ((PerunBl) session.getPerun()).getUsersManagerBl().getUserByExtSourceNameAndExtLogin(session, \"RC\", rc);\n+\t\t\t\t\t\t\tapp.setUser(user);\n+\t\t\t\t\t\t\tregistrar.updateApplicationUser(session, app);\n+\t\t\t\t\t\t\tlog.debug(\"Existing user found by RC for {}\", app);\n \t\t\t\t\t\t} catch (Exception ex) {\n-\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", application, ex);\n+\t\t\t\t\t\t\tlog.warn(\"Couldn't find or set user to application {} by RC: {}\", app, ex);\n \t\t\t\t\t\t}\n \n \t\t\t\t\t\t// associate existing user with the identity used on registration form\n-\t\t\t\t\t\tif (application.getUser() != null) {\n+\t\t\t\t\t\tif (app.getUser() != null) {\n \t\t\t\t\t\t\tPerunBl perunBl = (PerunBl)session.getPerun();\n-\t\t\t\t\t\t\tExtSource es = perunBl.getExtSourcesManager().checkOrCreateExtSource(session, application.getExtSourceName(), application.getExtSourceType());\n-\t\t\t\t\t\t\tUserExtSource ues = new UserExtSource(es, application.getExtSourceLoa(), application.getCreatedBy());\n+\t\t\t\t\t\t\tExtSource es = perunBl.getExtSourcesManager().checkOrCreateExtSource(session, app.getExtSourceName(), app.getExtSourceType());\n+\t\t\t\t\t\t\tUserExtSource ues = new UserExtSource(es, app.getExtSourceLoa(), app.getCreatedBy());\n \t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tues = perunBl.getUsersManagerBl().addUserExtSource(session, application.getUser(), ues);\n-\t\t\t\t\t\t\t\tlog.debug(\"{} associated with {} from application {}\", application.getUser(), ues, application);\n+\t\t\t\t\t\t\t\tues = perunBl.getUsersManagerBl().addUserExtSource(session, app.getUser(), ues);\n+\t\t\t\t\t\t\t\tlog.debug(\"{} associated with {} from application {}\", app.getUser(), ues, app);\n \t\t\t\t\t\t\t} catch (UserExtSourceExistsException ex) {\n \t\t\t\t\t\t\t\t// we can ignore, user will be paired with application\n-\t\t\t\t\t\t\t\tlog.warn(\"{} already had identity associated from application {}\", application.getUser(), application);\n+\t\t\t\t\t\t\t\tlog.warn(\"{} already had identity associated from application {}\", app.getUser(), app);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\tMember member = ((PerunBl) session.getPerun()).getMembersManagerBl().getMemberByUser(session, app.getVo(), app.getUser());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE0MDUxMA=="}, "originalCommit": {"oid": "cefa53fbed5715b4f2397e3249ab26e5a62af401"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MDc1NjQzOnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwOToxMTo0MFrOHiwREA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwOToxNjoxNFrOHiwfGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIwNDQzMg==", "bodyText": "Must be application.getType().toString() otherwise jdbc driver cannot guess the type: Can't infer the SQL type to use for an instance of cz.metacentrum.perun.registrar.model.Application$AppType.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r506204432", "createdAt": "2020-10-16T09:11:40Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -3643,6 +3643,16 @@ private int processApplication(PerunSession session, Application application, Li\n \n \t}\n \n+\t@Override\n+\tpublic void updateApplicationType(PerunSession session, Application application) {\n+\n+\t\t// TODO - add authorization (and add to rpc)\n+\n+\t\tif (jdbc.update(\"update application set apptype=? where id=?\", application.getType(), application.getId()) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b4745f2d990c79f56d3b93528323a44417f172"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIwODAyNA==", "bodyText": "Ok, fixed.", "url": "https://github.com/CESNET/perun/pull/2933#discussion_r506208024", "createdAt": "2020-10-16T09:16:14Z", "author": {"login": "metodej"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -3643,6 +3643,16 @@ private int processApplication(PerunSession session, Application application, Li\n \n \t}\n \n+\t@Override\n+\tpublic void updateApplicationType(PerunSession session, Application application) {\n+\n+\t\t// TODO - add authorization (and add to rpc)\n+\n+\t\tif (jdbc.update(\"update application set apptype=? where id=?\", application.getType(), application.getId()) > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIwNDQzMg=="}, "originalCommit": {"oid": "04b4745f2d990c79f56d3b93528323a44417f172"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2337, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}