{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5OTMyMDc0", "number": 2708, "title": "CORE: Optimized and cleaned-up getAllowed/Assigned() methods", "bodyText": "Aligned SQL, so that \"join\" and \"where\" keywords start\non the new line (its more readable).\nRemoved unnecessary \"inner\" from some \"inner join\" statements.\nIn getAllowedResources(facility,user) in ResourcesManagerImpl\nremoved unnecessary \"left outer\" from the \"join\" since we\nwant explicit connection anyway. No other sql on the same\ntables returning allowed entities uses \"left outer\".\nAlso removed join with facilities table, since we can filter\nby facility_id in resources table directly.\nRenamed getAllowed(Users/Members)NotExpired() to\ngetAllowed(Users/Members)NotExpiredInGroup() since its more\nexplanatory, if expired is referring to vo or group status.\nAlso propagate this change to the Bl, where its used.\nRemoved VO param from getAssignedResources(sess, vo, group)\nin ResourceManagerImpl, since it was not used in SQL.\nAdded getAllowedUsers(sess, facility) to the FacilitiesMangerImpl,\nso we perform direct select rather than iterate over all resources.\nUpdated javadoc for some methods.", "createdAt": "2020-05-19T07:31:04Z", "url": "https://github.com/CESNET/perun/pull/2708", "merged": true, "mergeCommit": {"oid": "a9b39c953f824f3e68cd39b33c2b66de284619ce"}, "closed": true, "closedAt": "2020-05-25T09:37:22Z", "author": {"login": "zlamalp"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciwA6kgFqTQxNDE3ODcwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjw75hAFqTQxNjg1MzE2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MTc4NzA3", "url": "https://github.com/CESNET/perun/pull/2708#pullrequestreview-414178707", "createdAt": "2020-05-19T07:39:32Z", "commit": {"oid": "554814f244d40e7bdbf56eca2c344e66021eece9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzozOTozM1rOGXTorQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzozOTozM1rOGXTorQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5MjE0MQ==", "bodyText": "I am afraid this is little confusing. There is no object Group so from the name, you can't say what does it mean. It is not really \"not expired in any group\". Probably more accurate is \"it is expired in all assigned groups\". Maybe \"NotExpiredOnResource\" would be better, but I am not sure.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r427092141", "createdAt": "2020-05-19T07:39:33Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "diffHunk": "@@ -272,7 +272,7 @@\n \t * @return list of users\n \t * @throws InternalErrorException\n \t */\n-\tList<User> getAllowedUsersNotExpired(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;\n+\tList<User> getAllowedUsersNotExpiredInGroup(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "554814f244d40e7bdbf56eca2c344e66021eece9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6825588b0823208dd5521472a6bc48a75ffe6493", "author": {"user": {"login": "zlamalp", "name": "Pavel Zl\u00e1mal"}}, "url": "https://github.com/CESNET/perun/commit/6825588b0823208dd5521472a6bc48a75ffe6493", "committedDate": "2020-05-19T11:04:41Z", "message": "CORE: Optimized and cleaned-up getAllowed/Assigned() methods\n\n- Aligned SQL, so that \"join\" and \"where\" keywords start\n  on the new line (its more readable).\n- Removed unnecessary \"inner\" from some \"inner join\" statements.\n- In getAllowedResources(facility,user) in ResourcesManagerImpl\n  removed unnecessary \"left outer\" from the \"join\" since we\n  want explicit connection anyway. No other sql on the same\n  tables returning allowed entities uses \"left outer\".\n  Also removed join with facilities table, since we can filter\n  by facility_id in resources table directly.\n- Renamed getAllowed(Users/Members)NotExpired() to\n  getAllowed(Users/Members)NotExpiredInGroup() since its more\n  explanatory, if expired is referring to vo or group status.\n  Also propagate this change to the Bl, where its used.\n- Removed VO param from getAssignedResources(sess, vo, group)\n  in ResourceManagerImpl, since it was not used in SQL.\n- Added getAllowedUsers(sess, facility) to the FacilitiesMangerImpl,\n  so we perform direct select rather than iterate over all resources.\n- Updated javadoc for some methods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f15067601ac70f2ed18ee56ad4217361ec0d5e6", "author": {"user": {"login": "zlamalp", "name": "Pavel Zl\u00e1mal"}}, "url": "https://github.com/CESNET/perun/commit/2f15067601ac70f2ed18ee56ad4217361ec0d5e6", "committedDate": "2020-05-20T06:50:45Z", "message": "CORE: Added tests and fixes for changed SQLs of assigned/allowed\n\n- Added getAssignedUsers(resource) in ResourcesManagerBl.\n- Changed implementation of isUserAllowed(user, resource)\n  in ResourcesManagerBl, iteration replaced with exact query.\n  Also allowed condition was wrong here.\n- Added \"distinct\" to prevent duplicates in FacilitiesManagerImpl\n  for getAssignedUsers(facility) and  getAssignedUsers(facility,service).\n\n- Added tests for various existing/new getAssigned/Allowed() methods\n  from Users/Resource/Facilities managers. Some methods were\n  already tested from Entry (integrations) tests, so only a few is\n  tested explicitly in BlImpl tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92315326fbb749935e6882d77fee4555e0b4496a", "author": {"user": {"login": "zlamalp", "name": "Pavel Zl\u00e1mal"}}, "url": "https://github.com/CESNET/perun/commit/92315326fbb749935e6882d77fee4555e0b4496a", "committedDate": "2020-05-20T07:00:57Z", "message": "CORE: Added \"distinct\" to some SQLs for allowed/assigned\n\n- Added \"distinct\" for some getAssigned/Allowed() methods.\n  It makes sure we have unique results, it is not necessary,\n  if only two tables are joined.\n- Aligned SQL in getAssignedRichResources()."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "554814f244d40e7bdbf56eca2c344e66021eece9", "author": {"user": {"login": "zlamalp", "name": "Pavel Zl\u00e1mal"}}, "url": "https://github.com/CESNET/perun/commit/554814f244d40e7bdbf56eca2c344e66021eece9", "committedDate": "2020-05-19T07:30:20Z", "message": "CORE: Optimized and cleaned-up getAllowed/Assigned() methods\n\n- Aligned SQL, so that \"join\" and \"where\" keywords start\n  on the new line (its more readable).\n- Removed unnecessary \"inner\" from some \"inner join\" statements.\n- In getAllowedResources(facility,user) in ResourcesManagerImpl\n  removed unnecessary \"left outer\" from the \"join\" since we\n  want explicit connection anyway. No other sql on the same\n  tables returning allowed entities uses \"left outer\".\n  Also removed join with facilities table, since we can filter\n  by facility_id in resources table directly.\n- Renamed getAllowed(Users/Members)NotExpired() to\n  getAllowed(Users/Members)NotExpiredInGroup() since its more\n  explanatory, if expired is referring to vo or group status.\n  Also propagate this change to the Bl, where its used.\n- Removed VO param from getAssignedResources(sess, vo, group)\n  in ResourceManagerImpl, since it was not used in SQL.\n- Added getAllowedUsers(sess, facility) to the FacilitiesMangerImpl,\n  so we perform direct select rather than iterate over all resources.\n- Updated javadoc for some methods."}, "afterCommit": {"oid": "92315326fbb749935e6882d77fee4555e0b4496a", "author": {"user": {"login": "zlamalp", "name": "Pavel Zl\u00e1mal"}}, "url": "https://github.com/CESNET/perun/commit/92315326fbb749935e6882d77fee4555e0b4496a", "committedDate": "2020-05-20T07:00:57Z", "message": "CORE: Added \"distinct\" to some SQLs for allowed/assigned\n\n- Added \"distinct\" for some getAssigned/Allowed() methods.\n  It makes sure we have unique results, it is not necessary,\n  if only two tables are joined.\n- Aligned SQL in getAssignedRichResources()."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDUwNzcz", "url": "https://github.com/CESNET/perun/pull/2708#pullrequestreview-415050773", "createdAt": "2020-05-20T07:12:50Z", "commit": {"oid": "92315326fbb749935e6882d77fee4555e0b4496a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoxMjo1MFrOGX-Jag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoxMjo1MFrOGX-Jag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4ODY1MA==", "bodyText": "Peter B. said in different commit  #2702 that this exception is not thrown for jdbc.query and you said he is right. So there is probably the same problem in every method with jdbc.query.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r427788650", "createdAt": "2020-05-20T07:12:50Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "diffHunk": "@@ -1378,4 +1387,73 @@ public void deleteSponsorLinks(PerunSession sess, User sponsor) throws InternalE\n \t\t}\n \n \t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, User user) throws InternalErrorException {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +\n+\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id \" +\n+\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\" where members.user_id=?\", RESOURCE_MAPPER, user.getId());\n+\t\t} catch (EmptyResultDataAccessException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92315326fbb749935e6882d77fee4555e0b4496a"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7", "author": {"user": {"login": "zlamalp", "name": "Pavel Zl\u00e1mal"}}, "url": "https://github.com/CESNET/perun/commit/0f8a1f54c81b3ccfec63ee36941d87c15643e8b7", "committedDate": "2020-05-20T07:27:09Z", "message": "CORE: Removed catching EmptyDataAccessException\n\n- Generic query shouldn't throw EmptyDataAccessException, so\n  its catch branch was removed from the newly added methods.\n- Also InternalErrorException is RuntimeException for some time,\n  so we don't have to explicitly mention it in the API. It was\n  removed from newly added methods hierarchy."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MDEyNjA4", "url": "https://github.com/CESNET/perun/pull/2708#pullrequestreview-416012608", "createdAt": "2020-05-21T09:42:03Z", "commit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2Nzg4NjMy", "url": "https://github.com/CESNET/perun/pull/2708#pullrequestreview-416788632", "createdAt": "2020-05-22T09:52:54Z", "commit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1Mjo1NFrOGZRbqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToxMTowMFrOGZTcLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1MzE5NQ==", "bodyText": "I prefer name getAllowedUsersNotExpiredInGroups since the user cannot be expired in any of the groups as it is stated in the Javadoc.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429153195", "createdAt": "2020-05-22T09:52:54Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "diffHunk": "@@ -268,7 +267,7 @@\n \t * @return list of users\n \t * @throws InternalErrorException\n \t */\n-\tList<User> getAllowedUsersNotExpired(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;\n+\tList<User> getAllowedUsersNotExpiredInGroup(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1NDA0Mg==", "bodyText": "Signature of InternalErrorException is not necessary :)", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429154042", "createdAt": "2020-05-22T09:54:44Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/ResourcesManagerBl.java", "diffHunk": "@@ -335,6 +335,17 @@\n \t */\n \tvoid removeGroupFromResources(PerunSession perunSession, Group group, List<Resource> resources) throws InternalErrorException, GroupNotDefinedOnResourceException, GroupAlreadyRemovedFromResourceException;\n \n+\t/**\n+\t * Returns all users assigned to the resource.\n+\t *\n+\t * @param perunSession\n+\t * @param resource\n+\t * @return list of users assigned to the resource\n+\t *\n+\t * @throws InternalErrorException\n+\t */\n+\tList<User> getAssignedUsers(PerunSession perunSession, Resource resource) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NDUzNQ==", "bodyText": "It would be more readable if the first line was also split into more separate lines.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429164535", "createdAt": "2020-05-22T10:18:52Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "diffHunk": "@@ -1378,4 +1387,65 @@ public void deleteSponsorLinks(PerunSession sess, User sponsor) throws InternalE\n \t\t}\n \n \t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NTE0Nw==", "bodyText": "Nit: you are adding extra space on each line break (it is happening also in another selects).", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429165147", "createdAt": "2020-05-22T10:20:15Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "diffHunk": "@@ -1378,4 +1387,65 @@ public void deleteSponsorLinks(PerunSession sess, User sponsor) throws InternalE\n \t\t}\n \n \t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +\n+\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id \" +\n+\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\" where members.user_id=?\", RESOURCE_MAPPER, user.getId());\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<Resource> getAllowedResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +\n+\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id \" +\n+\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\" where members.user_id=? and members.status!=? and members.status!=?\",\n+\t\t\t\t\tRESOURCE_MAPPER, user.getId(), String.valueOf(Status.INVALID.getCode()), String.valueOf(Status.DISABLED.getCode()));\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, Facility facility, User user) {\n+\t\ttry {\n+\t\t\treturn jdbc.query(\"select distinct \" + ResourcesManagerImpl.resourceMappingSelectQuery + \" from resources \"+\n+\t\t\t\t\t\t\t\" join groups_resources on groups_resources.resource_id=resources.id\" +\n+\t\t\t\t\t\t\t\" join groups_members on groups_members.group_id=groups_resources.group_id\" +\n+\t\t\t\t\t\t\t\" join members on members.id=groups_members.member_id\" +\n+\t\t\t\t\t\t\t\" where resources.facility_id=? and members.user_id=?\",\n+\t\t\t\t\tRESOURCE_MAPPER, facility.getId(), user.getId());\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<RichResource> getAssignedRichResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \", \" + VosManagerImpl.voMappingSelectQuery + \", \" +\n+\t\t\t\t\tFacilitiesManagerImpl.facilityMappingSelectQuery + \", \"+resourceTagMappingSelectQuery+\" from resources\" +\n+\t\t\t\t\t\" join vos on resources.vo_id=vos.id \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4NjA5Mg==", "bodyText": "The formating of the SQL commands in the whole PR is much better than the previous, but I have some comments which you may consider if you like.\n\nIt would be better to make the indentation the same in each SQL command. For example, some of the indents after the first line have two extra tabs and some don't. Or some of the mappers start on a separate line and some don't.\nI would consider putting the \"from\"  clause on the separate line, because of the readability.\nMaybe even putting the \"select\" clause on the second line would help to align the indentation better, but I am not sure in this one.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429186092", "createdAt": "2020-05-22T11:11:00Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java", "diffHunk": "@@ -511,8 +534,9 @@ public void removeOwner(PerunSession sess, Facility facility, Owner owner) throw\n \n \t\t\t} else if (specificService != null) {\n \n-\t\t\t\treturn jdbc.query(\"select \" + ResourcesManagerImpl.resourceMappingSelectQuery + \" from resource_services join resources on \" +\n-\t\t\t\t\t\t\"resource_services.resource_id=resources.id where facility_id=? and service_id=?\",\n+\t\t\t\treturn jdbc.query(\"select \" + ResourcesManagerImpl.resourceMappingSelectQuery + \" from resource_services\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "879ea3551a632133b9b494c67203368623258086", "author": {"user": {"login": "zlamalp", "name": "Pavel Zl\u00e1mal"}}, "url": "https://github.com/CESNET/perun/commit/879ea3551a632133b9b494c67203368623258086", "committedDate": "2020-05-22T11:39:42Z", "message": "CORE: Cleanup fixes\n\n- Use plural for Groups in getAllowedUsers/MembersNotExpiredInGroup().\n  It better describe the fact, that user must not be expired in\n  such groups.\n- Fixed sql alignment where forgotten or wrong."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODUzMTY0", "url": "https://github.com/CESNET/perun/pull/2708#pullrequestreview-416853164", "createdAt": "2020-05-22T11:54:18Z", "commit": {"oid": "879ea3551a632133b9b494c67203368623258086"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1381, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}