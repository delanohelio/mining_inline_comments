{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MzQ1MTA5", "number": 2671, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMTowMDo0OFrODzq0vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMToyOToyM1rODzrgfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTA1NTk5OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/MembersManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMTowMDo0OFrOGIO7KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjozODoxN1rOGIdiyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI4NjMxMg==", "bodyText": "Are you sure this is necessary?  I can't find casting to integer in any other method (using status) in this manager.", "url": "https://github.com/CESNET/perun/pull/2671#discussion_r411286312", "createdAt": "2020-04-20T11:00:48Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/MembersManagerImpl.java", "diffHunk": "@@ -147,6 +147,19 @@ public Member getMemberByUserId(PerunSession sess, Vo vo, int userId) throws Int\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic List<Member> getMembersByUserWithStatus(PerunSession sess, User user, Status status) throws InternalErrorException {\n+\t\ttry {\n+\t\t\treturn jdbc.query(\"SELECT \" + memberMappingSelectQuery + \" FROM\" +\n+\t\t\t\t\t\t\t\" members WHERE members.user_id=? and members.status \"+Compatibility.castToInteger()+\"=?\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68e70c107bf3d82b955b9744260c066272a31b6b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyNTgzMg==", "bodyText": "I didn't want to end up with doubling the select based on DB type, like in getMembersCount(). It is used like that in getGroupMembers() in GroupsManagerImpl. The problem is, that jdbc postgres driver fails to convert passed number for the char(1) column, while oracle driver has no problem. But we could probably clean up all usages to always convert passed Status object to the string.\nAnyway, I'll test it on devel, since I noticed whitespace before that cast and I'm not sure it won't fail the sql.", "url": "https://github.com/CESNET/perun/pull/2671#discussion_r411525832", "createdAt": "2020-04-20T16:38:17Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/MembersManagerImpl.java", "diffHunk": "@@ -147,6 +147,19 @@ public Member getMemberByUserId(PerunSession sess, Vo vo, int userId) throws Int\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic List<Member> getMembersByUserWithStatus(PerunSession sess, User user, Status status) throws InternalErrorException {\n+\t\ttry {\n+\t\t\treturn jdbc.query(\"SELECT \" + memberMappingSelectQuery + \" FROM\" +\n+\t\t\t\t\t\t\t\" members WHERE members.user_id=? and members.status \"+Compatibility.castToInteger()+\"=?\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI4NjMxMg=="}, "originalCommit": {"oid": "68e70c107bf3d82b955b9744260c066272a31b6b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTE1NzUxOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMToyNjo0NlrOGIP1CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNjo0NzoyOVrOGI1UQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwMTEyOA==", "bodyText": "Wrong indentation.", "url": "https://github.com/CESNET/perun/pull/2671#discussion_r411301128", "createdAt": "2020-04-20T11:26:46Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.java", "diffHunk": "@@ -210,28 +207,133 @@ public Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDe\n \n \t@Override\n \tpublic List<AttributeHandleIdentifier> getHandleIdentifiers() {\n+\n \t\tList<AttributeHandleIdentifier> handleIdentifiers = super.getHandleIdentifiers();\n+\n+\t\t// member related events\n \t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AllAttributesRemovedForUser) {\n-\t\t\t\treturn ((AllAttributesRemovedForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\t\tif (auditEvent instanceof DirectMemberAddedToGroup) {\n+\t\t\t\treturn ((DirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof IndirectMemberAddedToGroup) {\n+\t\t\t\treturn ((IndirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberRemovedFromGroupTotally) {\n+\t\t\t\treturn ((MemberRemovedFromGroupTotally) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpiredInGroup) {\n+\t\t\t\treturn ((MemberExpiredInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidatedInGroup) {\n+\t\t\t\treturn ((MemberValidatedInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidated) {\n+\t\t\t\treturn ((MemberValidated) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpired) {\n+\t\t\t\treturn ((MemberExpired) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberSuspended) {\n+\t\t\t\treturn ((MemberSuspended) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberDisabled) {\n+\t\t\t\treturn ((MemberDisabled) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberInvalidated) {\n+\t\t\t\treturn ((MemberInvalidated) auditEvent).getMember().getUserId();\n \t\t\t}\n+\n+\t\t\t// no match\n+\t\t\treturn null;\n+\n \t\t});\n-\t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AttributeSetForUser && ((AttributeSetForUser) auditEvent).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n-\t\t\t\treturn ((AttributeSetForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\treturn handleIdentifiers;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\n+\t\t// generic handling\n+\t\tList<AuditEvent> resolvingMessages = super.resolveVirtualAttributeValueChange(perunSession, message);\n+\n+\t\t// handle source user attribute changes\n+\n+\t\tif (message instanceof AttributeSetForUser &&\n+\t\t\t\t((AttributeSetForUser) message).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser &&\n+\t\t\t\t((AttributeRemovedForUser) message).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\n+\t\t\tboolean skip = false;\n+\t\t\ttry {\n+\t\t\t\tAttributeDefinition sourceExists = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getSecondarySourceAttributeName());\n+\t\t\t\tUser user = perunSession.getPerunBl().getUsersManagerBl().getUserById(perunSession, ((AllAttributesRemovedForUser) message).getUser().getId());\n+\t\t\t} catch (AttributeNotExistsException | UserNotExistsException ex) {\n+\t\t\t\t// silently skip this event, since source attribute couldn't be between deleted\n+\t\t\t\t// or user no longer exist\n+\t\t\t\tskip = true;\n \t\t\t}\n-\t\t});\n-\t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AttributeRemovedForUser && ((AttributeRemovedForUser) auditEvent).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n-\t\t\t\treturn ((AttributeRemovedForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\t\tif (!skip) {\n+\t\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n \t\t\t}\n-\t\t});\n-\t\treturn handleIdentifiers;\n+\n+\t\t}\n+\n+\t\t// handle group attr changes, exclude \"members\" group, since its not counted within attr value\n+\n+\t\tif (message instanceof AttributeSetForGroup &&\n+\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AttributeSetForGroup) message).getGroup().getName()) &&\n+\t\t\t\t((AttributeSetForGroup) message).getAttribute().getName().equals(getTertiarySourceAttributeName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\t// TODO - get only active group users, since expired are not affected by current group affiliations\n+\t\t\tList<User> users = perunSession.getPerunBl().getGroupsManagerBl().getGroupUsers(perunSession, ((AttributeSetForGroup) message).getGroup());\n+\t\t\tfor (User user : users) {\n+\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), user));\n+\t\t\t}\n+\n+\t\t} else if (message instanceof AttributeRemovedForGroup &&\n+\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AttributeRemovedForGroup) message).getGroup().getName()) &&\n+\t\t\t\t((AttributeRemovedForGroup) message).getAttribute().getName().equals(getTertiarySourceAttributeName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\t// TODO - get only active group users, since expired are not affected by current group affiliations\n+\t\t\tList<User> users = perunSession.getPerunBl().getGroupsManagerBl().getGroupUsers(perunSession, ((AttributeRemovedForGroup) message).getGroup());\n+\t\t\tfor (User user : users) {\n+\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), user));\n+\t\t\t}\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForGroup &&\n+\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AllAttributesRemovedForGroup) message).getGroup().getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68e70c107bf3d82b955b9744260c066272a31b6b"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0Njg1Mg==", "bodyText": "File is auto aligned consistently with two tabs, if its break of expression or method call chain. It seems to be like that in other files too. One tab is reserved for default indent, like class and its content, or method and its content or generally any code block and its content.", "url": "https://github.com/CESNET/perun/pull/2671#discussion_r411546852", "createdAt": "2020-04-20T17:09:42Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.java", "diffHunk": "@@ -210,28 +207,133 @@ public Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDe\n \n \t@Override\n \tpublic List<AttributeHandleIdentifier> getHandleIdentifiers() {\n+\n \t\tList<AttributeHandleIdentifier> handleIdentifiers = super.getHandleIdentifiers();\n+\n+\t\t// member related events\n \t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AllAttributesRemovedForUser) {\n-\t\t\t\treturn ((AllAttributesRemovedForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\t\tif (auditEvent instanceof DirectMemberAddedToGroup) {\n+\t\t\t\treturn ((DirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof IndirectMemberAddedToGroup) {\n+\t\t\t\treturn ((IndirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberRemovedFromGroupTotally) {\n+\t\t\t\treturn ((MemberRemovedFromGroupTotally) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpiredInGroup) {\n+\t\t\t\treturn ((MemberExpiredInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidatedInGroup) {\n+\t\t\t\treturn ((MemberValidatedInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidated) {\n+\t\t\t\treturn ((MemberValidated) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpired) {\n+\t\t\t\treturn ((MemberExpired) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberSuspended) {\n+\t\t\t\treturn ((MemberSuspended) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberDisabled) {\n+\t\t\t\treturn ((MemberDisabled) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberInvalidated) {\n+\t\t\t\treturn ((MemberInvalidated) auditEvent).getMember().getUserId();\n \t\t\t}\n+\n+\t\t\t// no match\n+\t\t\treturn null;\n+\n \t\t});\n-\t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AttributeSetForUser && ((AttributeSetForUser) auditEvent).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n-\t\t\t\treturn ((AttributeSetForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\treturn handleIdentifiers;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\n+\t\t// generic handling\n+\t\tList<AuditEvent> resolvingMessages = super.resolveVirtualAttributeValueChange(perunSession, message);\n+\n+\t\t// handle source user attribute changes\n+\n+\t\tif (message instanceof AttributeSetForUser &&\n+\t\t\t\t((AttributeSetForUser) message).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser &&\n+\t\t\t\t((AttributeRemovedForUser) message).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\n+\t\t\tboolean skip = false;\n+\t\t\ttry {\n+\t\t\t\tAttributeDefinition sourceExists = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getSecondarySourceAttributeName());\n+\t\t\t\tUser user = perunSession.getPerunBl().getUsersManagerBl().getUserById(perunSession, ((AllAttributesRemovedForUser) message).getUser().getId());\n+\t\t\t} catch (AttributeNotExistsException | UserNotExistsException ex) {\n+\t\t\t\t// silently skip this event, since source attribute couldn't be between deleted\n+\t\t\t\t// or user no longer exist\n+\t\t\t\tskip = true;\n \t\t\t}\n-\t\t});\n-\t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AttributeRemovedForUser && ((AttributeRemovedForUser) auditEvent).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n-\t\t\t\treturn ((AttributeRemovedForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\t\tif (!skip) {\n+\t\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n \t\t\t}\n-\t\t});\n-\t\treturn handleIdentifiers;\n+\n+\t\t}\n+\n+\t\t// handle group attr changes, exclude \"members\" group, since its not counted within attr value\n+\n+\t\tif (message instanceof AttributeSetForGroup &&\n+\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AttributeSetForGroup) message).getGroup().getName()) &&\n+\t\t\t\t((AttributeSetForGroup) message).getAttribute().getName().equals(getTertiarySourceAttributeName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\t// TODO - get only active group users, since expired are not affected by current group affiliations\n+\t\t\tList<User> users = perunSession.getPerunBl().getGroupsManagerBl().getGroupUsers(perunSession, ((AttributeSetForGroup) message).getGroup());\n+\t\t\tfor (User user : users) {\n+\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), user));\n+\t\t\t}\n+\n+\t\t} else if (message instanceof AttributeRemovedForGroup &&\n+\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AttributeRemovedForGroup) message).getGroup().getName()) &&\n+\t\t\t\t((AttributeRemovedForGroup) message).getAttribute().getName().equals(getTertiarySourceAttributeName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\t// TODO - get only active group users, since expired are not affected by current group affiliations\n+\t\t\tList<User> users = perunSession.getPerunBl().getGroupsManagerBl().getGroupUsers(perunSession, ((AttributeRemovedForGroup) message).getGroup());\n+\t\t\tfor (User user : users) {\n+\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), user));\n+\t\t\t}\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForGroup &&\n+\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AllAttributesRemovedForGroup) message).getGroup().getName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwMTEyOA=="}, "originalCommit": {"oid": "68e70c107bf3d82b955b9744260c066272a31b6b"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkxNTMzMA==", "bodyText": "I see it now. Missed that exclamation mark (now i see it is part of if clause).", "url": "https://github.com/CESNET/perun/pull/2671#discussion_r411915330", "createdAt": "2020-04-21T06:47:29Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.java", "diffHunk": "@@ -210,28 +207,133 @@ public Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDe\n \n \t@Override\n \tpublic List<AttributeHandleIdentifier> getHandleIdentifiers() {\n+\n \t\tList<AttributeHandleIdentifier> handleIdentifiers = super.getHandleIdentifiers();\n+\n+\t\t// member related events\n \t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AllAttributesRemovedForUser) {\n-\t\t\t\treturn ((AllAttributesRemovedForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\t\tif (auditEvent instanceof DirectMemberAddedToGroup) {\n+\t\t\t\treturn ((DirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof IndirectMemberAddedToGroup) {\n+\t\t\t\treturn ((IndirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberRemovedFromGroupTotally) {\n+\t\t\t\treturn ((MemberRemovedFromGroupTotally) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpiredInGroup) {\n+\t\t\t\treturn ((MemberExpiredInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidatedInGroup) {\n+\t\t\t\treturn ((MemberValidatedInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidated) {\n+\t\t\t\treturn ((MemberValidated) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpired) {\n+\t\t\t\treturn ((MemberExpired) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberSuspended) {\n+\t\t\t\treturn ((MemberSuspended) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberDisabled) {\n+\t\t\t\treturn ((MemberDisabled) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberInvalidated) {\n+\t\t\t\treturn ((MemberInvalidated) auditEvent).getMember().getUserId();\n \t\t\t}\n+\n+\t\t\t// no match\n+\t\t\treturn null;\n+\n \t\t});\n-\t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AttributeSetForUser && ((AttributeSetForUser) auditEvent).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n-\t\t\t\treturn ((AttributeSetForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\treturn handleIdentifiers;\n+\t}\n+\n+\t@Override\n+\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws InternalErrorException, WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n+\n+\t\t// generic handling\n+\t\tList<AuditEvent> resolvingMessages = super.resolveVirtualAttributeValueChange(perunSession, message);\n+\n+\t\t// handle source user attribute changes\n+\n+\t\tif (message instanceof AttributeSetForUser &&\n+\t\t\t\t((AttributeSetForUser) message).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AttributeRemovedForUser &&\n+\t\t\t\t((AttributeRemovedForUser) message).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n+\n+\t\t\tboolean skip = false;\n+\t\t\ttry {\n+\t\t\t\tAttributeDefinition sourceExists = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getSecondarySourceAttributeName());\n+\t\t\t\tUser user = perunSession.getPerunBl().getUsersManagerBl().getUserById(perunSession, ((AllAttributesRemovedForUser) message).getUser().getId());\n+\t\t\t} catch (AttributeNotExistsException | UserNotExistsException ex) {\n+\t\t\t\t// silently skip this event, since source attribute couldn't be between deleted\n+\t\t\t\t// or user no longer exist\n+\t\t\t\tskip = true;\n \t\t\t}\n-\t\t});\n-\t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AttributeRemovedForUser && ((AttributeRemovedForUser) auditEvent).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n-\t\t\t\treturn ((AttributeRemovedForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\t\tif (!skip) {\n+\t\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n \t\t\t}\n-\t\t});\n-\t\treturn handleIdentifiers;\n+\n+\t\t}\n+\n+\t\t// handle group attr changes, exclude \"members\" group, since its not counted within attr value\n+\n+\t\tif (message instanceof AttributeSetForGroup &&\n+\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AttributeSetForGroup) message).getGroup().getName()) &&\n+\t\t\t\t((AttributeSetForGroup) message).getAttribute().getName().equals(getTertiarySourceAttributeName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\t// TODO - get only active group users, since expired are not affected by current group affiliations\n+\t\t\tList<User> users = perunSession.getPerunBl().getGroupsManagerBl().getGroupUsers(perunSession, ((AttributeSetForGroup) message).getGroup());\n+\t\t\tfor (User user : users) {\n+\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), user));\n+\t\t\t}\n+\n+\t\t} else if (message instanceof AttributeRemovedForGroup &&\n+\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AttributeRemovedForGroup) message).getGroup().getName()) &&\n+\t\t\t\t((AttributeRemovedForGroup) message).getAttribute().getName().equals(getTertiarySourceAttributeName())) {\n+\n+\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n+\t\t\t// TODO - get only active group users, since expired are not affected by current group affiliations\n+\t\t\tList<User> users = perunSession.getPerunBl().getGroupsManagerBl().getGroupUsers(perunSession, ((AttributeRemovedForGroup) message).getGroup());\n+\t\t\tfor (User user : users) {\n+\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), user));\n+\t\t\t}\n+\n+\t\t} else if (message instanceof AllAttributesRemovedForGroup &&\n+\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AllAttributesRemovedForGroup) message).getGroup().getName())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwMTEyOA=="}, "originalCommit": {"oid": "68e70c107bf3d82b955b9744260c066272a31b6b"}, "originalPosition": 209}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTE2Nzk5OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMToyOToyM1rOGIP7Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNjo0NTo1OFrOGI1RHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwMjY2Nw==", "bodyText": "I am not sure if this will work when you are overriding method resolveVirtualAttributeValueChange.", "url": "https://github.com/CESNET/perun/pull/2671#discussion_r411302667", "createdAt": "2020-04-20T11:29:23Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.java", "diffHunk": "@@ -210,28 +207,133 @@ public Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDe\n \n \t@Override\n \tpublic List<AttributeHandleIdentifier> getHandleIdentifiers() {\n+\n \t\tList<AttributeHandleIdentifier> handleIdentifiers = super.getHandleIdentifiers();\n+\n+\t\t// member related events\n \t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AllAttributesRemovedForUser) {\n-\t\t\t\treturn ((AllAttributesRemovedForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\t\tif (auditEvent instanceof DirectMemberAddedToGroup) {\n+\t\t\t\treturn ((DirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof IndirectMemberAddedToGroup) {\n+\t\t\t\treturn ((IndirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberRemovedFromGroupTotally) {\n+\t\t\t\treturn ((MemberRemovedFromGroupTotally) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpiredInGroup) {\n+\t\t\t\treturn ((MemberExpiredInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidatedInGroup) {\n+\t\t\t\treturn ((MemberValidatedInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidated) {\n+\t\t\t\treturn ((MemberValidated) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpired) {\n+\t\t\t\treturn ((MemberExpired) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberSuspended) {\n+\t\t\t\treturn ((MemberSuspended) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberDisabled) {\n+\t\t\t\treturn ((MemberDisabled) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberInvalidated) {\n+\t\t\t\treturn ((MemberInvalidated) auditEvent).getMember().getUserId();\n \t\t\t}\n+\n+\t\t\t// no match\n+\t\t\treturn null;\n+\n \t\t});\n-\t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AttributeSetForUser && ((AttributeSetForUser) auditEvent).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n-\t\t\t\treturn ((AttributeSetForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\treturn handleIdentifiers;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68e70c107bf3d82b955b9744260c066272a31b6b"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyOTg3OQ==", "bodyText": "I believe, calling super.resolveVirtualAttributeValueChange() at the start of own implementation of resolveVirtualAttributeValueChange() should still in its logic call getHandleIdentifiers() on actual module/class, since its overridden too. Inside of it it calls super to add generic message handlers, then adds our member messages handlers and everything is processed by super logic of resolveVirtualAttributeValueChange. Then it process group messages and returns resolved messages.", "url": "https://github.com/CESNET/perun/pull/2671#discussion_r411529879", "createdAt": "2020-04-20T16:44:12Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.java", "diffHunk": "@@ -210,28 +207,133 @@ public Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDe\n \n \t@Override\n \tpublic List<AttributeHandleIdentifier> getHandleIdentifiers() {\n+\n \t\tList<AttributeHandleIdentifier> handleIdentifiers = super.getHandleIdentifiers();\n+\n+\t\t// member related events\n \t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AllAttributesRemovedForUser) {\n-\t\t\t\treturn ((AllAttributesRemovedForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\t\tif (auditEvent instanceof DirectMemberAddedToGroup) {\n+\t\t\t\treturn ((DirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof IndirectMemberAddedToGroup) {\n+\t\t\t\treturn ((IndirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberRemovedFromGroupTotally) {\n+\t\t\t\treturn ((MemberRemovedFromGroupTotally) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpiredInGroup) {\n+\t\t\t\treturn ((MemberExpiredInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidatedInGroup) {\n+\t\t\t\treturn ((MemberValidatedInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidated) {\n+\t\t\t\treturn ((MemberValidated) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpired) {\n+\t\t\t\treturn ((MemberExpired) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberSuspended) {\n+\t\t\t\treturn ((MemberSuspended) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberDisabled) {\n+\t\t\t\treturn ((MemberDisabled) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberInvalidated) {\n+\t\t\t\treturn ((MemberInvalidated) auditEvent).getMember().getUserId();\n \t\t\t}\n+\n+\t\t\t// no match\n+\t\t\treturn null;\n+\n \t\t});\n-\t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AttributeSetForUser && ((AttributeSetForUser) auditEvent).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n-\t\t\t\treturn ((AttributeSetForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\treturn handleIdentifiers;\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwMjY2Nw=="}, "originalCommit": {"oid": "68e70c107bf3d82b955b9744260c066272a31b6b"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkxNDUyNg==", "bodyText": "My bad, I missed that line.", "url": "https://github.com/CESNET/perun/pull/2671#discussion_r411914526", "createdAt": "2020-04-21T06:45:58Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.java", "diffHunk": "@@ -210,28 +207,133 @@ public Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDe\n \n \t@Override\n \tpublic List<AttributeHandleIdentifier> getHandleIdentifiers() {\n+\n \t\tList<AttributeHandleIdentifier> handleIdentifiers = super.getHandleIdentifiers();\n+\n+\t\t// member related events\n \t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AllAttributesRemovedForUser) {\n-\t\t\t\treturn ((AllAttributesRemovedForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\t\tif (auditEvent instanceof DirectMemberAddedToGroup) {\n+\t\t\t\treturn ((DirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof IndirectMemberAddedToGroup) {\n+\t\t\t\treturn ((IndirectMemberAddedToGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberRemovedFromGroupTotally) {\n+\t\t\t\treturn ((MemberRemovedFromGroupTotally) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpiredInGroup) {\n+\t\t\t\treturn ((MemberExpiredInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidatedInGroup) {\n+\t\t\t\treturn ((MemberValidatedInGroup) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberValidated) {\n+\t\t\t\treturn ((MemberValidated) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberExpired) {\n+\t\t\t\treturn ((MemberExpired) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberSuspended) {\n+\t\t\t\treturn ((MemberSuspended) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberDisabled) {\n+\t\t\t\treturn ((MemberDisabled) auditEvent).getMember().getUserId();\n+\t\t\t} else if (auditEvent instanceof MemberInvalidated) {\n+\t\t\t\treturn ((MemberInvalidated) auditEvent).getMember().getUserId();\n \t\t\t}\n+\n+\t\t\t// no match\n+\t\t\treturn null;\n+\n \t\t});\n-\t\thandleIdentifiers.add(auditEvent -> {\n-\t\t\tif (auditEvent instanceof AttributeSetForUser && ((AttributeSetForUser) auditEvent).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n-\t\t\t\treturn ((AttributeSetForUser) auditEvent).getUser().getId();\n-\t\t\t} else {\n-\t\t\t\treturn null;\n+\n+\t\treturn handleIdentifiers;\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwMjY2Nw=="}, "originalCommit": {"oid": "68e70c107bf3d82b955b9744260c066272a31b6b"}, "originalPosition": 135}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2015, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}