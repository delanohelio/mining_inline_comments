{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MTcwOTI5", "number": 2752, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDoyMDozM1rOEH6C6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDoyMDozM1rOEH6C6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzI2NTA2OnYy", "diffSide": "RIGHT", "path": "perun-openapi/openapi.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDoyMDozM1rOGni4zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo0NjozNlrOGnjtuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDExOTI0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /json/usersManager/getPendingPreferredEmailChanges:\n          \n          \n            \n              /urlinjsonout/usersManager/getPendingPreferredEmailChanges:\n          \n      \n    \n    \n  \n\nI believe you should use this serializer/deserializer when passing data in url.", "url": "https://github.com/CESNET/perun/pull/2752#discussion_r444119246", "createdAt": "2020-06-23T10:20:33Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -7016,6 +7016,36 @@ paths:\n                 user: { type: integer}\n                 userExtSource: { $ref: '#/components/schemas/UserExtSource' }\n \n+  /urlinjsonout/usersManager/validatePreferredEmailChange:\n+    post:\n+      tags:\n+        - UsersManager\n+      operationId: validatePreferredEmailChange\n+      summary: Validate new preferred email address. Request to validate is determined based on encrypted parameters sent in email notice by requestPreferredEmailChange() method.\n+      parameters:\n+        - {name: i, description: \"encrypted request parameter\", schema: {type: string}, in: query, required: true}\n+        - {name: m, description: \"encrypted request parameter\", schema: {type: string}, in: query, required: true}\n+        - {name: u, description: \"id of user you want to validate preferred email request\", schema: {type: int}, in: query, required: true}\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/StringResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/usersManager/getPendingPreferredEmailChanges:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "558e9818cfc64d76648add315d06e45f0fbbd185"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzMjc5NQ==", "bodyText": "Sorry, I was wrong, even this should work.", "url": "https://github.com/CESNET/perun/pull/2752#discussion_r444132795", "createdAt": "2020-06-23T10:46:36Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -7016,6 +7016,36 @@ paths:\n                 user: { type: integer}\n                 userExtSource: { $ref: '#/components/schemas/UserExtSource' }\n \n+  /urlinjsonout/usersManager/validatePreferredEmailChange:\n+    post:\n+      tags:\n+        - UsersManager\n+      operationId: validatePreferredEmailChange\n+      summary: Validate new preferred email address. Request to validate is determined based on encrypted parameters sent in email notice by requestPreferredEmailChange() method.\n+      parameters:\n+        - {name: i, description: \"encrypted request parameter\", schema: {type: string}, in: query, required: true}\n+        - {name: m, description: \"encrypted request parameter\", schema: {type: string}, in: query, required: true}\n+        - {name: u, description: \"id of user you want to validate preferred email request\", schema: {type: int}, in: query, required: true}\n+      responses:\n+        '200':\n+          $ref: '#/components/responses/StringResponse'\n+        default:\n+          $ref: '#/components/responses/ExceptionResponse'\n+\n+  /json/usersManager/getPendingPreferredEmailChanges:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDExOTI0Ng=="}, "originalCommit": {"oid": "558e9818cfc64d76648add315d06e45f0fbbd185"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1897, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}