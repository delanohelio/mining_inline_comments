{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMTk1Mjk3", "number": 2887, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxOToxOFrOEg4MXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxOToxOFrOEg4MXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTEwNTU3OnYy", "diffSide": "LEFT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDoxOToxOFrOHN5sOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0MzozM1rOHN6a3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzODc0Nw==", "bodyText": "I think you don't need to delete this test, just the first part.", "url": "https://github.com/CESNET/perun/pull/2887#discussion_r484338747", "createdAt": "2020-09-07T10:19:18Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "diffHunk": "@@ -156,33 +156,6 @@ public void getSpecificUsers() throws Exception {\n \t\tassertTrue(users.contains(sponsoredUser));\n \t}\n \n-\t@Test\n-\tpublic void setAndUnsetSpecificUser() throws Exception {\n-\t\tSystem.out.println(CLASS_NAME + \"setAndUnsetSpecificUser\");\n-\t\tsetUpUser();\n-\t\tUser owner = user;\n-\n-\t\tassertTrue(\"User should be sponsored\", sponsoredUser.isSponsoredUser());\n-\t\tusersManager.unsetSpecificUser(sess, sponsoredUser, SpecificUserType.SPONSORED);\n-\t\tUser user1 = usersManager.getUserById(sess, sponsoredUser.getId());\n-\t\tassertTrue(\"User shouldn't be sponsored\", !user1.isSponsoredUser());\n-\t\tusersManager.setSpecificUser(sess, user1, SpecificUserType.SPONSORED, owner);\n-\t\tuser1 = usersManager.getUserById(sess, user1.getId());\n-\t\tassertTrue(\"User should be sponsored again\", user1.isSponsoredUser());\n-\t\tList<User> owners = usersManager.getUsersBySpecificUser(sess, user1);\n-\t\tassertTrue(\"There should be just our owner\", owners.size() == 1 && owners.contains(owner));\n-\n-\t\tassertTrue(\"User should be service user\", serviceUser1.isServiceUser());\n-\t\tusersManager.unsetSpecificUser(sess, serviceUser1, SpecificUserType.SERVICE);\n-\t\tUser user2 = usersManager.getUserById(sess, serviceUser1.getId());\n-\t\tassertTrue(\"User shouldn't be service user\", !user2.isServiceUser());\n-\t\tusersManager.setSpecificUser(sess, user2, SpecificUserType.SERVICE, owner);\n-\t\tuser2 = usersManager.getUserById(sess, user2.getId());\n-\t\tassertTrue(\"User should be service user again\", user2.isServiceUser());\n-\t\towners = usersManager.getUsersBySpecificUser(sess, user2);\n-\t\tassertTrue(\"There should be just our owner\", owners.size() == 1 && owners.contains(owner));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c31ed5aca54cb52aaef61a93cdc80f18834d45b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1MDY4NA==", "bodyText": "Fixed", "url": "https://github.com/CESNET/perun/pull/2887#discussion_r484350684", "createdAt": "2020-09-07T10:43:33Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/entry/UsersManagerEntryIntegrationTest.java", "diffHunk": "@@ -156,33 +156,6 @@ public void getSpecificUsers() throws Exception {\n \t\tassertTrue(users.contains(sponsoredUser));\n \t}\n \n-\t@Test\n-\tpublic void setAndUnsetSpecificUser() throws Exception {\n-\t\tSystem.out.println(CLASS_NAME + \"setAndUnsetSpecificUser\");\n-\t\tsetUpUser();\n-\t\tUser owner = user;\n-\n-\t\tassertTrue(\"User should be sponsored\", sponsoredUser.isSponsoredUser());\n-\t\tusersManager.unsetSpecificUser(sess, sponsoredUser, SpecificUserType.SPONSORED);\n-\t\tUser user1 = usersManager.getUserById(sess, sponsoredUser.getId());\n-\t\tassertTrue(\"User shouldn't be sponsored\", !user1.isSponsoredUser());\n-\t\tusersManager.setSpecificUser(sess, user1, SpecificUserType.SPONSORED, owner);\n-\t\tuser1 = usersManager.getUserById(sess, user1.getId());\n-\t\tassertTrue(\"User should be sponsored again\", user1.isSponsoredUser());\n-\t\tList<User> owners = usersManager.getUsersBySpecificUser(sess, user1);\n-\t\tassertTrue(\"There should be just our owner\", owners.size() == 1 && owners.contains(owner));\n-\n-\t\tassertTrue(\"User should be service user\", serviceUser1.isServiceUser());\n-\t\tusersManager.unsetSpecificUser(sess, serviceUser1, SpecificUserType.SERVICE);\n-\t\tUser user2 = usersManager.getUserById(sess, serviceUser1.getId());\n-\t\tassertTrue(\"User shouldn't be service user\", !user2.isServiceUser());\n-\t\tusersManager.setSpecificUser(sess, user2, SpecificUserType.SERVICE, owner);\n-\t\tuser2 = usersManager.getUserById(sess, user2.getId());\n-\t\tassertTrue(\"User should be service user again\", user2.isServiceUser());\n-\t\towners = usersManager.getUsersBySpecificUser(sess, user2);\n-\t\tassertTrue(\"There should be just our owner\", owners.size() == 1 && owners.contains(owner));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMzODc0Nw=="}, "originalCommit": {"oid": "2c31ed5aca54cb52aaef61a93cdc80f18834d45b"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2258, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}