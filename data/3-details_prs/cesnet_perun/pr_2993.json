{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MzE0NTIy", "number": 2993, "title": "Fix roles management", "bodyText": "getAdminGroups and getRichAdmins use only simple perun bean consisting\nonly from its name and id. However, to properly resolve authorization,\nwe need also information about connected objects like vo id for group etc.\nSecond issue is that methods setRole and unsetRole are composing\nPerunBeans only from information recieved from input. Therefore, someone\ncan fake information about the connected objects like fake vo id for\ngroup. This way it would be possible to setRole on object without proper\nrights.\nSolution for these issues was to fetch the real object from database\naccording to bean name and its id. This way the final object will have\ncorrect all its values. For this purpose were implemented methods\nfetchPerunBean and fetchPerunBeans. They suppport only objects which\ncan be managed for now. It will be extended later. These methods are\nnow used in RPC methods setRole, unsetRole, getAdminGroups and\ngetRichAdmins.\nWhile fixing these problems, we have realized that it is not possible\nto call set and unset role methods without complementary object.\nHowever the underlying logic allows to operate with null complementary\nobject. Therefore, this option was added to these RPC methods.", "createdAt": "2020-11-22T16:59:35Z", "url": "https://github.com/CESNET/perun/pull/2993", "merged": true, "mergeCommit": {"oid": "a4cb9a68d88a9be57146ac42d46436008cacfc2e"}, "closed": true, "closedAt": "2020-11-24T09:46:59Z", "author": {"login": "balcirakpeter"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfQtpxABqjQwMjYzMzgxNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfmiG0AFqTUzNzMwODcxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bad1f228a3b341354fa1e011cb820fba8af71e67", "author": {"user": {"login": "balcirakpeter", "name": null}}, "url": "https://github.com/CESNET/perun/commit/bad1f228a3b341354fa1e011cb820fba8af71e67", "committedDate": "2020-11-22T16:44:36Z", "message": "Fix roles management\n\n- getAdminGroups and getRichAdmins use only simple perun bean consisting\n  only from its name and id. However, to properly resolve authorization,\n  we need also information about connected objects like vo id for group etc.\n- Second issue is that methods setRole and unsetRole are composing\n  PerunBeans only from information recieved from input. Therefore, someone\n  can fake information about the connected objects like fake vo id for\n  group. This way it would be possible to setRole on object without proper\n  rights.\n- Solution for these issues was to fetch the real object from database\n  according to bean name and its id. This way the final object will have\n  correct all its values. For this purpose were implemented methods\n  fetchPerunBean and fetchPerunBeans. They suppport only objects which\n  can be managed for now. It will be extended later. These methods are\n  now used in RPC methods setRole, unsetRole, getAdminGroups and\n  getRichAdmins.\n- While fixing these problems, we have realized that it is not possible\n  to call set and unset role methods without complementary object.\n  However the underlying logic allows to operate with null complementary\n  object. Therefore, this option was added to these RPC methods."}, "afterCommit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb", "author": {"user": {"login": "balcirakpeter", "name": null}}, "url": "https://github.com/CESNET/perun/commit/b7075fd6b98d9044dd5b63852bad2986fa49a3eb", "committedDate": "2020-11-23T08:16:44Z", "message": "Fix roles management\n\n- getAdminGroups and getRichAdmins use only simple perun bean consisting\n  only from its name and id. However, to properly resolve authorization,\n  we need also information about connected objects like vo id for group etc.\n- Second issue is that methods setRole and unsetRole are composing\n  PerunBeans only from information recieved from input. Therefore, someone\n  can fake information about the connected objects like fake vo id for\n  group. This way it would be possible to setRole on object without proper\n  rights.\n- Solution for these issues was to fetch the real object from database\n  according to bean name and its id. This way the final object will have\n  correct all its values. For this purpose were implemented methods\n  fetchPerunBean and fetchPerunBeans. They suppport only objects which\n  can be managed for now. It will be extended later. These methods are\n  now used in RPC methods setRole, unsetRole, getAdminGroups and\n  getRichAdmins.\n- While fixing these problems, we have realized that it is not possible\n  to call set and unset role methods without complementary object.\n  However the underlying logic allows to operate with null complementary\n  object. Therefore, this option was added to these RPC methods."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjM5Nzk2", "url": "https://github.com/CESNET/perun/pull/2993#pullrequestreview-536239796", "createdAt": "2020-11-23T08:08:39Z", "commit": {"oid": "bad1f228a3b341354fa1e011cb820fba8af71e67"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODowODo0MFrOH4Ci4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODoyMToyN1rOH4C54Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODUyNDAwMw==", "bodyText": "Can't we simply fetch bean based on \"class\" and \"id? If you would update getBeanFromDatabase() for that, you could use shared logic, instead of instantiating fake class and then replacing it with the real object anyway.", "url": "https://github.com/CESNET/perun/pull/2993#discussion_r528524003", "createdAt": "2020-11-23T08:08:40Z", "author": {"login": "zlamalp"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AuthzResolverMethod.java", "diffHunk": "@@ -129,6 +129,7 @@ public AuthzRoles call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t\t\ttry {\n \t\t\t\tbean = (PerunBean) Class.forName(\"cz.metacentrum.perun.core.api.\" + complementaryObjectName).getConstructor().newInstance();\n \t\t\t\tbean.setId(complementaryObjectId);\n+\t\t\t\tbean = ac.fetchPerunBean(bean);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bad1f228a3b341354fa1e011cb820fba8af71e67"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODUyOTg4OQ==", "bodyText": "So, generally there is no longer any check, that role requires some complementary object and we can expect more \"group managers without any group\" or what? If there is no check, then it might fail in AuthzResolverBlImpl.unsetRole(sess, user, complementaryObject, role) for role SPONSOR where code fetches beanName from complementaryObject. There might be more places like this.", "url": "https://github.com/CESNET/perun/pull/2993#discussion_r528529889", "createdAt": "2020-11-23T08:21:27Z", "author": {"login": "zlamalp"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AuthzResolverMethod.java", "diffHunk": "@@ -250,6 +270,15 @@ public AuthzRoles call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t * @exampleParam role \"VOADMIN\"\n \t * @exampleParam complementaryObject { \"id\" : 123 , \"name\" : \"My testing VO\" , \"shortName\" : \"test_vo\" , \"beanName\" : \"Vo\" }\n \t */\n+\t/*#\n+\t * Set role for users.\n+\t *\n+\t * IMPORTANT: Refresh authz only if user in session is affected.\n+\t *\n+\t * @param role String Role which will be set for given users ( FACILITYADMIN | GROUPADMIN | PERUNADMIN | RESOURCEADMIN | RESOURCESELFSERVICE | SPONSOR | TOPGROUPCREATOR | VOADMIN | VOOBSERVER | PERUNOBSERVER | SECURITYADMIN | CABINETADMIN )\n+\t * @param users int[] <code>ids</code> of users for which is the role set\n+\t * @exampleParam role \"VOADMIN\"\n+\t */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDI3MzE3", "url": "https://github.com/CESNET/perun/pull/2993#pullrequestreview-536427317", "createdAt": "2020-11-23T12:29:15Z", "commit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDM0NDU3", "url": "https://github.com/CESNET/perun/pull/2993#pullrequestreview-536434457", "createdAt": "2020-11-23T12:39:38Z", "commit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjozOTozOVrOH4LtlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo1NTo0M1rOH4MQcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3NDE5Nw==", "bodyText": "Nit: Unused imports.", "url": "https://github.com/CESNET/perun/pull/2993#discussion_r528674197", "createdAt": "2020-11-23T12:39:39Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/ApiCaller.java", "diffHunk": "@@ -1,8 +1,12 @@\n package cz.metacentrum.perun.rpc;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.function.BiFunction;\n+import java.util.function.Function;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY4MTU1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n          \n          \n            \n            \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),", "url": "https://github.com/CESNET/perun/pull/2993#discussion_r528681554", "createdAt": "2020-11-23T12:53:04Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AuthzResolverMethod.java", "diffHunk": "@@ -279,63 +317,79 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t\t\t\tif(parms.contains(\"complementaryObject\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"),\n+\t\t\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")),\n \t\t\t\t\t\t\t\troleName);\n \t\t\t\t\treturn null;\n \t\t\t\t} else if(parms.contains(\"complementaryObjects\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n \t\t\t\t\t\t\t\troleName,\n-\t\t\t\t\t\t\t\tparms.readListPerunBeans(\"complementaryObjects\"));\n+\t\t\t\t\t\tac.fetchPerunBeans(parms.readListPerunBeans(\"complementaryObjects\")));\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"list of complementary objects or complementary object\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY4MTY4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n          \n          \n            \n            \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),", "url": "https://github.com/CESNET/perun/pull/2993#discussion_r528681680", "createdAt": "2020-11-23T12:53:18Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AuthzResolverMethod.java", "diffHunk": "@@ -279,63 +317,79 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t\t\t\tif(parms.contains(\"complementaryObject\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"),\n+\t\t\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")),\n \t\t\t\t\t\t\t\troleName);\n \t\t\t\t\treturn null;\n \t\t\t\t} else if(parms.contains(\"complementaryObjects\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n \t\t\t\t\t\t\t\troleName,\n-\t\t\t\t\t\t\t\tparms.readListPerunBeans(\"complementaryObjects\"));\n+\t\t\t\t\t\tac.fetchPerunBeans(parms.readListPerunBeans(\"complementaryObjects\")));\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"list of complementary objects or complementary object\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n+\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n+\t\t\t\t\t\tnull,\n+\t\t\t\t\t\troleName);\n+\t\t\t\t\treturn null;\n \t\t\t\t}\n \t\t\t} else if (parms.contains(\"users\")) {\n+\t\t\t\tint[] userIds = parms.readArrayOfInts(\"users\");\n+\t\t\t\tList<User> users = new ArrayList<>(userIds.length);\n+\t\t\t\tfor (int userId : userIds) {\n+\t\t\t\t\tusers.add(ac.getUserById(userId));\n+\t\t\t\t}\n \t\t\t\tif (parms.contains(\"complementaryObject\")) {\n-\t\t\t\t\tint[] userIds = parms.readArrayOfInts(\"users\");\n-\t\t\t\t\tList<User> users = new ArrayList<>(userIds.length);\n-\t\t\t\t\tfor (int userId : userIds) {\n-\t\t\t\t\t\tusers.add(ac.getUserById(userId));\n-\t\t\t\t\t}\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tusers,\n \t\t\t\t\t\t\t\troleName,\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"));\n+\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")));\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"complementaryObject\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY4MTgzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n          \n          \n            \n            \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),", "url": "https://github.com/CESNET/perun/pull/2993#discussion_r528681834", "createdAt": "2020-11-23T12:53:37Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AuthzResolverMethod.java", "diffHunk": "@@ -279,63 +317,79 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t\t\t\tif(parms.contains(\"complementaryObject\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"),\n+\t\t\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")),\n \t\t\t\t\t\t\t\troleName);\n \t\t\t\t\treturn null;\n \t\t\t\t} else if(parms.contains(\"complementaryObjects\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n \t\t\t\t\t\t\t\troleName,\n-\t\t\t\t\t\t\t\tparms.readListPerunBeans(\"complementaryObjects\"));\n+\t\t\t\t\t\tac.fetchPerunBeans(parms.readListPerunBeans(\"complementaryObjects\")));\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"list of complementary objects or complementary object\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n+\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n+\t\t\t\t\t\tnull,\n+\t\t\t\t\t\troleName);\n+\t\t\t\t\treturn null;\n \t\t\t\t}\n \t\t\t} else if (parms.contains(\"users\")) {\n+\t\t\t\tint[] userIds = parms.readArrayOfInts(\"users\");\n+\t\t\t\tList<User> users = new ArrayList<>(userIds.length);\n+\t\t\t\tfor (int userId : userIds) {\n+\t\t\t\t\tusers.add(ac.getUserById(userId));\n+\t\t\t\t}\n \t\t\t\tif (parms.contains(\"complementaryObject\")) {\n-\t\t\t\t\tint[] userIds = parms.readArrayOfInts(\"users\");\n-\t\t\t\t\tList<User> users = new ArrayList<>(userIds.length);\n-\t\t\t\t\tfor (int userId : userIds) {\n-\t\t\t\t\t\tusers.add(ac.getUserById(userId));\n-\t\t\t\t\t}\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tusers,\n \t\t\t\t\t\t\t\troleName,\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"));\n+\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")));\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"complementaryObject\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n+\t\t\t\t\t\tusers,\n+\t\t\t\t\t\troleName,\n+\t\t\t\t\t\tnull);\n+\t\t\t\t\treturn null;\n \t\t\t\t}\n \t\t\t} else if (parms.contains(\"authorizedGroups\")) {\n+\t\t\t\tint[] groupIds = parms.readArrayOfInts(\"authorizedGroups\");\n+\t\t\t\tList<Group> groups = new ArrayList<>(groupIds.length);\n+\t\t\t\tfor (int groupId : groupIds) {\n+\t\t\t\t\tgroups.add(ac.getGroupById(groupId));\n+\t\t\t\t}\n \t\t\t\tif (parms.contains(\"complementaryObject\")) {\n-\t\t\t\t\tint[] groupIds = parms.readArrayOfInts(\"authorizedGroups\");\n-\t\t\t\t\tList<Group> groups = new ArrayList<>(groupIds.length);\n-\t\t\t\t\tfor (int groupId : groupIds) {\n-\t\t\t\t\t\tgroups.add(ac.getGroupById(groupId));\n-\t\t\t\t\t}\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tgroups,\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"),\n+\t\t\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")),\n \t\t\t\t\t\t\t\troleName);\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"complementaryObject\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY4MzEyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n          \n          \n            \n            \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),", "url": "https://github.com/CESNET/perun/pull/2993#discussion_r528683121", "createdAt": "2020-11-23T12:55:43Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/AuthzResolverMethod.java", "diffHunk": "@@ -279,63 +317,79 @@ public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t\t\t\tif(parms.contains(\"complementaryObject\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"),\n+\t\t\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")),\n \t\t\t\t\t\t\t\troleName);\n \t\t\t\t\treturn null;\n \t\t\t\t} else if(parms.contains(\"complementaryObjects\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n \t\t\t\t\t\t\t\troleName,\n-\t\t\t\t\t\t\t\tparms.readListPerunBeans(\"complementaryObjects\"));\n+\t\t\t\t\t\tac.fetchPerunBeans(parms.readListPerunBeans(\"complementaryObjects\")));\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"list of complementary objects or complementary object\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n+\t\t\t\t\t\tac.getUserById(parms.readInt(\"user\")),\n+\t\t\t\t\t\tnull,\n+\t\t\t\t\t\troleName);\n+\t\t\t\t\treturn null;\n \t\t\t\t}\n \t\t\t} else if (parms.contains(\"users\")) {\n+\t\t\t\tint[] userIds = parms.readArrayOfInts(\"users\");\n+\t\t\t\tList<User> users = new ArrayList<>(userIds.length);\n+\t\t\t\tfor (int userId : userIds) {\n+\t\t\t\t\tusers.add(ac.getUserById(userId));\n+\t\t\t\t}\n \t\t\t\tif (parms.contains(\"complementaryObject\")) {\n-\t\t\t\t\tint[] userIds = parms.readArrayOfInts(\"users\");\n-\t\t\t\t\tList<User> users = new ArrayList<>(userIds.length);\n-\t\t\t\t\tfor (int userId : userIds) {\n-\t\t\t\t\t\tusers.add(ac.getUserById(userId));\n-\t\t\t\t\t}\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tusers,\n \t\t\t\t\t\t\t\troleName,\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"));\n+\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")));\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"complementaryObject\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n+\t\t\t\t\t\tusers,\n+\t\t\t\t\t\troleName,\n+\t\t\t\t\t\tnull);\n+\t\t\t\t\treturn null;\n \t\t\t\t}\n \t\t\t} else if (parms.contains(\"authorizedGroups\")) {\n+\t\t\t\tint[] groupIds = parms.readArrayOfInts(\"authorizedGroups\");\n+\t\t\t\tList<Group> groups = new ArrayList<>(groupIds.length);\n+\t\t\t\tfor (int groupId : groupIds) {\n+\t\t\t\t\tgroups.add(ac.getGroupById(groupId));\n+\t\t\t\t}\n \t\t\t\tif (parms.contains(\"complementaryObject\")) {\n-\t\t\t\t\tint[] groupIds = parms.readArrayOfInts(\"authorizedGroups\");\n-\t\t\t\t\tList<Group> groups = new ArrayList<>(groupIds.length);\n-\t\t\t\t\tfor (int groupId : groupIds) {\n-\t\t\t\t\t\tgroups.add(ac.getGroupById(groupId));\n-\t\t\t\t\t}\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tgroups,\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"),\n+\t\t\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")),\n \t\t\t\t\t\t\t\troleName);\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"complementaryObject\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),\n+\t\t\t\t\t\tgroups,\n+\t\t\t\t\t\tnull,\n+\t\t\t\t\t\troleName);\n+\t\t\t\t\treturn null;\n \t\t\t\t}\n \t\t\t} else if(parms.contains(\"authorizedGroup\")) {\n \t\t\t\tif(parms.contains(\"complementaryObject\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getGroupById(parms.readInt(\"authorizedGroup\")),\n-\t\t\t\t\t\t\t\tparms.readPerunBean(\"complementaryObject\"),\n+\t\t\t\t\t\t\t\tac.fetchPerunBean(parms.readPerunBean(\"complementaryObject\")),\n \t\t\t\t\t\t\t\troleName);\n \t\t\t\t\treturn null;\n \t\t\t\t} else if(parms.contains(\"complementaryObjects\")) {\n \t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.setRole(ac.getSession(),\n \t\t\t\t\t\t\t\tac.getGroupById(parms.readInt(\"authorizedGroup\")),\n \t\t\t\t\t\t\t\troleName,\n-\t\t\t\t\t\t\t\tparms.readListPerunBeans(\"complementaryObjects\"));\n+\t\t\t\t\t\t\t\tac.fetchPerunBeans(parms.readListPerunBeans(\"complementaryObjects\")));\n \t\t\t\t\treturn null;\n \t\t\t\t} else {\n-\t\t\t\t\tthrow new RpcException(RpcException.Type.MISSING_VALUE, \"list of complementary objects or complementary object\");\n+\t\t\t\t\tcz.metacentrum.perun.core.api.AuthzResolver.unsetRole(ac.getSession(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb"}, "originalPosition": 172}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4417fa0975a1ec958d722b46e8d1f999e8788c44", "author": {"user": {"login": "balcirakpeter", "name": null}}, "url": "https://github.com/CESNET/perun/commit/4417fa0975a1ec958d722b46e8d1f999e8788c44", "committedDate": "2020-11-23T13:05:56Z", "message": "Fix roles management\n\n- getAdminGroups and getRichAdmins use only simple perun bean consisting\n  only from its name and id. However, to properly resolve authorization,\n  we need also information about connected objects like vo id for group etc.\n- Second issue is that methods setRole and unsetRole are composing\n  PerunBeans only from information recieved from input. Therefore, someone\n  can fake information about the connected objects like fake vo id for\n  group. This way it would be possible to setRole on object without proper\n  rights.\n- Solution for these issues was to fetch the real object from database\n  according to bean name and its id. This way the final object will have\n  correct all its values. For this purpose were implemented methods\n  fetchPerunBean and fetchPerunBeans. They suppport only objects which\n  can be managed for now. It will be extended later. These methods are\n  now used in RPC methods setRole, unsetRole, getAdminGroups and\n  getRichAdmins.\n- While fixing these problems, we have realized that it is not possible\n  to call set and unset role methods without complementary object.\n  However the underlying logic allows to operate with null complementary\n  object. Therefore, this option was added to these RPC methods."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7075fd6b98d9044dd5b63852bad2986fa49a3eb", "author": {"user": {"login": "balcirakpeter", "name": null}}, "url": "https://github.com/CESNET/perun/commit/b7075fd6b98d9044dd5b63852bad2986fa49a3eb", "committedDate": "2020-11-23T08:16:44Z", "message": "Fix roles management\n\n- getAdminGroups and getRichAdmins use only simple perun bean consisting\n  only from its name and id. However, to properly resolve authorization,\n  we need also information about connected objects like vo id for group etc.\n- Second issue is that methods setRole and unsetRole are composing\n  PerunBeans only from information recieved from input. Therefore, someone\n  can fake information about the connected objects like fake vo id for\n  group. This way it would be possible to setRole on object without proper\n  rights.\n- Solution for these issues was to fetch the real object from database\n  according to bean name and its id. This way the final object will have\n  correct all its values. For this purpose were implemented methods\n  fetchPerunBean and fetchPerunBeans. They suppport only objects which\n  can be managed for now. It will be extended later. These methods are\n  now used in RPC methods setRole, unsetRole, getAdminGroups and\n  getRichAdmins.\n- While fixing these problems, we have realized that it is not possible\n  to call set and unset role methods without complementary object.\n  However the underlying logic allows to operate with null complementary\n  object. Therefore, this option was added to these RPC methods."}, "afterCommit": {"oid": "4417fa0975a1ec958d722b46e8d1f999e8788c44", "author": {"user": {"login": "balcirakpeter", "name": null}}, "url": "https://github.com/CESNET/perun/commit/4417fa0975a1ec958d722b46e8d1f999e8788c44", "committedDate": "2020-11-23T13:05:56Z", "message": "Fix roles management\n\n- getAdminGroups and getRichAdmins use only simple perun bean consisting\n  only from its name and id. However, to properly resolve authorization,\n  we need also information about connected objects like vo id for group etc.\n- Second issue is that methods setRole and unsetRole are composing\n  PerunBeans only from information recieved from input. Therefore, someone\n  can fake information about the connected objects like fake vo id for\n  group. This way it would be possible to setRole on object without proper\n  rights.\n- Solution for these issues was to fetch the real object from database\n  according to bean name and its id. This way the final object will have\n  correct all its values. For this purpose were implemented methods\n  fetchPerunBean and fetchPerunBeans. They suppport only objects which\n  can be managed for now. It will be extended later. These methods are\n  now used in RPC methods setRole, unsetRole, getAdminGroups and\n  getRichAdmins.\n- While fixing these problems, we have realized that it is not possible\n  to call set and unset role methods without complementary object.\n  However the underlying logic allows to operate with null complementary\n  object. Therefore, this option was added to these RPC methods."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MzA4NzE1", "url": "https://github.com/CESNET/perun/pull/2993#pullrequestreview-537308715", "createdAt": "2020-11-24T09:42:32Z", "commit": {"oid": "4417fa0975a1ec958d722b46e8d1f999e8788c44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1679, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}