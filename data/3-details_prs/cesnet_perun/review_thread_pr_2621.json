{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4NjQ2MjU4", "number": 2621, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODoyNjoyMFrODoOqaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMToxMDozMFrODoSQSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTA5ODY3OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODoyNjoyMFrOF2prqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1NzoyOFrOF3gFAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MDM0Nw==", "bodyText": "Shouldn't be there a negation?", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r392850347", "createdAt": "2020-03-16T08:26:20Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java", "diffHunk": "@@ -129,27 +125,14 @@ public Facility getFacilityByName(PerunSession sess, String name) throws Interna\n \tpublic List<RichFacility> getRichFacilities(PerunSession sess) throws InternalErrorException, PrivilegeException {\n \t\tUtils.checkPerunSession(sess);\n \n-\t\t// Perun admin can see everything\n-\t\tif (AuthzResolver.isAuthorized(sess, Role.PERUNADMIN) || AuthzResolver.isAuthorized(sess, Role.PERUNOBSERVER)) {\n-\t\t\treturn getFacilitiesManagerBl().getRichFacilities(sess);\n-\t\t} else if (AuthzResolver.isAuthorized(sess, Role.FACILITYADMIN)) {\n-\t\t\t/*\n-\t\t\t TODO: this optimization prevents loading facilities by ids, but its not optimal when we have thousands of facilities.\n-\t\t\t We should load facilities where user is manager directly from DB, but it would break contract, that authorization is taken only from session.\n-\t\t\t */\n-\t\t\tList<Facility> facilities = getFacilitiesManagerBl().getFacilities(sess);\n-\t\t\tfacilities.removeIf(facility -> {\n-\t\t\t\ttry {\n-\t\t\t\t\treturn !AuthzResolver.isAuthorized(sess, Role.FACILITYADMIN, facility);\n-\t\t\t\t} catch (InternalErrorException e) {\n-\t\t\t\t\t// if we can't determine authorization prevent returning it\n-\t\t\t\t\treturn true;\n-\t\t\t\t}\n-\t\t\t});\n-\t\t\treturn getFacilitiesManagerBl().getRichFacilities(sess, facilities);\n-\t\t} else {\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"getRichFacilities_policy\")) {\n \t\t\tthrow new PrivilegeException(sess, \"getRichFacilities\");\n \t\t}\n+\t\tList<Facility> facilities = getFacilitiesManagerBl().getFacilities(sess);\n+\t\tfacilities.removeIf(facility -> AuthzResolver.authorizedInternal(sess, \"filter-getRichFacilities_policy\", Collections.singletonList(facility)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0MTU3MA==", "bodyText": "Fixed", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r393741570", "createdAt": "2020-03-17T14:57:28Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java", "diffHunk": "@@ -129,27 +125,14 @@ public Facility getFacilityByName(PerunSession sess, String name) throws Interna\n \tpublic List<RichFacility> getRichFacilities(PerunSession sess) throws InternalErrorException, PrivilegeException {\n \t\tUtils.checkPerunSession(sess);\n \n-\t\t// Perun admin can see everything\n-\t\tif (AuthzResolver.isAuthorized(sess, Role.PERUNADMIN) || AuthzResolver.isAuthorized(sess, Role.PERUNOBSERVER)) {\n-\t\t\treturn getFacilitiesManagerBl().getRichFacilities(sess);\n-\t\t} else if (AuthzResolver.isAuthorized(sess, Role.FACILITYADMIN)) {\n-\t\t\t/*\n-\t\t\t TODO: this optimization prevents loading facilities by ids, but its not optimal when we have thousands of facilities.\n-\t\t\t We should load facilities where user is manager directly from DB, but it would break contract, that authorization is taken only from session.\n-\t\t\t */\n-\t\t\tList<Facility> facilities = getFacilitiesManagerBl().getFacilities(sess);\n-\t\t\tfacilities.removeIf(facility -> {\n-\t\t\t\ttry {\n-\t\t\t\t\treturn !AuthzResolver.isAuthorized(sess, Role.FACILITYADMIN, facility);\n-\t\t\t\t} catch (InternalErrorException e) {\n-\t\t\t\t\t// if we can't determine authorization prevent returning it\n-\t\t\t\t\treturn true;\n-\t\t\t\t}\n-\t\t\t});\n-\t\t\treturn getFacilitiesManagerBl().getRichFacilities(sess, facilities);\n-\t\t} else {\n+\t\t// Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"getRichFacilities_policy\")) {\n \t\t\tthrow new PrivilegeException(sess, \"getRichFacilities\");\n \t\t}\n+\t\tList<Facility> facilities = getFacilitiesManagerBl().getFacilities(sess);\n+\t\tfacilities.removeIf(facility -> AuthzResolver.authorizedInternal(sess, \"filter-getRichFacilities_policy\", Collections.singletonList(facility)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MDM0Nw=="}, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTExMDM2OnYy", "diffSide": "RIGHT", "path": "perun-base/src/test/resources/perun-roles.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODozMDoyMVrOF2pzHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1NjozNlrOF3gCYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjI1Mg==", "bodyText": "Shouldn't be this state switched with the rule 'getFacilitiesByDestination_String_policy'? I would expect object Facility here when filtering and without this object in first privilege testing rule of the method.", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r392852252", "createdAt": "2020-03-16T08:30:21Z", "author": {"login": "stavamichal"}, "path": "perun-base/src/test/resources/perun-roles.yml", "diffHunk": "@@ -167,4 +167,555 @@ perun_policies:\n       - PERUNOBSERVER:\n     include_policies:\n       - test_resource_admin\n+\n+  #FacilitiesManagerEntry\n+  getFacilityById_int_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilityByName_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getRichFacilities_policy:\n+    policy_roles:\n+      - FACILITYADMIN:\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getRichFacilities_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilitiesByDestination_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getFacilitiesByDestination_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0MDg5OQ==", "bodyText": "Fixed", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r393740899", "createdAt": "2020-03-17T14:56:36Z", "author": {"login": "balcirakpeter"}, "path": "perun-base/src/test/resources/perun-roles.yml", "diffHunk": "@@ -167,4 +167,555 @@ perun_policies:\n       - PERUNOBSERVER:\n     include_policies:\n       - test_resource_admin\n+\n+  #FacilitiesManagerEntry\n+  getFacilityById_int_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilityByName_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getRichFacilities_policy:\n+    policy_roles:\n+      - FACILITYADMIN:\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getRichFacilities_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilitiesByDestination_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getFacilitiesByDestination_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MjI1Mg=="}, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTExODQzOnYy", "diffSide": "RIGHT", "path": "perun-base/src/test/resources/perun-roles.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODozMzoxMlrOF2p4Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1NzowMVrOF3gDug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MzU1NQ==", "bodyText": "Should be there the object of Facility?", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r392853555", "createdAt": "2020-03-16T08:33:12Z", "author": {"login": "stavamichal"}, "path": "perun-base/src/test/resources/perun-roles.yml", "diffHunk": "@@ -167,4 +167,555 @@ perun_policies:\n       - PERUNOBSERVER:\n     include_policies:\n       - test_resource_admin\n+\n+  #FacilitiesManagerEntry\n+  getFacilityById_int_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilityByName_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getRichFacilities_policy:\n+    policy_roles:\n+      - FACILITYADMIN:\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getRichFacilities_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilitiesByDestination_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getFacilitiesByDestination_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN:\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilitiesByAttribute_String_String_policy:\n+    policy_roles:\n+      - FACILITYADMIN:\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilities_policy:\n+    policy_roles:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0MTI0Mg==", "bodyText": "Fixed", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r393741242", "createdAt": "2020-03-17T14:57:01Z", "author": {"login": "balcirakpeter"}, "path": "perun-base/src/test/resources/perun-roles.yml", "diffHunk": "@@ -167,4 +167,555 @@ perun_policies:\n       - PERUNOBSERVER:\n     include_policies:\n       - test_resource_admin\n+\n+  #FacilitiesManagerEntry\n+  getFacilityById_int_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilityByName_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getRichFacilities_policy:\n+    policy_roles:\n+      - FACILITYADMIN:\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getRichFacilities_policy:\n+    policy_roles:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilitiesByDestination_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  filter-getFacilitiesByDestination_String_policy:\n+    policy_roles:\n+      - RPC:\n+      - ENGINE:\n+      - FACILITYADMIN:\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilitiesByAttribute_String_String_policy:\n+    policy_roles:\n+      - FACILITYADMIN:\n+      - PERUNOBSERVER:\n+    include_policies:\n+      - default_policy\n+\n+  getFacilities_policy:\n+    policy_roles:\n+      - ENGINE:\n+      - FACILITYADMIN: Facility", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MzU1NQ=="}, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTYwOTQ3OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMDo0Nzo0MVrOF2um9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1Nzo0OVrOF3gGBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkzMTA2MA==", "bodyText": "The name shoudl be 'host'.", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r392931060", "createdAt": "2020-03-16T10:47:41Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java", "diffHunk": "@@ -1052,14 +939,14 @@ public PerunBl getPerunBl() {\n \tpublic Host addHost(PerunSession sess, Host host, Facility facility) throws InternalErrorException, FacilityNotExistsException, PrivilegeException {\n \t\tUtils.checkPerunSession(sess);\n \n+\t\tUtils.notNull(host, \"hosts\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 799}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0MTgzMA==", "bodyText": "Fixed", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r393741830", "createdAt": "2020-03-17T14:57:49Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java", "diffHunk": "@@ -1052,14 +939,14 @@ public PerunBl getPerunBl() {\n \tpublic Host addHost(PerunSession sess, Host host, Facility facility) throws InternalErrorException, FacilityNotExistsException, PrivilegeException {\n \t\tUtils.checkPerunSession(sess);\n \n+\t\tUtils.notNull(host, \"hosts\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkzMTA2MA=="}, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 799}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTY4NzEzOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMToxMDozMFrOF2vWpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1ODoxMVrOF3gHIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0MzI2OQ==", "bodyText": "Missing definition of returned objects.", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r392943269", "createdAt": "2020-03-16T11:10:30Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java", "diffHunk": "@@ -1606,4 +1439,32 @@ private void checkFacilityContactsEntitiesExist(PerunSession sess, List<ContactG\n \t\t\tthis.checkFacilityContactEntitiesExists(sess, contactGroup);\n \t\t}\n \t}\n+\n+\t/**\n+\t * Create a list of PerunBeans from facility, vo and service.\n+\t * If beans are not null it also checks if they exist. It will skip them otherwise.\n+\t *\n+\t * @param sess\n+\t * @param facility\n+\t * @param specificVo\n+\t * @param specificService\n+\t * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 1218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0MjExNA==", "bodyText": "Fixed", "url": "https://github.com/CESNET/perun/pull/2621#discussion_r393742114", "createdAt": "2020-03-17T14:58:11Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/FacilitiesManagerEntry.java", "diffHunk": "@@ -1606,4 +1439,32 @@ private void checkFacilityContactsEntitiesExist(PerunSession sess, List<ContactG\n \t\t\tthis.checkFacilityContactEntitiesExists(sess, contactGroup);\n \t\t}\n \t}\n+\n+\t/**\n+\t * Create a list of PerunBeans from facility, vo and service.\n+\t * If beans are not null it also checks if they exist. It will skip them otherwise.\n+\t *\n+\t * @param sess\n+\t * @param facility\n+\t * @param specificVo\n+\t * @param specificService\n+\t * @return", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0MzI2OQ=="}, "originalCommit": {"oid": "5ffdce0ab0a155513a0643984dc7d4494feb50b3"}, "originalPosition": 1218}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1970, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}