{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3Mzk2MjY5", "number": 3000, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMToyNTozOVrOE9ZYpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODoyNDoxNFrOE9hi-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODE0NTAxOnYy", "diffSide": "RIGHT", "path": "perun-base/src/main/resources/perun-roles.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMToyNTozOVrOH6EUQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDo0NjoyN1rOH6eWLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1MDE3Nw==", "bodyText": "Shouldn't here be also REGISTRAR role since it is mentioned in rpc javadoc?", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r530650177", "createdAt": "2020-11-25T21:25:39Z", "author": {"login": "metodej"}, "path": "perun-base/src/main/resources/perun-roles.yml", "diffHunk": "@@ -2454,6 +2454,13 @@ perun_policies:\n     include_policies:\n       - default_policy\n \n+  createSponsoredMembersFromCSV_Vo_String_List<String>_User_policy:\n+    policy_roles:\n+      - SPONSOR: Vo\n+        SELF: User", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea63ee1b3f50c6668e07cd482d75cd895507880"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA3NjY1NA==", "bodyText": "It doesn't really make sense, I will edit the javadoc.", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r531076654", "createdAt": "2020-11-26T14:46:27Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-base/src/main/resources/perun-roles.yml", "diffHunk": "@@ -2454,6 +2454,13 @@ perun_policies:\n     include_policies:\n       - default_policy\n \n+  createSponsoredMembersFromCSV_Vo_String_List<String>_User_policy:\n+    policy_roles:\n+      - SPONSOR: Vo\n+        SELF: User", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1MDE3Nw=="}, "originalCommit": {"oid": "8ea63ee1b3f50c6668e07cd482d75cd895507880"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODE1MjI5OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMToyODo0MFrOH6EYrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDo1MDoxN1rOH6egCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1MTMwOQ==", "bodyText": "Is there any reason to declare user here and not later?", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r530651309", "createdAt": "2020-11-25T21:28:40Z", "author": {"login": "metodej"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2673,4 +2725,116 @@ private void processMemberAfterRemovingLastSponsor(PerunSession sess, Member spo\n \t\t\tthrow new InternalErrorException(e);\n \t\t}\n \t}\n+\n+\t/**\n+\t * Creates a new user from given data and sponsors him in the given vo.\n+\t *\n+\t * @param sess session\n+\t * @param vo vo, where the new user will be sponsored\n+\t * @param namespace namespace used to define an external system where\n+\t *                  the user will have a new login generated (currently, only 'mu' namespace is supported)\n+\t * @param data values used to create the new user.\n+\t *             Required values are - firstname, lastname, urn:perun:user:attribute-def:def:preferredMail\n+\t *             Optional values are - urn:perun:user:attribute-def:def:note\n+\t * @param sponsor user, who will be set as a sponsor to the newly created user\n+\t * @param validityTo validity of the sponsorship. If null, the sponsorship will not be automatically canceled.\n+\t * @param asyncValidation switch for easier testing\n+\t * @return result of the procedure\n+\t */\n+\tprivate Map<String, String> createSingleSponsoredMemberFromCSV(PerunSession sess, Vo vo, String namespace,\n+\t                                                               Map<String, String> data, User sponsor,\n+\t                                                               LocalDate validityTo, boolean asyncValidation) {\n+\t\tfor (String requiredField : SPONSORED_MEMBER_REQUIRED_FIELDS) {\n+\t\t\tif (!data.containsKey(requiredField)) {\n+\t\t\t\tlog.error(\"Invalid data passed, missing required value: {}\", requiredField);\n+\t\t\t\tthrow new InternalErrorException(\"Invalid data passed, missing required value: \" + requiredField);\n+\t\t\t}\n+\t\t}\n+\n+\t\tSet<String> additionalValues = new HashSet<>(data.keySet());\n+\t\tadditionalValues.removeAll(SPONSORED_MEMBER_REQUIRED_FIELDS);\n+\n+\t\tfor (String valueName : additionalValues) {\n+\t\t\tif (!SPONSORED_MEMBER_ADDITIONAL_FIELDS.contains(valueName)) {\n+\t\t\t\tlog.error(\"Not allowed additional value passed, value: {}\", valueName);\n+\t\t\t\tthrow new InternalErrorException(\"Not allowed additional value passed, value: \" + valueName);\n+\t\t\t}\n+\t\t}\n+\n+\t\tMap<String, String> mapName = new HashMap<>();\n+\t\tmapName.put(\"firstName\", data.get(\"firstname\"));\n+\t\tmapName.put(\"lastName\", data.get(\"lastname\"));\n+\n+\t\tString email = data.get(A_U_PREF_MAIL);\n+\n+\t\tPasswordManagerModule module = getPerunBl().getUsersManagerBl().getPasswordManagerModule(sess, namespace);\n+\t\tString password = module.generateRandomPassword(sess, null);\n+\n+\t\t// create sponsored member\n+\t\tUser user;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea63ee1b3f50c6668e07cd482d75cd895507880"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA3OTE3OQ==", "bodyText": "No, there is not. I have moved it.", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r531079179", "createdAt": "2020-11-26T14:50:17Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2673,4 +2725,116 @@ private void processMemberAfterRemovingLastSponsor(PerunSession sess, Member spo\n \t\t\tthrow new InternalErrorException(e);\n \t\t}\n \t}\n+\n+\t/**\n+\t * Creates a new user from given data and sponsors him in the given vo.\n+\t *\n+\t * @param sess session\n+\t * @param vo vo, where the new user will be sponsored\n+\t * @param namespace namespace used to define an external system where\n+\t *                  the user will have a new login generated (currently, only 'mu' namespace is supported)\n+\t * @param data values used to create the new user.\n+\t *             Required values are - firstname, lastname, urn:perun:user:attribute-def:def:preferredMail\n+\t *             Optional values are - urn:perun:user:attribute-def:def:note\n+\t * @param sponsor user, who will be set as a sponsor to the newly created user\n+\t * @param validityTo validity of the sponsorship. If null, the sponsorship will not be automatically canceled.\n+\t * @param asyncValidation switch for easier testing\n+\t * @return result of the procedure\n+\t */\n+\tprivate Map<String, String> createSingleSponsoredMemberFromCSV(PerunSession sess, Vo vo, String namespace,\n+\t                                                               Map<String, String> data, User sponsor,\n+\t                                                               LocalDate validityTo, boolean asyncValidation) {\n+\t\tfor (String requiredField : SPONSORED_MEMBER_REQUIRED_FIELDS) {\n+\t\t\tif (!data.containsKey(requiredField)) {\n+\t\t\t\tlog.error(\"Invalid data passed, missing required value: {}\", requiredField);\n+\t\t\t\tthrow new InternalErrorException(\"Invalid data passed, missing required value: \" + requiredField);\n+\t\t\t}\n+\t\t}\n+\n+\t\tSet<String> additionalValues = new HashSet<>(data.keySet());\n+\t\tadditionalValues.removeAll(SPONSORED_MEMBER_REQUIRED_FIELDS);\n+\n+\t\tfor (String valueName : additionalValues) {\n+\t\t\tif (!SPONSORED_MEMBER_ADDITIONAL_FIELDS.contains(valueName)) {\n+\t\t\t\tlog.error(\"Not allowed additional value passed, value: {}\", valueName);\n+\t\t\t\tthrow new InternalErrorException(\"Not allowed additional value passed, value: \" + valueName);\n+\t\t\t}\n+\t\t}\n+\n+\t\tMap<String, String> mapName = new HashMap<>();\n+\t\tmapName.put(\"firstName\", data.get(\"firstname\"));\n+\t\tmapName.put(\"lastName\", data.get(\"lastname\"));\n+\n+\t\tString email = data.get(A_U_PREF_MAIL);\n+\n+\t\tPasswordManagerModule module = getPerunBl().getUsersManagerBl().getPasswordManagerModule(sess, namespace);\n+\t\tString password = module.generateRandomPassword(sess, null);\n+\n+\t\t// create sponsored member\n+\t\tUser user;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1MTMwOQ=="}, "originalCommit": {"oid": "8ea63ee1b3f50c6668e07cd482d75cd895507880"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTQ4MjE4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODoyNDoxNFrOH6QUFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDo1Mjo1OVrOH6emkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg0Njc0MA==", "bodyText": "I would add something like \"... using input from CSV file.\"", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r530846740", "createdAt": "2020-11-26T08:24:14Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "diffHunk": "@@ -1172,6 +1172,34 @@\n \t */\n \tRichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor, LocalDate validityTo) throws PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException, AlreadySponsorException;\n \n+\t/**\n+\t * Creates new sponsored members.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea63ee1b3f50c6668e07cd482d75cd895507880"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4MDg0OQ==", "bodyText": "Added.", "url": "https://github.com/CESNET/perun/pull/3000#discussion_r531080849", "createdAt": "2020-11-26T14:52:59Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "diffHunk": "@@ -1172,6 +1172,34 @@\n \t */\n \tRichMember setSponsoredMember(PerunSession session, Vo vo, User userToBeSponsored, String namespace, String password, User sponsor, LocalDate validityTo) throws PrivilegeException, AlreadyMemberException, LoginNotExistsException, PasswordCreationFailedException, ExtendMembershipException, WrongAttributeValueException, ExtSourceNotExistsException, WrongReferenceAttributeValueException, UserNotInRoleException, PasswordStrengthException, InvalidLoginException, AlreadySponsorException;\n \n+\t/**\n+\t * Creates new sponsored members.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg0Njc0MA=="}, "originalCommit": {"oid": "8ea63ee1b3f50c6668e07cd482d75cd895507880"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2187, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}