{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNDk1MTY1", "number": 2910, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDo0NDozMFrOEnFIvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNToyMzoxM1rOEnzhsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDE0MDc4OnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDo0NDozMFrOHXecmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNzo0NDoyOFrOHbj_sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3ODEzOQ==", "bodyText": "You probably wanted to use fedLastName variable instead of repeating federValues.get(...).", "url": "https://github.com/CESNET/perun/pull/2910#discussion_r494378139", "createdAt": "2020-09-24T14:44:30Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -2867,18 +2874,40 @@ private Application getApplicationById(int appId) {\n \t\t} else {\n \t\t\tparsedName = new HashMap<>();\n \t\t}\n-\t\t// try to fill if initial parsing failed -> returned null\n-\t\tif (parsedName.get(\"firstName\") == null) {\n-\t\t\tparsedName.put(\"firstName\", federValues.get(shibFirstNameVar));\n-\t\t}\n-\t\tif (parsedName.get(\"lastName\") == null) {\n-\t\t\tparsedName.put(\"lastName\", federValues.get(shibLastNameVar));\n+\t\t// if the idp provided first name or last name, always use it\n+\t\tString fedFirstName = federValues.get(shibFirstNameVar);\n+\t\tString fedLastName = federValues.get(shibLastNameVar);\n+\n+\t\tsetIfNonEmpty(parsedName, fedFirstName, \"firstName\");\n+\t\tsetIfNonEmpty(parsedName, federValues.get(shibLastNameVar), \"lastName\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6024709ba876af3df3e9b2a24427d52019b4764d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY2MzM0Nw==", "bodyText": "Yes, I have fixed it.", "url": "https://github.com/CESNET/perun/pull/2910#discussion_r498663347", "createdAt": "2020-10-02T07:44:28Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -2867,18 +2874,40 @@ private Application getApplicationById(int appId) {\n \t\t} else {\n \t\t\tparsedName = new HashMap<>();\n \t\t}\n-\t\t// try to fill if initial parsing failed -> returned null\n-\t\tif (parsedName.get(\"firstName\") == null) {\n-\t\t\tparsedName.put(\"firstName\", federValues.get(shibFirstNameVar));\n-\t\t}\n-\t\tif (parsedName.get(\"lastName\") == null) {\n-\t\t\tparsedName.put(\"lastName\", federValues.get(shibLastNameVar));\n+\t\t// if the idp provided first name or last name, always use it\n+\t\tString fedFirstName = federValues.get(shibFirstNameVar);\n+\t\tString fedLastName = federValues.get(shibLastNameVar);\n+\n+\t\tsetIfNonEmpty(parsedName, fedFirstName, \"firstName\");\n+\t\tsetIfNonEmpty(parsedName, federValues.get(shibLastNameVar), \"lastName\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3ODEzOQ=="}, "originalCommit": {"oid": "6024709ba876af3df3e9b2a24427d52019b4764d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTc0MTMxOnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNToyMzoxM1rOHYkyqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNzo0NToxM1rOHbkAzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMDY2NQ==", "bodyText": "This can fail during the getNamesPattern method if the fedFirstName or the fedLastName is null.", "url": "https://github.com/CESNET/perun/pull/2910#discussion_r495530665", "createdAt": "2020-09-27T05:23:13Z", "author": {"login": "balcirakpeter"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -2867,18 +2874,40 @@ private Application getApplicationById(int appId) {\n \t\t} else {\n \t\t\tparsedName = new HashMap<>();\n \t\t}\n-\t\t// try to fill if initial parsing failed -> returned null\n-\t\tif (parsedName.get(\"firstName\") == null) {\n-\t\t\tparsedName.put(\"firstName\", federValues.get(shibFirstNameVar));\n-\t\t}\n-\t\tif (parsedName.get(\"lastName\") == null) {\n-\t\t\tparsedName.put(\"lastName\", federValues.get(shibLastNameVar));\n+\t\t// if the idp provided first name or last name, always use it\n+\t\tString fedFirstName = federValues.get(shibFirstNameVar);\n+\t\tString fedLastName = federValues.get(shibLastNameVar);\n+\n+\t\tsetIfNonEmpty(parsedName, fedFirstName, \"firstName\");\n+\t\tsetIfNonEmpty(parsedName, federValues.get(shibLastNameVar), \"lastName\");\n+\n+\t\t// do new parsing heuristic\n+\t\tCandidate candidate = new Candidate();\n+\t\tif (displayName != null && !displayName.isEmpty()) {\n+\t\t\tparseTitlesAndMiddleName(candidate, displayName, fedFirstName, fedLastName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6024709ba876af3df3e9b2a24427d52019b4764d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY2MzYyOQ==", "bodyText": "I have added conditions, so this is not called if any of the names are missing.", "url": "https://github.com/CESNET/perun/pull/2910#discussion_r498663629", "createdAt": "2020-10-02T07:45:13Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -2867,18 +2874,40 @@ private Application getApplicationById(int appId) {\n \t\t} else {\n \t\t\tparsedName = new HashMap<>();\n \t\t}\n-\t\t// try to fill if initial parsing failed -> returned null\n-\t\tif (parsedName.get(\"firstName\") == null) {\n-\t\t\tparsedName.put(\"firstName\", federValues.get(shibFirstNameVar));\n-\t\t}\n-\t\tif (parsedName.get(\"lastName\") == null) {\n-\t\t\tparsedName.put(\"lastName\", federValues.get(shibLastNameVar));\n+\t\t// if the idp provided first name or last name, always use it\n+\t\tString fedFirstName = federValues.get(shibFirstNameVar);\n+\t\tString fedLastName = federValues.get(shibLastNameVar);\n+\n+\t\tsetIfNonEmpty(parsedName, fedFirstName, \"firstName\");\n+\t\tsetIfNonEmpty(parsedName, federValues.get(shibLastNameVar), \"lastName\");\n+\n+\t\t// do new parsing heuristic\n+\t\tCandidate candidate = new Candidate();\n+\t\tif (displayName != null && !displayName.isEmpty()) {\n+\t\t\tparseTitlesAndMiddleName(candidate, displayName, fedFirstName, fedLastName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMDY2NQ=="}, "originalCommit": {"oid": "6024709ba876af3df3e9b2a24427d52019b4764d"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2298, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}