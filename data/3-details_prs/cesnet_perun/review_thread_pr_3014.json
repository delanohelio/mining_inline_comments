{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5Nzk4NDkz", "number": 3014, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDowNzoyM1rOE_EO-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoyMToyN1rOE_E13w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTY1MTEyOnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDowNzoyM1rOH8kBgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjoxOTozMFrOH8qGtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI2NjgxNw==", "bodyText": "Just a reminder that by calling only selfAuthorizedForApplication, PERUNADMIN will not be allowed to call this method. I suppose it is ok if the whole method will be used only for perun-wui, but it could be insufficient when for example NGUI would want to use it.", "url": "https://github.com/CESNET/perun/pull/3014#discussion_r533266817", "createdAt": "2020-12-01T10:07:23Z", "author": {"login": "balcirakpeter"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -2552,16 +2552,71 @@ public void updateFormItemData(PerunSession sess, int appId, ApplicationFormItem\n \n \t\tif (notAllowed.contains(existingData.getFormItem().getType())) throw new RegistrarException(\"You are not allowed to modify \"+existingData.getFormItem().getType()+\" type of form items.\");\n \n+\t\tupdateFormItemData(sess, data);\n+\n+\t}\n+\n+\t@Transactional(rollbackFor = Exception.class)\n+\tpublic void updateFormItemsData(PerunSession sess, int appId, List<ApplicationFormItemData> data) throws PerunException {\n+\n+\t\tApplication app = getApplicationById(appId);\n+\n+\t\tif (app == null) throw new InternalErrorException(\"Application with ID=\"+appId+\" doesn't exist.\");\n+\n+\t\tif (!AuthzResolver.selfAuthorizedForApplication(sess, app)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e2f76f2cfb93003948449af020ea3a56462639b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM2NjQ1Mw==", "bodyText": "Thanks for the insight. Use-cases for admin gui are not yet defined, I'll let this to be decided once its needed.", "url": "https://github.com/CESNET/perun/pull/3014#discussion_r533366453", "createdAt": "2020-12-01T12:19:30Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -2552,16 +2552,71 @@ public void updateFormItemData(PerunSession sess, int appId, ApplicationFormItem\n \n \t\tif (notAllowed.contains(existingData.getFormItem().getType())) throw new RegistrarException(\"You are not allowed to modify \"+existingData.getFormItem().getType()+\" type of form items.\");\n \n+\t\tupdateFormItemData(sess, data);\n+\n+\t}\n+\n+\t@Transactional(rollbackFor = Exception.class)\n+\tpublic void updateFormItemsData(PerunSession sess, int appId, List<ApplicationFormItemData> data) throws PerunException {\n+\n+\t\tApplication app = getApplicationById(appId);\n+\n+\t\tif (app == null) throw new InternalErrorException(\"Application with ID=\"+appId+\" doesn't exist.\");\n+\n+\t\tif (!AuthzResolver.selfAuthorizedForApplication(sess, app)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI2NjgxNw=="}, "originalCommit": {"oid": "7e2f76f2cfb93003948449af020ea3a56462639b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTc1MDcxOnYy", "diffSide": "RIGHT", "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoyMToyN1rOH8lCPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjoyMDowNFrOH8qIFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI4MzM4OQ==", "bodyText": "I think you should check here that all of the given data is for the given application. This would allow some users to change someone else's data.", "url": "https://github.com/CESNET/perun/pull/3014#discussion_r533283389", "createdAt": "2020-12-01T10:21:27Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -2552,16 +2552,71 @@ public void updateFormItemData(PerunSession sess, int appId, ApplicationFormItem\n \n \t\tif (notAllowed.contains(existingData.getFormItem().getType())) throw new RegistrarException(\"You are not allowed to modify \"+existingData.getFormItem().getType()+\" type of form items.\");\n \n+\t\tupdateFormItemData(sess, data);\n+\n+\t}\n+\n+\t@Transactional(rollbackFor = Exception.class)\n+\tpublic void updateFormItemsData(PerunSession sess, int appId, List<ApplicationFormItemData> data) throws PerunException {\n+\n+\t\tApplication app = getApplicationById(appId);\n+\n+\t\tif (app == null) throw new InternalErrorException(\"Application with ID=\"+appId+\" doesn't exist.\");\n+\n+\t\tif (!AuthzResolver.selfAuthorizedForApplication(sess, app)) {\n+\t\t\tthrow new PrivilegeException(sess, \"updateFormItemsData\");\n+\t\t}\n+\n+\t\tif (AppState.APPROVED.equals(app.getState()) || AppState.REJECTED.equals(app.getState())) throw new RegistrarException(\"Form items of once approved or rejected applications can't be modified.\");\n+\n+\t\t// no data to change\n+\t\tif (data == null || data.isEmpty()) return;\n+\n+\t\tfor (ApplicationFormItemData dataItem : data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e2f76f2cfb93003948449af020ea3a56462639b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM2NjgwNw==", "bodyText": "Should be fixed. Now we pass also application id in order to get form item data from the DB.", "url": "https://github.com/CESNET/perun/pull/3014#discussion_r533366807", "createdAt": "2020-12-01T12:20:04Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -2552,16 +2552,71 @@ public void updateFormItemData(PerunSession sess, int appId, ApplicationFormItem\n \n \t\tif (notAllowed.contains(existingData.getFormItem().getType())) throw new RegistrarException(\"You are not allowed to modify \"+existingData.getFormItem().getType()+\" type of form items.\");\n \n+\t\tupdateFormItemData(sess, data);\n+\n+\t}\n+\n+\t@Transactional(rollbackFor = Exception.class)\n+\tpublic void updateFormItemsData(PerunSession sess, int appId, List<ApplicationFormItemData> data) throws PerunException {\n+\n+\t\tApplication app = getApplicationById(appId);\n+\n+\t\tif (app == null) throw new InternalErrorException(\"Application with ID=\"+appId+\" doesn't exist.\");\n+\n+\t\tif (!AuthzResolver.selfAuthorizedForApplication(sess, app)) {\n+\t\t\tthrow new PrivilegeException(sess, \"updateFormItemsData\");\n+\t\t}\n+\n+\t\tif (AppState.APPROVED.equals(app.getState()) || AppState.REJECTED.equals(app.getState())) throw new RegistrarException(\"Form items of once approved or rejected applications can't be modified.\");\n+\n+\t\t// no data to change\n+\t\tif (data == null || data.isEmpty()) return;\n+\n+\t\tfor (ApplicationFormItemData dataItem : data) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI4MzM4OQ=="}, "originalCommit": {"oid": "7e2f76f2cfb93003948449af020ea3a56462639b"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2203, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}