{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMjg3NTAz", "number": 2592, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwODo1ODowNlrODpa22g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwODo1ODowNlrODpa22g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzU4MjM0OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/SecurityTeamsManagerEntry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwODo1ODowNlrOF4lPnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo1Mzo1N1rOF5JDnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg3NDc4Mw==", "bodyText": "You can remove this exception now.", "url": "https://github.com/CESNET/perun/pull/2592#discussion_r394874783", "createdAt": "2020-03-19T08:58:06Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/SecurityTeamsManagerEntry.java", "diffHunk": "@@ -64,27 +66,27 @@ public void setSecurityTeamsManagerBl(SecurityTeamsManagerBl securityTeamsManage\n \tpublic List<SecurityTeam> getSecurityTeams(PerunSession sess) throws PrivilegeException, InternalErrorException {\n \t\tUtils.checkPerunSession(sess);\n \n-\t\tif (AuthzResolver.isAuthorized(sess, Role.PERUNOBSERVER)) {\n-\t\t\treturn getSecurityTeamsManagerBl().getAllSecurityTeams(sess);\n-\t\t} else if (AuthzResolver.isAuthorized(sess, Role.SECURITYADMIN)) {\n-\t\t\tList<SecurityTeam> securityTeams = new ArrayList<>();\n-\t\t\t// Get SecurityTeams where user is Admin\n-\t\t\tfor (PerunBean st: AuthzResolver.getComplementaryObjectsForRole(sess, Role.SECURITYADMIN, SecurityTeam.class)) {\n-\t\t\t\tsecurityTeams.add((SecurityTeam) st);\n-\t\t\t}\n-\t\t\treturn securityTeams;\n-\t\t} else {\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"getSecurityTeams_policy\")) {\n \t\t\tthrow new PrivilegeException(\"getSecurityTeams\");\n+\t\t} else {\n+\t\t\tList<SecurityTeam> securityTeams = getSecurityTeamsManagerBl().getAllSecurityTeams(sess);\n+\t\t\tsecurityTeams.removeIf(st -> {\n+\t\t\t\ttry {\n+\t\t\t\t\treturn !AuthzResolver.authorizedInternal(sess, \"filter-getSecurityTeams_policy\", Collections.singletonList(st));\n+\t\t\t\t} catch (InternalErrorException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16d8d86f9b6a3a815042bf328022fdb415bb9d94"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2MTUzNQ==", "bodyText": "Removed. I also added comments before authorization a moved entities' existence checks before authorization.", "url": "https://github.com/CESNET/perun/pull/2592#discussion_r395461535", "createdAt": "2020-03-20T06:53:57Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/SecurityTeamsManagerEntry.java", "diffHunk": "@@ -64,27 +66,27 @@ public void setSecurityTeamsManagerBl(SecurityTeamsManagerBl securityTeamsManage\n \tpublic List<SecurityTeam> getSecurityTeams(PerunSession sess) throws PrivilegeException, InternalErrorException {\n \t\tUtils.checkPerunSession(sess);\n \n-\t\tif (AuthzResolver.isAuthorized(sess, Role.PERUNOBSERVER)) {\n-\t\t\treturn getSecurityTeamsManagerBl().getAllSecurityTeams(sess);\n-\t\t} else if (AuthzResolver.isAuthorized(sess, Role.SECURITYADMIN)) {\n-\t\t\tList<SecurityTeam> securityTeams = new ArrayList<>();\n-\t\t\t// Get SecurityTeams where user is Admin\n-\t\t\tfor (PerunBean st: AuthzResolver.getComplementaryObjectsForRole(sess, Role.SECURITYADMIN, SecurityTeam.class)) {\n-\t\t\t\tsecurityTeams.add((SecurityTeam) st);\n-\t\t\t}\n-\t\t\treturn securityTeams;\n-\t\t} else {\n+\t\tif (!AuthzResolver.authorizedInternal(sess, \"getSecurityTeams_policy\")) {\n \t\t\tthrow new PrivilegeException(\"getSecurityTeams\");\n+\t\t} else {\n+\t\t\tList<SecurityTeam> securityTeams = getSecurityTeamsManagerBl().getAllSecurityTeams(sess);\n+\t\t\tsecurityTeams.removeIf(st -> {\n+\t\t\t\ttry {\n+\t\t\t\t\treturn !AuthzResolver.authorizedInternal(sess, \"filter-getSecurityTeams_policy\", Collections.singletonList(st));\n+\t\t\t\t} catch (InternalErrorException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg3NDc4Mw=="}, "originalCommit": {"oid": "16d8d86f9b6a3a815042bf328022fdb415bb9d94"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2107, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}