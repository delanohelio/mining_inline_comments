{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5OTE3Mzcx", "number": 2923, "title": "Sponsorship expiration", "bodyText": "For deployment:\n\nNew DB version with changelog\n\n\nFrom now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\nUpdated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\nCreated method updateSponsorshipValidity which can be used to update\nvalidity of a sponsorship relation.\nUpdated policy of the getSponsors method so it can be called by\nappropriate users.\nBUGFIXES:\n\nMembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\nMembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException.", "createdAt": "2020-10-08T13:20:00Z", "url": "https://github.com/CESNET/perun/pull/2923", "merged": true, "mergeCommit": {"oid": "ec0d76fa0d72fd6b6523e9254142d325a4dfd13c"}, "closed": true, "closedAt": "2020-10-13T11:20:48Z", "author": {"login": "Vojtech-Sassmann"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQhyRWABqjM4NTU1MTQ3MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSFda-AFqTUwNzI2MDg2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5e4465b05481f7c4dc4bfed640820adf44f0bb2", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/e5e4465b05481f7c4dc4bfed640820adf44f0bb2", "committedDate": "2020-10-08T13:19:26Z", "message": "TODO"}, "afterCommit": {"oid": "71ed8d4b1954a19b533bcb9ed8c2c3ab340b9b24", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/71ed8d4b1954a19b533bcb9ed8c2c3ab340b9b24", "committedDate": "2020-10-08T13:41:37Z", "message": "TODO"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71ed8d4b1954a19b533bcb9ed8c2c3ab340b9b24", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/71ed8d4b1954a19b533bcb9ed8c2c3ab340b9b24", "committedDate": "2020-10-08T13:41:37Z", "message": "TODO"}, "afterCommit": {"oid": "214e9d4376b18cfdbf15384b554851c9dd922524", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/214e9d4376b18cfdbf15384b554851c9dd922524", "committedDate": "2020-10-08T13:50:25Z", "message": "TODO"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "214e9d4376b18cfdbf15384b554851c9dd922524", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/214e9d4376b18cfdbf15384b554851c9dd922524", "committedDate": "2020-10-08T13:50:25Z", "message": "TODO"}, "afterCommit": {"oid": "7acdf20cfb199f1a138d7987796666f0e7b64563", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/7acdf20cfb199f1a138d7987796666f0e7b64563", "committedDate": "2020-10-08T14:58:43Z", "message": "TODO"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7acdf20cfb199f1a138d7987796666f0e7b64563", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/7acdf20cfb199f1a138d7987796666f0e7b64563", "committedDate": "2020-10-08T14:58:43Z", "message": "TODO"}, "afterCommit": {"oid": "6f974f9e0911c28ee0dd2e89515d7379738fcc8d", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/6f974f9e0911c28ee0dd2e89515d7379738fcc8d", "committedDate": "2020-10-09T13:21:05Z", "message": "TODO"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f974f9e0911c28ee0dd2e89515d7379738fcc8d", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/6f974f9e0911c28ee0dd2e89515d7379738fcc8d", "committedDate": "2020-10-09T13:21:05Z", "message": "TODO"}, "afterCommit": {"oid": "5475fe471f7756ad767f9b9c9089a508c9e7e590", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/5475fe471f7756ad767f9b9c9089a508c9e7e590", "committedDate": "2020-10-09T14:39:50Z", "message": "TODO"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5475fe471f7756ad767f9b9c9089a508c9e7e590", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/5475fe471f7756ad767f9b9c9089a508c9e7e590", "committedDate": "2020-10-09T14:39:50Z", "message": "TODO"}, "afterCommit": {"oid": "afd17ce545f226c8eb11628563b88aed4b2f30a0", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/afd17ce545f226c8eb11628563b88aed4b2f30a0", "committedDate": "2020-10-09T15:05:36Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "afd17ce545f226c8eb11628563b88aed4b2f30a0", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/afd17ce545f226c8eb11628563b88aed4b2f30a0", "committedDate": "2020-10-09T15:05:36Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}, "afterCommit": {"oid": "a9339627f3c86241e3810beb7c2cef3aa2783b1e", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/a9339627f3c86241e3810beb7c2cef3aa2783b1e", "committedDate": "2020-10-09T15:18:53Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2Mzg1MzQ3", "url": "https://github.com/CESNET/perun/pull/2923#pullrequestreview-506385347", "createdAt": "2020-10-12T08:07:38Z", "commit": {"oid": "a9339627f3c86241e3810beb7c2cef3aa2783b1e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowNzozOFrOHfzfqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMjo0ODozNFrOHf9T6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExMTU5NQ==", "bodyText": "Shouldn't you also add serializeToString method?", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503111595", "createdAt": "2020-10-12T08:07:38Z", "author": {"login": "stavamichal"}, "path": "perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package cz.metacentrum.perun.core.api;\n+\n+import java.time.LocalDate;\n+import java.util.List;\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+public class Sponsor extends User {\n+\tprivate LocalDate validityTo;\n+\tprivate boolean active;\n+\tprivate List<UserExtSource> userExtSources;\n+\tprivate List<Attribute> userAttributes;\n+\n+\tpublic Sponsor(User user) {\n+\t\tsuper(user.getId(), user.getUuid(), user.getFirstName(), user.getLastName(), user.getMiddleName(),\n+\t\t\t\tuser.getTitleBefore(), user.getTitleAfter(), user.getCreatedAt(), user.getCreatedBy(),\n+\t\t\t\tuser.getModifiedAt(), user.getModifiedBy(), user.isServiceUser(), user.isSponsoredUser(),\n+\t\t\t\tuser.getCreatedByUid(), user.getModifiedByUid());\n+\t}\n+\tpublic Sponsor(RichUser user) {\n+\t\tthis((User)user);\n+\t\tthis.userAttributes = user.getUserAttributes();\n+\t\tthis.userExtSources = user.getUserExtSources();\n+\t}\n+\n+\tpublic LocalDate getValidityTo() {\n+\t\treturn validityTo;\n+\t}\n+\n+\tpublic void setValidityTo(LocalDate validityTo) {\n+\t\tthis.validityTo = validityTo;\n+\t}\n+\n+\tpublic boolean isActive() {\n+\t\treturn active;\n+\t}\n+\n+\tpublic void setActive(boolean active) {\n+\t\tthis.active = active;\n+\t}\n+\n+\tpublic List<UserExtSource> getUserExtSources() {\n+\t\treturn userExtSources;\n+\t}\n+\n+\tpublic void setUserExtSources(List<UserExtSource> userExtSources) {\n+\t\tthis.userExtSources = userExtSources;\n+\t}\n+\n+\tpublic List<Attribute> getUserAttributes() {\n+\t\treturn userAttributes;\n+\t}\n+\n+\tpublic void setUserAttributes(List<Attribute> userAttributes) {\n+\t\tthis.userAttributes = userAttributes;\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn \"Sponsor[\" +\n+\t\t\t\t\"id=\" + getId() +\n+\t\t\t\t\", validityTo=\" + validityTo +\n+\t\t\t\t\", active=\" + active +\n+\t\t\t\t\", firstName='\" + firstName + '\\'' +\n+\t\t\t\t\", lastName='\" + lastName + '\\'' +\n+\t\t\t\t\", middleName='\" + middleName + '\\'' +\n+\t\t\t\t\", titleBefore='\" + titleBefore + '\\'' +\n+\t\t\t\t\", titleAfter='\" + titleAfter + '\\'' +\n+\t\t\t\t']';\n+\t}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9339627f3c86241e3810beb7c2cef3aa2783b1e"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEzOTQ5Mg==", "bodyText": "You should also describe that null means \"forever\". Same for all other occurrences.", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503139492", "createdAt": "2020-10-12T08:52:35Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/api/MembersManager.java", "diffHunk": "@@ -1125,6 +1124,7 @@\n \t * @param name a map containing the full name or its parts (mandatory: firstName, lastName; optionally: titleBefore, titleAfter)\n \t * @param password  password\n \t * @param sponsor sponsoring user or null for the caller\n+\t * @param validityTo last day when the sponsorship is active", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9339627f3c86241e3810beb7c2cef3aa2783b1e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI3MjQyNg==", "bodyText": "Because of external sites, we need to preserve the old method and also create a new one.\nFor entry, RPC, and open API, wee need to preserve the method returning a list of rich users (and set it as deprecated) and also create a new method (with a different name I am afraid) returning a list of sponsors instead.", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503272426", "createdAt": "2020-10-12T12:48:34Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/entry/UsersManagerEntry.java", "diffHunk": "@@ -1315,21 +1317,26 @@ public void updateUserExtSourceLastAccess(PerunSession sess, UserExtSource userE\n \t}\n \n \t@Override\n-\tpublic List<RichUser> getSponsors(PerunSession sess, Member member, List<String> attrNames) throws PrivilegeException, UserNotExistsException {\n+\tpublic List<Sponsor> getSponsors(PerunSession sess, Member member, List<String> attrNames) throws PrivilegeException, UserNotExistsException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9339627f3c86241e3810beb7c2cef3aa2783b1e"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9339627f3c86241e3810beb7c2cef3aa2783b1e", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/a9339627f3c86241e3810beb7c2cef3aa2783b1e", "committedDate": "2020-10-09T15:18:53Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}, "afterCommit": {"oid": "4e12d8785666dfebf820e9f0593815961966929d", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/4e12d8785666dfebf820e9f0593815961966929d", "committedDate": "2020-10-12T13:37:39Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e12d8785666dfebf820e9f0593815961966929d", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/4e12d8785666dfebf820e9f0593815961966929d", "committedDate": "2020-10-12T13:37:39Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}, "afterCommit": {"oid": "afac22ae931b3cd974eaf505bcc730ecc4789ce0", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/afac22ae931b3cd974eaf505bcc730ecc4789ce0", "committedDate": "2020-10-12T13:40:12Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "afac22ae931b3cd974eaf505bcc730ecc4789ce0", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/afac22ae931b3cd974eaf505bcc730ecc4789ce0", "committedDate": "2020-10-12T13:40:12Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}, "afterCommit": {"oid": "9267718d982bd49b6a4212fcc5f93dcf2f8ef566", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/9267718d982bd49b6a4212fcc5f93dcf2f8ef566", "committedDate": "2020-10-12T14:40:38Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9267718d982bd49b6a4212fcc5f93dcf2f8ef566", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/9267718d982bd49b6a4212fcc5f93dcf2f8ef566", "committedDate": "2020-10-12T14:40:38Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}, "afterCommit": {"oid": "b92ddb0f78ecbb6559d88b29d0e698e929e659c9", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/b92ddb0f78ecbb6559d88b29d0e698e929e659c9", "committedDate": "2020-10-12T14:49:10Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b92ddb0f78ecbb6559d88b29d0e698e929e659c9", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/b92ddb0f78ecbb6559d88b29d0e698e929e659c9", "committedDate": "2020-10-12T14:49:10Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}, "afterCommit": {"oid": "44eb12e877b385fc57c5b2847194ac25b29a8af2", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/44eb12e877b385fc57c5b2847194ac25b29a8af2", "committedDate": "2020-10-12T14:53:57Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NzQzNTc4", "url": "https://github.com/CESNET/perun/pull/2923#pullrequestreview-506743578", "createdAt": "2020-10-12T16:00:14Z", "commit": {"oid": "44eb12e877b385fc57c5b2847194ac25b29a8af2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MTAxMDM3", "url": "https://github.com/CESNET/perun/pull/2923#pullrequestreview-507101037", "createdAt": "2020-10-13T06:22:55Z", "commit": {"oid": "44eb12e877b385fc57c5b2847194ac25b29a8af2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyMjo1NlrOHgXArw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjo1NjozOVrOHgX64g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5MzQ4Nw==", "bodyText": "Wrong summary.", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503693487", "createdAt": "2020-10-13T06:22:56Z", "author": {"login": "balcirakpeter"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -8017,6 +8092,22 @@ paths:\n         default:\n           $ref: '#/components/responses/ExceptionResponse'\n \n+  /urlinjsonout/membersManager/updateSponsorshipValidity:\n+    post:\n+      tags:\n+        - MembersManager\n+      operationId: updateSponsorshipValidity\n+      summary: Removes sponsor of existing member.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44eb12e877b385fc57c5b2847194ac25b29a8af2"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5Nzk5NQ==", "bodyText": "You want to use - SELF: User.", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503697995", "createdAt": "2020-10-13T06:34:00Z", "author": {"login": "balcirakpeter"}, "path": "perun-base/src/main/resources/perun-roles.yml", "diffHunk": "@@ -2354,6 +2354,13 @@ perun_policies:\n     include_policies:\n       - default_policy\n \n+  updateSponsorshipValidity_Member_User_LocalDate:\n+    policy_roles:\n+      - VOADMIN: Vo\n+      - SPONSOR: Member", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44eb12e877b385fc57c5b2847194ac25b29a8af2"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5ODk2OQ==", "bodyText": "I am missing a checks (In the whole PR), which ensure that the validity is not in the past.", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503698969", "createdAt": "2020-10-13T06:36:22Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2428,6 +2480,13 @@ public MemberGroupStatus getUnifiedMemberGroupStatus(PerunSession sess, User use\n \t\treturn getMembersManagerImpl().findMembers(sess, vo, searchString, onlySponsored);\n \t}\n \n+\t@Override\n+\tpublic void updateSponsorshipValidity(PerunSession sess, Member sponsoredMember, User sponsor,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44eb12e877b385fc57c5b2847194ac25b29a8af2"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwODM4Ng==", "bodyText": "Please add JavaDoc", "url": "https://github.com/CESNET/perun/pull/2923#discussion_r503708386", "createdAt": "2020-10-13T06:56:39Z", "author": {"login": "balcirakpeter"}, "path": "perun-base/src/main/java/cz/metacentrum/perun/core/api/Sponsor.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package cz.metacentrum.perun.core.api;\n+\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import cz.metacentrum.perun.rpc.stdserializers.LocalDateSerializer;\n+\n+import java.time.LocalDate;\n+import java.util.List;\n+\n+/**\n+ * @author Vojtech Sassmann <vojtech.sassmann@gmail.com>\n+ */\n+public class Sponsor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44eb12e877b385fc57c5b2847194ac25b29a8af2"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d687a1ea30922953a1ef9b6af13487503771530c", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/d687a1ea30922953a1ef9b6af13487503771530c", "committedDate": "2020-10-13T07:43:28Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44eb12e877b385fc57c5b2847194ac25b29a8af2", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/44eb12e877b385fc57c5b2847194ac25b29a8af2", "committedDate": "2020-10-12T14:53:57Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}, "afterCommit": {"oid": "d687a1ea30922953a1ef9b6af13487503771530c", "author": {"user": {"login": "Vojtech-Sassmann", "name": "Vojt\u011bch Sassmann"}}, "url": "https://github.com/CESNET/perun/commit/d687a1ea30922953a1ef9b6af13487503771530c", "committedDate": "2020-10-13T07:43:28Z", "message": "Sponsorship validity\n\n* For deployment:\n  * New DB version with changelog\n* From now, it is possible to specify the validity of the sponsorship.\nThe validity is in format yyyy-mm-dd and it is meant to define the\nlast day when the sponsorship is active. After this day, it will turn\ninactive. (NOT PART OF THIS COMMIT)\n* Updated existing methods that returned users as sponsors. Now these\nmethods returns new Sponsor object. It had to be done so it is possible\nto also return information about the sponsorship (activeness and\nvalidity). The Sponsor object has the same format as the RichUser, so it\nshould not cause any incompatibility with our RPC API.\n* Created method `updateSponsorshipValidity` which can be used to update\nvalidity of a sponsorship relation.\n* Updated policy of the `getSponsors` method so it can be called by\nappropriate users.\n* BUGFIXES:\n  * MembersManagerImpl/getSponsoredMembers - there was a missing\nDISTINCT keyword which caused duplicit members being returned if they\nhad multiple sponsors.\n  * MembersManagerMethod/getSponsoredMembersAndTheirSponsors - if no\nattrNames were specified, the method used a null which caused\nNullPointerException."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjYwODY2", "url": "https://github.com/CESNET/perun/pull/2923#pullrequestreview-507260866", "createdAt": "2020-10-13T09:49:32Z", "commit": {"oid": "d687a1ea30922953a1ef9b6af13487503771530c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1089, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}