{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNDI2ODQ3", "number": 2984, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODoyNjoxMVrOE4kO9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODoyNjoxMVrOE4kO9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NzQ5MzY2OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODoyNjoxMVrOHykddA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMTowNDo0NFrOHyqHBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjc4ODIxMg==", "bodyText": "This is about existing member, right? What about membership expiration? Above methods do nothing with it, so the member would be switched back to expired after midnight if his expiration date is in the past.\nAlso I'm not sure if we don't want to have also \"sync\" validation for the purpose of the tests, since it creates thread outside of the test scope (rollback), but tests passed, since they test only sponsorship validity, not members validity. @martin-kuba ?", "url": "https://github.com/CESNET/perun/pull/2984#discussion_r522788212", "createdAt": "2020-11-13T08:26:11Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2216,6 +2216,9 @@ public Member setSponsorshipForMember(PerunSession session, Member sponsoredMemb\n \t\tgetPerunBl().getAuditer().log(session, new SponsoredMemberSet(sponsoredMember));\n \t\tgetPerunBl().getAuditer().log(session, new SponsorshipEstablished(sponsoredMember, sponsor, validityTo));\n \n+\t\t//validate sponsored member in the VO (you can do it asynchronous) - if member was already valid, it will not change anything\n+\t\tvalidateMemberAsync(session, sponsoredMember);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0157e596c213cea81064533cc04af62a003aedb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjc5MDgxMA==", "bodyText": "Right I will check the expiration too.\nThere is no problem to do it synchronously instead, I just wanted to save the time of sponsor here.", "url": "https://github.com/CESNET/perun/pull/2984#discussion_r522790810", "createdAt": "2020-11-13T08:28:25Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2216,6 +2216,9 @@ public Member setSponsorshipForMember(PerunSession session, Member sponsoredMemb\n \t\tgetPerunBl().getAuditer().log(session, new SponsoredMemberSet(sponsoredMember));\n \t\tgetPerunBl().getAuditer().log(session, new SponsorshipEstablished(sponsoredMember, sponsor, validityTo));\n \n+\t\t//validate sponsored member in the VO (you can do it asynchronous) - if member was already valid, it will not change anything\n+\t\tvalidateMemberAsync(session, sponsoredMember);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjc4ODIxMg=="}, "originalCommit": {"oid": "f0157e596c213cea81064533cc04af62a003aedb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg4MDc3NQ==", "bodyText": "I changed that to copy logic from sponsorMember method.", "url": "https://github.com/CESNET/perun/pull/2984#discussion_r522880775", "createdAt": "2020-11-13T11:04:44Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2216,6 +2216,9 @@ public Member setSponsorshipForMember(PerunSession session, Member sponsoredMemb\n \t\tgetPerunBl().getAuditer().log(session, new SponsoredMemberSet(sponsoredMember));\n \t\tgetPerunBl().getAuditer().log(session, new SponsorshipEstablished(sponsoredMember, sponsor, validityTo));\n \n+\t\t//validate sponsored member in the VO (you can do it asynchronous) - if member was already valid, it will not change anything\n+\t\tvalidateMemberAsync(session, sponsoredMember);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjc4ODIxMg=="}, "originalCommit": {"oid": "f0157e596c213cea81064533cc04af62a003aedb"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2168, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}