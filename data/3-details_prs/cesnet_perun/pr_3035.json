{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4OTUyNjky", "number": 3035, "title": "add methods for getting applications within specified date period", "bodyText": "Adds additional dateFrom and dateTo parameters to getApplicationsFor{Vo,Group} methods:\n\nadd overloaded methods to RegistrarManager\nadd parameter detection and calls to RPC\nadd description to openapi", "createdAt": "2020-12-13T13:36:33Z", "url": "https://github.com/CESNET/perun/pull/3035", "merged": true, "mergeCommit": {"oid": "9123fb24635933b6a046bdca29e94775da4a3cbe"}, "closed": true, "closedAt": "2020-12-16T11:03:57Z", "author": {"login": "mvocu"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlxMYHAH2gAyNTM4OTUyNjkyOjNmNWJjZjNlZWUyZmE5MmU0NjlhZTc0MjhkMWI2MGEyMzliMjA3ZTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmr90iAFqTU1MzUyNjQyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2", "author": {"user": {"login": "mvocu", "name": "Michal Voc\u016f"}}, "url": "https://github.com/CESNET/perun/commit/3f5bcf3eee2fa92e469ae7428d1b60a239b207e2", "committedDate": "2020-12-13T13:31:18Z", "message": "add methods for getting applications within specified date period"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTU2NjQz", "url": "https://github.com/CESNET/perun/pull/3035#pullrequestreview-551156643", "createdAt": "2020-12-14T08:54:46Z", "commit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo1NDo0NlrOIFF8lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMToyMjoxMVrOIFL6VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIxMTIyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    - { name: \"dateFrom\", schema: { type: string, format: date }, in: query, description: \"return applications newer than this date\" }\n          \n          \n            \n                    - { name: \"dateFrom\", schema: { type: string, format: date }, in: query, required: false, description: \"return applications newer than this date\" }", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542211222", "createdAt": "2020-12-14T08:54:46Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -12892,6 +12892,8 @@ paths:\n       parameters:\n         - $ref: '#/components/parameters/voId'\n         - { name: \"state[]\", schema: { type: array, items: { type: string } }, in: query, description: \"list of states: NEW, VERIFIED, APPROVED, REJECTED\" }\n+        - { name: \"dateFrom\", schema: { type: string, format: date }, in: query, description: \"return applications newer than this date\" }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIxMTM0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    - { name: \"dateTo\", schema: { type: string, format: date }, in: query, description: \"return applications older than this date\" }\n          \n          \n            \n                    - { name: \"dateTo\", schema: { type: string, format: date }, in: query, required: false, description: \"return applications older than this date\" }", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542211346", "createdAt": "2020-12-14T08:54:58Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -12892,6 +12892,8 @@ paths:\n       parameters:\n         - $ref: '#/components/parameters/voId'\n         - { name: \"state[]\", schema: { type: array, items: { type: string } }, in: query, description: \"list of states: NEW, VERIFIED, APPROVED, REJECTED\" }\n+        - { name: \"dateFrom\", schema: { type: string, format: date }, in: query, description: \"return applications newer than this date\" }\n+        - { name: \"dateTo\", schema: { type: string, format: date }, in: query, description: \"return applications older than this date\" }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIxNDAxMg==", "bodyText": "Generally, we want to use one policy for one method. Please, create a new policy in the perun-base/src/main/resources/perun-roles.yml file.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForVo_Vo_List<String>_policy\", Collections.singletonList(vo))) {\n          \n          \n            \n            \t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForVo_Vo_List<String>_String_String_policy\", Collections.singletonList(vo))) {", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542214012", "createdAt": "2020-12-14T08:58:59Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1899,6 +1899,37 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForVo(PerunSession userSession, Vo vo, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tvosManager.checkVoExists(userSession, vo);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForVo_Vo_List<String>_policy\", Collections.singletonList(vo))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIxNzQ4Mw==", "bodyText": "Also, please update the getApplicationsForGroup parameters.", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542217483", "createdAt": "2020-12-14T09:04:36Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -12892,6 +12892,8 @@ paths:\n       parameters:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIxNzk4Nw==", "bodyText": "Same for this policy.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForGroup_Vo_List<String>_policy\", Collections.singletonList(group))) {\n          \n          \n            \n            \t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForGroup_Vo_List<String>_String_String_policy\", Collections.singletonList(group))) {", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542217987", "createdAt": "2020-12-14T09:05:25Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1928,6 +1959,37 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForGroup(PerunSession userSession, Group group, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tgroupsManager.checkGroupExists(userSession, group);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForGroup_Vo_List<String>_policy\", Collections.singletonList(group))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwMDE4Ng==", "bodyText": "This SQL seems to be invalid. If you would use the LocalDate, you can fix it like this\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\treturn jdbc.query(APP_SELECT + \" where a.vo_id=? and a.created_at::date >= date ? and a.create_at::date <= date ? order by a.id desc\", APP_MAPPER, vo.getId(), dateFrom, dateTo);\n          \n          \n            \n            \t\t\t\treturn jdbc.query(APP_SELECT + \" where a.vo_id=? and a.created_at::date >= ? and a.created_at::date <= ? order by a.id desc\", APP_MAPPER, vo.getId(), dateFrom, dateTo);", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542300186", "createdAt": "2020-12-14T11:07:49Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1899,6 +1899,37 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForVo(PerunSession userSession, Vo vo, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tvosManager.checkVoExists(userSession, vo);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForVo_Vo_List<String>_policy\", Collections.singletonList(vo))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForVo\");\n+\t\t}\n+\t\tif (state == null || state.isEmpty()) {\n+\t\t\t// list all\n+\t\t\ttry {\n+\t\t\t\treturn jdbc.query(APP_SELECT + \" where a.vo_id=? and a.created_at::date >= date ? and a.create_at::date <= date ? order by a.id desc\", APP_MAPPER, vo.getId(), dateFrom, dateTo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwMDY2Nw==", "bodyText": "This SQL seems to be invalid. If you would use the LocalDate, you can fix it like this\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\treturn namedJdbc.query(APP_SELECT + \" where a.vo_id=:voId and state in ( :states ) and a.created_at::date >= date :from and a.create_at::date <= date :to order by a.id desc\", sqlParameterSource, APP_MAPPER);\n          \n          \n            \n            \t\t\t\treturn namedJdbc.query(APP_SELECT + \" where a.vo_id=:voId and state in ( :states ) and a.created_at::date >= :from and a.created_at::date <= :to order by a.id desc\", sqlParameterSource, APP_MAPPER);", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542300667", "createdAt": "2020-12-14T11:08:41Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1899,6 +1899,37 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForVo(PerunSession userSession, Vo vo, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tvosManager.checkVoExists(userSession, vo);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForVo_Vo_List<String>_policy\", Collections.singletonList(vo))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForVo\");\n+\t\t}\n+\t\tif (state == null || state.isEmpty()) {\n+\t\t\t// list all\n+\t\t\ttry {\n+\t\t\t\treturn jdbc.query(APP_SELECT + \" where a.vo_id=? and a.created_at::date >= date ? and a.create_at::date <= date ? order by a.id desc\", APP_MAPPER, vo.getId(), dateFrom, dateTo);\n+\t\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\t\treturn new ArrayList<>();\n+\t\t\t}\n+\t\t} else {\n+\t\t\t// filter by state\n+\t\t\ttry {\n+\t\t\t\tMapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+\t\t\t\tsqlParameterSource.addValue(\"voId\", vo.getId());\n+\t\t\t\tsqlParameterSource.addValue(\"states\", state);\n+\t\t\t\tsqlParameterSource.addValue(\"from\", dateFrom);\n+\t\t\t\tsqlParameterSource.addValue(\"to\", dateTo);\n+\t\t\t\treturn namedJdbc.query(APP_SELECT + \" where a.vo_id=:voId and state in ( :states ) and a.created_at::date >= date :from and a.create_at::date <= date :to order by a.id desc\", sqlParameterSource, APP_MAPPER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwMTc1MA==", "bodyText": "This is not necessary, but there is also a method for parsing LocalDates. I would suggest using it instead of the String. Same for other similar usages.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\tparms.readString(\"dateFrom\"), \n          \n          \n            \n            \t\t\t\t\t\tparms.readLocalDate(\"dateFrom\"),", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542301750", "createdAt": "2020-12-14T11:10:22Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/RegistrarManagerMethod.java", "diffHunk": "@@ -479,14 +498,33 @@ public ApplicationFormItem call(ApiCaller ac, Deserializer parms) throws PerunEx\n \t * @param state List<String> List of states: NEW, VERIFIED, APPROVED, REJECTED\n \t * @return List<Application> Found applications\n \t */\n+\t/*#\n+\t * Gets all applications in a given state for a given Group in a given date period.\n+\t *\n+\t * @param group int Group <code>id</code>\n+\t * @param state List<String> List of states: NEW, VERIFIED, APPROVED, REJECTED\n+\t * @param dateFrom String Earliest date for applications\n+\t * @param dateTo String Latest date for applications\n+\t * @return List<Application> Found applications\n+\t */\n \tgetApplicationsForGroup {\n \n \t\t@Override\n \t\tpublic List<Application> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tif (parms.contains(\"state\")) {\n-\t\t\t\treturn ac.getRegistrarManager().getApplicationsForGroup(ac.getSession(), ac.getGroupById(parms.readInt(\"group\")), parms.readList(\"state\", String.class));\n+\t\t\tif (parms.contains(\"dateFrom\")) {\n+\t\t\t\treturn ac.getRegistrarManager().getApplicationsForGroup(\n+\t\t\t\t\t\tac.getSession(), \n+\t\t\t\t\t\tac.getGroupById(parms.readInt(\"group\")), \n+\t\t\t\t\t\tparms.contains(\"state\") ? parms.readList(\"state\", String.class) : null,\n+\t\t\t\t\t\tparms.readString(\"dateFrom\"), ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwMzg5NA==", "bodyText": "This way, you can specify only one bound.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (parms.contains(\"dateFrom\")) {\n          \n          \n            \n            \t\t\tif (parms.contains(\"dateFrom\") || parms.contains(\"dateTo\")) {", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542303894", "createdAt": "2020-12-14T11:14:03Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/RegistrarManagerMethod.java", "diffHunk": "@@ -479,14 +498,33 @@ public ApplicationFormItem call(ApiCaller ac, Deserializer parms) throws PerunEx\n \t * @param state List<String> List of states: NEW, VERIFIED, APPROVED, REJECTED\n \t * @return List<Application> Found applications\n \t */\n+\t/*#\n+\t * Gets all applications in a given state for a given Group in a given date period.\n+\t *\n+\t * @param group int Group <code>id</code>\n+\t * @param state List<String> List of states: NEW, VERIFIED, APPROVED, REJECTED\n+\t * @param dateFrom String Earliest date for applications\n+\t * @param dateTo String Latest date for applications\n+\t * @return List<Application> Found applications\n+\t */\n \tgetApplicationsForGroup {\n \n \t\t@Override\n \t\tpublic List<Application> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tif (parms.contains(\"state\")) {\n-\t\t\t\treturn ac.getRegistrarManager().getApplicationsForGroup(ac.getSession(), ac.getGroupById(parms.readInt(\"group\")), parms.readList(\"state\", String.class));\n+\t\t\tif (parms.contains(\"dateFrom\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwNzAxOQ==", "bodyText": "With this change, it will work even if only one bound is specified.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tif (dateTo == null) {\n          \n          \n            \n            \t\t\tdateTo = LocalDate.MAX;\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tif (dateFrom == null {\n          \n          \n            \n            \t\t\tdateFrom = LocalDate.MIN;\n          \n          \n            \n            \t\t}", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542307019", "createdAt": "2020-12-14T11:19:05Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1899,6 +1899,37 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForVo(PerunSession userSession, Vo vo, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tvosManager.checkVoExists(userSession, vo);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForVo_Vo_List<String>_policy\", Collections.singletonList(vo))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForVo\");\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwNzY0Nw==", "bodyText": "This SQL also seems to be incorrect. This will again work only if you use LocalDates.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\treturn jdbc.query(APP_SELECT + \" where a.group_id=? and a.created_at::date >= date ? and a.create_at::date <= date ? order by a.id desc\", APP_MAPPER, group.getId(), dateFrom, dateTo);\n          \n          \n            \n            \t\t\t\treturn jdbc.query(APP_SELECT + \" where a.group_id=? and a.created_at::date >= ? and a.created_at::date <= ? order by a.id desc\", APP_MAPPER, group.getId(), dateFrom, dateTo);", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542307647", "createdAt": "2020-12-14T11:20:05Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1928,6 +1959,37 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForGroup(PerunSession userSession, Group group, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tgroupsManager.checkGroupExists(userSession, group);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForGroup_Vo_List<String>_policy\", Collections.singletonList(group))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForGroup\");\n+\t\t}\n+\t\tif (state == null || state.isEmpty()) {\n+\t\t\t// list all\n+\t\t\ttry {\n+\t\t\t\treturn jdbc.query(APP_SELECT + \" where a.group_id=? and a.created_at::date >= date ? and a.create_at::date <= date ? order by a.id desc\", APP_MAPPER, group.getId(), dateFrom, dateTo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwODA1OQ==", "bodyText": "This SQL also seems to be incorrect. This will again work only if you use LocalDates.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\treturn namedJdbc.query(APP_SELECT + \" where a.group_id=:groupId and state in ( :states ) and a.created_at::date >= date :from and a.create_at::date <= date :to order by a.id desc\", sqlParameterSource, APP_MAPPER);\n          \n          \n            \n            \t\t\t\treturn namedJdbc.query(APP_SELECT + \" where a.group_id=:groupId and state in ( :states ) and a.created_at::date >= :from and a.created_at::date <= :to order by a.id desc\", sqlParameterSource, APP_MAPPER);", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542308059", "createdAt": "2020-12-14T11:20:49Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1928,6 +1959,37 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForGroup(PerunSession userSession, Group group, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tgroupsManager.checkGroupExists(userSession, group);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForGroup_Vo_List<String>_policy\", Collections.singletonList(group))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForGroup\");\n+\t\t}\n+\t\tif (state == null || state.isEmpty()) {\n+\t\t\t// list all\n+\t\t\ttry {\n+\t\t\t\treturn jdbc.query(APP_SELECT + \" where a.group_id=? and a.created_at::date >= date ? and a.create_at::date <= date ? order by a.id desc\", APP_MAPPER, group.getId(), dateFrom, dateTo);\n+\t\t\t} catch (EmptyResultDataAccessException ex) {\n+\t\t\t\treturn new ArrayList<>();\n+\t\t\t}\n+\t\t} else {\n+\t\t\t// filter by state\n+\t\t\ttry {\n+\t\t\t\tMapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+\t\t\t\tsqlParameterSource.addValue(\"groupId\", group.getId());\n+\t\t\t\tsqlParameterSource.addValue(\"states\", state);\n+\t\t\t\tsqlParameterSource.addValue(\"from\", dateFrom);\n+\t\t\t\tsqlParameterSource.addValue(\"to\", dateTo);\n+\t\t\t\treturn namedJdbc.query(APP_SELECT + \" where a.group_id=:groupId and state in ( :states ) and a.created_at::date >= date :from and a.create_at::date <= date :to order by a.id desc\", sqlParameterSource, APP_MAPPER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwODk0OA==", "bodyText": "I would suggest the same changes as for the getApplicationsForGroup method here.", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r542308948", "createdAt": "2020-12-14T11:22:11Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/RegistrarManagerMethod.java", "diffHunk": "@@ -452,14 +452,33 @@ public ApplicationFormItem call(ApiCaller ac, Deserializer parms) throws PerunEx\n \t * @param state List<String> List of states: NEW, VERIFIED, APPROVED, REJECTED\n \t * @return List<Application> Found applications\n \t */\n+\t/*#\n+\t * Gets all applications in a given state for a given VO in a given date period.\n+\t *\n+\t * @param vo int VO <code>id</code>\n+\t * @param state List<String> List of states: NEW, VERIFIED, APPROVED, REJECTED\n+\t * @param dateFrom String Earliest date for applications\n+\t * @param dateTo String Latest date for applications\n+\t * @return List<Application> Found applications\n+\t */\n \tgetApplicationsForVo {\n \n \t\t@Override\n \t\tpublic List<Application> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tif (parms.contains(\"state\")) {\n-\t\t\t\treturn ac.getRegistrarManager().getApplicationsForVo(ac.getSession(), ac.getVoById(parms.readInt(\"vo\")), parms.readList(\"state\", String.class));\n+\t\t\tif(parms.contains(\"dateFrom\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5bcf3eee2fa92e469ae7428d1b60a239b207e2"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58d166abc09e7093427302192cb54957da548da3", "author": {"user": {"login": "mvocu", "name": "Michal Voc\u016f"}}, "url": "https://github.com/CESNET/perun/commit/58d166abc09e7093427302192cb54957da548da3", "committedDate": "2020-12-14T16:33:25Z", "message": "fixes and changes from review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMTU1NDc2", "url": "https://github.com/CESNET/perun/pull/3035#pullrequestreview-552155476", "createdAt": "2020-12-15T07:03:45Z", "commit": {"oid": "58d166abc09e7093427302192cb54957da548da3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowMzo0NlrOIF748w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzoxNDoyNVrOIF8MwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NTAyNw==", "bodyText": "First parameter of the method is a Group not a VO. Therefore, the name should be:\ngetApplicationsForGroup_Group_List<String>_String_String_policy", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r543095027", "createdAt": "2020-12-15T07:03:46Z", "author": {"login": "balcirakpeter"}, "path": "perun-base/src/main/resources/perun-roles.yml", "diffHunk": "@@ -5985,6 +5993,16 @@ perun_policies:\n     include_policies:\n       - default_policy\n \n+  getApplicationsForGroup_Vo_List<String>_String_String_policy:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d166abc09e7093427302192cb54957da548da3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NzI4Mg==", "bodyText": "There is an extra and", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r543097282", "createdAt": "2020-12-15T07:08:27Z", "author": {"login": "balcirakpeter"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1899,6 +1899,40 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForVo(PerunSession userSession, Vo vo, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tvosManager.checkVoExists(userSession, vo);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForVo_Vo_List<String>_String_String_policy\", Collections.singletonList(vo))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForVo\");\n+\t\t}\n+\t\ttry {\n+\t\t\tMapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+\t\t\tStringBuilder query = new StringBuilder(APP_SELECT);\n+\t\t\tquery.append(\" where a.vo_id=:voId\");\n+\t\t\tsqlParameterSource.addValue(\"voId\", vo.getId());\n+\t\t\tif (state != null && !state.isEmpty()) {\n+\t\t\t\t// list all\n+\t\t\t\tsqlParameterSource.addValue(\"states\", state);\n+\t\t\t\tquery.append(\" and state in ( :states )\");\n+\t\t\t}\n+\t\t\tif(dateFrom != null && !dateFrom.isEmpty()) {\n+\t\t\t\tsqlParameterSource.addValue(\"from\", dateFrom);\n+\t\t\t\tquery.append(\" and and a.created_at::date >= date :from \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d166abc09e7093427302192cb54957da548da3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NzkyNg==", "bodyText": "I think the correct column should be created_at", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r543097926", "createdAt": "2020-12-15T07:09:48Z", "author": {"login": "balcirakpeter"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1899,6 +1899,40 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForVo(PerunSession userSession, Vo vo, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tvosManager.checkVoExists(userSession, vo);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForVo_Vo_List<String>_String_String_policy\", Collections.singletonList(vo))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForVo\");\n+\t\t}\n+\t\ttry {\n+\t\t\tMapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+\t\t\tStringBuilder query = new StringBuilder(APP_SELECT);\n+\t\t\tquery.append(\" where a.vo_id=:voId\");\n+\t\t\tsqlParameterSource.addValue(\"voId\", vo.getId());\n+\t\t\tif (state != null && !state.isEmpty()) {\n+\t\t\t\t// list all\n+\t\t\t\tsqlParameterSource.addValue(\"states\", state);\n+\t\t\t\tquery.append(\" and state in ( :states )\");\n+\t\t\t}\n+\t\t\tif(dateFrom != null && !dateFrom.isEmpty()) {\n+\t\t\t\tsqlParameterSource.addValue(\"from\", dateFrom);\n+\t\t\t\tquery.append(\" and and a.created_at::date >= date :from \");\n+\t\t\t}\n+\t\t\tif(dateTo != null && !dateTo.isEmpty()) {\n+\t\t\t\tsqlParameterSource.addValue(\"to\", dateTo);\n+\t\t\t\tquery.append(\" and a.create_at::date <= date :to \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d166abc09e7093427302192cb54957da548da3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5ODI1Mg==", "bodyText": "Same as in the previous method", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r543098252", "createdAt": "2020-12-15T07:10:31Z", "author": {"login": "balcirakpeter"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1928,6 +1962,40 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForGroup(PerunSession userSession, Group group, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tgroupsManager.checkGroupExists(userSession, group);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForGroup_Vo_List<String>_String_String_policy\", Collections.singletonList(group))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForGroup\");\n+\t\t}\n+\t\ttry {\n+\t\t\tMapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+\t\t\tStringBuilder query = new StringBuilder(APP_SELECT);\n+\t\t\tquery.append(\" where a.group_id=:groupId\");\n+\t\t\tsqlParameterSource.addValue(\"groupId\", group.getId());\n+\t\t\tif (state != null && !state.isEmpty()) {\n+\t\t\t\t// list all\n+\t\t\t\tsqlParameterSource.addValue(\"states\", state);\n+\t\t\t\tquery.append(\" and state in ( :states )\");\n+\t\t\t}\n+\t\t\tif(dateFrom != null && !dateFrom.isEmpty()) {\n+\t\t\t\tsqlParameterSource.addValue(\"from\", dateFrom);\n+\t\t\t\tquery.append(\" and and a.created_at::date >= date :from \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d166abc09e7093427302192cb54957da548da3"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5ODUyMQ==", "bodyText": "Same as in the previous method", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r543098521", "createdAt": "2020-12-15T07:11:06Z", "author": {"login": "balcirakpeter"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1928,6 +1962,40 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForGroup(PerunSession userSession, Group group, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tgroupsManager.checkGroupExists(userSession, group);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForGroup_Vo_List<String>_String_String_policy\", Collections.singletonList(group))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForGroup\");\n+\t\t}\n+\t\ttry {\n+\t\t\tMapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+\t\t\tStringBuilder query = new StringBuilder(APP_SELECT);\n+\t\t\tquery.append(\" where a.group_id=:groupId\");\n+\t\t\tsqlParameterSource.addValue(\"groupId\", group.getId());\n+\t\t\tif (state != null && !state.isEmpty()) {\n+\t\t\t\t// list all\n+\t\t\t\tsqlParameterSource.addValue(\"states\", state);\n+\t\t\t\tquery.append(\" and state in ( :states )\");\n+\t\t\t}\n+\t\t\tif(dateFrom != null && !dateFrom.isEmpty()) {\n+\t\t\t\tsqlParameterSource.addValue(\"from\", dateFrom);\n+\t\t\t\tquery.append(\" and and a.created_at::date >= date :from \");\n+\t\t\t}\n+\t\t\tif(dateTo != null && !dateTo.isEmpty()) {\n+\t\t\t\tsqlParameterSource.addValue(\"to\", dateTo);\n+\t\t\t\tquery.append(\" and a.create_at::date <= date :to \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d166abc09e7093427302192cb54957da548da3"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwMDA5Ng==", "bodyText": "I think that when you specify only the VO, it will also return all group applications within that VO. I know that this is how also the old method works but I am not sure if it is correct. What do you think @zlamalp ?", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r543100096", "createdAt": "2020-12-15T07:14:25Z", "author": {"login": "balcirakpeter"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/impl/RegistrarManagerImpl.java", "diffHunk": "@@ -1899,6 +1899,40 @@ public Application getApplicationById(PerunSession sess, int appId) throws Regis\n \n \t}\n \n+\t@Override\n+\tpublic List<Application> getApplicationsForVo(PerunSession userSession, Vo vo, List<String> state, String dateFrom, String dateTo) throws PerunException {\n+\t\tvosManager.checkVoExists(userSession, vo);\n+\n+\t\t//Authorization\n+\t\tif (!AuthzResolver.authorizedInternal(userSession, \"getApplicationsForVo_Vo_List<String>_String_String_policy\", Collections.singletonList(vo))) {\n+\t\t\tthrow new PrivilegeException(userSession, \"getApplicationsForVo\");\n+\t\t}\n+\t\ttry {\n+\t\t\tMapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+\t\t\tStringBuilder query = new StringBuilder(APP_SELECT);\n+\t\t\tquery.append(\" where a.vo_id=:voId\");\n+\t\t\tsqlParameterSource.addValue(\"voId\", vo.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d166abc09e7093427302192cb54957da548da3"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c882107ee2cc92852c9841a32f4ba99597af9fea", "author": {"user": {"login": "mvocu", "name": "Michal Voc\u016f"}}, "url": "https://github.com/CESNET/perun/commit/c882107ee2cc92852c9841a32f4ba99597af9fea", "committedDate": "2020-12-15T13:14:06Z", "message": "changed type of additional parameters to LocalDate, modified SQL, updated parameter parsing from request, updated policy names to reflect parameter types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65f5888f357b2a7571ed453b674acd0e81d63a3e", "author": {"user": {"login": "mvocu", "name": "Michal Voc\u016f"}}, "url": "https://github.com/CESNET/perun/commit/65f5888f357b2a7571ed453b674acd0e81d63a3e", "committedDate": "2020-12-15T13:45:50Z", "message": "add boolean parameter indicating whether to include group applications"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzUzOTA5", "url": "https://github.com/CESNET/perun/pull/3035#pullrequestreview-552753909", "createdAt": "2020-12-15T18:36:23Z", "commit": {"oid": "65f5888f357b2a7571ed453b674acd0e81d63a3e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODozNjoyM1rOIGaENQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODo0OToyNVrOIGaoZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4OTQyOQ==", "bodyText": "Please add includeGroupApplications param to the javadoc. Same for the method above.", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r543589429", "createdAt": "2020-12-15T18:36:23Z", "author": {"login": "zlamalp"}, "path": "perun-registrar-lib/src/main/java/cz/metacentrum/perun/registrar/RegistrarManager.java", "diffHunk": "@@ -274,7 +275,23 @@\n \t * @return list of applications\n \t * @throws PerunException\n \t */\n-\tList<Application> getApplicationsForVo(PerunSession sess, Vo vo, List<String> state) throws PerunException;\n+\tList<Application> getApplicationsForVo(PerunSession sess, Vo vo, List<String> state, Boolean includeGroupApplications) throws PerunException;\n+\n+\n+\t/**\n+\t * Gets all applications in a given state for a given VO.\n+\t * If state is null, returns all applications for a given VO.\n+\t *\n+\t * @param sess who is asking\n+\t * @param vo VO to get applications for\n+\t * @param state application state to filter by\n+\t * @param dateFrom return only applications with this date or newer\n+\t * @param dateTo return only applications with this date or older\n+\t * @return list of applications", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65f5888f357b2a7571ed453b674acd0e81d63a3e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5NTg3NQ==", "bodyText": "Maybe suggest format for date string like YYYY-MM-DD. Same for the VO version of the method.", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r543595875", "createdAt": "2020-12-15T18:45:16Z", "author": {"login": "zlamalp"}, "path": "perun-rpc/src/main/java/cz/metacentrum/perun/rpc/methods/RegistrarManagerMethod.java", "diffHunk": "@@ -479,14 +500,33 @@ public ApplicationFormItem call(ApiCaller ac, Deserializer parms) throws PerunEx\n \t * @param state List<String> List of states: NEW, VERIFIED, APPROVED, REJECTED\n \t * @return List<Application> Found applications\n \t */\n+\t/*#\n+\t * Gets all applications in a given state for a given Group in a given date period.\n+\t *\n+\t * @param group int Group <code>id</code>\n+\t * @param state List<String> List of states: NEW, VERIFIED, APPROVED, REJECTED\n+\t * @param dateFrom String Earliest date for applications", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65f5888f357b2a7571ed453b674acd0e81d63a3e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5ODY5NA==", "bodyText": "Param description says >, but in impl we do >=, so the description should tell, that submitted date is also included in resulting list of applications. Same for dateTo and for both methods.", "url": "https://github.com/CESNET/perun/pull/3035#discussion_r543598694", "createdAt": "2020-12-15T18:49:25Z", "author": {"login": "zlamalp"}, "path": "perun-openapi/openapi.yml", "diffHunk": "@@ -12892,6 +12892,8 @@ paths:\n       parameters:\n         - $ref: '#/components/parameters/voId'\n         - { name: \"state[]\", schema: { type: array, items: { type: string } }, in: query, description: \"list of states: NEW, VERIFIED, APPROVED, REJECTED\" }\n+        - { name: \"dateFrom\", schema: { type: string, format: date }, in: query, required: false, description: \"return applications newer than this date\" }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65f5888f357b2a7571ed453b674acd0e81d63a3e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDM4MDIz", "url": "https://github.com/CESNET/perun/pull/3035#pullrequestreview-553438023", "createdAt": "2020-12-16T08:05:54Z", "commit": {"oid": "65f5888f357b2a7571ed453b674acd0e81d63a3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "923b5c46de6bedc3fe7124dd3dec3283535a4ed1", "author": {"user": {"login": "mvocu", "name": "Michal Voc\u016f"}}, "url": "https://github.com/CESNET/perun/commit/923b5c46de6bedc3fe7124dd3dec3283535a4ed1", "committedDate": "2020-12-16T08:38:28Z", "message": "fix documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDg2NTE0", "url": "https://github.com/CESNET/perun/pull/3035#pullrequestreview-553486514", "createdAt": "2020-12-16T09:12:16Z", "commit": {"oid": "923b5c46de6bedc3fe7124dd3dec3283535a4ed1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTI2NDI3", "url": "https://github.com/CESNET/perun/pull/3035#pullrequestreview-553526427", "createdAt": "2020-12-16T09:59:48Z", "commit": {"oid": "923b5c46de6bedc3fe7124dd3dec3283535a4ed1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 998, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}