{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNjE2NzE2", "number": 2955, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowMTo1M1rOEy4oig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowMTo1M1rOEy4oig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzkyMTM4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowMTo1M1rOHpxlWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjo1MDoxN1rOHpz4ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2NjA0MQ==", "bodyText": "Please use method authorizedToManageRole. This one should be deprecated. Or even better and simpler would be to call the method setRole from AuthzResolver right away. It will throw PrivilegeException if the given principal cannot manage the role in the Vo.", "url": "https://github.com/CESNET/perun/pull/2955#discussion_r513566041", "createdAt": "2020-10-28T16:01:53Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2280,8 +2283,17 @@ public Member setSponsoredMember(PerunSession session, Vo vo, User userToBeSpons\n \t                                 String password, User sponsor, LocalDate validityTo, boolean asyncValidation) throws AlreadyMemberException, ExtendMembershipException, UserNotInRoleException, WrongAttributeValueException, WrongReferenceAttributeValueException, LoginNotExistsException, PasswordCreationFailedException, InvalidLoginException, ExtSourceNotExistsException {\n \t\t//check that sponsoring user has role SPONSOR for the VO\n \t\tif (!getPerunBl().getVosManagerBl().isUserInRoleForVo(session, sponsor, Role.SPONSOR, vo, true)) {\n-\t\t\tthrow new UserNotInRoleException(\"user \" + sponsor.getId() + \" is not in role SPONSOR for VO \" + vo.getId());\n+\t\t\tif (!AuthzResolver.isAuthorizedToManageRole(session, vo, Role.SPONSOR)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d4328ce5707c4b5247af18a44b3b44906f9bf9c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYwMzY5MA==", "bodyText": "I have changed it to the authorizedToManageRole method. I don't want to use the AuthzResolver.setRole, since it throws a large amount of unreasonable exception. Also, I don't what to call a higher level component from the bl layer.", "url": "https://github.com/CESNET/perun/pull/2955#discussion_r513603690", "createdAt": "2020-10-28T16:50:17Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/MembersManagerBlImpl.java", "diffHunk": "@@ -2280,8 +2283,17 @@ public Member setSponsoredMember(PerunSession session, Vo vo, User userToBeSpons\n \t                                 String password, User sponsor, LocalDate validityTo, boolean asyncValidation) throws AlreadyMemberException, ExtendMembershipException, UserNotInRoleException, WrongAttributeValueException, WrongReferenceAttributeValueException, LoginNotExistsException, PasswordCreationFailedException, InvalidLoginException, ExtSourceNotExistsException {\n \t\t//check that sponsoring user has role SPONSOR for the VO\n \t\tif (!getPerunBl().getVosManagerBl().isUserInRoleForVo(session, sponsor, Role.SPONSOR, vo, true)) {\n-\t\t\tthrow new UserNotInRoleException(\"user \" + sponsor.getId() + \" is not in role SPONSOR for VO \" + vo.getId());\n+\t\t\tif (!AuthzResolver.isAuthorizedToManageRole(session, vo, Role.SPONSOR)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2NjA0MQ=="}, "originalCommit": {"oid": "9d4328ce5707c4b5247af18a44b3b44906f9bf9c"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2363, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}