{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNDEyNzM4", "number": 2837, "title": "Implemented working with Form Items", "bodyText": "new Bean - FormItem\nadded methods to RegistrarAgent for getting and updating FormItems for group", "createdAt": "2020-08-05T14:15:09Z", "url": "https://github.com/CESNET/perun/pull/2837", "merged": true, "mergeCommit": {"oid": "731db6d369a6e08211e44011faa74ea83392ed99"}, "closed": true, "closedAt": "2020-08-07T09:17:52Z", "author": {"login": "dBucik"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc772pTAH2gAyNDYzNDEyNzM4OjFkYmQwNTYwMDM0NDc5MDI5NjhkMDIxMTNmNjNmZmI0MmFjYTdhNGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8gKg1gFqTQ2MzEzMDY3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1dbd056003447902968d02113f63ffb42aca7a4c", "author": {"user": {"login": "dBucik", "name": "Dominik Franti\u0161ek Bu\u010d\u00edk"}}, "url": "https://github.com/CESNET/perun/commit/1dbd056003447902968d02113f63ffb42aca7a4c", "committedDate": "2020-08-05T14:11:42Z", "message": "Implemented working with Form Items"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMjAxMjA1", "url": "https://github.com/CESNET/perun/pull/2837#pullrequestreview-462201205", "createdAt": "2020-08-06T05:40:23Z", "commit": {"oid": "1dbd056003447902968d02113f63ffb42aca7a4c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNTo0MDoyNFrOG8kCWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNTo0ODozOFrOG8kMCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1ODE3MA==", "bodyText": "Judging by the Java implementation of getBeanName() it should return ApplicationFormItem.", "url": "https://github.com/CESNET/perun/pull/2837#discussion_r466158170", "createdAt": "2020-08-06T05:40:24Z", "author": {"login": "zlamalp"}, "path": "perun-cli/Perun/beans/FormItem.pm", "diffHunk": "@@ -0,0 +1,294 @@\n+package Perun::beans::FormItem;\n+\n+use strict;\n+use warnings;\n+\n+use Perun::Common;\n+\n+sub new\n+{\n+    bless({});\n+}\n+\n+sub fromHash\n+{\n+    return Perun::Common::fromHash(@_);\n+}\n+\n+sub TO_JSON\n+{\n+    my $self = shift;\n+\n+    my $id;\n+    if (defined($self->{_id})) {\n+        $id = $self->{_id} * 1;\n+    } else {\n+        $id = 0;\n+    }\n+\n+    my $shortname;\n+    if (defined($self->{_shortname})) {\n+        $shortname = $self->{_shortname};\n+    } else {\n+        $shortname = undef;\n+    }\n+\n+    my $required;\n+    if (defined($self->{_required})) {\n+        $required = $self->{_required};\n+    } else {\n+        $required = undef;\n+    }\n+\n+    my $type;\n+    if (defined($self->{_type})) {\n+        $type = $self->{_type};\n+    } else {\n+        $type = undef;\n+    }\n+\n+    my $federationAttribute;\n+    if (defined($self->{_federationAttribute})) {\n+        $federationAttribute = $self->{_federationAttribute};\n+    } else {\n+        $federationAttribute = undef;\n+    }\n+\n+    my $perunSourceAttribute;\n+    if (defined($self->{_perunSourceAttribute})) {\n+        $perunSourceAttribute = $self->{_perunSourceAttribute};\n+    } else {\n+        $perunSourceAttribute = undef;\n+    }\n+\n+    my $perunDestinationAttribute;\n+    if (defined($self->{_perunDestinationAttribute})) {\n+        $perunDestinationAttribute = $self->{_perunDestinationAttribute};\n+    } else {\n+        $perunDestinationAttribute = undef;\n+    }\n+\n+    my $regex;\n+    if (defined($self->{_regex})) {\n+        $regex = $self->{_regex};\n+    } else {\n+        $regex = undef;\n+    }\n+\n+    my $applicationTypes;\n+    if (defined($self->{_applicationTypes})) {\n+        $applicationTypes = $self->{_applicationTypes};\n+    } else {\n+        $applicationTypes = undef;\n+    }\n+\n+    my $ordnum;\n+    if (defined($self->{_ordnum})) {\n+        $ordnum = $self->{_ordnum} * 1;\n+    } else {\n+        $ordnum = 0;\n+    }\n+\n+    my $forDelete;\n+    if (defined($self->{_forDelete})) {\n+        $forDelete = $self->{_forDelete};\n+    } else {\n+        $forDelete = undef;\n+    }\n+\n+    my $i18n;\n+    if (defined($self->{_i18n})) {\n+        $i18n = $self->{_i18n};\n+    } else {\n+        $i18n = undef;\n+    }\n+\n+    return { id                   => $id,\n+        shortname                 => $shortname,\n+        required                  => $required,\n+        type                      => $type,\n+        federationAttribute       => $federationAttribute,\n+        perunSourceAttribute      => $perunSourceAttribute,\n+        perunDestinationAttribute => $perunDestinationAttribute,\n+        regex                     => $regex,\n+        applicationTypes          => $applicationTypes,\n+        ordnum                    => $ordnum,\n+        forDelete                 => $forDelete,\n+        i18n                      => $i18n,\n+        beanName                  => 'FormItem'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dbd056003447902968d02113f63ffb42aca7a4c"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1ODk1MQ==", "bodyText": "I think this is an array with string values of INITIAL and/or EXTENSION and should be returned like\nreturn @{$self->{_applicationTypes}};\nMaybe also fix sub TO_JSON, see AttributeRights.pm", "url": "https://github.com/CESNET/perun/pull/2837#discussion_r466158951", "createdAt": "2020-08-06T05:43:10Z", "author": {"login": "zlamalp"}, "path": "perun-cli/Perun/beans/FormItem.pm", "diffHunk": "@@ -0,0 +1,294 @@\n+package Perun::beans::FormItem;\n+\n+use strict;\n+use warnings;\n+\n+use Perun::Common;\n+\n+sub new\n+{\n+    bless({});\n+}\n+\n+sub fromHash\n+{\n+    return Perun::Common::fromHash(@_);\n+}\n+\n+sub TO_JSON\n+{\n+    my $self = shift;\n+\n+    my $id;\n+    if (defined($self->{_id})) {\n+        $id = $self->{_id} * 1;\n+    } else {\n+        $id = 0;\n+    }\n+\n+    my $shortname;\n+    if (defined($self->{_shortname})) {\n+        $shortname = $self->{_shortname};\n+    } else {\n+        $shortname = undef;\n+    }\n+\n+    my $required;\n+    if (defined($self->{_required})) {\n+        $required = $self->{_required};\n+    } else {\n+        $required = undef;\n+    }\n+\n+    my $type;\n+    if (defined($self->{_type})) {\n+        $type = $self->{_type};\n+    } else {\n+        $type = undef;\n+    }\n+\n+    my $federationAttribute;\n+    if (defined($self->{_federationAttribute})) {\n+        $federationAttribute = $self->{_federationAttribute};\n+    } else {\n+        $federationAttribute = undef;\n+    }\n+\n+    my $perunSourceAttribute;\n+    if (defined($self->{_perunSourceAttribute})) {\n+        $perunSourceAttribute = $self->{_perunSourceAttribute};\n+    } else {\n+        $perunSourceAttribute = undef;\n+    }\n+\n+    my $perunDestinationAttribute;\n+    if (defined($self->{_perunDestinationAttribute})) {\n+        $perunDestinationAttribute = $self->{_perunDestinationAttribute};\n+    } else {\n+        $perunDestinationAttribute = undef;\n+    }\n+\n+    my $regex;\n+    if (defined($self->{_regex})) {\n+        $regex = $self->{_regex};\n+    } else {\n+        $regex = undef;\n+    }\n+\n+    my $applicationTypes;\n+    if (defined($self->{_applicationTypes})) {\n+        $applicationTypes = $self->{_applicationTypes};\n+    } else {\n+        $applicationTypes = undef;\n+    }\n+\n+    my $ordnum;\n+    if (defined($self->{_ordnum})) {\n+        $ordnum = $self->{_ordnum} * 1;\n+    } else {\n+        $ordnum = 0;\n+    }\n+\n+    my $forDelete;\n+    if (defined($self->{_forDelete})) {\n+        $forDelete = $self->{_forDelete};\n+    } else {\n+        $forDelete = undef;\n+    }\n+\n+    my $i18n;\n+    if (defined($self->{_i18n})) {\n+        $i18n = $self->{_i18n};\n+    } else {\n+        $i18n = undef;\n+    }\n+\n+    return { id                   => $id,\n+        shortname                 => $shortname,\n+        required                  => $required,\n+        type                      => $type,\n+        federationAttribute       => $federationAttribute,\n+        perunSourceAttribute      => $perunSourceAttribute,\n+        perunDestinationAttribute => $perunDestinationAttribute,\n+        regex                     => $regex,\n+        applicationTypes          => $applicationTypes,\n+        ordnum                    => $ordnum,\n+        forDelete                 => $forDelete,\n+        i18n                      => $i18n,\n+        beanName                  => 'FormItem'\n+    };\n+}\n+\n+sub getId\n+{\n+    my $self = shift;\n+\n+    return $self->{_id};\n+}\n+\n+sub getShortname\n+{\n+    my $self = shift;\n+\n+    return $self->{_shortname};\n+}\n+\n+sub setShortname\n+{\n+    my $self = shift;\n+    $self->{_shortname} = shift;\n+\n+    return;\n+}\n+\n+sub getRequired\n+{\n+    my $self = shift;\n+\n+    return $self->{_required};\n+}\n+\n+sub setRequired\n+{\n+    my $self = shift;\n+    $self->{_required} = shift;\n+\n+    return;\n+}\n+\n+sub getType\n+{\n+    my $self = shift;\n+\n+    return $self->{_type};\n+}\n+\n+sub setType\n+{\n+    my $self = shift;\n+    $self->{_type} = shift;\n+\n+    return;\n+}\n+\n+sub getFederationAttribute\n+{\n+    my $self = shift;\n+\n+    return $self->{_federationAttribute};\n+}\n+\n+sub setFederationAttribute\n+{\n+    my $self = shift;\n+    $self->{_federationAttribute} = shift;\n+\n+    return;\n+}\n+\n+sub getPerunSourceAttribute\n+{\n+    my $self = shift;\n+\n+    return $self->{_perunSourceAttribute};\n+}\n+\n+sub setPerunSourceAttribute\n+{\n+    my $self = shift;\n+    $self->{_perunSourceAttribute} = shift;\n+\n+    return;\n+}\n+\n+sub getPerunDestinationAttribute\n+{\n+    my $self = shift;\n+\n+    return $self->{_perunDestinationAttribute};\n+}\n+\n+sub setPerunDestinationAttribute\n+{\n+    my $self = shift;\n+    $self->{_perunDestinationAttribute} = shift;\n+\n+    return;\n+}\n+\n+sub getRegex\n+{\n+    my $self = shift;\n+\n+    return $self->{_regex};\n+}\n+\n+sub setRegex\n+{\n+    my $self = shift;\n+    $self->{_regex} = shift;\n+\n+    return;\n+}\n+\n+sub getApplicationTypes\n+{\n+    my $self = shift;\n+\n+    return $self->{_applicationTypes};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dbd056003447902968d02113f63ffb42aca7a4c"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2MDY0OA==", "bodyText": "forDelete is boolean property. See, how we handle getter/setter in User.pm for serviceUser property.", "url": "https://github.com/CESNET/perun/pull/2837#discussion_r466160648", "createdAt": "2020-08-06T05:48:38Z", "author": {"login": "zlamalp"}, "path": "perun-cli/Perun/beans/FormItem.pm", "diffHunk": "@@ -0,0 +1,294 @@\n+package Perun::beans::FormItem;\n+\n+use strict;\n+use warnings;\n+\n+use Perun::Common;\n+\n+sub new\n+{\n+    bless({});\n+}\n+\n+sub fromHash\n+{\n+    return Perun::Common::fromHash(@_);\n+}\n+\n+sub TO_JSON\n+{\n+    my $self = shift;\n+\n+    my $id;\n+    if (defined($self->{_id})) {\n+        $id = $self->{_id} * 1;\n+    } else {\n+        $id = 0;\n+    }\n+\n+    my $shortname;\n+    if (defined($self->{_shortname})) {\n+        $shortname = $self->{_shortname};\n+    } else {\n+        $shortname = undef;\n+    }\n+\n+    my $required;\n+    if (defined($self->{_required})) {\n+        $required = $self->{_required};\n+    } else {\n+        $required = undef;\n+    }\n+\n+    my $type;\n+    if (defined($self->{_type})) {\n+        $type = $self->{_type};\n+    } else {\n+        $type = undef;\n+    }\n+\n+    my $federationAttribute;\n+    if (defined($self->{_federationAttribute})) {\n+        $federationAttribute = $self->{_federationAttribute};\n+    } else {\n+        $federationAttribute = undef;\n+    }\n+\n+    my $perunSourceAttribute;\n+    if (defined($self->{_perunSourceAttribute})) {\n+        $perunSourceAttribute = $self->{_perunSourceAttribute};\n+    } else {\n+        $perunSourceAttribute = undef;\n+    }\n+\n+    my $perunDestinationAttribute;\n+    if (defined($self->{_perunDestinationAttribute})) {\n+        $perunDestinationAttribute = $self->{_perunDestinationAttribute};\n+    } else {\n+        $perunDestinationAttribute = undef;\n+    }\n+\n+    my $regex;\n+    if (defined($self->{_regex})) {\n+        $regex = $self->{_regex};\n+    } else {\n+        $regex = undef;\n+    }\n+\n+    my $applicationTypes;\n+    if (defined($self->{_applicationTypes})) {\n+        $applicationTypes = $self->{_applicationTypes};\n+    } else {\n+        $applicationTypes = undef;\n+    }\n+\n+    my $ordnum;\n+    if (defined($self->{_ordnum})) {\n+        $ordnum = $self->{_ordnum} * 1;\n+    } else {\n+        $ordnum = 0;\n+    }\n+\n+    my $forDelete;\n+    if (defined($self->{_forDelete})) {\n+        $forDelete = $self->{_forDelete};\n+    } else {\n+        $forDelete = undef;\n+    }\n+\n+    my $i18n;\n+    if (defined($self->{_i18n})) {\n+        $i18n = $self->{_i18n};\n+    } else {\n+        $i18n = undef;\n+    }\n+\n+    return { id                   => $id,\n+        shortname                 => $shortname,\n+        required                  => $required,\n+        type                      => $type,\n+        federationAttribute       => $federationAttribute,\n+        perunSourceAttribute      => $perunSourceAttribute,\n+        perunDestinationAttribute => $perunDestinationAttribute,\n+        regex                     => $regex,\n+        applicationTypes          => $applicationTypes,\n+        ordnum                    => $ordnum,\n+        forDelete                 => $forDelete,\n+        i18n                      => $i18n,\n+        beanName                  => 'FormItem'\n+    };\n+}\n+\n+sub getId\n+{\n+    my $self = shift;\n+\n+    return $self->{_id};\n+}\n+\n+sub getShortname\n+{\n+    my $self = shift;\n+\n+    return $self->{_shortname};\n+}\n+\n+sub setShortname\n+{\n+    my $self = shift;\n+    $self->{_shortname} = shift;\n+\n+    return;\n+}\n+\n+sub getRequired\n+{\n+    my $self = shift;\n+\n+    return $self->{_required};\n+}\n+\n+sub setRequired\n+{\n+    my $self = shift;\n+    $self->{_required} = shift;\n+\n+    return;\n+}\n+\n+sub getType\n+{\n+    my $self = shift;\n+\n+    return $self->{_type};\n+}\n+\n+sub setType\n+{\n+    my $self = shift;\n+    $self->{_type} = shift;\n+\n+    return;\n+}\n+\n+sub getFederationAttribute\n+{\n+    my $self = shift;\n+\n+    return $self->{_federationAttribute};\n+}\n+\n+sub setFederationAttribute\n+{\n+    my $self = shift;\n+    $self->{_federationAttribute} = shift;\n+\n+    return;\n+}\n+\n+sub getPerunSourceAttribute\n+{\n+    my $self = shift;\n+\n+    return $self->{_perunSourceAttribute};\n+}\n+\n+sub setPerunSourceAttribute\n+{\n+    my $self = shift;\n+    $self->{_perunSourceAttribute} = shift;\n+\n+    return;\n+}\n+\n+sub getPerunDestinationAttribute\n+{\n+    my $self = shift;\n+\n+    return $self->{_perunDestinationAttribute};\n+}\n+\n+sub setPerunDestinationAttribute\n+{\n+    my $self = shift;\n+    $self->{_perunDestinationAttribute} = shift;\n+\n+    return;\n+}\n+\n+sub getRegex\n+{\n+    my $self = shift;\n+\n+    return $self->{_regex};\n+}\n+\n+sub setRegex\n+{\n+    my $self = shift;\n+    $self->{_regex} = shift;\n+\n+    return;\n+}\n+\n+sub getApplicationTypes\n+{\n+    my $self = shift;\n+\n+    return $self->{_applicationTypes};\n+}\n+\n+sub setApplicationTypes\n+{\n+    my $self = shift;\n+    $self->{_applicationTypes} = shift;\n+\n+    return;\n+}\n+\n+sub getOrdnum\n+{\n+    my $self = shift;\n+\n+    return $self->{_ordnum};\n+}\n+\n+sub setOrdnum\n+{\n+    my $self = shift;\n+    $self->{_ordnum} = shift;\n+\n+    return;\n+}\n+\n+sub getForDelete\n+{\n+    my $self = shift;\n+\n+    return $self->{_forDelete};\n+}\n+\n+sub setForDelete\n+{\n+    my $self = shift;\n+    $self->{_forDelete} = shift;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dbd056003447902968d02113f63ffb42aca7a4c"}, "originalPosition": 274}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMjM3MDA5", "url": "https://github.com/CESNET/perun/pull/2837#pullrequestreview-462237009", "createdAt": "2020-08-06T07:01:37Z", "commit": {"oid": "3c49ac37d7722583fdb653acb4fd58920752e6a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzowMTozN1rOG8l0ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzowMTozN1rOG8l0ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4NzM2NA==", "bodyText": "Depending on your usage you might want to retrieve original value (boolean or 0/1) which you set using setForDelete. This kind of handling is useful for printing the value in tables in a consistent way. You can have sub isForDeleteToPrint for returning true/false as strings.", "url": "https://github.com/CESNET/perun/pull/2837#discussion_r466187364", "createdAt": "2020-08-06T07:01:37Z", "author": {"login": "zlamalp"}, "path": "perun-cli/Perun/beans/ApplicationFormItem.pm", "diffHunk": "@@ -0,0 +1,313 @@\n+package Perun::beans::ApplicationFormItem;\n+\n+use strict;\n+use warnings;\n+\n+use Perun::Common;\n+\n+sub new\n+{\n+    bless({});\n+}\n+\n+sub fromHash\n+{\n+    return Perun::Common::fromHash(@_);\n+}\n+\n+sub TO_JSON\n+{\n+    my $self = shift;\n+\n+    my $id;\n+    if (defined($self->{_id})) {\n+        $id = $self->{_id} * 1;\n+    } else {\n+        $id = 0;\n+    }\n+\n+    my $shortname;\n+    if (defined($self->{_shortname})) {\n+        $shortname = $self->{_shortname};\n+    } else {\n+        $shortname = undef;\n+    }\n+\n+    my $required;\n+    if (defined($self->{_required})) {\n+        $required = $self->{_required};\n+    } else {\n+        $required = undef;\n+    }\n+\n+    my $type;\n+    if (defined($self->{_type})) {\n+        $type = $self->{_type};\n+    } else {\n+        $type = undef;\n+    }\n+\n+    my $federationAttribute;\n+    if (defined($self->{_federationAttribute})) {\n+        $federationAttribute = $self->{_federationAttribute};\n+    } else {\n+        $federationAttribute = undef;\n+    }\n+\n+    my $perunSourceAttribute;\n+    if (defined($self->{_perunSourceAttribute})) {\n+        $perunSourceAttribute = $self->{_perunSourceAttribute};\n+    } else {\n+        $perunSourceAttribute = undef;\n+    }\n+\n+    my $perunDestinationAttribute;\n+    if (defined($self->{_perunDestinationAttribute})) {\n+        $perunDestinationAttribute = $self->{_perunDestinationAttribute};\n+    } else {\n+        $perunDestinationAttribute = undef;\n+    }\n+\n+    my $regex;\n+    if (defined($self->{_regex})) {\n+        $regex = $self->{_regex};\n+    } else {\n+        $regex = undef;\n+    }\n+\n+    my @applicationTypes;\n+    if (defined($self->{_applicationTypes})) {\n+        @applicationTypes = @{$self->{_applicationTypes}};\n+    } else {\n+        @applicationTypes = undef;\n+    }\n+\n+    my $ordnum;\n+    if (defined($self->{_ordnum})) {\n+        $ordnum = $self->{_ordnum} * 1;\n+    } else {\n+        $ordnum = 0;\n+    }\n+\n+    my $forDelete;\n+    if (defined($self->{_forDelete})) {\n+        $forDelete = $self->{_forDelete};\n+    } else {\n+        $forDelete = undef;\n+    }\n+\n+    my $i18n;\n+    if (defined($self->{_i18n})) {\n+        $i18n = $self->{_i18n};\n+    } else {\n+        $i18n = undef;\n+    }\n+\n+    return { id                   => $id,\n+        shortname                 => $shortname,\n+        required                  => $required,\n+        type                      => $type,\n+        federationAttribute       => $federationAttribute,\n+        perunSourceAttribute      => $perunSourceAttribute,\n+        perunDestinationAttribute => $perunDestinationAttribute,\n+        regex                     => $regex,\n+        applicationTypes          => \\@applicationTypes,\n+        ordnum                    => $ordnum,\n+        forDelete                 => $forDelete,\n+        i18n                      => $i18n,\n+        beanName                  => 'ApplicationFormItem'\n+    };\n+}\n+\n+sub getId\n+{\n+    my $self = shift;\n+\n+    return $self->{_id};\n+}\n+\n+sub getShortname\n+{\n+    my $self = shift;\n+\n+    return $self->{_shortname};\n+}\n+\n+sub setShortname\n+{\n+    my $self = shift;\n+    $self->{_shortname} = shift;\n+\n+    return;\n+}\n+\n+sub isRequired\n+{\n+    my $self = shift;\n+    return ($self->{_required}) ? 'true' : 'false';\n+}\n+\n+sub setRequired\n+{\n+    my $self = shift;\n+    my $value = shift;\n+    if (ref $value eq \"JSON::XS::Boolean\")\n+    {\n+        $self->{_required} = $value;\n+    } elsif ($value eq 'true' || $value eq 1)\n+    {\n+        $self->{_required} = JSON::XS::true;\n+    } else\n+    {\n+        $self->{_required} = JSON::XS::false;\n+    }\n+\n+    return;\n+}\n+\n+sub getType\n+{\n+    my $self = shift;\n+\n+    return $self->{_type};\n+}\n+\n+sub setType\n+{\n+    my $self = shift;\n+    $self->{_type} = shift;\n+\n+    return;\n+}\n+\n+sub getFederationAttribute\n+{\n+    my $self = shift;\n+\n+    return $self->{_federationAttribute};\n+}\n+\n+sub setFederationAttribute\n+{\n+    my $self = shift;\n+    $self->{_federationAttribute} = shift;\n+\n+    return;\n+}\n+\n+sub getPerunSourceAttribute\n+{\n+    my $self = shift;\n+\n+    return $self->{_perunSourceAttribute};\n+}\n+\n+sub setPerunSourceAttribute\n+{\n+    my $self = shift;\n+    $self->{_perunSourceAttribute} = shift;\n+\n+    return;\n+}\n+\n+sub getPerunDestinationAttribute\n+{\n+    my $self = shift;\n+\n+    return $self->{_perunDestinationAttribute};\n+}\n+\n+sub setPerunDestinationAttribute\n+{\n+    my $self = shift;\n+    $self->{_perunDestinationAttribute} = shift;\n+\n+    return;\n+}\n+\n+sub getRegex\n+{\n+    my $self = shift;\n+\n+    return $self->{_regex};\n+}\n+\n+sub setRegex\n+{\n+    my $self = shift;\n+    $self->{_regex} = shift;\n+\n+    return;\n+}\n+\n+sub getApplicationTypes\n+{\n+    my $self = shift;\n+\n+    return @{$self->{_applicationTypes}};\n+}\n+\n+sub setApplicationTypes\n+{\n+    my $self = shift;\n+    $self->{_applicationTypes} = shift;\n+\n+    return;\n+}\n+\n+sub getOrdnum\n+{\n+    my $self = shift;\n+\n+    return $self->{_ordnum};\n+}\n+\n+sub setOrdnum\n+{\n+    my $self = shift;\n+    $self->{_ordnum} = shift;\n+\n+    return;\n+}\n+\n+sub isForDelete\n+{\n+    my $self = shift;\n+\n+    return ($self->{_forDelete}) ? 'true' : 'false';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c49ac37d7722583fdb653acb4fd58920752e6a6"}, "originalPosition": 277}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47d08e8408f2e580872628a99f4876f976e64707", "author": {"user": {"login": "dBucik", "name": "Dominik Franti\u0161ek Bu\u010d\u00edk"}}, "url": "https://github.com/CESNET/perun/commit/47d08e8408f2e580872628a99f4876f976e64707", "committedDate": "2020-08-07T08:12:09Z", "message": "Requested changes in PR review\n\n- updated handling of boolean properties \"required\" and \"forDelete\"\n- renamed bean to ApplicationFormItem\n- updated handling of applicationTypes as array"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c49ac37d7722583fdb653acb4fd58920752e6a6", "author": {"user": {"login": "dBucik", "name": "Dominik Franti\u0161ek Bu\u010d\u00edk"}}, "url": "https://github.com/CESNET/perun/commit/3c49ac37d7722583fdb653acb4fd58920752e6a6", "committedDate": "2020-08-06T06:13:55Z", "message": "Requested changes in PR review\n\n- updated handling of boolean properties \"required\" and \"forDelete\"\n- renamed bean to ApplicationFormItem\n- updated handling of applicationTypes as array"}, "afterCommit": {"oid": "47d08e8408f2e580872628a99f4876f976e64707", "author": {"user": {"login": "dBucik", "name": "Dominik Franti\u0161ek Bu\u010d\u00edk"}}, "url": "https://github.com/CESNET/perun/commit/47d08e8408f2e580872628a99f4876f976e64707", "committedDate": "2020-08-07T08:12:09Z", "message": "Requested changes in PR review\n\n- updated handling of boolean properties \"required\" and \"forDelete\"\n- renamed bean to ApplicationFormItem\n- updated handling of applicationTypes as array"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTMwNjc2", "url": "https://github.com/CESNET/perun/pull/2837#pullrequestreview-463130676", "createdAt": "2020-08-07T08:29:59Z", "commit": {"oid": "47d08e8408f2e580872628a99f4876f976e64707"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1148, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}