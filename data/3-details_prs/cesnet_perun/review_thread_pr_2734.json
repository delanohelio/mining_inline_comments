{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMjU5NTIy", "number": 2734, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODoyMDowN1rOEEMRgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODoxMjoxMVrOEE-NLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODMwODQ4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODoyMDowN1rOGhqHNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOTowMDowMVrOGhrqPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0NjE2Nw==", "bodyText": "NIT: This is just to show, how this could be done with the Java8 stream API (even though I know you will probably not like it \ud83d\ude09) If you would like to, you can implement it like this.\n\tprivate List<String> getSponsorOrganizationIdentifiersFromGroups(PerunSessionImpl sess, User user) {\n\t\treturn sess.getPerunBl().getMembersManagerBl().getMembersByUserWithStatus(sess, user, Status.VALID).stream()\n\t\t\t.flatMap(m -> sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, m).stream())\n\t\t\t.map(g -> getOrganizationIdentifierAttribute(sess, g, user))\n\t\t\t.filter(Objects::nonNull)\n\t\t\t.map(Attribute::valueAsString)\n\t\t\t.filter(Objects::nonNull)\n\t\t\t.distinct()\n\t\t\t.collect(Collectors.toList());\n\t}\n\n\tprivate Attribute getOrganizationIdentifierAttribute(PerunSessionImpl sess, Group group, User user) {\n\t\ttry {\n\t\t\treturn sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group, A_G_D_sponsorOrganizationIdentifier);\n\t\t} catch (WrongAttributeAssignmentException e) {\n\t\t\tthrow new InternalErrorException(\"Wrong assignment of \" + A_G_D_sponsorOrganizationIdentifier + \" for user \" + user.getId(), e);\n\t\t} catch (AttributeNotExistsException e) {\n\t\t\tlog.debug(\"Attribute \" + A_G_D_sponsorOrganizationIdentifier + \" of group \" + group.getId() + \" does not exist, values will be skipped\", e);\n\t\t}\n\t\treturn null;\n\t}", "url": "https://github.com/CESNET/perun/pull/2734#discussion_r437946167", "createdAt": "2020-06-10T08:20:07Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Member;\n+import cz.metacentrum.perun.core.api.Status;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.bl.GroupsManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Get all records (as list) of attribute group:def:sponsorOrganizationIdentifier\n+ * from any Group where user is valid Member.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String sponsorOrganizationIdentifierFriendlyName = \"sponsorOrganizationIdentifier\";\n+\n+\tprivate static final String A_G_D_sponsorOrganizationIdentifier = AttributesManager.NS_GROUP_ATTR_DEF + \":\" + sponsorOrganizationIdentifierFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\n+\t\tattribute.setValue(getSponsorOrganizationIdentifiersFromGroups(sess, user));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t/**\n+\t * Collect sponsor organization's identifiers from perun Groups\n+\t * @param sess Perun session\n+\t * @param user User for whom the values should be collected\n+\t * @return List of collected identifiers\n+\t * @throws InternalErrorException When some error occurs, see exception cause for details.\n+\t */\n+\tprivate List<String> getSponsorOrganizationIdentifiersFromGroups(PerunSessionImpl sess, User user) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f6e69c5bf024f0368499cdaef5a1bd8b7e0f7ce"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3MTUxOQ==", "bodyText": "Why not. Lets go to the future \ud83d\ude05 Changed.", "url": "https://github.com/CESNET/perun/pull/2734#discussion_r437971519", "createdAt": "2020-06-10T09:00:01Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Member;\n+import cz.metacentrum.perun.core.api.Status;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.bl.GroupsManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserVirtualAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Get all records (as list) of attribute group:def:sponsorOrganizationIdentifier\n+ * from any Group where user is valid Member.\n+ *\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations extends UserVirtualAttributesModuleAbstract implements UserVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String sponsorOrganizationIdentifierFriendlyName = \"sponsorOrganizationIdentifier\";\n+\n+\tprivate static final String A_G_D_sponsorOrganizationIdentifier = AttributesManager.NS_GROUP_ATTR_DEF + \":\" + sponsorOrganizationIdentifierFriendlyName;\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations.class);\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition attributeDefinition) {\n+\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\n+\t\tattribute.setValue(getSponsorOrganizationIdentifiersFromGroups(sess, user));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t/**\n+\t * Collect sponsor organization's identifiers from perun Groups\n+\t * @param sess Perun session\n+\t * @param user User for whom the values should be collected\n+\t * @return List of collected identifiers\n+\t * @throws InternalErrorException When some error occurs, see exception cause for details.\n+\t */\n+\tprivate List<String> getSponsorOrganizationIdentifiersFromGroups(PerunSessionImpl sess, User user) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0NjE2Nw=="}, "originalCommit": {"oid": "6f6e69c5bf024f0368499cdaef5a1bd8b7e0f7ce"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODMyMjM1OnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODoyMzozNFrOGhqP7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOTowMDoxOVrOGhrq-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0ODM5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tsess = mock(PerunSessionImpl.class);\n          \n          \n            \n            \t\tPerunBl perunBl = mock(PerunBl.class);\n          \n          \n            \n            \t\twhen(sess.getPerunBl()).thenReturn(perunBl);\n          \n          \n            \n            \n          \n          \n            \n            \t\tAttributesManagerBl am = mock(AttributesManagerBl.class);\n          \n          \n            \n            \t\tGroupsManagerBl gm = mock(GroupsManagerBl.class);\n          \n          \n            \n            \t\tMembersManagerBl mm = mock(MembersManagerBl.class);\n          \n          \n            \n            \t\twhen(sess.getPerunBl().getAttributesManagerBl()).thenReturn(am);\n          \n          \n            \n            \t\twhen(sess.getPerunBl().getGroupsManagerBl()).thenReturn(gm);\n          \n          \n            \n            \t\twhen(sess.getPerunBl().getMembersManagerBl()).thenReturn(mm);\n          \n          \n            \n            \t\tsess = mock(PerunSessionImpl.class, RETURNS_DEEP_STUBS);", "url": "https://github.com/CESNET/perun/pull/2734#discussion_r437948399", "createdAt": "2020-06-10T08:23:34Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Member;\n+import cz.metacentrum.perun.core.api.Status;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.bl.GroupsManagerBl;\n+import cz.metacentrum.perun.core.bl.MembersManagerBl;\n+import cz.metacentrum.perun.core.bl.PerunBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.*;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest {\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations classInstance = new urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations();\n+\tprivate final AttributeDefinition sponsoredMembershipInOrganizationsAttrDef = classInstance.getAttributeDefinition();\n+\tprivate final String organizationIdentifierAttrFriendlyName = \"sponsorOrganizationIdentifier\";\n+\tprivate final String organizationIdentifierAttrName = AttributesManager.NS_GROUP_ATTR_DEF + \":\" + organizationIdentifierAttrFriendlyName;\n+\n+\tprivate final User user = new User(1, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\tprivate final Member member1 = new Member(1, 1, 1, Status.VALID);\n+\tprivate final Member member2 = new Member(2, 1, 2, Status.VALID);\n+\tprivate final Group group1 = new Group(\"group1\", \"group1\");\n+\tprivate final Group group2 = new Group(\"group2\", \"group2\");\n+\n+\tprivate final String value1 = \"value1\";\n+\tprivate final String value2 = \"value2\";\n+\n+\tprivate final Attribute groupAttr1 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value1);\n+\tprivate final Attribute groupAttr2 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value2);\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tsponsoredMembershipInOrganizationsAttrDef.setId(100);\n+\t\tgroup1.setId(1);\n+\t\tgroup2.setId(2);\n+\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class);\n+\t\tPerunBl perunBl = mock(PerunBl.class);\n+\t\twhen(sess.getPerunBl()).thenReturn(perunBl);\n+\n+\t\tAttributesManagerBl am = mock(AttributesManagerBl.class);\n+\t\tGroupsManagerBl gm = mock(GroupsManagerBl.class);\n+\t\tMembersManagerBl mm = mock(MembersManagerBl.class);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl()).thenReturn(am);\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl()).thenReturn(gm);\n+\t\twhen(sess.getPerunBl().getMembersManagerBl()).thenReturn(mm);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f6e69c5bf024f0368499cdaef5a1bd8b7e0f7ce"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3MTcwNg==", "bodyText": "Good point. Changed.", "url": "https://github.com/CESNET/perun/pull/2734#discussion_r437971706", "createdAt": "2020-06-10T09:00:19Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Member;\n+import cz.metacentrum.perun.core.api.Status;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.bl.GroupsManagerBl;\n+import cz.metacentrum.perun.core.bl.MembersManagerBl;\n+import cz.metacentrum.perun.core.bl.PerunBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.*;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest {\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations classInstance = new urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations();\n+\tprivate final AttributeDefinition sponsoredMembershipInOrganizationsAttrDef = classInstance.getAttributeDefinition();\n+\tprivate final String organizationIdentifierAttrFriendlyName = \"sponsorOrganizationIdentifier\";\n+\tprivate final String organizationIdentifierAttrName = AttributesManager.NS_GROUP_ATTR_DEF + \":\" + organizationIdentifierAttrFriendlyName;\n+\n+\tprivate final User user = new User(1, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\tprivate final Member member1 = new Member(1, 1, 1, Status.VALID);\n+\tprivate final Member member2 = new Member(2, 1, 2, Status.VALID);\n+\tprivate final Group group1 = new Group(\"group1\", \"group1\");\n+\tprivate final Group group2 = new Group(\"group2\", \"group2\");\n+\n+\tprivate final String value1 = \"value1\";\n+\tprivate final String value2 = \"value2\";\n+\n+\tprivate final Attribute groupAttr1 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value1);\n+\tprivate final Attribute groupAttr2 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value2);\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tsponsoredMembershipInOrganizationsAttrDef.setId(100);\n+\t\tgroup1.setId(1);\n+\t\tgroup2.setId(2);\n+\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class);\n+\t\tPerunBl perunBl = mock(PerunBl.class);\n+\t\twhen(sess.getPerunBl()).thenReturn(perunBl);\n+\n+\t\tAttributesManagerBl am = mock(AttributesManagerBl.class);\n+\t\tGroupsManagerBl gm = mock(GroupsManagerBl.class);\n+\t\tMembersManagerBl mm = mock(MembersManagerBl.class);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl()).thenReturn(am);\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl()).thenReturn(gm);\n+\t\twhen(sess.getPerunBl().getMembersManagerBl()).thenReturn(mm);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0ODM5OQ=="}, "originalCommit": {"oid": "6f6e69c5bf024f0368499cdaef5a1bd8b7e0f7ce"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODMyNjIzOnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODoyNDo0MVrOGhqSiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOTowMTo1MlrOGhrunA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0OTA2NA==", "bodyText": "NIT: It would be more readable if you would split these lines at the .thenReturn call.", "url": "https://github.com/CESNET/perun/pull/2734#discussion_r437949064", "createdAt": "2020-06-10T08:24:41Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Member;\n+import cz.metacentrum.perun.core.api.Status;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.bl.GroupsManagerBl;\n+import cz.metacentrum.perun.core.bl.MembersManagerBl;\n+import cz.metacentrum.perun.core.bl.PerunBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.*;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest {\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations classInstance = new urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations();\n+\tprivate final AttributeDefinition sponsoredMembershipInOrganizationsAttrDef = classInstance.getAttributeDefinition();\n+\tprivate final String organizationIdentifierAttrFriendlyName = \"sponsorOrganizationIdentifier\";\n+\tprivate final String organizationIdentifierAttrName = AttributesManager.NS_GROUP_ATTR_DEF + \":\" + organizationIdentifierAttrFriendlyName;\n+\n+\tprivate final User user = new User(1, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\tprivate final Member member1 = new Member(1, 1, 1, Status.VALID);\n+\tprivate final Member member2 = new Member(2, 1, 2, Status.VALID);\n+\tprivate final Group group1 = new Group(\"group1\", \"group1\");\n+\tprivate final Group group2 = new Group(\"group2\", \"group2\");\n+\n+\tprivate final String value1 = \"value1\";\n+\tprivate final String value2 = \"value2\";\n+\n+\tprivate final Attribute groupAttr1 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value1);\n+\tprivate final Attribute groupAttr2 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value2);\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tsponsoredMembershipInOrganizationsAttrDef.setId(100);\n+\t\tgroup1.setId(1);\n+\t\tgroup2.setId(2);\n+\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class);\n+\t\tPerunBl perunBl = mock(PerunBl.class);\n+\t\twhen(sess.getPerunBl()).thenReturn(perunBl);\n+\n+\t\tAttributesManagerBl am = mock(AttributesManagerBl.class);\n+\t\tGroupsManagerBl gm = mock(GroupsManagerBl.class);\n+\t\tMembersManagerBl mm = mock(MembersManagerBl.class);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl()).thenReturn(am);\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl()).thenReturn(gm);\n+\t\twhen(sess.getPerunBl().getMembersManagerBl()).thenReturn(mm);\n+\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member1)).thenReturn(Arrays.asList(group1));\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member2)).thenReturn(Arrays.asList(group2));\n+\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group1, organizationIdentifierAttrName)).thenReturn(groupAttr1);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group2, organizationIdentifierAttrName)).thenReturn(groupAttr2);\n+\n+\t\twhen(sess.getPerunBl().getMembersManagerBl().getMembersByUserWithStatus(sess, user, Status.VALID)).thenReturn(Arrays.asList(member1, member2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f6e69c5bf024f0368499cdaef5a1bd8b7e0f7ce"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3MjYzNg==", "bodyText": "I like it this way more, but don't have a problem to change that. Done.", "url": "https://github.com/CESNET/perun/pull/2734#discussion_r437972636", "createdAt": "2020-06-10T09:01:52Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Member;\n+import cz.metacentrum.perun.core.api.Status;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.bl.GroupsManagerBl;\n+import cz.metacentrum.perun.core.bl.MembersManagerBl;\n+import cz.metacentrum.perun.core.bl.PerunBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.*;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest {\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations classInstance = new urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations();\n+\tprivate final AttributeDefinition sponsoredMembershipInOrganizationsAttrDef = classInstance.getAttributeDefinition();\n+\tprivate final String organizationIdentifierAttrFriendlyName = \"sponsorOrganizationIdentifier\";\n+\tprivate final String organizationIdentifierAttrName = AttributesManager.NS_GROUP_ATTR_DEF + \":\" + organizationIdentifierAttrFriendlyName;\n+\n+\tprivate final User user = new User(1, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\tprivate final Member member1 = new Member(1, 1, 1, Status.VALID);\n+\tprivate final Member member2 = new Member(2, 1, 2, Status.VALID);\n+\tprivate final Group group1 = new Group(\"group1\", \"group1\");\n+\tprivate final Group group2 = new Group(\"group2\", \"group2\");\n+\n+\tprivate final String value1 = \"value1\";\n+\tprivate final String value2 = \"value2\";\n+\n+\tprivate final Attribute groupAttr1 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value1);\n+\tprivate final Attribute groupAttr2 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value2);\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tsponsoredMembershipInOrganizationsAttrDef.setId(100);\n+\t\tgroup1.setId(1);\n+\t\tgroup2.setId(2);\n+\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class);\n+\t\tPerunBl perunBl = mock(PerunBl.class);\n+\t\twhen(sess.getPerunBl()).thenReturn(perunBl);\n+\n+\t\tAttributesManagerBl am = mock(AttributesManagerBl.class);\n+\t\tGroupsManagerBl gm = mock(GroupsManagerBl.class);\n+\t\tMembersManagerBl mm = mock(MembersManagerBl.class);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl()).thenReturn(am);\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl()).thenReturn(gm);\n+\t\twhen(sess.getPerunBl().getMembersManagerBl()).thenReturn(mm);\n+\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member1)).thenReturn(Arrays.asList(group1));\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member2)).thenReturn(Arrays.asList(group2));\n+\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group1, organizationIdentifierAttrName)).thenReturn(groupAttr1);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group2, organizationIdentifierAttrName)).thenReturn(groupAttr2);\n+\n+\t\twhen(sess.getPerunBl().getMembersManagerBl().getMembersByUserWithStatus(sess, user, Status.VALID)).thenReturn(Arrays.asList(member1, member2));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0OTA2NA=="}, "originalCommit": {"oid": "6f6e69c5bf024f0368499cdaef5a1bd8b7e0f7ce"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjQ2NDIwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODowMjo1OFrOGi64Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODoxMzozN1rOGi7K7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI2OTM3OA==", "bodyText": "Wrong comment.", "url": "https://github.com/CESNET/perun/pull/2734#discussion_r439269378", "createdAt": "2020-06-12T08:02:58Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Member;\n+import cz.metacentrum.perun.core.api.Status;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest {\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations classInstance = new urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations();\n+\tprivate final AttributeDefinition sponsoredMembershipInOrganizationsAttrDef = classInstance.getAttributeDefinition();\n+\tprivate final String organizationIdentifierAttrFriendlyName = \"sponsorOrganizationIdentifier\";\n+\tprivate final String organizationIdentifierAttrName = AttributesManager.NS_GROUP_ATTR_DEF + \":\" + organizationIdentifierAttrFriendlyName;\n+\n+\tprivate final User user = new User(1, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\tprivate final Member member1 = new Member(1, 1, 1, Status.VALID);\n+\tprivate final Member member2 = new Member(2, 1, 2, Status.VALID);\n+\tprivate final Group group1 = new Group(\"group1\", \"group1\");\n+\tprivate final Group group2 = new Group(\"group2\", \"group2\");\n+\n+\tprivate final String value1 = \"value1\";\n+\tprivate final String value2 = \"value2\";\n+\n+\tprivate final Attribute groupAttr1 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value1);\n+\tprivate final Attribute groupAttr2 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value2);\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tsponsoredMembershipInOrganizationsAttrDef.setId(100);\n+\t\tgroup1.setId(1);\n+\t\tgroup2.setId(2);\n+\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class, RETURNS_DEEP_STUBS);\n+\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member1))\n+\t\t\t.thenReturn(Arrays.asList(group1));\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member2))\n+\t\t\t.thenReturn(Arrays.asList(group2));\n+\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group1, organizationIdentifierAttrName))\n+\t\t\t.thenReturn(groupAttr1);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group2, organizationIdentifierAttrName))\n+\t\t\t.thenReturn(groupAttr2);\n+\n+\t\twhen(sess.getPerunBl().getMembersManagerBl().getMembersByUserWithStatus(sess, user, Status.VALID))\n+\t\t\t.thenReturn(Arrays.asList(member1, member2));\n+\t}\n+\n+\tprivate Attribute setUpGroupAttribute(int id, String friendlyName, String type, Object value) {\n+\t\tAttributeDefinition attrDef = new AttributeDefinition();\n+\t\tattrDef.setId(id);\n+\t\tattrDef.setFriendlyName(friendlyName);\n+\t\tattrDef.setNamespace(AttributesManager.NS_GROUP_ATTR_DEF);\n+\t\tattrDef.setType(type);\n+\t\tAttribute attr = new Attribute(attrDef);\n+\t\tattr.setValue(value);\n+\t\treturn attr;\n+\t}\n+\n+\t@Test\n+\tpublic void getAttributeValue() {\n+\t\tArrayList<String> attributeValue = classInstance.getAttributeValue(sess, user, sponsoredMembershipInOrganizationsAttrDef).valueAsList();\n+\n+\t\tassertNotNull(attributeValue);\n+\t\t//we want to be sure, that preferredEmail is first (defined by sorting in module)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cf0b43f1da7f973968015181abef73e41671bd6"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3NDIyMA==", "bodyText": "Removed.", "url": "https://github.com/CESNET/perun/pull/2734#discussion_r439274220", "createdAt": "2020-06-12T08:13:37Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Member;\n+import cz.metacentrum.perun.core.api.Status;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest {\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations classInstance = new urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations();\n+\tprivate final AttributeDefinition sponsoredMembershipInOrganizationsAttrDef = classInstance.getAttributeDefinition();\n+\tprivate final String organizationIdentifierAttrFriendlyName = \"sponsorOrganizationIdentifier\";\n+\tprivate final String organizationIdentifierAttrName = AttributesManager.NS_GROUP_ATTR_DEF + \":\" + organizationIdentifierAttrFriendlyName;\n+\n+\tprivate final User user = new User(1, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\tprivate final Member member1 = new Member(1, 1, 1, Status.VALID);\n+\tprivate final Member member2 = new Member(2, 1, 2, Status.VALID);\n+\tprivate final Group group1 = new Group(\"group1\", \"group1\");\n+\tprivate final Group group2 = new Group(\"group2\", \"group2\");\n+\n+\tprivate final String value1 = \"value1\";\n+\tprivate final String value2 = \"value2\";\n+\n+\tprivate final Attribute groupAttr1 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value1);\n+\tprivate final Attribute groupAttr2 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value2);\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tsponsoredMembershipInOrganizationsAttrDef.setId(100);\n+\t\tgroup1.setId(1);\n+\t\tgroup2.setId(2);\n+\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class, RETURNS_DEEP_STUBS);\n+\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member1))\n+\t\t\t.thenReturn(Arrays.asList(group1));\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member2))\n+\t\t\t.thenReturn(Arrays.asList(group2));\n+\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group1, organizationIdentifierAttrName))\n+\t\t\t.thenReturn(groupAttr1);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group2, organizationIdentifierAttrName))\n+\t\t\t.thenReturn(groupAttr2);\n+\n+\t\twhen(sess.getPerunBl().getMembersManagerBl().getMembersByUserWithStatus(sess, user, Status.VALID))\n+\t\t\t.thenReturn(Arrays.asList(member1, member2));\n+\t}\n+\n+\tprivate Attribute setUpGroupAttribute(int id, String friendlyName, String type, Object value) {\n+\t\tAttributeDefinition attrDef = new AttributeDefinition();\n+\t\tattrDef.setId(id);\n+\t\tattrDef.setFriendlyName(friendlyName);\n+\t\tattrDef.setNamespace(AttributesManager.NS_GROUP_ATTR_DEF);\n+\t\tattrDef.setType(type);\n+\t\tAttribute attr = new Attribute(attrDef);\n+\t\tattr.setValue(value);\n+\t\treturn attr;\n+\t}\n+\n+\t@Test\n+\tpublic void getAttributeValue() {\n+\t\tArrayList<String> attributeValue = classInstance.getAttributeValue(sess, user, sponsoredMembershipInOrganizationsAttrDef).valueAsList();\n+\n+\t\tassertNotNull(attributeValue);\n+\t\t//we want to be sure, that preferredEmail is first (defined by sorting in module)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI2OTM3OA=="}, "originalCommit": {"oid": "5cf0b43f1da7f973968015181abef73e41671bd6"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjQ4OTQwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODoxMjoxMVrOGi7IKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODoxMjoxMVrOGi7IKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3MzUxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t//we want to be sure, that preferredEmail is first (defined by sorting in module)", "url": "https://github.com/CESNET/perun/pull/2734#discussion_r439273512", "createdAt": "2020-06-12T08:12:11Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Member;\n+import cz.metacentrum.perun.core.api.Status;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Michal Stava stavamichal@gmail.com\n+ */\n+public class urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest {\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizationsTest.class);\n+\n+\tprivate final urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations classInstance = new urn_perun_user_attribute_def_virt_sponsoredMembershipInOrganizations();\n+\tprivate final AttributeDefinition sponsoredMembershipInOrganizationsAttrDef = classInstance.getAttributeDefinition();\n+\tprivate final String organizationIdentifierAttrFriendlyName = \"sponsorOrganizationIdentifier\";\n+\tprivate final String organizationIdentifierAttrName = AttributesManager.NS_GROUP_ATTR_DEF + \":\" + organizationIdentifierAttrFriendlyName;\n+\n+\tprivate final User user = new User(1, \"Joe\", \"Doe\", \"W.\", \"\", \"\");\n+\tprivate final Member member1 = new Member(1, 1, 1, Status.VALID);\n+\tprivate final Member member2 = new Member(2, 1, 2, Status.VALID);\n+\tprivate final Group group1 = new Group(\"group1\", \"group1\");\n+\tprivate final Group group2 = new Group(\"group2\", \"group2\");\n+\n+\tprivate final String value1 = \"value1\";\n+\tprivate final String value2 = \"value2\";\n+\n+\tprivate final Attribute groupAttr1 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value1);\n+\tprivate final Attribute groupAttr2 = setUpGroupAttribute(1, organizationIdentifierAttrFriendlyName, String.class.getName(), value2);\n+\n+\tprivate PerunSessionImpl sess;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tsponsoredMembershipInOrganizationsAttrDef.setId(100);\n+\t\tgroup1.setId(1);\n+\t\tgroup2.setId(2);\n+\n+\t\t//prepare mocks\n+\t\tsess = mock(PerunSessionImpl.class, RETURNS_DEEP_STUBS);\n+\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member1))\n+\t\t\t.thenReturn(Arrays.asList(group1));\n+\t\twhen(sess.getPerunBl().getGroupsManagerBl().getGroupsWhereMemberIsActive(sess, member2))\n+\t\t\t.thenReturn(Arrays.asList(group2));\n+\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group1, organizationIdentifierAttrName))\n+\t\t\t.thenReturn(groupAttr1);\n+\t\twhen(sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group2, organizationIdentifierAttrName))\n+\t\t\t.thenReturn(groupAttr2);\n+\n+\t\twhen(sess.getPerunBl().getMembersManagerBl().getMembersByUserWithStatus(sess, user, Status.VALID))\n+\t\t\t.thenReturn(Arrays.asList(member1, member2));\n+\t}\n+\n+\tprivate Attribute setUpGroupAttribute(int id, String friendlyName, String type, Object value) {\n+\t\tAttributeDefinition attrDef = new AttributeDefinition();\n+\t\tattrDef.setId(id);\n+\t\tattrDef.setFriendlyName(friendlyName);\n+\t\tattrDef.setNamespace(AttributesManager.NS_GROUP_ATTR_DEF);\n+\t\tattrDef.setType(type);\n+\t\tAttribute attr = new Attribute(attrDef);\n+\t\tattr.setValue(value);\n+\t\treturn attr;\n+\t}\n+\n+\t@Test\n+\tpublic void getAttributeValue() {\n+\t\tArrayList<String> attributeValue = classInstance.getAttributeValue(sess, user, sponsoredMembershipInOrganizationsAttrDef).valueAsList();\n+\n+\t\tassertNotNull(attributeValue);\n+\t\t//we want to be sure, that preferredEmail is first (defined by sorting in module)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cf0b43f1da7f973968015181abef73e41671bd6"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1879, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}