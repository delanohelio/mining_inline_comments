{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMzc2MDg5", "number": 2836, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNToxNDoxMlrOEVq41Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODoyODo0MVrOEVuQRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTU4MjI5OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNToxNDoxMlrOG8jk8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo0NDozMVrOG8nIhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1MDY0Mg==", "bodyText": "Judging by the commit message this attribute is not mentioned as unique by definition, you already check duplicates in checkAttributeSyntax(). Or you can have it unique and then remove that check, but it will prevent two different groups to have same email (not just unique within one attribute value), which I'm not sure is wanted or not.\nAlso do we care about case-insensitive or non-accented uniqueness too (remembering the problems with tcsMails:mu attribute)?", "url": "https://github.com/CESNET/perun/pull/2836#discussion_r466150642", "createdAt": "2020-08-06T05:14:12Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import com.google.common.collect.Lists;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.BeansUtils;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Pair;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.stream.Collectors;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.emailPattern;\n+import static cz.metacentrum.perun.core.impl.Utils.hasDuplicate;\n+\n+/**\n+ * Module for email addresses for Office365 at Masaryk University.\n+ * Implements checks for attribute urn:perun:group:attribute-def:def:o365EmailAddresses:o365mu.\n+ * <p>\n+ * Requirements:\n+ * <ul>\n+ * <li>type is list</li>\n+ * <li>all values are email addresses</li>\n+ * <li>must contain at least one value if urn:perun:group:attribute-def:def:adName:o365mu is set</li>\n+ * <li>no duplicates among the list values</li>\n+ * <li>no duplicates among all values of this attribute and all values of\n+ * attribute urn:perun:member:attribute-def:def:o365EmailAddresses:mu</li>\n+ * </ul>\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+public class urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu extends GroupAttributesModuleAbstract implements GroupAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.class);\n+\tstatic final String ADNAME_ATTRIBUTE = AttributesManager.NS_GROUP_ATTR_DEF + \":adName:o365mu\";\n+\n+\t@Override\n+\tpublic void checkAttributeSyntax(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongAttributeValueException {\n+\t\tlog.trace(\"checkAttributeSyntax(group={},attribute={})\", group, attribute);\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) return;\n+\n+\t\t//check syntax of all values\n+\t\tfor (String email : emails) {\n+\t\t\tMatcher emailMatcher = emailPattern.matcher(email);\n+\t\t\tif (!emailMatcher.matches())\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, group, \"Email \" + email + \" is not in correct form.\");\n+\t\t}\n+\n+\t\t//check for duplicities\n+\t\tif (hasDuplicate(emails)) {\n+\t\t\tthrow new WrongAttributeValueException(attribute, group, \"duplicate values\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) emails = new ArrayList<>();\n+\t\t//at least one value if adName is set\n+\t\tAttributesManagerBl am = sess.getPerunBl().getAttributesManagerBl();\n+\t\ttry {\n+\t\t\tif (emails.isEmpty()) {\n+\t\t\t\tAttribute adName = am.getAttribute(sess, group, ADNAME_ATTRIBUTE);\n+\t\t\t\tif (adName.getValue() != null) {\n+\t\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, adName, group, null, group, null, \"at least one email must be defined\");\n+\t\t\t\t}\n+\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e.getMessage(), e);\n+\t\t}\n+\n+\t\t//check for duplicities among all members and groups\n+\t\tAttributesManagerBl attributesManagerBl = sess.getPerunBl().getAttributesManagerBl();\n+\t\tSet<Integer> setOfGroupsDefinedByAttribute = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, attribute).stream().map(Pair::getLeft).collect(Collectors.toSet());\n+\t\tsetOfGroupsDefinedByAttribute.remove(group.getId());\n+\n+\t\tif (!setOfGroupsDefinedByAttribute.isEmpty()) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, attribute, group, null, \"some of the email addresses are already assigned to the following group pairs: \" + setOfGroupsDefinedByAttribute);\n+\t\t}\n+\t\tAttribute memberO365EmailAddresses = new Attribute(new urn_perun_member_attribute_def_def_o365EmailAddresses_mu().getAttributeDefinition());\n+\t\tmemberO365EmailAddresses.setValue(emails);\n+\t\tSet<Pair<Integer, Integer>> memberPairs = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, memberO365EmailAddresses);\n+\t\tif (!memberPairs.isEmpty()) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, memberO365EmailAddresses, group, null, \"member \" + BeansUtils.getSingleId(memberPairs) + \" \");\n+\t\t}\n+\t}\n+\t/**\n+\t * Prefills value created by joining value of urn:perun:groupe:attribute-def:def:adName:o365mu with \"@group.muni.cz\"\n+\t */\n+\t@Override\n+\tpublic Attribute fillAttribute(PerunSessionImpl sess, Group group, AttributeDefinition attrDef) throws WrongAttributeAssignmentException {\n+\t\tif (!AttributesManager.NS_GROUP_ATTR_DEF.equals(attrDef.getNamespace())) throw new WrongAttributeAssignmentException(attrDef);\n+\t\ttry {\n+\t\t\tAttribute result = new Attribute(attrDef);\n+\t\t\tString adName = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group, ADNAME_ATTRIBUTE).valueAsString();\n+\t\t\tif (adName != null) {\n+\t\t\t\tresult.setValue(Lists.newArrayList(adName + \"@group.muni.cz\"));\n+\t\t\t}\n+\t\t\treturn result;\n+\t\t} catch (AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e.getMessage(), e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getDependencies() {\n+\t\treturn Collections.singletonList(ADNAME_ATTRIBUTE);\n+\t}\n+\n+\t@Override\n+\tpublic AttributeDefinition getAttributeDefinition() {\n+\t\tAttributeDefinition attr = new AttributeDefinition();\n+\t\tattr.setNamespace(AttributesManager.NS_GROUP_ATTR_DEF);\n+\t\tattr.setFriendlyName(\"o365EmailAddresses:o365mu\");\n+\t\tattr.setDisplayName(\"MU O365 email addresses in o365mu\");\n+\t\tattr.setType(ArrayList.class.getName());\n+\t\tattr.setUnique(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f4cfe4ae7d801ff2a13ea2982a8a34ac6afa65b"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwODkwMg==", "bodyText": "It is my mistake. The attribute is already defined as unique and it will stay in this format even for the group.\nBecause we just need to copy the existing version of module to the new one, there is no need to fix all situations like \"case sensitivity\" etc.", "url": "https://github.com/CESNET/perun/pull/2836#discussion_r466208902", "createdAt": "2020-08-06T07:44:31Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import com.google.common.collect.Lists;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.BeansUtils;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Pair;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.stream.Collectors;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.emailPattern;\n+import static cz.metacentrum.perun.core.impl.Utils.hasDuplicate;\n+\n+/**\n+ * Module for email addresses for Office365 at Masaryk University.\n+ * Implements checks for attribute urn:perun:group:attribute-def:def:o365EmailAddresses:o365mu.\n+ * <p>\n+ * Requirements:\n+ * <ul>\n+ * <li>type is list</li>\n+ * <li>all values are email addresses</li>\n+ * <li>must contain at least one value if urn:perun:group:attribute-def:def:adName:o365mu is set</li>\n+ * <li>no duplicates among the list values</li>\n+ * <li>no duplicates among all values of this attribute and all values of\n+ * attribute urn:perun:member:attribute-def:def:o365EmailAddresses:mu</li>\n+ * </ul>\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+public class urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu extends GroupAttributesModuleAbstract implements GroupAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.class);\n+\tstatic final String ADNAME_ATTRIBUTE = AttributesManager.NS_GROUP_ATTR_DEF + \":adName:o365mu\";\n+\n+\t@Override\n+\tpublic void checkAttributeSyntax(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongAttributeValueException {\n+\t\tlog.trace(\"checkAttributeSyntax(group={},attribute={})\", group, attribute);\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) return;\n+\n+\t\t//check syntax of all values\n+\t\tfor (String email : emails) {\n+\t\t\tMatcher emailMatcher = emailPattern.matcher(email);\n+\t\t\tif (!emailMatcher.matches())\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, group, \"Email \" + email + \" is not in correct form.\");\n+\t\t}\n+\n+\t\t//check for duplicities\n+\t\tif (hasDuplicate(emails)) {\n+\t\t\tthrow new WrongAttributeValueException(attribute, group, \"duplicate values\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) emails = new ArrayList<>();\n+\t\t//at least one value if adName is set\n+\t\tAttributesManagerBl am = sess.getPerunBl().getAttributesManagerBl();\n+\t\ttry {\n+\t\t\tif (emails.isEmpty()) {\n+\t\t\t\tAttribute adName = am.getAttribute(sess, group, ADNAME_ATTRIBUTE);\n+\t\t\t\tif (adName.getValue() != null) {\n+\t\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, adName, group, null, group, null, \"at least one email must be defined\");\n+\t\t\t\t}\n+\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e.getMessage(), e);\n+\t\t}\n+\n+\t\t//check for duplicities among all members and groups\n+\t\tAttributesManagerBl attributesManagerBl = sess.getPerunBl().getAttributesManagerBl();\n+\t\tSet<Integer> setOfGroupsDefinedByAttribute = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, attribute).stream().map(Pair::getLeft).collect(Collectors.toSet());\n+\t\tsetOfGroupsDefinedByAttribute.remove(group.getId());\n+\n+\t\tif (!setOfGroupsDefinedByAttribute.isEmpty()) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, attribute, group, null, \"some of the email addresses are already assigned to the following group pairs: \" + setOfGroupsDefinedByAttribute);\n+\t\t}\n+\t\tAttribute memberO365EmailAddresses = new Attribute(new urn_perun_member_attribute_def_def_o365EmailAddresses_mu().getAttributeDefinition());\n+\t\tmemberO365EmailAddresses.setValue(emails);\n+\t\tSet<Pair<Integer, Integer>> memberPairs = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, memberO365EmailAddresses);\n+\t\tif (!memberPairs.isEmpty()) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, memberO365EmailAddresses, group, null, \"member \" + BeansUtils.getSingleId(memberPairs) + \" \");\n+\t\t}\n+\t}\n+\t/**\n+\t * Prefills value created by joining value of urn:perun:groupe:attribute-def:def:adName:o365mu with \"@group.muni.cz\"\n+\t */\n+\t@Override\n+\tpublic Attribute fillAttribute(PerunSessionImpl sess, Group group, AttributeDefinition attrDef) throws WrongAttributeAssignmentException {\n+\t\tif (!AttributesManager.NS_GROUP_ATTR_DEF.equals(attrDef.getNamespace())) throw new WrongAttributeAssignmentException(attrDef);\n+\t\ttry {\n+\t\t\tAttribute result = new Attribute(attrDef);\n+\t\t\tString adName = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group, ADNAME_ATTRIBUTE).valueAsString();\n+\t\t\tif (adName != null) {\n+\t\t\t\tresult.setValue(Lists.newArrayList(adName + \"@group.muni.cz\"));\n+\t\t\t}\n+\t\t\treturn result;\n+\t\t} catch (AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e.getMessage(), e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getDependencies() {\n+\t\treturn Collections.singletonList(ADNAME_ATTRIBUTE);\n+\t}\n+\n+\t@Override\n+\tpublic AttributeDefinition getAttributeDefinition() {\n+\t\tAttributeDefinition attr = new AttributeDefinition();\n+\t\tattr.setNamespace(AttributesManager.NS_GROUP_ATTR_DEF);\n+\t\tattr.setFriendlyName(\"o365EmailAddresses:o365mu\");\n+\t\tattr.setDisplayName(\"MU O365 email addresses in o365mu\");\n+\t\tattr.setType(ArrayList.class.getName());\n+\t\tattr.setUnique(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1MDY0Mg=="}, "originalCommit": {"oid": "5f4cfe4ae7d801ff2a13ea2982a8a34ac6afa65b"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTYwMTA1OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNToyNTowMFrOG8jwPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo0NDozNFrOG8nIlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1MzUzMw==", "bodyText": "I'm not sure we rely on attribute definition from the module except the tests, since it might differ from the real perun instance state. Also subsequent call of getPerunBeanIdsForUniqueAttributeValue() requires attribute definition to have real id, which can't be present in this construct as is set to 0.\nI suggest to get attribute definition by name (urn).", "url": "https://github.com/CESNET/perun/pull/2836#discussion_r466153533", "createdAt": "2020-08-06T05:25:00Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import com.google.common.collect.Lists;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.BeansUtils;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Pair;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.stream.Collectors;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.emailPattern;\n+import static cz.metacentrum.perun.core.impl.Utils.hasDuplicate;\n+\n+/**\n+ * Module for email addresses for Office365 at Masaryk University.\n+ * Implements checks for attribute urn:perun:group:attribute-def:def:o365EmailAddresses:o365mu.\n+ * <p>\n+ * Requirements:\n+ * <ul>\n+ * <li>type is list</li>\n+ * <li>all values are email addresses</li>\n+ * <li>must contain at least one value if urn:perun:group:attribute-def:def:adName:o365mu is set</li>\n+ * <li>no duplicates among the list values</li>\n+ * <li>no duplicates among all values of this attribute and all values of\n+ * attribute urn:perun:member:attribute-def:def:o365EmailAddresses:mu</li>\n+ * </ul>\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+public class urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu extends GroupAttributesModuleAbstract implements GroupAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.class);\n+\tstatic final String ADNAME_ATTRIBUTE = AttributesManager.NS_GROUP_ATTR_DEF + \":adName:o365mu\";\n+\n+\t@Override\n+\tpublic void checkAttributeSyntax(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongAttributeValueException {\n+\t\tlog.trace(\"checkAttributeSyntax(group={},attribute={})\", group, attribute);\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) return;\n+\n+\t\t//check syntax of all values\n+\t\tfor (String email : emails) {\n+\t\t\tMatcher emailMatcher = emailPattern.matcher(email);\n+\t\t\tif (!emailMatcher.matches())\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, group, \"Email \" + email + \" is not in correct form.\");\n+\t\t}\n+\n+\t\t//check for duplicities\n+\t\tif (hasDuplicate(emails)) {\n+\t\t\tthrow new WrongAttributeValueException(attribute, group, \"duplicate values\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) emails = new ArrayList<>();\n+\t\t//at least one value if adName is set\n+\t\tAttributesManagerBl am = sess.getPerunBl().getAttributesManagerBl();\n+\t\ttry {\n+\t\t\tif (emails.isEmpty()) {\n+\t\t\t\tAttribute adName = am.getAttribute(sess, group, ADNAME_ATTRIBUTE);\n+\t\t\t\tif (adName.getValue() != null) {\n+\t\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, adName, group, null, group, null, \"at least one email must be defined\");\n+\t\t\t\t}\n+\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e.getMessage(), e);\n+\t\t}\n+\n+\t\t//check for duplicities among all members and groups\n+\t\tAttributesManagerBl attributesManagerBl = sess.getPerunBl().getAttributesManagerBl();\n+\t\tSet<Integer> setOfGroupsDefinedByAttribute = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, attribute).stream().map(Pair::getLeft).collect(Collectors.toSet());\n+\t\tsetOfGroupsDefinedByAttribute.remove(group.getId());\n+\n+\t\tif (!setOfGroupsDefinedByAttribute.isEmpty()) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, attribute, group, null, \"some of the email addresses are already assigned to the following group pairs: \" + setOfGroupsDefinedByAttribute);\n+\t\t}\n+\t\tAttribute memberO365EmailAddresses = new Attribute(new urn_perun_member_attribute_def_def_o365EmailAddresses_mu().getAttributeDefinition());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f4cfe4ae7d801ff2a13ea2982a8a34ac6afa65b"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwODkxNg==", "bodyText": "Changed.", "url": "https://github.com/CESNET/perun/pull/2836#discussion_r466208916", "createdAt": "2020-08-06T07:44:34Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import com.google.common.collect.Lists;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.BeansUtils;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Pair;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.stream.Collectors;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.emailPattern;\n+import static cz.metacentrum.perun.core.impl.Utils.hasDuplicate;\n+\n+/**\n+ * Module for email addresses for Office365 at Masaryk University.\n+ * Implements checks for attribute urn:perun:group:attribute-def:def:o365EmailAddresses:o365mu.\n+ * <p>\n+ * Requirements:\n+ * <ul>\n+ * <li>type is list</li>\n+ * <li>all values are email addresses</li>\n+ * <li>must contain at least one value if urn:perun:group:attribute-def:def:adName:o365mu is set</li>\n+ * <li>no duplicates among the list values</li>\n+ * <li>no duplicates among all values of this attribute and all values of\n+ * attribute urn:perun:member:attribute-def:def:o365EmailAddresses:mu</li>\n+ * </ul>\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+public class urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu extends GroupAttributesModuleAbstract implements GroupAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.class);\n+\tstatic final String ADNAME_ATTRIBUTE = AttributesManager.NS_GROUP_ATTR_DEF + \":adName:o365mu\";\n+\n+\t@Override\n+\tpublic void checkAttributeSyntax(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongAttributeValueException {\n+\t\tlog.trace(\"checkAttributeSyntax(group={},attribute={})\", group, attribute);\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) return;\n+\n+\t\t//check syntax of all values\n+\t\tfor (String email : emails) {\n+\t\t\tMatcher emailMatcher = emailPattern.matcher(email);\n+\t\t\tif (!emailMatcher.matches())\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, group, \"Email \" + email + \" is not in correct form.\");\n+\t\t}\n+\n+\t\t//check for duplicities\n+\t\tif (hasDuplicate(emails)) {\n+\t\t\tthrow new WrongAttributeValueException(attribute, group, \"duplicate values\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) emails = new ArrayList<>();\n+\t\t//at least one value if adName is set\n+\t\tAttributesManagerBl am = sess.getPerunBl().getAttributesManagerBl();\n+\t\ttry {\n+\t\t\tif (emails.isEmpty()) {\n+\t\t\t\tAttribute adName = am.getAttribute(sess, group, ADNAME_ATTRIBUTE);\n+\t\t\t\tif (adName.getValue() != null) {\n+\t\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, adName, group, null, group, null, \"at least one email must be defined\");\n+\t\t\t\t}\n+\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e.getMessage(), e);\n+\t\t}\n+\n+\t\t//check for duplicities among all members and groups\n+\t\tAttributesManagerBl attributesManagerBl = sess.getPerunBl().getAttributesManagerBl();\n+\t\tSet<Integer> setOfGroupsDefinedByAttribute = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, attribute).stream().map(Pair::getLeft).collect(Collectors.toSet());\n+\t\tsetOfGroupsDefinedByAttribute.remove(group.getId());\n+\n+\t\tif (!setOfGroupsDefinedByAttribute.isEmpty()) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, attribute, group, null, \"some of the email addresses are already assigned to the following group pairs: \" + setOfGroupsDefinedByAttribute);\n+\t\t}\n+\t\tAttribute memberO365EmailAddresses = new Attribute(new urn_perun_member_attribute_def_def_o365EmailAddresses_mu().getAttributeDefinition());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1MzUzMw=="}, "originalCommit": {"oid": "5f4cfe4ae7d801ff2a13ea2982a8a34ac6afa65b"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTYxNTU4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNTozMjoyM1rOG8j4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo0NDozN1rOG8nIsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1NTcwMg==", "bodyText": "If the attribute will be unique, we don't have to check uniqueness through the same attribute, since its checked on inserting the value.", "url": "https://github.com/CESNET/perun/pull/2836#discussion_r466155702", "createdAt": "2020-08-06T05:32:23Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import com.google.common.collect.Lists;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.BeansUtils;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Pair;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.stream.Collectors;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.emailPattern;\n+import static cz.metacentrum.perun.core.impl.Utils.hasDuplicate;\n+\n+/**\n+ * Module for email addresses for Office365 at Masaryk University.\n+ * Implements checks for attribute urn:perun:group:attribute-def:def:o365EmailAddresses:o365mu.\n+ * <p>\n+ * Requirements:\n+ * <ul>\n+ * <li>type is list</li>\n+ * <li>all values are email addresses</li>\n+ * <li>must contain at least one value if urn:perun:group:attribute-def:def:adName:o365mu is set</li>\n+ * <li>no duplicates among the list values</li>\n+ * <li>no duplicates among all values of this attribute and all values of\n+ * attribute urn:perun:member:attribute-def:def:o365EmailAddresses:mu</li>\n+ * </ul>\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+public class urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu extends GroupAttributesModuleAbstract implements GroupAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.class);\n+\tstatic final String ADNAME_ATTRIBUTE = AttributesManager.NS_GROUP_ATTR_DEF + \":adName:o365mu\";\n+\n+\t@Override\n+\tpublic void checkAttributeSyntax(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongAttributeValueException {\n+\t\tlog.trace(\"checkAttributeSyntax(group={},attribute={})\", group, attribute);\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) return;\n+\n+\t\t//check syntax of all values\n+\t\tfor (String email : emails) {\n+\t\t\tMatcher emailMatcher = emailPattern.matcher(email);\n+\t\t\tif (!emailMatcher.matches())\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, group, \"Email \" + email + \" is not in correct form.\");\n+\t\t}\n+\n+\t\t//check for duplicities\n+\t\tif (hasDuplicate(emails)) {\n+\t\t\tthrow new WrongAttributeValueException(attribute, group, \"duplicate values\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) emails = new ArrayList<>();\n+\t\t//at least one value if adName is set\n+\t\tAttributesManagerBl am = sess.getPerunBl().getAttributesManagerBl();\n+\t\ttry {\n+\t\t\tif (emails.isEmpty()) {\n+\t\t\t\tAttribute adName = am.getAttribute(sess, group, ADNAME_ATTRIBUTE);\n+\t\t\t\tif (adName.getValue() != null) {\n+\t\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, adName, group, null, group, null, \"at least one email must be defined\");\n+\t\t\t\t}\n+\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e.getMessage(), e);\n+\t\t}\n+\n+\t\t//check for duplicities among all members and groups\n+\t\tAttributesManagerBl attributesManagerBl = sess.getPerunBl().getAttributesManagerBl();\n+\t\tSet<Integer> setOfGroupsDefinedByAttribute = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, attribute).stream().map(Pair::getLeft).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f4cfe4ae7d801ff2a13ea2982a8a34ac6afa65b"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwODk0NQ==", "bodyText": "Yes, this is not needed here. Only members check against this attribute.", "url": "https://github.com/CESNET/perun/pull/2836#discussion_r466208945", "createdAt": "2020-08-06T07:44:37Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import com.google.common.collect.Lists;\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.BeansUtils;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Pair;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.bl.AttributesManagerBl;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleImplApi;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.stream.Collectors;\n+\n+import static cz.metacentrum.perun.core.impl.Utils.emailPattern;\n+import static cz.metacentrum.perun.core.impl.Utils.hasDuplicate;\n+\n+/**\n+ * Module for email addresses for Office365 at Masaryk University.\n+ * Implements checks for attribute urn:perun:group:attribute-def:def:o365EmailAddresses:o365mu.\n+ * <p>\n+ * Requirements:\n+ * <ul>\n+ * <li>type is list</li>\n+ * <li>all values are email addresses</li>\n+ * <li>must contain at least one value if urn:perun:group:attribute-def:def:adName:o365mu is set</li>\n+ * <li>no duplicates among the list values</li>\n+ * <li>no duplicates among all values of this attribute and all values of\n+ * attribute urn:perun:member:attribute-def:def:o365EmailAddresses:mu</li>\n+ * </ul>\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+public class urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu extends GroupAttributesModuleAbstract implements GroupAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_group_attribute_def_def_o365EmailAddresses_o365mu.class);\n+\tstatic final String ADNAME_ATTRIBUTE = AttributesManager.NS_GROUP_ATTR_DEF + \":adName:o365mu\";\n+\n+\t@Override\n+\tpublic void checkAttributeSyntax(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongAttributeValueException {\n+\t\tlog.trace(\"checkAttributeSyntax(group={},attribute={})\", group, attribute);\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) return;\n+\n+\t\t//check syntax of all values\n+\t\tfor (String email : emails) {\n+\t\t\tMatcher emailMatcher = emailPattern.matcher(email);\n+\t\t\tif (!emailMatcher.matches())\n+\t\t\t\tthrow new WrongAttributeValueException(attribute, group, \"Email \" + email + \" is not in correct form.\");\n+\t\t}\n+\n+\t\t//check for duplicities\n+\t\tif (hasDuplicate(emails)) {\n+\t\t\tthrow new WrongAttributeValueException(attribute, group, \"duplicate values\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\tList<String> emails = attribute.valueAsList();\n+\n+\t\tif (emails == null) emails = new ArrayList<>();\n+\t\t//at least one value if adName is set\n+\t\tAttributesManagerBl am = sess.getPerunBl().getAttributesManagerBl();\n+\t\ttry {\n+\t\t\tif (emails.isEmpty()) {\n+\t\t\t\tAttribute adName = am.getAttribute(sess, group, ADNAME_ATTRIBUTE);\n+\t\t\t\tif (adName.getValue() != null) {\n+\t\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, adName, group, null, group, null, \"at least one email must be defined\");\n+\t\t\t\t}\n+\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException e) {\n+\t\t\tthrow new InternalErrorException(e.getMessage(), e);\n+\t\t}\n+\n+\t\t//check for duplicities among all members and groups\n+\t\tAttributesManagerBl attributesManagerBl = sess.getPerunBl().getAttributesManagerBl();\n+\t\tSet<Integer> setOfGroupsDefinedByAttribute = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, attribute).stream().map(Pair::getLeft).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1NTcwMg=="}, "originalCommit": {"oid": "5f4cfe4ae7d801ff2a13ea2982a8a34ac6afa65b"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjEzMzgyOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_adName_o365mu.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODoyODo0MVrOG8ouIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToyMjozM1rOG8q7QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIzNDkxNQ==", "bodyText": "NIT: I know this is written this way because you have copied it but it could be written using streams.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tMap<Integer, Set<Resource>> mapOfResourcesByFacility = new HashMap<>();\n          \n          \n            \n            \t\tfor (Resource resource: sess.getPerunBl().getResourcesManagerBl().getAssignedResources(sess, group)) {\n          \n          \n            \n            \t\t\tif (!mapOfResourcesByFacility.containsKey(resource.getFacilityId())) {\n          \n          \n            \n            \t\t\t\tSet<Resource> setOfResourceWithSameFacilityId = new HashSet<>();\n          \n          \n            \n            \t\t\t\tsetOfResourceWithSameFacilityId.add(resource);\n          \n          \n            \n            \t\t\t\tmapOfResourcesByFacility.put(resource.getFacilityId(), setOfResourceWithSameFacilityId);\n          \n          \n            \n            \t\t\t} else {\n          \n          \n            \n            \t\t\t\tmapOfResourcesByFacility.get(resource.getFacilityId()).add(resource);\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tMap<Integer, Set<Resource>> mapOfResourcesByFacility = sess.getPerunBl().getResourcesManagerBl()\n          \n          \n            \n            \t\t\t.getAssignedResources(sess, group).stream()\n          \n          \n            \n            \t\t\t.collect(groupingBy(Resource::getFacilityId, toSet()));", "url": "https://github.com/CESNET/perun/pull/2836#discussion_r466234915", "createdAt": "2020-08-06T08:28:41Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_adName_o365mu.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Resource;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.ConsistencyErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleImplApi;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * AD Name module\n+ *\n+ * Only one group can have this name set for one facility no matter the OU.\n+ * If group is assigned to more than 1 resource with OU set on the same facility, this state is forbidden.\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+public class urn_perun_group_attribute_def_def_adName_o365mu extends GroupAttributesModuleAbstract implements GroupAttributesModuleImplApi {\n+\n+\tprivate static final String A_R_D_AD_OU_NAME = AttributesManager.NS_RESOURCE_ATTR_DEF + \":adOuName\";\n+\n+\tprivate static final Pattern pattern = Pattern.compile(\"(\\\\w|-|\\\\.)*\");\n+\n+\t@Override\n+\tpublic void checkAttributeSyntax(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongAttributeValueException {\n+\t\t//Attribute can be null\n+\t\tif (attribute.getValue() == null) return;\n+\n+\t\tif (!pattern.matcher(attribute.valueAsString()).matches()) {\n+\t\t\tthrow new WrongAttributeValueException(attribute, \"Invalid attribute adName value. It should contain only letters, digits, hyphens, underscores or dots.\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\t//Attribute can be null\n+\t\tif(attribute.getValue() == null) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t//Prepare map where keys are facilityIds (to be able to group them together) and values are all resources under facilityId\n+\t\tMap<Integer, Set<Resource>> mapOfResourcesByFacility = new HashMap<>();\n+\t\tfor (Resource resource: sess.getPerunBl().getResourcesManagerBl().getAssignedResources(sess, group)) {\n+\t\t\tif (!mapOfResourcesByFacility.containsKey(resource.getFacilityId())) {\n+\t\t\t\tSet<Resource> setOfResourceWithSameFacilityId = new HashSet<>();\n+\t\t\t\tsetOfResourceWithSameFacilityId.add(resource);\n+\t\t\t\tmapOfResourcesByFacility.put(resource.getFacilityId(), setOfResourceWithSameFacilityId);\n+\t\t\t} else {\n+\t\t\t\tmapOfResourcesByFacility.get(resource.getFacilityId()).add(resource);\n+\t\t\t}\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d451bbdce88793d6e30c6023357c1c1ef1e1c3b"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI3MTA0MA==", "bodyText": "I like it. Changed. Thank you.", "url": "https://github.com/CESNET/perun/pull/2836#discussion_r466271040", "createdAt": "2020-08-06T09:22:33Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_group_attribute_def_def_adName_o365mu.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Resource;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.ConsistencyErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.GroupAttributesModuleImplApi;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * AD Name module\n+ *\n+ * Only one group can have this name set for one facility no matter the OU.\n+ * If group is assigned to more than 1 resource with OU set on the same facility, this state is forbidden.\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+public class urn_perun_group_attribute_def_def_adName_o365mu extends GroupAttributesModuleAbstract implements GroupAttributesModuleImplApi {\n+\n+\tprivate static final String A_R_D_AD_OU_NAME = AttributesManager.NS_RESOURCE_ATTR_DEF + \":adOuName\";\n+\n+\tprivate static final Pattern pattern = Pattern.compile(\"(\\\\w|-|\\\\.)*\");\n+\n+\t@Override\n+\tpublic void checkAttributeSyntax(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongAttributeValueException {\n+\t\t//Attribute can be null\n+\t\tif (attribute.getValue() == null) return;\n+\n+\t\tif (!pattern.matcher(attribute.valueAsString()).matches()) {\n+\t\t\tthrow new WrongAttributeValueException(attribute, \"Invalid attribute adName value. It should contain only letters, digits, hyphens, underscores or dots.\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\t//Attribute can be null\n+\t\tif(attribute.getValue() == null) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t//Prepare map where keys are facilityIds (to be able to group them together) and values are all resources under facilityId\n+\t\tMap<Integer, Set<Resource>> mapOfResourcesByFacility = new HashMap<>();\n+\t\tfor (Resource resource: sess.getPerunBl().getResourcesManagerBl().getAssignedResources(sess, group)) {\n+\t\t\tif (!mapOfResourcesByFacility.containsKey(resource.getFacilityId())) {\n+\t\t\t\tSet<Resource> setOfResourceWithSameFacilityId = new HashSet<>();\n+\t\t\t\tsetOfResourceWithSameFacilityId.add(resource);\n+\t\t\t\tmapOfResourcesByFacility.put(resource.getFacilityId(), setOfResourceWithSameFacilityId);\n+\t\t\t} else {\n+\t\t\t\tmapOfResourcesByFacility.get(resource.getFacilityId()).add(resource);\n+\t\t\t}\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIzNDkxNQ=="}, "originalCommit": {"oid": "4d451bbdce88793d6e30c6023357c1c1ef1e1c3b"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2387, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}