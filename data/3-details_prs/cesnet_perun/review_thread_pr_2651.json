{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDU0MDU3", "number": 2651, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOToyNToxOVrODuTHHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOToyNzo1OVrODuTKzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODc0MjA0OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_resource_attribute_def_virt_assignedGroups.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOToyNToxOVrOGANk4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOTo0MjoxOFrOGAOKpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg3NTYxNw==", "bodyText": "Why ? We retrieve value from the object Vo and do not call getAttribute() on such core attribute.", "url": "https://github.com/CESNET/perun/pull/2651#discussion_r402875617", "createdAt": "2020-04-03T09:25:19Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_resource_attribute_def_virt_assignedGroups.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Resource;\n+import cz.metacentrum.perun.core.api.Vo;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.ResourceVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.ResourceVirtualAttributesModuleImplApi;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Compute value of all groups assigned to the Resource and return list of their names.\n+ * Name of group in the list is like '[VO_SHORT_NAME]:[PARENT_GROUP_NAME]:[GROUP_NAME]'\n+ *\n+ * If there is attribute 'resource:def:isAssignedWithSubgroups' set to true on the Resource, it will add all subgroups\n+ * of assigned groups too.\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_resource_attribute_def_virt_assignedGroups extends ResourceVirtualAttributesModuleAbstract implements ResourceVirtualAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_resource_attribute_def_virt_assignedGroups.class);\n+\tprivate static final String A_R_isAssignedWithSubgroups = AttributesManager.NS_RESOURCE_ATTR_DEF + \":isAssignedWithSubgroups\";\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, Resource resource, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSet<String> allUniqueGroupNames = new HashSet<>();\n+\n+\t\tVo vo = sess.getPerunBl().getResourcesManagerBl().getVo(sess, resource);\n+\t\tList<Group> assignedGroups = sess.getPerunBl().getResourcesManagerBl().getAssignedGroups(sess, resource);\n+\n+\t\tboolean isAssignedWithSubgroups;\n+\t\ttry {\n+\t\t\tAttribute isAssignedWithSubgroupsAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, A_R_isAssignedWithSubgroups);\n+\t\t\tif(isAssignedWithSubgroupsAttribute.getValue() == null) {\n+\t\t\t\tisAssignedWithSubgroups = false;\n+\t\t\t} else {\n+\t\t\t\tisAssignedWithSubgroups = isAssignedWithSubgroupsAttribute.valueAsBoolean();\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException ex) {\n+\t\t\tlog.debug(\"There is missing definition of attribute {}\", A_R_isAssignedWithSubgroups);\n+\t\t\tisAssignedWithSubgroups = false;\n+\t\t} catch (WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\n+\t\tfor(Group assignedGroup: assignedGroups) {\n+\t\t\tallUniqueGroupNames.add(computeGroupName(vo, assignedGroup));\n+\t\t\tif(isAssignedWithSubgroups) {\n+\t\t\t\tfor(Group subgroup: sess.getPerunBl().getGroupsManagerBl().getAllSubGroups(sess, assignedGroup)) {\n+\t\t\t\t\tallUniqueGroupNames.add(computeGroupName(vo, subgroup));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\tattribute.setValue(new ArrayList(allUniqueGroupNames));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t/**\n+\t * Return group name like '[VO_SHORT_NAME]:[GROUP_NAME]'\n+\t *\n+\t * @param vo to get short name from\n+\t * @param group to get name from\n+\t * @return computed group name\n+\t */\n+\tprivate String computeGroupName(Vo vo, Group group) {\n+\t\treturn vo.getShortName() + \":\" + group.getName();\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getStrongDependencies() {\n+\t\tList<String> strongDependencies = new ArrayList<>();\n+\t\tstrongDependencies.add(AttributesManager.NS_VO_ATTR_CORE + \":shortName\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14b3c9345728b28da9c5b05170fcab812b6f8e8a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4NTI4NA==", "bodyText": "Copy&Paste mistake. Fixed. :)", "url": "https://github.com/CESNET/perun/pull/2651#discussion_r402885284", "createdAt": "2020-04-03T09:42:18Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_resource_attribute_def_virt_assignedGroups.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Resource;\n+import cz.metacentrum.perun.core.api.Vo;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.ResourceVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.ResourceVirtualAttributesModuleImplApi;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Compute value of all groups assigned to the Resource and return list of their names.\n+ * Name of group in the list is like '[VO_SHORT_NAME]:[PARENT_GROUP_NAME]:[GROUP_NAME]'\n+ *\n+ * If there is attribute 'resource:def:isAssignedWithSubgroups' set to true on the Resource, it will add all subgroups\n+ * of assigned groups too.\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_resource_attribute_def_virt_assignedGroups extends ResourceVirtualAttributesModuleAbstract implements ResourceVirtualAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_resource_attribute_def_virt_assignedGroups.class);\n+\tprivate static final String A_R_isAssignedWithSubgroups = AttributesManager.NS_RESOURCE_ATTR_DEF + \":isAssignedWithSubgroups\";\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, Resource resource, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSet<String> allUniqueGroupNames = new HashSet<>();\n+\n+\t\tVo vo = sess.getPerunBl().getResourcesManagerBl().getVo(sess, resource);\n+\t\tList<Group> assignedGroups = sess.getPerunBl().getResourcesManagerBl().getAssignedGroups(sess, resource);\n+\n+\t\tboolean isAssignedWithSubgroups;\n+\t\ttry {\n+\t\t\tAttribute isAssignedWithSubgroupsAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, A_R_isAssignedWithSubgroups);\n+\t\t\tif(isAssignedWithSubgroupsAttribute.getValue() == null) {\n+\t\t\t\tisAssignedWithSubgroups = false;\n+\t\t\t} else {\n+\t\t\t\tisAssignedWithSubgroups = isAssignedWithSubgroupsAttribute.valueAsBoolean();\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException ex) {\n+\t\t\tlog.debug(\"There is missing definition of attribute {}\", A_R_isAssignedWithSubgroups);\n+\t\t\tisAssignedWithSubgroups = false;\n+\t\t} catch (WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\n+\t\tfor(Group assignedGroup: assignedGroups) {\n+\t\t\tallUniqueGroupNames.add(computeGroupName(vo, assignedGroup));\n+\t\t\tif(isAssignedWithSubgroups) {\n+\t\t\t\tfor(Group subgroup: sess.getPerunBl().getGroupsManagerBl().getAllSubGroups(sess, assignedGroup)) {\n+\t\t\t\t\tallUniqueGroupNames.add(computeGroupName(vo, subgroup));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\tattribute.setValue(new ArrayList(allUniqueGroupNames));\n+\n+\t\treturn attribute;\n+\t}\n+\n+\t/**\n+\t * Return group name like '[VO_SHORT_NAME]:[GROUP_NAME]'\n+\t *\n+\t * @param vo to get short name from\n+\t * @param group to get name from\n+\t * @return computed group name\n+\t */\n+\tprivate String computeGroupName(Vo vo, Group group) {\n+\t\treturn vo.getShortName() + \":\" + group.getName();\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getStrongDependencies() {\n+\t\tList<String> strongDependencies = new ArrayList<>();\n+\t\tstrongDependencies.add(AttributesManager.NS_VO_ATTR_CORE + \":shortName\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg3NTYxNw=="}, "originalCommit": {"oid": "14b3c9345728b28da9c5b05170fcab812b6f8e8a"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODc1MTUwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_resource_attribute_def_virt_assignedGroups.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOToyNzo1OVrOGANq5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOTo0MjoyNlrOGAOK9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg3NzE1Nw==", "bodyText": "Maybe we should sort list of group names to ensure consistent value is returned on each request. I think we can use SortedSet to do it on the fly.", "url": "https://github.com/CESNET/perun/pull/2651#discussion_r402877157", "createdAt": "2020-04-03T09:27:59Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_resource_attribute_def_virt_assignedGroups.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Resource;\n+import cz.metacentrum.perun.core.api.Vo;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.ResourceVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.ResourceVirtualAttributesModuleImplApi;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Compute value of all groups assigned to the Resource and return list of their names.\n+ * Name of group in the list is like '[VO_SHORT_NAME]:[PARENT_GROUP_NAME]:[GROUP_NAME]'\n+ *\n+ * If there is attribute 'resource:def:isAssignedWithSubgroups' set to true on the Resource, it will add all subgroups\n+ * of assigned groups too.\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_resource_attribute_def_virt_assignedGroups extends ResourceVirtualAttributesModuleAbstract implements ResourceVirtualAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_resource_attribute_def_virt_assignedGroups.class);\n+\tprivate static final String A_R_isAssignedWithSubgroups = AttributesManager.NS_RESOURCE_ATTR_DEF + \":isAssignedWithSubgroups\";\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, Resource resource, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSet<String> allUniqueGroupNames = new HashSet<>();\n+\n+\t\tVo vo = sess.getPerunBl().getResourcesManagerBl().getVo(sess, resource);\n+\t\tList<Group> assignedGroups = sess.getPerunBl().getResourcesManagerBl().getAssignedGroups(sess, resource);\n+\n+\t\tboolean isAssignedWithSubgroups;\n+\t\ttry {\n+\t\t\tAttribute isAssignedWithSubgroupsAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, A_R_isAssignedWithSubgroups);\n+\t\t\tif(isAssignedWithSubgroupsAttribute.getValue() == null) {\n+\t\t\t\tisAssignedWithSubgroups = false;\n+\t\t\t} else {\n+\t\t\t\tisAssignedWithSubgroups = isAssignedWithSubgroupsAttribute.valueAsBoolean();\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException ex) {\n+\t\t\tlog.debug(\"There is missing definition of attribute {}\", A_R_isAssignedWithSubgroups);\n+\t\t\tisAssignedWithSubgroups = false;\n+\t\t} catch (WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\n+\t\tfor(Group assignedGroup: assignedGroups) {\n+\t\t\tallUniqueGroupNames.add(computeGroupName(vo, assignedGroup));\n+\t\t\tif(isAssignedWithSubgroups) {\n+\t\t\t\tfor(Group subgroup: sess.getPerunBl().getGroupsManagerBl().getAllSubGroups(sess, assignedGroup)) {\n+\t\t\t\t\tallUniqueGroupNames.add(computeGroupName(vo, subgroup));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\tattribute.setValue(new ArrayList(allUniqueGroupNames));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14b3c9345728b28da9c5b05170fcab812b6f8e8a"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4NTM2Ng==", "bodyText": "Added.", "url": "https://github.com/CESNET/perun/pull/2651#discussion_r402885366", "createdAt": "2020-04-03T09:42:26Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_resource_attribute_def_virt_assignedGroups.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Group;\n+import cz.metacentrum.perun.core.api.Resource;\n+import cz.metacentrum.perun.core.api.Vo;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.ResourceVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.ResourceVirtualAttributesModuleImplApi;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.SkipValueCheckDuringDependencyCheck;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Compute value of all groups assigned to the Resource and return list of their names.\n+ * Name of group in the list is like '[VO_SHORT_NAME]:[PARENT_GROUP_NAME]:[GROUP_NAME]'\n+ *\n+ * If there is attribute 'resource:def:isAssignedWithSubgroups' set to true on the Resource, it will add all subgroups\n+ * of assigned groups too.\n+ *\n+ * @author Michal Stava &lt;stavamichal@gmail.com&gt;\n+ */\n+@SkipValueCheckDuringDependencyCheck\n+public class urn_perun_resource_attribute_def_virt_assignedGroups extends ResourceVirtualAttributesModuleAbstract implements ResourceVirtualAttributesModuleImplApi {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_resource_attribute_def_virt_assignedGroups.class);\n+\tprivate static final String A_R_isAssignedWithSubgroups = AttributesManager.NS_RESOURCE_ATTR_DEF + \":isAssignedWithSubgroups\";\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, Resource resource, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tSet<String> allUniqueGroupNames = new HashSet<>();\n+\n+\t\tVo vo = sess.getPerunBl().getResourcesManagerBl().getVo(sess, resource);\n+\t\tList<Group> assignedGroups = sess.getPerunBl().getResourcesManagerBl().getAssignedGroups(sess, resource);\n+\n+\t\tboolean isAssignedWithSubgroups;\n+\t\ttry {\n+\t\t\tAttribute isAssignedWithSubgroupsAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, A_R_isAssignedWithSubgroups);\n+\t\t\tif(isAssignedWithSubgroupsAttribute.getValue() == null) {\n+\t\t\t\tisAssignedWithSubgroups = false;\n+\t\t\t} else {\n+\t\t\t\tisAssignedWithSubgroups = isAssignedWithSubgroupsAttribute.valueAsBoolean();\n+\t\t\t}\n+\t\t} catch (AttributeNotExistsException ex) {\n+\t\t\tlog.debug(\"There is missing definition of attribute {}\", A_R_isAssignedWithSubgroups);\n+\t\t\tisAssignedWithSubgroups = false;\n+\t\t} catch (WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\n+\t\tfor(Group assignedGroup: assignedGroups) {\n+\t\t\tallUniqueGroupNames.add(computeGroupName(vo, assignedGroup));\n+\t\t\tif(isAssignedWithSubgroups) {\n+\t\t\t\tfor(Group subgroup: sess.getPerunBl().getGroupsManagerBl().getAllSubGroups(sess, assignedGroup)) {\n+\t\t\t\t\tallUniqueGroupNames.add(computeGroupName(vo, subgroup));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\tattribute.setValue(new ArrayList(allUniqueGroupNames));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg3NzE1Nw=="}, "originalCommit": {"oid": "14b3c9345728b28da9c5b05170fcab812b6f8e8a"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2000, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}