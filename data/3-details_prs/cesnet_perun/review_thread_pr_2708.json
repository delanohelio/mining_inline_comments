{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5OTMyMDc0", "number": 2708, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzozOTozM1rOD9rJJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToxMTowMFrOD-6epQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTk2NTgxOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzozOTozM1rOGXTorQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOToyMDoxMlrOGXXiMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5MjE0MQ==", "bodyText": "I am afraid this is little confusing. There is no object Group so from the name, you can't say what does it mean. It is not really \"not expired in any group\". Probably more accurate is \"it is expired in all assigned groups\". Maybe \"NotExpiredOnResource\" would be better, but I am not sure.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r427092141", "createdAt": "2020-05-19T07:39:33Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "diffHunk": "@@ -272,7 +272,7 @@\n \t * @return list of users\n \t * @throws InternalErrorException\n \t */\n-\tList<User> getAllowedUsersNotExpired(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;\n+\tList<User> getAllowedUsersNotExpiredInGroup(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "554814f244d40e7bdbf56eca2c344e66021eece9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0MDU0Ng==", "bodyText": "Well, we have only two expirations, in the Vo and the Group. If we state only \"NotExpired\", I expect it to be VO expiration, since its historically more used, but its not the case of this method.\nWe do not expire on the Resource or Facility. I'm not aware we are using this term anywhere else. Also Resource is not between method params either.\nThe correct version seems to be rather long, since you have to specify, that by expired you mean group expiration and that you return all users, which are connected/assigned through at least one group, in which they are not expired and that the member as a whole is allowed.\nHow about getAllowedUsersWithoutExpiredIn(Assigned)Groups or getAllowedUsersOnlyForValidGroups or getAllowedUsers(Throught/Of)NotExpiredGroups ?\nGenerally, I don't think that we can always match all conditions to the method name for every method. When in doubt, user should read the javadoc, which is more explanatory.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r427140546", "createdAt": "2020-05-19T08:56:15Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "diffHunk": "@@ -272,7 +272,7 @@\n \t * @return list of users\n \t * @throws InternalErrorException\n \t */\n-\tList<User> getAllowedUsersNotExpired(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;\n+\tList<User> getAllowedUsersNotExpiredInGroup(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5MjE0MQ=="}, "originalCommit": {"oid": "554814f244d40e7bdbf56eca2c344e66021eece9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1NDQwOQ==", "bodyText": "We should probably create a new way how to say:\n\nallowed in VO\nvalid in group\n\nSomething like we said in user life cycle - Active. For now we can let it this way, but in the future, we should consider something like getActiveUsers instead of this.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r427154409", "createdAt": "2020-05-19T09:17:32Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "diffHunk": "@@ -272,7 +272,7 @@\n \t * @return list of users\n \t * @throws InternalErrorException\n \t */\n-\tList<User> getAllowedUsersNotExpired(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;\n+\tList<User> getAllowedUsersNotExpiredInGroup(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5MjE0MQ=="}, "originalCommit": {"oid": "554814f244d40e7bdbf56eca2c344e66021eece9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1NjAxNw==", "bodyText": "You are definitely right on that, but we are not there yet with the user life-cycle :-(", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r427156017", "createdAt": "2020-05-19T09:20:12Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "diffHunk": "@@ -272,7 +272,7 @@\n \t * @return list of users\n \t * @throws InternalErrorException\n \t */\n-\tList<User> getAllowedUsersNotExpired(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;\n+\tList<User> getAllowedUsersNotExpiredInGroup(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5MjE0MQ=="}, "originalCommit": {"oid": "554814f244d40e7bdbf56eca2c344e66021eece9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDI4OTU5OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoxMjo1MFrOGX-Jag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzozMDo0N1rOGX-tZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4ODY1MA==", "bodyText": "Peter B. said in different commit  #2702 that this exception is not thrown for jdbc.query and you said he is right. So there is probably the same problem in every method with jdbc.query.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r427788650", "createdAt": "2020-05-20T07:12:50Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "diffHunk": "@@ -1378,4 +1387,73 @@ public void deleteSponsorLinks(PerunSession sess, User sponsor) throws InternalE\n \t\t}\n \n \t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, User user) throws InternalErrorException {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +\n+\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id \" +\n+\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\" where members.user_id=?\", RESOURCE_MAPPER, user.getId());\n+\t\t} catch (EmptyResultDataAccessException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92315326fbb749935e6882d77fee4555e0b4496a"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5Nzg2MQ==", "bodyText": "I have big cleanup planned for the whole impl layer, but you are right. I removed this catch branch from the newly added methods, including throws declaration for the InternalErrorException, which is runtime for some time.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r427797861", "createdAt": "2020-05-20T07:30:47Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "diffHunk": "@@ -1378,4 +1387,73 @@ public void deleteSponsorLinks(PerunSession sess, User sponsor) throws InternalE\n \t\t}\n \n \t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, User user) throws InternalErrorException {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +\n+\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id \" +\n+\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\" where members.user_id=?\", RESOURCE_MAPPER, user.getId());\n+\t\t} catch (EmptyResultDataAccessException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc4ODY1MA=="}, "originalCommit": {"oid": "92315326fbb749935e6882d77fee4555e0b4496a"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Mjc2MjYyOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1Mjo1NFrOGZRbqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTo0MDoyMlrOGZUIqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1MzE5NQ==", "bodyText": "I prefer name getAllowedUsersNotExpiredInGroups since the user cannot be expired in any of the groups as it is stated in the Javadoc.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429153195", "createdAt": "2020-05-22T09:52:54Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "diffHunk": "@@ -268,7 +267,7 @@\n \t * @return list of users\n \t * @throws InternalErrorException\n \t */\n-\tList<User> getAllowedUsersNotExpired(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;\n+\tList<User> getAllowedUsersNotExpiredInGroup(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5NzQ4MA==", "bodyText": "I renamed the method here and also both methods in ResourcesManager.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429197480", "createdAt": "2020-05-22T11:40:22Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/FacilitiesManagerBl.java", "diffHunk": "@@ -268,7 +267,7 @@\n \t * @return list of users\n \t * @throws InternalErrorException\n \t */\n-\tList<User> getAllowedUsersNotExpired(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;\n+\tList<User> getAllowedUsersNotExpiredInGroup(PerunSession sess, Facility facility, Vo specificVo, Service specificService) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1MzE5NQ=="}, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Mjc2NzQ1OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/ResourcesManagerBl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1NDo0NFrOGZRe-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTo0MTowOVrOGZUJ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1NDA0Mg==", "bodyText": "Signature of InternalErrorException is not necessary :)", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429154042", "createdAt": "2020-05-22T09:54:44Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/ResourcesManagerBl.java", "diffHunk": "@@ -335,6 +335,17 @@\n \t */\n \tvoid removeGroupFromResources(PerunSession perunSession, Group group, List<Resource> resources) throws InternalErrorException, GroupNotDefinedOnResourceException, GroupAlreadyRemovedFromResourceException;\n \n+\t/**\n+\t * Returns all users assigned to the resource.\n+\t *\n+\t * @param perunSession\n+\t * @param resource\n+\t * @return list of users assigned to the resource\n+\t *\n+\t * @throws InternalErrorException\n+\t */\n+\tList<User> getAssignedUsers(PerunSession perunSession, Resource resource) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5Nzc4Nw==", "bodyText": "I know, but I will clean up the whole Impl layer in own pull-request some times later.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429197787", "createdAt": "2020-05-22T11:41:09Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/bl/ResourcesManagerBl.java", "diffHunk": "@@ -335,6 +335,17 @@\n \t */\n \tvoid removeGroupFromResources(PerunSession perunSession, Group group, List<Resource> resources) throws InternalErrorException, GroupNotDefinedOnResourceException, GroupAlreadyRemovedFromResourceException;\n \n+\t/**\n+\t * Returns all users assigned to the resource.\n+\t *\n+\t * @param perunSession\n+\t * @param resource\n+\t * @return list of users assigned to the resource\n+\t *\n+\t * @throws InternalErrorException\n+\t */\n+\tList<User> getAssignedUsers(PerunSession perunSession, Resource resource) throws InternalErrorException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1NDA0Mg=="}, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjgzMDYwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDoxODo1MlrOGZSH9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTo0MToyOFrOGZUKSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NDUzNQ==", "bodyText": "It would be more readable if the first line was also split into more separate lines.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429164535", "createdAt": "2020-05-22T10:18:52Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "diffHunk": "@@ -1378,4 +1387,65 @@ public void deleteSponsorLinks(PerunSession sess, User sponsor) throws InternalE\n \t\t}\n \n \t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5Nzg5Nw==", "bodyText": "It was forgotten, now fixed.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429197897", "createdAt": "2020-05-22T11:41:28Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "diffHunk": "@@ -1378,4 +1387,65 @@ public void deleteSponsorLinks(PerunSession sess, User sponsor) throws InternalE\n \t\t}\n \n \t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NDUzNQ=="}, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjgzNDI2OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDoyMDoxNVrOGZSKWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTo0NDowOFrOGZUOsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NTE0Nw==", "bodyText": "Nit: you are adding extra space on each line break (it is happening also in another selects).", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429165147", "createdAt": "2020-05-22T10:20:15Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "diffHunk": "@@ -1378,4 +1387,65 @@ public void deleteSponsorLinks(PerunSession sess, User sponsor) throws InternalE\n \t\t}\n \n \t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +\n+\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id \" +\n+\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\" where members.user_id=?\", RESOURCE_MAPPER, user.getId());\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<Resource> getAllowedResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +\n+\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id \" +\n+\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\" where members.user_id=? and members.status!=? and members.status!=?\",\n+\t\t\t\t\tRESOURCE_MAPPER, user.getId(), String.valueOf(Status.INVALID.getCode()), String.valueOf(Status.DISABLED.getCode()));\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, Facility facility, User user) {\n+\t\ttry {\n+\t\t\treturn jdbc.query(\"select distinct \" + ResourcesManagerImpl.resourceMappingSelectQuery + \" from resources \"+\n+\t\t\t\t\t\t\t\" join groups_resources on groups_resources.resource_id=resources.id\" +\n+\t\t\t\t\t\t\t\" join groups_members on groups_members.group_id=groups_resources.group_id\" +\n+\t\t\t\t\t\t\t\" join members on members.id=groups_members.member_id\" +\n+\t\t\t\t\t\t\t\" where resources.facility_id=? and members.user_id=?\",\n+\t\t\t\t\tRESOURCE_MAPPER, facility.getId(), user.getId());\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<RichResource> getAssignedRichResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \", \" + VosManagerImpl.voMappingSelectQuery + \", \" +\n+\t\t\t\t\tFacilitiesManagerImpl.facilityMappingSelectQuery + \", \"+resourceTagMappingSelectQuery+\" from resources\" +\n+\t\t\t\t\t\" join vos on resources.vo_id=vos.id \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5OTAyNw==", "bodyText": "I prefer it before leaving space at the each line end, as we previously did. Its more visible and prevents modifying SQL the way it would fail (having no space between keywords).", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429199027", "createdAt": "2020-05-22T11:44:08Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/UsersManagerImpl.java", "diffHunk": "@@ -1378,4 +1387,65 @@ public void deleteSponsorLinks(PerunSession sess, User sponsor) throws InternalE\n \t\t}\n \n \t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +\n+\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id \" +\n+\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\" where members.user_id=?\", RESOURCE_MAPPER, user.getId());\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<Resource> getAllowedResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \" from resources join groups_resources on resources.id=groups_resources.resource_id \" +\n+\t\t\t\t\t\" join groups on groups_resources.group_id=groups.id\" +\n+\t\t\t\t\t\" join groups_members on groups.id=groups_members.group_id \" +\n+\t\t\t\t\t\" join members on groups_members.member_id=members.id \" +\n+\t\t\t\t\t\" where members.user_id=? and members.status!=? and members.status!=?\",\n+\t\t\t\t\tRESOURCE_MAPPER, user.getId(), String.valueOf(Status.INVALID.getCode()), String.valueOf(Status.DISABLED.getCode()));\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<Resource> getAssignedResources(PerunSession sess, Facility facility, User user) {\n+\t\ttry {\n+\t\t\treturn jdbc.query(\"select distinct \" + ResourcesManagerImpl.resourceMappingSelectQuery + \" from resources \"+\n+\t\t\t\t\t\t\t\" join groups_resources on groups_resources.resource_id=resources.id\" +\n+\t\t\t\t\t\t\t\" join groups_members on groups_members.group_id=groups_resources.group_id\" +\n+\t\t\t\t\t\t\t\" join members on members.id=groups_members.member_id\" +\n+\t\t\t\t\t\t\t\" where resources.facility_id=? and members.user_id=?\",\n+\t\t\t\t\tRESOURCE_MAPPER, facility.getId(), user.getId());\n+\t\t} catch (RuntimeException e) {\n+\t\t\tthrow new InternalErrorException(e);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<RichResource> getAssignedRichResources(PerunSession sess, User user) {\n+\t\ttry  {\n+\t\t\treturn jdbc.query(\"select distinct \" + resourceMappingSelectQuery + \", \" + VosManagerImpl.voMappingSelectQuery + \", \" +\n+\t\t\t\t\tFacilitiesManagerImpl.facilityMappingSelectQuery + \", \"+resourceTagMappingSelectQuery+\" from resources\" +\n+\t\t\t\t\t\" join vos on resources.vo_id=vos.id \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NTE0Nw=="}, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Mjk2NDIxOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToxMTowMFrOGZTcLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTo1MDo0NVrOGZUY-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4NjA5Mg==", "bodyText": "The formating of the SQL commands in the whole PR is much better than the previous, but I have some comments which you may consider if you like.\n\nIt would be better to make the indentation the same in each SQL command. For example, some of the indents after the first line have two extra tabs and some don't. Or some of the mappers start on a separate line and some don't.\nI would consider putting the \"from\"  clause on the separate line, because of the readability.\nMaybe even putting the \"select\" clause on the second line would help to align the indentation better, but I am not sure in this one.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429186092", "createdAt": "2020-05-22T11:11:00Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java", "diffHunk": "@@ -511,8 +534,9 @@ public void removeOwner(PerunSession sess, Facility facility, Owner owner) throw\n \n \t\t\t} else if (specificService != null) {\n \n-\t\t\t\treturn jdbc.query(\"select \" + ResourcesManagerImpl.resourceMappingSelectQuery + \" from resource_services join resources on \" +\n-\t\t\t\t\t\t\"resource_services.resource_id=resources.id where facility_id=? and service_id=?\",\n+\t\t\t\treturn jdbc.query(\"select \" + ResourcesManagerImpl.resourceMappingSelectQuery + \" from resource_services\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwMTY1OA==", "bodyText": "Thanks for the suggestions. We should agree on some kind of standard within our code for SQL queries in the core team. I would prefer cleaning up those SQL afterwards.\nI just want really simple queries to stay simple (eg. single line) and not to take 4-5 lines. For complex SQLs, more lines is better. I'm in favor of having \"from\" at the newline to.\nMoving \"select\" to the next line causes just more indentation to apply. We generally do not have newlines between braces.", "url": "https://github.com/CESNET/perun/pull/2708#discussion_r429201658", "createdAt": "2020-05-22T11:50:45Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/FacilitiesManagerImpl.java", "diffHunk": "@@ -511,8 +534,9 @@ public void removeOwner(PerunSession sess, Facility facility, Owner owner) throw\n \n \t\t\t} else if (specificService != null) {\n \n-\t\t\t\treturn jdbc.query(\"select \" + ResourcesManagerImpl.resourceMappingSelectQuery + \" from resource_services join resources on \" +\n-\t\t\t\t\t\t\"resource_services.resource_id=resources.id where facility_id=? and service_id=?\",\n+\t\t\t\treturn jdbc.query(\"select \" + ResourcesManagerImpl.resourceMappingSelectQuery + \" from resource_services\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4NjA5Mg=="}, "originalCommit": {"oid": "0f8a1f54c81b3ccfec63ee36941d87c15643e8b7"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2047, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}