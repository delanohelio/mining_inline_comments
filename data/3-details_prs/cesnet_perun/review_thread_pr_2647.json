{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NDYyOTQ4", "number": 2647, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1MDowN1rODtB8Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTowMTowMVrOEIUZ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTQ0MzM4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1MDowOFrOF-N2iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1MDowOFrOF-N2iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc4Mjk4NA==", "bodyText": "In the text there should be 'one of id ranges'.", "url": "https://github.com/CESNET/perun/pull/2647#discussion_r400782984", "createdAt": "2020-03-31T09:50:08Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -1085,24 +1085,24 @@ public User getUserFromMessage(PerunSessionImpl sess, String message) throws Int\n \t}\n \n \t@Override\n-\tpublic Map<Integer, Integer> checkAndConvertGIDRanges(Attribute gidRangesAttribute) throws InternalErrorException, WrongAttributeValueException {\n+\tpublic Map<Integer, Integer> checkAndConvertIDRanges(Attribute idRangesAttribute) throws InternalErrorException, WrongAttributeValueException {\n \t\t//Prepare structure for better working with GID Ranges\n \t\tMap<Integer, Integer> convertedRanges = new HashMap<>();\n \n \t\t//For null attribute throw an exception\n-\t\tif(gidRangesAttribute == null) throw new InternalErrorException(\"Can't get value from null attribute!\");\n+\t\tif(idRangesAttribute == null) throw new InternalErrorException(\"Can't get value from null attribute!\");\n \n-\t\tMap<String, String> gidRanges = (LinkedHashMap) gidRangesAttribute.getValue();\n+\t\tMap<String, String> idRanges = (LinkedHashMap) idRangesAttribute.getValue();\n \n \t\t//Return empty map if there is empty input of gidRanges in method parameters\n-\t\tif(gidRanges == null || gidRanges.isEmpty()) return convertedRanges;\n+\t\tif(idRanges == null || idRanges.isEmpty()) return convertedRanges;\n \n \t\t//Check every range if it is in correct format and it is valid range\n-\t\tfor(String minimumOfRange: gidRanges.keySet()) {\n+\t\tfor(String minimumOfRange: idRanges.keySet()) {\n \t\t\t//Check not null\n-\t\t\tif(minimumOfRange == null || minimumOfRange.isEmpty()) throw new WrongAttributeValueException(gidRangesAttribute, \"Minimum in one of gid ranges is empty!\");\n-\t\t\tString maximumOfRange = gidRanges.get(minimumOfRange);\n-\t\t\tif(maximumOfRange == null || maximumOfRange.isEmpty()) throw new WrongAttributeValueException(gidRangesAttribute, \"Maximum in one of gid ranges is empty!\");\n+\t\t\tif(minimumOfRange == null || minimumOfRange.isEmpty()) throw new WrongAttributeValueException(idRangesAttribute, \"Minimum in one of gid ranges is empty!\");\n+\t\t\tString maximumOfRange = idRanges.get(minimumOfRange);\n+\t\t\tif(maximumOfRange == null || maximumOfRange.isEmpty()) throw new WrongAttributeValueException(idRangesAttribute, \"Maximum in one of gid ranges is empty!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e95a389ef4380ec1dc6cc4cf4a368e99aff29728"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTQ0NTIxOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1MDozN1rOF-N3qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1MDozN1rOF-N3qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc4MzI3NQ==", "bodyText": "Text should be 'between two id ranges'.", "url": "https://github.com/CESNET/perun/pull/2647#discussion_r400783275", "createdAt": "2020-03-31T09:50:37Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/ModulesUtilsBlImpl.java", "diffHunk": "@@ -1128,7 +1128,7 @@ public User getUserFromMessage(PerunSessionImpl sess, String message) throws Int\n \t\t//Check gid ranges overlaps (there should be no overlaps)\n \t\tInteger lastMaxValue = 0;\n \t\tfor(Integer minValue: convertedRanges.keySet().stream().sorted().collect(Collectors.toList())) {\n-\t\t\tif(minValue <= lastMaxValue) throw new WrongAttributeValueException(gidRangesAttribute, \"There is an overlap between two gid ranges.\");\n+\t\t\tif(minValue <= lastMaxValue) throw new WrongAttributeValueException(idRangesAttribute, \"There is an overlap between two gid ranges.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e95a389ef4380ec1dc6cc4cf4a368e99aff29728"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTQ2MTY0OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1NDo0MVrOF-OCCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1NDo0MVrOF-OCCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc4NTkzMA==", "bodyText": "I don't think you need to override this method if there is no change in it.", "url": "https://github.com/CESNET/perun/pull/2647#discussion_r400785930", "createdAt": "2020-03-31T09:54:41Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "diffHunk": "@@ -0,0 +1,108 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Facility;\n+import cz.metacentrum.perun.core.api.exceptions.*;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.impl.Utils;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleImplApi;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class urn_perun_facility_attribute_def_virt_UIDRanges extends FacilityVirtualAttributesModuleAbstract implements FacilityVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String A_E_namespaceUIDRanges = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-UIDRanges\";\n+\tprivate static final String A_FAC_uidNamespace = AttributesManager.NS_FACILITY_ATTR_DEF + \":uid-namespace\";\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Facility facility, Attribute attribute) throws InternalErrorException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\ttry {\n+\t\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\t\tif(uidNamespaceAttribute.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, uidNamespaceAttribute, \"There is missing UID namespace on the facility.\");\n+\t\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\t\tsess.getPerunBl().getAttributesManagerBl().checkAttributeSemantics(sess, uidNamespaceAttribute.valueAsString(), namespaceUIDRangesAttribute);\n+\t\t} catch(WrongReferenceAttributeValueException ex) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, ex.getReferenceAttribute());\n+\t\t}\n+\n+\t}\n+\n+\t@Override\n+\tpublic Attribute fillAttribute(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) {\n+\t\treturn new Attribute(attributeDefinition);\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e95a389ef4380ec1dc6cc4cf4a368e99aff29728"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTQ2NTAzOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1NTozN1rOF-OEOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1NTozN1rOF-OEOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc4NjQ4OA==", "bodyText": "This is not wrong, but I would prefer to have a throw on separate line, please.", "url": "https://github.com/CESNET/perun/pull/2647#discussion_r400786488", "createdAt": "2020-03-31T09:55:37Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "diffHunk": "@@ -0,0 +1,108 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Facility;\n+import cz.metacentrum.perun.core.api.exceptions.*;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.impl.Utils;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleImplApi;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class urn_perun_facility_attribute_def_virt_UIDRanges extends FacilityVirtualAttributesModuleAbstract implements FacilityVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String A_E_namespaceUIDRanges = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-UIDRanges\";\n+\tprivate static final String A_FAC_uidNamespace = AttributesManager.NS_FACILITY_ATTR_DEF + \":uid-namespace\";\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Facility facility, Attribute attribute) throws InternalErrorException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\ttry {\n+\t\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\t\tif(uidNamespaceAttribute.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, uidNamespaceAttribute, \"There is missing UID namespace on the facility.\");\n+\t\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\t\tsess.getPerunBl().getAttributesManagerBl().checkAttributeSemantics(sess, uidNamespaceAttribute.valueAsString(), namespaceUIDRangesAttribute);\n+\t\t} catch(WrongReferenceAttributeValueException ex) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, ex.getReferenceAttribute());\n+\t\t}\n+\n+\t}\n+\n+\t@Override\n+\tpublic Attribute fillAttribute(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) {\n+\t\treturn new Attribute(attributeDefinition);\n+\t}\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\tif(uidNamespaceAttribute.getValue() == null) return attribute;\n+\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\treturn Utils.copyAttributeToVirtualAttributeWithValue(namespaceUIDRangesAttribute, attribute);\n+\t}\n+\n+\t@Override\n+\tpublic boolean setAttributeValue(PerunSessionImpl sess, Facility facility, Attribute attribute) throws InternalErrorException, WrongReferenceAttributeValueException {\n+\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\tif(uidNamespaceAttribute.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, uidNamespaceAttribute, \"There is missing UID namespace on the facility.\");\n+\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\tif(! (attribute.getValue() == null ? namespaceUIDRangesAttribute.getValue() == null : attribute.getValue().equals(namespaceUIDRangesAttribute.getValue()))) {\n+\t\t\t//attribute from param have other vale then physical attribute\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, namespaceUIDRangesAttribute, \"You can't change attribute value of UID Ranges by changing value of virtual attribute.\");\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic void removeAttributeValue(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\t//Not suported yet.\n+\t\tthrow new InternalErrorException(\"Can't remove value of this virtual attribute this way. \" + attributeDefinition);\n+\t}\n+\n+\tprivate Attribute getNamespaceUIDRangesAttribute(PerunSessionImpl sess, String uidNamespace) throws InternalErrorException {\n+\t\ttry {\n+\t\t\treturn sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, uidNamespace, A_E_namespaceUIDRanges);\n+\t\t} catch(AttributeNotExistsException ex) { throw new ConsistencyErrorException(ex);\n+\t\t} catch(WrongAttributeAssignmentException ex) { throw new InternalErrorException(ex);\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e95a389ef4380ec1dc6cc4cf4a368e99aff29728"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTQ3NDU0OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1ODowMlrOF-OKMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1ODowMlrOF-OKMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc4ODAxNg==", "bodyText": "Maybe it is problem with gid ranges too, but I am not sure why is this logic here at all. You definitely can't set anything this way (there is no logic for setting in it) so maybe we should skip it at all. Or did I miss something?", "url": "https://github.com/CESNET/perun/pull/2647#discussion_r400788016", "createdAt": "2020-03-31T09:58:02Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "diffHunk": "@@ -0,0 +1,108 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Facility;\n+import cz.metacentrum.perun.core.api.exceptions.*;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.impl.Utils;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleImplApi;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class urn_perun_facility_attribute_def_virt_UIDRanges extends FacilityVirtualAttributesModuleAbstract implements FacilityVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String A_E_namespaceUIDRanges = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-UIDRanges\";\n+\tprivate static final String A_FAC_uidNamespace = AttributesManager.NS_FACILITY_ATTR_DEF + \":uid-namespace\";\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Facility facility, Attribute attribute) throws InternalErrorException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\ttry {\n+\t\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\t\tif(uidNamespaceAttribute.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, uidNamespaceAttribute, \"There is missing UID namespace on the facility.\");\n+\t\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\t\tsess.getPerunBl().getAttributesManagerBl().checkAttributeSemantics(sess, uidNamespaceAttribute.valueAsString(), namespaceUIDRangesAttribute);\n+\t\t} catch(WrongReferenceAttributeValueException ex) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, ex.getReferenceAttribute());\n+\t\t}\n+\n+\t}\n+\n+\t@Override\n+\tpublic Attribute fillAttribute(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) {\n+\t\treturn new Attribute(attributeDefinition);\n+\t}\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\tif(uidNamespaceAttribute.getValue() == null) return attribute;\n+\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\treturn Utils.copyAttributeToVirtualAttributeWithValue(namespaceUIDRangesAttribute, attribute);\n+\t}\n+\n+\t@Override\n+\tpublic boolean setAttributeValue(PerunSessionImpl sess, Facility facility, Attribute attribute) throws InternalErrorException, WrongReferenceAttributeValueException {\n+\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\tif(uidNamespaceAttribute.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, uidNamespaceAttribute, \"There is missing UID namespace on the facility.\");\n+\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\tif(! (attribute.getValue() == null ? namespaceUIDRangesAttribute.getValue() == null : attribute.getValue().equals(namespaceUIDRangesAttribute.getValue()))) {\n+\t\t\t//attribute from param have other vale then physical attribute\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, namespaceUIDRangesAttribute, \"You can't change attribute value of UID Ranges by changing value of virtual attribute.\");\n+\t\t}\n+\t\treturn false;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e95a389ef4380ec1dc6cc4cf4a368e99aff29728"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTU1NjQ5OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDo1MjoyN1rOGoNCug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzowMDo1N1rOGol6TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgwOTkxNA==", "bodyText": "Attribute should be of LinkedHashMap type. Please fix this also in GIDRanges attribute module. Thank you.", "url": "https://github.com/CESNET/perun/pull/2647#discussion_r444809914", "createdAt": "2020-06-24T10:52:27Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Facility;\n+import cz.metacentrum.perun.core.api.exceptions.*;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.impl.Utils;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleImplApi;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class urn_perun_facility_attribute_def_virt_UIDRanges extends FacilityVirtualAttributesModuleAbstract implements FacilityVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String A_E_namespaceUIDRanges = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-UIDRanges\";\n+\tprivate static final String A_FAC_uidNamespace = AttributesManager.NS_FACILITY_ATTR_DEF + \":uid-namespace\";\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Facility facility, Attribute attribute) throws InternalErrorException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\ttry {\n+\t\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\t\tif(uidNamespaceAttribute.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, uidNamespaceAttribute, \"There is missing UID namespace on the facility.\");\n+\t\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\t\tsess.getPerunBl().getAttributesManagerBl().checkAttributeSemantics(sess, uidNamespaceAttribute.valueAsString(), namespaceUIDRangesAttribute);\n+\t\t} catch(WrongReferenceAttributeValueException ex) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, ex.getReferenceAttribute());\n+\t\t}\n+\n+\t}\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\tif(uidNamespaceAttribute.getValue() == null) return attribute;\n+\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\treturn Utils.copyAttributeToVirtualAttributeWithValue(namespaceUIDRangesAttribute, attribute);\n+\t}\n+\n+\t@Override\n+\tpublic void removeAttributeValue(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\t//Not suported yet.\n+\t\tthrow new InternalErrorException(\"Can't remove value of this virtual attribute this way. \" + attributeDefinition);\n+\t}\n+\n+\tprivate Attribute getNamespaceUIDRangesAttribute(PerunSessionImpl sess, String uidNamespace) throws InternalErrorException {\n+\t\ttry {\n+\t\t\treturn sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, uidNamespace, A_E_namespaceUIDRanges);\n+\t\t} catch(AttributeNotExistsException ex) {\n+\t\t\tthrow new ConsistencyErrorException(ex);\n+\t\t} catch(WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\tprivate Attribute getUidNamespaceAttribute(PerunSessionImpl sess, Facility facility) throws InternalErrorException {\n+\t\ttry {\n+\t\t\treturn sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, facility, A_FAC_uidNamespace);\n+\t\t} catch(AttributeNotExistsException | WrongAttributeAssignmentException ex) { throw new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getDependencies() {\n+\t\tList<String> dependencies = new ArrayList<>();\n+\t\tdependencies.add(A_FAC_uidNamespace);\n+\t\tdependencies.add(A_E_namespaceUIDRanges);\n+\t\treturn dependencies;\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getStrongDependencies() {\n+\t\tList<String> strongDependencies = new ArrayList<>();\n+\t\tstrongDependencies.add(A_FAC_uidNamespace);\n+\t\tstrongDependencies.add(A_E_namespaceUIDRanges);\n+\t\treturn strongDependencies;\n+\t}\n+\n+\t@Override\n+\tpublic AttributeDefinition getAttributeDefinition() {\n+\t\tAttributeDefinition attr = new AttributeDefinition();\n+\t\tattr.setNamespace(AttributesManager.NS_FACILITY_ATTR_VIRT);\n+\t\tattr.setFriendlyName(\"UIDRanges\");\n+\t\tattr.setDisplayName(\"UID ranges in set namespace for the Facility\");\n+\t\tattr.setType(List.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1bb8a107018b18d4a10759dbd75141a418d9eaa"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIxNzM1Ng==", "bodyText": "It has the correct type now, thank you.", "url": "https://github.com/CESNET/perun/pull/2647#discussion_r445217356", "createdAt": "2020-06-24T23:00:57Z", "author": {"login": "metodej"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Facility;\n+import cz.metacentrum.perun.core.api.exceptions.*;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.impl.Utils;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleImplApi;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class urn_perun_facility_attribute_def_virt_UIDRanges extends FacilityVirtualAttributesModuleAbstract implements FacilityVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String A_E_namespaceUIDRanges = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-UIDRanges\";\n+\tprivate static final String A_FAC_uidNamespace = AttributesManager.NS_FACILITY_ATTR_DEF + \":uid-namespace\";\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Facility facility, Attribute attribute) throws InternalErrorException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\t\ttry {\n+\t\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\t\tif(uidNamespaceAttribute.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, uidNamespaceAttribute, \"There is missing UID namespace on the facility.\");\n+\t\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\t\tsess.getPerunBl().getAttributesManagerBl().checkAttributeSemantics(sess, uidNamespaceAttribute.valueAsString(), namespaceUIDRangesAttribute);\n+\t\t} catch(WrongReferenceAttributeValueException ex) {\n+\t\t\tthrow new WrongReferenceAttributeValueException(attribute, ex.getReferenceAttribute());\n+\t\t}\n+\n+\t}\n+\n+\t@Override\n+\tpublic Attribute getAttributeValue(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\tAttribute attribute = new Attribute(attributeDefinition);\n+\t\tAttribute uidNamespaceAttribute = getUidNamespaceAttribute(sess, facility);\n+\t\tif(uidNamespaceAttribute.getValue() == null) return attribute;\n+\t\tAttribute namespaceUIDRangesAttribute = getNamespaceUIDRangesAttribute(sess, uidNamespaceAttribute.valueAsString());\n+\t\treturn Utils.copyAttributeToVirtualAttributeWithValue(namespaceUIDRangesAttribute, attribute);\n+\t}\n+\n+\t@Override\n+\tpublic void removeAttributeValue(PerunSessionImpl sess, Facility facility, AttributeDefinition attributeDefinition) throws InternalErrorException {\n+\t\t//Not suported yet.\n+\t\tthrow new InternalErrorException(\"Can't remove value of this virtual attribute this way. \" + attributeDefinition);\n+\t}\n+\n+\tprivate Attribute getNamespaceUIDRangesAttribute(PerunSessionImpl sess, String uidNamespace) throws InternalErrorException {\n+\t\ttry {\n+\t\t\treturn sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, uidNamespace, A_E_namespaceUIDRanges);\n+\t\t} catch(AttributeNotExistsException ex) {\n+\t\t\tthrow new ConsistencyErrorException(ex);\n+\t\t} catch(WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\tprivate Attribute getUidNamespaceAttribute(PerunSessionImpl sess, Facility facility) throws InternalErrorException {\n+\t\ttry {\n+\t\t\treturn sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, facility, A_FAC_uidNamespace);\n+\t\t} catch(AttributeNotExistsException | WrongAttributeAssignmentException ex) { throw new InternalErrorException(ex);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getDependencies() {\n+\t\tList<String> dependencies = new ArrayList<>();\n+\t\tdependencies.add(A_FAC_uidNamespace);\n+\t\tdependencies.add(A_E_namespaceUIDRanges);\n+\t\treturn dependencies;\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getStrongDependencies() {\n+\t\tList<String> strongDependencies = new ArrayList<>();\n+\t\tstrongDependencies.add(A_FAC_uidNamespace);\n+\t\tstrongDependencies.add(A_E_namespaceUIDRanges);\n+\t\treturn strongDependencies;\n+\t}\n+\n+\t@Override\n+\tpublic AttributeDefinition getAttributeDefinition() {\n+\t\tAttributeDefinition attr = new AttributeDefinition();\n+\t\tattr.setNamespace(AttributesManager.NS_FACILITY_ATTR_VIRT);\n+\t\tattr.setFriendlyName(\"UIDRanges\");\n+\t\tattr.setDisplayName(\"UID ranges in set namespace for the Facility\");\n+\t\tattr.setType(List.class.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgwOTkxNA=="}, "originalCommit": {"oid": "f1bb8a107018b18d4a10759dbd75141a418d9eaa"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTU4MzU2OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTowMTowMVrOGoNTQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzowMDozNVrOGol5zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgxNDE0Ng==", "bodyText": "We no longer use InternalErrorException in the API, please remove it from all the methods.", "url": "https://github.com/CESNET/perun/pull/2647#discussion_r444814146", "createdAt": "2020-06-24T11:01:01Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Facility;\n+import cz.metacentrum.perun.core.api.exceptions.*;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.impl.Utils;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleImplApi;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class urn_perun_facility_attribute_def_virt_UIDRanges extends FacilityVirtualAttributesModuleAbstract implements FacilityVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String A_E_namespaceUIDRanges = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-UIDRanges\";\n+\tprivate static final String A_FAC_uidNamespace = AttributesManager.NS_FACILITY_ATTR_DEF + \":uid-namespace\";\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Facility facility, Attribute attribute) throws InternalErrorException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1bb8a107018b18d4a10759dbd75141a418d9eaa"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIxNzIzMA==", "bodyText": "Okay, removed.", "url": "https://github.com/CESNET/perun/pull/2647#discussion_r445217230", "createdAt": "2020-06-24T23:00:35Z", "author": {"login": "metodej"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_facility_attribute_def_virt_UIDRanges.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.Facility;\n+import cz.metacentrum.perun.core.api.exceptions.*;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.impl.Utils;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleAbstract;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.FacilityVirtualAttributesModuleImplApi;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class urn_perun_facility_attribute_def_virt_UIDRanges extends FacilityVirtualAttributesModuleAbstract implements FacilityVirtualAttributesModuleImplApi {\n+\n+\tprivate static final String A_E_namespaceUIDRanges = AttributesManager.NS_ENTITYLESS_ATTR_DEF + \":namespace-UIDRanges\";\n+\tprivate static final String A_FAC_uidNamespace = AttributesManager.NS_FACILITY_ATTR_DEF + \":uid-namespace\";\n+\n+\t@Override\n+\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Facility facility, Attribute attribute) throws InternalErrorException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgxNDE0Ng=="}, "originalCommit": {"oid": "f1bb8a107018b18d4a10759dbd75141a418d9eaa"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1994, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}