{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwODU0MTAx", "number": 2865, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjozODoxNVrOEb7FWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjozODoxNVrOEb7FWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NzE1MDM0OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/GroupsManagerBlImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjozODoxNVrOHGJlEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjo0MDo1MlrOHGJpfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIxMDQ0OA==", "bodyText": "I am just curious. Is this distinct necessary?", "url": "https://github.com/CESNET/perun/pull/2865#discussion_r476210448", "createdAt": "2020-08-25T06:38:15Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/GroupsManagerBlImpl.java", "diffHunk": "@@ -2401,36 +2402,61 @@ public void checkGroupExists(PerunSession sess, Group group) throws GroupNotExis\n \n \t@Override\n \tpublic List<Member> filterMembersByMembershipTypeInGroup(List<Member> members) {\n-\t\tSet<Member> filteredMembers = new HashSet<>();\n-\t\tIterator<Member> membersIterator = members.iterator();\n+\t\tMap<Integer, List<Member>> indirectMembersById = members.stream()\n+\t\t\t\t.filter(m -> m.getMembershipType().equals(MembershipType.INDIRECT))\n+\t\t\t\t.collect(groupingBy(Member::getId, toList()));\n \n-\t\t//Add members with direct membership type\n-\t\twhile(membersIterator.hasNext()) {\n-\t\t\tMember m = membersIterator.next();\n-\t\t\tif(m.getMembershipType().equals(MembershipType.DIRECT)) {\n-\t\t\t\tfilteredMembers.add(m);\n-\t\t\t\tmembersIterator.remove();\n-\t\t\t}\n-\t\t}\n+\t\tList<Member> directMembers = members.stream()\n+\t\t\t\t.filter(m -> m.getMembershipType().equals(MembershipType.DIRECT))\n+\t\t\t\t.distinct()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a08547185c400e29993afcbc477320cf9229dfc5"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIxMTU4MQ==", "bodyText": "The old implementation used Set, for some reason, and I wasn't sure if this could happen for the direct members as well. Probably not. But, this shouldn't cause any unwanted side effects.", "url": "https://github.com/CESNET/perun/pull/2865#discussion_r476211581", "createdAt": "2020-08-25T06:40:52Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/blImpl/GroupsManagerBlImpl.java", "diffHunk": "@@ -2401,36 +2402,61 @@ public void checkGroupExists(PerunSession sess, Group group) throws GroupNotExis\n \n \t@Override\n \tpublic List<Member> filterMembersByMembershipTypeInGroup(List<Member> members) {\n-\t\tSet<Member> filteredMembers = new HashSet<>();\n-\t\tIterator<Member> membersIterator = members.iterator();\n+\t\tMap<Integer, List<Member>> indirectMembersById = members.stream()\n+\t\t\t\t.filter(m -> m.getMembershipType().equals(MembershipType.INDIRECT))\n+\t\t\t\t.collect(groupingBy(Member::getId, toList()));\n \n-\t\t//Add members with direct membership type\n-\t\twhile(membersIterator.hasNext()) {\n-\t\t\tMember m = membersIterator.next();\n-\t\t\tif(m.getMembershipType().equals(MembershipType.DIRECT)) {\n-\t\t\t\tfilteredMembers.add(m);\n-\t\t\t\tmembersIterator.remove();\n-\t\t\t}\n-\t\t}\n+\t\tList<Member> directMembers = members.stream()\n+\t\t\t\t.filter(m -> m.getMembershipType().equals(MembershipType.DIRECT))\n+\t\t\t\t.distinct()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIxMDQ0OA=="}, "originalCommit": {"oid": "a08547185c400e29993afcbc477320cf9229dfc5"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2419, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}