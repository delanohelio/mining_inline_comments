{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMjMxNjA4", "number": 2947, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzowNDo1MVrOEyNRKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzowOTowNFrOEyNVHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDgxNjQwOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzowNDo1MVrOHot0Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzowNDo1MVrOHot0Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1NTc1NA==", "bodyText": "You can use the constant instead of composing the attribute name again.", "url": "https://github.com/CESNET/perun/pull/2947#discussion_r512455754", "createdAt": "2020-10-27T07:04:51Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.UserExtSource;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.ConsistencyErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserExtSourceAttributesModuleAbstract;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.sql.Timestamp;\n+\n+/**\n+ * Attribute module for isCesnetEligibleLastSeen, value is String representing timestamp.\n+ *\n+ * @author Radoslav \u010cerh\u00e1k <r.cerhak@gmail.com>\n+ */\n+public class urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen extends UserExtSourceAttributesModuleAbstract {\n+\n+\tprivate static final String A_USER_DEF_IS_CESNET_ELIGIBLE_LAST_SEEN = AttributesManager.NS_USER_ATTR_DEF + \":isCesnetEligibleLastSeen\";\n+\tprivate static final Logger log = LoggerFactory.getLogger(urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen.class);\n+\n+\t/**\n+\t * When isCesnetEligibleLastSeen of a user's ext source is set, check if it is\n+\t * more recent than the user's current isCesnetEligibleLastSeen. If so, update it.\n+\t *\n+\t * @param session\n+\t * @param ues\n+\t * @param attribute\n+\t */\n+\t@Override\n+\tpublic void changedAttributeHook(PerunSessionImpl session, UserExtSource ues, Attribute attribute) {\n+\t\tif (attribute.getValue() == null) return;\n+\n+\t\tUser user;\n+\t\ttry {\n+\t\t\tuser = session.getPerunBl().getUsersManagerBl().getUserById(session, ues.getUserId());\n+\t\t} catch (UserNotExistsException ex) {\n+\t\t\tthrow new ConsistencyErrorException(ex);\n+\t\t}\n+\n+\t\tAttribute userIsCesnetEligible;\n+\t\ttry {\n+\t\t\tuserIsCesnetEligible = session.getPerunBl().getAttributesManagerBl().getAttribute(session, user, AttributesManager.NS_USER_ATTR_DEF + \":isCesnetEligibleLastSeen\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12132ba9dd2b8d57b8b5b3f19619559d917b135f"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDgyNjU0OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzowOTowNFrOHot6Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODoyNTozOFrOHowM6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1NzI2Mw==", "bodyText": "Are we sure that the ues attribute will always contain the correct timestamp? Maybe we should create method checkAttributeSyntax which ensures that there is not some random string. What do you think @zlamalp ?", "url": "https://github.com/CESNET/perun/pull/2947#discussion_r512457263", "createdAt": "2020-10-27T07:09:04Z", "author": {"login": "balcirakpeter"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.UserExtSource;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.ConsistencyErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserExtSourceAttributesModuleAbstract;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.sql.Timestamp;\n+\n+/**\n+ * Attribute module for isCesnetEligibleLastSeen, value is String representing timestamp.\n+ *\n+ * @author Radoslav \u010cerh\u00e1k <r.cerhak@gmail.com>\n+ */\n+public class urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen extends UserExtSourceAttributesModuleAbstract {\n+\n+\tprivate static final String A_USER_DEF_IS_CESNET_ELIGIBLE_LAST_SEEN = AttributesManager.NS_USER_ATTR_DEF + \":isCesnetEligibleLastSeen\";\n+\tprivate static final Logger log = LoggerFactory.getLogger(urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen.class);\n+\n+\t/**\n+\t * When isCesnetEligibleLastSeen of a user's ext source is set, check if it is\n+\t * more recent than the user's current isCesnetEligibleLastSeen. If so, update it.\n+\t *\n+\t * @param session\n+\t * @param ues\n+\t * @param attribute\n+\t */\n+\t@Override\n+\tpublic void changedAttributeHook(PerunSessionImpl session, UserExtSource ues, Attribute attribute) {\n+\t\tif (attribute.getValue() == null) return;\n+\n+\t\tUser user;\n+\t\ttry {\n+\t\t\tuser = session.getPerunBl().getUsersManagerBl().getUserById(session, ues.getUserId());\n+\t\t} catch (UserNotExistsException ex) {\n+\t\t\tthrow new ConsistencyErrorException(ex);\n+\t\t}\n+\n+\t\tAttribute userIsCesnetEligible;\n+\t\ttry {\n+\t\t\tuserIsCesnetEligible = session.getPerunBl().getAttributesManagerBl().getAttribute(session, user, AttributesManager.NS_USER_ATTR_DEF + \":isCesnetEligibleLastSeen\");\n+\t\t} catch (AttributeNotExistsException ex) {\n+\t\t\tlog.warn(\"Attribute {} doesn't exist.\", A_USER_DEF_IS_CESNET_ELIGIBLE_LAST_SEEN);\n+\t\t\treturn;\n+\t\t} catch (WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\n+\t\tTimestamp uesTimestamp = Timestamp.valueOf(attribute.valueAsString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12132ba9dd2b8d57b8b5b3f19619559d917b135f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5NDgyNw==", "bodyText": "Good point @balcirakpeter, we should have syntax check method and same should be done for user version of attribute.", "url": "https://github.com/CESNET/perun/pull/2947#discussion_r512494827", "createdAt": "2020-10-27T08:25:38Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.UserExtSource;\n+import cz.metacentrum.perun.core.api.exceptions.AttributeNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.ConsistencyErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.UserNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException;\n+import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import cz.metacentrum.perun.core.implApi.modules.attributes.UserExtSourceAttributesModuleAbstract;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.sql.Timestamp;\n+\n+/**\n+ * Attribute module for isCesnetEligibleLastSeen, value is String representing timestamp.\n+ *\n+ * @author Radoslav \u010cerh\u00e1k <r.cerhak@gmail.com>\n+ */\n+public class urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen extends UserExtSourceAttributesModuleAbstract {\n+\n+\tprivate static final String A_USER_DEF_IS_CESNET_ELIGIBLE_LAST_SEEN = AttributesManager.NS_USER_ATTR_DEF + \":isCesnetEligibleLastSeen\";\n+\tprivate static final Logger log = LoggerFactory.getLogger(urn_perun_ues_attribute_def_def_isCesnetEligibleLastSeen.class);\n+\n+\t/**\n+\t * When isCesnetEligibleLastSeen of a user's ext source is set, check if it is\n+\t * more recent than the user's current isCesnetEligibleLastSeen. If so, update it.\n+\t *\n+\t * @param session\n+\t * @param ues\n+\t * @param attribute\n+\t */\n+\t@Override\n+\tpublic void changedAttributeHook(PerunSessionImpl session, UserExtSource ues, Attribute attribute) {\n+\t\tif (attribute.getValue() == null) return;\n+\n+\t\tUser user;\n+\t\ttry {\n+\t\t\tuser = session.getPerunBl().getUsersManagerBl().getUserById(session, ues.getUserId());\n+\t\t} catch (UserNotExistsException ex) {\n+\t\t\tthrow new ConsistencyErrorException(ex);\n+\t\t}\n+\n+\t\tAttribute userIsCesnetEligible;\n+\t\ttry {\n+\t\t\tuserIsCesnetEligible = session.getPerunBl().getAttributesManagerBl().getAttribute(session, user, AttributesManager.NS_USER_ATTR_DEF + \":isCesnetEligibleLastSeen\");\n+\t\t} catch (AttributeNotExistsException ex) {\n+\t\t\tlog.warn(\"Attribute {} doesn't exist.\", A_USER_DEF_IS_CESNET_ELIGIBLE_LAST_SEEN);\n+\t\t\treturn;\n+\t\t} catch (WrongAttributeAssignmentException ex) {\n+\t\t\tthrow new InternalErrorException(ex);\n+\t\t}\n+\n+\t\tTimestamp uesTimestamp = Timestamp.valueOf(attribute.valueAsString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1NzI2Mw=="}, "originalCommit": {"oid": "12132ba9dd2b8d57b8b5b3f19619559d917b135f"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2352, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}