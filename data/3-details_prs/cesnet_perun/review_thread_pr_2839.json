{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzOTU4NTUz", "number": 2839, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTo0Mzo0MFrOEVywvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTo0Mzo0MFrOEVywvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjg3MjI4OnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_member_attribute_def_def_o365EmailAddresses_mu.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTo0Mzo0MFrOG8v9xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoyNjoxMFrOG8zaqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1MzYwNw==", "bodyText": "NIT: When using the stream API, it is a best practice to use the dot notation to separate the input elements and each operation that is performed.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tSet<Integer> groupsWithSameAttributeValueSet = sess.getPerunBl().getAttributesManagerBl().getPerunBeanIdsForUniqueAttributeValue(sess, groupO365EmailAddresses).stream().map(Pair::getLeft).collect(Collectors.toSet());\n          \n          \n            \n            \t\t\tSet<Integer> groupsWithSameAttributeValueSet = sess.getPerunBl().getAttributesManagerBl().getPerunBeanIdsForUniqueAttributeValue(sess, groupO365EmailAddresses).stream()\n          \n          \n            \n            \t\t\t\t\t.map(Pair::getLeft)\n          \n          \n            \n            \t\t\t\t\t.collect(Collectors.toSet());", "url": "https://github.com/CESNET/perun/pull/2839#discussion_r466353607", "createdAt": "2020-08-06T11:43:40Z", "author": {"login": "Vojtech-Sassmann"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_member_attribute_def_def_o365EmailAddresses_mu.java", "diffHunk": "@@ -105,36 +103,29 @@ public void checkAttributeSemantics(PerunSessionImpl sess, Member member, Attrib\n \t\t\tthrow new WrongReferenceAttributeValueException(attribute, attrUCO, member, null, member, null, \"does not contain \" + ucoEmail);\n \t\t}\n \n-\t\t//check for duplicities among all members and groups (urn_perun_group_resource_attribute_def_def_o365EmailAddresses_mu)\n-\t\tAttributesManagerBl attributesManagerBl = sess.getPerunBl().getAttributesManagerBl();\n-\t\tSet<Pair<Integer, Integer>> memberPairs = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, attribute);\n-\t\tmemberPairs.remove(new Pair<>(member.getId(), 0));\n-\t\tif (!memberPairs.isEmpty()) {\n-\t\t\ttry {\n-\t\t\t\tMember memberWithDuplicateEmail = sess.getPerunBl().getMembersManagerBl().getMemberById(sess, memberPairs.iterator().next().getLeft());\n-\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, attribute, member, null, memberWithDuplicateEmail, null, \"some of the email addresses are already assigned.\");\n-\t\t\t} catch (MemberNotExistsException e) {\n-\t\t\t\tthrow new ConsistencyErrorException(e);\n-\t\t\t}\n-\t\t}\n-\t\tAttribute groupO365EmailAddresses = new Attribute(new urn_perun_group_resource_attribute_def_def_o365EmailAddresses_mu().getAttributeDefinition());\n-\t\tgroupO365EmailAddresses.setValue(emails);\n-\t\tSet<Pair<Integer, Integer>> groupResourcePairs = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, groupO365EmailAddresses);\n-\t\tif (!groupResourcePairs.isEmpty()) {\n-\t\t\ttry {\n-\t\t\t\tPair<Integer, Integer> GroupResourceWithDuplicateEmail = groupResourcePairs.iterator().next();\n-\t\t\t\tGroup groupWithDuplicateEmail = sess.getPerunBl().getGroupsManagerBl().getGroupById(sess, GroupResourceWithDuplicateEmail.getLeft());\n-\t\t\t\tResource resourceWithDuplicateEmail = sess.getPerunBl().getResourcesManagerBl().getResourceById(sess, GroupResourceWithDuplicateEmail.getRight());\n-\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, groupO365EmailAddresses, member, null, groupWithDuplicateEmail, resourceWithDuplicateEmail, \"some of the email addresses are already assigned.\" );\n-\t\t\t} catch (GroupNotExistsException | ResourceNotExistsException e) {\n-\t\t\t\tthrow new ConsistencyErrorException(e);\n+\t\t//No need to check duplicities between other members, cause attribute is unique\n+\t\t//Check uniqueness between this attribute and groups\n+\t\ttry {\n+\t\t\tAttribute groupO365EmailAddresses = new Attribute(sess.getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, G_D_O365_EMAIL_ADDRESSES_O365MU_ATTR));\n+\t\t\tgroupO365EmailAddresses.setValue(emails);\n+\t\t\tSet<Integer> groupsWithSameAttributeValueSet = sess.getPerunBl().getAttributesManagerBl().getPerunBeanIdsForUniqueAttributeValue(sess, groupO365EmailAddresses).stream().map(Pair::getLeft).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0f81fa17459981252fed9dfe4fc045913ba3ce"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMDE1Mg==", "bodyText": "Changed.", "url": "https://github.com/CESNET/perun/pull/2839#discussion_r466410152", "createdAt": "2020-08-06T13:26:10Z", "author": {"login": "stavamichal"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_member_attribute_def_def_o365EmailAddresses_mu.java", "diffHunk": "@@ -105,36 +103,29 @@ public void checkAttributeSemantics(PerunSessionImpl sess, Member member, Attrib\n \t\t\tthrow new WrongReferenceAttributeValueException(attribute, attrUCO, member, null, member, null, \"does not contain \" + ucoEmail);\n \t\t}\n \n-\t\t//check for duplicities among all members and groups (urn_perun_group_resource_attribute_def_def_o365EmailAddresses_mu)\n-\t\tAttributesManagerBl attributesManagerBl = sess.getPerunBl().getAttributesManagerBl();\n-\t\tSet<Pair<Integer, Integer>> memberPairs = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, attribute);\n-\t\tmemberPairs.remove(new Pair<>(member.getId(), 0));\n-\t\tif (!memberPairs.isEmpty()) {\n-\t\t\ttry {\n-\t\t\t\tMember memberWithDuplicateEmail = sess.getPerunBl().getMembersManagerBl().getMemberById(sess, memberPairs.iterator().next().getLeft());\n-\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, attribute, member, null, memberWithDuplicateEmail, null, \"some of the email addresses are already assigned.\");\n-\t\t\t} catch (MemberNotExistsException e) {\n-\t\t\t\tthrow new ConsistencyErrorException(e);\n-\t\t\t}\n-\t\t}\n-\t\tAttribute groupO365EmailAddresses = new Attribute(new urn_perun_group_resource_attribute_def_def_o365EmailAddresses_mu().getAttributeDefinition());\n-\t\tgroupO365EmailAddresses.setValue(emails);\n-\t\tSet<Pair<Integer, Integer>> groupResourcePairs = attributesManagerBl.getPerunBeanIdsForUniqueAttributeValue(sess, groupO365EmailAddresses);\n-\t\tif (!groupResourcePairs.isEmpty()) {\n-\t\t\ttry {\n-\t\t\t\tPair<Integer, Integer> GroupResourceWithDuplicateEmail = groupResourcePairs.iterator().next();\n-\t\t\t\tGroup groupWithDuplicateEmail = sess.getPerunBl().getGroupsManagerBl().getGroupById(sess, GroupResourceWithDuplicateEmail.getLeft());\n-\t\t\t\tResource resourceWithDuplicateEmail = sess.getPerunBl().getResourcesManagerBl().getResourceById(sess, GroupResourceWithDuplicateEmail.getRight());\n-\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, groupO365EmailAddresses, member, null, groupWithDuplicateEmail, resourceWithDuplicateEmail, \"some of the email addresses are already assigned.\" );\n-\t\t\t} catch (GroupNotExistsException | ResourceNotExistsException e) {\n-\t\t\t\tthrow new ConsistencyErrorException(e);\n+\t\t//No need to check duplicities between other members, cause attribute is unique\n+\t\t//Check uniqueness between this attribute and groups\n+\t\ttry {\n+\t\t\tAttribute groupO365EmailAddresses = new Attribute(sess.getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, G_D_O365_EMAIL_ADDRESSES_O365MU_ATTR));\n+\t\t\tgroupO365EmailAddresses.setValue(emails);\n+\t\t\tSet<Integer> groupsWithSameAttributeValueSet = sess.getPerunBl().getAttributesManagerBl().getPerunBeanIdsForUniqueAttributeValue(sess, groupO365EmailAddresses).stream().map(Pair::getLeft).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1MzYwNw=="}, "originalCommit": {"oid": "5e0f81fa17459981252fed9dfe4fc045913ba3ce"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2394, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}