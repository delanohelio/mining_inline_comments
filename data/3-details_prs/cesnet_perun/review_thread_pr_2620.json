{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3OTkxMzI2", "number": 2620, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNzowODoyOVrODoNhWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNzowODoyOVrODoNhWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDkxMTYxOnYy", "diffSide": "RIGHT", "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_login_namespace_surf_ram_persistent_shadow.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNzowODoyOVrOF2n5uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODo1OToyNlrOF2qspw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgyMTE3Nw==", "bodyText": "Probably should be SURF RAM login, same for description.", "url": "https://github.com/CESNET/perun/pull/2620#discussion_r392821177", "createdAt": "2020-03-16T07:08:29Z", "author": {"login": "zlamalp"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_login_namespace_surf_ram_persistent_shadow.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.ExtSource;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.UserExtSource;\n+import cz.metacentrum.perun.core.api.exceptions.ExtSourceNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.UserExtSourceExistsException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Class for checking logins uniqueness in the namespace and filling surf-ram-persistent id.\n+ * It is only storage! Use module login surf_ram_persistent for access the value.\n+ *\n+ */\n+public class urn_perun_user_attribute_def_def_login_namespace_surf_ram_persistent_shadow extends urn_perun_user_attribute_def_def_login_namespace {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_def_login_namespace_surf_ram_persistent_shadow.class);\n+\tprivate final static String extSourceNameSurfRam = \"https://proxy.acc.surf-ram.eduteams.org/proxy\";\n+\tprivate final static String domainNameSurfRam = \"@acc.surf-ram.eduteams.org\";\n+\tprivate final static String attrNameSurfRam = \"login-namespace:surf-ram-persistent-shadow\";\n+\n+\t/**\n+\t * Filling implemented for login:namespace:surf-ram-persistent attribute\n+\t * Format is: \"[hash]@domainNameSurfRam\" where [hash] represents sha1hash counted from user's id and perun instance id a login-namespace name\n+\t *\n+\t * @param perunSession PerunSession\n+\t * @param user User to fill attribute for\n+\t * @param attribute Attribute to fill value to\n+\t * @return Filled attribute\n+\t * @throws InternalErrorException\n+\t */\n+\t@Override\n+\tpublic Attribute fillAttribute(PerunSessionImpl perunSession, User user, AttributeDefinition attribute) throws InternalErrorException {\n+\n+\t\tAttribute filledAttribute = new Attribute(attribute);\n+\n+\t\tif (attribute.getFriendlyName().equals(attrNameSurfRam)) {\n+\t\t\tfilledAttribute.setValue(sha1HashCount(user, domainNameSurfRam).toString() + domainNameSurfRam);\n+\t\t\treturn filledAttribute;\n+\t\t} else {\n+\t\t\t// without value\n+\t\t\treturn filledAttribute;\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * ChangedAttributeHook() sets UserExtSource with following properties:\n+\t *  - extSourceType is IdP\n+\t *  - extSourceName is stored in extSourceNameSurfRam\n+\t *  - user's extSource login is the same as his surf-ram-persistent attribute\n+\t *\n+\t * @param session PerunSession\n+\t * @param user User to set UserExtSource for\n+\t * @param attribute Attribute containing SURF RAM ID\n+\t * @throws cz.metacentrum.perun.core.api.exceptions.InternalErrorException\n+\t */\n+\t@Override\n+\tpublic void changedAttributeHook(PerunSessionImpl session, User user, Attribute attribute) throws InternalErrorException {\n+\t\ttry {\n+\t\t\tString userNamespace = attribute.getFriendlyNameParameter();\n+\n+\t\t\tif(userNamespace.equals(\"surf-ram-persistent-shadow\") && attribute.getValue() != null){\n+\t\t\t\tExtSource extSource = session.getPerunBl().getExtSourcesManagerBl().getExtSourceByName(session, extSourceNameSurfRam);\n+\t\t\t\tUserExtSource userExtSource = new UserExtSource(extSource, 0, attribute.getValue().toString());\n+\n+\t\t\t\tsession.getPerunBl().getUsersManagerBl().addUserExtSource(session, user, userExtSource);\n+\t\t\t}\n+\t\t} catch (UserExtSourceExistsException ex) {\n+\t\t\tlog.warn(\"SurfRam IdP external source already exists for the user.\", ex);\n+\t\t} catch (ExtSourceNotExistsException ex) {\n+\t\t\tthrow new InternalErrorException(\"IdP external source for SURF RAM doesn't exist.\", ex);\n+\t\t}\n+\t}\n+\n+\tpublic AttributeDefinition getAttributeDefinition() {\n+\t\tAttributeDefinition attr = new AttributeDefinition();\n+\t\tattr.setNamespace(AttributesManager.NS_USER_ATTR_DEF);\n+\t\tattr.setFriendlyName(\"login-namespace:surf-ram-persistent-shadow\");\n+\t\tattr.setDisplayName(\"FENIX login\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc2c07c156f815de56b1a453d00f12494eaef6b7"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2Njk4Mw==", "bodyText": "Cup&paste error. Thanks for spotting it.", "url": "https://github.com/CESNET/perun/pull/2620#discussion_r392866983", "createdAt": "2020-03-16T08:59:26Z", "author": {"login": "licehammer"}, "path": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_def_login_namespace_surf_ram_persistent_shadow.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package cz.metacentrum.perun.core.impl.modules.attributes;\n+\n+import cz.metacentrum.perun.core.api.Attribute;\n+import cz.metacentrum.perun.core.api.AttributeDefinition;\n+import cz.metacentrum.perun.core.api.AttributesManager;\n+import cz.metacentrum.perun.core.api.ExtSource;\n+import cz.metacentrum.perun.core.api.User;\n+import cz.metacentrum.perun.core.api.UserExtSource;\n+import cz.metacentrum.perun.core.api.exceptions.ExtSourceNotExistsException;\n+import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n+import cz.metacentrum.perun.core.api.exceptions.UserExtSourceExistsException;\n+import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Class for checking logins uniqueness in the namespace and filling surf-ram-persistent id.\n+ * It is only storage! Use module login surf_ram_persistent for access the value.\n+ *\n+ */\n+public class urn_perun_user_attribute_def_def_login_namespace_surf_ram_persistent_shadow extends urn_perun_user_attribute_def_def_login_namespace {\n+\n+\tprivate final static Logger log = LoggerFactory.getLogger(urn_perun_user_attribute_def_def_login_namespace_surf_ram_persistent_shadow.class);\n+\tprivate final static String extSourceNameSurfRam = \"https://proxy.acc.surf-ram.eduteams.org/proxy\";\n+\tprivate final static String domainNameSurfRam = \"@acc.surf-ram.eduteams.org\";\n+\tprivate final static String attrNameSurfRam = \"login-namespace:surf-ram-persistent-shadow\";\n+\n+\t/**\n+\t * Filling implemented for login:namespace:surf-ram-persistent attribute\n+\t * Format is: \"[hash]@domainNameSurfRam\" where [hash] represents sha1hash counted from user's id and perun instance id a login-namespace name\n+\t *\n+\t * @param perunSession PerunSession\n+\t * @param user User to fill attribute for\n+\t * @param attribute Attribute to fill value to\n+\t * @return Filled attribute\n+\t * @throws InternalErrorException\n+\t */\n+\t@Override\n+\tpublic Attribute fillAttribute(PerunSessionImpl perunSession, User user, AttributeDefinition attribute) throws InternalErrorException {\n+\n+\t\tAttribute filledAttribute = new Attribute(attribute);\n+\n+\t\tif (attribute.getFriendlyName().equals(attrNameSurfRam)) {\n+\t\t\tfilledAttribute.setValue(sha1HashCount(user, domainNameSurfRam).toString() + domainNameSurfRam);\n+\t\t\treturn filledAttribute;\n+\t\t} else {\n+\t\t\t// without value\n+\t\t\treturn filledAttribute;\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * ChangedAttributeHook() sets UserExtSource with following properties:\n+\t *  - extSourceType is IdP\n+\t *  - extSourceName is stored in extSourceNameSurfRam\n+\t *  - user's extSource login is the same as his surf-ram-persistent attribute\n+\t *\n+\t * @param session PerunSession\n+\t * @param user User to set UserExtSource for\n+\t * @param attribute Attribute containing SURF RAM ID\n+\t * @throws cz.metacentrum.perun.core.api.exceptions.InternalErrorException\n+\t */\n+\t@Override\n+\tpublic void changedAttributeHook(PerunSessionImpl session, User user, Attribute attribute) throws InternalErrorException {\n+\t\ttry {\n+\t\t\tString userNamespace = attribute.getFriendlyNameParameter();\n+\n+\t\t\tif(userNamespace.equals(\"surf-ram-persistent-shadow\") && attribute.getValue() != null){\n+\t\t\t\tExtSource extSource = session.getPerunBl().getExtSourcesManagerBl().getExtSourceByName(session, extSourceNameSurfRam);\n+\t\t\t\tUserExtSource userExtSource = new UserExtSource(extSource, 0, attribute.getValue().toString());\n+\n+\t\t\t\tsession.getPerunBl().getUsersManagerBl().addUserExtSource(session, user, userExtSource);\n+\t\t\t}\n+\t\t} catch (UserExtSourceExistsException ex) {\n+\t\t\tlog.warn(\"SurfRam IdP external source already exists for the user.\", ex);\n+\t\t} catch (ExtSourceNotExistsException ex) {\n+\t\t\tthrow new InternalErrorException(\"IdP external source for SURF RAM doesn't exist.\", ex);\n+\t\t}\n+\t}\n+\n+\tpublic AttributeDefinition getAttributeDefinition() {\n+\t\tAttributeDefinition attr = new AttributeDefinition();\n+\t\tattr.setNamespace(AttributesManager.NS_USER_ATTR_DEF);\n+\t\tattr.setFriendlyName(\"login-namespace:surf-ram-persistent-shadow\");\n+\t\tattr.setDisplayName(\"FENIX login\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgyMTE3Nw=="}, "originalCommit": {"oid": "dc2c07c156f815de56b1a453d00f12494eaef6b7"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2145, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}