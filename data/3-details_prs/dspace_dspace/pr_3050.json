{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5Nzk1NzEz", "number": 3050, "title": "Fix pagination issue in a couple of search endpoints", "bodyText": "References\n#3025\n#3032\n#3033\nDescription\nIn this PR I have fixed the bugs relative to wrong paginations,\nsee issue listed on references, the same bug was found in ResourcePolicyRest endpoint and also solved in this PR.\nInstructions for Reviewers\nThe PR contains ITs to spot the errors and demonstrate that the applied fix work as expected.\nChecklist\nThis checklist provides a reminder of what we are going to look for when reviewing your PR. You need not complete this checklist prior to creating your PR (draft PRs are always welcome). If you are unsure about an item in the checklist, don't hesitate to ask. We're here to help!\n\n My PR is small in size (e.g. less than 1,000 lines of code, not including comments & integration tests). Exceptions may be made if previously agreed upon.\n My PR passes Checkstyle validation based on the Code Style Guide.\n My PR includes Javadoc for all new (or modified) public methods and classes. It also includes Javadoc for large or complex private methods.\n My PR passes all tests and includes new/updated Unit or Integration Tests based on the Code Testing Guide.\n If my PR includes new, third-party dependencies (in any pom.xml), I've made sure their licenses align with the DSpace BSD License based on the Licensing of Contributions documentation.\n If my PR modifies the REST API, I've linked to the REST Contract page (or open PR) related to this change.", "createdAt": "2020-11-12T10:49:10Z", "url": "https://github.com/DSpace/DSpace/pull/3050", "merged": true, "mergeCommit": {"oid": "8eeafcf866eceb3104ec85340b001cd60091c0ab"}, "closed": true, "closedAt": "2020-11-20T18:31:14Z", "author": {"login": "Micheleboychuk"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbbs2egH2gAyNTE5Nzk1NzEzOjZmNjExZTY4NjgxMzNmNDg4MjA1NWFmMjg4YjNiOGE3OGVmNzhjNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdebslhAFqTUzNTY4MDk5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6f611e6868133f4882055af288b3b8a78ef78c4f", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/6f611e6868133f4882055af288b3b8a78ef78c4f", "committedDate": "2020-11-11T10:49:37Z", "message": "added ITs that prove the wrong pagination of collections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3960e57a1cb0ff9c62073464487405d3cbd3ca78", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/3960e57a1cb0ff9c62073464487405d3cbd3ca78", "committedDate": "2020-11-11T10:52:25Z", "message": "fixed wrong pagination of collections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50464dc216b841a880a4462aeb67f0cb83ce060a", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/50464dc216b841a880a4462aeb67f0cb83ce060a", "committedDate": "2020-11-11T11:26:18Z", "message": "added test that proves the wrong pagination of a search method of GroupRest endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35b98db7a8bfc232ebf3ea525ec35dfc60a8be1f", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/35b98db7a8bfc232ebf3ea525ec35dfc60a8be1f", "committedDate": "2020-11-11T11:29:25Z", "message": "fixed wrong pagination of a search method byMetadata of GroupRest endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b99f136aa3a2c56ad2e4b82673d42dd62e5d001f", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/b99f136aa3a2c56ad2e4b82673d42dd62e5d001f", "committedDate": "2020-11-11T11:55:43Z", "message": "added test that proves the wrong pagination of the search method byMetadata of EPersonRest endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeb6f941d3091a64724fc481a42c9a6bda60d110", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/aeb6f941d3091a64724fc481a42c9a6bda60d110", "committedDate": "2020-11-11T11:57:41Z", "message": "fixed wrong pagination of the search method byMetadata of EPersonRest endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9746b5ea14e0592a1ee9b23e1bec1ff2c2b58db4", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/9746b5ea14e0592a1ee9b23e1bec1ff2c2b58db4", "committedDate": "2020-11-11T16:00:18Z", "message": "added tests that prove the wrong pagination of the search methods of ResourcePolicyRest endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f3186ce41dab9badd2a66772b1c77f15bed4ece", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/0f3186ce41dab9badd2a66772b1c77f15bed4ece", "committedDate": "2020-11-11T16:01:31Z", "message": "fixed wrong pagination of the search methods of ResourcePolicyRest endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0af4b9e465880e7fc0acb22a6ff73d2226fa1fa", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/a0af4b9e465880e7fc0acb22a6ff73d2226fa1fa", "committedDate": "2020-11-12T10:14:07Z", "message": "update tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTYyMTAy", "url": "https://github.com/DSpace/DSpace/pull/3050#pullrequestreview-529162102", "createdAt": "2020-11-12T14:50:25Z", "commit": {"oid": "a0af4b9e465880e7fc0acb22a6ff73d2226fa1fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNDo1MDoyNlrOHx-V5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNDo1MDoyNlrOHx-V5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE2MzY4NA==", "bodyText": "you can use hasSize(2) to avoid to check for what should be not present, this would make the test shorter and easier to read. There are other method in this class that can benefit of the same change", "url": "https://github.com/DSpace/DSpace/pull/3050#discussion_r522163684", "createdAt": "2020-11-12T14:50:26Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/CollectionRestRepositoryIT.java", "diffHunk": "@@ -1793,4 +1793,393 @@ public void findAllWithHiddenMetadataTest() throws Exception {\n                 .andExpect(jsonPath(\"$.metadata.['dc.description.provenance']\").doesNotExist());\n \n     }\n+\n+    @Test\n+    public void findAuthorizedCollectionsPaginationTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Community child2 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community Two\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+        Collection col2 = CollectionBuilder.createCollection(context, child2)\n+                                           .withName(\"Collection 2\")\n+                                           .build();\n+        Collection col3 = CollectionBuilder.createCollection(context, parentCommunity)\n+                                           .withName(\"Collection 3\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col4 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 4\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col5 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 5\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col6 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 6\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col7 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 7\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+        context.restoreAuthSystemState();\n+\n+        String tokenAdmin = getAuthToken(admin.getEmail(), password);\n+        getClient(tokenAdmin).perform(get(\"/api/core/collections/search/findSubmitAuthorized\")\n+                 .param(\"page\", \"0\")\n+                 .param(\"size\", \"2\"))\n+                 .andExpect(status().isOk())\n+                 .andExpect(content().contentType(contentType))\n+                 .andExpect(jsonPath(\"$._embedded.collections\", Matchers.containsInAnyOrder(\n+                            CollectionMatcher.matchProperties(col1.getName(), col1.getID(), col1.getHandle()),\n+                            CollectionMatcher.matchProperties(col2.getName(), col2.getID(), col2.getHandle())\n+                            )))\n+                 .andExpect(jsonPath(\"$._embedded.collections\", Matchers.not(Matchers.anyOf(\n+                                  is(CollectionMatcher.matchProperties(col3.getName(), col3.getID(), col3.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col4.getName(), col4.getID(), col4.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col5.getName(), col5.getID(), col5.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col6.getName(), col6.getID(), col6.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col7.getName(), col7.getID(), col7.getHandle()))\n+                                  ))))\n+                 .andExpect(jsonPath(\"$.page.size\", is(2)))\n+                 .andExpect(jsonPath(\"$.page.totalPages\", is(4)))\n+                 .andExpect(jsonPath(\"$.page.number\", is(0)))\n+                 .andExpect(jsonPath(\"$.page.totalElements\", is(7)));\n+\n+        getClient(tokenAdmin).perform(get(\"/api/core/collections/search/findSubmitAuthorized\")\n+                .param(\"page\", \"1\")\n+                .param(\"size\", \"2\"))\n+                .andExpect(status().isOk())\n+                .andExpect(content().contentType(contentType))\n+                .andExpect(jsonPath(\"$._embedded.collections\", Matchers.containsInAnyOrder(\n+                           CollectionMatcher.matchProperties(col3.getName(), col3.getID(), col3.getHandle()),\n+                           CollectionMatcher.matchProperties(col4.getName(), col4.getID(), col4.getHandle())\n+                           )))\n+                .andExpect(jsonPath(\"$._embedded.collections\", Matchers.not(Matchers.anyOf(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0af4b9e465880e7fc0acb22a6ff73d2226fa1fa"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec025828ff9a7371f6c31a936776c588bdd88dfb", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/ec025828ff9a7371f6c31a936776c588bdd88dfb", "committedDate": "2020-11-13T10:09:43Z", "message": "minor update of tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjgwOTk3", "url": "https://github.com/DSpace/DSpace/pull/3050#pullrequestreview-535680997", "createdAt": "2020-11-20T18:31:06Z", "commit": {"oid": "ec025828ff9a7371f6c31a936776c588bdd88dfb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1383, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}