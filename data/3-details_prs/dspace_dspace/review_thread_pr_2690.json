{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MDkwNTg4", "number": 2690, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoyOTowNVrODiacJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzozMjozNVrODiag6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDExMzY0OnYy", "diffSide": "RIGHT", "path": "dspace-oai/src/main/java/org/dspace/xoai/solr/DSpaceSolrServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoyOTowNVrOFtpTrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzoyOTowNVrOFtpTrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwNzAyMw==", "bodyText": "Switch to ConfigurationService?", "url": "https://github.com/DSpace/DSpace/pull/2690#discussion_r383407023", "createdAt": "2020-02-24T17:29:05Z", "author": {"login": "mwoodiupui"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/solr/DSpaceSolrServer.java", "diffHunk": "@@ -30,12 +30,12 @@ private DSpaceSolrServer() { }\n \n     public static SolrClient getServer() throws SolrServerException {\n         if (_server == null) {\n+            String serverUrl = ConfigurationManager.getProperty(\"oai.solr.url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d78f3c393b85e824e82262e9a2017ef8afd75cf6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDEyNTY1OnYy", "diffSide": "RIGHT", "path": "dspace-oai/src/main/java/org/dspace/xoai/solr/DSpaceSolrServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzozMjozMFrOFtpa8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzozMjozMFrOFtpa8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwODg4MA==", "bodyText": "Parameterize?", "url": "https://github.com/DSpace/DSpace/pull/2690#discussion_r383408880", "createdAt": "2020-02-24T17:32:30Z", "author": {"login": "mwoodiupui"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/solr/DSpaceSolrServer.java", "diffHunk": "@@ -30,12 +30,12 @@ private DSpaceSolrServer() { }\n \n     public static SolrClient getServer() throws SolrServerException {\n         if (_server == null) {\n+            String serverUrl = ConfigurationManager.getProperty(\"oai.solr.url\");\n             try {\n-                _server = new HttpSolrClient.Builder(\n-                    ConfigurationManager.getProperty(\"oai\", \"solr.url\")).build();\n-                log.debug(\"Solr Server Initialized\");\n+                _server = new HttpSolrClient.Builder(serverUrl).build();\n+                log.debug(\"OAI Solr Server Initialized\");\n             } catch (Exception e) {\n-                log.error(e.getMessage(), e);\n+                log.error(\"Could not initialize OAI Solr Server at \" + serverUrl , e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d78f3c393b85e824e82262e9a2017ef8afd75cf6"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDEyNTg3OnYy", "diffSide": "RIGHT", "path": "dspace-oai/src/main/java/org/dspace/xoai/services/impl/solr/DSpaceSolrServerResolver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzozMjozNVrOFtpbGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzozMjozNVrOFtpbGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwODkyMQ==", "bodyText": "Message could be parameterized:  log.error(\"Could not initializa OAI Solr Server at {}\", serverUrl, e);\nUnlikely to save many cycles, but it's a good habit to get into.", "url": "https://github.com/DSpace/DSpace/pull/2690#discussion_r383408921", "createdAt": "2020-02-24T17:32:35Z", "author": {"login": "mwoodiupui"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/services/impl/solr/DSpaceSolrServerResolver.java", "diffHunk": "@@ -26,11 +26,12 @@\n     @Override\n     public SolrClient getServer() throws SolrServerException {\n         if (server == null) {\n+            String serverUrl = configurationService.getProperty(\"oai.solr.url\");\n             try {\n-                server = new HttpSolrClient.Builder(configurationService.getProperty(\"oai\", \"solr.url\")).build();\n-                log.debug(\"Solr Server Initialized\");\n+                server = new HttpSolrClient.Builder(serverUrl).build();\n+                log.debug(\"OAI Solr Server Initialized\");\n             } catch (Exception e) {\n-                log.error(e.getMessage(), e);\n+                log.error(\"Could not initialize OAI Solr Server at \" + serverUrl , e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d78f3c393b85e824e82262e9a2017ef8afd75cf6"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1668, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}