{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTA5MDc3", "number": 2759, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoyNzo1NlrOD7hjug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozNDo1MlrOD-ItMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzQyMzk0OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/AbstractDSpaceObjectBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoyNzo1NlrOGT5iXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoyNzo1NlrOGT5iXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxODgxNA==", "bodyText": "@Micheleboychuk remove this commented out method", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423518814", "createdAt": "2020-05-12T07:27:56Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/AbstractDSpaceObjectBuilder.java", "diffHunk": "@@ -233,17 +233,25 @@ protected AbstractDSpaceObjectBuilder(Context context) {\n \n     public abstract T build() throws SQLException, AuthorizeException;\n \n-    public void delete(T dso) throws Exception {\n+//    public void delete(T dso) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzQzNTgyOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/CommunityAdminGroupRestControllerIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzozMToxNlrOGT5p0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzozMToxNlrOGT5p0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyMDcyMA==", "bodyText": "for other reviewers please note this comment as it explains the need of the refactoring done in all the Builder about the cleanup process", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423520720", "createdAt": "2020-05-12T07:31:16Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/CommunityAdminGroupRestControllerIT.java", "diffHunk": "@@ -138,6 +138,8 @@ public void postCommunityAdminGroupCreateAdminGroupSuccess() throws Exception {\n                         .andDo(result -> idRef\n                             .set(UUID.fromString(read(result.getResponse().getContentAsString(), \"$.id\")))\n                         );\n+        // no needs to explicitly cleanup the group created as the community comes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzQ3NDUyOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/CollectionBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0Mjo0OVrOGT6Ciw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoxNDo1NlrOGUOakA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyNzA1MQ==", "bodyText": "This is a comment for other reviewers to explain the reasoning behind this change (and the same in all the other builder).\nIt is better to reload the primary object as this will guarantee us to access also fresh related objects during the cleanup, in this case the Admin Group.\nBefore, all the related objects where reloaded just before to be deleted (see previous implementeation of the deleteWorkflowGroups) but this approach have several issues:\n\nit is easy to forget about it, indeed when the deleteAdminGroup method was added the first time the build was failing due to that\ndoing that manually each time duplicate lot of code\nas you only reload the object that was attached to the \"old\" copy of the primary object you will fail to find related object created in outside thread. If the admin group has been created via a REST call collection.getAdministrators() run before the refresh of the community object would have returned null", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423527051", "createdAt": "2020-05-12T07:42:49Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/CollectionBuilder.java", "diffHunk": "@@ -164,58 +165,54 @@ public Collection build() {\n \n     @Override\n     public void cleanup() throws Exception {\n-        deleteAdminGroup();\n-        deleteDefaultReadGroups(collection);\n-        deleteWorkflowGroups(collection);\n-        delete(collection);\n-    }\n-\n-    private void deleteAdminGroup() throws SQLException, AuthorizeException {\n-        if (collection.getAdministrators() != null) {\n-            try (Context c = new Context()) {\n-                c.turnOffAuthorisationSystem();\n-                collectionService.removeAdministrators(c, collection);\n+       try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            collection = c.reloadEntity(collection);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2MDg4MA==", "bodyText": "Just a minor comment, I wonder if we should add a small inline comment here to remind ourselves why the reloadEntity is necessary. That way we don't accidentally refactor it out at a later time.\nWe could just say:\n// Ensure object and any related objects are reloaded before checking to see what needs cleanup", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423860880", "createdAt": "2020-05-12T16:14:56Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/CollectionBuilder.java", "diffHunk": "@@ -164,58 +165,54 @@ public Collection build() {\n \n     @Override\n     public void cleanup() throws Exception {\n-        deleteAdminGroup();\n-        deleteDefaultReadGroups(collection);\n-        deleteWorkflowGroups(collection);\n-        delete(collection);\n-    }\n-\n-    private void deleteAdminGroup() throws SQLException, AuthorizeException {\n-        if (collection.getAdministrators() != null) {\n-            try (Context c = new Context()) {\n-                c.turnOffAuthorisationSystem();\n-                collectionService.removeAdministrators(c, collection);\n+       try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            collection = c.reloadEntity(collection);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyNzA1MQ=="}, "originalCommit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTQ2MjA3OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTo1ODozNVrOGUNtSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTo1ODozNVrOGUNtSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0OTI5MQ==", "bodyText": "It looks like there's accidentally two context.restoreAuthSystemState() calls in this method now. This second one can be removed.", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423849291", "createdAt": "2020-05-12T15:58:35Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1523,6 +1535,8 @@ public void patchMultipleOperationsWithFailure() throws Exception {\n                                         .withEmail(\"Johndoe@example.com\")\n                                         .build();\n \n+        context.restoreAuthSystemState();\n+\n         String token = getAuthToken(admin.getEmail(), password);\n \n         context.restoreAuthSystemState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9a3f514f8db17593101885d6a4e96fc41e21e"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTUxNDUxOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BundleBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoxMDo0M1rOGUOOvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoxMDo0M1rOGUOOvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg1Nzg1NQ==", "bodyText": "This method is misspelled.  It should be deleteBundle.  Obviously, you'll need to also cleanup the places it's used in ITs.", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423857855", "createdAt": "2020-05-12T16:10:43Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BundleBuilder.java", "diffHunk": "@@ -67,4 +76,20 @@ public Bundle build() throws SQLException, AuthorizeException {\n \n         return bundle;\n     }\n+\n+    public static void deleteBundel(UUID uuid) throws SQLException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9a3f514f8db17593101885d6a4e96fc41e21e"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDgwNzEzOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BitstreamBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozNDoxM1rOGYDUaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxODo0MFrOGYOILQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3MzM4NA==", "bodyText": "seems a risk to keep the context open?", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r427873384", "createdAt": "2020-05-20T09:34:13Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BitstreamBuilder.java", "diffHunk": "@@ -152,7 +152,15 @@ public Bitstream build() {\n \n     @Override\n     public void cleanup() throws Exception {\n-        delete(bitstream);\n+       try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            // Ensure object and any related objects are reloaded before checking to see what needs cleanup\n+            bitstream = c.reloadEntity(bitstream);\n+            if (bitstream != null) {\n+                delete(c, bitstream);\n+                c.complete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA1MDQ3Nw==", "bodyText": "it uses the try-with-resource syntax (it is used also in other recent part of the sourcecode)\nhttps://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r428050477", "createdAt": "2020-05-20T14:18:40Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BitstreamBuilder.java", "diffHunk": "@@ -152,7 +152,15 @@ public Bitstream build() {\n \n     @Override\n     public void cleanup() throws Exception {\n-        delete(bitstream);\n+       try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            // Ensure object and any related objects are reloaded before checking to see what needs cleanup\n+            bitstream = c.reloadEntity(bitstream);\n+            if (bitstream != null) {\n+                delete(c, bitstream);\n+                c.complete();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3MzM4NA=="}, "originalCommit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDgwOTQ1OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BundleBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozNDo1MlrOGYDV-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxODo0N1rOGYOIiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3Mzc4Nw==", "bodyText": "seems a risk to keep the context open, there are more such use cases below", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r427873787", "createdAt": "2020-05-20T09:34:52Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BundleBuilder.java", "diffHunk": "@@ -51,7 +53,15 @@ public BundleBuilder withBitstream(Bitstream bitstream) {\n     }\n \n     public void cleanup() throws Exception {\n-        delete(bundle);\n+        try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            // Ensure object and any related objects are reloaded before checking to see what needs cleanup\n+            bundle = c.reloadEntity(bundle);\n+            if (bundle != null) {\n+                delete(c, bundle);\n+                c.complete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA1MDU2OA==", "bodyText": "it uses the try-with-resource syntax (it is used also in other recent part of the sourcecode)\nhttps://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r428050568", "createdAt": "2020-05-20T14:18:47Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BundleBuilder.java", "diffHunk": "@@ -51,7 +53,15 @@ public BundleBuilder withBitstream(Bitstream bitstream) {\n     }\n \n     public void cleanup() throws Exception {\n-        delete(bundle);\n+        try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            // Ensure object and any related objects are reloaded before checking to see what needs cleanup\n+            bundle = c.reloadEntity(bundle);\n+            if (bundle != null) {\n+                delete(c, bundle);\n+                c.complete();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3Mzc4Nw=="}, "originalCommit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1507, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}