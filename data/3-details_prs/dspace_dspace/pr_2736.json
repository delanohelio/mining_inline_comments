{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MjQ0OTE2", "number": 2736, "title": "DS-4412 Create Integration Tests to prove that users in the Administrators group get full Admin Rights", "bodyText": "References\nhttps://jira.lyrasis.org/browse/DS-4412\nDescription\nREST API should have basic Integration Tests that prove that a user account added to the Administrator group is given full access rights.\nWe have tested that the enroll process for a new administrator, i.e. create an user and add him to the administrators group, will result in the Administrator Feature(s) to be available to such user.\nInstructions for Reviewers\nWe have created a new AuthorizationFeature to verify that an user has access to the administrative feature of the repository or of a specific community and collection.\nChecklist\nThis checklist provides a reminder of what we are going to look for when reviewing your PR. You need not complete this checklist prior to creating your PR (draft PRs are always welcome). If you are unsure about an item in the checklist, don't hesitate to ask. We're here to help!\n\n My PR is small in size (e.g. less than 1,000 lines of code, not including comments & integration tests). Exceptions may be made if previously agreed upon.\n My PR passes Checkstyle validation based on the Code Style Guide\n My PR includes Javadoc for all new (or modified) public methods and classes. It also includes Javadoc for large or complex private methods.\n My PR passes all tests and includes new/updated Unit or Integration Tests for any bug fixes, improvements or new features. A few reminders about what constitutes good tests:\n\n\nInclude tests for different user types, including: (1) Anonymous user, (2) Logged in user (non-admin), and (3) Administrator.\nInclude tests for known error scenarios and error codes (e.g. 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found, etc)\nFor bug fixes, include a test that reproduces the bug and proves it is fixed. For clarity, it may be useful to provide the test in a separate commit from the bug fix.\n\n\nN/A If my PR includes new, third-party dependencies (in any pom.xml), I've made sure their licenses align with the DSpace BSD License based on the Licensing of Contributions documentation.\nN/A If my PR modifies the REST API, I've linked to the REST Contract page (or open PR) related to this change.", "createdAt": "2020-04-03T15:38:23Z", "url": "https://github.com/DSpace/DSpace/pull/2736", "merged": true, "mergeCommit": {"oid": "8ad01b2ddf125cdebced3cb4ffb211e0eb5b7cb7"}, "closed": true, "closedAt": "2020-04-09T21:14:05Z", "author": {"login": "Micheleboychuk"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTu9f9gH2gAyMzk4MjQ0OTE2OmNlMmY5NjViOWM1OWEzZjI4M2MzZmZmNmNlY2I2N2RlMTMwMTdkOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWDKFogFqTM5MTEzNjIxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ce2f965b9c59a3f283c3fff6cecb67de13017d8a", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/ce2f965b9c59a3f283c3fff6cecb67de13017d8a", "committedDate": "2020-04-02T16:33:27Z", "message": "implemented Administrator feature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6f6ef02b53fc22d175aa25068b95eff4f18c7a", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/1d6f6ef02b53fc22d175aa25068b95eff4f18c7a", "committedDate": "2020-04-02T16:39:18Z", "message": "added IT to prove that an eperson has same rights when is part of admin group"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd0055d5632abfcb6690fa04e1413aaea3e3566f", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/bd0055d5632abfcb6690fa04e1413aaea3e3566f", "committedDate": "2020-04-03T12:59:41Z", "message": "added ITs for Administrator feature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09b2f0e17a164b7242c6977a7aa66c9c4474d55e", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/09b2f0e17a164b7242c6977a7aa66c9c4474d55e", "committedDate": "2020-04-03T15:28:53Z", "message": "added javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4a9126620a4a011f88643c09f82b44eb2327dc7", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/a4a9126620a4a011f88643c09f82b44eb2327dc7", "committedDate": "2020-04-03T15:31:34Z", "message": "added IT for Administrator feature"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTYwMzg5", "url": "https://github.com/DSpace/DSpace/pull/2736#pullrequestreview-387560389", "createdAt": "2020-04-03T20:29:50Z", "commit": {"oid": "a4a9126620a4a011f88643c09f82b44eb2327dc7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDoyOTo1MFrOGAoHGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDozNDozNVrOGAoVRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMxMDM2Mw==", "bodyText": "We might just want to call this new feature \"administratorOf\".  It seems to be checking whether you are an Administrator of a particular object (Community, Collection or Site).", "url": "https://github.com/DSpace/DSpace/pull/2736#discussion_r403310363", "createdAt": "2020-04-03T20:29:50Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorFeature.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.authorization.impl;\n+\n+import java.sql.SQLException;\n+\n+import org.dspace.app.rest.authorization.AuthorizationFeature;\n+import org.dspace.app.rest.authorization.AuthorizationFeatureDocumentation;\n+import org.dspace.app.rest.model.BaseObjectRest;\n+import org.dspace.app.rest.model.CollectionRest;\n+import org.dspace.app.rest.model.CommunityRest;\n+import org.dspace.app.rest.model.SiteRest;\n+import org.dspace.app.rest.utils.Utils;\n+import org.dspace.authorize.service.AuthorizeService;\n+import org.dspace.content.Collection;\n+import org.dspace.content.Community;\n+import org.dspace.core.Context;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * The administrator feature. It can be used for verify that an user has access\n+ * to the administrative feature of the repository or of a specific community and collection.\n+ *\n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n+ */\n+@Component\n+@AuthorizationFeatureDocumentation(name = AdministratorFeature.NAME)\n+public class AdministratorFeature implements AuthorizationFeature {\n+\n+    public static final String NAME = \"administratorfeature\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a9126620a4a011f88643c09f82b44eb2327dc7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMxMzk4OQ==", "bodyText": "Just a note. A lot of these Converters get refactored/renamed in the (currently open) PR #2726.  So, depending on which PR is merged first (this one or that one), the other will require refactoring slightly.", "url": "https://github.com/DSpace/DSpace/pull/2736#discussion_r403313989", "createdAt": "2020-04-03T20:34:35Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/authorization/EnrollAdministratorIT.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.authorization;\n+\n+import static org.springframework.data.rest.webmvc.RestMediaTypes.TEXT_URI_LIST_VALUE;\n+import static org.springframework.http.MediaType.parseMediaType;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import org.dspace.app.rest.authorization.impl.AdministratorFeature;\n+import org.dspace.app.rest.builder.EPersonBuilder;\n+import org.dspace.app.rest.converter.ConverterService;\n+import org.dspace.app.rest.matcher.AuthorizationMatcher;\n+import org.dspace.app.rest.model.SiteRest;\n+import org.dspace.app.rest.projection.DefaultProjection;\n+import org.dspace.app.rest.test.AbstractControllerIntegrationTest;\n+import org.dspace.content.Site;\n+import org.dspace.content.factory.ContentServiceFactory;\n+import org.dspace.content.service.SiteService;\n+import org.dspace.eperson.EPerson;\n+import org.dspace.eperson.Group;\n+import org.dspace.eperson.service.GroupService;\n+import org.hamcrest.Matchers;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+/**\n+ * test that the enroll process for a new administrator, i.e. create an user and\n+ * add him to the administrators group, will result in the Administrator Feature(s) to be available to such user.\n+ * \n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n+ *\n+ */\n+public class EnrollAdministratorIT extends AbstractControllerIntegrationTest {\n+\n+    @Autowired\n+    private AuthorizationFeatureService authorizationFeatureService;\n+    @Autowired\n+    private ConverterService converterService;\n+    @Autowired\n+    GroupService groupService;\n+\n+    private SiteService siteService;\n+\n+    /** \n+     * this hold a reference to the test feature {@link AdministratorFeature}\n+     */\n+    private AuthorizationFeature administratorFeature;\n+\n+    @Override\n+    @Before\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        siteService = ContentServiceFactory.getInstance().getSiteService();\n+        administratorFeature = authorizationFeatureService.find(AdministratorFeature.NAME);\n+    }\n+\n+    @Test\n+    public void addUserToAdminGroupOnSiteTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson eperson1 = EPersonBuilder.createEPerson(context)\n+                          .withNameInMetadata(\"Jhon\", \"Brown\")\n+                          .withEmail(\"johnbrown@example.com\")\n+                          .withPassword(password)\n+                          .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        Site site = siteService.findSite(context);\n+        SiteRest siteRest = converterService.toRest(site, DefaultProjection.DEFAULT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a9126620a4a011f88643c09f82b44eb2327dc7"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "452261853124745e8b7f338a2c7c4f7b4469f3e9", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/452261853124745e8b7f338a2c7c4f7b4469f3e9", "committedDate": "2020-04-06T07:40:22Z", "message": "renamed class AdministratorFeature to AdministratorOf and added description"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjc0OTQy", "url": "https://github.com/DSpace/DSpace/pull/2736#pullrequestreview-390274942", "createdAt": "2020-04-08T19:40:16Z", "commit": {"oid": "452261853124745e8b7f338a2c7c4f7b4469f3e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MDoxNlrOGC-HWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MDoxNlrOGC-HWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2ODAyNA==", "bodyText": "Small clarification to my previous comment.  To align with other existing \"Feature\" classes, I'd recommend we name the class AdministratorOfFeature (or even revert back to AdministratorFeature which is OK as well), but keep the NAME property below as administratorOf.\nThese two names need not match, and in fact they often don't match in other Feature classes, e.g. https://github.com/DSpace/DSpace/blob/master/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/WithdrawFeature.java or https://github.com/DSpace/DSpace/blob/master/dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/ReinstateFeature.java", "url": "https://github.com/DSpace/DSpace/pull/2736#discussion_r405768024", "createdAt": "2020-04-08T19:40:16Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/authorization/impl/AdministratorOf.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.authorization.impl;\n+\n+import java.sql.SQLException;\n+\n+import org.dspace.app.rest.authorization.AuthorizationFeature;\n+import org.dspace.app.rest.authorization.AuthorizationFeatureDocumentation;\n+import org.dspace.app.rest.model.BaseObjectRest;\n+import org.dspace.app.rest.model.CollectionRest;\n+import org.dspace.app.rest.model.CommunityRest;\n+import org.dspace.app.rest.model.SiteRest;\n+import org.dspace.app.rest.utils.Utils;\n+import org.dspace.authorize.service.AuthorizeService;\n+import org.dspace.content.Collection;\n+import org.dspace.content.Community;\n+import org.dspace.core.Context;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * The administrator feature. It can be used for verify that an user has access\n+ * to the administrative features of the repository or of a specific community and collection.\n+ *\n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n+ */\n+@Component\n+@AuthorizationFeatureDocumentation(name = AdministratorOf.NAME,\n+        description = \"It can be used for verify that an user has access \"\n+                    + \"to the administrative features of the repository or of a specific community and collection\")\n+public class AdministratorOf implements AuthorizationFeature {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "452261853124745e8b7f338a2c7c4f7b4469f3e9"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffdd4a8474985a65bf9ae4c00f3ad217b57dd8bd", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/ffdd4a8474985a65bf9ae4c00f3ad217b57dd8bd", "committedDate": "2020-04-09T17:45:56Z", "message": "renamed AdministratorOf in AdministratorOfFeature"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTM2MjE4", "url": "https://github.com/DSpace/DSpace/pull/2736#pullrequestreview-391136218", "createdAt": "2020-04-09T21:13:09Z", "commit": {"oid": "ffdd4a8474985a65bf9ae4c00f3ad217b57dd8bd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1415, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}