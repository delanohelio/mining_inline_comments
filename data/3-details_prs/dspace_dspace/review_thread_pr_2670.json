{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTEwODU2", "number": 2670, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDoxOTozMVrODiADog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxMjowOFrODlL-zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTc5MTA2OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/projection/EmbedRelsProjection.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDoxOTozMVrOFtDddQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowMjoyOFrOFx7wbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjkzMw==", "bodyText": "Silly question, but what are \"rels\"?  Can we enhance the JavaDocs here a bit...it's unclear what constitutes a valid \"rel\". For example, how do we know what \"rels\" are valid to pass in?\nThat question is a bit \"tongue in cheek\", as I'm assuming that by \"rels\" you mean relationships, which are actually named _links in HAL format.  But, it'd be good to spell that out, or even consider renaming this EmbedLinksProjection (since any link is valid to pass to embed, I presume).  The rename here is optional, but I the the Javadocs do need improving here.", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r382786933", "createdAt": "2020-02-21T20:19:31Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/projection/EmbedRelsProjection.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.projection;\n+\n+import java.util.Set;\n+\n+import org.dspace.app.rest.model.LinkRest;\n+import org.dspace.app.rest.model.hateoas.HALResource;\n+\n+/**\n+ * Projection that allows a given set of rels to be embedded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b45d39aacd64065d2fd61fe48bfa4d650da27f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxNDM1OA==", "bodyText": "\"Rels\" is common shorthand for \"link relation types\" as defined by RFC8288. The Spring HATEOAS folks call them that a lot (see the javadocs for \"Link\"), as do a few other places in DSpace code and in the wild (see the wikipedia page for \"Link relation\")...so I got used to doing the same.\nIt doesn't hurt to be explicit here, though, particularly in class-level javadocs.\n\nhow do we know what \"rels\" are valid to pass in?\n\nThat info is expressed in a few places in code, but if you're consuming the REST api, your best bet for the official list should be the rest contract. The javadocs could stand to make reference to that, too.", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r382914358", "createdAt": "2020-02-22T13:56:11Z", "author": {"login": "cwilper"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/projection/EmbedRelsProjection.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.projection;\n+\n+import java.util.Set;\n+\n+import org.dspace.app.rest.model.LinkRest;\n+import org.dspace.app.rest.model.hateoas.HALResource;\n+\n+/**\n+ * Projection that allows a given set of rels to be embedded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjkzMw=="}, "originalCommit": {"oid": "45b45d39aacd64065d2fd61fe48bfa4d650da27f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwMzU5OA==", "bodyText": "I'd rather we get a bit more specific in these JavaDocs, either via an example, a link to REST Contract or more explanation. I worry that assuming \"rels\" is a commonly understood term to all developers is a big assumption here.", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387903598", "createdAt": "2020-03-04T20:02:28Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/projection/EmbedRelsProjection.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.projection;\n+\n+import java.util.Set;\n+\n+import org.dspace.app.rest.model.LinkRest;\n+import org.dspace.app.rest.model.hateoas.HALResource;\n+\n+/**\n+ * Projection that allows a given set of rels to be embedded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjkzMw=="}, "originalCommit": {"oid": "45b45d39aacd64065d2fd61fe48bfa4d650da27f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjk4NjE0OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/converter/ConverterService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTowNjozMlrOFx54ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTowNjozMlrOFx54ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3Mjk1NA==", "bodyText": "Please add JavaDocs to the new toResource method here, especially describing how it differs from the other toResource", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387872954", "createdAt": "2020-03-04T19:06:32Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/converter/ConverterService.java", "diffHunk": "@@ -155,9 +156,12 @@\n      * @throws ClassCastException if the resource type is not compatible with the inferred return type.\n      */\n     public <T extends HALResource> T toResource(RestModel restObject) {\n+        return toResource(restObject, new Link[] {});\n+    }\n+    public <T extends HALResource> T toResource(RestModel restObject, Link... oldLinks) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzE4MTk4OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CommunityParentCommunityLinkRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowNTozMlrOFx72JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowNTozMlrOFx72JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwNTA2MQ==", "bodyText": "This class looks to be unrelated to this PR.  But, I see it's already on master.  Could you rebase this PR to make it easier to review the new changes?", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387905061", "createdAt": "2020-03-04T20:05:32Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CommunityParentCommunityLinkRepository.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.repository;\n+\n+import java.sql.SQLException;\n+import java.util.UUID;\n+import javax.annotation.Nullable;\n+import javax.servlet.http.HttpServletRequest;\n+\n+import org.dspace.app.rest.model.CommunityRest;\n+import org.dspace.app.rest.projection.Projection;\n+import org.dspace.content.Community;\n+import org.dspace.content.service.CommunityService;\n+import org.dspace.core.Context;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.rest.webmvc.ResourceNotFoundException;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * LinkRepository for the ParentCommunity object for a Community\n+ */\n+@Component(CommunityRest.CATEGORY + \".\" + CommunityRest.NAME + \".\" + CommunityRest.PARENT_COMMUNITY)\n+public class CommunityParentCommunityLinkRepository extends AbstractDSpaceRestRepository", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzE5Mzk0OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/projection/FullProjection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowOTozMVrOFx792Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDowOTozMVrOFx792Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwNzAzMw==", "bodyText": "This new configuration does not appear to be added to a *.cfg file in this PR.  We should add it along with comments describing it.\nIt should probably be added to the existing rest.cfg file, and renamed rest.projections.full.max.  (NOTE: this same config is also used in SpecificLevelProjection)", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387907033", "createdAt": "2020-03-04T20:09:31Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/projection/FullProjection.java", "diffHunk": "@@ -18,14 +21,17 @@\n public class FullProjection extends AbstractProjection {\n \n     public final static String NAME = \"full\";\n+    private final int maxEmbed = DSpaceServicesFactory.getInstance().getConfigurationService()\n+            .getIntProperty(\"projections.full.max\", 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzIwMjA0OnYy", "diffSide": "RIGHT", "path": "dspace/config/spring/rest/projections.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxMjowOFrOFx8C8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxMjowOFrOFx8C8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwODMzOQ==", "bodyText": "Can we make this editable in the rest.cfg file, perhaps alongside projections.full.max?  Remember, any config can be referenced in Spring XML, so we could change this to be something like :\n <property name=\"maxEmbed\" value=\"${rest.projection.specificLevel.maxEmbed}\" />", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387908339", "createdAt": "2020-03-04T20:12:08Z", "author": {"login": "tdonohue"}, "path": "dspace/config/spring/rest/projections.xml", "diffHunk": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\">\n+\n+    <bean class=\"org.dspace.app.rest.projection.SpecificLevelProjection\">\n+        <property name=\"maxEmbed\" value=\"5\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1641, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}