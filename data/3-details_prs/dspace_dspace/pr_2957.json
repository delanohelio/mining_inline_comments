{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMTM1NDMy", "number": 2957, "title": "Address many deprecation warnings", "bodyText": "References\n\nFixes #2956\n\nDescription\nAddress many deprecation warnings.\nInstructions for Reviewers\nIt may be easiest to review each commit separately, since I've tried to group all work by the deprecated code it addresses.\nChecklist\n\n My PR is small in size (e.g. less than 1,000 lines of code, not including comments & integration tests). Exceptions may be made if previously agreed upon.\n My PR passes Checkstyle validation based on the Code Style Guide.\n My PR includes Javadoc for all new (or modified) public methods and classes. It also includes Javadoc for large or complex private methods.\n My PR passes all tests and includes new/updated Unit or Integration Tests based on the Code Testing Guide.\n If my PR includes new, third-party dependencies (in any pom.xml), I've made sure their licenses align with the DSpace BSD License based on the Licensing of Contributions documentation.\n If my PR modifies the REST API, I've linked to the REST Contract page (or open PR) related to this change.", "createdAt": "2020-09-09T21:03:28Z", "url": "https://github.com/DSpace/DSpace/pull/2957", "merged": true, "mergeCommit": {"oid": "6e5605453e84cfc5edbe977b2069d6651c861ade"}, "closed": true, "closedAt": "2020-12-07T14:54:56Z", "author": {"login": "mwoodiupui"}, "timelineItems": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJ9fqmgBqjM3ODA4MTE5NzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdjSE2BAFqTU0NTY0NjMxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "95d0a2bf57e02f544698d6bfbed52c28d2c5fa07", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/95d0a2bf57e02f544698d6bfbed52c28d2c5fa07", "committedDate": "2020-11-17T18:30:00Z", "message": "Remove long-deprecated ConfigurationManager."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7395c5be8ff769b9cce2f5b66e06886c7eb624f2", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/7395c5be8ff769b9cce2f5b66e06886c7eb624f2", "committedDate": "2020-11-17T18:46:06Z", "message": "Replace deprecated Spring @Required with @Autowired(required=true)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34de00b47a8b011d40a67ab42b70f6f84823da17", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/34de00b47a8b011d40a67ab42b70f6f84823da17", "committedDate": "2020-11-17T18:46:10Z", "message": "Replace deprecated Commons Collections MultivalueMap."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00d9364f87581bac585a4fb0c5a81c3823bb7cde", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/00d9364f87581bac585a4fb0c5a81c3823bb7cde", "committedDate": "2020-11-17T18:46:10Z", "message": "Replace deprecated Commons CLI PosixParser and OptionBuilder."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "230cca287e659d44c371cdb8467d21145294aacf", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/230cca287e659d44c371cdb8467d21145294aacf", "committedDate": "2020-11-17T18:46:10Z", "message": "Replace deprecated Xerces XML serializer with one from org.w3c.dom."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ee14c3abcc8f2eb1c54377be457dd037e8b8271", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/8ee14c3abcc8f2eb1c54377be457dd037e8b8271", "committedDate": "2020-11-17T18:46:10Z", "message": "Replace deprecated lang3.CharEncoding with nio.StandardCharsets."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ab6aed27637d44259407ebab87bdc8a287b684d", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/7ab6aed27637d44259407ebab87bdc8a287b684d", "committedDate": "2020-11-17T18:46:10Z", "message": "Remove deprecated getMetadata(Context, String) from CommunityService, CollectionService."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47d32b72cd0ac8b5fed19ab78fb556c0f384bf76", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/47d32b72cd0ac8b5fed19ab78fb556c0f384bf76", "committedDate": "2020-11-17T18:53:27Z", "message": "Better fix for configuration issue in c463b632dd24e0c017d88b36b2b6fa0f13d95fb1\n\nOther code now depends on the 'id' of the curation script configuration bean,\nso it can't be renamed.  Instead, remove the bean post processing code that\npokes 'dspace.cfg' properties into a bean which are prefixed with the bean's\n'id', since nobody can remember why we do that and it causes subtle magical\nproblems.  It may be for Guice, which is no longer an option for DSpace."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "079bdb0e0db6f0f659ee792789ea38f43505e4ef", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/079bdb0e0db6f0f659ee792789ea38f43505e4ef", "committedDate": "2020-11-17T18:53:49Z", "message": "I missed a lot of deprecated PosixParser and OptionBuilder in the clutter of warnings (see?)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5c1b780f6717cc95b3955bdaa4d4f1e16877a73", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/a5c1b780f6717cc95b3955bdaa4d4f1e16877a73", "committedDate": "2020-11-17T18:53:49Z", "message": "Missed one more PosixParser."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff0247442377e24dbec08e14fb201a2da8bbc31d", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/ff0247442377e24dbec08e14fb201a2da8bbc31d", "committedDate": "2020-11-17T18:53:49Z", "message": "Fix broken test by catching an unexpected exception.\n\nThere must be an unchecked exception bubbling up through SolrServiceImpl#search.  Catching Exception (as before this PR) fixes the test failure."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5d3b55457385cf4820a420d8065ea2376545fdd", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/d5d3b55457385cf4820a420d8065ea2376545fdd", "committedDate": "2020-11-17T18:53:49Z", "message": "Replace deprecated constructors of boxed primitive types. [#2956]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ade9e9978a1041aac62154048b18593fbb132c2", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/0ade9e9978a1041aac62154048b18593fbb132c2", "committedDate": "2020-11-17T18:53:49Z", "message": "Replace deprecated Class.newInstance(). [#2956]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "259bd4bcdde04841c11ccc3c99ac6a80f9fc1162", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/259bd4bcdde04841c11ccc3c99ac6a80f9fc1162", "committedDate": "2020-11-17T18:53:49Z", "message": "Fix anything that is documented @deprecated but not annotated @Deprecated. [#2956]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22dcbf548122af7a30d671229c8233decc9c8584", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/22dcbf548122af7a30d671229c8233decc9c8584", "committedDate": "2020-11-17T18:53:49Z", "message": "Replace various deprecated PDFBox methods. [#2956]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5838cfd9c7719209bca18e4441b9b3abe78da7f1", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/5838cfd9c7719209bca18e4441b9b3abe78da7f1", "committedDate": "2020-11-17T18:53:49Z", "message": "Remove long-deprecated un-localized methods from LocationUtils. [#2956]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e08341faedaca2a5c9e0aa78b4699441bbdc5e40", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/e08341faedaca2a5c9e0aa78b4699441bbdc5e40", "committedDate": "2020-11-17T18:53:49Z", "message": "Fix LGTM alert:  pointless boxing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8221f54ced729f7d68068c61b5e6442fd8642bf", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/f8221f54ced729f7d68068c61b5e6442fd8642bf", "committedDate": "2020-11-17T18:53:49Z", "message": "I missed one LocationUtils call."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65690892281998171b8e0bddf5ac285143c34de7", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/65690892281998171b8e0bddf5ac285143c34de7", "committedDate": "2020-11-17T18:53:49Z", "message": "Remove deprecated setMetadata of CommunityService, CollectionService #2956\n\nThis introduces a new class:  a holder for metadata field names."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f53ab6bef38dfa0df4ab2e225069ce9d8c07053", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/7f53ab6bef38dfa0df4ab2e225069ce9d8c07053", "committedDate": "2020-11-17T20:05:51Z", "message": "Found a few more deprecated PosixParser, GnuParser, OptionBuilder. #2956"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d77f6eef25d6bacf4092cc5ecef5adb45e43b4aa", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/d77f6eef25d6bacf4092cc5ecef5adb45e43b4aa", "committedDate": "2020-11-17T20:05:55Z", "message": "Replace deprecated org.apache.http.impl.client.DefaultHttpClient [#2956]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e7ac5d935b6fb7a3fa4ca9aac7368948921a709", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/3e7ac5d935b6fb7a3fa4ca9aac7368948921a709", "committedDate": "2020-11-17T20:05:55Z", "message": "Replace miscellaneous rarely-used deprecateds. [#2956]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e94911ba1909771baa9d700c4e5f591906014269", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/e94911ba1909771baa9d700c4e5f591906014269", "committedDate": "2020-11-17T20:37:53Z", "message": "Replace deprecated setMetadata() that uses removed field names. #2956\n\nOnce upon a time, DSOs had dedicated fields for some metadata.  These were\nmoved into the Metadatavalue table long ago, but there were still methods\nwhich used the old field names instead of proper MetadataField triplets."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e94911ba1909771baa9d700c4e5f591906014269", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/e94911ba1909771baa9d700c4e5f591906014269", "committedDate": "2020-11-17T20:37:53Z", "message": "Replace deprecated setMetadata() that uses removed field names. #2956\n\nOnce upon a time, DSOs had dedicated fields for some metadata.  These were\nmoved into the Metadatavalue table long ago, but there were still methods\nwhich used the old field names instead of proper MetadataField triplets."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4afc33daeffc19d25181646bc1a289d382f64882", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/4afc33daeffc19d25181646bc1a289d382f64882", "committedDate": "2020-11-17T21:22:33Z", "message": "Satisfy checkstyle."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d0c57fa3eebe65c231f79a1b3639a4043801cf5", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/6d0c57fa3eebe65c231f79a1b3639a4043801cf5", "committedDate": "2020-11-17T22:03:28Z", "message": "Replace deprecated icu4j Normalizer with Normalizer2. #2956"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d64bb6f7181f40b952d942383ad50156392f318", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/7d64bb6f7181f40b952d942383ad50156392f318", "committedDate": "2020-11-18T18:39:50Z", "message": "Replace Class.getInstance(). #2956"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87cfac01d4715405e3a77145b0633b81b13cb55a", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/87cfac01d4715405e3a77145b0633b81b13cb55a", "committedDate": "2020-11-18T21:12:41Z", "message": "Replace deprecated JUnit and Mockito statics. #2956"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/96742fe558f3de24634603a15e00f332d7c393a0", "committedDate": "2020-11-18T23:02:05Z", "message": "Satisfy Checkstyle.  Small tidy-ups.  #2956"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NzIxNjE1", "url": "https://github.com/DSpace/DSpace/pull/2957#pullrequestreview-536721615", "createdAt": "2020-11-23T18:02:18Z", "commit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODowMjoxOFrOH4ZTjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODozMDo1NlrOH4aSFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg5NjkxMQ==", "bodyText": "should we consider to move to 2.2 ? http://hamcrest.org/JavaHamcrest/distributables#upgrading-from-hamcrest-1x", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528896911", "createdAt": "2020-11-23T18:02:18Z", "author": {"login": "abollini"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -496,7 +496,7 @@\n         </dependency>\n         <dependency>\n             <groupId>org.hamcrest</groupId>\n-            <artifactId>hamcrest-core</artifactId>\n+            <artifactId>hamcrest-all</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxMDAwMg==", "bodyText": "I'm not a fun of \"complex\" initialization outside of a constructor... but it is also a class that probably should be removed / deprecated. I'm not sure that this feature still work at all", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528910002", "createdAt": "2020-11-23T18:25:43Z", "author": {"login": "abollini"}, "path": "dspace-api/src/main/java/org/dspace/app/statistics/HTMLReport.java", "diffHunk": "@@ -59,7 +60,9 @@\n     /**\n      * the output file to which to write aggregation data\n      */\n-    private String output = ConfigurationManager.getProperty(\"dspace.dir\") +\n+    ConfigurationService configurationService\n+            = DSpaceServicesFactory.getInstance().getConfigurationService();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxMjkxOA==", "bodyText": "the check log.isDebugEnabled() should be moved inside the logConfiguration method", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528912918", "createdAt": "2020-11-23T18:30:56Z", "author": {"login": "abollini"}, "path": "dspace-api/src/main/java/org/dspace/app/util/GoogleMetadata.java", "diffHunk": "@@ -180,9 +186,7 @@\n             }\n         }\n \n-        if (log.isDebugEnabled()) {\n-            logConfiguration();\n-        }\n+        logConfiguration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51f9e78fd245536742ecd8a9f9a34cad8d4bff94", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/51f9e78fd245536742ecd8a9f9a34cad8d4bff94", "committedDate": "2020-11-24T16:56:18Z", "message": "Merge remote-tracking branch 'upstream/main' into #2956"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/ea15ca58feea44e0ebefea7e8dbd2889f4ae2324", "committedDate": "2020-11-24T16:58:10Z", "message": "Address review comments.  #2956"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NzcxNzEy", "url": "https://github.com/DSpace/DSpace/pull/2957#pullrequestreview-536771712", "createdAt": "2020-11-23T19:14:32Z", "commit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOToxNDozMlrOH4bwIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo1MDowMFrOH8LJeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkzNjk5NQ==", "bodyText": "Instead of looping through all properties, this can just use configurationService.getPropertyKeys(\"swordv2-server.simpledc.\") to find all properties starting with that prefix.  See https://github.com/DSpace/DSpace/blob/main/dspace-services/src/main/java/org/dspace/servicemanager/config/DSpaceConfigurationService.java#L135", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528936995", "createdAt": "2020-11-23T19:14:32Z", "author": {"login": "tdonohue"}, "path": "dspace-swordv2/src/main/java/org/dspace/sword2/AbstractSimpleDC.java", "diffHunk": "@@ -27,16 +28,18 @@\n     protected ItemService itemService = ContentServiceFactory.getInstance()\n                                                              .getItemService();\n \n+    protected ConfigurationService configurationService\n+            = DSpaceServicesFactory.getInstance().getConfigurationService();\n+\n     protected void loadMetadataMaps() {\n         if (this.dcMap == null) {\n             // we should load our DC map from configuration\n             this.dcMap = new HashMap<>();\n-            Properties props = ConfigurationManager\n-                .getProperties(\"swordv2-server\");\n+            Properties props = configurationService.getProperties();\n             for (Object key : props.keySet()) {\n                 String keyString = (String) key;\n-                if (keyString.startsWith(\"simpledc.\")) {\n-                    String k = keyString.substring(\"simpledc.\".length());\n+                if (keyString.startsWith(\"swordv2-server.simpledc.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkzNzM3MQ==", "bodyText": "Same here...can use getPropertyKeys([prefix]) instead of looping through every configuration.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528937371", "createdAt": "2020-11-23T19:15:10Z", "author": {"login": "tdonohue"}, "path": "dspace-swordv2/src/main/java/org/dspace/sword2/AbstractSimpleDC.java", "diffHunk": "@@ -45,12 +48,11 @@ protected void loadMetadataMaps() {\n \n         if (this.atomMap == null) {\n             this.atomMap = new HashMap<>();\n-            Properties props = ConfigurationManager\n-                .getProperties(\"swordv2-server\");\n+            Properties props = configurationService.getProperties();\n             for (Object key : props.keySet()) {\n                 String keyString = (String) key;\n-                if (keyString.startsWith(\"atom.\")) {\n-                    String k = keyString.substring(\"atom.\".length());\n+                if (keyString.startsWith(\"swordv2-server.atom.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MTUxNw==", "bodyText": "I think this could be refactored to be configurationService.getPropertyKeys(authPrefix) in order to find every key that starts with authPrefix.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532851517", "createdAt": "2020-11-30T19:39:27Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/authority/MetadataAuthorityServiceImpl.java", "diffHunk": "@@ -81,13 +84,12 @@ protected MetadataAuthorityServiceImpl() {\n     public void init() {\n \n         if (isAuthorityRequired == null) {\n-            isAuthorityRequired = new HashMap<String, Boolean>();\n-            Enumeration pn = ConfigurationManager.propertyNames();\n+            isAuthorityRequired = new HashMap<>();\n+            List<String> pn = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MzMzMg==", "bodyText": "Again, this looks like it could be replaced by configurationService.getPropertyKeys(CONFIG_PREFIX); and simplify the for loop after it", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532853332", "createdAt": "2020-11-30T19:42:30Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/MODSDisseminationCrosswalk.java", "diffHunk": "@@ -107,10 +110,9 @@\n     private static String aliases[] = null;\n \n     static {\n-        List<String> aliasList = new ArrayList<String>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n-        while (pe.hasMoreElements()) {\n-            String key = pe.nextElement();\n+        List<String> aliasList = new ArrayList<>();\n+        List<String> pe = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NDI4MA==", "bodyText": "Again, looks like this could be configurationService.getPropertyKeys(propname); to simplify the for loop", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532854280", "createdAt": "2020-11-30T19:44:04Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "diffHunk": "@@ -137,11 +141,10 @@\n     private static String aliases[] = null;\n \n     static {\n-        List<String> aliasList = new ArrayList<String>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<String> aliasList = new ArrayList<>();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NDUyNg==", "bodyText": "same here.. configurationService.getPropertyKeys(propname);", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532854526", "createdAt": "2020-11-30T19:44:30Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "diffHunk": "@@ -218,32 +221,31 @@ private void init()\n         }\n \n         // grovel DSpace configuration for namespaces\n-        List<Namespace> nsList = new ArrayList<Namespace>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<Namespace> nsList = new ArrayList<>();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NjExMw==", "bodyText": "Again, could use configurationService.getPropertyKeys(prefix);", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532856113", "createdAt": "2020-11-30T19:47:02Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/XSLTCrosswalk.java", "diffHunk": "@@ -117,11 +116,12 @@\n         String suffix = CONFIG_STYLESHEET;\n \n         List<String> aliasList = new ArrayList<>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        ConfigurationService configurationService\n+                = DSpaceServicesFactory.getInstance().getConfigurationService();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NzIzOQ==", "bodyText": "Again, could be configurationService.getPropertyKeys(nsPrefix); & simplify the for loop.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532857239", "createdAt": "2020-11-30T19:48:14Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/XSLTDisseminationCrosswalk.java", "diffHunk": "@@ -146,18 +149,17 @@ private void init()\n         // grovel for namespaces of the form:\n         //  crosswalk.diss.{PLUGIN_NAME}.namespace.{PREFIX} = {URI}\n         String nsPrefix = prefix + \"namespace.\";\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1OTI1OA==", "bodyText": "Again could be configurationService.getPropertyKeys(CONFIG_XSD_PREFIX);", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532859258", "createdAt": "2020-11-30T19:50:00Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/packager/METSManifest.java", "diffHunk": "@@ -190,21 +193,20 @@ public InputStream getInputStream(Element mdRef)\n     protected static String localSchemas;\n \n     static {\n-        String dspace_dir = ConfigurationManager.getProperty(\"dspace.dir\");\n+        String dspace_dir = configurationService.getProperty(\"dspace.dir\");\n         File xsdPath1 = new File(dspace_dir + \"/config/schemas/\");\n         File xsdPath2 = new File(dspace_dir + \"/config/\");\n \n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n-        StringBuffer result = new StringBuffer();\n-        while (pe.hasMoreElements()) {\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e16c7ed9e10e93d034de521e8ae3d63e544571f", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/3e16c7ed9e10e93d034de521e8ae3d63e544571f", "committedDate": "2020-11-30T22:24:48Z", "message": "Merge remote-tracking branch 'upstream/main' into #2956"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a38b7d51cf2c77ab5aa760ce4fbe52afc4e0299", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/8a38b7d51cf2c77ab5aa760ce4fbe52afc4e0299", "committedDate": "2020-11-30T22:26:50Z", "message": "Address review comments.  #2956"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83bf65a407e23fc8e06a1689c06d07c02925aca8", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/83bf65a407e23fc8e06a1689c06d07c02925aca8", "committedDate": "2020-12-01T00:50:13Z", "message": "Satisfy checkstyle.  #2956"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMTMwMDIz", "url": "https://github.com/DSpace/DSpace/pull/2957#pullrequestreview-542130023", "createdAt": "2020-12-01T17:24:01Z", "commit": {"oid": "83bf65a407e23fc8e06a1689c06d07c02925aca8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoyNDowMVrOH83sLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoyNDowMVrOH83sLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4OTAzNg==", "bodyText": "@mwoodiupui : Looks like you overlooked this one on accident.  Should be configurationService.getPropertyKeys(propname)", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r533589036", "createdAt": "2020-12-01T17:24:01Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "diffHunk": "@@ -218,32 +221,31 @@ private void init()\n         }\n \n         // grovel DSpace configuration for namespaces\n-        List<Namespace> nsList = new ArrayList<Namespace>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<Namespace> nsList = new ArrayList<>();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NDUyNg=="}, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33907082e28f83b7e5b1df65ffd03d6348bc152b", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/33907082e28f83b7e5b1df65ffd03d6348bc152b", "committedDate": "2020-12-01T21:19:25Z", "message": "Address one more review comment.  New unit test class to test it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf4f5c5b5dccb9acb5f6a39c5a5b2f55ee58fc85", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/bf4f5c5b5dccb9acb5f6a39c5a5b2f55ee58fc85", "committedDate": "2020-12-01T21:25:24Z", "message": "Merge remote-tracking branch 'upstream/main' into #2956"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c228076190d15ac928e8d1bd1a0efd870551635", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/6c228076190d15ac928e8d1bd1a0efd870551635", "committedDate": "2020-12-02T13:30:47Z", "message": "Merge branch 'main' into #2956"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODkzOTM5", "url": "https://github.com/DSpace/DSpace/pull/2957#pullrequestreview-542893939", "createdAt": "2020-12-02T14:33:26Z", "commit": {"oid": "6c228076190d15ac928e8d1bd1a0efd870551635"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NjQ2MzE5", "url": "https://github.com/DSpace/DSpace/pull/2957#pullrequestreview-545646319", "createdAt": "2020-12-05T20:08:10Z", "commit": {"oid": "6c228076190d15ac928e8d1bd1a0efd870551635"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1336, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}