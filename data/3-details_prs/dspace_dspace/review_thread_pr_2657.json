{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NjUwODEz", "number": 2657, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1MDo1MFrODb9wBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzozNjoyNFrODcoiog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjQ5ODYwOnYy", "diffSide": "RIGHT", "path": "dspace/config/local.cfg.EXAMPLE", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1MDo1MFrOFjwB4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjo0Nzo1M1rOFkZ_uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzMTM5Mg==", "bodyText": "If this should match dspace.ui.url then shouldn't we refer to it in dspace.ui.url (and dspace.server.url)?  That is:\ndspace.ui.hostname = localhost\ndspace.ui.url = http://${dspace.ui.hostname}:3000\ndspace.server.url = http://${dspace.ui.hostname}:8080/server\n\n(That does make the name dspace.ui.hostname confusing, though.)", "url": "https://github.com/DSpace/DSpace/pull/2657#discussion_r373031392", "createdAt": "2020-01-30T15:50:50Z", "author": {"login": "mwoodiupui"}, "path": "dspace/config/local.cfg.EXAMPLE", "diffHunk": "@@ -30,14 +30,18 @@\n # Windows note: Please remember to use forward slashes for all paths (e.g. C:/dspace)\n dspace.dir=/dspace\n \n-# DSpace host name - should match base URL.  Do not include port number\n-dspace.hostname = localhost\n+# URL of DSpace backend ('server' webapp). Include port number etc.\n+# This is where REST API and all enabled server modules (OAI-PMH, SWORD, SWORDv2, RDF, etc) will respond\n+dspace.server.url = http://localhost:8080/server\n \n-# DSpace server backend webapp URL.  Include port number etc.\n-dspace.baseUrl = http://localhost:8080/server\n+# DSpace UI hostname. Should match dspace.ui.url.  Do not include port number.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzNzAzMA==", "bodyText": "@mwoodiupui : Unfortunately, there's no guarantee that the \"hostname\" is the same for both the frontend (UI) and the backend (REST API).  It might be in many scenarios, but some sites may choose to install these on separate servers, with separate URLs.\nThat's why I chose to rename dspace.hostname to dspace.ui.hostname to clarify that the expected hostname here is the hostname of the frontend (UI), and not necessarily the backend.\nI completely agree that this \"hostname\" is confusing, but I couldn't find a way to easily refactor it out of the codebase altogether.  Perhaps we should build a utility to simply pull the hostname out of the URL rather than configuring it separately.\nUPDATE: I guess we could just consider removing this confusing \"hostname\" configuration and replacing it with a bit of code like this: https://stackoverflow.com/a/23079402", "url": "https://github.com/DSpace/DSpace/pull/2657#discussion_r373037030", "createdAt": "2020-01-30T15:59:37Z", "author": {"login": "tdonohue"}, "path": "dspace/config/local.cfg.EXAMPLE", "diffHunk": "@@ -30,14 +30,18 @@\n # Windows note: Please remember to use forward slashes for all paths (e.g. C:/dspace)\n dspace.dir=/dspace\n \n-# DSpace host name - should match base URL.  Do not include port number\n-dspace.hostname = localhost\n+# URL of DSpace backend ('server' webapp). Include port number etc.\n+# This is where REST API and all enabled server modules (OAI-PMH, SWORD, SWORDv2, RDF, etc) will respond\n+dspace.server.url = http://localhost:8080/server\n \n-# DSpace server backend webapp URL.  Include port number etc.\n-dspace.baseUrl = http://localhost:8080/server\n+# DSpace UI hostname. Should match dspace.ui.url.  Do not include port number.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzMTM5Mg=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1NTk1MQ==", "bodyText": "Plucking the hostname out of the URL (which must be configured) is better than having a property that has to be coordinated with others, in code.  We should do that.\nI was thinking of simplifying the coordination of multiple configuration properties.  Backend and frontend (and Solr) can be on different hosts, but I expect they typically won't be.  In the example we have the same hostname in four places and have to change all four the same way.  However, on reflection I see that there are too many choices, so I suppose my best approach is to give up trying to link it all together.", "url": "https://github.com/DSpace/DSpace/pull/2657#discussion_r373055951", "createdAt": "2020-01-30T16:30:32Z", "author": {"login": "mwoodiupui"}, "path": "dspace/config/local.cfg.EXAMPLE", "diffHunk": "@@ -30,14 +30,18 @@\n # Windows note: Please remember to use forward slashes for all paths (e.g. C:/dspace)\n dspace.dir=/dspace\n \n-# DSpace host name - should match base URL.  Do not include port number\n-dspace.hostname = localhost\n+# URL of DSpace backend ('server' webapp). Include port number etc.\n+# This is where REST API and all enabled server modules (OAI-PMH, SWORD, SWORDv2, RDF, etc) will respond\n+dspace.server.url = http://localhost:8080/server\n \n-# DSpace server backend webapp URL.  Include port number etc.\n-dspace.baseUrl = http://localhost:8080/server\n+# DSpace UI hostname. Should match dspace.ui.url.  Do not include port number.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzMTM5Mg=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA3NjA2MA==", "bodyText": "@mwoodiupui : Yes, I think I agree. I'll update this PR to pluck the hostname out of the URL.  Thanks for this feedback!\nAs for simplifying configuration, I think this will be as simple as we can get.  However, keep in mind, the DSpace configuration system is perfectly OK with you creating new custom configs.  So, locally, anyone could (re)create a hostname config and use it to populate both URLs.", "url": "https://github.com/DSpace/DSpace/pull/2657#discussion_r373076060", "createdAt": "2020-01-30T17:05:11Z", "author": {"login": "tdonohue"}, "path": "dspace/config/local.cfg.EXAMPLE", "diffHunk": "@@ -30,14 +30,18 @@\n # Windows note: Please remember to use forward slashes for all paths (e.g. C:/dspace)\n dspace.dir=/dspace\n \n-# DSpace host name - should match base URL.  Do not include port number\n-dspace.hostname = localhost\n+# URL of DSpace backend ('server' webapp). Include port number etc.\n+# This is where REST API and all enabled server modules (OAI-PMH, SWORD, SWORDv2, RDF, etc) will respond\n+dspace.server.url = http://localhost:8080/server\n \n-# DSpace server backend webapp URL.  Include port number etc.\n-dspace.baseUrl = http://localhost:8080/server\n+# DSpace UI hostname. Should match dspace.ui.url.  Do not include port number.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzMTM5Mg=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcxODk3MQ==", "bodyText": "@mwoodiupui : I've now refactored the code to remove the need for a hostname configuration. See the updated PR description above.\nI'd appreciate your review here, as I did have to do some code refactoring (especially in OAI-PMH) to ensure the \"hostname\" could always be extracted from the URL.  However, I've added tests for all new utility methods & I've done local tests myself and everything seems to be working.", "url": "https://github.com/DSpace/DSpace/pull/2657#discussion_r373718971", "createdAt": "2020-01-31T22:47:53Z", "author": {"login": "tdonohue"}, "path": "dspace/config/local.cfg.EXAMPLE", "diffHunk": "@@ -30,14 +30,18 @@\n # Windows note: Please remember to use forward slashes for all paths (e.g. C:/dspace)\n dspace.dir=/dspace\n \n-# DSpace host name - should match base URL.  Do not include port number\n-dspace.hostname = localhost\n+# URL of DSpace backend ('server' webapp). Include port number etc.\n+# This is where REST API and all enabled server modules (OAI-PMH, SWORD, SWORDv2, RDF, etc) will respond\n+dspace.server.url = http://localhost:8080/server\n \n-# DSpace server backend webapp URL.  Include port number etc.\n-dspace.baseUrl = http://localhost:8080/server\n+# DSpace UI hostname. Should match dspace.ui.url.  Do not include port number.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzMTM5Mg=="}, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzUwOTQ2OnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/core/Utils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzozNjoyNFrOFkxhnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowMDoxN1rOFk0VUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwNDQ3Ng==", "bodyText": "Why do we do this?", "url": "https://github.com/DSpace/DSpace/pull/2657#discussion_r374104476", "createdAt": "2020-02-03T13:36:24Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/core/Utils.java", "diffHunk": "@@ -408,4 +413,38 @@ public static String standardize(String schema, String element, String qualifier\n             return schema + separator + element + separator + qualifier;\n         }\n     }\n+\n+\n+    /**\n+     * Retrieve the hostname from a given URI string\n+     * @param uriString URI string\n+     * @return hostname (without any www.) or null (if URI was invalid)\n+     */\n+    public static String getHostName(String uriString) {\n+        try {\n+            URI uri = new URI(uriString);\n+            String hostname = uri.getHost();\n+            // remove the \"www.\" from hostname, if it exists", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MDQ4Mg==", "bodyText": "@mwoodiupui : Honestly, I guess it was me thinking this looked \"cleaner\" (as www. seem very rarely spelled out these days in URLs).  That said, if we'd rather leave this in the hostname, we could very easily update this method and the corresponding unit test.", "url": "https://github.com/DSpace/DSpace/pull/2657#discussion_r374150482", "createdAt": "2020-02-03T15:00:17Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/core/Utils.java", "diffHunk": "@@ -408,4 +413,38 @@ public static String standardize(String schema, String element, String qualifier\n             return schema + separator + element + separator + qualifier;\n         }\n     }\n+\n+\n+    /**\n+     * Retrieve the hostname from a given URI string\n+     * @param uriString URI string\n+     * @return hostname (without any www.) or null (if URI was invalid)\n+     */\n+    public static String getHostName(String uriString) {\n+        try {\n+            URI uri = new URI(uriString);\n+            String hostname = uri.getHost();\n+            // remove the \"www.\" from hostname, if it exists", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwNDQ3Ng=="}, "originalCommit": null, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1615, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}