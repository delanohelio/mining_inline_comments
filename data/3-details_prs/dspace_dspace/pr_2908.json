{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3OTk1MTYx", "number": 2908, "title": "Ensure ShibbolethRestController only redirects to trusted URLs after authentication", "bodyText": "This bug was discovered/reported by LGTM in the ShibbolethRestController\nDescription\nThe ShibbolethRestController will allow redirection to arbitrary URLs after successful authentication.  This is a security issue if individuals are fooled into clicking the below link while logged in.\nThis behavior can even be reproduced on the demo REST API by doing the following:\n\nLogin the the REST demo site: https://dspace7.4science.cloud/server/login.html\nThen, visit this link:  https://dspace7.4science.cloud/server/api/authn/shibboleth?redirectUrl=http://google.com\nYou will be redirected to the Google homepage\n\nIn this PR, I've modified this Controller to ONLY allow redirects to URLs that have the same hostname as either dspace.server.url or dspace.ui.url configurations.  This should allow Shibboleth to work for any REST API or UI path, but not allow redirects to arbitrary locations.\nInstructions for Reviewers\n\nReview code & verify the new ITs which prove the functionality.\nOptionally, retest above example on a local REST API, and verify that passing \"http://google.com\" now returns a 400 Bad Request response.\nIdeally, someone with Shibboleth can test this new setup to verify that it works as expected with Shibboleth enabled for DSpace.", "createdAt": "2020-07-28T19:06:22Z", "url": "https://github.com/DSpace/DSpace/pull/2908", "merged": true, "mergeCommit": {"oid": "c44613a3df51840f5af06e93e2f04648800fa8d6"}, "closed": true, "closedAt": "2020-07-31T15:57:37Z", "author": {"login": "tdonohue"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5aRCBAH2gAyNDU3OTk1MTYxOjQ0MTA0MzU4N2JhYjdiYjM1MDc2NGZiMDk0MjVmNWI4ZDI5M2U2ZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6VjMMAH2gAyNDU3OTk1MTYxOmNmMmY1MGRmZTVlNDc1NzEzNGE4ZGI4M2MzMTM5NzlkZTRjMmE3NWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "441043587bab7bb350764fb09425f5b8d293e6d7", "author": {"user": {"login": "tdonohue", "name": "Tim Donohue"}}, "url": "https://github.com/DSpace/DSpace/commit/441043587bab7bb350764fb09425f5b8d293e6d7", "committedDate": "2020-07-28T17:55:54Z", "message": "Ensure ShibbolethRestController only redirects to trusted URLs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NTU4MzUw", "url": "https://github.com/DSpace/DSpace/pull/2908#pullrequestreview-458558350", "createdAt": "2020-07-30T16:19:40Z", "commit": {"oid": "441043587bab7bb350764fb09425f5b8d293e6d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjoxOTo0MFrOG5qV9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjoxOTo0MFrOG5qV9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzExNTc2Nw==", "bodyText": "@tdonohue since we are in shibboleth context, this is what I did in the current Shibboleth SLO PR:\nI've added a specific method to that particular authentication method that retrieves a validated URL. To only allows redireccion for what is only configured.\n\n    public static String getURLFromLogoutActionRequest(HttpServletRequest request) throws ShibAuthenticationException {\n        String returnURL = null;\n        // verify if we have shibboleth parameters (action and return)\n        String action = request.getParameter(\"action\");\n        String shibLogoutURL = request.getParameter(\"return\");\n\n        // is shibboleth action for logout?\n        if (ShibAuthentication.SHIBBOLETH_LOGOUT_ACTION.equals(action) && StringUtils.isNotBlank(shibLogoutURL)) {\n            // for security issues we still need to validate return param\n            ConfigurationService configurationService = DSpaceServicesFactory.getInstance().getConfigurationService();\n            String serverUrl = Utils.getBaseUrl(configurationService.getProperty(\"dspace.server.url\"));\n            serverUrl = getSecureURL(serverUrl, request);\n            if (!shibLogoutURL.startsWith(serverUrl)) {\n                throw new ShibAuthenticationException(\"Invalid 'return' param\");\n            }\n            returnURL = shibLogoutURL;\n        }\n        return returnURL;\n    }\n\n\nMeanwhile, I did some refactoring and because of higher priority stuff and I bug I found with logout I didn't got the chance to rebase my work.\nThis work it was based (I think) on @atarix83 work with Shibboleth authentication PR. He added a methods I think it was Utils.getBaseUrl to retrieve the correct and absolute URL. I think, since we are at Shibboleth context it makes sense to try to use those methods to validate the URL redirection.", "url": "https://github.com/DSpace/DSpace/pull/2908#discussion_r463115767", "createdAt": "2020-07-30T16:19:40Z", "author": {"login": "paulo-graca"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/ShibbolethRestController.java", "diffHunk": "@@ -53,8 +55,20 @@ public void shibboleth(HttpServletResponse response,\n         if (redirectUrl == null) {\n             redirectUrl = configurationService.getProperty(\"dspace.ui.url\");\n         }\n-        log.info(\"Redirecting to \" + redirectUrl);\n-        response.sendRedirect(redirectUrl);\n+\n+        // Validate that the redirectURL matches either the server or UI hostname. It *cannot* be an arbitrary URL.\n+        String redirectHostName = Utils.getHostName(redirectUrl);\n+        String serverHostName = Utils.getHostName(configurationService.getProperty(\"dspace.server.url\"));\n+        String clientHostName = Utils.getHostName(configurationService.getProperty(\"dspace.ui.url\"));\n+        if (StringUtils.equalsAnyIgnoreCase(redirectHostName, serverHostName, clientHostName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441043587bab7bb350764fb09425f5b8d293e6d7"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MDk3MTI1", "url": "https://github.com/DSpace/DSpace/pull/2908#pullrequestreview-459097125", "createdAt": "2020-07-31T11:12:32Z", "commit": {"oid": "441043587bab7bb350764fb09425f5b8d293e6d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf2f50dfe5e4757134a8db83c313979de4c2a75a", "author": {"user": {"login": "tdonohue", "name": "Tim Donohue"}}, "url": "https://github.com/DSpace/DSpace/commit/cf2f50dfe5e4757134a8db83c313979de4c2a75a", "committedDate": "2020-07-31T15:00:08Z", "message": "Add a SuppressWarnings annotation for LGTM as it doesn't detect that we fixed this."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1541, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}