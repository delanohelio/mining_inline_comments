{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNDY0NDE5", "number": 2756, "title": "[DS-4149] porting XOAI additional indexer", "bodyText": "The porting for DSpace 7 has been requested on #2709\nThe PR contains:\n\nnew Spring context loader for \"dspace-oai\" project\nnew infrastructure to add additional element to the item.compile field (XOAIItemCompilePlugin)\nsingle implementation for https://openaire-guidelines-for-literature-repository-managers.readthedocs.io/en/v4.0.0/field_licensecondition.html\n\nJira Ticket here: https://jira.lyrasis.org/browse/DS-4149\n\nAddition on 27.05.2021\nFixes #3284", "createdAt": "2020-05-05T11:42:45Z", "url": "https://github.com/DSpace/DSpace/pull/2756", "merged": true, "mergeCommit": {"oid": "d72029a07ca0c1e4722ff576c1815aaa0411c528"}, "closed": true, "closedAt": "2021-06-11T19:30:18Z", "author": {"login": "lap82"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaGTakgH2gAyNDEzNDY0NDE5OjU0MWVhZTRkMzdjYjlhZTMyYWNiZmUwMDA4NzQxYWIzMjMwZjE1NTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABefyMkEgFqTY4MjE1NzAxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "541eae4d37cb9ae32acbfe0008741ab3230f1555", "author": {"user": {"login": "lap82", "name": "Luigi Andrea Pascarelli"}}, "url": "https://github.com/DSpace/DSpace/commit/541eae4d37cb9ae32acbfe0008741ab3230f1555", "committedDate": "2020-04-22T11:08:45Z", "message": "[DS-4149] porting additional indexer OAI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5238b4a5a1deb25b9948be2dff2d69f404fed99a", "author": {"user": {"login": "lap82", "name": "Luigi Andrea Pascarelli"}}, "url": "https://github.com/DSpace/DSpace/commit/5238b4a5a1deb25b9948be2dff2d69f404fed99a", "committedDate": "2020-05-05T10:55:59Z", "message": "[DS-4149] added licenseCondition element"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51", "author": {"user": {"login": "lap82", "name": "Luigi Andrea Pascarelli"}}, "url": "https://github.com/DSpace/DSpace/commit/5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51", "committedDate": "2020-05-05T11:36:02Z", "message": "[DS-4149] resolve checkstyle violations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODI2ODIx", "url": "https://github.com/DSpace/DSpace/pull/2756#pullrequestreview-406826821", "createdAt": "2020-05-06T17:21:02Z", "commit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoyMTowM1rOGRdYeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoyNjoyM1rOGRdl5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2MDM3Nw==", "bodyText": "@tdonohue I would suggest a better description here, can you help me?\nwhat about: OAIItemCompile to add in the xoai document details about the Item CCLicense", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r420960377", "createdAt": "2020-05-06T17:21:03Z", "author": {"login": "abollini"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/app/CCElementAdditional.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.xoai.app;\n+\n+import java.io.IOException;\n+import java.sql.SQLException;\n+import java.util.List;\n+\n+import com.lyncode.xoai.dataprovider.xml.xoai.Element;\n+import com.lyncode.xoai.dataprovider.xml.xoai.Metadata;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.Logger;\n+import org.dspace.authorize.AuthorizeException;\n+import org.dspace.content.Item;\n+import org.dspace.core.Context;\n+import org.dspace.license.CCLookup;\n+import org.dspace.license.factory.LicenseServiceFactory;\n+import org.dspace.license.service.CreativeCommonsService;\n+import org.dspace.xoai.util.ItemUtils;\n+\n+/**\n+ * Utility class to build xml element to support Creative Commons information", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2MTI3Mg==", "bodyText": "is there a reason for this local cache? why not retrieve the CreativeCommonsService via the factory each time? or eventually, can we use autowiring?", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r420961272", "createdAt": "2020-05-06T17:22:29Z", "author": {"login": "abollini"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/app/CCElementAdditional.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.xoai.app;\n+\n+import java.io.IOException;\n+import java.sql.SQLException;\n+import java.util.List;\n+\n+import com.lyncode.xoai.dataprovider.xml.xoai.Element;\n+import com.lyncode.xoai.dataprovider.xml.xoai.Metadata;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.Logger;\n+import org.dspace.authorize.AuthorizeException;\n+import org.dspace.content.Item;\n+import org.dspace.core.Context;\n+import org.dspace.license.CCLookup;\n+import org.dspace.license.factory.LicenseServiceFactory;\n+import org.dspace.license.service.CreativeCommonsService;\n+import org.dspace.xoai.util.ItemUtils;\n+\n+/**\n+ * Utility class to build xml element to support Creative Commons information\n+ *\n+ */\n+public class CCElementAdditional implements XOAIItemCompilePlugin {\n+\n+    private static Logger log = LogManager.getLogger(CCElementAdditional.class);\n+\n+    private CreativeCommonsService creativeCommonsService;\n+\n+    @Override\n+    public Metadata additionalMetadata(Context context, Metadata metadata, Item item) {\n+\n+        Element other;\n+        List<Element> elements = metadata.getElement();\n+        if (ItemUtils.getElement(elements, \"others\") != null) {\n+            other = ItemUtils.getElement(elements, \"others\");\n+        } else {\n+            other = ItemUtils.create(\"others\");\n+        }\n+        String ccLicense = null;\n+\n+        try {\n+            String licenseURL = getCreativeCommonsService().getLicenseURL(context, item);\n+            if (StringUtils.isNotBlank(licenseURL)) {\n+                CCLookup ccLookup = new CCLookup();\n+                ccLookup.issue(licenseURL);\n+                String licenseName = ccLookup.getLicenseName();\n+                ccLicense = licenseName + \"|||\" + licenseURL;\n+            }\n+        } catch (SQLException | IOException | AuthorizeException e) {\n+            log.error(e.getMessage(), e);\n+        }\n+        other.getField().add(ItemUtils.createValue(\"cc\", ccLicense));\n+        return metadata;\n+    }\n+\n+    public CreativeCommonsService getCreativeCommonsService() {\n+        if (creativeCommonsService == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2MTc1Mg==", "bodyText": "is there a reason for this local cache? can we use autowiring?", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r420961752", "createdAt": "2020-05-06T17:23:16Z", "author": {"login": "abollini"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/app/XOAI.java", "diffHunk": "@@ -698,4 +708,21 @@ private static void usage() {\n             System.out.println(\"     -h Shows this text\");\n         }\n     }\n+\n+    /**\n+     * Do any additional content on \"item.compile\" field, depends on the plugins\n+     * \n+     * @return\n+     */\n+    public List<XOAIItemCompilePlugin> getxOAIItemCompilePlugins() {\n+        if (xOAIItemCompilePlugins == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2MzQ0OQ==", "bodyText": "javadoc is needed here.\nwhat about:\nThis method allows XOAIItemCompilePlugins to add content to the xoai document generated for the item.\nmetadata: the basic xoai representation of the item that can be manipulated by the plugin\nitem: the dspace item to index", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r420963449", "createdAt": "2020-05-06T17:25:46Z", "author": {"login": "abollini"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/app/XOAIItemCompilePlugin.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.xoai.app;\n+\n+import com.lyncode.xoai.dataprovider.xml.xoai.Metadata;\n+import org.dspace.content.Item;\n+import org.dspace.core.Context;\n+\n+\n+/**\n+ * Used to enrich item.compile field description\n+ *\n+ */\n+public interface XOAIItemCompilePlugin {\n+\n+    public Metadata additionalMetadata(Context context, Metadata metadata, Item item);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2MzgxMg==", "bodyText": "can we indent better please?", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r420963812", "createdAt": "2020-05-06T17:26:23Z", "author": {"login": "abollini"}, "path": "dspace/config/spring/oai/oai.xml", "diffHunk": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    The contents of this file are subject to the license and copyright\n+    detailed in the LICENSE and NOTICE files at the root of the source\n+    tree and available online at\n+\n+    http://www.dspace.org/license/\n+\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xmlns:context=\"http://www.springframework.org/schema/context\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                  http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n+                  http://www.springframework.org/schema/context\n+                  http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n+\n+    <context:annotation-config /> <!-- allows us to use spring annotations in beans -->\n+\n+\t<!-- Additional item.compile plugin to enrich field with information about Creative Commons License metadata -->\n+\t<bean id=\"CCElementAdditional\"\n+\tclass=\"org.dspace.xoai.app.CCElementAdditional\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MjE5OTk1", "url": "https://github.com/DSpace/DSpace/pull/2756#pullrequestreview-416219995", "createdAt": "2020-05-21T14:53:41Z", "commit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNDo1Mzo0MlrOGY1-jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0OToxNVrOGY6oIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcwMzM3NQ==", "bodyText": "You can add more elements and fields to xoai, you can create a new structure for this specific need avoiding to do this kind of concatenation and further required processing to separate it.", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r428703375", "createdAt": "2020-05-21T14:53:42Z", "author": {"login": "paulo-graca"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/app/CCElementAdditional.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.xoai.app;\n+\n+import java.io.IOException;\n+import java.sql.SQLException;\n+import java.util.List;\n+\n+import com.lyncode.xoai.dataprovider.xml.xoai.Element;\n+import com.lyncode.xoai.dataprovider.xml.xoai.Metadata;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.Logger;\n+import org.dspace.authorize.AuthorizeException;\n+import org.dspace.content.Item;\n+import org.dspace.core.Context;\n+import org.dspace.license.CCLookup;\n+import org.dspace.license.factory.LicenseServiceFactory;\n+import org.dspace.license.service.CreativeCommonsService;\n+import org.dspace.xoai.util.ItemUtils;\n+\n+/**\n+ * Utility class to build xml element to support Creative Commons information\n+ *\n+ */\n+public class CCElementAdditional implements XOAIItemCompilePlugin {\n+\n+    private static Logger log = LogManager.getLogger(CCElementAdditional.class);\n+\n+    private CreativeCommonsService creativeCommonsService;\n+\n+    @Override\n+    public Metadata additionalMetadata(Context context, Metadata metadata, Item item) {\n+\n+        Element other;\n+        List<Element> elements = metadata.getElement();\n+        if (ItemUtils.getElement(elements, \"others\") != null) {\n+            other = ItemUtils.getElement(elements, \"others\");\n+        } else {\n+            other = ItemUtils.create(\"others\");\n+        }\n+        String ccLicense = null;\n+\n+        try {\n+            String licenseURL = getCreativeCommonsService().getLicenseURL(context, item);\n+            if (StringUtils.isNotBlank(licenseURL)) {\n+                CCLookup ccLookup = new CCLookup();\n+                ccLookup.issue(licenseURL);\n+                String licenseName = ccLookup.getLicenseName();\n+                ccLicense = licenseName + \"|||\" + licenseURL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcwNjI2Ng==", "bodyText": "I think you could achieve the same by adding more descriptive <doc:fields>", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r428706266", "createdAt": "2020-05-21T14:56:47Z", "author": {"login": "paulo-graca"}, "path": "dspace/config/crosswalks/oai/metadataFormats/oai_openaire.xsl", "diffHunk": "@@ -1527,7 +1529,26 @@\n         </xsl:if>\n     </xsl:template>\n \n-\n+\t<!-- License CC splitter -->\n+\t<xsl:variable name=\"ccstart\">\n+\t\t<xsl:value-of select=\"doc:metadata/doc:element[@name='dc']/doc:element[@name='date']/doc:element[@name='issued']/doc:element/doc:field[@name='value']/text()\"/>\n+\t</xsl:variable>\n+\t\n+\t<xsl:template\n+\t\tmatch=\"doc:element[@name='others']/doc:field[@name='cc']\"\n+\t\tmode=\"oaire\">\n+\t\t<oaire:licenseCondition>\n+\t\t\t<xsl:attribute name=\"startDate\">\n+\t\t\t\t<xsl:value-of\n+\t\t\t\t\tselect=\"$ccstart\"/>\n+\t\t\t</xsl:attribute>\n+\t\t\t<xsl:attribute name=\"uri\">\n+\t\t\t\t<xsl:value-of\n+\t\t\t\t\tselect=\"substring-after(./text(),'|||')\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNTAzMA==", "bodyText": "I think the chose naming doesn't help understand what is supposed to do. Since it is supposed to add additional elements why the interface doesn't have that name? Also, if this class is the plugin, I think, for better understanding you could suffix it likewise.", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r428735030", "createdAt": "2020-05-21T15:40:02Z", "author": {"login": "paulo-graca"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/app/CCElementAdditional.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.xoai.app;\n+\n+import java.io.IOException;\n+import java.sql.SQLException;\n+import java.util.List;\n+\n+import com.lyncode.xoai.dataprovider.xml.xoai.Element;\n+import com.lyncode.xoai.dataprovider.xml.xoai.Metadata;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.Logger;\n+import org.dspace.authorize.AuthorizeException;\n+import org.dspace.content.Item;\n+import org.dspace.core.Context;\n+import org.dspace.license.CCLookup;\n+import org.dspace.license.factory.LicenseServiceFactory;\n+import org.dspace.license.service.CreativeCommonsService;\n+import org.dspace.xoai.util.ItemUtils;\n+\n+/**\n+ * Utility class to build xml element to support Creative Commons information\n+ *\n+ */\n+public class CCElementAdditional implements XOAIItemCompilePlugin {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc2NjU1MA==", "bodyText": "As referred this name is confusing to me. Perhaps with a more detailed description I can help you find a better name.", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r428766550", "createdAt": "2020-05-21T16:26:53Z", "author": {"login": "paulo-graca"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/app/XOAIItemCompilePlugin.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.xoai.app;\n+\n+import com.lyncode.xoai.dataprovider.xml.xoai.Metadata;\n+import org.dspace.content.Item;\n+import org.dspace.core.Context;\n+\n+\n+/**\n+ * Used to enrich item.compile field description\n+ *\n+ */\n+public interface XOAIItemCompilePlugin {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3MDAxMA==", "bodyText": "I really like what you are proposing. But I would like you to test the real impact of this change and if it affects the xoai processing times in any way.", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r428770010", "createdAt": "2020-05-21T16:32:45Z", "author": {"login": "paulo-graca"}, "path": "dspace/config/spring/oai/oai.xml", "diffHunk": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    The contents of this file are subject to the license and copyright\n+    detailed in the LICENSE and NOTICE files at the root of the source\n+    tree and available online at\n+\n+    http://www.dspace.org/license/\n+\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xmlns:context=\"http://www.springframework.org/schema/context\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                  http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n+                  http://www.springframework.org/schema/context\n+                  http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n+\n+    <context:annotation-config /> <!-- allows us to use spring annotations in beans -->\n+\n+\t<!-- Additional item.compile plugin to enrich field with information about Creative Commons License metadata -->\n+\t<bean id=\"CCElementAdditional\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3ODEwOQ==", "bodyText": "The camel for XOAI abreviation looks weird here xOAIItemCompilePlugin I would prefer to have xoaiItemCompilePlugin.\nBut as referred I'm also not in love with this name since It's not clear to me what it is. Could you call it xoaiExtensionPlugin  or xoaiAdditionalElementPlugin. I have some difficulty in proposing better names. I would need to better understand what the interface helps doing.", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r428778109", "createdAt": "2020-05-21T16:46:44Z", "author": {"login": "paulo-graca"}, "path": "dspace-oai/src/main/java/org/dspace/xoai/app/XOAI.java", "diffHunk": "@@ -455,7 +458,14 @@ private SolrInputDocument index(Item item)\n \n         ByteArrayOutputStream out = new ByteArrayOutputStream();\n         XmlOutputContext xmlContext = XmlOutputContext.emptyContext(out, Second);\n-        retrieveMetadata(context, item).write(xmlContext);\n+        Metadata metadata = retrieveMetadata(context, item);\n+\n+        // Do any additional metadata element, depends on the plugins\n+        for (XOAIItemCompilePlugin xOAIItemCompilePlugin : getxOAIItemCompilePlugins()) {\n+            metadata = xOAIItemCompilePlugin.additionalMetadata(context, metadata, item);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3OTU1Mg==", "bodyText": "I think you could have this with a different structure like a specific element with multiple fields", "url": "https://github.com/DSpace/DSpace/pull/2756#discussion_r428779552", "createdAt": "2020-05-21T16:49:15Z", "author": {"login": "paulo-graca"}, "path": "dspace/config/crosswalks/oai/metadataFormats/oai_openaire.xsl", "diffHunk": "@@ -81,7 +81,9 @@\n             <!-- oaire:citation* -->\n             <xsl:apply-templates\n                 select=\"doc:metadata/doc:element[@name='oaire']/doc:element[@name='citation']\" mode=\"oaire\"/>\n-\n+\t\t\t<!-- CREATIVE COMMON LICENSE -->\n+\t\t\t<xsl:apply-templates\n+\t\t\t\tselect=\"doc:metadata/doc:element[@name='others']/doc:field[@name='cc']\" mode=\"oaire\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd25b1c0b74a4d91363b5d93431e73e3a8ebf51"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d2a4a77b2ac250b7869088f3ec079b48b71e45a", "author": {"user": {"login": "abollini", "name": "Andrea Bollini"}}, "url": "https://github.com/DSpace/DSpace/commit/2d2a4a77b2ac250b7869088f3ec079b48b71e45a", "committedDate": "2021-05-26T16:19:49Z", "message": "Merge branch 'main' of https://github.com/DSpace/DSpace into DS-4149_7-x"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abe4e6996a1e00853ed723be014ce6a002468225", "author": {"user": {"login": "abollini", "name": "Andrea Bollini"}}, "url": "https://github.com/DSpace/DSpace/commit/abe4e6996a1e00853ed723be014ce6a002468225", "committedDate": "2021-05-26T17:25:35Z", "message": "cleanup the generation of the oaire:licenseCondition element"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ad13bdf5fc48416de4e2ed44f7e3b654396f853", "author": {"user": {"login": "abollini", "name": "Andrea Bollini"}}, "url": "https://github.com/DSpace/DSpace/commit/0ad13bdf5fc48416de4e2ed44f7e3b654396f853", "committedDate": "2021-05-26T22:08:09Z", "message": "Fix plugins retrieval and bitstreams url link (issue - 3284)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc0MDEzNzY2", "url": "https://github.com/DSpace/DSpace/pull/2756#pullrequestreview-674013766", "createdAt": "2021-06-02T10:19:24Z", "commit": {"oid": "0ad13bdf5fc48416de4e2ed44f7e3b654396f853"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjgyMTU3MDE5", "url": "https://github.com/DSpace/DSpace/pull/2756#pullrequestreview-682157019", "createdAt": "2021-06-11T19:29:01Z", "commit": {"oid": "0ad13bdf5fc48416de4e2ed44f7e3b654396f853"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1442, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}