{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzOTE5NzM3", "number": 3041, "title": "Issue 2988: EPerson Password Replacement/addition with ADD Patch Operation instead of REPLACE", "bodyText": "References\n\nFixes #2988\n\nDescription\nThis PR changes the EPerson Password Replace Patch operation to an Add operation. It also removed the constraint that an EPerson had to have a Password prior to replacing it.\nIt fixes the issue where an EPerson without a password was never able to be assigned one with this Patch operation\nThis Add patch will also replace the password for an EPerson if it already had one\nInstructions for Reviewers\nList of changes in this PR:\n\nChanged the EPerson Password Replace from a REPLACE patch operation to an ADD patch operation\nChanged tests and docs to reflect this change\n\nHow to test this PR:\n\nCreate an EPerson without password\nPerform the Add Password Patch operation\nTry to login with the newly made password, ensure it works as expected\n\nChecklist\n\n My PR is small in size (e.g. less than 1,000 lines of code, not including comments & integration tests). Exceptions may be made if previously agreed upon.\n My PR passes Checkstyle validation based on the Code Style Guide.\n My PR includes Javadoc for all new (or modified) public methods and classes. It also includes Javadoc for large or complex private methods.\n My PR passes all tests and includes new/updated Unit or Integration Tests based on the Code Testing Guide.\n If my PR includes new, third-party dependencies (in any pom.xml), I've made sure their licenses align with the DSpace BSD License based on the Licensing of Contributions documentation.\n If my PR modifies the REST API, I've linked to the REST Contract page (or open PR) related to this change.", "createdAt": "2020-11-02T09:22:34Z", "url": "https://github.com/DSpace/DSpace/pull/3041", "merged": true, "mergeCommit": {"oid": "7f323265bef2549510b345ca21b8097c3ac129dc"}, "closed": true, "closedAt": "2020-11-20T20:31:07Z", "author": {"login": "Raf-atmire"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW_AEmAH2gAyNTEzOTE5NzM3OmNkNWJlNWI4NGZkMGI0ZTUwZmVhZTZhMmU4NDAyMmRiMDc3ZjBkZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdedaSBgFqTUzNTc1NjAzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cd5be5b84fd0b4e50feae6a2e84022db077f0dd3", "author": {"user": {"login": "MarieVerdonck", "name": "Marie Verdonck"}}, "url": "https://github.com/DSpace/DSpace/commit/cd5be5b84fd0b4e50feae6a2e84022db077f0dd3", "committedDate": "2020-10-28T15:07:40Z", "message": "74274: [Issue 2988]: EPersonPasswordReplaceOperation => AddOperation; eperson password can be added&replaced with this patch operation + test changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTI5NjE4", "url": "https://github.com/DSpace/DSpace/pull/3041#pullrequestreview-524929618", "createdAt": "2020-11-06T08:07:16Z", "commit": {"oid": "cd5be5b84fd0b4e50feae6a2e84022db077f0dd3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODowNzoxNlrOHujy5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODowNzoxNlrOHujy5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4MzAxMw==", "bodyText": "the scenario in the original test is loss. What happen if we try to set an empty password?", "url": "https://github.com/DSpace/DSpace/pull/3041#discussion_r518583013", "createdAt": "2020-11-06T08:07:16Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1410,14 +1411,14 @@ public void patchCertificateNonAdminUser() throws Exception {\n     }\n \n     @Test\n-    public void patchPasswordMissingValue() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5be5b84fd0b4e50feae6a2e84022db077f0dd3"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MzY4NDIw", "url": "https://github.com/DSpace/DSpace/pull/3041#pullrequestreview-525368420", "createdAt": "2020-11-06T17:48:33Z", "commit": {"oid": "cd5be5b84fd0b4e50feae6a2e84022db077f0dd3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c21703b5eab3b67e13e81a8595db5ee686df1a9", "author": {"user": {"login": "MarieVerdonck", "name": "Marie Verdonck"}}, "url": "https://github.com/DSpace/DSpace/commit/2c21703b5eab3b67e13e81a8595db5ee686df1a9", "committedDate": "2020-11-09T10:39:31Z", "message": "Test for null value patch added back in"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NjQzNjY5", "url": "https://github.com/DSpace/DSpace/pull/3041#pullrequestreview-526643669", "createdAt": "2020-11-09T20:51:07Z", "commit": {"oid": "2c21703b5eab3b67e13e81a8595db5ee686df1a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNjgzMDk2", "url": "https://github.com/DSpace/DSpace/pull/3041#pullrequestreview-532683096", "createdAt": "2020-11-17T18:46:25Z", "commit": {"oid": "2c21703b5eab3b67e13e81a8595db5ee686df1a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNjg1MjI4", "url": "https://github.com/DSpace/DSpace/pull/3041#pullrequestreview-532685228", "createdAt": "2020-11-17T18:49:11Z", "commit": {"oid": "2c21703b5eab3b67e13e81a8595db5ee686df1a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0OToxMVrOH1EHZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0OToxMVrOH1EHZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDAwNA==", "bodyText": "I have approved this PR but I want to note that this test is not exactly what I would expect. It would be better to test for the authn/status endpoint to verify that we are really loggedin. It is not documented what should happen trying to access a public endpoint with an invalid token. @tdonohue do you agree? should we open a ticket for that? again this PR can be merged as is as this is unrelated with the PR", "url": "https://github.com/DSpace/DSpace/pull/3041#discussion_r525404004", "createdAt": "2020-11-17T18:49:11Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1411,49 +1412,70 @@ public void patchCertificateNonAdminUser() throws Exception {\n \n     @Test\n     public void patchPasswordMissingValue() throws Exception {\n-\n         context.turnOffAuthorisationSystem();\n \n+        String originalPw = \"testpass79bC\";\n+\n         EPerson ePerson = EPersonBuilder.createEPerson(context)\n                                         .withNameInMetadata(\"John\", \"Doe\")\n                                         .withEmail(\"Johndoe@example.com\")\n-                                        .withPassword(\"testpass79bC\")\n+                                        .withPassword(originalPw)\n                                         .build();\n \n         context.restoreAuthSystemState();\n \n         String token = getAuthToken(admin.getEmail(), password);\n \n-        String newPassword = \"newpass\";\n-\n-        List<Operation> ops = new ArrayList<Operation>();\n-        ReplaceOperation replaceOperation = new ReplaceOperation(\"/password\", newPassword);\n-        ops.add(replaceOperation);\n+        List<Operation> ops = new ArrayList<>();\n+        AddOperation addOperation = new AddOperation(\"/password\", null);\n+        ops.add(addOperation);\n         String patchBody = getPatchContent(ops);\n \n-        // initialize passwd\n+        // adding null pw should return bad request\n         getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n-                .content(patchBody)\n-                .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+            .content(patchBody)\n+            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isBadRequest());\n+\n+        // login with original password\n+        token = getAuthToken(ePerson.getEmail(), originalPw);\n+        getClient(token).perform(get(\"/api/\"))\n                         .andExpect(status().isOk());\n \n+    }\n \n-        List<Operation> ops2 = new ArrayList<Operation>();\n-        ReplaceOperation replaceOperation2 = new ReplaceOperation(\"/password\", null);\n-        ops2.add(replaceOperation2);\n-        patchBody = getPatchContent(ops2);\n+    @Test\n+    public void patchPasswordNotInitialised() throws Exception {\n \n-        // should return bad request\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"userNotInitialised@example.com\")\n+                                        .withCanLogin(true)\n+                                        .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        String newPassword = \"newpass\";\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        AddOperation addOperation = new AddOperation(\"/password\", newPassword);\n+        ops.add(addOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        // initialize password with add operation, not set during creation\n         getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n                 .content(patchBody)\n                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n-                        .andExpect(status().isBadRequest());\n+                        .andExpect(status().isOk());\n \n-        // login with original password\n+        // login with new password => succeeds\n         token = getAuthToken(ePerson.getEmail(), newPassword);\n         getClient(token).perform(get(\"/api/\"))\n                         .andExpect(status().isOk());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c21703b5eab3b67e13e81a8595db5ee686df1a9"}, "originalPosition": 136}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NTI0NjAx", "url": "https://github.com/DSpace/DSpace/pull/3041#pullrequestreview-534524601", "createdAt": "2020-11-19T14:52:17Z", "commit": {"oid": "2c21703b5eab3b67e13e81a8595db5ee686df1a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "924b178dcf6e4469664dbdeee89ad5b2832b8af6", "author": {"user": {"login": "MarieVerdonck", "name": "Marie Verdonck"}}, "url": "https://github.com/DSpace/DSpace/commit/924b178dcf6e4469664dbdeee89ad5b2832b8af6", "committedDate": "2020-11-20T16:00:45Z", "message": "74274: Refactor check success/failed authentication"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzU2MDM2", "url": "https://github.com/DSpace/DSpace/pull/3041#pullrequestreview-535756036", "createdAt": "2020-11-20T20:30:55Z", "commit": {"oid": "924b178dcf6e4469664dbdeee89ad5b2832b8af6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1378, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}