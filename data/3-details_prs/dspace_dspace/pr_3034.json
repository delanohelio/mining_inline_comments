{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMzY5NDY1", "number": 3034, "title": "Community admin should also be considered a Collection admin", "bodyText": "Description\nThe Community admins should also be considered a Collection admins. Currently, however, if a user is a community admin he is not also considered as a collection admin.\nInstructions for Reviewers\nI changed the implementation of the method org.dspace.authorize.AuthorizeServiceImpl.isCollectionAdmin(Context, EPerson) to return true even if the user is a Community admin.\nChecklist\n\n My PR is small in size (e.g. less than 1,000 lines of code, not including comments & integration tests). Exceptions may be made if previously agreed upon.\n My PR passes Checkstyle validation based on the Code Style Guide.\n My PR includes Javadoc for all new (or modified) public methods and classes. It also includes Javadoc for large or complex private methods.\n My PR passes all tests and includes new/updated Unit or Integration Tests based on the Code Testing Guide.", "createdAt": "2020-10-29T15:40:16Z", "url": "https://github.com/DSpace/DSpace/pull/3034", "merged": true, "mergeCommit": {"oid": "0c5e68c5e3db788cd0e88a9bd5461469500f3952"}, "closed": true, "closedAt": "2020-12-01T20:18:04Z", "author": {"login": "LucaGiamminonni"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXTyEtgH2gAyNTEyMzY5NDY1OmQ4ZDNhY2E5OTVlYzNjMjBhMDM1NDk0MjI4YjA0NTUwMWRjODA4YjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh_0YPAFqTU0MjI2MjI5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d8d3aca995ec3c20a035494228b045501dc808b0", "author": {"user": {"login": "LucaGiamminonni", "name": "Luca Giamminonni"}}, "url": "https://github.com/DSpace/DSpace/commit/d8d3aca995ec3c20a035494228b045501dc808b0", "committedDate": "2020-10-29T15:20:23Z", "message": "Community admin should also be considered a Collection admin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1Mjg3MDk2", "url": "https://github.com/DSpace/DSpace/pull/3034#pullrequestreview-525287096", "createdAt": "2020-11-06T16:03:22Z", "commit": {"oid": "d8d3aca995ec3c20a035494228b045501dc808b0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjowMzoyMlrOHuz8Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjowNTozNlrOHu0BnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg0NzUxMA==", "bodyText": "Both of these tests should be using Builder classes to create all content.  Using a Builder will ensure that the content created is automatically deleted after the test completes.  Currently, these tests are not cleaning up after themselves.\nSo, please update these tests to use CollectionBuilder, CommunityBuilder and EPersonBuilder.  Note that you also don't need to create the Admin group, as you can use CollectionBuilder.withAdminGroup(Eperson) instead.", "url": "https://github.com/DSpace/DSpace/pull/3034#discussion_r518847510", "createdAt": "2020-11-06T16:03:22Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/test/java/org/dspace/authorize/AuthorizeServiceTest.java", "diffHunk": "@@ -125,4 +128,39 @@ public void testauthorizeMethodRespectSpecialGroups() {\n             throw new AssertionError(ex);\n         }\n     }\n+\n+    @Test\n+    public void testIsCollectionAdmin() throws SQLException, AuthorizeException {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        Community community = communityService.create(null, context);\n+        Collection collection = collectionService.create(context, community);\n+        EPerson eperson = ePersonService.create(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8d3aca995ec3c20a035494228b045501dc808b0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg0ODkyNA==", "bodyText": "Same here, use Builders please.\nAlso, for full test completion, would you be willing to add a testIsCommunityAdmin() method here...as it seems to be missing & it'd be good to also prove that a Community Admin also results in that method returning true, while a Collection Admin results in that method returning false.", "url": "https://github.com/DSpace/DSpace/pull/3034#discussion_r518848924", "createdAt": "2020-11-06T16:05:36Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/test/java/org/dspace/authorize/AuthorizeServiceTest.java", "diffHunk": "@@ -125,4 +128,39 @@ public void testauthorizeMethodRespectSpecialGroups() {\n             throw new AssertionError(ex);\n         }\n     }\n+\n+    @Test\n+    public void testIsCollectionAdmin() throws SQLException, AuthorizeException {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        Community community = communityService.create(null, context);\n+        Collection collection = collectionService.create(context, community);\n+        EPerson eperson = ePersonService.create(context);\n+\n+        Group administrators = collectionService.createAdministrators(context, collection);\n+        groupService.addMember(context, administrators, eperson);\n+\n+        context.restoreAuthSystemState();\n+        context.commit();\n+\n+        Assert.assertTrue(authorizeService.isCollectionAdmin(context, eperson));\n+    }\n+\n+    @Test\n+    public void testIsCollectionAdminReturnsTrueIfTheUserIsCommunityAdmin() throws SQLException, AuthorizeException {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        Community community = communityService.create(null, context);\n+        EPerson eperson = ePersonService.create(context);\n+\n+        Group administrators = communityService.createAdministrators(context, community);\n+        groupService.addMember(context, administrators, eperson);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8d3aca995ec3c20a035494228b045501dc808b0"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79ee010a7a816d2494b9c1de6ac0e15118b09c72", "author": {"user": {"login": "LucaGiamminonni", "name": "Luca Giamminonni"}}, "url": "https://github.com/DSpace/DSpace/commit/79ee010a7a816d2494b9c1de6ac0e15118b09c72", "committedDate": "2020-11-26T15:36:36Z", "message": "Added tests cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMjYyMjkz", "url": "https://github.com/DSpace/DSpace/pull/3034#pullrequestreview-542262293", "createdAt": "2020-12-01T20:17:58Z", "commit": {"oid": "79ee010a7a816d2494b9c1de6ac0e15118b09c72"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1369, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}