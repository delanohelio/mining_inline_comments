{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTEwODU2", "number": 2670, "title": "DS-4433 Specify embeds", "bodyText": "https://jira.lyrasis.org/browse/DS-4433\nAdds support for specifying exact embeds to include in responses, e.g.\nitems/{uuid}?embed=bundles&embed=owningCollection\n\n- or -\n\nitems/{uuid}?embed=bundles,owningCollection\n\nIt also adds support for composite projections, using a similar syntax for multiple values. See javadocs for details.\nitems/{uuid}?projection=p1&projection=p2\n\n- or -\n\nitems/{uuid}?projection=p1,p2", "createdAt": "2020-02-13T14:51:39Z", "url": "https://github.com/DSpace/DSpace/pull/2670", "merged": true, "mergeCommit": {"oid": "2adb3143ce3b2659259cb7173c3e326dc22dc78a"}, "closed": true, "closedAt": "2020-03-09T15:04:00Z", "author": {"login": "cwilper"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD-BFMgH2gAyMzc0OTEwODU2OjQ1YjQ1ZDM5YWFjZDY0MDY1ZDJmZDYxZmU0OGJmYTRkNjUwZGEyN2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcL-vF4AFqTM3MTIyNjc1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "45b45d39aacd64065d2fd61fe48bfa4d650da27f", "author": {"user": {"login": "cwilper", "name": "Chris Wilper"}}, "url": "https://github.com/DSpace/DSpace/commit/45b45d39aacd64065d2fd61fe48bfa4d650da27f", "committedDate": "2020-02-13T17:03:09Z", "message": "DS-4433 Add support to request specific embeds"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "45b45d39aacd64065d2fd61fe48bfa4d650da27f", "author": {"user": {"login": "cwilper", "name": "Chris Wilper"}}, "url": "https://github.com/DSpace/DSpace/commit/45b45d39aacd64065d2fd61fe48bfa4d650da27f", "committedDate": "2020-02-13T17:03:09Z", "message": "DS-4433 Add support to request specific embeds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6e3758a4042135f2e6d45e11a778ce91e300555", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/c6e3758a4042135f2e6d45e11a778ce91e300555", "committedDate": "2020-02-19T13:32:50Z", "message": "Cast to RestAddressableModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48c6bcb88bfb31acdf1ddcf59a0fb79dd4807796", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/48c6bcb88bfb31acdf1ddcf59a0fb79dd4807796", "committedDate": "2020-02-20T08:53:32Z", "message": "Add previously processed links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "533570538aa66add416107d01950ed8a386caad5", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/533570538aa66add416107d01950ed8a386caad5", "committedDate": "2020-02-20T08:53:55Z", "message": "Add docs, Change max embeds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9534a0b3aaa4ebe4bddb341356e87be30d9e899d", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/9534a0b3aaa4ebe4bddb341356e87be30d9e899d", "committedDate": "2020-02-20T08:56:15Z", "message": "Fix imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODkyNzAw", "url": "https://github.com/DSpace/DSpace/pull/2670#pullrequestreview-362892700", "createdAt": "2020-02-21T20:19:30Z", "commit": {"oid": "45b45d39aacd64065d2fd61fe48bfa4d650da27f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDoxOTozMVrOFtDddQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDoxOTozMVrOFtDddQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjkzMw==", "bodyText": "Silly question, but what are \"rels\"?  Can we enhance the JavaDocs here a bit...it's unclear what constitutes a valid \"rel\". For example, how do we know what \"rels\" are valid to pass in?\nThat question is a bit \"tongue in cheek\", as I'm assuming that by \"rels\" you mean relationships, which are actually named _links in HAL format.  But, it'd be good to spell that out, or even consider renaming this EmbedLinksProjection (since any link is valid to pass to embed, I presume).  The rename here is optional, but I the the Javadocs do need improving here.", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r382786933", "createdAt": "2020-02-21T20:19:31Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/projection/EmbedRelsProjection.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.projection;\n+\n+import java.util.Set;\n+\n+import org.dspace.app.rest.model.LinkRest;\n+import org.dspace.app.rest.model.hateoas.HALResource;\n+\n+/**\n+ * Projection that allows a given set of rels to be embedded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b45d39aacd64065d2fd61fe48bfa4d650da27f"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba76270beaed2b85dd78baa315fb11286c665c24", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/ba76270beaed2b85dd78baa315fb11286c665c24", "committedDate": "2020-02-28T14:35:08Z", "message": "Merge remote-tracking branch 'origin/DS-4433_Specify-embeds-Continued-2' into w2p-69133_refactoring-and-its-specific-embeds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af5abeb524fdecd8f57f3561e8e797a47de44191", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/af5abeb524fdecd8f57f3561e8e797a47de44191", "committedDate": "2020-02-28T14:36:03Z", "message": "Merge remote-tracking branch 'origin/w2p-68607_add-link-to-parent-community' into w2p-69133_refactoring-and-its-specific-embeds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e659c199d86491ff23bf57c067d42b5b5d343310", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/e659c199d86491ff23bf57c067d42b5b5d343310", "committedDate": "2020-03-02T10:06:14Z", "message": "[Task 69133] added tests for Projections level and specific embed; applied small refactors to beans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39c792caf0ca2238e48b3002086e5a9637f27f25", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/39c792caf0ca2238e48b3002086e5a9637f27f25", "committedDate": "2020-03-03T10:27:11Z", "message": "[Task 69270] applied the feedback with regards to the projections.xml, spring-dspace-core-services.xml and test comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe664b3f6c673b82b91ac2f2b27f7d45343620fc", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/fe664b3f6c673b82b91ac2f2b27f7d45343620fc", "committedDate": "2020-03-03T12:06:07Z", "message": "Example of different implementation for specificLevelEmbed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20fa413ad8da2f8b00cb28318785d8474c582a2b", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/20fa413ad8da2f8b00cb28318785d8474c582a2b", "committedDate": "2020-03-04T11:01:06Z", "message": "[Task 69284] fully refactored the SpecificLevelProjection and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/3c01cc2a80e6e6ecc5a4f168956e86509ec27acd", "committedDate": "2020-03-04T12:06:23Z", "message": "Merge pull request #17 from atmire/w2p-69133_refactoring-and-its-specific-embeds-refactor\n\nW2p 69133 refactoring and its specific embeds refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDQ0MTY4", "url": "https://github.com/DSpace/DSpace/pull/2670#pullrequestreview-369044168", "createdAt": "2020-03-04T19:06:32Z", "commit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTowNjozMlrOFx54ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMDoxMjowOFrOFx8C8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3Mjk1NA==", "bodyText": "Please add JavaDocs to the new toResource method here, especially describing how it differs from the other toResource", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387872954", "createdAt": "2020-03-04T19:06:32Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/converter/ConverterService.java", "diffHunk": "@@ -155,9 +156,12 @@\n      * @throws ClassCastException if the resource type is not compatible with the inferred return type.\n      */\n     public <T extends HALResource> T toResource(RestModel restObject) {\n+        return toResource(restObject, new Link[] {});\n+    }\n+    public <T extends HALResource> T toResource(RestModel restObject, Link... oldLinks) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwMzU5OA==", "bodyText": "I'd rather we get a bit more specific in these JavaDocs, either via an example, a link to REST Contract or more explanation. I worry that assuming \"rels\" is a commonly understood term to all developers is a big assumption here.", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387903598", "createdAt": "2020-03-04T20:02:28Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/projection/EmbedRelsProjection.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.projection;\n+\n+import java.util.Set;\n+\n+import org.dspace.app.rest.model.LinkRest;\n+import org.dspace.app.rest.model.hateoas.HALResource;\n+\n+/**\n+ * Projection that allows a given set of rels to be embedded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4NjkzMw=="}, "originalCommit": {"oid": "45b45d39aacd64065d2fd61fe48bfa4d650da27f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwNTA2MQ==", "bodyText": "This class looks to be unrelated to this PR.  But, I see it's already on master.  Could you rebase this PR to make it easier to review the new changes?", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387905061", "createdAt": "2020-03-04T20:05:32Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CommunityParentCommunityLinkRepository.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.repository;\n+\n+import java.sql.SQLException;\n+import java.util.UUID;\n+import javax.annotation.Nullable;\n+import javax.servlet.http.HttpServletRequest;\n+\n+import org.dspace.app.rest.model.CommunityRest;\n+import org.dspace.app.rest.projection.Projection;\n+import org.dspace.content.Community;\n+import org.dspace.content.service.CommunityService;\n+import org.dspace.core.Context;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.rest.webmvc.ResourceNotFoundException;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * LinkRepository for the ParentCommunity object for a Community\n+ */\n+@Component(CommunityRest.CATEGORY + \".\" + CommunityRest.NAME + \".\" + CommunityRest.PARENT_COMMUNITY)\n+public class CommunityParentCommunityLinkRepository extends AbstractDSpaceRestRepository", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwNzAzMw==", "bodyText": "This new configuration does not appear to be added to a *.cfg file in this PR.  We should add it along with comments describing it.\nIt should probably be added to the existing rest.cfg file, and renamed rest.projections.full.max.  (NOTE: this same config is also used in SpecificLevelProjection)", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387907033", "createdAt": "2020-03-04T20:09:31Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/projection/FullProjection.java", "diffHunk": "@@ -18,14 +21,17 @@\n public class FullProjection extends AbstractProjection {\n \n     public final static String NAME = \"full\";\n+    private final int maxEmbed = DSpaceServicesFactory.getInstance().getConfigurationService()\n+            .getIntProperty(\"projections.full.max\", 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwODMzOQ==", "bodyText": "Can we make this editable in the rest.cfg file, perhaps alongside projections.full.max?  Remember, any config can be referenced in Spring XML, so we could change this to be something like :\n <property name=\"maxEmbed\" value=\"${rest.projection.specificLevel.maxEmbed}\" />", "url": "https://github.com/DSpace/DSpace/pull/2670#discussion_r387908339", "createdAt": "2020-03-04T20:12:08Z", "author": {"login": "tdonohue"}, "path": "dspace/config/spring/rest/projections.xml", "diffHunk": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\">\n+\n+    <bean class=\"org.dspace.app.rest.projection.SpecificLevelProjection\">\n+        <property name=\"maxEmbed\" value=\"5\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c01cc2a80e6e6ecc5a4f168956e86509ec27acd"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0577e732289ac79a54b4d5588a796f548b9164e", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/e0577e732289ac79a54b4d5588a796f548b9164e", "committedDate": "2020-03-06T10:16:59Z", "message": "[Task 69343] applied the feedback with regards to the specific embed functionality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef386fb5cb66d49e3ab7d0acbbf23bc050ceb56a", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/ef386fb5cb66d49e3ab7d0acbbf23bc050ceb56a", "committedDate": "2020-03-06T13:30:27Z", "message": "[Task 69343] added comments to the properties in rest.cfg"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNTgyMjcy", "url": "https://github.com/DSpace/DSpace/pull/2670#pullrequestreview-370582272", "createdAt": "2020-03-06T19:45:01Z", "commit": {"oid": "ef386fb5cb66d49e3ab7d0acbbf23bc050ceb56a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMjI2NzUw", "url": "https://github.com/DSpace/DSpace/pull/2670#pullrequestreview-371226750", "createdAt": "2020-03-09T14:24:48Z", "commit": {"oid": "ef386fb5cb66d49e3ab7d0acbbf23bc050ceb56a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1601, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}