{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMzU0Nzg0", "number": 2766, "title": "DS-4495 Restricted endpoints are sometimes the only HAL link path to public endpoints", "bodyText": "References\nhttps://jira.lyrasis.org/browse/DS-4495\nDescription\nA class has been added that allows to add the root endpoints the links to standard nested endpoint that are not discoverable due to limitation to access some resource collection endpoint via GET\nChecklist\nThis checklist provides a reminder of what we are going to look for when reviewing your PR. You need not complete this checklist prior to creating your PR (draft PRs are always welcome). If you are unsure about an item in the checklist, don't hesitate to ask. We're here to help!\n\n My PR is small in size (e.g. less than 1,000 lines of code, not including comments & integration tests). Exceptions may be made if previously agreed upon.\n My PR passes Checkstyle validation based on the Code Style Guide\n My PR includes Javadoc for all new (or modified) public methods and classes. It also includes Javadoc for large or complex private methods.\n My PR passes all tests and includes new/updated Unit or Integration Tests for any bug fixes, improvements or new features. A few reminders about what constitutes good tests:\n\nInclude tests for different user types, including: (1) Anonymous user, (2) Logged in user (non-admin), and (3) Administrator.\nInclude tests for known error scenarios and error codes (e.g. 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found, etc)\nFor bug fixes, include a test that reproduces the bug and proves it is fixed. For clarity, it may be useful to provide the test in a separate commit from the bug fix.\n\n\n[N/A  If my PR includes new, third-party dependencies (in any pom.xml), I've made sure their licenses align with the DSpace BSD License based on the Licensing of Contributions documentation.\nN/A  If my PR modifies the REST API, I've linked to the REST Contract page (or open PR) related to this change.", "createdAt": "2020-05-21T13:33:36Z", "url": "https://github.com/DSpace/DSpace/pull/2766", "merged": true, "mergeCommit": {"oid": "3a1522c2b7e659d27180c94a399c7cfc6c3e6684"}, "closed": true, "closedAt": "2020-06-04T15:33:27Z", "author": {"login": "Micheleboychuk"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjbu27gH2gAyNDIxMzU0Nzg0OjZmNWQ2NjI1YjQ5OGY3YjEwNzFlOGNlNGMyZWJmNTVjNTFlNjk2YTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcn_3GgAFqTQyNDU3NTk0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6f5d6625b498f7b1071e8ce4c2ebf55c51e696a8", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/6f5d6625b498f7b1071e8ce4c2ebf55c51e696a8", "committedDate": "2020-05-21T11:12:03Z", "message": "added the class that has responsible to add to the root endpoint the links to standard nested endpoint, plus IT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MjExMjg5", "url": "https://github.com/DSpace/DSpace/pull/2766#pullrequestreview-416211289", "createdAt": "2020-05-21T14:48:05Z", "commit": {"oid": "6f5d6625b498f7b1071e8ce4c2ebf55c51e696a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNDo0ODowNVrOGY1tVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNDo0ODowNVrOGY1tVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY5ODk2Ng==", "bodyText": "I'm assuming there's no way to do this in the RestRepository classes themselves?   The code here looks reasonable, but it just seems slightly odd to me that we have to do this in a separate class instead of finding a way to register these endpoints in the class that creates them (for example, registering this endpoint from within the ResourcePolicyRestRespository which creates/generates this /search subpath).\nThat said, if this is the easiest route, I'm OK with this. We'll just need to remember to modify this class whenever a new nested link needs to be visible at the root level.", "url": "https://github.com/DSpace/DSpace/pull/2766#discussion_r428698966", "createdAt": "2020-05-21T14:48:05Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/link/RootDiscoverableNestedLinks.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.link;\n+\n+import java.util.Arrays;\n+\n+import org.dspace.app.rest.DiscoverableEndpointsService;\n+import org.dspace.app.rest.model.AuthorizationRest;\n+import org.dspace.app.rest.model.ClaimedTaskRest;\n+import org.dspace.app.rest.model.EPersonRest;\n+import org.dspace.app.rest.model.PoolTaskRest;\n+import org.dspace.app.rest.model.ResourcePolicyRest;\n+import org.dspace.app.rest.repository.AuthorityRestRepository;\n+import org.dspace.app.rest.repository.ClaimedTaskRestRepository;\n+import org.dspace.app.rest.repository.EPersonRestRepository;\n+import org.dspace.app.rest.repository.PoolTaskRestRepository;\n+import org.dspace.app.rest.repository.ResourcePolicyRestRepository;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.hateoas.Link;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * This class is responsible to add to the root endpoint the links to standard nested endpoint\n+ * that are not discoverable due to limitation to access some resource collection endpoint via GET.\n+ * If a custom endpoint should require to add extra links to the root is recommended to register\n+ * them directly from the Repository class implementation or the custom controller.\n+ * \n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science)\n+ */\n+@Component\n+public class RootDiscoverableNestedLinks implements InitializingBean {\n+\n+    @Autowired\n+    DiscoverableEndpointsService discoverableEndpointsService;\n+\n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        discoverableEndpointsService\n+            .register(ResourcePolicyRestRepository.class , Arrays.asList(new Link(\"/api/\"\n+                    + ResourcePolicyRest.CATEGORY + \"/\" + ResourcePolicyRest.NAME + \"/search\",\n+                                                          ResourcePolicyRest.NAME + \"-search\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5d6625b498f7b1071e8ce4c2ebf55c51e696a8"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMjM3NzUx", "url": "https://github.com/DSpace/DSpace/pull/2766#pullrequestreview-420237751", "createdAt": "2020-05-28T15:35:43Z", "commit": {"oid": "6f5d6625b498f7b1071e8ce4c2ebf55c51e696a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "746fa4fd27a704cc44827ee457bf0a80f1087857", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/746fa4fd27a704cc44827ee457bf0a80f1087857", "committedDate": "2020-06-03T19:41:21Z", "message": "splitted links in their owner repository"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NTc1OTQ0", "url": "https://github.com/DSpace/DSpace/pull/2766#pullrequestreview-424575944", "createdAt": "2020-06-04T15:33:20Z", "commit": {"oid": "746fa4fd27a704cc44827ee457bf0a80f1087857"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1468, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}