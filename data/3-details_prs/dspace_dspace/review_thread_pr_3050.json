{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5Nzk1NzEz", "number": 3050, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNDo1MDoyNlrOE4MlEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNDo1MDoyNlrOE4MlEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzYxODEwOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/CollectionRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNDo1MDoyNlrOHx-V5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNDo1MDoyNlrOHx-V5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE2MzY4NA==", "bodyText": "you can use hasSize(2) to avoid to check for what should be not present, this would make the test shorter and easier to read. There are other method in this class that can benefit of the same change", "url": "https://github.com/DSpace/DSpace/pull/3050#discussion_r522163684", "createdAt": "2020-11-12T14:50:26Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/CollectionRestRepositoryIT.java", "diffHunk": "@@ -1793,4 +1793,393 @@ public void findAllWithHiddenMetadataTest() throws Exception {\n                 .andExpect(jsonPath(\"$.metadata.['dc.description.provenance']\").doesNotExist());\n \n     }\n+\n+    @Test\n+    public void findAuthorizedCollectionsPaginationTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Community child2 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community Two\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+        Collection col2 = CollectionBuilder.createCollection(context, child2)\n+                                           .withName(\"Collection 2\")\n+                                           .build();\n+        Collection col3 = CollectionBuilder.createCollection(context, parentCommunity)\n+                                           .withName(\"Collection 3\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col4 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 4\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col5 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 5\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col6 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 6\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col7 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 7\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+        context.restoreAuthSystemState();\n+\n+        String tokenAdmin = getAuthToken(admin.getEmail(), password);\n+        getClient(tokenAdmin).perform(get(\"/api/core/collections/search/findSubmitAuthorized\")\n+                 .param(\"page\", \"0\")\n+                 .param(\"size\", \"2\"))\n+                 .andExpect(status().isOk())\n+                 .andExpect(content().contentType(contentType))\n+                 .andExpect(jsonPath(\"$._embedded.collections\", Matchers.containsInAnyOrder(\n+                            CollectionMatcher.matchProperties(col1.getName(), col1.getID(), col1.getHandle()),\n+                            CollectionMatcher.matchProperties(col2.getName(), col2.getID(), col2.getHandle())\n+                            )))\n+                 .andExpect(jsonPath(\"$._embedded.collections\", Matchers.not(Matchers.anyOf(\n+                                  is(CollectionMatcher.matchProperties(col3.getName(), col3.getID(), col3.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col4.getName(), col4.getID(), col4.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col5.getName(), col5.getID(), col5.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col6.getName(), col6.getID(), col6.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col7.getName(), col7.getID(), col7.getHandle()))\n+                                  ))))\n+                 .andExpect(jsonPath(\"$.page.size\", is(2)))\n+                 .andExpect(jsonPath(\"$.page.totalPages\", is(4)))\n+                 .andExpect(jsonPath(\"$.page.number\", is(0)))\n+                 .andExpect(jsonPath(\"$.page.totalElements\", is(7)));\n+\n+        getClient(tokenAdmin).perform(get(\"/api/core/collections/search/findSubmitAuthorized\")\n+                .param(\"page\", \"1\")\n+                .param(\"size\", \"2\"))\n+                .andExpect(status().isOk())\n+                .andExpect(content().contentType(contentType))\n+                .andExpect(jsonPath(\"$._embedded.collections\", Matchers.containsInAnyOrder(\n+                           CollectionMatcher.matchProperties(col3.getName(), col3.getID(), col3.getHandle()),\n+                           CollectionMatcher.matchProperties(col4.getName(), col4.getID(), col4.getHandle())\n+                           )))\n+                .andExpect(jsonPath(\"$._embedded.collections\", Matchers.not(Matchers.anyOf(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0af4b9e465880e7fc0acb22a6ff73d2226fa1fa"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1454, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}