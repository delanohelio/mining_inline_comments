{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NzE5NTE1", "number": 2707, "title": "DS-4122 Create Integration Tests to prove access restricted Communities/Collections cannot be accessed anonymously", "bodyText": "Introduced test to prove restricted access to community and collection.\nReworked the Link repositories to rely on SOLR instead than the database to filter not accessible children in the response.\nAdded the location.parent to allow SOLR query to be limited to direct children objects.\nhttps://jira.lyrasis.org/browse/DS-4122", "createdAt": "2020-03-09T17:28:05Z", "url": "https://github.com/DSpace/DSpace/pull/2707", "merged": true, "mergeCommit": {"oid": "2334a87e3ae426f39446d855aa03b69a593832de"}, "closed": true, "closedAt": "2020-03-30T14:31:04Z", "author": {"login": "Micheleboychuk"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHtortgH2gAyMzg1NzE5NTE1OmRhNDhhZmE2YjUxYmQwODhkMmIyNjY1ODFhMmU1YTVjM2Q5ZWI4NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRuQ8UAFqTM4Mjc0NDAwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da48afa6b51bd088d2b266581a2e5a5c3d9eb871", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/da48afa6b51bd088d2b266581a2e5a5c3d9eb871", "committedDate": "2020-02-25T08:13:43Z", "message": "added ITs to prove access restricted for /api/core/communities/<:uuid>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b0e21496af525924fd80102a06c569cdd2c059a", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/1b0e21496af525924fd80102a06c569cdd2c059a", "committedDate": "2020-02-25T11:23:06Z", "message": "added ITs to prove access restricted for /api/core/communities/<:uuid>/subcommunities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee3d3791762b091973446d037a8870360f810275", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/ee3d3791762b091973446d037a8870360f810275", "committedDate": "2020-02-25T17:26:53Z", "message": "added matcher for Collection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc6346a5b716e5446bf47cfcff6ea6da8c51416", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/3bc6346a5b716e5446bf47cfcff6ea6da8c51416", "committedDate": "2020-02-25T17:28:17Z", "message": "added ITs to prove access restricted for /api/core/communities/<:uuid>/collections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00fe4b6bcbfdd6544d9cf378426f944e2dd8cb41", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/00fe4b6bcbfdd6544d9cf378426f944e2dd8cb41", "committedDate": "2020-02-25T17:32:32Z", "message": "added check to prove that community/collection are public"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61e927ed946849d430fed4fee25e4de808cc5780", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/61e927ed946849d430fed4fee25e4de808cc5780", "committedDate": "2020-02-26T10:23:53Z", "message": "refactored tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bbe68cc73a59b2d9897e39451893e7c2187af8f", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/3bbe68cc73a59b2d9897e39451893e7c2187af8f", "committedDate": "2020-02-28T15:01:26Z", "message": "added ITs to prove access restricted Communities/Collections cannot be accessed anonymously"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38b89d85aee756b3fcfff0f9899f80429d3d77b8", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/38b89d85aee756b3fcfff0f9899f80429d3d77b8", "committedDate": "2020-02-28T15:05:54Z", "message": "implemented Solr query for SubCommunityLinkRepository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67a48dbd7117aff13de7bfd6427a7526d444949d", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/67a48dbd7117aff13de7bfd6427a7526d444949d", "committedDate": "2020-02-28T15:07:27Z", "message": "implemented Solr query for CommunityCollectionLinkRepository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b15001b54ed2e8b7ef85af23372b590a73ce34df", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/b15001b54ed2e8b7ef85af23372b590a73ce34df", "committedDate": "2020-02-28T15:12:58Z", "message": "added Solr query inside findAll() for Community/Collection Repositories"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7a12ab3d3afa86f169a26174514c7f41b5c731f", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/f7a12ab3d3afa86f169a26174514c7f41b5c731f", "committedDate": "2020-02-28T15:16:18Z", "message": "added indexing for ADMIN policies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bece88f97784b8ef024639afabad00d3d0c2bc97", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/bece88f97784b8ef024639afabad00d3d0c2bc97", "committedDate": "2020-02-28T15:19:34Z", "message": "implemented plugin for indexing parent object of Community/Collection/Item"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b13edb14323253b61750368902ef55339278d4c", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/2b13edb14323253b61750368902ef55339278d4c", "committedDate": "2020-03-02T17:44:32Z", "message": "fix typo in solr field name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f9f8510b40fbb62c5abfc95a5474df1313eb86a", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/1f9f8510b40fbb62c5abfc95a5474df1313eb86a", "committedDate": "2020-03-05T21:29:35Z", "message": "added check for IndexableDSpaceObject & fix minor bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87bc6a24ea6c77e2cb4584f92c139cec81e6934c", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/87bc6a24ea6c77e2cb4584f92c139cec81e6934c", "committedDate": "2020-03-10T12:18:51Z", "message": "Merge branch 'master' of https://github.com/DSpace/DSpace into DS-4122_comcol_permissions\n\n# Conflicts:\n#\tdspace-api/src/test/data/dspaceFolder/config/spring/api/workflow.xml\n#\tdspace-api/src/test/java/org/dspace/xmlworkflow/XmlWorkflowFactoryTest.java\n#\tdspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CollectionRestRepository.java\n#\tdspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CommunityRestRepository.java\n#\tdspace-server-webapp/src/test/java/org/dspace/app/rest/ItemOwningCollectionUpdateRestControllerIT.java\n#\tdspace-server-webapp/src/test/java/org/dspace/app/rest/builder/CommunityBuilder.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTAxMjY4", "url": "https://github.com/DSpace/DSpace/pull/2707#pullrequestreview-373901268", "createdAt": "2020-03-12T21:08:26Z", "commit": {"oid": "87bc6a24ea6c77e2cb4584f92c139cec81e6934c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTowODoyN1rOF1vWjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToyNzozNlrOF1v-KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5NDY2OA==", "bodyText": "Please add JavaDocs to describe the purpose of this plugin.  It likely should say something like \"Indexes the UUID of the parent object for any Community, Collection and Item.\"\nI'd also recommend renaming this plugin to be SolrServiceParentObjectIndexingPlugin, as the would better describe its purpose.  It's not really filtering Communities, Collections or Items.  Instead it's indexing the parent object for these DSOs.", "url": "https://github.com/DSpace/DSpace/pull/2707#discussion_r391894668", "createdAt": "2020-03-12T21:08:27Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/discovery/SolrServiceCommunityCollectionItemFilterPlugin.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.discovery;\n+\n+import java.sql.SQLException;\n+\n+import org.apache.solr.common.SolrInputDocument;\n+import org.dspace.content.Collection;\n+import org.dspace.content.Community;\n+import org.dspace.content.DSpaceObject;\n+import org.dspace.content.Item;\n+import org.dspace.content.factory.ContentServiceFactory;\n+import org.dspace.core.Context;\n+import org.dspace.discovery.indexobject.IndexableDSpaceObject;\n+\n+public class SolrServiceCommunityCollectionItemFilterPlugin implements SolrServiceIndexPlugin {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc6a24ea6c77e2cb4584f92c139cec81e6934c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwMTEwMw==", "bodyText": "Could we add an inline comment here to describe the query we are running?  If I understand this correctly, we're looking for all Collections that the current user has access to?", "url": "https://github.com/DSpace/DSpace/pull/2707#discussion_r391901103", "createdAt": "2020-03-12T21:22:53Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CollectionRestRepository.java", "diffHunk": "@@ -93,11 +108,26 @@ public CollectionRest findOne(Context context, UUID id) {\n     @Override\n     public Page<CollectionRest> findAll(Context context, Pageable pageable) {\n         try {\n-            long total = cs.countTotal(context);\n-            List<Collection> collections = cs.findAll(context, pageable.getPageSize(),\n-                Math.toIntExact(pageable.getOffset()));\n-            return converter.toRestPage(collections, pageable, total, utils.obtainProjection());\n-        } catch (SQLException e) {\n+            if (authorizeService.isAdmin(context)) {\n+                long total = cs.countTotal(context);\n+                List<Collection> collections = cs.findAll(context, pageable.getPageSize(),\n+                    Math.toIntExact(pageable.getOffset()));\n+                return converter.toRestPage(collections, pageable, total, utils.obtainProjection());\n+            } else {\n+                List<Collection> collections = new LinkedList<Collection>();\n+                DiscoverQuery discoverQuery = new DiscoverQuery();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc6a24ea6c77e2cb4584f92c139cec81e6934c"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwMTkzOA==", "bodyText": "Again, it'd be useful to add an inline comment to describe the query we are building.  This looks to be searching for all Collections  (that the user has access to) under a specific Community?", "url": "https://github.com/DSpace/DSpace/pull/2707#discussion_r391901938", "createdAt": "2020-03-12T21:23:57Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CommunityCollectionLinkRepository.java", "diffHunk": "@@ -48,10 +60,25 @@\n             if (community == null) {\n                 throw new ResourceNotFoundException(\"No such community: \" + communityId);\n             }\n-            List<Collection> collections = community.getCollections();\n-            return converter.toRestPage(utils.getPage(collections, optionalPageable), projection);\n-        } catch (SQLException e) {\n-            throw new RuntimeException(e);\n+            Pageable pageable = utils.getPageable(optionalPageable);\n+            List<Collection> collections = new LinkedList<Collection>();\n+            IndexObjectFactoryFactory indexObjectFactory = IndexObjectFactoryFactory.getInstance();\n+            IndexableObject scopeObject = indexObjectFactory.getIndexableObjects(context, community).get(0);\n+            DiscoverQuery discoverQuery = new DiscoverQuery();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc6a24ea6c77e2cb4584f92c139cec81e6934c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwMjM0NA==", "bodyText": "Same here, a comment to describe the query.  This looks to be searching for all Communities which the current user has access to.", "url": "https://github.com/DSpace/DSpace/pull/2707#discussion_r391902344", "createdAt": "2020-03-12T21:24:29Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CommunityRestRepository.java", "diffHunk": "@@ -147,11 +160,26 @@ public CommunityRest findOne(Context context, UUID id) {\n     @Override\n     public Page<CommunityRest> findAll(Context context, Pageable pageable) {\n         try {\n-            long total = cs.countTotal(context);\n-            List<Community> communities = cs.findAll(context, pageable.getPageSize(),\n+            if (authorizeService.isAdmin(context)) {\n+                long total = cs.countTotal(context);\n+                List<Community> communities = cs.findAll(context, pageable.getPageSize(),\n                     Math.toIntExact(pageable.getOffset()));\n-            return converter.toRestPage(communities, pageable, total, utils.obtainProjection());\n-        } catch (SQLException e) {\n+                return converter.toRestPage(communities, pageable, total, utils.obtainProjection());\n+            } else {\n+                List<Community> communities = new LinkedList<Community>();\n+                DiscoverQuery discoverQuery = new DiscoverQuery();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc6a24ea6c77e2cb4584f92c139cec81e6934c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwNDgwOA==", "bodyText": "Same here, please add a comment to describe the query.  This looks to be searching for all Subcommunities which the current user has access to under a given Community.\nUPDATE: Is part of this query missing?  I'm not seeing the location.parent filter here to ensure we are filtering to subcommunities under one community.  In other words, I'd expect this query to be similar to the one in CommunityCollectionLinkRepository", "url": "https://github.com/DSpace/DSpace/pull/2707#discussion_r391904808", "createdAt": "2020-03-12T21:27:36Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CommunitySubcommunityLinkRepository.java", "diffHunk": "@@ -46,10 +58,24 @@\n             if (community == null) {\n                 throw new ResourceNotFoundException(\"No such community: \" + communityId);\n             }\n-            List<Community> subcommunities = community.getSubcommunities();\n-            return converter.toRestPage(utils.getPage(subcommunities, optionalPageable), projection);\n-        } catch (SQLException e) {\n-            throw new RuntimeException(e);\n+            Pageable pageable = utils.getPageable(optionalPageable);\n+            List<Community> publicSubcommunities = new LinkedList<Community>();\n+            IndexObjectFactoryFactory indexObjectFactory = IndexObjectFactoryFactory.getInstance();\n+            IndexableObject scopeObject = indexObjectFactory.getIndexableObjects(context, community).get(0);\n+            DiscoverQuery discoverQuery = new DiscoverQuery();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bc6a24ea6c77e2cb4584f92c139cec81e6934c"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ce5c586269ebdde32e87d1d7591be15734f7dd3", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/9ce5c586269ebdde32e87d1d7591be15734f7dd3", "committedDate": "2020-03-17T16:46:04Z", "message": "Implement community feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MjMxNzg5", "url": "https://github.com/DSpace/DSpace/pull/2707#pullrequestreview-376231789", "createdAt": "2020-03-17T17:03:17Z", "commit": {"oid": "9ce5c586269ebdde32e87d1d7591be15734f7dd3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzowMzoxN1rOF3lp8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzoxNDowNFrOF3mEpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMjk0Ng==", "bodyText": "This implementation implies that if you create a community ADMIN group after the community contains items, those items will need to be re-indexed.\nI don't think that's a problem, as long as it's well-documented", "url": "https://github.com/DSpace/DSpace/pull/2707#discussion_r393832946", "createdAt": "2020-03-17T17:03:17Z", "author": {"login": "benbosman"}, "path": "dspace-api/src/main/java/org/dspace/discovery/SolrServiceResourceRestrictionPlugin.java", "diffHunk": "@@ -77,6 +82,29 @@ public void additionalIndex(Context context, IndexableObject idxObj, SolrInputDo\n                     //remove the policy from the cache to save memory\n                     context.uncacheEntity(resourcePolicy);\n                 }\n+                 // also index ADMIN policies as ADMIN permissions provides READ access", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ce5c586269ebdde32e87d1d7591be15734f7dd3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzNDQ0Mg==", "bodyText": "I can see no discovery configuration is included here. If a local institution changes the default discovery behavior to exclude comm/coll from the discovery search results, will this functionality stop working?\n(the same applies for the other searches in this PR)", "url": "https://github.com/DSpace/DSpace/pull/2707#discussion_r393834442", "createdAt": "2020-03-17T17:05:38Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CollectionRestRepository.java", "diffHunk": "@@ -93,11 +108,28 @@ public CollectionRest findOne(Context context, UUID id) {\n     @Override\n     public Page<CollectionRest> findAll(Context context, Pageable pageable) {\n         try {\n-            long total = cs.countTotal(context);\n-            List<Collection> collections = cs.findAll(context, pageable.getPageSize(),\n-                Math.toIntExact(pageable.getOffset()));\n-            return converter.toRestPage(collections, pageable, total, utils.obtainProjection());\n-        } catch (SQLException e) {\n+            if (authorizeService.isAdmin(context)) {\n+                long total = cs.countTotal(context);\n+                List<Collection> collections = cs.findAll(context, pageable.getPageSize(),\n+                    Math.toIntExact(pageable.getOffset()));\n+                return converter.toRestPage(collections, pageable, total, utils.obtainProjection());\n+            } else {\n+                List<Collection> collections = new LinkedList<Collection>();\n+                // search for all the collections and let the SOLR security plugins to limit\n+                // what is returned to what the user can see\n+                DiscoverQuery discoverQuery = new DiscoverQuery();\n+                discoverQuery.setDSpaceObjectFilter(IndexableCollection.TYPE);\n+                discoverQuery.setStart(Math.toIntExact(pageable.getOffset()));\n+                discoverQuery.setMaxResults(pageable.getPageSize());\n+                DiscoverResult resp = searchService.search(context, discoverQuery);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ce5c586269ebdde32e87d1d7591be15734f7dd3"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzOTc4MA==", "bodyText": "From the REST contract I also don't see any reasons why both endpoints exist, but there's little info on either endpoint.\nIs it possible that one endpoint only returns direct children and the other endpoint also returns indirect children?", "url": "https://github.com/DSpace/DSpace/pull/2707#discussion_r393839780", "createdAt": "2020-03-17T17:14:04Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/CommunitySubcommunityLinkRepository.java", "diffHunk": "@@ -46,10 +58,24 @@\n             if (community == null) {\n                 throw new ResourceNotFoundException(\"No such community: \" + communityId);\n             }\n-            List<Community> subcommunities = community.getSubcommunities();\n-            return converter.toRestPage(utils.getPage(subcommunities, optionalPageable), projection);\n-        } catch (SQLException e) {\n-            throw new RuntimeException(e);\n+            Pageable pageable = utils.getPageable(optionalPageable);\n+            List<Community> publicSubcommunities = new LinkedList<Community>();\n+            IndexObjectFactoryFactory indexObjectFactory = IndexObjectFactoryFactory.getInstance();\n+            IndexableObject scopeObject = indexObjectFactory.getIndexableObjects(context, community).get(0);\n+            DiscoverQuery discoverQuery = new DiscoverQuery();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkwNDgwOA=="}, "originalCommit": {"oid": "87bc6a24ea6c77e2cb4584f92c139cec81e6934c"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef4a33b584f0694ea555f7f6b30fbcbb86c334e3", "author": {"user": {"login": "abollini", "name": "Andrea Bollini"}}, "url": "https://github.com/DSpace/DSpace/commit/ef4a33b584f0694ea555f7f6b30fbcbb86c334e3", "committedDate": "2020-03-24T11:18:16Z", "message": "Merge branch 'master' of https://github.com/DSpace/DSpace into DS-4122_comcol_permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94706cfcc28e0d7a9b0d8affa1a4ad468b776e95", "author": {"user": {"login": "abollini", "name": "Andrea Bollini"}}, "url": "https://github.com/DSpace/DSpace/commit/94706cfcc28e0d7a9b0d8affa1a4ad468b776e95", "committedDate": "2020-03-24T11:21:29Z", "message": "Fix checkstyle issue after update to 8.30, move comments closer to the relevant code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDk2Nzc2", "url": "https://github.com/DSpace/DSpace/pull/2707#pullrequestreview-380496776", "createdAt": "2020-03-24T16:41:04Z", "commit": {"oid": "94706cfcc28e0d7a9b0d8affa1a4ad468b776e95"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzQ0MDA3", "url": "https://github.com/DSpace/DSpace/pull/2707#pullrequestreview-382744007", "createdAt": "2020-03-27T10:36:56Z", "commit": {"oid": "94706cfcc28e0d7a9b0d8affa1a4ad468b776e95"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1648, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}