{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTcyNzkz", "number": 2760, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMTo1NlrOD9BFwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzo1ODoxNVrOEHrMNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA3NTg1OnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/app/util/DCInputSet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMTo1N1rOGWT-zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxMTo1N1rOGWT-zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0OTIyOQ==", "bodyText": "This entire if took me a moment to understand. I think we should add a comment here to describe why \"qualdrop_value\" has to be treated separately.  It might say something like:\n// If this is a \"qualdrop_value\" field, then the full field name is the field + dropdown qualifier", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r426049229", "createdAt": "2020-05-15T21:11:57Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/app/util/DCInputSet.java", "diffHunk": "@@ -107,9 +108,20 @@ public boolean isFieldPresent(String fieldName) {\n         for (int i = 0; i < inputs.length; i++) {\n             for (int j = 0; j < inputs[i].length; j++) {\n                 DCInput field = inputs[i][j];\n-                String fullName = field.getFieldName();\n-                if (fullName.equals(fieldName)) {\n-                    return true;\n+                if (field.getInputType().equals(\"qualdrop_value\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1982656a0dc418e2903fc44eab7b2034e390e4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA4MDk3OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/DescribeStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNDoxM1rOGWUCKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNDoxM1rOGWUCKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1MDA4OA==", "bodyText": "I think this error should say:  \"The field \" + split[0] + \" is not present in section \"", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r426050088", "createdAt": "2020-05-15T21:14:13Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/DescribeStep.java", "diffHunk": "@@ -110,13 +111,19 @@ private void readField(InProgressSubmission obj, SubmissionStepConfig config, Da\n     }\n \n     @Override\n-    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op)\n-        throws Exception {\n+    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op,\n+                                  SubmissionStepConfig stepConf) throws Exception {\n \n         PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n-            .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n-        patchOperation.perform(context, currentRequest, source, op);\n-\n+                        .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n+        DCInputSet inputConfig = inputReader.getInputsByFormName(stepConf.getId());\n+        String[] split = patchOperation.getAbsolutePath(op.getPath()).split(\"/\");\n+        if (inputConfig.isFieldPresent(split[0])) {\n+            patchOperation.perform(context, currentRequest, source, op);\n+        } else {\n+            throw new UnprocessableEntityException(\"The attribute \" + split[0] + \" does not present in section \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1982656a0dc418e2903fc44eab7b2034e390e4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA4OTQyOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/LicenseStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNzozMFrOGWUHTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxNzozMFrOGWUHTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1MTQwNw==", "bodyText": "If I understand correctly, I think this should likely say \"The path\" + op.getPath() + \" cannot be patched\"", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r426051407", "createdAt": "2020-05-15T21:17:30Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/LicenseStep.java", "diffHunk": "@@ -50,15 +51,17 @@ public DataLicense getData(SubmissionService submissionService, InProgressSubmis\n     }\n \n     @Override\n-    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op)\n-        throws Exception {\n+    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op,\n+                                  SubmissionStepConfig stepConf) throws Exception {\n \n         if (op.getPath().endsWith(LICENSE_STEP_OPERATION_ENTRY)) {\n \n             PatchOperation<String> patchOperation = new PatchOperationFactory()\n                 .instanceOf(LICENSE_STEP_OPERATION_ENTRY, op.getOp());\n             patchOperation.perform(context, currentRequest, source, op);\n \n+        } else {\n+            throw new UnprocessableEntityException(\"This path : \" + op.getPath() + \" can not to be replaced\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1982656a0dc418e2903fc44eab7b2034e390e4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA5MDg1OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/UploadStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxODowOVrOGWUIPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToxODowOVrOGWUIPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1MTY0Nw==", "bodyText": "Again, likely should say: \"The field \" + metadata + \" is not present in section \"", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r426051647", "createdAt": "2020-05-15T21:18:09Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/UploadStep.java", "diffHunk": "@@ -87,8 +98,28 @@ public void doPatchProcessing(Context context, Request currentRequest, InProgres\n             }\n         }\n         PatchOperation<?> patchOperation = new PatchOperationFactory().instanceOf(instance, op.getOp());\n-        patchOperation.perform(context, currentRequest, source, op);\n+        if (instance.equals(AbstractRestProcessingStep.UPLOAD_STEP_METADATA_OPERATION_ENTRY)) {\n+            DCInputSet inputConfig = inputReader.getInputsByFormName(UploadStep.UPLOAD_STEP_METADATA_SECTION);\n+            String[] split = patchOperation.getAbsolutePath(op.getPath()).split(\"/\");\n+            String metadata = findMetadata(split);\n+            if (inputConfig.isFieldPresent(metadata)) {\n+                patchOperation.perform(context, currentRequest, source, op);\n+            } else {\n+                throw new UnprocessableEntityException(\"The attribute \" + metadata + \" does not present in section \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1982656a0dc418e2903fc44eab7b2034e390e4"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzA5NjQwOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/UploadStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToyMDowOVrOGWULcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwOTo1NDoyMlrOGWZcQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1MjQ2Nw==", "bodyText": "I'm confused by this method.  Why is it only returning metadata fields in the \"dc\" schema?  I think this needs code comments or JavaDocs to explain why this is needed.", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r426052467", "createdAt": "2020-05-15T21:20:09Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/UploadStep.java", "diffHunk": "@@ -87,8 +98,28 @@ public void doPatchProcessing(Context context, Request currentRequest, InProgres\n             }\n         }\n         PatchOperation<?> patchOperation = new PatchOperationFactory().instanceOf(instance, op.getOp());\n-        patchOperation.perform(context, currentRequest, source, op);\n+        if (instance.equals(AbstractRestProcessingStep.UPLOAD_STEP_METADATA_OPERATION_ENTRY)) {\n+            DCInputSet inputConfig = inputReader.getInputsByFormName(UploadStep.UPLOAD_STEP_METADATA_SECTION);\n+            String[] split = patchOperation.getAbsolutePath(op.getPath()).split(\"/\");\n+            String metadata = findMetadata(split);\n+            if (inputConfig.isFieldPresent(metadata)) {\n+                patchOperation.perform(context, currentRequest, source, op);\n+            } else {\n+                throw new UnprocessableEntityException(\"The attribute \" + metadata + \" does not present in section \"\n+                                                                        + UploadStep.UPLOAD_STEP_METADATA_SECTION);\n+            }\n+        } else {\n+            patchOperation.perform(context, currentRequest, source, op);\n+        }\n+    }\n \n+    private String findMetadata(String[] metadata) {\n+        for (String s : metadata) {\n+            if (s.contains(\"dc.\")) {\n+                return s;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1982656a0dc418e2903fc44eab7b2034e390e4"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODY5MQ==", "bodyText": "I haven't noted that, yes it needs to be rewritten better. @Micheleboychuk I guess that you have introduced that to locate the metadata in the path string of the json patch operation. You can do that easily as the path must be /sections/uploads/files//metadata/xxxxxx/... so if the split has a length >= 6 the split[5] will contains the metadata. Anyway, we also need to check that the json path is valid, i.e. /sections/uploads/files//not-existing-prop/* should be rejected as well", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r426138691", "createdAt": "2020-05-16T09:54:22Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/UploadStep.java", "diffHunk": "@@ -87,8 +98,28 @@ public void doPatchProcessing(Context context, Request currentRequest, InProgres\n             }\n         }\n         PatchOperation<?> patchOperation = new PatchOperationFactory().instanceOf(instance, op.getOp());\n-        patchOperation.perform(context, currentRequest, source, op);\n+        if (instance.equals(AbstractRestProcessingStep.UPLOAD_STEP_METADATA_OPERATION_ENTRY)) {\n+            DCInputSet inputConfig = inputReader.getInputsByFormName(UploadStep.UPLOAD_STEP_METADATA_SECTION);\n+            String[] split = patchOperation.getAbsolutePath(op.getPath()).split(\"/\");\n+            String metadata = findMetadata(split);\n+            if (inputConfig.isFieldPresent(metadata)) {\n+                patchOperation.perform(context, currentRequest, source, op);\n+            } else {\n+                throw new UnprocessableEntityException(\"The attribute \" + metadata + \" does not present in section \"\n+                                                                        + UploadStep.UPLOAD_STEP_METADATA_SECTION);\n+            }\n+        } else {\n+            patchOperation.perform(context, currentRequest, source, op);\n+        }\n+    }\n \n+    private String findMetadata(String[] metadata) {\n+        for (String s : metadata) {\n+            if (s.contains(\"dc.\")) {\n+                return s;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1MjQ2Nw=="}, "originalCommit": {"oid": "3a1982656a0dc418e2903fc44eab7b2034e390e4"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzEwNTQzOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToyNDowN1rOGWURAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0NjozNVrOGW_egg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1Mzg4OQ==", "bodyText": "Is there a reason we switched this test to no longer remove dc.source and instead just verify it exists?  Just curious why we switched this test.", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r426053889", "createdAt": "2020-05-15T21:24:07Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "diffHunk": "@@ -2444,7 +2452,8 @@ public void patchUploadTest() throws Exception {\n         // check that changes persist\n         getClient(authToken).perform(get(\"/api/submission/workspaceitems/\" + witem.getID()))\n             .andExpect(status().isOk())\n-            .andExpect(jsonPath(\"$.sections.upload.files[0].metadata['dc.source']\").doesNotExist())\n+            .andExpect(jsonPath(\"$.sections.upload.files[0].metadata['dc.source'][0].value\",\n+                    is(\"/local/path/simple-article.pdf\")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1982656a0dc418e2903fc44eab7b2034e390e4"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzNjk4OQ==", "bodyText": "this metadata is not included in the form definition https://github.com/DSpace/DSpace/blob/master/dspace/config/submission-forms.xml#L24 so as this PR has fixed the patch request to respect the configuration preventing to update not configured metadata the dc.source should remain untouched.\nOne related question/issue is: should we update also the GET method to respect the configuration exposing only the configured metadata? the rest contract seems to imply that\nhttps://github.com/DSpace/Rest7Contract/blob/master/workspaceitem-data-upload.md\nin this case the test should be changed to verify the dc.source using a separate call to the bitstream endpoint. It is a bit out-of-scope of this PR but if we agree it could be easier to just apply the change also to the \n  \n    \n      DSpace/dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/SubmissionService.java\n    \n    \n         Line 154\n      in\n      8c234d1\n    \n    \n    \n    \n\n        \n          \n           for (MetadataValue md : source.getMetadata()) {", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r426136989", "createdAt": "2020-05-16T09:29:31Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "diffHunk": "@@ -2444,7 +2452,8 @@ public void patchUploadTest() throws Exception {\n         // check that changes persist\n         getClient(authToken).perform(get(\"/api/submission/workspaceitems/\" + witem.getID()))\n             .andExpect(status().isOk())\n-            .andExpect(jsonPath(\"$.sections.upload.files[0].metadata['dc.source']\").doesNotExist())\n+            .andExpect(jsonPath(\"$.sections.upload.files[0].metadata['dc.source'][0].value\",\n+                    is(\"/local/path/simple-article.pdf\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1Mzg4OQ=="}, "originalCommit": {"oid": "3a1982656a0dc418e2903fc44eab7b2034e390e4"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MTg1OA==", "bodyText": "Thanks for the explanation. I'm not sure about updating the GET, as that seems to imply that some metadata could be \"hidden\" (filtered out) in the GET if it's not in the current submission configuration. That seems like it could have side effects if some metadata if filtered out so that it is \"invisible\" to the client side.   In any case, I agree it should not be part of this PR & I think it needs more analysis.\nFor the purposes of this PR, your initial answer is good enough here. The dc.source is not in the default configuration, so it cannot be PATCHed.", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r426761858", "createdAt": "2020-05-18T16:46:35Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "diffHunk": "@@ -2444,7 +2452,8 @@ public void patchUploadTest() throws Exception {\n         // check that changes persist\n         getClient(authToken).perform(get(\"/api/submission/workspaceitems/\" + witem.getID()))\n             .andExpect(status().isOk())\n-            .andExpect(jsonPath(\"$.sections.upload.files[0].metadata['dc.source']\").doesNotExist())\n+            .andExpect(jsonPath(\"$.sections.upload.files[0].metadata['dc.source'][0].value\",\n+                    is(\"/local/path/simple-article.pdf\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1Mzg4OQ=="}, "originalCommit": {"oid": "3a1982656a0dc418e2903fc44eab7b2034e390e4"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDQwMjQ3OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/utils/BitstreamMetadataValuePathUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjoyODo0N1rOGcjxvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjoyODo0N1rOGcjxvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU5OTQ4NQ==", "bodyText": "I'd appreciate an example or explanation in either the JavaDocs or in an inline comment to explain why we are looking for >=4 \"parts\" to the path.  It's not clear within this class what the path structure is expected to look like.  Also, there are no Unit Tests here to show the expected path structure, and which ones should validate and which should throw exceptions.", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r432599485", "createdAt": "2020-05-29T16:28:47Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/utils/BitstreamMetadataValuePathUtils.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.utils;\n+\n+import org.dspace.app.rest.exception.UnprocessableEntityException;\n+import org.dspace.app.rest.submit.step.UploadStep;\n+import org.dspace.app.util.DCInputSet;\n+import org.dspace.app.util.DCInputsReader;\n+import org.dspace.app.util.DCInputsReaderException;\n+\n+/**\n+ * Utils class offering methods to validate patch operations for bitstream metadata in the submission\n+ * \n+ * @author Mykhaylo Boychuk (mykhaylo.boychuk at 4science.it)\n+ */\n+public class BitstreamMetadataValuePathUtils {\n+\n+    private DCInputsReader inputReader;\n+\n+    BitstreamMetadataValuePathUtils() throws DCInputsReaderException {\n+        inputReader = new DCInputsReader();\n+    }\n+\n+    /**\n+     * Method to verify that the path included in the patch operation is supported\n+     * by the submission configuration of the upload section\n+     * \n+     * @param absolutePath the path in the json patch operation\n+     * @throws DCInputsReaderException      if an error occurs reading the\n+     *                                      submission configuration\n+     * @throws UnprocessableEntityException if the path is invalid\n+     */\n+    public void validate(String absolutePath) throws DCInputsReaderException {\n+        String[] split = absolutePath.split(\"/\");\n+        DCInputSet inputConfig = inputReader.getInputsByFormName(UploadStep.UPLOAD_STEP_METADATA_SECTION);\n+        if (split.length >= 4) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bda1fb815b4615ca383608f7aeaeba706e18ced6"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDQyMTA3OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjozNDo1NVrOGcj-DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjozNDo1NVrOGcj-DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYwMjYzNg==", "bodyText": "Could we add a test before this patch to verify that the dc.subject and dc.description.abstract both exist by default?  Otherwise, it's possible this test could succeed if they never existed in the first place (I know they do exist, but we should have a test to prove it).", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r432602636", "createdAt": "2020-05-29T16:34:55Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "diffHunk": "@@ -3196,4 +3205,507 @@ public void findByItemUuidUnAuthenticatedTest() throws Exception {\n                         .andExpect(status().isUnauthorized());\n     }\n \n+    @Test\n+    public void patchAddMetadataOnSectionNotExistentTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-04-25\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/not-existing-section/dc.title\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAddMetadataWrongAttributeTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-04-25\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/traditionalpageone/dc.not.existing\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    // try to add Title on tradiotionalpagetwo, but attribute title is placed on tradiotionalpageone\n+    public void patchAddTitleOnSectionThatNotContainAttributeTitleTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/traditionalpagetwo/dc.title\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAcceptLicenseWrontPathTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Example Title\")\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> replaceGrant = new ArrayList<Operation>();\n+        replaceGrant.add(new ReplaceOperation(\"/sections/license/not-existing\", true));\n+\n+        String patchBody = getPatchContent(replaceGrant);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAcceptLicenseTryToChangeLicenseUrlTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Example Title\")\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> replaceGrant = new ArrayList<Operation>();\n+        replaceGrant.add(new ReplaceOperation(\"/sections/license/granted\", true));\n+\n+        String patchBody = getPatchContent(replaceGrant);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isOk());\n+\n+        List<Operation> replaceLicenseUrl = new ArrayList<Operation>();\n+        replaceLicenseUrl.add(new ReplaceOperation(\"/sections/license/url\", \"not.existing\"));\n+\n+        patchBody = getPatchContent(replaceLicenseUrl);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAcceptLicenseTryToChangeDateAccepteLicenseTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Example Title\")\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> replaceGrant = new ArrayList<Operation>();\n+        replaceGrant.add(new ReplaceOperation(\"/sections/license/granted\", true));\n+\n+        String patchBody = getPatchContent(replaceGrant);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isOk());\n+\n+        List<Operation> replaceLicenseUrl = new ArrayList<Operation>();\n+        replaceLicenseUrl.add(new ReplaceOperation(\"/sections/license/acceptanceDate\", \"2020-02-14\"));\n+\n+        patchBody = getPatchContent(replaceLicenseUrl);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchUploadMetadatoNotExistTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .build();\n+\n+        InputStream pdf = getClass().getResourceAsStream(\"simple-article.pdf\");\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                 .withTitle(\"Test WorkspaceItem\")\n+                 .withIssueDate(\"2019-10-25\")\n+                 .withFulltext(\"simple-article.pdf\", \"/local/path/simple-article.pdf\", pdf)\n+                 .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addOpts = new ArrayList<Operation>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"some text\");\n+        addOpts.add(new AddOperation(\"/sections/upload/files/0/metadata/dc.not.existing\", value));\n+\n+        String patchBody = getPatchContent(addOpts);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                            .content(patchBody)\n+                            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                            .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchUploadWrongPathTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .build();\n+\n+        InputStream pdf = getClass().getResourceAsStream(\"simple-article.pdf\");\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                .withTitle(\"Test WorkspaceItem\")\n+                .withIssueDate(\"2017-10-17\")\n+                .withFulltext(\"simple-article.pdf\", \"/local/path/simple-article.pdf\", pdf)\n+                .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addOpts = new ArrayList<Operation>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"2020-01-25\");\n+        addOpts.add(new AddOperation(\"/sections/upload/files/0/metadata/dc.date.issued\", value));\n+\n+        String patchBody = getPatchContent(addOpts);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                            .content(patchBody)\n+                            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                            .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchUploadMissingFieldTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .build();\n+\n+        InputStream pdf = getClass().getResourceAsStream(\"simple-article.pdf\");\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                .withTitle(\"Test WorkspaceItem\")\n+                .withIssueDate(\"2017-10-17\")\n+                .withFulltext(\"simple-article.pdf\", \"/local/path/simple-article.pdf\", pdf)\n+                .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addOpts = new ArrayList<Operation>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"test text\");\n+\n+        addOpts.add(new AddOperation(\"/sections/upload/files/0/metadata\", value));\n+\n+        String patchBody = getPatchContent(addOpts);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                .content(patchBody)\n+                .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                            .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchUploadNotExistingPropertyTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .build();\n+\n+        InputStream pdf = getClass().getResourceAsStream(\"simple-article.pdf\");\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                .withTitle(\"Test WorkspaceItem\")\n+                .withIssueDate(\"2017-10-17\")\n+                .withFulltext(\"simple-article.pdf\", \"/local/path/simple-article.pdf\", pdf)\n+                .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addOpts = new ArrayList<Operation>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"test text\");\n+\n+        addOpts.add(new AddOperation(\"/sections/upload/files/0/not-existing-property/dc.title\", value));\n+\n+        String patchBody = getPatchContent(addOpts);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                .content(patchBody)\n+                .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                            .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchUploadWithWrongPathTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .build();\n+\n+        InputStream pdf = getClass().getResourceAsStream(\"simple-article.pdf\");\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                .withTitle(\"Test WorkspaceItem\")\n+                .withIssueDate(\"2017-10-17\")\n+                .withFulltext(\"simple-article.pdf\", \"/local/path/simple-article.pdf\", pdf)\n+                .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addOpts = new ArrayList<Operation>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"test text\");\n+\n+        addOpts.add(new AddOperation(\"/sections/upload/files/0\", value));\n+\n+        String patchBody = getPatchContent(addOpts);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                .content(patchBody)\n+                .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                            .andExpect(status().isUnprocessableEntity());\n+\n+        addOpts.add(new AddOperation(\"/sections/upload/files\", value));\n+        patchBody = getPatchContent(addOpts);\n+\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                .content(patchBody)\n+                .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                            .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchDeleteSectionTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .build();\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Test WorkspaceItem\")\n+                             .withIssueDate(\"2020-01-21\")\n+                             .withSubject(\"Subject 1\")\n+                             .withSubject(\"Subject 2\")\n+                             .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        List<Operation> operations = new ArrayList<Operation>();\n+        operations.add(new RemoveOperation(\"/sections/traditionalpagetwo\"));\n+        String patchBody = getPatchContent(operations);\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isOk())\n+                 .andExpect(jsonPath(\"$.sections.traditionalpagetwo['dc.subject']\").doesNotExist())\n+                 .andExpect(jsonPath(\"$.sections.traditionalpagetwo['dc.description.abstract']\").doesNotExist());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bda1fb815b4615ca383608f7aeaeba706e18ced6"}, "originalPosition": 577}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTMzNjg1OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/WorkspaceItemRestRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjoyMToyMVrOGgmIsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjoyMToyMVrOGgmIsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzMjQzNA==", "bodyText": "Please log a more useful message here than e.getMessage(), e.g. the message in the line below", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r436832434", "createdAt": "2020-06-08T16:21:21Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/WorkspaceItemRestRepository.java", "diffHunk": "@@ -326,12 +330,19 @@ private void evaluatePatch(Context context, HttpServletRequest request, Workspac\n                             \" Therefore it cannot be used by the Configurable Submission as the <processing-class>!\");\n                     }\n \n+                } catch (UnprocessableEntityException e) {\n+                    log.error(e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a338526583e21d10058e5a75edda81f1c4681196"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTM2MjY2OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/DescribeStep.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjoyNzo0MVrOGgmYsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjoxODoxOFrOGnH3iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzNjUzMQ==", "bodyText": "this is not verified for remove. Does this imply the user can e.g. remove the item template, even if that metadata field is not adjustable in the form?\nCan you add an IT to prove the user can't remove a field not in the form?", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r436836531", "createdAt": "2020-06-08T16:27:41Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/DescribeStep.java", "diffHunk": "@@ -110,13 +113,56 @@ private void readField(InProgressSubmission obj, SubmissionStepConfig config, Da\n     }\n \n     @Override\n-    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op)\n-        throws Exception {\n-\n-        PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n-            .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n-        patchOperation.perform(context, currentRequest, source, op);\n-\n+    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op,\n+                                  SubmissionStepConfig stepConf) throws Exception {\n+\n+        String[] pathParts = op.getPath().substring(1).split(\"/\");\n+        DCInputSet inputConfig = inputReader.getInputsByFormName(stepConf.getId());\n+        if (\"remove\".equals(op.getOp()) && pathParts.length < 3) {\n+            // manage delete all step fields\n+            String[] path = op.getPath().substring(1).split(\"/\", 3);\n+            String configId = path[1];\n+            List<String> fieldsName = getInputFieldsName(inputConfig, configId);\n+            for (String fieldName : fieldsName) {\n+                String fieldPath = op.getPath() + \"/\" + fieldName;\n+                Operation fieldRemoveOp = new RemoveOperation(fieldPath);\n+                PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n+                     .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, fieldRemoveOp.getOp());\n+                patchOperation.perform(context, currentRequest, source, fieldRemoveOp);\n+            }\n+        } else {\n+            PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n+                        .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n+            String[] split = patchOperation.getAbsolutePath(op.getPath()).split(\"/\");\n+            if (inputConfig.isFieldPresent(split[0])) {\n+                patchOperation.perform(context, currentRequest, source, op);\n+            } else {\n+                throw new UnprocessableEntityException(\"The field \" + split[0] + \" is not present in section \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a338526583e21d10058e5a75edda81f1c4681196"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3MzUxOQ==", "bodyText": "@abollini can you also verify this feedback?", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r442173519", "createdAt": "2020-06-18T12:01:11Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/DescribeStep.java", "diffHunk": "@@ -110,13 +113,56 @@ private void readField(InProgressSubmission obj, SubmissionStepConfig config, Da\n     }\n \n     @Override\n-    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op)\n-        throws Exception {\n-\n-        PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n-            .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n-        patchOperation.perform(context, currentRequest, source, op);\n-\n+    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op,\n+                                  SubmissionStepConfig stepConf) throws Exception {\n+\n+        String[] pathParts = op.getPath().substring(1).split(\"/\");\n+        DCInputSet inputConfig = inputReader.getInputsByFormName(stepConf.getId());\n+        if (\"remove\".equals(op.getOp()) && pathParts.length < 3) {\n+            // manage delete all step fields\n+            String[] path = op.getPath().substring(1).split(\"/\", 3);\n+            String configId = path[1];\n+            List<String> fieldsName = getInputFieldsName(inputConfig, configId);\n+            for (String fieldName : fieldsName) {\n+                String fieldPath = op.getPath() + \"/\" + fieldName;\n+                Operation fieldRemoveOp = new RemoveOperation(fieldPath);\n+                PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n+                     .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, fieldRemoveOp.getOp());\n+                patchOperation.perform(context, currentRequest, source, fieldRemoveOp);\n+            }\n+        } else {\n+            PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n+                        .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n+            String[] split = patchOperation.getAbsolutePath(op.getPath()).split(\"/\");\n+            if (inputConfig.isFieldPresent(split[0])) {\n+                patchOperation.perform(context, currentRequest, source, op);\n+            } else {\n+                throw new UnprocessableEntityException(\"The field \" + split[0] + \" is not present in section \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzNjUzMQ=="}, "originalCommit": {"oid": "a338526583e21d10058e5a75edda81f1c4681196"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzI2Ng==", "bodyText": "@benbosman I guess that this is the test that you have requested 4ff01ae#diff-38ba2da3dd74a1027593bbd62d684626R3792\nthe dc.title is not present in the traditionalpagetwo form so the remove patch fails and the dc.title is still here", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r442337266", "createdAt": "2020-06-18T16:03:23Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/DescribeStep.java", "diffHunk": "@@ -110,13 +113,56 @@ private void readField(InProgressSubmission obj, SubmissionStepConfig config, Da\n     }\n \n     @Override\n-    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op)\n-        throws Exception {\n-\n-        PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n-            .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n-        patchOperation.perform(context, currentRequest, source, op);\n-\n+    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op,\n+                                  SubmissionStepConfig stepConf) throws Exception {\n+\n+        String[] pathParts = op.getPath().substring(1).split(\"/\");\n+        DCInputSet inputConfig = inputReader.getInputsByFormName(stepConf.getId());\n+        if (\"remove\".equals(op.getOp()) && pathParts.length < 3) {\n+            // manage delete all step fields\n+            String[] path = op.getPath().substring(1).split(\"/\", 3);\n+            String configId = path[1];\n+            List<String> fieldsName = getInputFieldsName(inputConfig, configId);\n+            for (String fieldName : fieldsName) {\n+                String fieldPath = op.getPath() + \"/\" + fieldName;\n+                Operation fieldRemoveOp = new RemoveOperation(fieldPath);\n+                PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n+                     .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, fieldRemoveOp.getOp());\n+                patchOperation.perform(context, currentRequest, source, fieldRemoveOp);\n+            }\n+        } else {\n+            PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n+                        .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n+            String[] split = patchOperation.getAbsolutePath(op.getPath()).split(\"/\");\n+            if (inputConfig.isFieldPresent(split[0])) {\n+                patchOperation.perform(context, currentRequest, source, op);\n+            } else {\n+                throw new UnprocessableEntityException(\"The field \" + split[0] + \" is not present in section \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzNjUzMQ=="}, "originalCommit": {"oid": "a338526583e21d10058e5a75edda81f1c4681196"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY3NjU1Mg==", "bodyText": "Thanks, that's indeed the test I was looking for", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r443676552", "createdAt": "2020-06-22T16:18:18Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/step/DescribeStep.java", "diffHunk": "@@ -110,13 +113,56 @@ private void readField(InProgressSubmission obj, SubmissionStepConfig config, Da\n     }\n \n     @Override\n-    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op)\n-        throws Exception {\n-\n-        PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n-            .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n-        patchOperation.perform(context, currentRequest, source, op);\n-\n+    public void doPatchProcessing(Context context, Request currentRequest, InProgressSubmission source, Operation op,\n+                                  SubmissionStepConfig stepConf) throws Exception {\n+\n+        String[] pathParts = op.getPath().substring(1).split(\"/\");\n+        DCInputSet inputConfig = inputReader.getInputsByFormName(stepConf.getId());\n+        if (\"remove\".equals(op.getOp()) && pathParts.length < 3) {\n+            // manage delete all step fields\n+            String[] path = op.getPath().substring(1).split(\"/\", 3);\n+            String configId = path[1];\n+            List<String> fieldsName = getInputFieldsName(inputConfig, configId);\n+            for (String fieldName : fieldsName) {\n+                String fieldPath = op.getPath() + \"/\" + fieldName;\n+                Operation fieldRemoveOp = new RemoveOperation(fieldPath);\n+                PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n+                     .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, fieldRemoveOp.getOp());\n+                patchOperation.perform(context, currentRequest, source, fieldRemoveOp);\n+            }\n+        } else {\n+            PatchOperation<MetadataValueRest> patchOperation = new PatchOperationFactory()\n+                        .instanceOf(DESCRIBE_STEP_METADATA_OPERATION_ENTRY, op.getOp());\n+            String[] split = patchOperation.getAbsolutePath(op.getPath()).split(\"/\");\n+            if (inputConfig.isFieldPresent(split[0])) {\n+                patchOperation.perform(context, currentRequest, source, op);\n+            } else {\n+                throw new UnprocessableEntityException(\"The field \" + split[0] + \" is not present in section \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzNjUzMQ=="}, "originalCommit": {"oid": "a338526583e21d10058e5a75edda81f1c4681196"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTM4MTIzOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjozMjoxN1rOGgmkHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjozMjoxN1rOGgmkHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzOTQ1Mw==", "bodyText": "Can you also verify the dc.title is not created?", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r436839453", "createdAt": "2020-06-08T16:32:17Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "diffHunk": "@@ -3196,4 +3205,513 @@ public void findByItemUuidUnAuthenticatedTest() throws Exception {\n                         .andExpect(status().isUnauthorized());\n     }\n \n+    @Test\n+    public void patchAddMetadataOnSectionNotExistentTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-04-25\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/not-existing-section/dc.title\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a338526583e21d10058e5a75edda81f1c4681196"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTM4MzMxOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjozMjo1MlrOGgmleA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjozMjo1MlrOGgmleA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzOTgwMA==", "bodyText": "Can you also verify the dc.title is not created?", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r436839800", "createdAt": "2020-06-08T16:32:52Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "diffHunk": "@@ -3196,4 +3205,513 @@ public void findByItemUuidUnAuthenticatedTest() throws Exception {\n                         .andExpect(status().isUnauthorized());\n     }\n \n+    @Test\n+    public void patchAddMetadataOnSectionNotExistentTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-04-25\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/not-existing-section/dc.title\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAddMetadataWrongAttributeTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-04-25\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/traditionalpageone/dc.not.existing\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    // try to add Title on tradiotionalpagetwo, but attribute title is placed on tradiotionalpageone\n+    public void patchAddTitleOnSectionThatNotContainAttributeTitleTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/traditionalpagetwo/dc.title\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a338526583e21d10058e5a75edda81f1c4681196"}, "originalPosition": 203}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTM5NjY4OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjozNjoxNVrOGgmtcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjozNjoxNVrOGgmtcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0MTg0Mg==", "bodyText": "is this just a metadata field not configured for this bitstream?", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r436841842", "createdAt": "2020-06-08T16:36:15Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "diffHunk": "@@ -3196,4 +3205,513 @@ public void findByItemUuidUnAuthenticatedTest() throws Exception {\n                         .andExpect(status().isUnauthorized());\n     }\n \n+    @Test\n+    public void patchAddMetadataOnSectionNotExistentTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-04-25\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/not-existing-section/dc.title\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAddMetadataWrongAttributeTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-04-25\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/traditionalpageone/dc.not.existing\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    // try to add Title on tradiotionalpagetwo, but attribute title is placed on tradiotionalpageone\n+    public void patchAddTitleOnSectionThatNotContainAttributeTitleTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/traditionalpagetwo/dc.title\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAcceptLicenseWrontPathTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Example Title\")\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> replaceGrant = new ArrayList<Operation>();\n+        replaceGrant.add(new ReplaceOperation(\"/sections/license/not-existing\", true));\n+\n+        String patchBody = getPatchContent(replaceGrant);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAcceptLicenseTryToChangeLicenseUrlTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Example Title\")\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> replaceGrant = new ArrayList<Operation>();\n+        replaceGrant.add(new ReplaceOperation(\"/sections/license/granted\", true));\n+\n+        String patchBody = getPatchContent(replaceGrant);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isOk());\n+\n+        List<Operation> replaceLicenseUrl = new ArrayList<Operation>();\n+        replaceLicenseUrl.add(new ReplaceOperation(\"/sections/license/url\", \"not.existing\"));\n+\n+        patchBody = getPatchContent(replaceLicenseUrl);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAcceptLicenseTryToChangeDateAccepteLicenseTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Example Title\")\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> replaceGrant = new ArrayList<Operation>();\n+        replaceGrant.add(new ReplaceOperation(\"/sections/license/granted\", true));\n+\n+        String patchBody = getPatchContent(replaceGrant);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isOk());\n+\n+        List<Operation> replaceLicenseUrl = new ArrayList<Operation>();\n+        replaceLicenseUrl.add(new ReplaceOperation(\"/sections/license/acceptanceDate\", \"2020-02-14\"));\n+\n+        patchBody = getPatchContent(replaceLicenseUrl);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchUploadMetadatoNotExistTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .build();\n+\n+        InputStream pdf = getClass().getResourceAsStream(\"simple-article.pdf\");\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                 .withTitle(\"Test WorkspaceItem\")\n+                 .withIssueDate(\"2019-10-25\")\n+                 .withFulltext(\"simple-article.pdf\", \"/local/path/simple-article.pdf\", pdf)\n+                 .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addOpts = new ArrayList<Operation>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"some text\");\n+        addOpts.add(new AddOperation(\"/sections/upload/files/0/metadata/dc.not.existing\", value));\n+\n+        String patchBody = getPatchContent(addOpts);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                            .content(patchBody)\n+                            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                            .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchUploadWrongPathTest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a338526583e21d10058e5a75edda81f1c4681196"}, "originalPosition": 383}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTM5NzY4OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjozNjozMFrOGgmuDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjozNjozMFrOGgmuDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0MTk5Ng==", "bodyText": "Can you also verify the dc.date.issued is not created?", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r436841996", "createdAt": "2020-06-08T16:36:30Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "diffHunk": "@@ -3196,4 +3205,513 @@ public void findByItemUuidUnAuthenticatedTest() throws Exception {\n                         .andExpect(status().isUnauthorized());\n     }\n \n+    @Test\n+    public void patchAddMetadataOnSectionNotExistentTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-04-25\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/not-existing-section/dc.title\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAddMetadataWrongAttributeTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-04-25\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/traditionalpageone/dc.not.existing\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    // try to add Title on tradiotionalpagetwo, but attribute title is placed on tradiotionalpageone\n+    public void patchAddTitleOnSectionThatNotContainAttributeTitleTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addTitle = new ArrayList<Operation>();\n+        List<Map<String, String>> values = new ArrayList<Map<String, String>>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"New Title\");\n+        values.add(value);\n+        addTitle.add(new AddOperation(\"/sections/traditionalpagetwo/dc.title\", values));\n+\n+        String patchBody = getPatchContent(addTitle);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAcceptLicenseWrontPathTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Example Title\")\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> replaceGrant = new ArrayList<Operation>();\n+        replaceGrant.add(new ReplaceOperation(\"/sections/license/not-existing\", true));\n+\n+        String patchBody = getPatchContent(replaceGrant);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAcceptLicenseTryToChangeLicenseUrlTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Example Title\")\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> replaceGrant = new ArrayList<Operation>();\n+        replaceGrant.add(new ReplaceOperation(\"/sections/license/granted\", true));\n+\n+        String patchBody = getPatchContent(replaceGrant);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isOk());\n+\n+        List<Operation> replaceLicenseUrl = new ArrayList<Operation>();\n+        replaceLicenseUrl.add(new ReplaceOperation(\"/sections/license/url\", \"not.existing\"));\n+\n+        patchBody = getPatchContent(replaceLicenseUrl);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchAcceptLicenseTryToChangeDateAccepteLicenseTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                         .withName(\"Parent Community\")\n+                         .build();\n+\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                          .withName(\"Sub Community\")\n+                          .build();\n+\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                         .withName(\"Collection 1\")\n+                         .build();\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                             .withTitle(\"Example Title\")\n+                             .withIssueDate(\"2019-11-21\")\n+                             .withSubject(\"ExtraEntry\")\n+                             .build();\n+\n+        //disable file upload mandatory\n+        configurationService.setProperty(\"webui.submit.upload.required\", false);\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> replaceGrant = new ArrayList<Operation>();\n+        replaceGrant.add(new ReplaceOperation(\"/sections/license/granted\", true));\n+\n+        String patchBody = getPatchContent(replaceGrant);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isOk());\n+\n+        List<Operation> replaceLicenseUrl = new ArrayList<Operation>();\n+        replaceLicenseUrl.add(new ReplaceOperation(\"/sections/license/acceptanceDate\", \"2020-02-14\"));\n+\n+        patchBody = getPatchContent(replaceLicenseUrl);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                 .content(patchBody)\n+                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                 .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchUploadMetadatoNotExistTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .build();\n+\n+        InputStream pdf = getClass().getResourceAsStream(\"simple-article.pdf\");\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                 .withTitle(\"Test WorkspaceItem\")\n+                 .withIssueDate(\"2019-10-25\")\n+                 .withFulltext(\"simple-article.pdf\", \"/local/path/simple-article.pdf\", pdf)\n+                 .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addOpts = new ArrayList<Operation>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"some text\");\n+        addOpts.add(new AddOperation(\"/sections/upload/files/0/metadata/dc.not.existing\", value));\n+\n+        String patchBody = getPatchContent(addOpts);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())\n+                            .content(patchBody)\n+                            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                            .andExpect(status().isUnprocessableEntity());\n+    }\n+\n+    @Test\n+    public void patchUploadWrongPathTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .build();\n+\n+        InputStream pdf = getClass().getResourceAsStream(\"simple-article.pdf\");\n+\n+        WorkspaceItem witem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                .withTitle(\"Test WorkspaceItem\")\n+                .withIssueDate(\"2017-10-17\")\n+                .withFulltext(\"simple-article.pdf\", \"/local/path/simple-article.pdf\", pdf)\n+                .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String authToken = getAuthToken(eperson.getEmail(), password);\n+\n+        List<Operation> addOpts = new ArrayList<Operation>();\n+        Map<String, String> value = new HashMap<String, String>();\n+        value.put(\"value\", \"2020-01-25\");\n+        addOpts.add(new AddOperation(\"/sections/upload/files/0/metadata/dc.date.issued\", value));\n+\n+        String patchBody = getPatchContent(addOpts);\n+        getClient(authToken).perform(patch(\"/api/submission/workspaceitems/\" + witem.getID())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a338526583e21d10058e5a75edda81f1c4681196"}, "originalPosition": 414}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDk5NDY4OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamMetadataValueMovePatchOperation.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjo1MTo0NVrOGlt3Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODoyMjo0M1rOGpGi7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMTg2Ng==", "bodyText": "When trying to test this PR, I got spring issues with this auto-wiring", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r442201866", "createdAt": "2020-06-18T12:51:45Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamMetadataValueMovePatchOperation.java", "diffHunk": "@@ -35,12 +36,17 @@\n     @Autowired\n     ItemService itemService;\n \n+    @Autowired\n+    BitstreamMetadataValuePathUtils bitstreamMetadataValuePathUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ff01ae963a4bb765b3464600c005b4aa51d15c0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY5MDc0MA==", "bodyText": "This still seems to be occurring in my local installation:\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nField bitstreamMetadataValuePathUtils in org.dspace.app.rest.submit.factory.impl.BitstreamMetadataValueMovePatchOperation required a single bean, but 2 were found:\n        - org.dspace.app.rest.utils.BitstreamMetadataValuePathUtils#0: a programmatically registered singleton  - org.dspace.app.rest.utils.BitstreamMetadataValuePathUtils#1: a programmatically registered singleton\n\nAction:\n\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r443690740", "createdAt": "2020-06-22T16:41:19Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamMetadataValueMovePatchOperation.java", "diffHunk": "@@ -35,12 +36,17 @@\n     @Autowired\n     ItemService itemService;\n \n+    @Autowired\n+    BitstreamMetadataValuePathUtils bitstreamMetadataValuePathUtils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMTg2Ng=="}, "originalCommit": {"oid": "4ff01ae963a4bb765b3464600c005b4aa51d15c0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMzQwNQ==", "bodyText": "I think @benbosman may be hitting a problem here in how we are loading this bean.  See this comment that I just added inline.\nAlso, I'm able to reproduce the same error that Ben notes when I try to run this PR in Docker.", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r443733405", "createdAt": "2020-06-22T17:59:18Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamMetadataValueMovePatchOperation.java", "diffHunk": "@@ -35,12 +36,17 @@\n     @Autowired\n     ItemService itemService;\n \n+    @Autowired\n+    BitstreamMetadataValuePathUtils bitstreamMetadataValuePathUtils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMTg2Ng=="}, "originalCommit": {"oid": "4ff01ae963a4bb765b3464600c005b4aa51d15c0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1MjA0Nw==", "bodyText": "This bug was resolved by the most recent changes \ud83c\udf89", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r445752047", "createdAt": "2020-06-25T18:22:43Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/submit/factory/impl/BitstreamMetadataValueMovePatchOperation.java", "diffHunk": "@@ -35,12 +36,17 @@\n     @Autowired\n     ItemService itemService;\n \n+    @Autowired\n+    BitstreamMetadataValuePathUtils bitstreamMetadataValuePathUtils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMTg2Ng=="}, "originalCommit": {"oid": "4ff01ae963a4bb765b3464600c005b4aa51d15c0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDgzMTI2OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/resources/spring/spring-dspace-core-services.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzo1ODoxNVrOGnLTbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzo1ODoxNVrOGnLTbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMjg0NA==", "bodyText": "@abollini : Per @benbosman 's notes about bean loading issues, this line seems unnecessary to me.  If you look closely, all other *Utils classes in the dspace-server-webapp are just annotated with @Component instead of trying to load them via an XML spring config.  See for example (these are just two examples, but there are 10+ Utils classes in this webapp):\n\nhttps://github.com/DSpace/DSpace/blob/master/dspace-server-webapp/src/main/java/org/dspace/app/rest/utils/DSpaceObjectUtils.java#L26\nhttps://github.com/DSpace/DSpace/blob/master/dspace-server-webapp/src/main/java/org/dspace/app/rest/utils/AuthorityUtils.java#L25\n\nSo, I suspect you should do similar here.  Remove this line from the XML config & annotate the Utils with @Component", "url": "https://github.com/DSpace/DSpace/pull/2760#discussion_r443732844", "createdAt": "2020-06-22T17:58:15Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/resources/spring/spring-dspace-core-services.xml", "diffHunk": "@@ -108,4 +108,5 @@\n         </property>\n     </bean>\n \n+    <bean class=\"org.dspace.app.rest.utils.BitstreamMetadataValuePathUtils\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ff01ae963a4bb765b3464600c005b4aa51d15c0"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1510, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}