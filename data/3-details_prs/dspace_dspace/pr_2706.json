{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NTM4MzI2", "number": 2706, "title": "Discovery index for private and withdrawn items", "bodyText": "This PR is limited to discovery configuration and tests.\nIt creates a new discovery configuration discoverableAndUndiscoverableItems which can be used for admins to find withdrawn and private items. It includes facets to verify the withdrawn and private state.\nThe discovery configuration can be used by anyone, but the SolrServiceResourceRestrictionPlugin will ensure only admins can find withdrawn and private items. This is also displayed in the tests", "createdAt": "2020-03-09T11:50:32Z", "url": "https://github.com/DSpace/DSpace/pull/2706", "merged": true, "mergeCommit": {"oid": "390264894c736dbbc88ead0824a275271c773cc7"}, "closed": true, "closedAt": "2020-03-12T18:47:03Z", "author": {"login": "benbosman"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLAZNVgH2gAyMzg1NTM4MzI2OjgyMDY5YjNmNTIyNzc5MTgzZjMyYmEzODQ3NTc2YjdiMGU2NzRiODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM-ndJgH2gAyMzg1NTM4MzI2OmM1YmY2ZWM4MGQwNTZmYTMyZWRhZTFhZWUzNzkxMDM3MWU1NWNiMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "82069b3f522779183f32ba3847576b7b0e674b81", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/82069b3f522779183f32ba3847576b7b0e674b81", "committedDate": "2020-03-06T13:46:47Z", "message": "taskid 69316 Add 2 facets: withdrawn and discoverable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb38cb914126c0b876772c65d20b6aedc41183de", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/cb38cb914126c0b876772c65d20b6aedc41183de", "committedDate": "2020-03-06T13:51:35Z", "message": "taskid 69316 Add 2 facets: withdrawn and discoverable bis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a3e2573ec48b744e59936ff2882bfb9794c9745", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/8a3e2573ec48b744e59936ff2882bfb9794c9745", "committedDate": "2020-03-06T15:19:24Z", "message": "taskid 69316 Add 2 facets: withdrawn and discoverable tris"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdc6cb9026cd557ceb1b73961e3ab43b949fa19e", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/bdc6cb9026cd557ceb1b73961e3ab43b949fa19e", "committedDate": "2020-03-06T16:16:20Z", "message": "taskid 69316 Add 2 facets: withdrawn and discoverable - fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ac969b75117f94ef3511ebe96abadd14d4db781", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/0ac969b75117f94ef3511ebe96abadd14d4db781", "committedDate": "2020-03-09T10:40:32Z", "message": "taskid 69316 Add 2 facets: withdrawn and discoverable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMzM0MTk3", "url": "https://github.com/DSpace/DSpace/pull/2706#pullrequestreview-372334197", "createdAt": "2020-03-10T21:27:07Z", "commit": {"oid": "0ac969b75117f94ef3511ebe96abadd14d4db781"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMToyNzowN1rOF0hpuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMToyOTowOVrOF0htMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYyMTYyNA==", "bodyText": "please add also a test with the \"normal\" eperson", "url": "https://github.com/DSpace/DSpace/pull/2706#discussion_r390621624", "createdAt": "2020-03-10T21:27:07Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/DiscoveryRestControllerIT.java", "diffHunk": "@@ -3717,4 +3719,195 @@ public void discoverSearchObjectsTestForWithdrawnOrPrivateItemsByAdminUser() thr\n \n     }\n \n+    @Test\n+    public void discoverSearchObjectsTestForDiscoverableAndUniscoverableItemsItemsNonAdmin() throws Exception {\n+\n+        //We turn off the authorization system in order to create the structure as defined below\n+        context.turnOffAuthorisationSystem();\n+\n+        //** GIVEN **\n+\n+        //1. A community-collection structure with one parent community with sub-community and two collections.\n+\n+        parentCommunity = CommunityBuilder\n+                .createCommunity(context)\n+                .withName(\"Parent Community\")\n+                .build();\n+        Community child1 = CommunityBuilder\n+                .createSubCommunity(context, parentCommunity)\n+                .withName(\"Sub Community\")\n+                .build();\n+        Collection col1 = CollectionBuilder\n+                .createCollection(context, child1)\n+                .withName(\"Collection 1\")\n+                .build();\n+        Collection col2 = CollectionBuilder\n+                .createCollection(context, child1)\n+                .withName(\"Collection 2\")\n+                .build();\n+\n+        //2. One public item, one private, one withdrawn.\n+\n+        ItemBuilder.createItem(context, col1)\n+                .withTitle(\"Public Test Item\")\n+                .withIssueDate(\"2010-10-17\")\n+                .withAuthor(\"Smith, Donald\")\n+                .withSubject(\"ExtraEntry\")\n+                .build();\n+\n+        ItemBuilder.createItem(context, col2)\n+                .withTitle(\"Withdrawn Test Item\")\n+                .withIssueDate(\"1990-02-13\")\n+                .withAuthor(\"Smith, Maria\")\n+                .withAuthor(\"Doe, Jane\")\n+                .withSubject(\"ExtraEntry\")\n+                .withdrawn()\n+                .build();\n+\n+        ItemBuilder.createItem(context, col2)\n+                .withTitle(\"Private Test Item\")\n+                .withIssueDate(\"2010-02-13\")\n+                .withAuthor(\"Smith, Maria\")\n+                .withAuthor(\"Doe, Jane\")\n+                .withSubject(\"AnotherTest\")\n+                .withSubject(\"ExtraEntry\")\n+                .makeUnDiscoverable()\n+                .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        //** WHEN **\n+\n+        //A non-admin user browses this endpoint to find the withdrawn or private objects in the system\n+        //With a query stating 'Test'\n+\n+        getClient().perform(get(\"/api/discover/search/objects\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ac969b75117f94ef3511ebe96abadd14d4db781"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYyMjA0MA==", "bodyText": "can we have a test for the withdrawn or private facets as they are quite special? or are such test already in place?", "url": "https://github.com/DSpace/DSpace/pull/2706#discussion_r390622040", "createdAt": "2020-03-10T21:28:03Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/DiscoveryRestControllerIT.java", "diffHunk": "@@ -3717,4 +3719,195 @@ public void discoverSearchObjectsTestForWithdrawnOrPrivateItemsByAdminUser() thr\n \n     }\n \n+    @Test\n+    public void discoverSearchObjectsTestForDiscoverableAndUniscoverableItemsItemsNonAdmin() throws Exception {\n+\n+        //We turn off the authorization system in order to create the structure as defined below\n+        context.turnOffAuthorisationSystem();\n+\n+        //** GIVEN **\n+\n+        //1. A community-collection structure with one parent community with sub-community and two collections.\n+\n+        parentCommunity = CommunityBuilder\n+                .createCommunity(context)\n+                .withName(\"Parent Community\")\n+                .build();\n+        Community child1 = CommunityBuilder\n+                .createSubCommunity(context, parentCommunity)\n+                .withName(\"Sub Community\")\n+                .build();\n+        Collection col1 = CollectionBuilder\n+                .createCollection(context, child1)\n+                .withName(\"Collection 1\")\n+                .build();\n+        Collection col2 = CollectionBuilder\n+                .createCollection(context, child1)\n+                .withName(\"Collection 2\")\n+                .build();\n+\n+        //2. One public item, one private, one withdrawn.\n+\n+        ItemBuilder.createItem(context, col1)\n+                .withTitle(\"Public Test Item\")\n+                .withIssueDate(\"2010-10-17\")\n+                .withAuthor(\"Smith, Donald\")\n+                .withSubject(\"ExtraEntry\")\n+                .build();\n+\n+        ItemBuilder.createItem(context, col2)\n+                .withTitle(\"Withdrawn Test Item\")\n+                .withIssueDate(\"1990-02-13\")\n+                .withAuthor(\"Smith, Maria\")\n+                .withAuthor(\"Doe, Jane\")\n+                .withSubject(\"ExtraEntry\")\n+                .withdrawn()\n+                .build();\n+\n+        ItemBuilder.createItem(context, col2)\n+                .withTitle(\"Private Test Item\")\n+                .withIssueDate(\"2010-02-13\")\n+                .withAuthor(\"Smith, Maria\")\n+                .withAuthor(\"Doe, Jane\")\n+                .withSubject(\"AnotherTest\")\n+                .withSubject(\"ExtraEntry\")\n+                .makeUnDiscoverable()\n+                .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        //** WHEN **\n+\n+        //A non-admin user browses this endpoint to find the withdrawn or private objects in the system\n+        //With a query stating 'Test'\n+\n+        getClient().perform(get(\"/api/discover/search/objects\")\n+                .param(\"configuration\", \"discoverableAndUndiscoverableItems\")\n+                .param(\"query\", \"Test\"))\n+\n+                //** THEN **\n+\n+                .andExpect(status().isOk())\n+                .andExpect(jsonPath(\"$.type\", is(\"discover\")))\n+                .andExpect(jsonPath(\"$._embedded.searchResult.page\", is(\n+                        PageMatcher.pageEntryWithTotalPagesAndElements(0, 20, 1, 1)\n+                )))\n+                .andExpect(jsonPath(\"$._embedded.searchResult._embedded.objects\", Matchers.contains(\n+                        SearchResultMatcher.matchOnItemName(\"item\", \"items\", \"Public Test Item\")\n+                )))\n+                .andExpect(jsonPath(\"$._links.self.href\", containsString(\"/api/discover/search/objects\")));\n+    }\n+\n+    @Test\n+    public void discoverSearchObjectsTestForDiscoverableAndUniscoverableItemsItemsByAdminUser() throws Exception {\n+\n+        //We turn off the authorization system in order to create the structure as defined below\n+        context.turnOffAuthorisationSystem();\n+\n+        //** GIVEN **\n+\n+        //1. A community-collection structure with one parent community with sub-community and two collections.\n+\n+        parentCommunity = CommunityBuilder\n+                .createCommunity(context)\n+                .withName(\"Parent Community\")\n+                .build();\n+        Community child1 = CommunityBuilder\n+                .createSubCommunity(context, parentCommunity)\n+                .withName(\"Sub Community\")\n+                .build();\n+        Collection col1 = CollectionBuilder\n+                .createCollection(context, child1)\n+                .withName(\"Collection 1\")\n+                .build();\n+        Collection col2 = CollectionBuilder\n+                .createCollection(context, child1)\n+                .withName(\"Collection 2\")\n+                .build();\n+\n+        //2. One public item, one private, one withdrawn.\n+\n+        ItemBuilder.createItem(context, col1)\n+                .withTitle(\"Public Test Item\")\n+                .withIssueDate(\"2010-10-17\")\n+                .withAuthor(\"Smith, Donald\")\n+                .withSubject(\"ExtraEntry\")\n+                .build();\n+\n+        ItemBuilder.createItem(context, col2)\n+                .withTitle(\"Withdrawn Test Item\")\n+                .withIssueDate(\"1990-02-13\")\n+                .withAuthor(\"Smith, Maria\")\n+                .withAuthor(\"Doe, Jane\")\n+                .withSubject(\"ExtraEntry\")\n+                .withdrawn()\n+                .build();\n+\n+        ItemBuilder.createItem(context, col2)\n+                .withTitle(\"Private Test Item\")\n+                .withIssueDate(\"2010-02-13\")\n+                .withAuthor(\"Smith, Maria\")\n+                .withAuthor(\"Doe, Jane\")\n+                .withSubject(\"AnotherTest\")\n+                .withSubject(\"ExtraEntry\")\n+                .makeUnDiscoverable()\n+                .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        //** WHEN **\n+\n+        // A system admin user browses this endpoint to find the withdrawn or private objects in the system\n+        // With a query stating 'Test'\n+\n+        String adminToken = getAuthToken(admin.getEmail(), password);\n+\n+        getClient(adminToken).perform(get(\"/api/discover/search/objects\")\n+                .param(\"configuration\", \"discoverableAndUndiscoverableItems\")\n+                .param(\"query\", \"Test\"))\n+\n+                //** THEN **\n+\n+                .andExpect(status().isOk())\n+                .andExpect(jsonPath(\"$.type\", is(\"discover\")))\n+                .andExpect(jsonPath(\"$._embedded.searchResult.page\", is(\n+                        PageMatcher.pageEntryWithTotalPagesAndElements(0, 20, 1, 3)\n+                )))\n+                .andExpect(jsonPath(\"$._embedded.searchResult._embedded.objects\",\n+                        Matchers.containsInAnyOrder(\n+                                SearchResultMatcher.matchOnItemName(\"item\", \"items\", \"Public Test Item\"),\n+                                SearchResultMatcher.matchOnItemName(\"item\", \"items\", \"Withdrawn Test Item\"),\n+                                SearchResultMatcher.matchOnItemName(\"item\", \"items\", \"Private Test Item\")\n+                        )\n+                ))\n+                .andExpect(jsonPath(\"$._embedded.facets\", Matchers.hasItems(\n+                        allOf(\n+                                hasJsonPath(\"$.name\", is(\"discoverable\")),\n+                                hasJsonPath(\"$._embedded.values\", Matchers.hasItems(\n+                                        allOf(\n+                                                hasJsonPath(\"$.label\", is(\"true\")),\n+                                                hasJsonPath(\"$.count\", is(2))\n+                                        ),\n+                                        allOf(\n+                                                hasJsonPath(\"$.label\", is(\"false\")),\n+                                                hasJsonPath(\"$.count\", is(1))\n+                                        )\n+                                ))\n+                        ),\n+                        allOf(\n+                                hasJsonPath(\"$.name\", is(\"withdrawn\")),\n+                                hasJsonPath(\"$._embedded.values\", Matchers.hasItems(\n+                                        allOf(\n+                                                hasJsonPath(\"$.label\", is(\"true\")),\n+                                                hasJsonPath(\"$.count\", is(1))\n+                                        ),\n+                                        allOf(\n+                                                hasJsonPath(\"$.label\", is(\"false\")),\n+                                                hasJsonPath(\"$.count\", is(2))\n+                                        )\n+                                ))\n+                        )\n+                )))\n+                .andExpect(jsonPath(\"$._links.self.href\", containsString(\"/api/discover/search/objects\")));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ac969b75117f94ef3511ebe96abadd14d4db781"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYyMjUxMw==", "bodyText": "I would prefer a shorter name, what about allitems or administrativeitemsview ?", "url": "https://github.com/DSpace/DSpace/pull/2706#discussion_r390622513", "createdAt": "2020-03-10T21:29:09Z", "author": {"login": "abollini"}, "path": "dspace/config/spring/api/discovery.xml", "diffHunk": "@@ -55,6 +55,7 @@\n                 <entry key=\"workspace\" value-ref=\"workspaceConfiguration\" />\n                 <entry key=\"workflow\" value-ref=\"workflowConfiguration\" />\n                 <entry key=\"undiscoverable\" value-ref=\"unDiscoverableItems\" />\n+                <entry key=\"discoverableAndUndiscoverableItems\" value-ref=\"discoverableAndUndiscoverableItems\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ac969b75117f94ef3511ebe96abadd14d4db781"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3aef56149a58b52f491aba12c672c1e96a79cc1", "author": {"user": null}, "url": "https://github.com/DSpace/DSpace/commit/f3aef56149a58b52f491aba12c672c1e96a79cc1", "committedDate": "2020-03-12T10:50:23Z", "message": "Discovery index for private and withdrawn items - feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNzE1MzUx", "url": "https://github.com/DSpace/DSpace/pull/2706#pullrequestreview-373715351", "createdAt": "2020-03-12T16:32:38Z", "commit": {"oid": "f3aef56149a58b52f491aba12c672c1e96a79cc1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5bf6ec80d056fa32edae1aee37910371e55cb21", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/c5bf6ec80d056fa32edae1aee37910371e55cb21", "committedDate": "2020-03-12T16:50:23Z", "message": "Renaming discoverableAndUndiscoverableItems to administrativeView"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1645, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}