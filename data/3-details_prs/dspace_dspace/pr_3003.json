{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzc4MDk5", "number": 3003, "title": "Deleting items with min relationship", "bodyText": "Description\nWhen deleting a (workspace or archived) item which has a min amount of relationships, the delete is refused because the relationships can\u2019t be deleted.\nA potential use case is submitting a journal issue, linked to a journal volume. If the journal issue is not desired, it cannot be deleted because there can be a check verifying the issue has one volume.\nThis PR allows for the relationship to be deleted even if it doesn't comply with the minimum relationships, but only when deleting the item\nInstructions for Reviewers\nThis can be verified by configuration a relationship with a non-0 minimum (e.g. journal issue vs journal volume). After creating the journal volume, start submitting a journal issue, relate it to the journal volume, and try to delete it. This will be made possible with this PR\nChecklist\nThis checklist provides a reminder of what we are going to look for when reviewing your PR. You need not complete this checklist prior to creating your PR (draft PRs are always welcome). If you are unsure about an item in the checklist, don't hesitate to ask. We're here to help!\n\n My PR is small in size (e.g. less than 1,000 lines of code, not including comments & integration tests). Exceptions may be made if previously agreed upon.\n My PR passes Checkstyle validation based on the Code Style Guide.\n My PR includes Javadoc for all new (or modified) public methods and classes. It also includes Javadoc for large or complex private methods.\n My PR passes all tests and includes new/updated Unit or Integration Tests based on the Code Testing Guide.\n If my PR includes new, third-party dependencies (in any pom.xml), I've made sure their licenses align with the DSpace BSD License based on the Licensing of Contributions documentation.\n If my PR modifies the REST API, I've linked to the REST Contract page (or open PR) related to this change.", "createdAt": "2020-10-14T13:35:15Z", "url": "https://github.com/DSpace/DSpace/pull/3003", "merged": true, "mergeCommit": {"oid": "fab51daada5d572bb70d9b678423487dcddb3294"}, "closed": true, "closedAt": "2021-02-18T15:51:03Z", "author": {"login": "benbosman"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu-LGNAH2gAyNTAzMzc4MDk5OjY0NWY2YjY2YzkzZDRjYzEwMWU2M2FmMGFjMDBkYTNiZmE2YjY2YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd6dq-nAH2gAyNTAzMzc4MDk5OmFjYTQxZWE4Y2NiYTM2OThmZDg5NjBhZjBmMTQ2NTMxYTBkMjA2ZTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "645f6b66c93d4cc101e63af0ac00da3bfa6b66ae", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/645f6b66c93d4cc101e63af0ac00da3bfa6b66ae", "committedDate": "2020-06-26T07:32:50Z", "message": "[Task 71502] implemented tests that prove that deleting an item with a relationship of min cardinality greater than 1 fails"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a63f0ff22327554b89d3a5d5e9be52b1ebaa5e5", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/2a63f0ff22327554b89d3a5d5e9be52b1ebaa5e5", "committedDate": "2020-06-26T08:54:34Z", "message": "[Task 71502] added forceDelete method to the RelationshipService that won't check the cardinality of the relationships. Used this in the ItemService delete and added tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f433ed2ae5a6f8a1a2de038df502a4890e2b316", "author": {"user": {"login": "Raf-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/0f433ed2ae5a6f8a1a2de038df502a4890e2b316", "committedDate": "2020-06-26T09:17:40Z", "message": "[Task 71502] moved workspaceItemTest to the workspaceItemRestRepository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cca43baea4bcea4d1ed548531e7d16dac6efba1f", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/cca43baea4bcea4d1ed548531e7d16dac6efba1f", "committedDate": "2020-10-14T11:47:08Z", "message": "Merge remote-tracking branch 'community/main' into w2p-71502_deleting-items-with-min-relationship\n\n# Conflicts:\n#\tdspace-api/src/test/java/org/dspace/builder/WorkspaceItemBuilder.java\n#\tdspace-server-webapp/src/test/java/org/dspace/app/rest/ItemRestRepositoryIT.java\n#\tdspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a8f81db44b9e3005c5f3d2439dab56917271097", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/9a8f81db44b9e3005c5f3d2439dab56917271097", "committedDate": "2020-10-14T11:51:46Z", "message": "Merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDkxNzA2", "url": "https://github.com/DSpace/DSpace/pull/3003#pullrequestreview-519091706", "createdAt": "2020-10-28T21:18:00Z", "commit": {"oid": "9a8f81db44b9e3005c5f3d2439dab56917271097"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMToxODowMFrOHp91lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMToxODoyOFrOHp92iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc2NjgwNA==", "bodyText": "Shouldn't this test also check to make sure that deleting the item also deleted the relationship & copied metadata over to the Item?   It looks like right now, we are just verifying that the relationship cannot be deleted directly, but that the Item deletion succeeds.  I know that's also useful (as the item deletion would not succeed), but it seems like it only tests part of the new code?", "url": "https://github.com/DSpace/DSpace/pull/3003#discussion_r513766804", "createdAt": "2020-10-28T21:18:00Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/ItemRestRepositoryIT.java", "diffHunk": "@@ -2740,5 +2746,68 @@ public void testHiddenMetadataForUserWithWriteRights() throws Exception {\n \n     }\n \n+    @Test\n+    public void deleteItemWithMinRelationshipsTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        //** GIVEN **\n+        //1. A community with one collection.\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Collection col1 = CollectionBuilder\n+            .createCollection(context, parentCommunity).withName(\"Collection 1\").build();\n+\n+        Item author1 = ItemBuilder.createItem(context, col1)\n+                                  .withTitle(\"Author1\")\n+                                  .withIssueDate(\"2017-10-17\")\n+                                  .withAuthor(\"Smith, Donald\")\n+                                  .withPersonIdentifierLastName(\"Smith\")\n+                                  .withPersonIdentifierFirstName(\"Donald\")\n+                                  .withRelationshipType(\"Person\")\n+                                  .build();\n+\n+        Item author2 = ItemBuilder.createItem(context, col1)\n+                                  .withTitle(\"Author2\")\n+                                  .withIssueDate(\"2016-02-13\")\n+                                  .withAuthor(\"Smith, Maria\")\n+                                  .withRelationshipType(\"Person\")\n+                                  .build();\n+\n+        Item publication1 = ItemBuilder.createItem(context, col1)\n+                                       .withTitle(\"Publication1\")\n+                                       .withAuthor(\"Testy, TEst\")\n+                                       .withIssueDate(\"2015-01-01\")\n+                                       .withRelationshipType(\"Publication\")\n+                                       .build();\n+\n+        EntityType publication = EntityTypeBuilder.createEntityTypeBuilder(context, \"Publication\").build();\n+        EntityType person = EntityTypeBuilder.createEntityTypeBuilder(context, \"Person\").build();\n+\n+\n+        RelationshipType isAuthorOfPublication = RelationshipTypeBuilder\n+            .createRelationshipTypeBuilder(context, publication, person, \"isAuthorOfPublication\",\n+                                           \"isPublicationOfAuthor\", 2, null, 0,\n+                                           null).withCopyToLeft(false).withCopyToRight(true).build();\n+\n+        Relationship relationship1 = RelationshipBuilder\n+            .createRelationshipBuilder(context, publication1, author1, isAuthorOfPublication).build();\n+        Relationship relationship2 = RelationshipBuilder\n+            .createRelationshipBuilder(context, publication1, author2, isAuthorOfPublication).build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        getClient(token).perform(delete(\"/api/core/relationships/\" + relationship1.getID()))\n+                        .andExpect(status().is(400));\n+        //Delete public item\n+        getClient(token).perform(delete(\"/api/core/items/\" + publication1.getID()))\n+                        .andExpect(status().is(204));\n+        getClient(token).perform(get(\"/api/core/items/\" + publication1.getID()))\n+                        .andExpect(status().is(404));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a8f81db44b9e3005c5f3d2439dab56917271097"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc2NzA1MQ==", "bodyText": "Same with this test...it seems like we should be checking that the relationship was deleted & metadata copied over.", "url": "https://github.com/DSpace/DSpace/pull/3003#discussion_r513767051", "createdAt": "2020-10-28T21:18:28Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/WorkspaceItemRestRepositoryIT.java", "diffHunk": "@@ -4613,4 +4619,66 @@ public void findOneFullProjectionTest() throws Exception {\n                                 .andExpect(jsonPath(\"$._embedded.collection._embedded.adminGroup\").doesNotExist());\n \n     }\n+\n+    @Test\n+    public void deleteWorkspaceItemWithMinRelationshipsTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+\n+        //** GIVEN **\n+        //1. A community with one collection.\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Collection col1 = CollectionBuilder\n+            .createCollection(context, parentCommunity).withName(\"Collection 1\").build();\n+\n+        Item author1 = ItemBuilder.createItem(context, col1)\n+                                  .withTitle(\"Author1\")\n+                                  .withIssueDate(\"2017-10-17\")\n+                                  .withAuthor(\"Smith, Donald\")\n+                                  .withPersonIdentifierLastName(\"Smith\")\n+                                  .withPersonIdentifierFirstName(\"Donald\")\n+                                  .withRelationshipType(\"Person\")\n+                                  .build();\n+\n+        Item author2 = ItemBuilder.createItem(context, col1)\n+                                  .withTitle(\"Author2\")\n+                                  .withIssueDate(\"2016-02-13\")\n+                                  .withAuthor(\"Smith, Maria\")\n+                                  .withRelationshipType(\"Person\")\n+                                  .build();\n+\n+        //2. One workspace item.\n+        WorkspaceItem workspaceItem = WorkspaceItemBuilder.createWorkspaceItem(context, col1)\n+                                                          .withRelationshipType(\"Publication\")\n+                                                          .build();\n+\n+        EntityType publication = EntityTypeBuilder.createEntityTypeBuilder(context, \"Publication\").build();\n+        EntityType person = EntityTypeBuilder.createEntityTypeBuilder(context, \"Person\").build();\n+\n+\n+        RelationshipType isAuthorOfPublication = RelationshipTypeBuilder\n+            .createRelationshipTypeBuilder(context, publication, person, \"isAuthorOfPublication\",\n+                                           \"isPublicationOfAuthor\", 2, null, 0,\n+                                           null).withCopyToLeft(false).withCopyToRight(true).build();\n+\n+        Relationship relationship1 = RelationshipBuilder\n+            .createRelationshipBuilder(context, workspaceItem.getItem(), author1, isAuthorOfPublication).build();\n+        Relationship relationship2 = RelationshipBuilder\n+            .createRelationshipBuilder(context, workspaceItem.getItem(), author2, isAuthorOfPublication).build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        getClient(token).perform(delete(\"/api/core/relationships/\" + relationship1.getID()))\n+                        .andExpect(status().is(400));\n+\n+        //Delete the workspaceitem\n+        getClient(token).perform(delete(\"/api/submission/workspaceitems/\" + workspaceItem.getID()))\n+                        .andExpect(status().is(204));\n+        getClient(token).perform(get(\"/api/submission/workspaceitems/\" + workspaceItem.getID()))\n+                        .andExpect(status().is(404));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a8f81db44b9e3005c5f3d2439dab56917271097"}, "originalPosition": 101}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNjg0MDkw", "url": "https://github.com/DSpace/DSpace/pull/3003#pullrequestreview-521684090", "createdAt": "2020-11-02T14:36:16Z", "commit": {"oid": "9a8f81db44b9e3005c5f3d2439dab56917271097"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "564140b0c8dee3a0df8c412dc9d721eba531ffd7", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/564140b0c8dee3a0df8c412dc9d721eba531ffd7", "committedDate": "2021-01-15T10:39:07Z", "message": "Merge remote-tracking branch 'community/main' into w2p-71502_deleting-items-with-min-relationship"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "567a9f0567a36cbea0f6c2529ddbf7a35c2db835", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/567a9f0567a36cbea0f6c2529ddbf7a35c2db835", "committedDate": "2021-01-15T12:24:25Z", "message": "Verify the relationship is deleted\nStatus 404 is needed for a relationship which doesn't exist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be48c56cae73de03d382a4bd89c988333c0b3c95", "author": {"user": {"login": "MarieVerdonck", "name": "Marie Verdonck"}}, "url": "https://github.com/DSpace/DSpace/commit/be48c56cae73de03d382a4bd89c988333c0b3c95", "committedDate": "2021-01-29T10:09:18Z", "message": "Merge branch 'dspace-origin-master' into w2p-76575_IT-for-deleting-items-and-populating-virtual-md\n\n# Conflicts:\n#\tdspace-api/src/main/java/org/dspace/content/RelationshipServiceImpl.java\n#\tdspace-server-webapp/src/test/java/org/dspace/app/rest/RelationshipRestRepositoryIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e32fd1fc4c0586f2c5db60b1cfcf7c0775aecc94", "author": {"user": {"login": "MarieVerdonck", "name": "Marie Verdonck"}}, "url": "https://github.com/DSpace/DSpace/commit/e32fd1fc4c0586f2c5db60b1cfcf7c0775aecc94", "committedDate": "2021-01-29T16:23:49Z", "message": "76575: ITs for deleting items and populating virtual metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e8cd8fa5829ed909b2345a37cc80a01b971cec7", "author": {"user": {"login": "benbosman", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/0e8cd8fa5829ed909b2345a37cc80a01b971cec7", "committedDate": "2021-02-01T14:03:22Z", "message": "Merge pull request #59 from atmire/w2p-76575_IT-for-deleting-items-and-populating-virtual-md\n\nW2p 76575 it for deleting items and populating virtual md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxNzM1MzUy", "url": "https://github.com/DSpace/DSpace/pull/3003#pullrequestreview-581735352", "createdAt": "2021-02-02T20:16:52Z", "commit": {"oid": "0e8cd8fa5829ed909b2345a37cc80a01b971cec7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NjE5MTEx", "url": "https://github.com/DSpace/DSpace/pull/3003#pullrequestreview-589619111", "createdAt": "2021-02-12T16:23:07Z", "commit": {"oid": "0e8cd8fa5829ed909b2345a37cc80a01b971cec7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aca41ea8ccba3698fd8960af0f146531a0d206e5", "author": {"user": {"login": "MarieVerdonck", "name": "Marie Verdonck"}}, "url": "https://github.com/DSpace/DSpace/commit/aca41ea8ccba3698fd8960af0f146531a0d206e5", "committedDate": "2021-02-15T20:39:02Z", "message": "Merge branch 'dspace-origin-master' into w2p-71502_deleting-items-with-min-relationship\n\n# Conflicts:\n#\tdspace-server-webapp/src/test/java/org/dspace/app/rest/ItemRestRepositoryIT.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1348, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}