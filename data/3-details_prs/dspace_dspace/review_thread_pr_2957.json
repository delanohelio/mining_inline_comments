{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMTM1NDMy", "number": 2957, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODowMjoxOFrOE8VZlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo1MDowMFrOE-0J2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzAwNjMwOnYy", "diffSide": "RIGHT", "path": "dspace-api/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODowMjoxOFrOH4ZTjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzowMzo0NlrOH5Mhgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg5NjkxMQ==", "bodyText": "should we consider to move to 2.2 ? http://hamcrest.org/JavaHamcrest/distributables#upgrading-from-hamcrest-1x", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528896911", "createdAt": "2020-11-23T18:02:18Z", "author": {"login": "abollini"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -496,7 +496,7 @@\n         </dependency>\n         <dependency>\n             <groupId>org.hamcrest</groupId>\n-            <artifactId>hamcrest-core</artifactId>\n+            <artifactId>hamcrest-all</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTczNjA2Nw==", "bodyText": "We should consider it.  I can add that to this PR, but perhaps it should be a separate issue since it touches a lot of tests.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r529736067", "createdAt": "2020-11-24T17:03:46Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -496,7 +496,7 @@\n         </dependency>\n         <dependency>\n             <groupId>org.hamcrest</groupId>\n-            <artifactId>hamcrest-core</artifactId>\n+            <artifactId>hamcrest-all</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg5NjkxMQ=="}, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzA5MTM4OnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/app/statistics/HTMLReport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODoyNTo0M1rOH4aGsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzowMjo1NVrOH5Mfaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxMDAwMg==", "bodyText": "I'm not a fun of \"complex\" initialization outside of a constructor... but it is also a class that probably should be removed / deprecated. I'm not sure that this feature still work at all", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528910002", "createdAt": "2020-11-23T18:25:43Z", "author": {"login": "abollini"}, "path": "dspace-api/src/main/java/org/dspace/app/statistics/HTMLReport.java", "diffHunk": "@@ -59,7 +60,9 @@\n     /**\n      * the output file to which to write aggregation data\n      */\n-    private String output = ConfigurationManager.getProperty(\"dspace.dir\") +\n+    ConfigurationService configurationService\n+            = DSpaceServicesFactory.getInstance().getConfigurationService();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTczNTUzMQ==", "bodyText": "I've moved the initialization inside the formerly empty constructor.\nI believe that this feature is due to be removed anyway after 7.0, so it is probably not worth the effort to figure out what could be removed now.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r529735531", "createdAt": "2020-11-24T17:02:55Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/app/statistics/HTMLReport.java", "diffHunk": "@@ -59,7 +60,9 @@\n     /**\n      * the output file to which to write aggregation data\n      */\n-    private String output = ConfigurationManager.getProperty(\"dspace.dir\") +\n+    ConfigurationService configurationService\n+            = DSpaceServicesFactory.getInstance().getConfigurationService();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxMDAwMg=="}, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzExMDY3OnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/app/util/GoogleMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODozMDo1NlrOH4aSFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzowMDo0N1rOH5MZ0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxMjkxOA==", "bodyText": "the check log.isDebugEnabled() should be moved inside the logConfiguration method", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528912918", "createdAt": "2020-11-23T18:30:56Z", "author": {"login": "abollini"}, "path": "dspace-api/src/main/java/org/dspace/app/util/GoogleMetadata.java", "diffHunk": "@@ -180,9 +186,7 @@\n             }\n         }\n \n-        if (log.isDebugEnabled()) {\n-            logConfiguration();\n-        }\n+        logConfiguration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTczNDA5Nw==", "bodyText": "Normally I would not use #isDebugEnabled but, since the code is iterating over a HashMap and logging its content, the added efficiency is probably worthwhile.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r529734097", "createdAt": "2020-11-24T17:00:47Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/app/util/GoogleMetadata.java", "diffHunk": "@@ -180,9 +186,7 @@\n             }\n         }\n \n-        if (log.isDebugEnabled()) {\n-            logConfiguration();\n-        }\n+        logConfiguration();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxMjkxOA=="}, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzI2ODMxOnYy", "diffSide": "RIGHT", "path": "dspace-swordv2/src/main/java/org/dspace/sword2/AbstractSimpleDC.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOToxNDozMlrOH4bwIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowOTozNFrOH8P05w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkzNjk5NQ==", "bodyText": "Instead of looping through all properties, this can just use configurationService.getPropertyKeys(\"swordv2-server.simpledc.\") to find all properties starting with that prefix.  See https://github.com/DSpace/DSpace/blob/main/dspace-services/src/main/java/org/dspace/servicemanager/config/DSpaceConfigurationService.java#L135", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528936995", "createdAt": "2020-11-23T19:14:32Z", "author": {"login": "tdonohue"}, "path": "dspace-swordv2/src/main/java/org/dspace/sword2/AbstractSimpleDC.java", "diffHunk": "@@ -27,16 +28,18 @@\n     protected ItemService itemService = ContentServiceFactory.getInstance()\n                                                              .getItemService();\n \n+    protected ConfigurationService configurationService\n+            = DSpaceServicesFactory.getInstance().getConfigurationService();\n+\n     protected void loadMetadataMaps() {\n         if (this.dcMap == null) {\n             // we should load our DC map from configuration\n             this.dcMap = new HashMap<>();\n-            Properties props = ConfigurationManager\n-                .getProperties(\"swordv2-server\");\n+            Properties props = configurationService.getProperties();\n             for (Object key : props.keySet()) {\n                 String keyString = (String) key;\n-                if (keyString.startsWith(\"simpledc.\")) {\n-                    String k = keyString.substring(\"simpledc.\".length());\n+                if (keyString.startsWith(\"swordv2-server.simpledc.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNTkxMQ==", "bodyText": "Agreed.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532935911", "createdAt": "2020-11-30T22:09:34Z", "author": {"login": "mwoodiupui"}, "path": "dspace-swordv2/src/main/java/org/dspace/sword2/AbstractSimpleDC.java", "diffHunk": "@@ -27,16 +28,18 @@\n     protected ItemService itemService = ContentServiceFactory.getInstance()\n                                                              .getItemService();\n \n+    protected ConfigurationService configurationService\n+            = DSpaceServicesFactory.getInstance().getConfigurationService();\n+\n     protected void loadMetadataMaps() {\n         if (this.dcMap == null) {\n             // we should load our DC map from configuration\n             this.dcMap = new HashMap<>();\n-            Properties props = ConfigurationManager\n-                .getProperties(\"swordv2-server\");\n+            Properties props = configurationService.getProperties();\n             for (Object key : props.keySet()) {\n                 String keyString = (String) key;\n-                if (keyString.startsWith(\"simpledc.\")) {\n-                    String k = keyString.substring(\"simpledc.\".length());\n+                if (keyString.startsWith(\"swordv2-server.simpledc.\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkzNjk5NQ=="}, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzI3MDgzOnYy", "diffSide": "RIGHT", "path": "dspace-swordv2/src/main/java/org/dspace/sword2/AbstractSimpleDC.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOToxNToxMFrOH4bxmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowOTo0NVrOH8P1Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkzNzM3MQ==", "bodyText": "Same here...can use getPropertyKeys([prefix]) instead of looping through every configuration.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r528937371", "createdAt": "2020-11-23T19:15:10Z", "author": {"login": "tdonohue"}, "path": "dspace-swordv2/src/main/java/org/dspace/sword2/AbstractSimpleDC.java", "diffHunk": "@@ -45,12 +48,11 @@ protected void loadMetadataMaps() {\n \n         if (this.atomMap == null) {\n             this.atomMap = new HashMap<>();\n-            Properties props = ConfigurationManager\n-                .getProperties(\"swordv2-server\");\n+            Properties props = configurationService.getProperties();\n             for (Object key : props.keySet()) {\n                 String keyString = (String) key;\n-                if (keyString.startsWith(\"atom.\")) {\n-                    String k = keyString.substring(\"atom.\".length());\n+                if (keyString.startsWith(\"swordv2-server.atom.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNTk5NA==", "bodyText": "Agreed.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532935994", "createdAt": "2020-11-30T22:09:45Z", "author": {"login": "mwoodiupui"}, "path": "dspace-swordv2/src/main/java/org/dspace/sword2/AbstractSimpleDC.java", "diffHunk": "@@ -45,12 +48,11 @@ protected void loadMetadataMaps() {\n \n         if (this.atomMap == null) {\n             this.atomMap = new HashMap<>();\n-            Properties props = ConfigurationManager\n-                .getProperties(\"swordv2-server\");\n+            Properties props = configurationService.getProperties();\n             for (Object key : props.keySet()) {\n                 String keyString = (String) key;\n-                if (keyString.startsWith(\"atom.\")) {\n-                    String k = keyString.substring(\"atom.\".length());\n+                if (keyString.startsWith(\"swordv2-server.atom.\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkzNzM3MQ=="}, "originalCommit": {"oid": "96742fe558f3de24634603a15e00f332d7c393a0"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Mjk2ODU4OnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/content/authority/MetadataAuthorityServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTozOToyN1rOH8KrPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowOTowOVrOH8P0GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MTUxNw==", "bodyText": "I think this could be refactored to be configurationService.getPropertyKeys(authPrefix) in order to find every key that starts with authPrefix.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532851517", "createdAt": "2020-11-30T19:39:27Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/authority/MetadataAuthorityServiceImpl.java", "diffHunk": "@@ -81,13 +84,12 @@ protected MetadataAuthorityServiceImpl() {\n     public void init() {\n \n         if (isAuthorityRequired == null) {\n-            isAuthorityRequired = new HashMap<String, Boolean>();\n-            Enumeration pn = ConfigurationManager.propertyNames();\n+            isAuthorityRequired = new HashMap<>();\n+            List<String> pn = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNTcwNA==", "bodyText": "Agreed.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532935704", "createdAt": "2020-11-30T22:09:09Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/content/authority/MetadataAuthorityServiceImpl.java", "diffHunk": "@@ -81,13 +84,12 @@ protected MetadataAuthorityServiceImpl() {\n     public void init() {\n \n         if (isAuthorityRequired == null) {\n-            isAuthorityRequired = new HashMap<String, Boolean>();\n-            Enumeration pn = ConfigurationManager.propertyNames();\n+            isAuthorityRequired = new HashMap<>();\n+            List<String> pn = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MTUxNw=="}, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Mjk4MDE5OnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/MODSDisseminationCrosswalk.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo0MjozMFrOH8KyVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowOToxN1rOH8P0TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MzMzMg==", "bodyText": "Again, this looks like it could be replaced by configurationService.getPropertyKeys(CONFIG_PREFIX); and simplify the for loop after it", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532853332", "createdAt": "2020-11-30T19:42:30Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/MODSDisseminationCrosswalk.java", "diffHunk": "@@ -107,10 +110,9 @@\n     private static String aliases[] = null;\n \n     static {\n-        List<String> aliasList = new ArrayList<String>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n-        while (pe.hasMoreElements()) {\n-            String key = pe.nextElement();\n+        List<String> aliasList = new ArrayList<>();\n+        List<String> pe = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNTc1Ng==", "bodyText": "Agreed.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532935756", "createdAt": "2020-11-30T22:09:17Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/MODSDisseminationCrosswalk.java", "diffHunk": "@@ -107,10 +110,9 @@\n     private static String aliases[] = null;\n \n     static {\n-        List<String> aliasList = new ArrayList<String>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n-        while (pe.hasMoreElements()) {\n-            String key = pe.nextElement();\n+        List<String> aliasList = new ArrayList<>();\n+        List<String> pe = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MzMzMg=="}, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Mjk4NjExOnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo0NDowNFrOH8K2CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowODo1NVrOH8PzmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NDI4MA==", "bodyText": "Again, looks like this could be configurationService.getPropertyKeys(propname); to simplify the for loop", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532854280", "createdAt": "2020-11-30T19:44:04Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "diffHunk": "@@ -137,11 +141,10 @@\n     private static String aliases[] = null;\n \n     static {\n-        List<String> aliasList = new ArrayList<String>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<String> aliasList = new ArrayList<>();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNTU3Ng==", "bodyText": "Agreed.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532935576", "createdAt": "2020-11-30T22:08:55Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "diffHunk": "@@ -137,11 +141,10 @@\n     private static String aliases[] = null;\n \n     static {\n-        List<String> aliasList = new ArrayList<String>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<String> aliasList = new ArrayList<>();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NDI4MA=="}, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Mjk4NzY5OnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo0NDozMFrOH8K2_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoyNDowMVrOH83sLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NDUyNg==", "bodyText": "same here.. configurationService.getPropertyKeys(propname);", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532854526", "createdAt": "2020-11-30T19:44:30Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "diffHunk": "@@ -218,32 +221,31 @@ private void init()\n         }\n \n         // grovel DSpace configuration for namespaces\n-        List<Namespace> nsList = new ArrayList<Namespace>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<Namespace> nsList = new ArrayList<>();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNTQ3MQ==", "bodyText": "Agreed.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532935471", "createdAt": "2020-11-30T22:08:43Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "diffHunk": "@@ -218,32 +221,31 @@ private void init()\n         }\n \n         // grovel DSpace configuration for namespaces\n-        List<Namespace> nsList = new ArrayList<Namespace>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<Namespace> nsList = new ArrayList<>();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NDUyNg=="}, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4OTAzNg==", "bodyText": "@mwoodiupui : Looks like you overlooked this one on accident.  Should be configurationService.getPropertyKeys(propname)", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r533589036", "createdAt": "2020-12-01T17:24:01Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/QDCCrosswalk.java", "diffHunk": "@@ -218,32 +221,31 @@ private void init()\n         }\n \n         // grovel DSpace configuration for namespaces\n-        List<Namespace> nsList = new ArrayList<Namespace>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<Namespace> nsList = new ArrayList<>();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NDUyNg=="}, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Mjk5NzkzOnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/XSLTCrosswalk.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo0NzowMlrOH8K9MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowODozNFrOH8Py8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NjExMw==", "bodyText": "Again, could use configurationService.getPropertyKeys(prefix);", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532856113", "createdAt": "2020-11-30T19:47:02Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/XSLTCrosswalk.java", "diffHunk": "@@ -117,11 +116,12 @@\n         String suffix = CONFIG_STYLESHEET;\n \n         List<String> aliasList = new ArrayList<>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        ConfigurationService configurationService\n+                = DSpaceServicesFactory.getInstance().getConfigurationService();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNTQxMQ==", "bodyText": "Agreed.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532935411", "createdAt": "2020-11-30T22:08:34Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/XSLTCrosswalk.java", "diffHunk": "@@ -117,11 +116,12 @@\n         String suffix = CONFIG_STYLESHEET;\n \n         List<String> aliasList = new ArrayList<>();\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        ConfigurationService configurationService\n+                = DSpaceServicesFactory.getInstance().getConfigurationService();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NjExMw=="}, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzAwNDUyOnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/XSLTDisseminationCrosswalk.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo0ODoxNFrOH8LBlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowODoyNFrOH8PyrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NzIzOQ==", "bodyText": "Again, could be configurationService.getPropertyKeys(nsPrefix); & simplify the for loop.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532857239", "createdAt": "2020-11-30T19:48:14Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/XSLTDisseminationCrosswalk.java", "diffHunk": "@@ -146,18 +149,17 @@ private void init()\n         // grovel for namespaces of the form:\n         //  crosswalk.diss.{PLUGIN_NAME}.namespace.{PREFIX} = {URI}\n         String nsPrefix = prefix + \"namespace.\";\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNTM0MQ==", "bodyText": "Agreed.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532935341", "createdAt": "2020-11-30T22:08:24Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/content/crosswalk/XSLTDisseminationCrosswalk.java", "diffHunk": "@@ -146,18 +149,17 @@ private void init()\n         // grovel for namespaces of the form:\n         //  crosswalk.diss.{PLUGIN_NAME}.namespace.{PREFIX} = {URI}\n         String nsPrefix = prefix + \"namespace.\";\n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1NzIzOQ=="}, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzAxNjU2OnYy", "diffSide": "RIGHT", "path": "dspace-api/src/main/java/org/dspace/content/packager/METSManifest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo1MDowMFrOH8LJeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMjowODoxNlrOH8Pyew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1OTI1OA==", "bodyText": "Again could be configurationService.getPropertyKeys(CONFIG_XSD_PREFIX);", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532859258", "createdAt": "2020-11-30T19:50:00Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/main/java/org/dspace/content/packager/METSManifest.java", "diffHunk": "@@ -190,21 +193,20 @@ public InputStream getInputStream(Element mdRef)\n     protected static String localSchemas;\n \n     static {\n-        String dspace_dir = ConfigurationManager.getProperty(\"dspace.dir\");\n+        String dspace_dir = configurationService.getProperty(\"dspace.dir\");\n         File xsdPath1 = new File(dspace_dir + \"/config/schemas/\");\n         File xsdPath2 = new File(dspace_dir + \"/config/\");\n \n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n-        StringBuffer result = new StringBuffer();\n-        while (pe.hasMoreElements()) {\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNTI5MQ==", "bodyText": "Agreed.", "url": "https://github.com/DSpace/DSpace/pull/2957#discussion_r532935291", "createdAt": "2020-11-30T22:08:16Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/main/java/org/dspace/content/packager/METSManifest.java", "diffHunk": "@@ -190,21 +193,20 @@ public InputStream getInputStream(Element mdRef)\n     protected static String localSchemas;\n \n     static {\n-        String dspace_dir = ConfigurationManager.getProperty(\"dspace.dir\");\n+        String dspace_dir = configurationService.getProperty(\"dspace.dir\");\n         File xsdPath1 = new File(dspace_dir + \"/config/schemas/\");\n         File xsdPath2 = new File(dspace_dir + \"/config/\");\n \n-        Enumeration<String> pe = (Enumeration<String>) ConfigurationManager.propertyNames();\n-        StringBuffer result = new StringBuffer();\n-        while (pe.hasMoreElements()) {\n+        List<String> configKeys = configurationService.getPropertyKeys();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1OTI1OA=="}, "originalCommit": {"oid": "ea15ca58feea44e0ebefea7e8dbd2889f4ae2324"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1414, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}