{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NzQ2NDY1", "number": 2897, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo0MDoyMVrOES2GuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOToyNzowOFrOEUKqjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTk2MjgwOnYy", "diffSide": "RIGHT", "path": "dspace-api/src/test/java/org/dspace/app/bulkedit/MetadataExportIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo0MDoyMVrOG4P-vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNToxODo1NVrOG4R0hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNTI2Mg==", "bodyText": "Rather than manually installing the Item, you can just use the ItemBuilder here.  For example, remove the call to the WorkspaceItemBuilder and replace all this with:\nItem item = ItemBuilder.createItem(context, collection).withAuthor(\"Donald,Smith\").build();\n\nThis would allow you to remove the itemService.delete() at the end of this method as well (along with the context turn off/on authN surrounding it).", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r461635262", "createdAt": "2020-07-28T14:40:21Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/test/java/org/dspace/app/bulkedit/MetadataExportIT.java", "diffHunk": "@@ -14,58 +14,60 @@\n import java.nio.charset.StandardCharsets;\n \n import org.apache.commons.io.IOUtils;\n-import org.dspace.AbstractIntegrationTest;\n+import org.dspace.AbstractIntegrationTestWithDatabase;\n import org.dspace.app.launcher.ScriptLauncher;\n import org.dspace.app.scripts.handler.impl.TestDSpaceRunnableHandler;\n+import org.dspace.builder.CollectionBuilder;\n+import org.dspace.builder.CommunityBuilder;\n+import org.dspace.builder.WorkspaceItemBuilder;\n import org.dspace.content.Collection;\n import org.dspace.content.Community;\n import org.dspace.content.Item;\n import org.dspace.content.WorkspaceItem;\n import org.dspace.content.factory.ContentServiceFactory;\n-import org.dspace.content.service.CollectionService;\n-import org.dspace.content.service.CommunityService;\n import org.dspace.content.service.InstallItemService;\n import org.dspace.content.service.ItemService;\n-import org.dspace.content.service.WorkspaceItemService;\n import org.dspace.services.ConfigurationService;\n import org.dspace.services.factory.DSpaceServicesFactory;\n import org.junit.Test;\n \n-public class MetadataExportTest extends AbstractIntegrationTest {\n-\n-    private ItemService itemService = ContentServiceFactory.getInstance().getItemService();\n-    private CollectionService collectionService = ContentServiceFactory.getInstance().getCollectionService();\n-    private CommunityService communityService = ContentServiceFactory.getInstance().getCommunityService();\n-    private WorkspaceItemService workspaceItemService = ContentServiceFactory.getInstance().getWorkspaceItemService();\n-    private InstallItemService installItemService = ContentServiceFactory.getInstance().getInstallItemService();\n-    private ConfigurationService configurationService = DSpaceServicesFactory.getInstance().getConfigurationService();\n+public class MetadataExportIT\n+        extends AbstractIntegrationTestWithDatabase {\n+    private final ItemService itemService\n+            = ContentServiceFactory.getInstance().getItemService();\n+    private final InstallItemService installItemService\n+            = ContentServiceFactory.getInstance().getInstallItemService();\n+    private final ConfigurationService configurationService\n+            = DSpaceServicesFactory.getInstance().getConfigurationService();\n \n     @Test\n     public void metadataExportToCsvTest() throws Exception {\n         context.turnOffAuthorisationSystem();\n-        Community community = communityService.create(null, context);\n-        Collection collection = collectionService.create(context, community);\n-        WorkspaceItem wi = workspaceItemService.create(context, collection, true);\n+        Community community = CommunityBuilder.createCommunity(context).build();\n+        Collection collection = CollectionBuilder.createCollection(context, community).build();\n+        WorkspaceItem wi = WorkspaceItemBuilder.createWorkspaceItem(context, collection).build();\n         Item item = wi.getItem();\n         itemService.addMetadata(context, item, \"dc\", \"contributor\", \"author\", null, \"Donald, Smith\");\n         item = installItemService.installItem(context, wi);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0a6771bc7b0f36a7bb530b72f74da7b7d7cedd"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY2NTQxMw==", "bodyText": "Thank you.  That's much neater.  I'm not at all familiar with using the Builder classes yet....", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r461665413", "createdAt": "2020-07-28T15:18:55Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/test/java/org/dspace/app/bulkedit/MetadataExportIT.java", "diffHunk": "@@ -14,58 +14,60 @@\n import java.nio.charset.StandardCharsets;\n \n import org.apache.commons.io.IOUtils;\n-import org.dspace.AbstractIntegrationTest;\n+import org.dspace.AbstractIntegrationTestWithDatabase;\n import org.dspace.app.launcher.ScriptLauncher;\n import org.dspace.app.scripts.handler.impl.TestDSpaceRunnableHandler;\n+import org.dspace.builder.CollectionBuilder;\n+import org.dspace.builder.CommunityBuilder;\n+import org.dspace.builder.WorkspaceItemBuilder;\n import org.dspace.content.Collection;\n import org.dspace.content.Community;\n import org.dspace.content.Item;\n import org.dspace.content.WorkspaceItem;\n import org.dspace.content.factory.ContentServiceFactory;\n-import org.dspace.content.service.CollectionService;\n-import org.dspace.content.service.CommunityService;\n import org.dspace.content.service.InstallItemService;\n import org.dspace.content.service.ItemService;\n-import org.dspace.content.service.WorkspaceItemService;\n import org.dspace.services.ConfigurationService;\n import org.dspace.services.factory.DSpaceServicesFactory;\n import org.junit.Test;\n \n-public class MetadataExportTest extends AbstractIntegrationTest {\n-\n-    private ItemService itemService = ContentServiceFactory.getInstance().getItemService();\n-    private CollectionService collectionService = ContentServiceFactory.getInstance().getCollectionService();\n-    private CommunityService communityService = ContentServiceFactory.getInstance().getCommunityService();\n-    private WorkspaceItemService workspaceItemService = ContentServiceFactory.getInstance().getWorkspaceItemService();\n-    private InstallItemService installItemService = ContentServiceFactory.getInstance().getInstallItemService();\n-    private ConfigurationService configurationService = DSpaceServicesFactory.getInstance().getConfigurationService();\n+public class MetadataExportIT\n+        extends AbstractIntegrationTestWithDatabase {\n+    private final ItemService itemService\n+            = ContentServiceFactory.getInstance().getItemService();\n+    private final InstallItemService installItemService\n+            = ContentServiceFactory.getInstance().getInstallItemService();\n+    private final ConfigurationService configurationService\n+            = DSpaceServicesFactory.getInstance().getConfigurationService();\n \n     @Test\n     public void metadataExportToCsvTest() throws Exception {\n         context.turnOffAuthorisationSystem();\n-        Community community = communityService.create(null, context);\n-        Collection collection = collectionService.create(context, community);\n-        WorkspaceItem wi = workspaceItemService.create(context, collection, true);\n+        Community community = CommunityBuilder.createCommunity(context).build();\n+        Collection collection = CollectionBuilder.createCollection(context, community).build();\n+        WorkspaceItem wi = WorkspaceItemBuilder.createWorkspaceItem(context, collection).build();\n         Item item = wi.getItem();\n         itemService.addMetadata(context, item, \"dc\", \"contributor\", \"author\", null, \"Donald, Smith\");\n         item = installItemService.installItem(context, wi);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNTI2Mg=="}, "originalCommit": {"oid": "7f0a6771bc7b0f36a7bb530b72f74da7b7d7cedd"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTk4NTgzOnYy", "diffSide": "RIGHT", "path": "dspace-api/src/test/java/org/dspace/discovery/MockSolrSearchCore.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo0NDo0MFrOG4QMpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo1NDoxNVrOG5BbJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzODgyMw==", "bodyText": "Why is this method needed?  Is it an @Override?", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r461638823", "createdAt": "2020-07-28T14:44:40Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/test/java/org/dspace/discovery/MockSolrSearchCore.java", "diffHunk": "@@ -22,4 +22,8 @@ public void afterPropertiesSet() throws Exception {\n         solr = null;\n     }\n \n+    public void reset() {\n+        // This method intentionally left blank.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0a6771bc7b0f36a7bb530b72f74da7b7d7cedd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0Mzc5NA==", "bodyText": "I added it because AbstractIntegrationTestWithDatabase calls it.\nThere used to be two MockSolrSearchCore classes, one in dspace-api and one in dspace-server-webapp.  I think that when I merged them, I kept the wrong one.  I'll try it the other way.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r461843794", "createdAt": "2020-07-28T20:04:09Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/test/java/org/dspace/discovery/MockSolrSearchCore.java", "diffHunk": "@@ -22,4 +22,8 @@ public void afterPropertiesSet() throws Exception {\n         solr = null;\n     }\n \n+    public void reset() {\n+        // This method intentionally left blank.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzODgyMw=="}, "originalCommit": {"oid": "7f0a6771bc7b0f36a7bb530b72f74da7b7d7cedd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0NTM1MQ==", "bodyText": "Thank you for asking.  This opened an interesting can of worms.  I hadn't copied enough from dspace-server-webapp, which incorrectly allowed this to succeed.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r462445351", "createdAt": "2020-07-29T16:54:15Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/test/java/org/dspace/discovery/MockSolrSearchCore.java", "diffHunk": "@@ -22,4 +22,8 @@ public void afterPropertiesSet() throws Exception {\n         solr = null;\n     }\n \n+    public void reset() {\n+        // This method intentionally left blank.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzODgyMw=="}, "originalCommit": {"oid": "7f0a6771bc7b0f36a7bb530b72f74da7b7d7cedd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjAzNDI3OnYy", "diffSide": "RIGHT", "path": "dspace-api/src/test/java/org/dspace/statistics/MockSolrLoggerServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1Mzo1MVrOG4QqHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjo1NDo1N1rOG5Bc_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0NjM2NQ==", "bodyText": "Where is this method called/used? Should this have an @Override?  Or maybe more clear JavaDocs on its usage/purpose", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r461646365", "createdAt": "2020-07-28T14:53:51Z", "author": {"login": "tdonohue"}, "path": "dspace-api/src/test/java/org/dspace/statistics/MockSolrLoggerServiceImpl.java", "diffHunk": "@@ -62,18 +64,28 @@ public void afterPropertiesSet() throws Exception {\n      * @return faked CityResponse\n      */\n     private CityResponse mockCityResponse() {\n-        List<String> cityNames = new ArrayList<String>(Collections.singleton(\"New York\"));\n+        List<String> cityNames = new ArrayList<>(Collections.singleton(\"New York\"));\n         City city = new City(cityNames, 1, 1, new HashMap());\n \n-        List<String> countryNames = new ArrayList<String>(Collections.singleton(\"United States\"));\n+        List<String> countryNames = new ArrayList<>(Collections.singleton(\"United States\"));\n         Country country = new Country(countryNames, 1, 1, \"US\", new HashMap());\n \n         Location location = new Location(1, 1, 40.760498D, -73.9933D, 501, 1, \"EST\");\n \n         Postal postal = new Postal(\"10036\", 1);\n \n         return new CityResponse(city, new Continent(), country, location, new MaxMind(), postal,\n-                                country, new RepresentedCountry(), new ArrayList<>(0),\n-                                new Traits());\n+                                                 country,  new RepresentedCountry(), new ArrayList<>(0),\n+                                                 new Traits());\n+    }\n+\n+    /** Remove all records. */\n+    public void reset() {\n+        mockSolrServer.reset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0a6771bc7b0f36a7bb530b72f74da7b7d7cedd"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0NTgyMA==", "bodyText": "It's called from AbstractIntegrationTestWith Database.  I've tried to improve the JavaDoc.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r462445820", "createdAt": "2020-07-29T16:54:57Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/src/test/java/org/dspace/statistics/MockSolrLoggerServiceImpl.java", "diffHunk": "@@ -62,18 +64,28 @@ public void afterPropertiesSet() throws Exception {\n      * @return faked CityResponse\n      */\n     private CityResponse mockCityResponse() {\n-        List<String> cityNames = new ArrayList<String>(Collections.singleton(\"New York\"));\n+        List<String> cityNames = new ArrayList<>(Collections.singleton(\"New York\"));\n         City city = new City(cityNames, 1, 1, new HashMap());\n \n-        List<String> countryNames = new ArrayList<String>(Collections.singleton(\"United States\"));\n+        List<String> countryNames = new ArrayList<>(Collections.singleton(\"United States\"));\n         Country country = new Country(countryNames, 1, 1, \"US\", new HashMap());\n \n         Location location = new Location(1, 1, 40.760498D, -73.9933D, 501, 1, \"EST\");\n \n         Postal postal = new Postal(\"10036\", 1);\n \n         return new CityResponse(city, new Continent(), country, location, new MaxMind(), postal,\n-                                country, new RepresentedCountry(), new ArrayList<>(0),\n-                                new Traits());\n+                                                 country,  new RepresentedCountry(), new ArrayList<>(0),\n+                                                 new Traits());\n+    }\n+\n+    /** Remove all records. */\n+    public void reset() {\n+        mockSolrServer.reset();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0NjM2NQ=="}, "originalCommit": {"oid": "7f0a6771bc7b0f36a7bb530b72f74da7b7d7cedd"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjA2NjU5OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1OToyOFrOG4Q9UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1OToyOFrOG4Q9UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MTI4MQ==", "bodyText": "alignment it a little odd here. It looks like the two lines you added have tabs in front, which pushes the alignment off slightly.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r461651281", "createdAt": "2020-07-28T14:59:28Z", "author": {"login": "tdonohue"}, "path": "pom.xml", "diffHunk": "@@ -475,29 +475,33 @@\n     </build>\n \n     <profiles>\n-        <!-- Skip Unit Tests by default, but allow override on command line\n-           by setting property \"-Dmaven.test.skip=false\" -->\n+        <!-- Skip running Unit Tests by default, but allow override on\n+           command line by setting property \"-DskipTests=false\".\n+\t   Tests are always built, because we have modules that depend\n+\t   on common test infrastructure. -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0a6771bc7b0f36a7bb530b72f74da7b7d7cedd"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjA3MDA5OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTowMDowNlrOG4Q_VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTowMDowNlrOG4Q_VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MTc5Nw==", "bodyText": "Again, tiny alignment issue cause of a tab on the last line", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r461651797", "createdAt": "2020-07-28T15:00:06Z", "author": {"login": "tdonohue"}, "path": "pom.xml", "diffHunk": "@@ -475,29 +475,33 @@\n     </build>\n \n     <profiles>\n-        <!-- Skip Unit Tests by default, but allow override on command line\n-           by setting property \"-Dmaven.test.skip=false\" -->\n+        <!-- Skip running Unit Tests by default, but allow override on\n+           command line by setting property \"-DskipTests=false\".\n+\t   Tests are always built, because we have modules that depend\n+\t   on common test infrastructure. -->\n         <profile>\n             <id>skiptests</id>\n             <activation>\n-                <!-- This profile should be active at all times, unless the user\n-                     specifies a different value for \"maven.test.skip\" -->\n+                <!-- This profile should be active at all times, unless the\n+                     user specifies a different value for \"skipTests\" -->\n                 <property>\n-                    <name>!maven.test.skip</name>\n+                    <name>!skipTests</name>\n                 </property>\n             </activation>\n             <properties>\n-                <maven.test.skip>true</maven.test.skip>\n+                <skipTests>true</skipTests>\n             </properties>\n         </profile>\n \n-        <!-- Skip Integration Tests by default, but allow override on\n-             command line by setting property \"-DskipITs=false\" -->\n+        <!-- Skip running Integration Tests by default, but allow override on\n+             command line by setting property \"-DskipITs=false\".\n+             ITs are always built, because we have modules that depend\n+\t     on common test infrastructure. -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0a6771bc7b0f36a7bb530b72f74da7b7d7cedd"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTgwMjY1OnYy", "diffSide": "RIGHT", "path": "dspace-api/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOToyMTo1NVrOG6Ta-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjowODo0MFrOG6YNQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4ODc5Mw==", "bodyText": "Should this have a <scope>test</scope> as well?\nI'm not exactly sure why this new dependency was added, as it doesn't appear on main branch at all.  I'm assuming it's a dependency convergence error in the test environment?", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463788793", "createdAt": "2020-07-31T19:21:55Z", "author": {"login": "tdonohue"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -537,6 +618,35 @@\n                 </exclusion>\n             </exclusions>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-core</artifactId>\n+            <version>${solr.client.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxMzU3Mg==", "bodyText": "org.dspace.app.util.IndexVersion (in src/main) imports five classes from this artifact.  I probably fixed it up while using mvn dependency:analyze to track down an unrelated dependency puzzle.  It should be default-scoped.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463813572", "createdAt": "2020-07-31T20:12:12Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -537,6 +618,35 @@\n                 </exclusion>\n             </exclusions>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-core</artifactId>\n+            <version>${solr.client.version}</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4ODc5Mw=="}, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2NzIwMw==", "bodyText": "Ah, OK then. This seems fine then.  I was thrown off by the fact that lucene-core is in the midst of a bunch of other test dependencies.  At some point, we might want to put all the test dependencies together, separate from the non-test ones.  But, that can come in a followup PR.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463867203", "createdAt": "2020-07-31T22:08:40Z", "author": {"login": "tdonohue"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -537,6 +618,35 @@\n                 </exclusion>\n             </exclusions>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-core</artifactId>\n+            <version>${solr.client.version}</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4ODc5Mw=="}, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTgwNDE5OnYy", "diffSide": "RIGHT", "path": "dspace/modules/additions/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOToyMjoyOFrOG6Tb8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoxMjo1M1rOG6U82A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4OTA0MA==", "bodyText": "Same as above, should this have  <scope>test</scope> as well?", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463789040", "createdAt": "2020-07-31T19:22:28Z", "author": {"login": "tdonohue"}, "path": "dspace/modules/additions/pom.xml", "diffHunk": "@@ -194,6 +203,35 @@\n             </exclusion>\n          </exclusions>\n       </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-core</artifactId>\n+            <version>${solr.client.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxMzg0OA==", "bodyText": "I recall that, once I fixed the above, I had to add it here too, to get additions to build.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463813848", "createdAt": "2020-07-31T20:12:53Z", "author": {"login": "mwoodiupui"}, "path": "dspace/modules/additions/pom.xml", "diffHunk": "@@ -194,6 +203,35 @@\n             </exclusion>\n          </exclusions>\n       </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-core</artifactId>\n+            <version>${solr.client.version}</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4OTA0MA=="}, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTgwOTc0OnYy", "diffSide": "RIGHT", "path": "dspace-api/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOToyNDoyOFrOG6TfTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOTo1ODo1NlrOG6UbUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4OTkwMA==", "bodyText": "Should this change be in the Parent POM (or maybe just removed)?  It looks like in the Parent POM ([src]/pom.xml) we already have commons-cli version 1.3.1 right now...So, it's unclear why we have a different version specified here.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463789900", "createdAt": "2020-07-31T19:24:28Z", "author": {"login": "tdonohue"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -323,6 +325,11 @@\n             <artifactId>apache-jena-libs</artifactId>\n             <type>pom</type>\n         </dependency>\n+        <dependency>\n+            <groupId>commons-cli</groupId>\n+            <artifactId>commons-cli</artifactId>\n+            <version>1.4</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwNTI2Nw==", "bodyText": "Thank you.  It should be declared here (since this project uses it) and updated in the parent (since it is already managed there).  I'll do that.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463805267", "createdAt": "2020-07-31T19:58:56Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -323,6 +325,11 @@\n             <artifactId>apache-jena-libs</artifactId>\n             <type>pom</type>\n         </dependency>\n+        <dependency>\n+            <groupId>commons-cli</groupId>\n+            <artifactId>commons-cli</artifactId>\n+            <version>1.4</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc4OTkwMA=="}, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTgxNTA1OnYy", "diffSide": "RIGHT", "path": "dspace-api/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOToyNjoyNVrOG6TilQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjowNjo0MlrOG6YLLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5MDc0MQ==", "bodyText": "This new dependency is also a bit odd...we don't have this one specified on main branch.  Was this a dependency conversion fix?", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463790741", "createdAt": "2020-07-31T19:26:25Z", "author": {"login": "tdonohue"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -537,6 +618,35 @@\n                 </exclusion>\n             </exclusions>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-core</artifactId>\n+            <version>${solr.client.version}</version>\n+        </dependency>\n+        <!-- Reminder: Keep icu4j (in Parent POM) synced with version used by lucene-analyzers-icu below,\n+             otherwise ICUFoldingFilterFactory may throw errors in tests.  -->\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-analyzers-icu</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-analyzers-smartcn</artifactId>\n+            <version>${solr.client.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-analyzers-stempel</artifactId>\n+            <version>${solr.client.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.xmlbeans</groupId>\n+            <artifactId>xmlbeans</artifactId>\n+            <version>2.6.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMjIyNQ==", "bodyText": "PoiWordFilter imports from xmlbeans.  mvn dependency:analyze showed xmlbeans as \"used undeclared\".  Even though it seemed to work in practice without the declaration, I tend to tidy these up whenever I become aware of them.  If I don't know why it worked, then I don't know why it might stop working.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463802225", "createdAt": "2020-07-31T19:52:17Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -537,6 +618,35 @@\n                 </exclusion>\n             </exclusions>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-core</artifactId>\n+            <version>${solr.client.version}</version>\n+        </dependency>\n+        <!-- Reminder: Keep icu4j (in Parent POM) synced with version used by lucene-analyzers-icu below,\n+             otherwise ICUFoldingFilterFactory may throw errors in tests.  -->\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-analyzers-icu</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-analyzers-smartcn</artifactId>\n+            <version>${solr.client.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-analyzers-stempel</artifactId>\n+            <version>${solr.client.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.xmlbeans</groupId>\n+            <artifactId>xmlbeans</artifactId>\n+            <version>2.6.0</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5MDc0MQ=="}, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2NjY2OQ==", "bodyText": "Yes, I see that now after looking closer at that PoiWordFilter. This is correct then...it just is slightly unrelated to this PR, but that's OK to clean this up :)", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463866669", "createdAt": "2020-07-31T22:06:42Z", "author": {"login": "tdonohue"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -537,6 +618,35 @@\n                 </exclusion>\n             </exclusions>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-core</artifactId>\n+            <version>${solr.client.version}</version>\n+        </dependency>\n+        <!-- Reminder: Keep icu4j (in Parent POM) synced with version used by lucene-analyzers-icu below,\n+             otherwise ICUFoldingFilterFactory may throw errors in tests.  -->\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-analyzers-icu</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-analyzers-smartcn</artifactId>\n+            <version>${solr.client.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.lucene</groupId>\n+            <artifactId>lucene-analyzers-stempel</artifactId>\n+            <version>${solr.client.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.xmlbeans</groupId>\n+            <artifactId>xmlbeans</artifactId>\n+            <version>2.6.0</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5MDc0MQ=="}, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTgxNzEwOnYy", "diffSide": "RIGHT", "path": "dspace-api/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOToyNzowOFrOG6Tj6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjowNjowM1rOG6YKcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5MTA4MA==", "bodyText": "Same here...why the switch to -core?  This seems new as well as it's not on main branch.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463791080", "createdAt": "2020-07-31T19:27:08Z", "author": {"login": "tdonohue"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -717,7 +827,7 @@\n \n         <dependency>\n             <groupId>org.xmlunit</groupId>\n-            <artifactId>xmlunit-matchers</artifactId>\n+            <artifactId>xmlunit-core</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMDU0OQ==", "bodyText": "All of the classes that we actually use are in -core, not -matchers.  mvn dependency:analyze pointed this out.  I don't know why we were using -matchers.", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463800549", "createdAt": "2020-07-31T19:48:01Z", "author": {"login": "mwoodiupui"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -717,7 +827,7 @@\n \n         <dependency>\n             <groupId>org.xmlunit</groupId>\n-            <artifactId>xmlunit-matchers</artifactId>\n+            <artifactId>xmlunit-core</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5MTA4MA=="}, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2NjQ4MQ==", "bodyText": "Ah, thanks for clarification! This seems correct then", "url": "https://github.com/DSpace/DSpace/pull/2897#discussion_r463866481", "createdAt": "2020-07-31T22:06:03Z", "author": {"login": "tdonohue"}, "path": "dspace-api/pom.xml", "diffHunk": "@@ -717,7 +827,7 @@\n \n         <dependency>\n             <groupId>org.xmlunit</groupId>\n-            <artifactId>xmlunit-matchers</artifactId>\n+            <artifactId>xmlunit-core</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5MTA4MA=="}, "originalCommit": {"oid": "a27355f79a0b304068e496bc3f2e394a3d1c6926"}, "originalPosition": 173}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1584, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}