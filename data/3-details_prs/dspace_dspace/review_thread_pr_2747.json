{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MjQyNDk1", "number": 2747, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo1NDo0OVrOD5KT4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTowODoyNFrOD6SzSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjY0MzUzOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo1NDo0OVrOGQRzrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo1ODozNlrOGQ3VCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyMjE1Ng==", "bodyText": "This method is missing a context.restoreAuthSystemState(); after creating the EPerson", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r419722156", "createdAt": "2020-05-04T20:54:49Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1516,6 +1517,102 @@ private void runPatchMetadataTests(EPerson asUser, int expectedStatus) throws Ex\n         new MetadataPatchSuite().runWith(getClient(token), \"/api/eperson/epersons/\" + ePerson.getID(), expectedStatus);\n     }\n \n+    @Test\n+    public void patchMetadataByAdmin() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNjkwNQ==", "bodyText": "please take the chance to also change the email to something at example.com, it was noted by other (I guess mwood) that it is better to use this domain as it is reserved for this specific purpose", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r420336905", "createdAt": "2020-05-05T18:58:36Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1516,6 +1517,102 @@ private void runPatchMetadataTests(EPerson asUser, int expectedStatus) throws Ex\n         new MetadataPatchSuite().runWith(getClient(token), \"/api/eperson/epersons/\" + ePerson.getID(), expectedStatus);\n     }\n \n+    @Test\n+    public void patchMetadataByAdmin() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyMjE1Ng=="}, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjY0OTA4OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo1NjoyNFrOGQR3Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo1NjoyNFrOGQR3Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyMzAzOQ==", "bodyText": "Incorrect comment.  Say something like: \"// should be allowed (as an Eperson can update their own metadata), and eperson.firstname should be replaced.", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r419723039", "createdAt": "2020-05-04T20:56:24Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1516,6 +1517,102 @@ private void runPatchMetadataTests(EPerson asUser, int expectedStatus) throws Ex\n         new MetadataPatchSuite().runWith(getClient(token), \"/api/eperson/epersons/\" + ePerson.getID(), expectedStatus);\n     }\n \n+    @Test\n+    public void patchMetadataByAdmin() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        // should be allowed, and eperson.firstname should be replaced.\n+        getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n+            .content(patchBody)\n+            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isOk())\n+                        .andExpect(jsonPath(\"$.metadata\", Matchers.allOf(\n+                            MetadataMatcher.matchMetadata(\"eperson.firstname\", newName))));\n+    }\n+\n+    @Test\n+    public void patchOwnMetadataByNonAdminUser() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .withPassword(password)\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        context.restoreAuthSystemState();\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(ePerson.getEmail(), password);\n+\n+        // updates password", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjY1MTg5OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo1NzoxMFrOGQR41w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo1NzoxMFrOGQR41w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyMzQ3OQ==", "bodyText": "Incorrect comment. Should say something like // not allowed, as a non-Admin cannot modify other users", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r419723479", "createdAt": "2020-05-04T20:57:10Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1516,6 +1517,102 @@ private void runPatchMetadataTests(EPerson asUser, int expectedStatus) throws Ex\n         new MetadataPatchSuite().runWith(getClient(token), \"/api/eperson/epersons/\" + ePerson.getID(), expectedStatus);\n     }\n \n+    @Test\n+    public void patchMetadataByAdmin() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        // should be allowed, and eperson.firstname should be replaced.\n+        getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n+            .content(patchBody)\n+            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isOk())\n+                        .andExpect(jsonPath(\"$.metadata\", Matchers.allOf(\n+                            MetadataMatcher.matchMetadata(\"eperson.firstname\", newName))));\n+    }\n+\n+    @Test\n+    public void patchOwnMetadataByNonAdminUser() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .withPassword(password)\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        context.restoreAuthSystemState();\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(ePerson.getEmail(), password);\n+\n+        // updates password\n+        getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n+                                     .content(patchBody)\n+                                     .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isOk())\n+                        .andExpect(jsonPath(\"$.metadata\", Matchers.allOf(\n+                            MetadataMatcher.matchMetadata(\"eperson.firstname\", newName))));\n+\n+    }\n+\n+    @Test\n+    public void patchNotOwnMetadataByNonAdminUser() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .withPassword(password)\n+                                        .build();\n+\n+        EPerson ePerson2 = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"Jane\", \"Smith\")\n+                                        .withEmail(\"Janesmith@fake-email.com\")\n+                                        .withPassword(password)\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        context.restoreAuthSystemState();\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(ePerson2.getEmail(), password);\n+\n+        // updates password", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjY2MzU1OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/EPersonRestRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMTowMDoyNFrOGQR_8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoyMToxNlrOGQdRCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyNTI5Nw==", "bodyText": "It's unclear why this is now @Autowired and imported into this class. I don't see any new code that uses it?  Are these changes to EPersonRestRepository necessary?", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r419725297", "createdAt": "2020-05-04T21:00:24Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/EPersonRestRepository.java", "diffHunk": "@@ -44,6 +45,9 @@\n     @Autowired\n     AuthorizeService authorizeService;\n \n+    @Autowired\n+    DSpaceObjectMetadataPatchUtils metadataPatchUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwOTg5Ng==", "bodyText": "You are correct @tdonohue, this should not be present in this part of the code (Seems to be a remnant of an older commit that has been overlooked)\nI'll get these feedback-points looked at. Thanks for the review", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r419909896", "createdAt": "2020-05-05T07:21:16Z", "author": {"login": "jonas-atmire"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/EPersonRestRepository.java", "diffHunk": "@@ -44,6 +45,9 @@\n     @Autowired\n     AuthorizeService authorizeService;\n \n+    @Autowired\n+    DSpaceObjectMetadataPatchUtils metadataPatchUtils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyNTI5Nw=="}, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjU4MTg5OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/security/EPersonRestPermissionEvaluatorPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo1NjowNVrOGQ3PfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo1NjowNVrOGQ3PfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNTQ4NA==", "bodyText": "is this redundant?", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r420335484", "createdAt": "2020-05-05T18:56:05Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/security/EPersonRestPermissionEvaluatorPlugin.java", "diffHunk": "@@ -102,10 +103,12 @@ public boolean hasPatchPermission(Authentication authentication, Serializable ta\n         /**\n          * The entire Patch request should be denied if it contains operations that are\n          * restricted to Dspace administrators. The authenticated user is currently allowed to\n-         * update their own password.\n+         * update their own password and their own metadata.\n          */\n         for (Operation op: operations) {\n-            if (!op.getPath().contentEquals(EPersonPasswordReplaceOperation.OPERATION_PASSWORD_CHANGE)) {\n+            if (!(op.getPath().contentEquals(EPersonPasswordReplaceOperation.OPERATION_PASSWORD_CHANGE)\n+                || (op.getPath().startsWith(DSpaceObjectMetadataPatchUtils.OPERATION_METADATA_PATH)\n+                || op.getPath().equals(DSpaceObjectMetadataPatchUtils.OPERATION_METADATA_PATH)))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjU5NDI4OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo1OTo0NlrOGQ3Xlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo1OTo0NlrOGQ3Xlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNzU1OA==", "bodyText": "please check that the changes are persisted with an additional get", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r420337558", "createdAt": "2020-05-05T18:59:46Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1516,6 +1517,102 @@ private void runPatchMetadataTests(EPerson asUser, int expectedStatus) throws Ex\n         new MetadataPatchSuite().runWith(getClient(token), \"/api/eperson/epersons/\" + ePerson.getID(), expectedStatus);\n     }\n \n+    @Test\n+    public void patchMetadataByAdmin() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        // should be allowed, and eperson.firstname should be replaced.\n+        getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n+            .content(patchBody)\n+            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isOk())\n+                        .andExpect(jsonPath(\"$.metadata\", Matchers.allOf(\n+                            MetadataMatcher.matchMetadata(\"eperson.firstname\", newName))));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjYwMjM0OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTowMjoxM1rOGQ3c5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTowMjoxM1rOGQ3c5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzODkxOQ==", "bodyText": "please use an additional get to check that changes are persisted", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r420338919", "createdAt": "2020-05-05T19:02:13Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1516,6 +1517,102 @@ private void runPatchMetadataTests(EPerson asUser, int expectedStatus) throws Ex\n         new MetadataPatchSuite().runWith(getClient(token), \"/api/eperson/epersons/\" + ePerson.getID(), expectedStatus);\n     }\n \n+    @Test\n+    public void patchMetadataByAdmin() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        // should be allowed, and eperson.firstname should be replaced.\n+        getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n+            .content(patchBody)\n+            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isOk())\n+                        .andExpect(jsonPath(\"$.metadata\", Matchers.allOf(\n+                            MetadataMatcher.matchMetadata(\"eperson.firstname\", newName))));\n+    }\n+\n+    @Test\n+    public void patchOwnMetadataByNonAdminUser() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .withPassword(password)\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        context.restoreAuthSystemState();\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(ePerson.getEmail(), password);\n+\n+        // updates password\n+        getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n+                                     .content(patchBody)\n+                                     .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isOk())\n+                        .andExpect(jsonPath(\"$.metadata\", Matchers.allOf(\n+                            MetadataMatcher.matchMetadata(\"eperson.firstname\", newName))));\n+\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjYwNDA0OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTowMjo0M1rOGQ3eAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTowMjo0M1rOGQ3eAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzOTIwMA==", "bodyText": "please verify that no changes have been applied", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r420339200", "createdAt": "2020-05-05T19:02:43Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1516,6 +1517,102 @@ private void runPatchMetadataTests(EPerson asUser, int expectedStatus) throws Ex\n         new MetadataPatchSuite().runWith(getClient(token), \"/api/eperson/epersons/\" + ePerson.getID(), expectedStatus);\n     }\n \n+    @Test\n+    public void patchMetadataByAdmin() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        // should be allowed, and eperson.firstname should be replaced.\n+        getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n+            .content(patchBody)\n+            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isOk())\n+                        .andExpect(jsonPath(\"$.metadata\", Matchers.allOf(\n+                            MetadataMatcher.matchMetadata(\"eperson.firstname\", newName))));\n+    }\n+\n+    @Test\n+    public void patchOwnMetadataByNonAdminUser() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .withPassword(password)\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        context.restoreAuthSystemState();\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(ePerson.getEmail(), password);\n+\n+        // updates password\n+        getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n+                                     .content(patchBody)\n+                                     .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isOk())\n+                        .andExpect(jsonPath(\"$.metadata\", Matchers.allOf(\n+                            MetadataMatcher.matchMetadata(\"eperson.firstname\", newName))));\n+\n+    }\n+\n+    @Test\n+    public void patchNotOwnMetadataByNonAdminUser() throws Exception {\n+\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"Johndoe@fake-email.com\")\n+                                        .withPassword(password)\n+                                        .build();\n+\n+        EPerson ePerson2 = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"Jane\", \"Smith\")\n+                                        .withEmail(\"Janesmith@fake-email.com\")\n+                                        .withPassword(password)\n+                                        .build();\n+\n+        String newName = \"JohnReplace\";\n+\n+        context.restoreAuthSystemState();\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        ReplaceOperation replaceOperation = new ReplaceOperation(\"/metadata/eperson.firstname\", newName);\n+        ops.add(replaceOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        String token = getAuthToken(ePerson2.getEmail(), password);\n+\n+        // updates password\n+        getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n+                                     .content(patchBody)\n+                                     .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isForbidden());\n+\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1d5bd47acf5fe868e01662df426aff681e2f03"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDUyMDQyOnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/EPersonRestRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTowODoyNFrOGSDL9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToxODoxN1rOGSDn1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU3OTc2NA==", "bodyText": "there are only formatting change in this class, can you revert them please?", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r421579764", "createdAt": "2020-05-07T15:08:24Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/EPersonRestRepository.java", "diffHunk": "@@ -54,7 +54,7 @@ public EPersonRestRepository(EPersonService dsoService) {\n \n     @Override\n     protected EPersonRest createAndReturn(Context context)\n-            throws AuthorizeException {\n+        throws AuthorizeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92cc64c30a82b71eba5f3864404adfa3fce5f122"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU4NjkwMA==", "bodyText": "I agree these seem like non-standard formatting changes. It'd be best to just revert all changes to EPersonRestRepository.  Could that be done quickly @jonas-atmire  or @MarieVerdonck ?", "url": "https://github.com/DSpace/DSpace/pull/2747#discussion_r421586900", "createdAt": "2020-05-07T15:18:17Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/EPersonRestRepository.java", "diffHunk": "@@ -54,7 +54,7 @@ public EPersonRestRepository(EPersonService dsoService) {\n \n     @Override\n     protected EPersonRest createAndReturn(Context context)\n-            throws AuthorizeException {\n+        throws AuthorizeException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU3OTc2NA=="}, "originalCommit": {"oid": "92cc64c30a82b71eba5f3864404adfa3fce5f122"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1499, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}