{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5OTY3NTc0", "number": 2762, "title": "Configuration property retrieval Rest endpoint", "bodyText": "This PR is related to the rest contract related to the retrieval of configuration properties PR, as well as the exposure of the Google Analytics Key Jira ticket (Related to Angular issue:DSpace/dspace-angular#244)\nA new endpoint \"/config/property/:property\" has been created that allows for GET access to configuration properties for certain properties that have been configured to be accessible. (No admin only properties are configurable in this PR)\n(Please note that, at this time, the google analytics key is the only property that is configured as not to clutter up the PR with configuration until we have a clear overview of what should/shouldn't be exposed publicly)\nWhen testing, to expand upon the configuration properties that are exposed, you can add in those additional values in the 'exposedConfigurationProperties list in 'exposed-properties-configuration.xml'", "createdAt": "2020-05-19T08:41:22Z", "url": "https://github.com/DSpace/DSpace/pull/2762", "merged": true, "mergeCommit": {"oid": "81b1e57d7982d15676e773a143c4590778833128"}, "closed": true, "closedAt": "2020-06-10T18:18:47Z", "author": {"login": "jonas-atmire"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd77qRgH2gAyNDE5OTY3NTc0OmQ4YmRhNWM3MjFlMWJlZGRlMjhmOTUxNjhkNDdmMWI1ZDNiNjFmYzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoX6zhAFqTQyNTU3MTEzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d8bda5c721e1bedde28f95168d47f1b5d3b61fc2", "author": {"user": {"login": "peter-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/d8bda5c721e1bedde28f95168d47f1b5d3b61fc2", "committedDate": "2020-05-04T09:19:27Z", "message": "70471: Add configuration properties endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f85a5b3c4d8127ff8f9f622e51948171fef76d33", "author": {"user": {"login": "peter-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/f85a5b3c4d8127ff8f9f622e51948171fef76d33", "committedDate": "2020-05-04T15:56:14Z", "message": "70603: Make the configuration properties endpoint conform to the contract"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fcb782230bb5b71a799322e23998d427aac5419", "author": {"user": {"login": "peter-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/7fcb782230bb5b71a799322e23998d427aac5419", "committedDate": "2020-05-11T10:56:27Z", "message": "70824: Configuration properties endpoint feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjUzMTA2", "url": "https://github.com/DSpace/DSpace/pull/2762#pullrequestreview-421253106", "createdAt": "2020-05-29T20:03:19Z", "commit": {"oid": "7fcb782230bb5b71a799322e23998d427aac5419"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDowMzoxOVrOGcqdOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoxODoxOFrOGcq2Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwODkyMg==", "bodyText": "You can replace this getArrayProperty().length check with a call to configurationService.hasProperty().  That's the recommended way to determine if a property exists in our configuration.", "url": "https://github.com/DSpace/DSpace/pull/2762#discussion_r432708922", "createdAt": "2020-05-29T20:03:19Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/ConfigurationRestRepository.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.repository;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import javax.annotation.Resource;\n+\n+import org.dspace.app.rest.exception.RepositoryMethodNotImplementedException;\n+import org.dspace.app.rest.model.PropertyRest;\n+import org.dspace.core.Context;\n+import org.dspace.services.ConfigurationService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.rest.webmvc.ResourceNotFoundException;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * This is the repository responsible of exposing configuration properties\n+ */\n+@Component(PropertyRest.CATEGORY + \".\" + PropertyRest.NAME)\n+public class ConfigurationRestRepository extends DSpaceRestRepository<PropertyRest, String> {\n+    @Autowired\n+    private ConfigurationService configurationService;\n+\n+    @Resource(name = \"exposedConfigurationProperties\")\n+    private ArrayList<String> exposedProperties;\n+\n+    /**\n+     * Gets the value of a configuration property if it is exposed via REST\n+     *\n+     * Example:\n+     * <pre>\n+     * {@code\n+     * curl http://<dspace.server.url>/api/config/properties/google.analytics.key\n+     *  -XGET \\\n+     *  -H 'Authorization: Bearer eyJhbGciOiJI...'\n+     * }\n+     * </pre>\n+     *\n+     * @param property\n+     * @return\n+     */\n+    @Override\n+    public PropertyRest findOne(Context context, String property) {\n+        if (!exposedProperties.contains(property) || configurationService.getArrayProperty(property).length == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fcb782230bb5b71a799322e23998d427aac5419"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMjQ4Ng==", "bodyText": "Since this is a simple array/list of property keys, why not make this configurable within the rest.cfg file?\nIn other words, it'd be much easier to set this like:\nrest.properties.exposed = google.analytics.key\nrest.properties.exposed = second.property\n\nThen in the ConfigurationRestRepository, you can access these values by doing:\n@Value(\"${rest.properties.exposed}\")\nprivate String[] exposedProperties;\n\nI'd rather this setting be in our normal configuration as that makes it much more flexible. It's easier to override in local.cfg, via environment variable or System property setting.", "url": "https://github.com/DSpace/DSpace/pull/2762#discussion_r432712486", "createdAt": "2020-05-29T20:11:32Z", "author": {"login": "tdonohue"}, "path": "dspace/config/spring/rest/exposed-properties-configuration.xml", "diffHunk": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:util=\"http://www.springframework.org/schema/util\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd\">\n+\n+    <!-- Define which configuration properties are exposed through the http://<dspace.server.url>/api/config/properties/\n+         rest endpoint. If a rest request is made for a property which exists, but isn't listed here, the server will\n+         respond that the property wasn't found.-->\n+    <util:list id=\"exposedConfigurationProperties\" value-type=\"java.lang.String\">\n+        <value>google.analytics.key</value>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fcb782230bb5b71a799322e23998d427aac5419"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNTMwNg==", "bodyText": "As I was reviewing this code, I've just now realized that I'm not sure whether we want a 405 response on the main endpoint (which I know we decided on in the contract).  If this returns a 405, that is more secure, but how will the Client ever know which properties are available?  Do we just need to assume the Client is hardcoded to know what properties are server side properties?\nThis isn't a question we have to resolve in this particular PR, it could be resolved in a followup PR.  But, we might be setting up a problem similar to the one described in DS-4495 by completely hiding the list of configurations from the client side.  Maybe @artlowel should look at this PRs approach to see if it will work for the Angular UI?", "url": "https://github.com/DSpace/DSpace/pull/2762#discussion_r432715306", "createdAt": "2020-05-29T20:18:18Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/main/java/org/dspace/app/rest/repository/ConfigurationRestRepository.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * The contents of this file are subject to the license and copyright\n+ * detailed in the LICENSE and NOTICE files at the root of the source\n+ * tree and available online at\n+ *\n+ * http://www.dspace.org/license/\n+ */\n+package org.dspace.app.rest.repository;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import javax.annotation.Resource;\n+\n+import org.dspace.app.rest.exception.RepositoryMethodNotImplementedException;\n+import org.dspace.app.rest.model.PropertyRest;\n+import org.dspace.core.Context;\n+import org.dspace.services.ConfigurationService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.rest.webmvc.ResourceNotFoundException;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * This is the repository responsible of exposing configuration properties\n+ */\n+@Component(PropertyRest.CATEGORY + \".\" + PropertyRest.NAME)\n+public class ConfigurationRestRepository extends DSpaceRestRepository<PropertyRest, String> {\n+    @Autowired\n+    private ConfigurationService configurationService;\n+\n+    @Resource(name = \"exposedConfigurationProperties\")\n+    private ArrayList<String> exposedProperties;\n+\n+    /**\n+     * Gets the value of a configuration property if it is exposed via REST\n+     *\n+     * Example:\n+     * <pre>\n+     * {@code\n+     * curl http://<dspace.server.url>/api/config/properties/google.analytics.key\n+     *  -XGET \\\n+     *  -H 'Authorization: Bearer eyJhbGciOiJI...'\n+     * }\n+     * </pre>\n+     *\n+     * @param property\n+     * @return\n+     */\n+    @Override\n+    public PropertyRest findOne(Context context, String property) {\n+        if (!exposedProperties.contains(property) || configurationService.getArrayProperty(property).length == 0) {\n+            throw new ResourceNotFoundException(\"No such configuration property: \" + property);\n+        }\n+\n+        String[] propertyValues = configurationService.getArrayProperty(property);\n+\n+        PropertyRest propertyRest = new PropertyRest();\n+        propertyRest.setName(property);\n+        propertyRest.setValues(Arrays.asList(propertyValues));\n+\n+        return propertyRest;\n+    }\n+\n+    @Override\n+    public Page<PropertyRest> findAll(Context context, Pageable pageable) {\n+        throw new RepositoryMethodNotImplementedException(\"No implementation found; Method not allowed\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fcb782230bb5b71a799322e23998d427aac5419"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e61be497ee9981dbd7027283939061fc9ce895c", "author": {"user": {"login": "peter-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/4e61be497ee9981dbd7027283939061fc9ce895c", "committedDate": "2020-06-04T12:04:41Z", "message": "71220: Configuration properties endpoint - PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24ede371ca5b3b33c98abbbd2e1a164b5df82d86", "author": {"user": {"login": "peter-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/24ede371ca5b3b33c98abbbd2e1a164b5df82d86", "committedDate": "2020-06-04T13:36:02Z", "message": "Merge remote-tracking branch 'community/master' into w2p-70471_request-configuration-properties-in-rest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7aeb102d4d714c26d9d4a138088cc40f1df1bef", "author": {"user": {"login": "peter-atmire", "name": null}}, "url": "https://github.com/DSpace/DSpace/commit/a7aeb102d4d714c26d9d4a138088cc40f1df1bef", "committedDate": "2020-06-05T15:28:24Z", "message": "71220: Configuration properties endpoint - PR feedback\n\n- fixes after merging with latest master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTcxMTM1", "url": "https://github.com/DSpace/DSpace/pull/2762#pullrequestreview-425571135", "createdAt": "2020-06-05T19:35:06Z", "commit": {"oid": "a7aeb102d4d714c26d9d4a138088cc40f1df1bef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1457, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}