{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzOTE5NzM3", "number": 3041, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODowNzoxNlrOE1-78Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0OToxMVrOE6KsOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDQxMTM3OnYy", "diffSide": "LEFT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODowNzoxNlrOHujy5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjozMDozOFrOHu099g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4MzAxMw==", "bodyText": "the scenario in the original test is loss. What happen if we try to set an empty password?", "url": "https://github.com/DSpace/DSpace/pull/3041#discussion_r518583013", "createdAt": "2020-11-06T08:07:16Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1410,14 +1411,14 @@ public void patchCertificateNonAdminUser() throws Exception {\n     }\n \n     @Test\n-    public void patchPasswordMissingValue() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd5be5b84fd0b4e50feae6a2e84022db077f0dd3"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2NDM3NA==", "bodyText": "I agree with @abollini that we should make sure to add a test here to prove what happens if you send an ADD with an empty password (I'd expect it to throw an error like before, but would be good to prove).\n(Sidenote: @Raf-atmire  I've already done a quick code review & this is looking great to me, other then this one missing test.  I'll be waiting to submit my review though until I test it alongside the frontend PR)", "url": "https://github.com/DSpace/DSpace/pull/3041#discussion_r518864374", "createdAt": "2020-11-06T16:30:38Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1410,14 +1411,14 @@ public void patchCertificateNonAdminUser() throws Exception {\n     }\n \n     @Test\n-    public void patchPasswordMissingValue() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4MzAxMw=="}, "originalCommit": {"oid": "cd5be5b84fd0b4e50feae6a2e84022db077f0dd3"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDI4MDI1OnYy", "diffSide": "RIGHT", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODo0OToxMVrOH1EHZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjoxMzo1MlrOH1No_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDAwNA==", "bodyText": "I have approved this PR but I want to note that this test is not exactly what I would expect. It would be better to test for the authn/status endpoint to verify that we are really loggedin. It is not documented what should happen trying to access a public endpoint with an invalid token. @tdonohue do you agree? should we open a ticket for that? again this PR can be merged as is as this is unrelated with the PR", "url": "https://github.com/DSpace/DSpace/pull/3041#discussion_r525404004", "createdAt": "2020-11-17T18:49:11Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1411,49 +1412,70 @@ public void patchCertificateNonAdminUser() throws Exception {\n \n     @Test\n     public void patchPasswordMissingValue() throws Exception {\n-\n         context.turnOffAuthorisationSystem();\n \n+        String originalPw = \"testpass79bC\";\n+\n         EPerson ePerson = EPersonBuilder.createEPerson(context)\n                                         .withNameInMetadata(\"John\", \"Doe\")\n                                         .withEmail(\"Johndoe@example.com\")\n-                                        .withPassword(\"testpass79bC\")\n+                                        .withPassword(originalPw)\n                                         .build();\n \n         context.restoreAuthSystemState();\n \n         String token = getAuthToken(admin.getEmail(), password);\n \n-        String newPassword = \"newpass\";\n-\n-        List<Operation> ops = new ArrayList<Operation>();\n-        ReplaceOperation replaceOperation = new ReplaceOperation(\"/password\", newPassword);\n-        ops.add(replaceOperation);\n+        List<Operation> ops = new ArrayList<>();\n+        AddOperation addOperation = new AddOperation(\"/password\", null);\n+        ops.add(addOperation);\n         String patchBody = getPatchContent(ops);\n \n-        // initialize passwd\n+        // adding null pw should return bad request\n         getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n-                .content(patchBody)\n-                .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+            .content(patchBody)\n+            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isBadRequest());\n+\n+        // login with original password\n+        token = getAuthToken(ePerson.getEmail(), originalPw);\n+        getClient(token).perform(get(\"/api/\"))\n                         .andExpect(status().isOk());\n \n+    }\n \n-        List<Operation> ops2 = new ArrayList<Operation>();\n-        ReplaceOperation replaceOperation2 = new ReplaceOperation(\"/password\", null);\n-        ops2.add(replaceOperation2);\n-        patchBody = getPatchContent(ops2);\n+    @Test\n+    public void patchPasswordNotInitialised() throws Exception {\n \n-        // should return bad request\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"userNotInitialised@example.com\")\n+                                        .withCanLogin(true)\n+                                        .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        String newPassword = \"newpass\";\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        AddOperation addOperation = new AddOperation(\"/password\", newPassword);\n+        ops.add(addOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        // initialize password with add operation, not set during creation\n         getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n                 .content(patchBody)\n                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n-                        .andExpect(status().isBadRequest());\n+                        .andExpect(status().isOk());\n \n-        // login with original password\n+        // login with new password => succeeds\n         token = getAuthToken(ePerson.getEmail(), newPassword);\n         getClient(token).perform(get(\"/api/\"))\n                         .andExpect(status().isOk());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c21703b5eab3b67e13e81a8595db5ee686df1a9"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU2MDA2Mw==", "bodyText": "@Raf-atmire : @abollini is correct (and I overlooked this).  I don't think this test is correct (and I see you've reused this same test in your changes to patchPasswordMissingValue()).\nInstead of doing a GET against /api/, we should be doing a GET against /api/authn/status and checking that it returns \"authenticated=true\". So, what you should be doing here is replace these two lines (starting with getClient( with somethin like this: https://github.com/DSpace/DSpace/blob/main/dspace-server-webapp/src/test/java/org/dspace/app/rest/AuthenticationRestControllerIT.java#L211-L216\nThat'd be a more accurate test to verify that the login works.  I'm actually not sure if running a GET against /api/ even requires authentication or not -- in fact based on the response of the demo REST API, it seems like that request would NOT require authentication: https://dspace7.4science.cloud/server/api/\nSo, if you could fix this check here and on line 1440 above, then this PR should be ready to merge.  Thanks!", "url": "https://github.com/DSpace/DSpace/pull/3041#discussion_r525560063", "createdAt": "2020-11-17T22:13:52Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1411,49 +1412,70 @@ public void patchCertificateNonAdminUser() throws Exception {\n \n     @Test\n     public void patchPasswordMissingValue() throws Exception {\n-\n         context.turnOffAuthorisationSystem();\n \n+        String originalPw = \"testpass79bC\";\n+\n         EPerson ePerson = EPersonBuilder.createEPerson(context)\n                                         .withNameInMetadata(\"John\", \"Doe\")\n                                         .withEmail(\"Johndoe@example.com\")\n-                                        .withPassword(\"testpass79bC\")\n+                                        .withPassword(originalPw)\n                                         .build();\n \n         context.restoreAuthSystemState();\n \n         String token = getAuthToken(admin.getEmail(), password);\n \n-        String newPassword = \"newpass\";\n-\n-        List<Operation> ops = new ArrayList<Operation>();\n-        ReplaceOperation replaceOperation = new ReplaceOperation(\"/password\", newPassword);\n-        ops.add(replaceOperation);\n+        List<Operation> ops = new ArrayList<>();\n+        AddOperation addOperation = new AddOperation(\"/password\", null);\n+        ops.add(addOperation);\n         String patchBody = getPatchContent(ops);\n \n-        // initialize passwd\n+        // adding null pw should return bad request\n         getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n-                .content(patchBody)\n-                .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+            .content(patchBody)\n+            .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n+                        .andExpect(status().isBadRequest());\n+\n+        // login with original password\n+        token = getAuthToken(ePerson.getEmail(), originalPw);\n+        getClient(token).perform(get(\"/api/\"))\n                         .andExpect(status().isOk());\n \n+    }\n \n-        List<Operation> ops2 = new ArrayList<Operation>();\n-        ReplaceOperation replaceOperation2 = new ReplaceOperation(\"/password\", null);\n-        ops2.add(replaceOperation2);\n-        patchBody = getPatchContent(ops2);\n+    @Test\n+    public void patchPasswordNotInitialised() throws Exception {\n \n-        // should return bad request\n+        context.turnOffAuthorisationSystem();\n+\n+        EPerson ePerson = EPersonBuilder.createEPerson(context)\n+                                        .withNameInMetadata(\"John\", \"Doe\")\n+                                        .withEmail(\"userNotInitialised@example.com\")\n+                                        .withCanLogin(true)\n+                                        .build();\n+\n+        context.restoreAuthSystemState();\n+\n+        String token = getAuthToken(admin.getEmail(), password);\n+\n+        String newPassword = \"newpass\";\n+\n+        List<Operation> ops = new ArrayList<Operation>();\n+        AddOperation addOperation = new AddOperation(\"/password\", newPassword);\n+        ops.add(addOperation);\n+        String patchBody = getPatchContent(ops);\n+\n+        // initialize password with add operation, not set during creation\n         getClient(token).perform(patch(\"/api/eperson/epersons/\" + ePerson.getID())\n                 .content(patchBody)\n                 .contentType(MediaType.APPLICATION_JSON_PATCH_JSON))\n-                        .andExpect(status().isBadRequest());\n+                        .andExpect(status().isOk());\n \n-        // login with original password\n+        // login with new password => succeeds\n         token = getAuthToken(ePerson.getEmail(), newPassword);\n         getClient(token).perform(get(\"/api/\"))\n                         .andExpect(status().isOk());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDAwNA=="}, "originalCommit": {"oid": "2c21703b5eab3b67e13e81a8595db5ee686df1a9"}, "originalPosition": 136}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1448, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}