{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTA5MDc3", "number": 2759, "title": "DS-4499 Fix cleanup of test environment in earlier Integration Test", "bodyText": "References\nhttps://jira.lyrasis.org/browse/DS-4499\nDescription\n*All IT classes have been reviewed and where the context.restoreAuthSystemState() was missing, it has been added.\n*Objects that were not used have been removed.\n*Refactoring of the cleanup method in the Builder classes has been done.\nChecklist\nThis checklist provides a reminder of what we are going to look for when reviewing your PR. You need not complete this checklist prior to creating your PR (draft PRs are always welcome). If you are unsure about an item in the checklist, don't hesitate to ask. We're here to help!\n\n My PR is small in size (e.g. less than 1,000 lines of code, not including comments & integration tests). Exceptions may be made if previously agreed upon.\n My PR passes Checkstyle validation based on the Code Style Guide\n My PR includes Javadoc for all new (or modified) public methods and classes. It also includes Javadoc for large or complex private methods.\n My PR passes all tests and includes new/updated Unit or Integration Tests for any bug fixes, improvements or new features. A few reminders about what constitutes good tests:\n\nInclude tests for different user types, including: (1) Anonymous user, (2) Logged in user (non-admin), and (3) Administrator.\nInclude tests for known error scenarios and error codes (e.g. 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found, etc)\nFor bug fixes, include a test that reproduces the bug and proves it is fixed. For clarity, it may be useful to provide the test in a separate commit from the bug fix.\n\n\nN/A If my PR includes new, third-party dependencies (in any pom.xml), I've made sure their licenses align with the DSpace BSD License based on the Licensing of Contributions documentation.\nN/A If my PR modifies the REST API, I've linked to the REST Contract page (or open PR) related to this change.", "createdAt": "2020-05-11T13:34:49Z", "url": "https://github.com/DSpace/DSpace/pull/2759", "merged": true, "mergeCommit": {"oid": "03de94ecb25d5e0a841d16deca129c1fc0d5ac94"}, "closed": true, "closedAt": "2020-05-20T15:30:28Z", "author": {"login": "Micheleboychuk"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcenMJ3gH2gAyNDE2MTA5MDc3OjFjNGE0M2MzNmU1ODkzYTZkMTc0M2VlZjRlMDIyZmJjNDFiMjIwZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjKU2DgFqTQxNTQyMzAyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1c4a43c36e5893a6d1743eef4e022fbc41b220e1", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/1c4a43c36e5893a6d1743eef4e022fbc41b220e1", "committedDate": "2020-05-06T11:43:23Z", "message": "added context.restoreAuthSystemState(), where was missing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c21ef22290b195c83353f1c4664cbade83f6abe5", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/c21ef22290b195c83353f1c4664cbade83f6abe5", "committedDate": "2020-05-06T12:23:35Z", "message": "fixed error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c9e809f8fd425f9dbe4078a271380b49cb8ab52", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/8c9e809f8fd425f9dbe4078a271380b49cb8ab52", "committedDate": "2020-05-06T13:34:25Z", "message": "added context.restoreAuthSystemState() and delete static methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a975daa1dbc43f6fade28ce355d0645acd34b203", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/a975daa1dbc43f6fade28ce355d0645acd34b203", "committedDate": "2020-05-06T13:35:50Z", "message": "removed unused dipendensies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b22efd05dfc2310a6f69b2671d5d433fe1ca81e", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/3b22efd05dfc2310a6f69b2671d5d433fe1ca81e", "committedDate": "2020-05-06T15:20:34Z", "message": "refactored RelationshipRestRepositoryIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f91724dbff1fcca593a4874edab5a9e4a41d4008", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/f91724dbff1fcca593a4874edab5a9e4a41d4008", "committedDate": "2020-05-07T07:23:04Z", "message": "cleanup of test environment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2e617521ad9fceabbef863980961f0795809a2d", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/a2e617521ad9fceabbef863980961f0795809a2d", "committedDate": "2020-05-07T09:03:50Z", "message": "cleanup of test environment in WorkspaceItemRestRepositoryIT and WorkflowItemRestRepositoryIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95d089a306ce08939a62a9f782e82b832e533d93", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/95d089a306ce08939a62a9f782e82b832e533d93", "committedDate": "2020-05-07T11:26:45Z", "message": "cleanup of CollectionRestRepositoryIT and ItemRestRepositoryIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47411d8614ff0dc1417e33a86573799e4d00fb71", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/47411d8614ff0dc1417e33a86573799e4d00fb71", "committedDate": "2020-05-07T17:48:19Z", "message": "cleanup of CollectionGroupRestControllerIT and CommunityAdminGroupRestControllerIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c24ff84ad5f16c0bd18d5ae36ea18c5d1943384", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/6c24ff84ad5f16c0bd18d5ae36ea18c5d1943384", "committedDate": "2020-05-07T21:16:18Z", "message": "added deleteAdminGroup method for cleanup in CommunityBuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fc6f6cc325e072834bf7a05b4181079d077d269", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/7fc6f6cc325e072834bf7a05b4181079d077d269", "committedDate": "2020-05-08T09:48:37Z", "message": "refactoring of some builder classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/f0ec92dafbc08358c5ce3dc967503f59a79e5022", "committedDate": "2020-05-11T10:53:05Z", "message": "refactoring of the cleanup method in Builder classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzY4MjQz", "url": "https://github.com/DSpace/DSpace/pull/2759#pullrequestreview-409768243", "createdAt": "2020-05-12T07:27:56Z", "commit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoyNzo1NlrOGT5iXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0Mjo0OVrOGT6Ciw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxODgxNA==", "bodyText": "@Micheleboychuk remove this commented out method", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423518814", "createdAt": "2020-05-12T07:27:56Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/AbstractDSpaceObjectBuilder.java", "diffHunk": "@@ -233,17 +233,25 @@ protected AbstractDSpaceObjectBuilder(Context context) {\n \n     public abstract T build() throws SQLException, AuthorizeException;\n \n-    public void delete(T dso) throws Exception {\n+//    public void delete(T dso) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyMDcyMA==", "bodyText": "for other reviewers please note this comment as it explains the need of the refactoring done in all the Builder about the cleanup process", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423520720", "createdAt": "2020-05-12T07:31:16Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/CommunityAdminGroupRestControllerIT.java", "diffHunk": "@@ -138,6 +138,8 @@ public void postCommunityAdminGroupCreateAdminGroupSuccess() throws Exception {\n                         .andDo(result -> idRef\n                             .set(UUID.fromString(read(result.getResponse().getContentAsString(), \"$.id\")))\n                         );\n+        // no needs to explicitly cleanup the group created as the community comes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyNzA1MQ==", "bodyText": "This is a comment for other reviewers to explain the reasoning behind this change (and the same in all the other builder).\nIt is better to reload the primary object as this will guarantee us to access also fresh related objects during the cleanup, in this case the Admin Group.\nBefore, all the related objects where reloaded just before to be deleted (see previous implementeation of the deleteWorkflowGroups) but this approach have several issues:\n\nit is easy to forget about it, indeed when the deleteAdminGroup method was added the first time the build was failing due to that\ndoing that manually each time duplicate lot of code\nas you only reload the object that was attached to the \"old\" copy of the primary object you will fail to find related object created in outside thread. If the admin group has been created via a REST call collection.getAdministrators() run before the refresh of the community object would have returned null", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423527051", "createdAt": "2020-05-12T07:42:49Z", "author": {"login": "abollini"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/CollectionBuilder.java", "diffHunk": "@@ -164,58 +165,54 @@ public Collection build() {\n \n     @Override\n     public void cleanup() throws Exception {\n-        deleteAdminGroup();\n-        deleteDefaultReadGroups(collection);\n-        deleteWorkflowGroups(collection);\n-        delete(collection);\n-    }\n-\n-    private void deleteAdminGroup() throws SQLException, AuthorizeException {\n-        if (collection.getAdministrators() != null) {\n-            try (Context c = new Context()) {\n-                c.turnOffAuthorisationSystem();\n-                collectionService.removeAdministrators(c, collection);\n+       try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            collection = c.reloadEntity(collection);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c5ff93bd9400f5fe0264c8f82eb59ec2e883eef", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/8c5ff93bd9400f5fe0264c8f82eb59ec2e883eef", "committedDate": "2020-05-12T08:04:43Z", "message": "removed a note"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02a9a3f514f8db17593101885d6a4e96fc41e21e", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/02a9a3f514f8db17593101885d6a4e96fc41e21e", "committedDate": "2020-05-12T08:31:29Z", "message": "Merge master into DS-4499-CleanupTestEnviroment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMTg5OTkw", "url": "https://github.com/DSpace/DSpace/pull/2759#pullrequestreview-410189990", "createdAt": "2020-05-12T15:58:35Z", "commit": {"oid": "02a9a3f514f8db17593101885d6a4e96fc41e21e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTo1ODozNVrOGUNtSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoxNDo1NlrOGUOakA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0OTI5MQ==", "bodyText": "It looks like there's accidentally two context.restoreAuthSystemState() calls in this method now. This second one can be removed.", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423849291", "createdAt": "2020-05-12T15:58:35Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/EPersonRestRepositoryIT.java", "diffHunk": "@@ -1523,6 +1535,8 @@ public void patchMultipleOperationsWithFailure() throws Exception {\n                                         .withEmail(\"Johndoe@example.com\")\n                                         .build();\n \n+        context.restoreAuthSystemState();\n+\n         String token = getAuthToken(admin.getEmail(), password);\n \n         context.restoreAuthSystemState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9a3f514f8db17593101885d6a4e96fc41e21e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg1Nzg1NQ==", "bodyText": "This method is misspelled.  It should be deleteBundle.  Obviously, you'll need to also cleanup the places it's used in ITs.", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423857855", "createdAt": "2020-05-12T16:10:43Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BundleBuilder.java", "diffHunk": "@@ -67,4 +76,20 @@ public Bundle build() throws SQLException, AuthorizeException {\n \n         return bundle;\n     }\n+\n+    public static void deleteBundel(UUID uuid) throws SQLException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9a3f514f8db17593101885d6a4e96fc41e21e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2MDg4MA==", "bodyText": "Just a minor comment, I wonder if we should add a small inline comment here to remind ourselves why the reloadEntity is necessary. That way we don't accidentally refactor it out at a later time.\nWe could just say:\n// Ensure object and any related objects are reloaded before checking to see what needs cleanup", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r423860880", "createdAt": "2020-05-12T16:14:56Z", "author": {"login": "tdonohue"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/CollectionBuilder.java", "diffHunk": "@@ -164,58 +165,54 @@ public Collection build() {\n \n     @Override\n     public void cleanup() throws Exception {\n-        deleteAdminGroup();\n-        deleteDefaultReadGroups(collection);\n-        deleteWorkflowGroups(collection);\n-        delete(collection);\n-    }\n-\n-    private void deleteAdminGroup() throws SQLException, AuthorizeException {\n-        if (collection.getAdministrators() != null) {\n-            try (Context c = new Context()) {\n-                c.turnOffAuthorisationSystem();\n-                collectionService.removeAdministrators(c, collection);\n+       try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            collection = c.reloadEntity(collection);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyNzA1MQ=="}, "originalCommit": {"oid": "f0ec92dafbc08358c5ce3dc967503f59a79e5022"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ab860578d567c3712a74601fc29cf6d196137e5", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/4ab860578d567c3712a74601fc29cf6d196137e5", "committedDate": "2020-05-13T16:36:42Z", "message": "Implement community feedbacks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d", "author": {"user": {"login": "Micheleboychuk", "name": "Mykhaylo Boychuk"}}, "url": "https://github.com/DSpace/DSpace/commit/d462aa767600846eb16c8e0740dfb8223f6f1a2d", "committedDate": "2020-05-13T17:10:17Z", "message": "Implement community feedbacks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExOTI5ODc2", "url": "https://github.com/DSpace/DSpace/pull/2759#pullrequestreview-411929876", "createdAt": "2020-05-14T15:36:13Z", "commit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTU4NjYx", "url": "https://github.com/DSpace/DSpace/pull/2759#pullrequestreview-415158661", "createdAt": "2020-05-20T09:34:12Z", "commit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozNDoxM1rOGYDUaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozNDo1MlrOGYDV-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3MzM4NA==", "bodyText": "seems a risk to keep the context open?", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r427873384", "createdAt": "2020-05-20T09:34:13Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BitstreamBuilder.java", "diffHunk": "@@ -152,7 +152,15 @@ public Bitstream build() {\n \n     @Override\n     public void cleanup() throws Exception {\n-        delete(bitstream);\n+       try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            // Ensure object and any related objects are reloaded before checking to see what needs cleanup\n+            bitstream = c.reloadEntity(bitstream);\n+            if (bitstream != null) {\n+                delete(c, bitstream);\n+                c.complete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3Mzc4Nw==", "bodyText": "seems a risk to keep the context open, there are more such use cases below", "url": "https://github.com/DSpace/DSpace/pull/2759#discussion_r427873787", "createdAt": "2020-05-20T09:34:52Z", "author": {"login": "benbosman"}, "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/builder/BundleBuilder.java", "diffHunk": "@@ -51,7 +53,15 @@ public BundleBuilder withBitstream(Bitstream bitstream) {\n     }\n \n     public void cleanup() throws Exception {\n-        delete(bundle);\n+        try (Context c = new Context()) {\n+            c.turnOffAuthorisationSystem();\n+            // Ensure object and any related objects are reloaded before checking to see what needs cleanup\n+            bundle = c.reloadEntity(bundle);\n+            if (bundle != null) {\n+                delete(c, bundle);\n+                c.complete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NDIzMDI1", "url": "https://github.com/DSpace/DSpace/pull/2759#pullrequestreview-415423025", "createdAt": "2020-05-20T14:55:15Z", "commit": {"oid": "d462aa767600846eb16c8e0740dfb8223f6f1a2d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1445, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}