{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0ODA4NzEz", "number": 4712, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzowNjoyOFrOERP94Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTo0NjoxNVrOERoIWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTIyODQ5OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/view/FlutterView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzowNjoyOFrOG13Pjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxNToyMVrOG13aVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzMjgxNA==", "bodyText": "you should listen for an event from JxBrowserManager indicating that installation succeeded or failed rather than sleeping.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459132814", "createdAt": "2020-07-22T23:06:28Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzNTU3Mw==", "bodyText": "you could also use CompletableFuture completing the future when JxBrowserManager is ready.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459135573", "createdAt": "2020-07-22T23:15:21Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzMjgxNA=="}, "originalCommit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTIzMjI1OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/view/FlutterView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzowODoyOVrOG13R4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzowODoyOVrOG13R4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzMzQwOA==", "bodyText": "I believe there is a JBLink or similar class that is already styled to look like a link. I think the performance tab sohws an example of using it.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459133408", "createdAt": "2020-07-22T23:08:29Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {\n+      final JxBrowserStatus newStatus = jxBrowserManager.getStatus();\n+      if (newStatus.equals(JxBrowserStatus.INSTALLED)) {\n+        handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+        return;\n+      } else if (newStatus.equals(JxBrowserStatus.INSTALLATION_FAILED)) {\n+        handleJxBrowserInstallationFailed(app, inspectorService, toolWindow);\n+        return;\n+      } else {\n+        ThreadUtil.sleep(waitSeconds);\n+        waitSeconds = waitSeconds * 2;\n+      }\n+    }\n+    // TODO(helin24): Are there better options for this case? e.g. stop installation and retry, link to open in browser?\n+    presentLabel(toolWindow, INSTALLATION_TIMED_OUT_LABEL);\n+  }\n+\n+  protected void handleJxBrowserInstallationFailed(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    // Allow user to manually restart.\n+    presentClickableLabel(toolWindow, \"JxBrowser installation failed. Click to retry.\", new MouseAdapter() {\n+      @Override\n+      public void mouseClicked(MouseEvent e) {\n+        JxBrowserManager.getInstance().retryFromFailed(app.getProject());\n+        handleJxBrowserInstallationInProgress(app, inspectorService, toolWindow);\n+\n+      }\n+    });\n+  }\n+\n+  protected void presentLabel(ToolWindow toolWindow, String text) {\n+    final JBLabel label = new JBLabel(text, SwingConstants.CENTER);\n+    label.setForeground(UIUtil.getLabelDisabledForeground());\n+    replacePanelLabel(toolWindow, label);\n+  }\n+\n+  protected void presentClickableLabel(ToolWindow toolWindow, String text, MouseAdapter mouseAdapter) {\n+    final JBLabel label = new JBLabel(text, SwingConstants.CENTER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTI0NDQ0OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/view/FlutterView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxNDozNVrOG13ZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxNDozNVrOG13ZJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzNTI3MQ==", "bodyText": "nit: remove whitespace line.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459135271", "createdAt": "2020-07-22T23:14:35Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {\n+      final JxBrowserStatus newStatus = jxBrowserManager.getStatus();\n+      if (newStatus.equals(JxBrowserStatus.INSTALLED)) {\n+        handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+        return;\n+      } else if (newStatus.equals(JxBrowserStatus.INSTALLATION_FAILED)) {\n+        handleJxBrowserInstallationFailed(app, inspectorService, toolWindow);\n+        return;\n+      } else {\n+        ThreadUtil.sleep(waitSeconds);\n+        waitSeconds = waitSeconds * 2;\n+      }\n+    }\n+    // TODO(helin24): Are there better options for this case? e.g. stop installation and retry, link to open in browser?\n+    presentLabel(toolWindow, INSTALLATION_TIMED_OUT_LABEL);\n+  }\n+\n+  protected void handleJxBrowserInstallationFailed(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    // Allow user to manually restart.\n+    presentClickableLabel(toolWindow, \"JxBrowser installation failed. Click to retry.\", new MouseAdapter() {\n+      @Override\n+      public void mouseClicked(MouseEvent e) {\n+        JxBrowserManager.getInstance().retryFromFailed(app.getProject());\n+        handleJxBrowserInstallationInProgress(app, inspectorService, toolWindow);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTI0ODg2OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/utils/ThreadUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxNjoxNlrOG13bnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxNjoxNlrOG13bnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzNTkwMA==", "bodyText": "Would be good to avoid using sleep outside of tests. Remove this method.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459135900", "createdAt": "2020-07-22T23:16:16Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/utils/ThreadUtil.java", "diffHunk": "@@ -61,4 +61,14 @@ public static ThreadGroup getRootThreadGroup() {\n \n     return result;\n   }\n+\n+  public static boolean sleep(int seconds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODI2OTI3OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/view/FlutterView.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzowOToxMlrOG2Ty0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxMTozNVrOG2T4Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMDU5NA==", "bodyText": "is there a reason to not make this limit 10X higher? Users may have limited bandwidth.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459600594", "createdAt": "2020-07-23T17:09:12Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -89,6 +89,7 @@ public void dispose() {\n   protected static final String INSTALLATION_TIMED_OUT_LABEL = \"Waiting for JxBrowser installation timed out. Restart your IDE to try again.\";\n   protected static final String INSTALLING_DEVTOOLS_LABEL = \"Installing DevTools...\";\n   protected static final String DEVTOOLS_FAILED_LABEL = \"Setting up DevTools failed.\";\n+  protected static final int INSTALLATION_WAIT_LIMIT_SECONDS = 200;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMTk1NA==", "bodyText": "I have no opinion on this and chose a random number. This doesn't end the download attempt, only the completable future, but since we display a message suggesting a restart we should probably just make this bigger.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459601954", "createdAt": "2020-07-23T17:11:35Z", "author": {"login": "helin24"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -89,6 +89,7 @@ public void dispose() {\n   protected static final String INSTALLATION_TIMED_OUT_LABEL = \"Waiting for JxBrowser installation timed out. Restart your IDE to try again.\";\n   protected static final String INSTALLING_DEVTOOLS_LABEL = \"Installing DevTools...\";\n   protected static final String DEVTOOLS_FAILED_LABEL = \"Setting up DevTools failed.\";\n+  protected static final int INSTALLATION_WAIT_LIMIT_SECONDS = 200;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMDU5NA=="}, "originalCommit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODI4NzUxOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxNDoyM1rOG2T-pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOToxMToxNFrOG2X_kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMzYyMg==", "bodyText": "This logic is only safe if waitForInstallation is called after setUp is called.\nHere's a way to tweak it to make it a bit more robust.\nOnly create a new installation CompletableFuture if the previous future is already completed (indicates a previous failed install). Document he assumptions about the completed future.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459603622", "createdAt": "2020-07-23T17:14:23Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -55,28 +60,48 @@ public JxBrowserStatus getStatus() {\n     return status.get();\n   }\n \n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {\n+    if (installation == null) {\n+      return null;\n+    }\n+\n+    try {\n+      return installation.get(seconds, TimeUnit.SECONDS);\n+    }\n+    catch (InterruptedException | ExecutionException e) {\n+      LOG.info(\"Waiting for JxBrowser to install threw an exception\");\n+      return null;\n+    }\n+  }\n+\n   public void retryFromFailed(Project project) {\n     if (!status.compareAndSet(JxBrowserStatus.INSTALLATION_FAILED, JxBrowserStatus.NOT_INSTALLED)) {\n       return;\n     }\n     setUp(project);\n   }\n \n+  private void setStatusFailed() {\n+    status.set(JxBrowserStatus.INSTALLATION_FAILED);\n+    installation.complete(JxBrowserStatus.INSTALLATION_FAILED);\n+  }\n+\n   public void setUp(Project project) {\n     if (!status.compareAndSet(JxBrowserStatus.NOT_INSTALLED, JxBrowserStatus.INSTALLATION_IN_PROGRESS)) {\n       // This check ensures that an IDE only downloads and installs JxBrowser once, even if multiple projects are open.\n       // If already in progress, let calling point wait until success or failure (it may make sense to call setUp but proceed).\n       // If already succeeded or failed, no need to continue.\n       return;\n     }\n+    installation = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2OTM5Mw==", "bodyText": "Is my change and comment here accurate?", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459669393", "createdAt": "2020-07-23T19:11:14Z", "author": {"login": "helin24"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -55,28 +60,48 @@ public JxBrowserStatus getStatus() {\n     return status.get();\n   }\n \n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {\n+    if (installation == null) {\n+      return null;\n+    }\n+\n+    try {\n+      return installation.get(seconds, TimeUnit.SECONDS);\n+    }\n+    catch (InterruptedException | ExecutionException e) {\n+      LOG.info(\"Waiting for JxBrowser to install threw an exception\");\n+      return null;\n+    }\n+  }\n+\n   public void retryFromFailed(Project project) {\n     if (!status.compareAndSet(JxBrowserStatus.INSTALLATION_FAILED, JxBrowserStatus.NOT_INSTALLED)) {\n       return;\n     }\n     setUp(project);\n   }\n \n+  private void setStatusFailed() {\n+    status.set(JxBrowserStatus.INSTALLATION_FAILED);\n+    installation.complete(JxBrowserStatus.INSTALLATION_FAILED);\n+  }\n+\n   public void setUp(Project project) {\n     if (!status.compareAndSet(JxBrowserStatus.NOT_INSTALLED, JxBrowserStatus.INSTALLATION_IN_PROGRESS)) {\n       // This check ensures that an IDE only downloads and installs JxBrowser once, even if multiple projects are open.\n       // If already in progress, let calling point wait until success or failure (it may make sense to call setUp but proceed).\n       // If already succeeded or failed, no need to continue.\n       return;\n     }\n+    installation = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMzYyMg=="}, "originalCommit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODI5MzQxOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/view/FlutterView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxNTo1MFrOG2UCPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxNTo1MFrOG2UCPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwNDU0MA==", "bodyText": "why has the executeOnPolledThread call gone away?\nThe CompletableFuture code as written is still blocking but you could switch to the async version if you don't want to block.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459604540", "createdAt": "2020-07-23T17:15:50Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -414,36 +415,23 @@ protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorSe\n     if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n       handleJxBrowserInstalled(app, inspectorService, toolWindow);\n     } else {\n-      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n-    }\n-  }\n+      try {\n+        final JxBrowserStatus newStatus = jxBrowserManager.waitForInstallation(INSTALLATION_WAIT_LIMIT_SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTE4NjM5OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTo0NTo0OVrOG2crPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTo0NTo0OVrOG2crPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NjEwOA==", "bodyText": "installation is never null. you could annotate it as non nullable.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459746108", "createdAt": "2020-07-23T21:45:49Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -58,8 +56,35 @@ public static JxBrowserManager getInstance() {\n     return manager;\n   }\n \n-  public boolean isInstalled() {\n-    return status.get().equals(JxBrowserStatus.INSTALLED);\n+  public JxBrowserStatus getStatus() {\n+    return status.get();\n+  }\n+\n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {\n+    if (installation == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTE4NzQ0OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTo0NjoxNVrOG2cr5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTo0NjoxNVrOG2cr5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NjI3Nw==", "bodyText": "nit: comment that you must call setup as well as calling this message or it will time out.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459746277", "createdAt": "2020-07-23T21:46:15Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -58,8 +56,35 @@ public static JxBrowserManager getInstance() {\n     return manager;\n   }\n \n-  public boolean isInstalled() {\n-    return status.get().equals(JxBrowserStatus.INSTALLED);\n+  public JxBrowserStatus getStatus() {\n+    return status.get();\n+  }\n+\n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 498, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}