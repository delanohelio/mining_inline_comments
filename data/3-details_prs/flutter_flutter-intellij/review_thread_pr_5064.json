{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNDEyNDgz", "number": 5064, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTowMDo1M1rOE6w4BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzozMToxM1rOE6z00A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDUzNjM2OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/utils/MostlySilentOsProcessHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTowMDo1M1rOH2B97Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTowMDo1M1rOH2B97Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxNzM4OQ==", "bodyText": "Add a comment indicating why softKill should be preferred.\nYour comment for this CL is about the right level of granularity.\nSIGKILL is currently sent when a test process is stopped, but this can't be routed to remote processes spawned from the original one.", "url": "https://github.com/flutter/flutter-intellij/pull/5064#discussion_r526417389", "createdAt": "2020-11-18T21:00:53Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/utils/MostlySilentOsProcessHandler.java", "diffHunk": "@@ -30,14 +32,33 @@\n  * for more information.\n  */\n public class MostlySilentOsProcessHandler extends OSProcessHandler {\n+  private boolean softKill;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61a21932f256808e9538fa4350080091516c9814"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDU0MDY1OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/utils/MostlySilentOsProcessHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTowMjowOVrOH2CAjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjoyNjo0N1rOH2E3Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxODA2MA==", "bodyText": "Can we verify whether we were able to kill the process and fail if we weren't able to?", "url": "https://github.com/flutter/flutter-intellij/pull/5064#discussion_r526418060", "createdAt": "2020-11-18T21:02:09Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/utils/MostlySilentOsProcessHandler.java", "diffHunk": "@@ -30,14 +32,33 @@\n  * for more information.\n  */\n public class MostlySilentOsProcessHandler extends OSProcessHandler {\n+  private boolean softKill;\n+\n   public MostlySilentOsProcessHandler(@NotNull GeneralCommandLine commandLine)\n+    throws ExecutionException {\n+    this(commandLine, false);\n+  }\n+\n+  public MostlySilentOsProcessHandler(@NotNull GeneralCommandLine commandLine, boolean softKill)\n     throws ExecutionException {\n     super(commandLine);\n+    this.softKill = softKill;\n   }\n \n   @NotNull\n   @Override\n   protected BaseOutputReader.Options readerOptions() {\n     return BaseOutputReader.Options.forMostlySilentProcess();\n   }\n+\n+  @Override\n+  protected void doDestroyProcess() {\n+    final Process process = getProcess();\n+    if (softKill && SystemInfo.isUnix && shouldDestroyProcessRecursively() && processCanBeKilledByOS(process)) {\n+      UnixProcessManager.sendSigIntToProcessTree(process);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61a21932f256808e9538fa4350080091516c9814"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2MTY1NQ==", "bodyText": "UnixProcessManager.sendSigIntToProcessTree will log a warning message and return false if the process isn't killed - what's a reasonable action to take if that's the case? Throw an exception or call super.doDestroyProcess?", "url": "https://github.com/flutter/flutter-intellij/pull/5064#discussion_r526461655", "createdAt": "2020-11-18T22:20:25Z", "author": {"login": "helin24"}, "path": "src/io/flutter/utils/MostlySilentOsProcessHandler.java", "diffHunk": "@@ -30,14 +32,33 @@\n  * for more information.\n  */\n public class MostlySilentOsProcessHandler extends OSProcessHandler {\n+  private boolean softKill;\n+\n   public MostlySilentOsProcessHandler(@NotNull GeneralCommandLine commandLine)\n+    throws ExecutionException {\n+    this(commandLine, false);\n+  }\n+\n+  public MostlySilentOsProcessHandler(@NotNull GeneralCommandLine commandLine, boolean softKill)\n     throws ExecutionException {\n     super(commandLine);\n+    this.softKill = softKill;\n   }\n \n   @NotNull\n   @Override\n   protected BaseOutputReader.Options readerOptions() {\n     return BaseOutputReader.Options.forMostlySilentProcess();\n   }\n+\n+  @Override\n+  protected void doDestroyProcess() {\n+    final Process process = getProcess();\n+    if (softKill && SystemInfo.isUnix && shouldDestroyProcessRecursively() && processCanBeKilledByOS(process)) {\n+      UnixProcessManager.sendSigIntToProcessTree(process);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxODA2MA=="}, "originalCommit": {"oid": "61a21932f256808e9538fa4350080091516c9814"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2NDgzNQ==", "bodyText": "Lets kill the process completely but also log a message to analytics so we can diagnose what went wrong.", "url": "https://github.com/flutter/flutter-intellij/pull/5064#discussion_r526464835", "createdAt": "2020-11-18T22:26:47Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/utils/MostlySilentOsProcessHandler.java", "diffHunk": "@@ -30,14 +32,33 @@\n  * for more information.\n  */\n public class MostlySilentOsProcessHandler extends OSProcessHandler {\n+  private boolean softKill;\n+\n   public MostlySilentOsProcessHandler(@NotNull GeneralCommandLine commandLine)\n+    throws ExecutionException {\n+    this(commandLine, false);\n+  }\n+\n+  public MostlySilentOsProcessHandler(@NotNull GeneralCommandLine commandLine, boolean softKill)\n     throws ExecutionException {\n     super(commandLine);\n+    this.softKill = softKill;\n   }\n \n   @NotNull\n   @Override\n   protected BaseOutputReader.Options readerOptions() {\n     return BaseOutputReader.Options.forMostlySilentProcess();\n   }\n+\n+  @Override\n+  protected void doDestroyProcess() {\n+    final Process process = getProcess();\n+    if (softKill && SystemInfo.isUnix && shouldDestroyProcessRecursively() && processCanBeKilledByOS(process)) {\n+      UnixProcessManager.sendSigIntToProcessTree(process);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxODA2MA=="}, "originalCommit": {"oid": "61a21932f256808e9538fa4350080091516c9814"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTAxOTY4OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/utils/MostlySilentOsProcessHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzozMToxM1rOH2GgEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzozMToxM1rOH2GgEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MTY2NQ==", "bodyText": "don't need the full command line string which might identify the user, just the file name.", "url": "https://github.com/flutter/flutter-intellij/pull/5064#discussion_r526491665", "createdAt": "2020-11-18T23:31:13Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/utils/MostlySilentOsProcessHandler.java", "diffHunk": "@@ -30,14 +33,43 @@\n  * for more information.\n  */\n public class MostlySilentOsProcessHandler extends OSProcessHandler {\n+  /*\n+  This determines whether a soft kill (SIGINT) is sent to the process on destroy, instead of the default SIGKILL. SIGKILL can't be routed\n+  to remote processes spawned from the original one.\n+   */\n+  private boolean softKill;\n+  private GeneralCommandLine commandLine;\n+\n   public MostlySilentOsProcessHandler(@NotNull GeneralCommandLine commandLine)\n+    throws ExecutionException {\n+    this(commandLine, false);\n+  }\n+\n+  public MostlySilentOsProcessHandler(@NotNull GeneralCommandLine commandLine, boolean softKill)\n     throws ExecutionException {\n     super(commandLine);\n+    this.softKill = softKill;\n+    this.commandLine = commandLine;\n   }\n \n   @NotNull\n   @Override\n   protected BaseOutputReader.Options readerOptions() {\n     return BaseOutputReader.Options.forMostlySilentProcess();\n   }\n+\n+  @Override\n+  protected void doDestroyProcess() {\n+    final Process process = getProcess();\n+    if (softKill && SystemInfo.isUnix && shouldDestroyProcessRecursively() && processCanBeKilledByOS(process)) {\n+      final boolean result = UnixProcessManager.sendSigIntToProcessTree(process);\n+      if (!result) {\n+        FlutterInitializer.getAnalytics().sendEvent(\"process\", \"process kill failed: \" + this.commandLine.getCommandLineString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d9d151bfacbb90d701b61774833e9fa90f1b841"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 386, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}