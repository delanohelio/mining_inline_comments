{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MjYxNDMy", "number": 5066, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOTowMToyMVrOE7rQvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMToyNjozOFrOE-2SnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDEwMjM3OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/devtools/DevToolsManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOTowMToyMVrOH3dLPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMTowNTowMVrOH4ldFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxMTc0MA==", "bodyText": "why is there a 15 second timeout?", "url": "https://github.com/flutter/flutter-intellij/pull/5066#discussion_r527911740", "createdAt": "2020-11-20T19:01:21Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -237,23 +194,27 @@ public void openBrowserIntoPanel(String uri, ContentManager contentManager, Stri\n       devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n     }\n     else {\n-      @Nullable final OSProcessHandler handler =\n-        isBazel(project) ? getProcessHandlerForBazel() : getProcessHandlerForPub();\n+      if (isBazel(project)) {\n+        try {\n+          devToolsInstance = getDevToolsInstance().get(15, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba53f0d4a331270eca7d0306600b01962b37ea73"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5NTk1OQ==", "bodyText": "I can't remember what we decided on this - keep it? Otherwise it could wait indefinitely without raising an exception.", "url": "https://github.com/flutter/flutter-intellij/pull/5066#discussion_r529095959", "createdAt": "2020-11-24T01:05:01Z", "author": {"login": "helin24"}, "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -237,23 +194,27 @@ public void openBrowserIntoPanel(String uri, ContentManager contentManager, Stri\n       devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n     }\n     else {\n-      @Nullable final OSProcessHandler handler =\n-        isBazel(project) ? getProcessHandlerForBazel() : getProcessHandlerForPub();\n+      if (isBazel(project)) {\n+        try {\n+          devToolsInstance = getDevToolsInstance().get(15, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxMTc0MA=="}, "originalCommit": {"oid": "ba53f0d4a331270eca7d0306600b01962b37ea73"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDExNzQ5OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/devtools/DevToolsManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOTowNjowN1rOH3dUiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMTowODo1OFrOH4lh6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxNDEyMA==", "bodyText": "discussing offline if there is a more robust way to achieve the same result. I worry about all the extra edge cases this could introduce.", "url": "https://github.com/flutter/flutter-intellij/pull/5066#discussion_r527914120", "createdAt": "2020-11-20T19:06:07Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -298,6 +242,36 @@ private void openBrowserImpl(String uri, String screen) {\n     }\n   }\n \n+  private CompletableFuture<DevToolsInstance> getDevToolsInstance() {\n+    final CompletableFuture<DevToolsInstance> instance = new CompletableFuture<>();\n+    final Optional<FlutterApp> appsOptional =\n+      FlutterApp.allFromProjectProcess(project).stream().filter((FlutterApp app) -> app.getProject() == project).findFirst();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba53f0d4a331270eca7d0306600b01962b37ea73"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5NzE5Mg==", "bodyText": "I tried passing an app through to this function, but it's kind of complicated. There are a couple issues:\n\nApp has to be found this way when opening devtools from the run/debug tab, and this function is used from that workflow\nApp doesn't exist when a test is running, but I think we still want to be able to open devtools for bazel projects during tests? I'm not sure about the best way to make requests to the daemon from a test.", "url": "https://github.com/flutter/flutter-intellij/pull/5066#discussion_r529097192", "createdAt": "2020-11-24T01:08:58Z", "author": {"login": "helin24"}, "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -298,6 +242,36 @@ private void openBrowserImpl(String uri, String screen) {\n     }\n   }\n \n+  private CompletableFuture<DevToolsInstance> getDevToolsInstance() {\n+    final CompletableFuture<DevToolsInstance> instance = new CompletableFuture<>();\n+    final Optional<FlutterApp> appsOptional =\n+      FlutterApp.allFromProjectProcess(project).stream().filter((FlutterApp app) -> app.getProject() == project).findFirst();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxNDEyMA=="}, "originalCommit": {"oid": "ba53f0d4a331270eca7d0306600b01962b37ea73"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzM2NjY5OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/run/OpenDevToolsAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMToyNjozOFrOH8OgMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMTo1MToxNlrOH8PROQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxNDIyNg==", "bodyText": "This code still has the problem that we are finding all FlutterApps for the project and picking one rather than usinig the app for the app being debugged. Can we pick the right app?", "url": "https://github.com/flutter/flutter-intellij/pull/5066#discussion_r532914226", "createdAt": "2020-11-30T21:26:38Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/run/OpenDevToolsAction.java", "diffHunk": "@@ -50,21 +51,29 @@ public void update(@NotNull final AnActionEvent e) {\n   public void actionPerformed(@NotNull final AnActionEvent event) {\n     FlutterInitializer.sendAnalyticsAction(this);\n \n-    if (event.getProject() == null) {\n+    Project project = event.getProject();\n+    if (project == null) {\n       return;\n     }\n \n-    final DevToolsManager devToolsManager = DevToolsManager.getInstance(event.getProject());\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(project);\n \n-    final Optional<FlutterApp> appOptional = FlutterUtils.findFlutterAppFromProject(event.getProject());\n+    final Optional<FlutterApp> appOptional =\n+      FlutterApp.allFromProjectProcess(project).stream().filter((FlutterApp app) -> app.getProject() == project).findFirst();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c0f37bb7fb02a8c4274ed134d22414110ac03a8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkyNjc3Nw==", "bodyText": "Ah yeah, I can pass the app from where OpenDevToolsAction is created.", "url": "https://github.com/flutter/flutter-intellij/pull/5066#discussion_r532926777", "createdAt": "2020-11-30T21:51:16Z", "author": {"login": "helin24"}, "path": "src/io/flutter/run/OpenDevToolsAction.java", "diffHunk": "@@ -50,21 +51,29 @@ public void update(@NotNull final AnActionEvent e) {\n   public void actionPerformed(@NotNull final AnActionEvent event) {\n     FlutterInitializer.sendAnalyticsAction(this);\n \n-    if (event.getProject() == null) {\n+    Project project = event.getProject();\n+    if (project == null) {\n       return;\n     }\n \n-    final DevToolsManager devToolsManager = DevToolsManager.getInstance(event.getProject());\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(project);\n \n-    final Optional<FlutterApp> appOptional = FlutterUtils.findFlutterAppFromProject(event.getProject());\n+    final Optional<FlutterApp> appOptional =\n+      FlutterApp.allFromProjectProcess(project).stream().filter((FlutterApp app) -> app.getProject() == project).findFirst();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxNDIyNg=="}, "originalCommit": {"oid": "5c0f37bb7fb02a8c4274ed134d22414110ac03a8"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 392, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}