{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MjU0OTcy", "number": 4299, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMDozNTowM1rODY7n5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjozMTo0MFrODZjoIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDY5Mjg0OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/vmService/VMServiceManager.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMDozNTowM1rOFfEk8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjoyMjowN1rOFgAN1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyNTE3MQ==", "bodyText": "I believe that comparisons with doubles / floats are a bit fragile. The value could be something small but close to zero (0.000000001), or -0.0.\nPerhaps have a small validation method? Arbitrarily, anything > -1.0 and < 1.0 would be considered invalid?", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r368125171", "createdAt": "2020-01-17T20:35:03Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/vmService/VMServiceManager.java", "diffHunk": "@@ -630,7 +631,16 @@ public void received(JsonObject object) {\n             ret.complete(null);\n           }\n           else {\n-            ret.complete(object.get(fpsField).getAsDouble());\n+            final double fps = object.get(fpsField).getAsDouble();\n+            // Defend against invalid refresh rate for Flutter Desktop devices (0.0).\n+            if (fps == 0.0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0NjEzMg==", "bodyText": "Instead of putting this check in the VMServiceManager.java class - which currently doesn't know about the UI - perhaps move this check to the UI portion of the app which consumes this API? We'd want to make sure that we didn't perform the same check in multiple places.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r368146132", "createdAt": "2020-01-17T21:35:47Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/vmService/VMServiceManager.java", "diffHunk": "@@ -630,7 +631,16 @@ public void received(JsonObject object) {\n             ret.complete(null);\n           }\n           else {\n-            ret.complete(object.get(fpsField).getAsDouble());\n+            final double fps = object.get(fpsField).getAsDouble();\n+            // Defend against invalid refresh rate for Flutter Desktop devices (0.0).\n+            if (fps == 0.0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyNTE3MQ=="}, "originalCommit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1NjExMA==", "bodyText": "not to bike shed but anything under 24 fps could be considered invalid as 24fps is the lowest frame rate anyone considers smooth.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r368156110", "createdAt": "2020-01-17T22:07:01Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/vmService/VMServiceManager.java", "diffHunk": "@@ -630,7 +631,16 @@ public void received(JsonObject object) {\n             ret.complete(null);\n           }\n           else {\n-            ret.complete(object.get(fpsField).getAsDouble());\n+            final double fps = object.get(fpsField).getAsDouble();\n+            // Defend against invalid refresh rate for Flutter Desktop devices (0.0).\n+            if (fps == 0.0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyNTE3MQ=="}, "originalCommit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE3MTI4OA==", "bodyText": "Ah. I originally placed it in the VMServiceManager because I was afraid of it being called multiple times by the UI code that updates frequently. I now realize that even where it is in the VMServiceManager, it is called multiple times because it is triggered on each hot restart. Looks like we need to introduce an additional layer that manages this notification and prevents it from being shown multiple times.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r368171288", "createdAt": "2020-01-17T23:01:48Z", "author": {"login": "kenzieschmoll"}, "path": "src/io/flutter/vmService/VMServiceManager.java", "diffHunk": "@@ -630,7 +631,16 @@ public void received(JsonObject object) {\n             ret.complete(null);\n           }\n           else {\n-            ret.complete(object.get(fpsField).getAsDouble());\n+            final double fps = object.get(fpsField).getAsDouble();\n+            // Defend against invalid refresh rate for Flutter Desktop devices (0.0).\n+            if (fps == 0.0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyNTE3MQ=="}, "originalCommit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4MzQzMg==", "bodyText": "Add two classes to resolve this: DisplayRefreshRateManager and NotificationManager. Ptal.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r368183432", "createdAt": "2020-01-18T00:02:01Z", "author": {"login": "kenzieschmoll"}, "path": "src/io/flutter/vmService/VMServiceManager.java", "diffHunk": "@@ -630,7 +631,16 @@ public void received(JsonObject object) {\n             ret.complete(null);\n           }\n           else {\n-            ret.complete(object.get(fpsField).getAsDouble());\n+            final double fps = object.get(fpsField).getAsDouble();\n+            // Defend against invalid refresh rate for Flutter Desktop devices (0.0).\n+            if (fps == 0.0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyNTE3MQ=="}, "originalCommit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwMjI5Mg==", "bodyText": "used 24 fps as the threshold", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r369102292", "createdAt": "2020-01-21T16:22:07Z", "author": {"login": "kenzieschmoll"}, "path": "src/io/flutter/vmService/VMServiceManager.java", "diffHunk": "@@ -630,7 +631,16 @@ public void received(JsonObject object) {\n             ret.complete(null);\n           }\n           else {\n-            ret.complete(object.get(fpsField).getAsDouble());\n+            final double fps = object.get(fpsField).getAsDouble();\n+            // Defend against invalid refresh rate for Flutter Desktop devices (0.0).\n+            if (fps == 0.0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyNTE3MQ=="}, "originalCommit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTUwNjYyOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/NotificationManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxODo1MTo1NVrOFfLvFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjoyMTo1N1rOFgANZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MjQ1Mw==", "bodyText": "You'll want to switch this import to org.jetbrains.annotations.Nullable.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r368242453", "createdAt": "2020-01-18T18:51:55Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/NotificationManager.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 The Chromium Authors. All rights reserved.\n+ * Use of this source code is governed by a BSD-style license that can be\n+ * found in the LICENSE file.\n+ */\n+package io.flutter;\n+\n+import javax.annotation.Nullable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "998457f7e9ef18c83c2800625af600076e145e0e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwMjE4MA==", "bodyText": "done.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r369102180", "createdAt": "2020-01-21T16:21:57Z", "author": {"login": "kenzieschmoll"}, "path": "src/io/flutter/NotificationManager.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 The Chromium Authors. All rights reserved.\n+ * Use of this source code is governed by a BSD-style license that can be\n+ * found in the LICENSE file.\n+ */\n+package io.flutter;\n+\n+import javax.annotation.Nullable;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MjQ1Mw=="}, "originalCommit": {"oid": "998457f7e9ef18c83c2800625af600076e145e0e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTI0NzA3OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/performance/FrameRenderingDisplay.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjozMTo0MFrOFgAlQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjozNzozOVrOFgAzUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwODI5MA==", "bodyText": "Not critical, but in the future we can leave copyright years as is for existing files.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r369108290", "createdAt": "2020-01-21T16:31:40Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/performance/FrameRenderingDisplay.java", "diffHunk": "@@ -1,9 +1,9 @@\n /*\n- * Copyright 2018 The Chromium Authors. All rights reserved.\n+ * Copyright 2020 The Chromium Authors. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a141447adf2fbe64bdea2c36dd6f7fb9a46d401e"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTExMTg5MA==", "bodyText": "I think this happened automatically when I moved the file. Will watch for this in the future.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r369111890", "createdAt": "2020-01-21T16:37:39Z", "author": {"login": "kenzieschmoll"}, "path": "src/io/flutter/performance/FrameRenderingDisplay.java", "diffHunk": "@@ -1,9 +1,9 @@\n /*\n- * Copyright 2018 The Chromium Authors. All rights reserved.\n+ * Copyright 2020 The Chromium Authors. All rights reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwODI5MA=="}, "originalCommit": {"oid": "a141447adf2fbe64bdea2c36dd6f7fb9a46d401e"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 353, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}