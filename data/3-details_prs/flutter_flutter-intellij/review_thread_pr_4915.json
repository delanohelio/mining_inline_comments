{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NTU2MDgz", "number": 4915, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzo1NTo1N1rOEpJHNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzo1NTo1N1rOEpJHNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTc2Mzc0OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/preview/DartElementPresentationUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzo1NTo1N1rOHapFIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxOTo1Njo0M1rOHb57sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY5ODA4Mg==", "bodyText": "Shouldn't this also check if the function has a name before using Lambda?", "url": "https://github.com/flutter/flutter-intellij/pull/4915#discussion_r497698082", "createdAt": "2020-09-30T17:55:57Z", "author": {"login": "stevemessick"}, "path": "src/io/flutter/preview/DartElementPresentationUtil.java", "diffHunk": "@@ -60,7 +62,7 @@ public static Icon getIcon(@NotNull Element element) {\n         if (element.isTopLevelOrStatic()) return STATIC_FIELD_ICON;\n         return Field;\n       case ElementKind.FUNCTION:\n-        return element.isTopLevelOrStatic() ? TOP_LEVEL_FUNCTION_ICON : Function;\n+        return element.isTopLevelOrStatic() ? TOP_LEVEL_FUNCTION_ICON : Lambda;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1f241722a387db555ffb4d0d48e6355184e3e2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzNzc1MA==", "bodyText": "I'm not sure here - the 'lamda' icon is the one that the Dart plugin is using for non-top level functions, whether the item is actually a lamda or not.", "url": "https://github.com/flutter/flutter-intellij/pull/4915#discussion_r497837750", "createdAt": "2020-09-30T22:32:32Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/preview/DartElementPresentationUtil.java", "diffHunk": "@@ -60,7 +62,7 @@ public static Icon getIcon(@NotNull Element element) {\n         if (element.isTopLevelOrStatic()) return STATIC_FIELD_ICON;\n         return Field;\n       case ElementKind.FUNCTION:\n-        return element.isTopLevelOrStatic() ? TOP_LEVEL_FUNCTION_ICON : Function;\n+        return element.isTopLevelOrStatic() ? TOP_LEVEL_FUNCTION_ICON : Lambda;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY5ODA4Mg=="}, "originalCommit": {"oid": "bf1f241722a387db555ffb4d0d48e6355184e3e2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyMjc2OQ==", "bodyText": "Note that this PR is just updating our code to the latest from the Dart plugin - if we think we should change something here we should adjust it upstream.", "url": "https://github.com/flutter/flutter-intellij/pull/4915#discussion_r499022769", "createdAt": "2020-10-02T19:56:43Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/preview/DartElementPresentationUtil.java", "diffHunk": "@@ -60,7 +62,7 @@ public static Icon getIcon(@NotNull Element element) {\n         if (element.isTopLevelOrStatic()) return STATIC_FIELD_ICON;\n         return Field;\n       case ElementKind.FUNCTION:\n-        return element.isTopLevelOrStatic() ? TOP_LEVEL_FUNCTION_ICON : Function;\n+        return element.isTopLevelOrStatic() ? TOP_LEVEL_FUNCTION_ICON : Lambda;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY5ODA4Mg=="}, "originalCommit": {"oid": "bf1f241722a387db555ffb4d0d48e6355184e3e2"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 452, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}