{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NzE2MTMy", "number": 4749, "title": "Show run console and skip breakpoints during test run", "bodyText": "I had previously changed test runs to start paused and to use the FlutterTestRunner instead of the default runner so that we could resume once the IDE was listening for vm service messages. However, the FlutterTestRunner was set up for debugging and this caused test runs to show the debugging console and recognize breakpoints. This change skips the debugging setup for run mode tests.\n\nTo check that process termination works correctly (so we don't keep waiting for the observatory URI if the user has stopped the test run), I ran with a debugging statement in the waiting loop and verified that the execution gives up if the run is stopped before the tests run:\n      while (url == null) {\n        if (launcher.isTerminated()) return;\n        System.out.println(\"Waiting\");\n        TimeoutUtil.sleep(1000);\n        url = connector.getWebSocketUrl();\n      }", "createdAt": "2020-08-07T16:55:51Z", "url": "https://github.com/flutter/flutter-intellij/pull/4749", "merged": true, "mergeCommit": {"oid": "dd70f2d869aa35fa9fcf9360583504188e753448"}, "closed": true, "closedAt": "2020-08-10T17:11:46Z", "author": {"login": "helin24"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8nVEfgH2gAyNDY0NzE2MTMyOjJiMjVkYWZlNzg4NWJkMzBmYzRjYjU4OWRiM2RkZGYxOGYyNTIyM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9lZnqAFqTQ2NDQxODI4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2b25dafe7885bd30fc4cb589db3dddf18f25223c", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/2b25dafe7885bd30fc4cb589db3dddf18f25223c", "committedDate": "2020-08-07T16:50:51Z", "message": "Add run test path"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDYzODkx", "url": "https://github.com/flutter/flutter-intellij/pull/4749#pullrequestreview-463463891", "createdAt": "2020-08-07T16:57:45Z", "commit": {"oid": "2b25dafe7885bd30fc4cb589db3dddf18f25223c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjo1Nzo0NVrOG9hG-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjo1Nzo0NVrOG9hG-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1ODc3OQ==", "bodyText": "In DartVmServiceDebugProcess::scheduleConnect there's a check for whether the debug session has ended before the connection starts, but I'm not sure what the equivalent is to check for here.", "url": "https://github.com/flutter/flutter-intellij/pull/4749#discussion_r467158779", "createdAt": "2020-08-07T16:57:45Z", "author": {"login": "helin24"}, "path": "src/io/flutter/run/test/FlutterTestRunner.java", "diffHunk": "@@ -62,9 +71,64 @@ public boolean canRun(@NotNull String executorId, @NotNull RunProfile profile) {\n   @Override\n   protected RunContentDescriptor doExecute(@NotNull RunProfileState state, @NotNull ExecutionEnvironment env)\n     throws ExecutionException {\n-    return runInDebugger((TestLaunchState)state, env);\n+    if (env.getExecutor().getId().equals(ToolWindowId.RUN)) {\n+      return run((TestLaunchState)state, env);\n+    } else {\n+      return runInDebugger((TestLaunchState)state, env);\n+    }\n   }\n \n+  protected RunContentDescriptor run(@NotNull TestLaunchState launcher, @NotNull ExecutionEnvironment env)\n+    throws ExecutionException {\n+    final ExecutionResult executionResult = launcher.execute(env.getExecutor(), this);\n+    final ObservatoryConnector connector = new Connector(executionResult.getProcessHandler());\n+\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      // Poll, waiting for \"flutter run\" to give us a websocket.\n+      // This is adapted from DartVmServiceDebugProcess::scheduleConnect\n+      String url = connector.getWebSocketUrl();\n+\n+      while (url == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b25dafe7885bd30fc4cb589db3dddf18f25223c"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNTA1NzM4", "url": "https://github.com/flutter/flutter-intellij/pull/4749#pullrequestreview-463505738", "createdAt": "2020-08-07T18:06:05Z", "commit": {"oid": "2b25dafe7885bd30fc4cb589db3dddf18f25223c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODowNjowNVrOG9jJ8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODowODoxOFrOG9jOQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5MjMwNQ==", "bodyText": "Is there a process we can query here, to see if it's still alive? I image there's something in the run state that we can check.", "url": "https://github.com/flutter/flutter-intellij/pull/4749#discussion_r467192305", "createdAt": "2020-08-07T18:06:05Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/run/test/FlutterTestRunner.java", "diffHunk": "@@ -62,9 +71,64 @@ public boolean canRun(@NotNull String executorId, @NotNull RunProfile profile) {\n   @Override\n   protected RunContentDescriptor doExecute(@NotNull RunProfileState state, @NotNull ExecutionEnvironment env)\n     throws ExecutionException {\n-    return runInDebugger((TestLaunchState)state, env);\n+    if (env.getExecutor().getId().equals(ToolWindowId.RUN)) {\n+      return run((TestLaunchState)state, env);\n+    } else {\n+      return runInDebugger((TestLaunchState)state, env);\n+    }\n   }\n \n+  protected RunContentDescriptor run(@NotNull TestLaunchState launcher, @NotNull ExecutionEnvironment env)\n+    throws ExecutionException {\n+    final ExecutionResult executionResult = launcher.execute(env.getExecutor(), this);\n+    final ObservatoryConnector connector = new Connector(executionResult.getProcessHandler());\n+\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      // Poll, waiting for \"flutter run\" to give us a websocket.\n+      // This is adapted from DartVmServiceDebugProcess::scheduleConnect\n+      String url = connector.getWebSocketUrl();\n+\n+      while (url == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1ODc3OQ=="}, "originalCommit": {"oid": "2b25dafe7885bd30fc4cb589db3dddf18f25223c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5MzE0Mg==", "bodyText": "Can this declaration move inside the try block?", "url": "https://github.com/flutter/flutter-intellij/pull/4749#discussion_r467193142", "createdAt": "2020-08-07T18:07:48Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/run/test/FlutterTestRunner.java", "diffHunk": "@@ -62,9 +71,64 @@ public boolean canRun(@NotNull String executorId, @NotNull RunProfile profile) {\n   @Override\n   protected RunContentDescriptor doExecute(@NotNull RunProfileState state, @NotNull ExecutionEnvironment env)\n     throws ExecutionException {\n-    return runInDebugger((TestLaunchState)state, env);\n+    if (env.getExecutor().getId().equals(ToolWindowId.RUN)) {\n+      return run((TestLaunchState)state, env);\n+    } else {\n+      return runInDebugger((TestLaunchState)state, env);\n+    }\n   }\n \n+  protected RunContentDescriptor run(@NotNull TestLaunchState launcher, @NotNull ExecutionEnvironment env)\n+    throws ExecutionException {\n+    final ExecutionResult executionResult = launcher.execute(env.getExecutor(), this);\n+    final ObservatoryConnector connector = new Connector(executionResult.getProcessHandler());\n+\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      // Poll, waiting for \"flutter run\" to give us a websocket.\n+      // This is adapted from DartVmServiceDebugProcess::scheduleConnect\n+      String url = connector.getWebSocketUrl();\n+\n+      while (url == null) {\n+        TimeoutUtil.sleep(100);\n+        url = connector.getWebSocketUrl();\n+      }\n+\n+      final VmService vmService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b25dafe7885bd30fc4cb589db3dddf18f25223c"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5MzQwOQ==", "bodyText": "Perhaps add a comment indicating that we're looking to resume any paused-at-start isolates here.", "url": "https://github.com/flutter/flutter-intellij/pull/4749#discussion_r467193409", "createdAt": "2020-08-07T18:08:18Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/run/test/FlutterTestRunner.java", "diffHunk": "@@ -62,9 +71,64 @@ public boolean canRun(@NotNull String executorId, @NotNull RunProfile profile) {\n   @Override\n   protected RunContentDescriptor doExecute(@NotNull RunProfileState state, @NotNull ExecutionEnvironment env)\n     throws ExecutionException {\n-    return runInDebugger((TestLaunchState)state, env);\n+    if (env.getExecutor().getId().equals(ToolWindowId.RUN)) {\n+      return run((TestLaunchState)state, env);\n+    } else {\n+      return runInDebugger((TestLaunchState)state, env);\n+    }\n   }\n \n+  protected RunContentDescriptor run(@NotNull TestLaunchState launcher, @NotNull ExecutionEnvironment env)\n+    throws ExecutionException {\n+    final ExecutionResult executionResult = launcher.execute(env.getExecutor(), this);\n+    final ObservatoryConnector connector = new Connector(executionResult.getProcessHandler());\n+\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      // Poll, waiting for \"flutter run\" to give us a websocket.\n+      // This is adapted from DartVmServiceDebugProcess::scheduleConnect\n+      String url = connector.getWebSocketUrl();\n+\n+      while (url == null) {\n+        TimeoutUtil.sleep(100);\n+        url = connector.getWebSocketUrl();\n+      }\n+\n+      final VmService vmService;\n+      try {\n+        vmService = VmService.connect(url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b25dafe7885bd30fc4cb589db3dddf18f25223c"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66f9950c585f959031aba7ed01984f171f3936cb", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/66f9950c585f959031aba7ed01984f171f3936cb", "committedDate": "2020-08-07T19:04:03Z", "message": "Move vmservice declaration and add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c222ba96a143468c12e281129fe5397b245cacb1", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/c222ba96a143468c12e281129fe5397b245cacb1", "committedDate": "2020-08-07T21:06:57Z", "message": "Add check for whether process has terminated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11a91f514c121c8a619bd4f5caa9f04f3f5f2da3", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/11a91f514c121c8a619bd4f5caa9f04f3f5f2da3", "committedDate": "2020-08-10T16:23:51Z", "message": "Edit comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0Mzg5MDY4", "url": "https://github.com/flutter/flutter-intellij/pull/4749#pullrequestreview-464389068", "createdAt": "2020-08-10T16:29:52Z", "commit": {"oid": "11a91f514c121c8a619bd4f5caa9f04f3f5f2da3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDE4Mjg3", "url": "https://github.com/flutter/flutter-intellij/pull/4749#pullrequestreview-464418287", "createdAt": "2020-08-10T17:09:56Z", "commit": {"oid": "11a91f514c121c8a619bd4f5caa9f04f3f5f2da3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1611, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}