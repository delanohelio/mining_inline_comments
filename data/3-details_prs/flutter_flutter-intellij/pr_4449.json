{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1OTI3NDQx", "number": 4449, "title": "data drive survey", "bodyText": "Still a little testing to do but ready for preliminary feedback.\n/cc @devoncarew @DanTup\n/fyi @jayoung-lee\nFixes: #4398.", "createdAt": "2020-03-30T21:58:50Z", "url": "https://github.com/flutter/flutter-intellij/pull/4449", "merged": true, "mergeCommit": {"oid": "2a688715a84694b5e2b6b1576d0968d12524f2c3"}, "closed": true, "closedAt": "2020-03-31T22:22:57Z", "author": {"login": "pq"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS1w3sAH2gAyMzk1OTI3NDQxOmRkMTY5OGExNzU1OGU0NTkzNTJjNGRjNGI0MTU1NzliZDZjMjllMWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVUr5AAFqTM4OTIwOTQwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dd1698a17558e459352c4dc4b415579bd6c29e1a", "author": {"user": {"login": "pq", "name": "Phil Quitslund"}}, "url": "https://github.com/flutter/flutter-intellij/commit/dd1698a17558e459352c4dc4b415579bd6c29e1a", "committedDate": "2020-03-30T21:55:04Z", "message": "data drive survey"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e87ebf9307e3ba0103d832e99e3c511baf55759", "author": {"user": {"login": "pq", "name": "Phil Quitslund"}}, "url": "https://github.com/flutter/flutter-intellij/commit/3e87ebf9307e3ba0103d832e99e3c511baf55759", "committedDate": "2020-03-30T22:23:33Z", "message": "add URL reading"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MzA5NTM3", "url": "https://github.com/flutter/flutter-intellij/pull/4449#pullrequestreview-384309537", "createdAt": "2020-03-30T23:46:27Z", "commit": {"oid": "3e87ebf9307e3ba0103d832e99e3c511baf55759"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMzo0NjoyN1rOF-ARSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMzo0NjoyN1rOF-ARSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MDQ1Nw==", "bodyText": "I assume that the start date is inclusive, and the end date is exclusive? Or are they both inclusive?\nThis should likely read something like now.isEqualToOrAfter(startDate).", "url": "https://github.com/flutter/flutter-intellij/pull/4449#discussion_r400560457", "createdAt": "2020-03-30T23:46:27Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/survey/FlutterSurvey.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 The Chromium Authors. All rights reserved.\n+ * Use of this source code is governed by a BSD-style license that can be\n+ * found in the LICENSE file.\n+ */\n+package io.flutter.survey;\n+\n+import com.google.gson.JsonObject;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.time.LocalDate;\n+import java.time.format.DateTimeFormatter;\n+\n+public class FlutterSurvey {\n+  final String uniqueId;\n+  final LocalDate startDate;\n+  final LocalDate endDate;\n+\n+  final String title;\n+  final String urlPrefix;\n+\n+  FlutterSurvey(String uniqueId, String startDate, String endDate, String title, String urlPrefix) {\n+    this.uniqueId = uniqueId;\n+    this.startDate = parseDate(startDate);\n+    this.endDate = parseDate(endDate);\n+    this.title = title;\n+    this.urlPrefix = urlPrefix;\n+  }\n+\n+  private static LocalDate parseDate(String date) {\n+    return LocalDate.from(DateTimeFormatter.ISO_DATE_TIME.parse(date));\n+  }\n+\n+  public static FlutterSurvey fromJson(@NotNull JsonObject json) {\n+    return new FlutterSurvey(json.getAsJsonPrimitive(\"uniqueId\").getAsString(),\n+                             json.getAsJsonPrimitive(\"startDate\").getAsString(),\n+                             json.getAsJsonPrimitive(\"endDate\").getAsString(),\n+                             json.getAsJsonPrimitive(\"title\").getAsString(),\n+                             json.getAsJsonPrimitive(\"url\").getAsString()\n+    );\n+  }\n+\n+  boolean isSurveyOpen() {\n+    final LocalDate now = LocalDate.now();\n+    return now.isAfter(startDate) && now.isBefore(endDate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e87ebf9307e3ba0103d832e99e3c511baf55759"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f572edbe0184bfcf524340c11d9ecf54a92edc9", "author": {"user": {"login": "pq", "name": "Phil Quitslund"}}, "url": "https://github.com/flutter/flutter-intellij/commit/4f572edbe0184bfcf524340c11d9ecf54a92edc9", "committedDate": "2020-03-31T14:13:10Z", "message": "equal or after"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0Nzk1NzIx", "url": "https://github.com/flutter/flutter-intellij/pull/4449#pullrequestreview-384795721", "createdAt": "2020-03-31T14:33:54Z", "commit": {"oid": "4f572edbe0184bfcf524340c11d9ecf54a92edc9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MjA5NDA1", "url": "https://github.com/flutter/flutter-intellij/pull/4449#pullrequestreview-389209405", "createdAt": "2020-04-07T15:04:31Z", "commit": {"oid": "4f572edbe0184bfcf524340c11d9ecf54a92edc9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTowNDozMVrOGCIDeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTowNDozMVrOGCIDeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg4MjI5Ng==", "bodyText": "@pq - it looks like the following code happens synchronously on whatever thread we were called on (potentially the EDT)?\nYou may change this to working on a background thread (and if necessary, switching back the EDT at the very end).\nWe use a few different ways to execute in background threads - one is ApplicationManager.getApplication().executeOnPooledThread() (not sure if other's may be more appropriate).", "url": "https://github.com/flutter/flutter-intellij/pull/4449#discussion_r404882296", "createdAt": "2020-04-07T15:04:31Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/survey/FlutterSurveyNotifications.java", "diffHunk": "@@ -94,26 +72,23 @@ private void check(@NotNull VirtualFile file) {\n     });\n   }\n \n-  @NotNull final Project myProject;\n-\n-  FlutterSurveyNotifications(@NotNull Project project) {\n-    this.myProject = project;\n-  }\n-\n   private void checkForDisplaySurvey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f572edbe0184bfcf524340c11d9ecf54a92edc9"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1678, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}