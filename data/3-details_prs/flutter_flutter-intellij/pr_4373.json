{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNzYyODc3", "number": 4373, "title": "Fix crash caused by getting flutter view id with .join()", "bodyText": "I was unable to reproduce the original issue, but this CL is intended to fix #4369\n@devoncarew", "createdAt": "2020-02-11T16:41:47Z", "url": "https://github.com/flutter/flutter-intellij/pull/4373", "merged": true, "mergeCommit": {"oid": "8b642d6dba6641da08ea082553382127c9be66c4"}, "closed": true, "closedAt": "2020-02-13T18:30:20Z", "author": {"login": "kenzieschmoll"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDUf8jgH2gAyMzczNzYyODc3OmVkYjc2MTdjY2NmNjk5NjkxZmI5MjQzZmUwOWYzOWVhYjA5ZTQ4MWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcD_GgjgH2gAyMzczNzYyODc3OjI1YWM0NGVjNDRhMjljZDU5NjMzMGQ2MzJlYTg1ZTE3ZGJmOWFkNjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "edb7617cccf699691fb9243fe09f39eab09e481c", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/edb7617cccf699691fb9243fe09f39eab09e481c", "committedDate": "2020-02-11T16:40:51Z", "message": "Fix crash caused by getting flutter view id with .join()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NTgwMzUw", "url": "https://github.com/flutter/flutter-intellij/pull/4373#pullrequestreview-357580350", "createdAt": "2020-02-12T16:06:42Z", "commit": {"oid": "edb7617cccf699691fb9243fe09f39eab09e481c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjowNjo0MlrOFo0rbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjowNjo0MlrOFo0rbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1MDQ0NA==", "bodyText": "It looks like get() may also block the thread until the value is ready?\nI believe the underlying issue here is that we're using clocking calls and this code path can be called from the event thread. I suspect what we need to do is to move to a non-blocking call (which may be something like .whenComplete()?), and then use that to determine the display refresh rate, and return the value as a future.\n(Java futures definitely have a much larger API surface area than the Dart variant)", "url": "https://github.com/flutter/flutter-intellij/pull/4373#discussion_r378350444", "createdAt": "2020-02-12T16:06:42Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/vmService/DisplayRefreshRateManager.java", "diffHunk": "@@ -80,18 +80,18 @@ public Double getCurrentDisplayRefreshRateRaw() {\n   private CompletableFuture<Double> getDisplayRefreshRate() {\n     final double unknownRefreshRate = 0.0;\n \n-    final String flutterViewId = vmServiceManager.getFlutterViewId().exceptionally(exception -> {\n-      // We often see \"java.lang.RuntimeException: Method not found\" from here; perhaps a race condition?\n-      LOG.warn(exception.getMessage());\n-      return null;\n-    }).join();\n-\n-    if (flutterViewId == null) {\n+    try {\n+      final String flutterViewId = vmServiceManager.getFlutterViewId().exceptionally(exception -> {\n+        // We often see \"java.lang.RuntimeException: Method not found\" from here; perhaps a race condition?\n+        LOG.warn(exception.getMessage());\n+        return null;\n+      }).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edb7617cccf699691fb9243fe09f39eab09e481c"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af70d9122749885a7441fd5977306ee6502bc1b5", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/af70d9122749885a7441fd5977306ee6502bc1b5", "committedDate": "2020-02-12T16:30:15Z", "message": "Use whenComplete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bd71e5b4deb15ec0e81f8d58742a4236b625af7", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/8bd71e5b4deb15ec0e81f8d58742a4236b625af7", "committedDate": "2020-02-12T16:31:33Z", "message": "remove unused var"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0a5ead136fcc38509fe62561d849ee113c18a3b", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/e0a5ead136fcc38509fe62561d849ee113c18a3b", "committedDate": "2020-02-12T17:08:17Z", "message": "Merge branch 'master' of github.com:flutter/flutter-intellij into flutterViewId"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4Mzk5NDg1", "url": "https://github.com/flutter/flutter-intellij/pull/4373#pullrequestreview-358399485", "createdAt": "2020-02-13T17:11:32Z", "commit": {"oid": "8bd71e5b4deb15ec0e81f8d58742a4236b625af7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzoxMTozMlrOFpcUhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzoxMTozMlrOFpcUhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5OTk0Mg==", "bodyText": "If t is not null here, should we instead complete displayRefreshRate with the defaultRefreshRate?", "url": "https://github.com/flutter/flutter-intellij/pull/4373#discussion_r378999942", "createdAt": "2020-02-13T17:11:32Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/vmService/DisplayRefreshRateManager.java", "diffHunk": "@@ -78,20 +78,22 @@ public Double getCurrentDisplayRefreshRateRaw() {\n   }\n \n   private CompletableFuture<Double> getDisplayRefreshRate() {\n-    final double unknownRefreshRate = 0.0;\n-\n-    final String flutterViewId = vmServiceManager.getFlutterViewId().exceptionally(exception -> {\n+    final CompletableFuture<Double> displayRefreshRate = new CompletableFuture<Double>();\n+    vmServiceManager.getFlutterViewId().exceptionally(exception -> {\n       // We often see \"java.lang.RuntimeException: Method not found\" from here; perhaps a race condition?\n       LOG.warn(exception.getMessage());\n       return null;\n-    }).join();\n-\n-    if (flutterViewId == null) {\n-      // Fail gracefully by returning the default.\n-      return CompletableFuture.completedFuture(defaultRefreshRate);\n-    }\n-\n-    return invokeGetDisplayRefreshRate(flutterViewId);\n+    }).whenComplete((String id, Throwable throwable) -> {\n+      if (id == null) {\n+        // Fail gracefully by returning the default.\n+        displayRefreshRate.complete(defaultRefreshRate);\n+      } else {\n+        invokeGetDisplayRefreshRate(id).whenComplete((Double refreshRate, Throwable t) -> {\n+          displayRefreshRate.complete(refreshRate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd71e5b4deb15ec0e81f8d58742a4236b625af7"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26354e4bacfee039842e4175a8820ae175e4e447", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/26354e4bacfee039842e4175a8820ae175e4e447", "committedDate": "2020-02-13T17:22:08Z", "message": "Handle exception from invokeGetDisplayRefreshRate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19ba420f6ee7302fe3a38e29fc76e2110905d8e8", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/19ba420f6ee7302fe3a38e29fc76e2110905d8e8", "committedDate": "2020-02-13T17:31:19Z", "message": "Removed both uses of exceptionally in favor of whenComplete throwable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDQzMDEy", "url": "https://github.com/flutter/flutter-intellij/pull/4373#pullrequestreview-358443012", "createdAt": "2020-02-13T18:16:08Z", "commit": {"oid": "19ba420f6ee7302fe3a38e29fc76e2110905d8e8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoxNjowOFrOFpeY_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoxNjowOFrOFpeY_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzMzg1Mw==", "bodyText": "This needs an else statement, otherwise when t != null we'll call displayRefreshRate.complete() twice.", "url": "https://github.com/flutter/flutter-intellij/pull/4373#discussion_r379033853", "createdAt": "2020-02-13T18:16:08Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/vmService/DisplayRefreshRateManager.java", "diffHunk": "@@ -78,20 +78,25 @@ public Double getCurrentDisplayRefreshRateRaw() {\n   }\n \n   private CompletableFuture<Double> getDisplayRefreshRate() {\n-    final double unknownRefreshRate = 0.0;\n-\n-    final String flutterViewId = vmServiceManager.getFlutterViewId().exceptionally(exception -> {\n-      // We often see \"java.lang.RuntimeException: Method not found\" from here; perhaps a race condition?\n-      LOG.warn(exception.getMessage());\n-      return null;\n-    }).join();\n-\n-    if (flutterViewId == null) {\n-      // Fail gracefully by returning the default.\n-      return CompletableFuture.completedFuture(defaultRefreshRate);\n-    }\n-\n-    return invokeGetDisplayRefreshRate(flutterViewId);\n+    final CompletableFuture<Double> displayRefreshRate = new CompletableFuture<Double>();\n+    vmServiceManager.getFlutterViewId().whenComplete((String id, Throwable throwable) -> {\n+      if (throwable != null) {\n+        // We often see \"java.lang.RuntimeException: Method not found\" from here; perhaps a race condition?\n+        LOG.warn(throwable.getMessage());\n+        // Fail gracefully by returning the default.\n+        displayRefreshRate.complete(defaultRefreshRate);\n+      } else {\n+        invokeGetDisplayRefreshRate(id).whenComplete((Double refreshRate, Throwable t) -> {\n+          if (t != null) {\n+            LOG.warn(t.getMessage());\n+            // Fail gracefully by returning the default.\n+            displayRefreshRate.complete(defaultRefreshRate);\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19ba420f6ee7302fe3a38e29fc76e2110905d8e8"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25ac44ec44a29cd596330d632ea85e17dbf9ad62", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/25ac44ec44a29cd596330d632ea85e17dbf9ad62", "committedDate": "2020-02-13T18:18:59Z", "message": "fix if / else bug"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1654, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}