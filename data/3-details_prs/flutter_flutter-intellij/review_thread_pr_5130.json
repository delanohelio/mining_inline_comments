{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMDM3MzI4", "number": 5130, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0MzozOFrOFG2hFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0NjoyMFrOFG2lPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNzI4OTgzOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/run/daemon/DevToolsService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0MzozOFrOIIDngw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMDo0MTo0MFrOIIH-_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMxODc4Nw==", "bodyText": "Do we need to dispose() the devToolsInstance here?", "url": "https://github.com/flutter/flutter-intellij/pull/5130#discussion_r545318787", "createdAt": "2020-12-17T18:43:38Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -92,23 +100,21 @@ private void setUpWithDaemon() {\n           return;\n         }\n         if (address == null) {\n-          Exception error = new Exception(\"DevTools address was null\");\n-          LOG.error(error);\n-          devToolsInstance.completeExceptionally(error);\n+          logExceptionAndComplete(\"DevTools address was null\");\n         }\n         else {\n           devToolsInstance.complete(new DevToolsInstance(address.host, address.port));\n         }\n       });\n     }\n     catch (ExecutionException e) {\n-      e.printStackTrace();\n+      logExceptionAndComplete(e);\n     }\n \n     ProjectManager.getInstance().addProjectManagerListener(project, new ProjectManagerListener() {\n       @Override\n       public void projectClosing(@NotNull Project project) {\n-        devToolsInstance = new CompletableFuture<>();\n+        devToolsInstance = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96e40f86948c54b324f56f75f9ec259b2473d948"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM4NTgxMQ==", "bodyText": "Is dispose mainly for if an object has dependencies? Since the instance just holds a hostname and port, I think it may not be needed.", "url": "https://github.com/flutter/flutter-intellij/pull/5130#discussion_r545385811", "createdAt": "2020-12-17T20:33:05Z", "author": {"login": "helin24"}, "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -92,23 +100,21 @@ private void setUpWithDaemon() {\n           return;\n         }\n         if (address == null) {\n-          Exception error = new Exception(\"DevTools address was null\");\n-          LOG.error(error);\n-          devToolsInstance.completeExceptionally(error);\n+          logExceptionAndComplete(\"DevTools address was null\");\n         }\n         else {\n           devToolsInstance.complete(new DevToolsInstance(address.host, address.port));\n         }\n       });\n     }\n     catch (ExecutionException e) {\n-      e.printStackTrace();\n+      logExceptionAndComplete(e);\n     }\n \n     ProjectManager.getInstance().addProjectManagerListener(project, new ProjectManagerListener() {\n       @Override\n       public void projectClosing(@NotNull Project project) {\n-        devToolsInstance = new CompletableFuture<>();\n+        devToolsInstance = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMxODc4Nw=="}, "originalCommit": {"oid": "96e40f86948c54b324f56f75f9ec259b2473d948"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM5MDMzMg==", "bodyText": "Gotcha (yeah, it's just needed for heavier weight things).", "url": "https://github.com/flutter/flutter-intellij/pull/5130#discussion_r545390332", "createdAt": "2020-12-17T20:41:40Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -92,23 +100,21 @@ private void setUpWithDaemon() {\n           return;\n         }\n         if (address == null) {\n-          Exception error = new Exception(\"DevTools address was null\");\n-          LOG.error(error);\n-          devToolsInstance.completeExceptionally(error);\n+          logExceptionAndComplete(\"DevTools address was null\");\n         }\n         else {\n           devToolsInstance.complete(new DevToolsInstance(address.host, address.port));\n         }\n       });\n     }\n     catch (ExecutionException e) {\n-      e.printStackTrace();\n+      logExceptionAndComplete(e);\n     }\n \n     ProjectManager.getInstance().addProjectManagerListener(project, new ProjectManagerListener() {\n       @Override\n       public void projectClosing(@NotNull Project project) {\n-        devToolsInstance = new CompletableFuture<>();\n+        devToolsInstance = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMxODc4Nw=="}, "originalCommit": {"oid": "96e40f86948c54b324f56f75f9ec259b2473d948"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNzI5OTAyOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/run/daemon/DevToolsService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0NTo1OVrOIIDtCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMDozMzowN1rOIIHtYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMyMDIwMg==", "bodyText": "Consider passing the devToolsInstance as a parameter to startServer() so that we always complete the right future (given that this field is reused over time for new instances).", "url": "https://github.com/flutter/flutter-intellij/pull/5130#discussion_r545320202", "createdAt": "2020-12-17T18:45:59Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -58,7 +58,19 @@ public static DevToolsService getInstance(@NotNull final Project project) {\n \n   private DevToolsService(@NotNull final Project project) {\n     this.project = project;\n+  }\n+\n+  public CompletableFuture<DevToolsInstance> getDevToolsInstance() {\n+    // Create instance if it doesn't exist yet, or if the previous attempt failed.\n+    if (devToolsInstance == null || devToolsInstance.isCompletedExceptionally()) {\n+      devToolsInstance = new CompletableFuture<>();\n+      startServer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96e40f86948c54b324f56f75f9ec259b2473d948"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM4NTgyNg==", "bodyText": "I'm not sure if this fully addresses the problem, but I put the future into an atomic reference to ensure that there can only be one at a time (one future, and therefore one process / process handler). It could be problematic if more than one server gets started and the reference to shut it down on close gets lost.", "url": "https://github.com/flutter/flutter-intellij/pull/5130#discussion_r545385826", "createdAt": "2020-12-17T20:33:07Z", "author": {"login": "helin24"}, "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -58,7 +58,19 @@ public static DevToolsService getInstance(@NotNull final Project project) {\n \n   private DevToolsService(@NotNull final Project project) {\n     this.project = project;\n+  }\n+\n+  public CompletableFuture<DevToolsInstance> getDevToolsInstance() {\n+    // Create instance if it doesn't exist yet, or if the previous attempt failed.\n+    if (devToolsInstance == null || devToolsInstance.isCompletedExceptionally()) {\n+      devToolsInstance = new CompletableFuture<>();\n+      startServer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMyMDIwMg=="}, "originalCommit": {"oid": "96e40f86948c54b324f56f75f9ec259b2473d948"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNzMwMDQ3OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/run/daemon/DevToolsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0NjoyMFrOIIDt7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0NjoyMFrOIIDt7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMyMDQzMA==", "bodyText": "Perhaps rename to devToolsInstanceFuture for clarity?", "url": "https://github.com/flutter/flutter-intellij/pull/5130#discussion_r545320430", "createdAt": "2020-12-17T18:46:20Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -49,7 +49,7 @@\n   @NotNull private final Project project;\n   private DaemonApi daemonApi;\n   private ProcessHandler process;\n-  private CompletableFuture<DevToolsInstance> devToolsInstance = new CompletableFuture<>();\n+  private CompletableFuture<DevToolsInstance> devToolsInstance;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96e40f86948c54b324f56f75f9ec259b2473d948"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 419, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}