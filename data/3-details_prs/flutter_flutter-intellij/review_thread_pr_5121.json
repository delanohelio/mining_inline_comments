{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNzQ1ODg5", "number": 5121, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzoyNjo1NVrOFGT1zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo1Mzo0M1rOFGXq9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTYwODQ2OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/run/daemon/DevToolsService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzoyNjo1NVrOIHQu9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxODo0MDozOFrOIHTwQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ4NTEwOQ==", "bodyText": "expose the Future directly instead of providing a method that might lock the UI thread.", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544485109", "createdAt": "2020-12-16T17:26:55Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -71,6 +72,17 @@ private DevToolsService(@NotNull final Project project) {\n     });\n   }\n \n+  public DevToolsInstance getDevToolsInstance() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa7692ad540bd012ccff042d64968f3a550b2e6e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUzNDU5Mg==", "bodyText": "I originally wanted this function to manage restarting if the daemon command fails, but that can be done elsewhere too", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544534592", "createdAt": "2020-12-16T18:40:38Z", "author": {"login": "helin24"}, "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -71,6 +72,17 @@ private DevToolsService(@NotNull final Project project) {\n     });\n   }\n \n+  public DevToolsInstance getDevToolsInstance() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ4NTEwOQ=="}, "originalCommit": {"oid": "aa7692ad540bd012ccff042d64968f3a550b2e6e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTYxODQ5OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/view/FlutterView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzoyOTowOVrOIHQ1RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzoyOTowOVrOIHQ1RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ4NjcyNQ==", "bodyText": "simpler pattern:\nrather than starting a pooled thread just call\nAsyncUtils.whenCompleteUiThread(DevToolsService.getInstance(myProject).getDevToolsInstance(), ...)\nand remove the invokeLater.", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544486725", "createdAt": "2020-12-16T17:29:09Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -429,35 +438,24 @@ protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspect\n \n   private void presentDevTools(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded) {\n     assert(SwingUtilities.isEventDispatchThread());\n-    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n \n-    if (devToolsManager.hasInstalledDevTools()) {\n-      addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded);\n-    }\n-    else {\n-      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n-      awaitDevToolsInstall(app, inspectorService, toolWindow, isEmbedded, devToolsManager);\n-    }\n+    presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+    openInspectorWithDevTools(app, inspectorService, toolWindow, isEmbedded);\n   }\n \n-  protected void awaitDevToolsInstall(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded, DevToolsManager devToolsManager) {\n+  protected void openInspectorWithDevTools(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded) {\n     ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      final DevToolsInstance instance = DevToolsService.getInstance(myProject).getDevToolsInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa7692ad540bd012ccff042d64968f3a550b2e6e"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjIzMjkxOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/run/daemon/DevToolsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo1Mjo0N1rOIHWhWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo1Mjo0N1rOIHWhWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3OTkyOA==", "bodyText": "nit: this is java. Keep private and provide getDevToolsInstance()", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544579928", "createdAt": "2020-12-16T19:52:47Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/run/daemon/DevToolsService.java", "diffHunk": "@@ -49,7 +49,7 @@\n   @NotNull private final Project project;\n   private DaemonApi daemonApi;\n   private ProcessHandler process;\n-  private CompletableFuture<DevToolsInstance> devToolsInstance = new CompletableFuture<>();\n+  public CompletableFuture<DevToolsInstance> devToolsInstance = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c554478f0ca264ab8df00da1f6b0ac84dc9edba"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjIzNjA0OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/view/FlutterView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo1Mzo0M1rOIHWjQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo1Mzo0M1rOIHWjQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU4MDQxOQ==", "bodyText": "make sure the project has not gone away while you were waiting for the devToolsServer to start.", "url": "https://github.com/flutter/flutter-intellij/pull/5121#discussion_r544580419", "createdAt": "2020-12-16T19:53:43Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -445,16 +445,20 @@ private void presentDevTools(FlutterApp app, InspectorService inspectorService,\n   }\n \n   protected void openInspectorWithDevTools(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded) {\n-    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      final DevToolsInstance instance = DevToolsService.getInstance(myProject).getDevToolsInstance();\n+    AsyncUtils.whenCompleteUiThread(DevToolsService.getInstance(myProject).devToolsInstance, (instance, error) -> {\n+      // TODO(helinx): Restart DevTools server if there's an error.\n+      if (error != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c554478f0ca264ab8df00da1f6b0ac84dc9edba"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 413, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}