{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDU5Mjkz", "number": 4559, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0MjoyMlrOD-paGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0ODoxOVrOD-pnjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDE2NzMxOnYy", "diffSide": "RIGHT", "path": "tool/plugin/lib/plugin.dart", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0MjoyMlrOGY4Brg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0NTo0NFrOGY6gNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNjk0Mg==", "bodyText": "nit: trailing comma after last param. There are several places in this file where this should also be applied. Sorry in advance for spamming with trailing comma comments :)", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428736942", "createdAt": "2020-05-21T15:42:22Z", "author": {"login": "kenzieschmoll"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzUyNw==", "bodyText": "Done", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777527", "createdAt": "2020-05-21T16:45:44Z", "author": {"login": "stevemessick"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNjk0Mg=="}, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDE2ODA0OnYy", "diffSide": "RIGHT", "path": "tool/plugin/lib/plugin.dart", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0MjozMVrOGY4CJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0NTo0NlrOGY6gUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzA2MA==", "bodyText": "trailing comma", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428737060", "createdAt": "2020-05-21T15:42:31Z", "author": {"login": "kenzieschmoll"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzU1Mg==", "bodyText": "Done", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777552", "createdAt": "2020-05-21T16:45:46Z", "author": {"login": "stevemessick"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzA2MA=="}, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDE2ODgwOnYy", "diffSide": "RIGHT", "path": "tool/plugin/lib/plugin.dart", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0MjozOFrOGY4CoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0NTo0OVrOGY6gaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzE4NA==", "bodyText": "trailing comma", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428737184", "createdAt": "2020-05-21T15:42:38Z", "author": {"login": "kenzieschmoll"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzU3Ng==", "bodyText": "Done", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777576", "createdAt": "2020-05-21T16:45:49Z", "author": {"login": "stevemessick"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzE4NA=="}, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDE3MzgxOnYy", "diffSide": "RIGHT", "path": "tool/plugin/lib/plugin.dart", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0MzozMVrOGY4F2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0NTo1M1rOGY6ggQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczODAxMA==", "bodyText": "trailing comma", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428738010", "createdAt": "2020-05-21T15:43:31Z", "author": {"login": "kenzieschmoll"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');\n+      if (result != 0) {\n+        log('jar failed: ${result.toString()}');\n+        return result;\n+      }\n+    }\n+\n+    // zip it up\n+    result = await zip('build/flutter-intellij', releasesFilePath(spec));\n+    if (result != 0) {\n+      log('zip failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.copyIjVersion && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File(releasesFilePath(spec)), Directory(ijVersionPath(spec)),\n+          filename: 'flutter-intellij.zip');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzYwMQ==", "bodyText": "Done", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777601", "createdAt": "2020-05-21T16:45:53Z", "author": {"login": "stevemessick"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');\n+      if (result != 0) {\n+        log('jar failed: ${result.toString()}');\n+        return result;\n+      }\n+    }\n+\n+    // zip it up\n+    result = await zip('build/flutter-intellij', releasesFilePath(spec));\n+    if (result != 0) {\n+      log('zip failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.copyIjVersion && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File(releasesFilePath(spec)), Directory(ijVersionPath(spec)),\n+          filename: 'flutter-intellij.zip');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczODAxMA=="}, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDE3NDY3OnYy", "diffSide": "RIGHT", "path": "tool/plugin/lib/plugin.dart", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0MzozOFrOGY4GSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0NTo1NlrOGY6gpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczODEyMw==", "bodyText": "trailing comma", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428738123", "createdAt": "2020-05-21T15:43:38Z", "author": {"login": "kenzieschmoll"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');\n+      if (result != 0) {\n+        log('jar failed: ${result.toString()}');\n+        return result;\n+      }\n+    }\n+\n+    // zip it up\n+    result = await zip('build/flutter-intellij', releasesFilePath(spec));\n+    if (result != 0) {\n+      log('zip failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.copyIjVersion && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File(releasesFilePath(spec)), Directory(ijVersionPath(spec)),\n+          filename: 'flutter-intellij.zip');\n+    }\n+    return result;\n+  }\n+}\n+\n+class GradleBuildCommand extends BuildCommand {\n+  GradleBuildCommand(BuildCommandRunner runner) : super(runner, 'make');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.buildPlugin(spec, pluginVersion);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    var file = File(releasesFilePath(spec));\n+    _copyFile(\n+        File('build/distributions/flutter-intellij-$version.zip'), file.parent,\n+        filename: p.basename(file.path));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzYzOQ==", "bodyText": "Done", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777639", "createdAt": "2020-05-21T16:45:56Z", "author": {"login": "stevemessick"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');\n+      if (result != 0) {\n+        log('jar failed: ${result.toString()}');\n+        return result;\n+      }\n+    }\n+\n+    // zip it up\n+    result = await zip('build/flutter-intellij', releasesFilePath(spec));\n+    if (result != 0) {\n+      log('zip failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.copyIjVersion && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File(releasesFilePath(spec)), Directory(ijVersionPath(spec)),\n+          filename: 'flutter-intellij.zip');\n+    }\n+    return result;\n+  }\n+}\n+\n+class GradleBuildCommand extends BuildCommand {\n+  GradleBuildCommand(BuildCommandRunner runner) : super(runner, 'make');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.buildPlugin(spec, pluginVersion);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    var file = File(releasesFilePath(spec));\n+    _copyFile(\n+        File('build/distributions/flutter-intellij-$version.zip'), file.parent,\n+        filename: p.basename(file.path));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczODEyMw=="}, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDE4MDkzOnYy", "diffSide": "RIGHT", "path": "tool/plugin/lib/plugin.dart", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0NDozNlrOGY4J6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0NTo1OVrOGY6gxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczOTA0OA==", "bodyText": "this can be final", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428739048", "createdAt": "2020-05-21T15:44:36Z", "author": {"login": "kenzieschmoll"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');\n+      if (result != 0) {\n+        log('jar failed: ${result.toString()}');\n+        return result;\n+      }\n+    }\n+\n+    // zip it up\n+    result = await zip('build/flutter-intellij', releasesFilePath(spec));\n+    if (result != 0) {\n+      log('zip failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.copyIjVersion && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File(releasesFilePath(spec)), Directory(ijVersionPath(spec)),\n+          filename: 'flutter-intellij.zip');\n+    }\n+    return result;\n+  }\n+}\n+\n+class GradleBuildCommand extends BuildCommand {\n+  GradleBuildCommand(BuildCommandRunner runner) : super(runner, 'make');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.buildPlugin(spec, pluginVersion);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    var file = File(releasesFilePath(spec));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzY3MQ==", "bodyText": "Done", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777671", "createdAt": "2020-05-21T16:45:59Z", "author": {"login": "stevemessick"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');\n+      if (result != 0) {\n+        log('jar failed: ${result.toString()}');\n+        return result;\n+      }\n+    }\n+\n+    // zip it up\n+    result = await zip('build/flutter-intellij', releasesFilePath(spec));\n+    if (result != 0) {\n+      log('zip failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.copyIjVersion && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File(releasesFilePath(spec)), Directory(ijVersionPath(spec)),\n+          filename: 'flutter-intellij.zip');\n+    }\n+    return result;\n+  }\n+}\n+\n+class GradleBuildCommand extends BuildCommand {\n+  GradleBuildCommand(BuildCommandRunner runner) : super(runner, 'make');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.buildPlugin(spec, pluginVersion);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    var file = File(releasesFilePath(spec));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczOTA0OA=="}, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDE5OTU1OnYy", "diffSide": "RIGHT", "path": "tool/plugin/lib/plugin.dart", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0Nzo1N1rOGY4Vng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0NjowMlrOGY6g-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc0MjA0Ng==", "bodyText": "not your fault, but can these both be final?", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428742046", "createdAt": "2020-05-21T15:47:57Z", "author": {"login": "kenzieschmoll"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -383,7 +464,7 @@ class BuildCommand extends ProductCommand {\n       log('spec.version: ${spec.version}');\n \n       var compileFn = () async {\n-        var r = await runner.javac2(spec);\n+        var r = await externalBuildCommand(spec);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzcyMg==", "bodyText": "Done", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777722", "createdAt": "2020-05-21T16:46:02Z", "author": {"login": "stevemessick"}, "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -383,7 +464,7 @@ class BuildCommand extends ProductCommand {\n       log('spec.version: ${spec.version}');\n \n       var compileFn = () async {\n-        var r = await runner.javac2(spec);\n+        var r = await externalBuildCommand(spec);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc0MjA0Ng=="}, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDIwMTczOnYy", "diffSide": "RIGHT", "path": "tool/plugin/lib/runner.dart", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTo0ODoxOVrOGY4XAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0NjowNVrOGY6hFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc0MjQwMA==", "bodyText": "make variables in this method final", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428742400", "createdAt": "2020-05-21T15:48:19Z", "author": {"login": "kenzieschmoll"}, "path": "tool/plugin/lib/runner.dart", "diffHunk": "@@ -54,4 +54,29 @@ compile\n       }\n     }\n   }\n+\n+  Future<int> buildPlugin(BuildSpec spec, String version) async {\n+    var contents = '''", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3Nzc0OA==", "bodyText": "Done", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777748", "createdAt": "2020-05-21T16:46:05Z", "author": {"login": "stevemessick"}, "path": "tool/plugin/lib/runner.dart", "diffHunk": "@@ -54,4 +54,29 @@ compile\n       }\n     }\n   }\n+\n+  Future<int> buildPlugin(BuildSpec spec, String version) async {\n+    var contents = '''", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc0MjQwMA=="}, "originalCommit": {"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 322, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}