{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzYxNzA3", "number": 4790, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzozMjoyM1rOEfHZew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzozMjoyM1rOEfHZew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDYyNTIzOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/FlutterUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzozMjoyM1rOHLLt-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjoyMTo0NVrOHL3G4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4ODM3OA==", "bodyText": "I like it!\nShould we also make sure that local builds behave like dev or provide an option to trigger dev/non-dev behavior?", "url": "https://github.com/flutter/flutter-intellij/pull/4790#discussion_r481488378", "createdAt": "2020-09-01T23:32:23Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/FlutterUtils.java", "diffHunk": "@@ -552,4 +555,10 @@ private static ModuleSourceOrderEntry findModuleSourceEntry(@NotNull Module modu\n     }\n     return null;\n   }\n+\n+  public static boolean isPluginVersionDev() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe379163c3281e3d2da6944a4dfaf68806172bb4"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MTAyMg==", "bodyText": "I could make this return true for SNAPSHOT versions as well. I'm not sure what an option would look like and whether we foresee adding more differentiated handling for dev vs. non-dev releases; I was thinking this current use case is very temporary and it's sufficient to test by changing plugin.xml to have a version name like SNAPSHOT-dev. Do you want to describe a potential option more?", "url": "https://github.com/flutter/flutter-intellij/pull/4790#discussion_r481491022", "createdAt": "2020-09-01T23:40:55Z", "author": {"login": "helin24"}, "path": "src/io/flutter/FlutterUtils.java", "diffHunk": "@@ -552,4 +555,10 @@ private static ModuleSourceOrderEntry findModuleSourceEntry(@NotNull Module modu\n     }\n     return null;\n   }\n+\n+  public static boolean isPluginVersionDev() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4ODM3OA=="}, "originalCommit": {"oid": "fe379163c3281e3d2da6944a4dfaf68806172bb4"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NzI5OQ==", "bodyText": "Making it return true for SNAPSHOT sounds good. As I'd like anyone building locally to also catch bugs before we enable features in STABLE.\nThe uses should be restricted to enabling certain experimental features by default instead of disabling them. Given that, maybe make this private and only in the FlutterSettings class to avoid misuse. It would be good to avoid uses of it that make it harder to test behavior in the release version by having dev/SNAPSHOT diverge.", "url": "https://github.com/flutter/flutter-intellij/pull/4790#discussion_r482167299", "createdAt": "2020-09-02T15:34:44Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/FlutterUtils.java", "diffHunk": "@@ -552,4 +555,10 @@ private static ModuleSourceOrderEntry findModuleSourceEntry(@NotNull Module modu\n     }\n     return null;\n   }\n+\n+  public static boolean isPluginVersionDev() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4ODM3OA=="}, "originalCommit": {"oid": "fe379163c3281e3d2da6944a4dfaf68806172bb4"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5OTI2NQ==", "bodyText": "Okay, that makes sense - updated here: #4794", "url": "https://github.com/flutter/flutter-intellij/pull/4790#discussion_r482199265", "createdAt": "2020-09-02T16:21:45Z", "author": {"login": "helin24"}, "path": "src/io/flutter/FlutterUtils.java", "diffHunk": "@@ -552,4 +555,10 @@ private static ModuleSourceOrderEntry findModuleSourceEntry(@NotNull Module modu\n     }\n     return null;\n   }\n+\n+  public static boolean isPluginVersionDev() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4ODM3OA=="}, "originalCommit": {"oid": "fe379163c3281e3d2da6944a4dfaf68806172bb4"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 528, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}