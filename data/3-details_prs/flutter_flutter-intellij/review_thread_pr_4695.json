{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MzcwNDQz", "number": 4695, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0NzowMlrOENUxiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0NzowMlrOENUxiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDA3MzA3OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/editor/ExpressionParsingUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0NzowMlrOGv8Yvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzoxMzozMlrOGxHKsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNTYzMA==", "bodyText": "We're assuming here that the numbers are in decimal; from spot checking fromARGB call sites, is that a reasonable assumption?", "url": "https://github.com/flutter/flutter-intellij/pull/4695#discussion_r452925630", "createdAt": "2020-07-10T15:47:02Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/editor/ExpressionParsingUtils.java", "diffHunk": "@@ -40,4 +40,58 @@ public static Color parseColor(String text, String colorText) {\n     //noinspection UseJBColor\n     return new Color((int)(value >> 16) & 0xFF, (int)(value >> 8) & 0xFF, (int)value & 0xFF, (int)(value >> 24) & 0xFF);\n   }\n+\n+  public static Color parseColorComponents(String callText, String prefix, boolean isARGB) {\n+    if (callText.startsWith(prefix) && callText.endsWith(\")\")) {\n+      final String colorString = callText.substring(prefix.length(), callText.length() - 1).trim();\n+      final String[] maybeNumbers = colorString.split(\",\");\n+      if (maybeNumbers.length < 4) {\n+        return null;\n+      }\n+      return isARGB ? parseARGBColorComponents(maybeNumbers) : parseRGBOColorComponents(maybeNumbers);\n+    }\n+    return null;\n+  }\n+\n+  private static Color parseARGBColorComponents(String[] maybeNumbers) {\n+    if (maybeNumbers.length < 4) {\n+      return null;\n+    }\n+    final int[] argb = new int[4];\n+    for (int i = 0; i < 4; ++i) {\n+      try {\n+        argb[i] = Integer.parseUnsignedInt(maybeNumbers[i].trim());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1fa6c2c33583107e7d58a301541b3b744eebce"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE1MDgzNQ==", "bodyText": "Thank you, fixed", "url": "https://github.com/flutter/flutter-intellij/pull/4695#discussion_r454150835", "createdAt": "2020-07-14T07:13:32Z", "author": {"login": "dratushnyy"}, "path": "src/io/flutter/editor/ExpressionParsingUtils.java", "diffHunk": "@@ -40,4 +40,58 @@ public static Color parseColor(String text, String colorText) {\n     //noinspection UseJBColor\n     return new Color((int)(value >> 16) & 0xFF, (int)(value >> 8) & 0xFF, (int)value & 0xFF, (int)(value >> 24) & 0xFF);\n   }\n+\n+  public static Color parseColorComponents(String callText, String prefix, boolean isARGB) {\n+    if (callText.startsWith(prefix) && callText.endsWith(\")\")) {\n+      final String colorString = callText.substring(prefix.length(), callText.length() - 1).trim();\n+      final String[] maybeNumbers = colorString.split(\",\");\n+      if (maybeNumbers.length < 4) {\n+        return null;\n+      }\n+      return isARGB ? parseARGBColorComponents(maybeNumbers) : parseRGBOColorComponents(maybeNumbers);\n+    }\n+    return null;\n+  }\n+\n+  private static Color parseARGBColorComponents(String[] maybeNumbers) {\n+    if (maybeNumbers.length < 4) {\n+      return null;\n+    }\n+    final int[] argb = new int[4];\n+    for (int i = 0; i < 4; ++i) {\n+      try {\n+        argb[i] = Integer.parseUnsignedInt(maybeNumbers[i].trim());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNTYzMA=="}, "originalCommit": {"oid": "9f1fa6c2c33583107e7d58a301541b3b744eebce"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 495, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}