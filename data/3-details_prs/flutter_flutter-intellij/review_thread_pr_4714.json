{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MDE4MDcx", "number": 4714, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzowOToyOVrOEUyVFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMzoyOVrOEUyYvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjMxNTc1OnYy", "diffSide": "RIGHT", "path": ".idea/misc.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzowOToyOVrOG7Lh6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzowOToyOVrOG7Lh6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwODA3Mw==", "bodyText": "revert this change.", "url": "https://github.com/flutter/flutter-intellij/pull/4714#discussion_r464708073", "createdAt": "2020-08-03T23:09:29Z", "author": {"login": "jacob314"}, "path": ".idea/misc.xml", "diffHunk": "@@ -5,7 +5,7 @@\n       <property name=\"BorderFactoryClass\" class=\"java.lang.String\" />\n     </properties>\n   </component>\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"IntelliJ IDEA Community Edition\" project-jdk-type=\"IDEA JDK\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_14\" default=\"true\" project-jdk-name=\"IntelliJ IDEA Community Edition IC-202.6109.22\" project-jdk-type=\"IDEA JDK\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfabae9d9b255ea7b4b75ddaf35c49a585cbca95"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjMxNjIxOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/jxbrowser/EmbeddedBrowser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzowOTozOVrOG7LiLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzowOTozOVrOG7LiLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwODE0Mg==", "bodyText": "revert this as well.", "url": "https://github.com/flutter/flutter-intellij/pull/4714#discussion_r464708142", "createdAt": "2020-08-03T23:09:39Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/EmbeddedBrowser.java", "diffHunk": "@@ -20,6 +20,7 @@\n \n public class EmbeddedBrowser {\n   public void openPanel(ContentManager contentManager, String tabName, String url) {\n+    System.setProperty(\"jxbrowser.license.key\", \"6P83ACG409A8WGBSFIBUARBTNCLB4U9JHNK8FA3N59XH5Y7ZULRCP50NN2O9TRTT4CDC\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfabae9d9b255ea7b4b75ddaf35c49a585cbca95"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjMxODExOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMDoyMlrOG7LjLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMDoyMlrOG7LjLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwODM5Ng==", "bodyText": "feel free to add a @VisibleForTesting annotation to these protected fields to indicate they are only there for testing.", "url": "https://github.com/flutter/flutter-intellij/pull/4714#discussion_r464708396", "createdAt": "2020-08-03T23:10:22Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -39,12 +41,12 @@\n // the class path.\n public class JxBrowserManager {\n   private static JxBrowserManager manager;\n-  private static final String DOWNLOAD_PATH = PathManager.getPluginsPath() + File.separatorChar + \"flutter-intellij\" + File.separatorChar + \"jxbrowser\";\n+  protected static final String DOWNLOAD_PATH = PathManager.getPluginsPath() + File.separatorChar + \"flutter-intellij\" + File.separatorChar + \"jxbrowser\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfabae9d9b255ea7b4b75ddaf35c49a585cbca95"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjMxODU5OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMDozN1rOG7LjbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMDoxMzo0MVrOG7MrKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwODQ2MQ==", "bodyText": "did you mean to leave this on as part of the CL?", "url": "https://github.com/flutter/flutter-intellij/pull/4714#discussion_r464708461", "createdAt": "2020-08-03T23:10:37Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -39,12 +41,12 @@\n // the class path.\n public class JxBrowserManager {\n   private static JxBrowserManager manager;\n-  private static final String DOWNLOAD_PATH = PathManager.getPluginsPath() + File.separatorChar + \"flutter-intellij\" + File.separatorChar + \"jxbrowser\";\n+  protected static final String DOWNLOAD_PATH = PathManager.getPluginsPath() + File.separatorChar + \"flutter-intellij\" + File.separatorChar + \"jxbrowser\";\n   private static final AtomicReference<JxBrowserStatus> status = new AtomicReference<>(JxBrowserStatus.NOT_INSTALLED);\n   private static final Logger LOG = Logger.getInstance(JxBrowserManager.class);\n   // We will be gating JxBrowser features until all of the features are landed.\n   // To test JxBrowser, set this to true and also add license key to VM options (-Djxbrowser.license.key=<key>).\n-  public static final boolean ENABLE_JX_BROWSER = false;\n+  public static final boolean ENABLE_JX_BROWSER = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfabae9d9b255ea7b4b75ddaf35c49a585cbca95"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjgyNA==", "bodyText": "I thought I was adding these testing changes in a separate branch but accidentally committed them.", "url": "https://github.com/flutter/flutter-intellij/pull/4714#discussion_r464726824", "createdAt": "2020-08-04T00:13:41Z", "author": {"login": "helin24"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -39,12 +41,12 @@\n // the class path.\n public class JxBrowserManager {\n   private static JxBrowserManager manager;\n-  private static final String DOWNLOAD_PATH = PathManager.getPluginsPath() + File.separatorChar + \"flutter-intellij\" + File.separatorChar + \"jxbrowser\";\n+  protected static final String DOWNLOAD_PATH = PathManager.getPluginsPath() + File.separatorChar + \"flutter-intellij\" + File.separatorChar + \"jxbrowser\";\n   private static final AtomicReference<JxBrowserStatus> status = new AtomicReference<>(JxBrowserStatus.NOT_INSTALLED);\n   private static final Logger LOG = Logger.getInstance(JxBrowserManager.class);\n   // We will be gating JxBrowser features until all of the features are landed.\n   // To test JxBrowser, set this to true and also add license key to VM options (-Djxbrowser.license.key=<key>).\n-  public static final boolean ENABLE_JX_BROWSER = false;\n+  public static final boolean ENABLE_JX_BROWSER = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwODQ2MQ=="}, "originalCommit": {"oid": "cfabae9d9b255ea7b4b75ddaf35c49a585cbca95"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjMxOTQyOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMTowNlrOG7Lj5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMTowNlrOG7Lj5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwODU4Mw==", "bodyText": "mark as @VisibleForTesting", "url": "https://github.com/flutter/flutter-intellij/pull/4714#discussion_r464708583", "createdAt": "2020-08-03T23:11:06Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -56,6 +58,10 @@ public static JxBrowserManager getInstance() {\n     return manager;\n   }\n \n+  protected static void resetForTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfabae9d9b255ea7b4b75ddaf35c49a585cbca95"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjMyMjAyOnYy", "diffSide": "RIGHT", "path": "src/io/flutter/utils/FileUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMjoxNlrOG7LlZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMjoxNlrOG7LlZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwODk2NA==", "bodyText": "nit: maybe just call this deleteFile and indicate in the comment that you gracefully handle files that don't exist.", "url": "https://github.com/flutter/flutter-intellij/pull/4714#discussion_r464708964", "createdAt": "2020-08-03T23:12:16Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/utils/FileUtils.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 The Chromium Authors. All rights reserved.\n+ * Use of this source code is governed by a BSD-style license that can be\n+ * found in the LICENSE file.\n+ */\n+package io.flutter.utils;\n+\n+import com.intellij.util.lang.UrlClassLoader;\n+\n+import java.io.File;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+\n+public class FileUtils {\n+  public static boolean makeDirectoryIfNotExists(String path) {\n+    final File directory = new File(path);\n+    if (!directory.exists()) {\n+      return directory.mkdirs();\n+    }\n+    return true;\n+  }\n+\n+  public static boolean fileExists(String path) {\n+    final File file = new File(path);\n+    return file.exists();\n+  }\n+\n+  public static boolean deleteFileIfExists(String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfabae9d9b255ea7b4b75ddaf35c49a585cbca95"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjMyMjk5OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/utils/FileUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMjo0NVrOG7Ll8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMjo0NVrOG7Ll8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwOTEwNQ==", "bodyText": "nit: maybe just call this makeDirectory or mkdirs and indicate in the comment that you gracefully handle directories that already exist.", "url": "https://github.com/flutter/flutter-intellij/pull/4714#discussion_r464709105", "createdAt": "2020-08-03T23:12:45Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/utils/FileUtils.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 The Chromium Authors. All rights reserved.\n+ * Use of this source code is governed by a BSD-style license that can be\n+ * found in the LICENSE file.\n+ */\n+package io.flutter.utils;\n+\n+import com.intellij.util.lang.UrlClassLoader;\n+\n+import java.io.File;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+\n+public class FileUtils {\n+  public static boolean makeDirectoryIfNotExists(String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfabae9d9b255ea7b4b75ddaf35c49a585cbca95"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjMyNTA5OnYy", "diffSide": "RIGHT", "path": "src/io/flutter/utils/FileUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMzoyOVrOG7LnEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzoxMzoyOVrOG7LnEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwOTM5NQ==", "bodyText": "nit: just call\nthis loadClass as it is clear from the classLoader argument that the class is loaded with the class loader.", "url": "https://github.com/flutter/flutter-intellij/pull/4714#discussion_r464709395", "createdAt": "2020-08-03T23:13:29Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/utils/FileUtils.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 The Chromium Authors. All rights reserved.\n+ * Use of this source code is governed by a BSD-style license that can be\n+ * found in the LICENSE file.\n+ */\n+package io.flutter.utils;\n+\n+import com.intellij.util.lang.UrlClassLoader;\n+\n+import java.io.File;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+\n+public class FileUtils {\n+  public static boolean makeDirectoryIfNotExists(String path) {\n+    final File directory = new File(path);\n+    if (!directory.exists()) {\n+      return directory.mkdirs();\n+    }\n+    return true;\n+  }\n+\n+  public static boolean fileExists(String path) {\n+    final File file = new File(path);\n+    return file.exists();\n+  }\n+\n+  public static boolean deleteFileIfExists(String path) {\n+    final File file = new File(path);\n+    if (file.exists()) {\n+      return file.delete();\n+    }\n+    return true;\n+  }\n+\n+  public static boolean loadClassWithClassLoader(ClassLoader classLoader, String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfabae9d9b255ea7b4b75ddaf35c49a585cbca95"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 502, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}