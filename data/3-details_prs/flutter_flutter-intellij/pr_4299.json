{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MjU0OTcy", "number": 4299, "title": "Defend against invalid refresh rates for flutter desktop devices.", "bodyText": "This warns the user when an invalid refresh rate was received and uses the default (60 FPS) instead.", "createdAt": "2020-01-17T17:58:34Z", "url": "https://github.com/flutter/flutter-intellij/pull/4299", "merged": true, "mergeCommit": {"oid": "0a833f6630e26db712a1306a168a0352a5078bc3"}, "closed": true, "closedAt": "2020-01-21T16:47:28Z", "author": {"login": "kenzieschmoll"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7SnVdgH2gAyMzY0MjU0OTcyOmYxZGQyZDFjYjg2MGNmMmNlOTFlMzNhMDVlODJiMmU0ZDExNjE3Y2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8jx_eAFqTM0NjAxNzQ4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd", "committedDate": "2020-01-17T17:57:43Z", "message": "Defend against invalid refresh rates for flutter desktop devices."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODI2ODkx", "url": "https://github.com/flutter/flutter-intellij/pull/4299#pullrequestreview-344826891", "createdAt": "2020-01-17T20:35:03Z", "commit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMDozNTowM1rOFfEk8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTozNTo0N1rOFfF21A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyNTE3MQ==", "bodyText": "I believe that comparisons with doubles / floats are a bit fragile. The value could be something small but close to zero (0.000000001), or -0.0.\nPerhaps have a small validation method? Arbitrarily, anything > -1.0 and < 1.0 would be considered invalid?", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r368125171", "createdAt": "2020-01-17T20:35:03Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/vmService/VMServiceManager.java", "diffHunk": "@@ -630,7 +631,16 @@ public void received(JsonObject object) {\n             ret.complete(null);\n           }\n           else {\n-            ret.complete(object.get(fpsField).getAsDouble());\n+            final double fps = object.get(fpsField).getAsDouble();\n+            // Defend against invalid refresh rate for Flutter Desktop devices (0.0).\n+            if (fps == 0.0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0NjEzMg==", "bodyText": "Instead of putting this check in the VMServiceManager.java class - which currently doesn't know about the UI - perhaps move this check to the UI portion of the app which consumes this API? We'd want to make sure that we didn't perform the same check in multiple places.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r368146132", "createdAt": "2020-01-17T21:35:47Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/vmService/VMServiceManager.java", "diffHunk": "@@ -630,7 +631,16 @@ public void received(JsonObject object) {\n             ret.complete(null);\n           }\n           else {\n-            ret.complete(object.get(fpsField).getAsDouble());\n+            final double fps = object.get(fpsField).getAsDouble();\n+            // Defend against invalid refresh rate for Flutter Desktop devices (0.0).\n+            if (fps == 0.0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEyNTE3MQ=="}, "originalCommit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODY3NDUw", "url": "https://github.com/flutter/flutter-intellij/pull/4299#pullrequestreview-344867450", "createdAt": "2020-01-17T22:07:13Z", "commit": {"oid": "f1dd2d1cb860cf2ce91e33a05e82b2e4d11617cd"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a131fc49c90fbb4a20bde05017b771af7608e960", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/a131fc49c90fbb4a20bde05017b771af7608e960", "committedDate": "2020-01-18T00:01:32Z", "message": "Add DisplayRefreshRateManager and NotificationManager classes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "998457f7e9ef18c83c2800625af600076e145e0e", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/998457f7e9ef18c83c2800625af600076e145e0e", "committedDate": "2020-01-18T00:04:57Z", "message": "Use epsilon to determine invalid fps."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTU3MTQ1", "url": "https://github.com/flutter/flutter-intellij/pull/4299#pullrequestreview-344957145", "createdAt": "2020-01-18T18:51:54Z", "commit": {"oid": "998457f7e9ef18c83c2800625af600076e145e0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxODo1MTo1NVrOFfLvFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxODo1MTo1NVrOFfLvFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MjQ1Mw==", "bodyText": "You'll want to switch this import to org.jetbrains.annotations.Nullable.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r368242453", "createdAt": "2020-01-18T18:51:55Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/NotificationManager.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 The Chromium Authors. All rights reserved.\n+ * Use of this source code is governed by a BSD-style license that can be\n+ * found in the LICENSE file.\n+ */\n+package io.flutter;\n+\n+import javax.annotation.Nullable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "998457f7e9ef18c83c2800625af600076e145e0e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a141447adf2fbe64bdea2c36dd6f7fb9a46d401e", "author": {"user": {"login": "kenzieschmoll", "name": "Kenzie (Schmoll) Davisson"}}, "url": "https://github.com/flutter/flutter-intellij/commit/a141447adf2fbe64bdea2c36dd6f7fb9a46d401e", "committedDate": "2020-01-21T16:21:44Z", "message": "Review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDE3NDg5", "url": "https://github.com/flutter/flutter-intellij/pull/4299#pullrequestreview-346017489", "createdAt": "2020-01-21T16:31:39Z", "commit": {"oid": "a141447adf2fbe64bdea2c36dd6f7fb9a46d401e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjozMTo0MFrOFgAlQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjozMTo0MFrOFgAlQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwODI5MA==", "bodyText": "Not critical, but in the future we can leave copyright years as is for existing files.", "url": "https://github.com/flutter/flutter-intellij/pull/4299#discussion_r369108290", "createdAt": "2020-01-21T16:31:40Z", "author": {"login": "devoncarew"}, "path": "src/io/flutter/performance/FrameRenderingDisplay.java", "diffHunk": "@@ -1,9 +1,9 @@\n /*\n- * Copyright 2018 The Chromium Authors. All rights reserved.\n+ * Copyright 2020 The Chromium Authors. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a141447adf2fbe64bdea2c36dd6f7fb9a46d401e"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1737, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}