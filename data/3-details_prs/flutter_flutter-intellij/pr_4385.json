{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NzM2OTg1", "number": 4385, "title": "Switch common test config utils to use a per-file cache", "bodyText": "", "createdAt": "2020-02-18T17:12:44Z", "url": "https://github.com/flutter/flutter-intellij/pull/4385", "merged": true, "mergeCommit": {"oid": "67ac65ae89ccebc4b58ecb886f867b8dd0d44ccb"}, "closed": true, "closedAt": "2020-02-19T23:48:37Z", "author": {"login": "DaveShuckerow"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFlRjlABqjMwNDgwNzkwMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcF_RhuAH2gAyMzc2NzM2OTg1OmU3NmJjODdmNzQxODc3ZjI0MjNhYTg2MTQwOTFkODBmMDczYzY5NTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a25c9597a8e70b69357929f89700352d3ec31593", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/a25c9597a8e70b69357929f89700352d3ec31593", "committedDate": "2020-02-18T17:12:19Z", "message": "Switch common test config utils to use a per-file cache"}, "afterCommit": {"oid": "541ad688c7610c4638bb99386553dfa52e050fdf", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/541ad688c7610c4638bb99386553dfa52e050fdf", "committedDate": "2020-02-18T17:21:14Z", "message": "Switch common test config utils to use a per-file cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0acff30bda37a8e880f959a9cf9f4af215566aa8", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/0acff30bda37a8e880f959a9cf9f4af215566aa8", "committedDate": "2020-02-18T17:22:05Z", "message": "Switch common test config utils to use a per-file cache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "541ad688c7610c4638bb99386553dfa52e050fdf", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/541ad688c7610c4638bb99386553dfa52e050fdf", "committedDate": "2020-02-18T17:21:14Z", "message": "Switch common test config utils to use a per-file cache"}, "afterCommit": {"oid": "0acff30bda37a8e880f959a9cf9f4af215566aa8", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/0acff30bda37a8e880f959a9cf9f4af215566aa8", "committedDate": "2020-02-18T17:22:05Z", "message": "Switch common test config utils to use a per-file cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTM4MDMw", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-360538030", "createdAt": "2020-02-18T17:37:42Z", "commit": {"oid": "a25c9597a8e70b69357929f89700352d3ec31593"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTQxODk1", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-360541895", "createdAt": "2020-02-18T17:43:23Z", "commit": {"oid": "0acff30bda37a8e880f959a9cf9f4af215566aa8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzo0MzoyM1rOFrMG7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzo0MzoyM1rOFrMG7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzMTQ3MQ==", "bodyText": "what if the outline has changed? we need to clear out the cache in that case.", "url": "https://github.com/flutter/flutter-intellij/pull/4385#discussion_r380831471", "createdAt": "2020-02-18T17:43:23Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/run/common/CommonTestConfigUtils.java", "diffHunk": "@@ -84,21 +84,22 @@ private void clearCachedInfo() {\n     }\n \n     final FlutterOutline outline = outlineService.getIfUpdated(file);\n+    final String path = file.getVirtualFile().getPath();\n     // If the outline is outdated, then request a new pass to generate line markers.\n     if (outline == null) {\n-      clearCachedInfo();\n+      clearCachedInfo(path);\n       outlineService.addListener(getListenerForFile(file));\n       return new HashMap<>();\n     }\n \n     synchronized (this) {\n       // Visit the fields on the outline to get which calls are actual named tests.\n-      if (cachedCallToTestType == null) {\n-        cachedCallToTestType = new HashMap<>();\n-        populateTestTypeMap(outline, cachedCallToTestType, file);\n+      if (!cachedCallToTestType.containsKey(path)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0acff30bda37a8e880f959a9cf9f4af215566aa8"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTQyNjY4", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-360542668", "createdAt": "2020-02-18T17:44:31Z", "commit": {"oid": "0acff30bda37a8e880f959a9cf9f4af215566aa8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzo0NDozMlrOFrMJVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzo0NDozMlrOFrMJVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzMjA4Nw==", "bodyText": "caching DartCallExpressions will cause us to hang on to old IntelliJ ASTs and leave us vulnerable to if IntelliJ recomputes AST nodes. It is safer to use file offsets as keys.", "url": "https://github.com/flutter/flutter-intellij/pull/4385#discussion_r380832087", "createdAt": "2020-02-18T17:44:32Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/run/common/CommonTestConfigUtils.java", "diffHunk": "@@ -64,11 +64,11 @@ public TestType asTestCall(@NotNull PsiElement element) {\n     return null;\n   }\n \n-  Map<DartCallExpression, TestType> cachedCallToTestType;\n+  private final Map<String, Map<DartCallExpression, TestType>> cachedCallToTestType = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0acff30bda37a8e880f959a9cf9f4af215566aa8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a1a89ba27b1f8c6490f839dec6810d4c7160b70", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/9a1a89ba27b1f8c6490f839dec6810d4c7160b70", "committedDate": "2020-02-18T18:00:30Z", "message": "Use integer offsets instead of callexpressions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTYwNDE4", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-360560418", "createdAt": "2020-02-18T18:11:31Z", "commit": {"oid": "9a1a89ba27b1f8c6490f839dec6810d4c7160b70"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODoxMTozMVrOFrNBFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODoxMTozMVrOFrNBFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg0NjM1Ng==", "bodyText": "optimization: move this findElementAt call so you only call it when unit_test_group or unit_test_test is found. Currently we are doing this fairly expensive operation a lot more times than we need to.\nI do like that you are still using\nfile.findElementAt to avoid location calculation bugs.", "url": "https://github.com/flutter/flutter-intellij/pull/4385#discussion_r380846356", "createdAt": "2020-02-18T18:11:31Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/run/common/CommonTestConfigUtils.java", "diffHunk": "@@ -160,7 +161,7 @@ protected ActiveEditorsOutlineService getActiveEditorsOutlineService(@NotNull Pr\n    * Traverses the {@param outline} tree and adds to {@param callToTestType } the {@link DartCallExpression}s that are tests or test groups.\n    */\n   private void populateTestTypeMap(@NotNull FlutterOutline outline,\n-                                   @NotNull Map<DartCallExpression, TestType> callToTestType,\n+                                   @NotNull Map<Integer, TestType> callToTestType,\n                                    @NotNull PsiFile file) {\n     final PsiElement element = file.findElementAt(outline.getOffset());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a1a89ba27b1f8c6490f839dec6810d4c7160b70"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "793db7faebc991357e7e3736baf9e047636089a6", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/793db7faebc991357e7e3736baf9e047636089a6", "committedDate": "2020-02-18T21:34:00Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e25e3f725e12b986e156d18c394a47bcadf0650", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/1e25e3f725e12b986e156d18c394a47bcadf0650", "committedDate": "2020-02-19T16:47:31Z", "message": "Start a cache of previous outlines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aac9cf121fc785c8b8de52811ccbedb089b9718a", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/aac9cf121fc785c8b8de52811ccbedb089b9718a", "committedDate": "2020-02-19T16:48:50Z", "message": "Revert .idea/ files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27c4803c9705ebbdbf6e6432afa0694470a975cb", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/27c4803c9705ebbdbf6e6432afa0694470a975cb", "committedDate": "2020-02-19T16:47:57Z", "message": "Revert .idea/ files"}, "afterCommit": {"oid": "aac9cf121fc785c8b8de52811ccbedb089b9718a", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/aac9cf121fc785c8b8de52811ccbedb089b9718a", "committedDate": "2020-02-19T16:48:50Z", "message": "Revert .idea/ files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDM3OTg1", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-361437985", "createdAt": "2020-02-19T21:08:27Z", "commit": {"oid": "aac9cf121fc785c8b8de52811ccbedb089b9718a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTowODoyN1rOFr3q4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTowODoyN1rOFr3q4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0NTE4Nw==", "bodyText": "nit: rather than two maps with the same key, define a class  with both the\nFltuterOutline and the Map<Integer, TestType> as fields.", "url": "https://github.com/flutter/flutter-intellij/pull/4385#discussion_r381545187", "createdAt": "2020-02-19T21:08:27Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/run/common/CommonTestConfigUtils.java", "diffHunk": "@@ -64,49 +64,57 @@ public TestType asTestCall(@NotNull PsiElement element) {\n     return null;\n   }\n \n-  Map<DartCallExpression, TestType> cachedCallToTestType;\n+  private final Map<String, Map<Integer, TestType>> cachedCallToTestType = new HashMap<>();\n+  private final Map<String, FlutterOutline> pathToPreviouslyUsedOutline = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aac9cf121fc785c8b8de52811ccbedb089b9718a"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDQwNzE4", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-361440718", "createdAt": "2020-02-19T21:12:51Z", "commit": {"oid": "aac9cf121fc785c8b8de52811ccbedb089b9718a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToxMjo1MVrOFr3zag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToxMjo1MVrOFr3zag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0NzM3MA==", "bodyText": "nit: remove the result local variable.", "url": "https://github.com/flutter/flutter-intellij/pull/4385#discussion_r381547370", "createdAt": "2020-02-19T21:12:51Z", "author": {"login": "jacob314"}, "path": "testSrc/unit/io/flutter/testing/FakeActiveEditorsOutlineService.java", "diffHunk": "@@ -38,16 +40,20 @@ public void loadOutline(@NotNull String flutterOutlinePath) {\n       e.printStackTrace();\n       outlineContents = null;\n     }\n-    flutterOutline = null;\n+    FlutterOutline flutterOutline = null;\n     if (outlineContents != null) {\n       flutterOutline = FlutterOutline.fromJson(new JsonParser().parse(outlineContents).getAsJsonObject());\n     }\n+    pathToFlutterOutline.put(filePath, flutterOutline);\n+\n   }\n \n   @Nullable\n   @Override\n   public FlutterOutline getOutline(String path) {\n-    return flutterOutline;\n+    // The path string that we get will be prepended with a '/' character, compared to how the cache was initialized.\n+    final FlutterOutline result = pathToFlutterOutline.get(path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aac9cf121fc785c8b8de52811ccbedb089b9718a"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDQxOTYy", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-361441962", "createdAt": "2020-02-19T21:14:51Z", "commit": {"oid": "aac9cf121fc785c8b8de52811ccbedb089b9718a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc8fa438e5bc6c9eebf97d833d5f9fbfef2d3a23", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/fc8fa438e5bc6c9eebf97d833d5f9fbfef2d3a23", "committedDate": "2020-02-19T21:35:07Z", "message": "Respond to comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDU3MDU3", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-361457057", "createdAt": "2020-02-19T21:39:36Z", "commit": {"oid": "fc8fa438e5bc6c9eebf97d833d5f9fbfef2d3a23"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTozOTozN1rOFr4l3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTozOTozN1rOFr4l3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU2MDI4Nw==", "bodyText": "nit: the cleaner pattern for this in java is\nfinal entry = cache.get(path);", "url": "https://github.com/flutter/flutter-intellij/pull/4385#discussion_r381560287", "createdAt": "2020-02-19T21:39:37Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/run/common/CommonTestConfigUtils.java", "diffHunk": "@@ -89,7 +87,7 @@ private void clearCachedInfo(String path) {\n     final String path = file.getVirtualFile().getPath();\n     final boolean outlineOutdated;\n     synchronized (this) {\n-      outlineOutdated = pathToPreviouslyUsedOutline.containsKey(path) && outline != pathToPreviouslyUsedOutline.get(path);\n+      outlineOutdated = cache.containsKey(path) && outline != cache.get(path).outline;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc8fa438e5bc6c9eebf97d833d5f9fbfef2d3a23"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDU3NTMx", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-361457531", "createdAt": "2020-02-19T21:40:24Z", "commit": {"oid": "fc8fa438e5bc6c9eebf97d833d5f9fbfef2d3a23"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTo0MDoyNVrOFr4nPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTo0MDoyNVrOFr4nPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU2MDYzNw==", "bodyText": "nit: cache the OutlineCache entry as a local variable so you don't have to read it out of a cache.", "url": "https://github.com/flutter/flutter-intellij/pull/4385#discussion_r381560637", "createdAt": "2020-02-19T21:40:25Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/run/common/CommonTestConfigUtils.java", "diffHunk": "@@ -99,14 +97,8 @@ private void clearCachedInfo(String path) {\n     }\n \n     synchronized (this) {\n-      pathToPreviouslyUsedOutline.put(path, outline);\n-      // Visit the fields on the outline to get which calls are actual named tests.\n-      if (!cachedCallToTestType.containsKey(path)) {\n-        cachedCallToTestType.put(path, new HashMap<>());\n-        populateTestTypeMap(outline, cachedCallToTestType.get(path), file);\n-      }\n-\n-      return cachedCallToTestType.get(path);\n+      cache.put(path, new OutlineCache(outline, file));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc8fa438e5bc6c9eebf97d833d5f9fbfef2d3a23"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDU3NjU4", "url": "https://github.com/flutter/flutter-intellij/pull/4385#pullrequestreview-361457658", "createdAt": "2020-02-19T21:40:40Z", "commit": {"oid": "fc8fa438e5bc6c9eebf97d833d5f9fbfef2d3a23"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e76bc87f741877f2423aa8614091d80f073c6954", "author": {"user": null}, "url": "https://github.com/flutter/flutter-intellij/commit/e76bc87f741877f2423aa8614091d80f073c6954", "committedDate": "2020-02-19T23:38:52Z", "message": "Respond to comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1659, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}