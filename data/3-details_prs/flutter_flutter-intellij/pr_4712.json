{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0ODA4NzEz", "number": 4712, "title": "Add handling and messaging for when JxBrowser is not installed", "bodyText": "We want to provide some status messages in the inspector panel while downloading JxBrowser files or while starting DevTools.\nThe paths once a project is run:\n\nFlutterView::debugActiveHelper\n\nJxBrowser is not enabled -> skip to normal inspector\nJxBrowser is installed -> handleJxBrowserInstalled (show that devtools is starting)\nJxBrowser installation failed -> handleJxBrowserInstallationFailed (offer user option to retry installation)\nJxBrowser installation is in progress -> handleJxBrowserInstallationInProgress (wait for installation)\n\nSuccess -> handleJxBrowserInstalled\nFailure -> handleJxBrowserInstallationFailed\nTime out -> Show error message\n\n\n\n\n\nMessages will be shown in the panel, e.g.:", "createdAt": "2020-07-22T00:11:24Z", "url": "https://github.com/flutter/flutter-intellij/pull/4712", "merged": true, "mergeCommit": {"oid": "37e1908b5ac4347452f74003936693752ad802f1"}, "closed": true, "closedAt": "2020-07-23T22:28:23Z", "author": {"login": "helin24"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3Kf2CgH2gAyNDU0ODA4NzEzOmRmYmZkNjIzNDU0OTc5N2NmNGZlMDU4NDBmNmZhN2NiYmQ2ODJkN2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc33BbFgH2gAyNDU0ODA4NzEzOjlmNTczM2ExMTU5Y2NhMjViMDdkM2U2ZWJjMjkyZTYzYTBlM2QyNGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dfbfd6234549797cf4fe05840f6fa7cbbd682d7a", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/dfbfd6234549797cf4fe05840f6fa7cbbd682d7a", "committedDate": "2020-07-21T18:25:45Z", "message": "Remove contents to allow restarting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93f7333cc559646fc5fcb2a1dfeed7b32e78fb42", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/93f7333cc559646fc5fcb2a1dfeed7b32e78fb42", "committedDate": "2020-07-21T18:26:58Z", "message": "Does not work yet for messaging on devtools"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44105ae46149e3b7babaee695098e6bca4ab6cf9", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/44105ae46149e3b7babaee695098e6bca4ab6cf9", "committedDate": "2020-07-21T21:27:07Z", "message": "Show installing devtools message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a86f1f4d85365dcc43c1797658619fccab5746c", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/0a86f1f4d85365dcc43c1797658619fccab5746c", "committedDate": "2020-07-21T23:20:41Z", "message": "Show messages jxbrowser progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d537ac29ab1b2c6f9c554f2d0e376871739c7dc", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/2d537ac29ab1b2c6f9c554f2d0e376871739c7dc", "committedDate": "2020-07-22T00:08:29Z", "message": "Separate handling of jxbrowser statuses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7157970812296957fe108b28cae81a75fcf439f", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/f7157970812296957fe108b28cae81a75fcf439f", "committedDate": "2020-07-22T17:31:35Z", "message": "Fix installation in progress function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "477c4a7a76cb017392e6e52845a6f379ba4ab966", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/477c4a7a76cb017392e6e52845a6f379ba4ab966", "committedDate": "2020-07-22T18:01:02Z", "message": "Fix thread use"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58eb8c2b81837d77d160c86242a95ac774c78d46", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/58eb8c2b81837d77d160c86242a95ac774c78d46", "committedDate": "2020-07-22T18:08:43Z", "message": "Call invoke later in panel function, clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "172db568b12ba328197c73d090a3b50c071e6234", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/172db568b12ba328197c73d090a3b50c071e6234", "committedDate": "2020-07-22T20:08:19Z", "message": "Add test for handle jxbrowser installed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2c627bf8a13ce3ed46b8311f8b0f574e73ea646", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/d2c627bf8a13ce3ed46b8311f8b0f574e73ea646", "committedDate": "2020-07-22T21:41:06Z", "message": "Add test for handle failed installation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc7a25175fa2a6e19e2f3bab824e81dc29e39420", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/dc7a25175fa2a6e19e2f3bab824e81dc29e39420", "committedDate": "2020-07-22T21:56:29Z", "message": "Add test for in progress install that finishes quickly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a63c8b5f9c8f700bb133cdcf6b57b963a473d9e", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/4a63c8b5f9c8f700bb133cdcf6b57b963a473d9e", "committedDate": "2020-07-22T22:38:08Z", "message": "Add tests for waiting conditions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cec1a2e4079d2cc8e4442d968cc7a5b00d2780af", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/cec1a2e4079d2cc8e4442d968cc7a5b00d2780af", "committedDate": "2020-07-22T22:46:27Z", "message": "Add test for installed but waiting for devtools"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/aa550a8745acda9393063efb3e7f52fd4560a4fc", "committedDate": "2020-07-22T22:48:37Z", "message": "Add test for devtools install failed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzQ0MTY1", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-453744165", "createdAt": "2020-07-22T23:06:28Z", "commit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzowNjoyOFrOG13Pjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzowNjoyOFrOG13Pjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzMjgxNA==", "bodyText": "you should listen for an event from JxBrowserManager indicating that installation succeeded or failed rather than sleeping.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459132814", "createdAt": "2020-07-22T23:06:28Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzQ0ODcx", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-453744871", "createdAt": "2020-07-22T23:08:29Z", "commit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzowODoyOVrOG13R4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzowODoyOVrOG13R4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzMzQwOA==", "bodyText": "I believe there is a JBLink or similar class that is already styled to look like a link. I think the performance tab sohws an example of using it.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459133408", "createdAt": "2020-07-22T23:08:29Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {\n+      final JxBrowserStatus newStatus = jxBrowserManager.getStatus();\n+      if (newStatus.equals(JxBrowserStatus.INSTALLED)) {\n+        handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+        return;\n+      } else if (newStatus.equals(JxBrowserStatus.INSTALLATION_FAILED)) {\n+        handleJxBrowserInstallationFailed(app, inspectorService, toolWindow);\n+        return;\n+      } else {\n+        ThreadUtil.sleep(waitSeconds);\n+        waitSeconds = waitSeconds * 2;\n+      }\n+    }\n+    // TODO(helin24): Are there better options for this case? e.g. stop installation and retry, link to open in browser?\n+    presentLabel(toolWindow, INSTALLATION_TIMED_OUT_LABEL);\n+  }\n+\n+  protected void handleJxBrowserInstallationFailed(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    // Allow user to manually restart.\n+    presentClickableLabel(toolWindow, \"JxBrowser installation failed. Click to retry.\", new MouseAdapter() {\n+      @Override\n+      public void mouseClicked(MouseEvent e) {\n+        JxBrowserManager.getInstance().retryFromFailed(app.getProject());\n+        handleJxBrowserInstallationInProgress(app, inspectorService, toolWindow);\n+\n+      }\n+    });\n+  }\n+\n+  protected void presentLabel(ToolWindow toolWindow, String text) {\n+    final JBLabel label = new JBLabel(text, SwingConstants.CENTER);\n+    label.setForeground(UIUtil.getLabelDisabledForeground());\n+    replacePanelLabel(toolWindow, label);\n+  }\n+\n+  protected void presentClickableLabel(ToolWindow toolWindow, String text, MouseAdapter mouseAdapter) {\n+    final JBLabel label = new JBLabel(text, SwingConstants.CENTER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "originalPosition": 128}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzQ2OTUw", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-453746950", "createdAt": "2020-07-22T23:14:35Z", "commit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxNDozNVrOG13ZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxNDozNVrOG13ZJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzNTI3MQ==", "bodyText": "nit: remove whitespace line.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459135271", "createdAt": "2020-07-22T23:14:35Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -373,6 +383,109 @@ public void debugActive(@NotNull FlutterViewMessages.FlutterDebugEvent event) {\n     }\n   }\n \n+  protected void handleJxBrowserInstalled(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    if (devToolsManager.hasInstalledDevTools()) {\n+      addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+    }\n+    else {\n+      presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n+\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      result.thenAccept(succeeded -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+        }\n+      });\n+    }\n+  }\n+\n+  protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n+\n+    presentLabel(toolWindow, INSTALLATION_IN_PROGRESS_LABEL);\n+\n+    // Start devtools while waiting for JxBrowser download.\n+    devToolsManager.installDevTools();\n+\n+    if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n+      handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+    } else {\n+      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n+    }\n+  }\n+\n+  protected void startJxBrowserInstallationWaitingThread(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      waitForJxBrowserInstallation(app, inspectorService, toolWindow);\n+    });\n+  }\n+\n+  protected void waitForJxBrowserInstallation(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    final JxBrowserManager jxBrowserManager = JxBrowserManager.getInstance();\n+    // Periodically check for download to finish.\n+    // TODO(helin24): Maybe set up JxBrowserManager as listener instead.\n+    int waitSeconds = 1;\n+    while (waitSeconds <= 128) {\n+      final JxBrowserStatus newStatus = jxBrowserManager.getStatus();\n+      if (newStatus.equals(JxBrowserStatus.INSTALLED)) {\n+        handleJxBrowserInstalled(app, inspectorService, toolWindow);\n+        return;\n+      } else if (newStatus.equals(JxBrowserStatus.INSTALLATION_FAILED)) {\n+        handleJxBrowserInstallationFailed(app, inspectorService, toolWindow);\n+        return;\n+      } else {\n+        ThreadUtil.sleep(waitSeconds);\n+        waitSeconds = waitSeconds * 2;\n+      }\n+    }\n+    // TODO(helin24): Are there better options for this case? e.g. stop installation and retry, link to open in browser?\n+    presentLabel(toolWindow, INSTALLATION_TIMED_OUT_LABEL);\n+  }\n+\n+  protected void handleJxBrowserInstallationFailed(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n+    // Allow user to manually restart.\n+    presentClickableLabel(toolWindow, \"JxBrowser installation failed. Click to retry.\", new MouseAdapter() {\n+      @Override\n+      public void mouseClicked(MouseEvent e) {\n+        JxBrowserManager.getInstance().retryFromFailed(app.getProject());\n+        handleJxBrowserInstallationInProgress(app, inspectorService, toolWindow);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzQ3NjM0", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-453747634", "createdAt": "2020-07-22T23:16:15Z", "commit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxNjoxNlrOG13bnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxNjoxNlrOG13bnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzNTkwMA==", "bodyText": "Would be good to avoid using sleep outside of tests. Remove this method.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459135900", "createdAt": "2020-07-22T23:16:16Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/utils/ThreadUtil.java", "diffHunk": "@@ -61,4 +61,14 @@ public static ThreadGroup getRootThreadGroup() {\n \n     return result;\n   }\n+\n+  public static boolean sleep(int seconds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa550a8745acda9393063efb3e7f52fd4560a4fc"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e69b7e0d0103d777acbc03af82554524c4eca5b", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/3e69b7e0d0103d777acbc03af82554524c4eca5b", "committedDate": "2020-07-22T23:35:09Z", "message": "Use LinkLabel instead of custom label"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c2c42386089af4f5376860e32e060b6b5892c29", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/9c2c42386089af4f5376860e32e060b6b5892c29", "committedDate": "2020-07-23T04:51:26Z", "message": "Use completer and fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/6384f30f0017cb3b0bda0547290fdde80faac3e7", "committedDate": "2020-07-23T15:45:44Z", "message": "Use function for installation failed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MzM0MDE3", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-454334017", "createdAt": "2020-07-23T17:09:12Z", "commit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzowOToxMlrOG2Ty0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzowOToxMlrOG2Ty0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMDU5NA==", "bodyText": "is there a reason to not make this limit 10X higher? Users may have limited bandwidth.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459600594", "createdAt": "2020-07-23T17:09:12Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -89,6 +89,7 @@ public void dispose() {\n   protected static final String INSTALLATION_TIMED_OUT_LABEL = \"Waiting for JxBrowser installation timed out. Restart your IDE to try again.\";\n   protected static final String INSTALLING_DEVTOOLS_LABEL = \"Installing DevTools...\";\n   protected static final String DEVTOOLS_FAILED_LABEL = \"Setting up DevTools failed.\";\n+  protected static final int INSTALLATION_WAIT_LIMIT_SECONDS = 200;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MzM4MDAw", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-454338000", "createdAt": "2020-07-23T17:14:22Z", "commit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxNDoyM1rOG2T-pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxNDoyM1rOG2T-pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMzYyMg==", "bodyText": "This logic is only safe if waitForInstallation is called after setUp is called.\nHere's a way to tweak it to make it a bit more robust.\nOnly create a new installation CompletableFuture if the previous future is already completed (indicates a previous failed install). Document he assumptions about the completed future.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459603622", "createdAt": "2020-07-23T17:14:23Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -55,28 +60,48 @@ public JxBrowserStatus getStatus() {\n     return status.get();\n   }\n \n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {\n+    if (installation == null) {\n+      return null;\n+    }\n+\n+    try {\n+      return installation.get(seconds, TimeUnit.SECONDS);\n+    }\n+    catch (InterruptedException | ExecutionException e) {\n+      LOG.info(\"Waiting for JxBrowser to install threw an exception\");\n+      return null;\n+    }\n+  }\n+\n   public void retryFromFailed(Project project) {\n     if (!status.compareAndSet(JxBrowserStatus.INSTALLATION_FAILED, JxBrowserStatus.NOT_INSTALLED)) {\n       return;\n     }\n     setUp(project);\n   }\n \n+  private void setStatusFailed() {\n+    status.set(JxBrowserStatus.INSTALLATION_FAILED);\n+    installation.complete(JxBrowserStatus.INSTALLATION_FAILED);\n+  }\n+\n   public void setUp(Project project) {\n     if (!status.compareAndSet(JxBrowserStatus.NOT_INSTALLED, JxBrowserStatus.INSTALLATION_IN_PROGRESS)) {\n       // This check ensures that an IDE only downloads and installs JxBrowser once, even if multiple projects are open.\n       // If already in progress, let calling point wait until success or failure (it may make sense to call setUp but proceed).\n       // If already succeeded or failed, no need to continue.\n       return;\n     }\n+    installation = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MzM5MDc3", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-454339077", "createdAt": "2020-07-23T17:15:50Z", "commit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxNTo1MFrOG2UCPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxNTo1MFrOG2UCPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwNDU0MA==", "bodyText": "why has the executeOnPolledThread call gone away?\nThe CompletableFuture code as written is still blocking but you could switch to the async version if you don't want to block.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459604540", "createdAt": "2020-07-23T17:15:50Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -414,36 +415,23 @@ protected void handleJxBrowserInstallationInProgress(FlutterApp app, InspectorSe\n     if (jxBrowserManager.getStatus().equals(JxBrowserStatus.INSTALLED)) {\n       handleJxBrowserInstalled(app, inspectorService, toolWindow);\n     } else {\n-      startJxBrowserInstallationWaitingThread(app, inspectorService, toolWindow);\n-    }\n-  }\n+      try {\n+        final JxBrowserStatus newStatus = jxBrowserManager.waitForInstallation(INSTALLATION_WAIT_LIMIT_SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6384f30f0017cb3b0bda0547290fdde80faac3e7"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c157c4cb27d318f55b5cc88716203bbc7aa8945", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/2c157c4cb27d318f55b5cc88716203bbc7aa8945", "committedDate": "2020-07-23T18:42:38Z", "message": "Make waiting async"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a879549bf869fa9711e1f00994fc75b595e15b03", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/a879549bf869fa9711e1f00994fc75b595e15b03", "committedDate": "2020-07-23T18:51:44Z", "message": "Make new CompletableFuture only if previous is done"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/dfe37094a198f8ec86b4092e894e0ffec68256ff", "committedDate": "2020-07-23T20:23:07Z", "message": "Fix starting non-UI thread for waiting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46b4cf4b026e2f7724a7092d8a92a24a507d7746", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/46b4cf4b026e2f7724a7092d8a92a24a507d7746", "committedDate": "2020-07-23T19:10:32Z", "message": "Enable and add key"}, "afterCommit": {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/dfe37094a198f8ec86b4092e894e0ffec68256ff", "committedDate": "2020-07-23T20:23:07Z", "message": "Fix starting non-UI thread for waiting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTE3NTQ2", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-454517546", "createdAt": "2020-07-23T21:45:49Z", "commit": {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTo0NTo0OVrOG2crPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTo0NTo0OVrOG2crPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NjEwOA==", "bodyText": "installation is never null. you could annotate it as non nullable.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459746108", "createdAt": "2020-07-23T21:45:49Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -58,8 +56,35 @@ public static JxBrowserManager getInstance() {\n     return manager;\n   }\n \n-  public boolean isInstalled() {\n-    return status.get().equals(JxBrowserStatus.INSTALLED);\n+  public JxBrowserStatus getStatus() {\n+    return status.get();\n+  }\n+\n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {\n+    if (installation == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTE3NzU1", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-454517755", "createdAt": "2020-07-23T21:46:15Z", "commit": {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTo0NjoxNVrOG2cr5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTo0NjoxNVrOG2cr5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NjI3Nw==", "bodyText": "nit: comment that you must call setup as well as calling this message or it will time out.", "url": "https://github.com/flutter/flutter-intellij/pull/4712#discussion_r459746277", "createdAt": "2020-07-23T21:46:15Z", "author": {"login": "jacob314"}, "path": "src/io/flutter/jxbrowser/JxBrowserManager.java", "diffHunk": "@@ -58,8 +56,35 @@ public static JxBrowserManager getInstance() {\n     return manager;\n   }\n \n-  public boolean isInstalled() {\n-    return status.get().equals(JxBrowserStatus.INSTALLED);\n+  public JxBrowserStatus getStatus() {\n+    return status.get();\n+  }\n+\n+  public JxBrowserStatus waitForInstallation(int seconds) throws TimeoutException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTE5NzYx", "url": "https://github.com/flutter/flutter-intellij/pull/4712#pullrequestreview-454519761", "createdAt": "2020-07-23T21:50:03Z", "commit": {"oid": "dfe37094a198f8ec86b4092e894e0ffec68256ff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f5733a1159cca25b07d3e6ebc292e63a0e3d24d", "author": {"user": {"login": "helin24", "name": "Helin Shiah"}}, "url": "https://github.com/flutter/flutter-intellij/commit/9f5733a1159cca25b07d3e6ebc292e63a0e3d24d", "committedDate": "2020-07-23T22:18:15Z", "message": "Add comment about calling setUp first, remove null check"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3150, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}