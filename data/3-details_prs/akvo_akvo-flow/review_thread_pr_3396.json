{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MTY5NzEw", "number": 3396, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTo1MDowMlrODbgrnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMToxODowOFrODcmRxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTczNTk5OnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AddDevices.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTo1MDowMlrOFjCUUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTo1Mzo1M1rOFjCcVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4MjQ1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const filteredDevices = devices.filter(device => !selectedDeviceIds.includes(device.id));\n          \n          \n            \n                const unSelectedDevices = devices.filter(device => !selectedDeviceIds.includes(device.id));", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372282450", "createdAt": "2020-01-29T09:50:02Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AddDevices.jsx", "diffHunk": "@@ -16,9 +16,7 @@ export default class AddDevice extends React.Component {\n     // filter out selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(\n-      device => !selectedDeviceIds.includes(device.id)\n-    );\n+    const filteredDevices = devices.filter(device => !selectedDeviceIds.includes(device.id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a92bb58fe48eae936a6060426a6cfa15f61cd2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NDUwMA==", "bodyText": "or something more descriptive of why the filtering is happening", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372284500", "createdAt": "2020-01-29T09:53:53Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AddDevices.jsx", "diffHunk": "@@ -16,9 +16,7 @@ export default class AddDevice extends React.Component {\n     // filter out selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(\n-      device => !selectedDeviceIds.includes(device.id)\n-    );\n+    const filteredDevices = devices.filter(device => !selectedDeviceIds.includes(device.id));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4MjQ1MA=="}, "originalCommit": {"oid": "41a92bb58fe48eae936a6060426a6cfa15f61cd2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTc1Njc0OnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTo1NjoyM1rOFjChYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDo1ODoyNlrOFjEYUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NTc5NA==", "bodyText": "Did you merge the code from the previous PR? I thought this one had changed...\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const filteredDevices = devices.filter(device => selectedDeviceIds.includes(device.id));\n          \n          \n            \n                const selectedDevices = devices.filter(device => selectedDeviceIds.includes(device.id));", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372285794", "createdAt": "2020-01-29T09:56:23Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "diffHunk": "@@ -16,9 +16,7 @@ export default class EditDevices extends React.Component {\n     // filter out selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(device =>\n-      selectedDeviceIds.includes(device.id)\n-    );\n+    const filteredDevices = devices.filter(device => selectedDeviceIds.includes(device.id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a92bb58fe48eae936a6060426a6cfa15f61cd2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNjI0MA==", "bodyText": "This is different", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372316240", "createdAt": "2020-01-29T10:58:26Z", "author": {"login": "marvinkome"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "diffHunk": "@@ -16,9 +16,7 @@ export default class EditDevices extends React.Component {\n     // filter out selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(device =>\n-      selectedDeviceIds.includes(device.id)\n-    );\n+    const filteredDevices = devices.filter(device => selectedDeviceIds.includes(device.id));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NTc5NA=="}, "originalCommit": {"oid": "41a92bb58fe48eae936a6060426a6cfa15f61cd2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTc2MzA4OnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTo1ODoxOFrOFjClXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTo1ODoxOFrOFjClXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NjgxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  newSelectedDevices = selectedDevices.filter(device => !ids.includes(device));\n          \n          \n            \n                  newSelectedDeviceIds = selectedDevicesIds.filter(deviceId => !ids.includes(deviceId));", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372286814", "createdAt": "2020-01-29T09:58:18Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "diffHunk": "@@ -43,9 +41,7 @@ export default class EditDevices extends React.Component {\n     if (checked) {\n       newSelectedDevices = selectedDevices.concat(ids);\n     } else {\n-      newSelectedDevices = selectedDevices.filter(\n-        device => !ids.includes(device)\n-      );\n+      newSelectedDevices = selectedDevices.filter(device => !ids.includes(device));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a92bb58fe48eae936a6060426a6cfa15f61cd2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTYyNDEyOnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/router/router.js", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMToyNDozNlrOFjnr4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNDo0MDo0NFrOFjtUtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ==", "bodyText": "I suspect this may be a bit problematic in terms of slowing down the loading of assignments but also loading possibly unnecessary dataPointAssignments that the user is not going to look at. What's your motivation for wanting to load the datapoint assignments already?", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372894689", "createdAt": "2020-01-30T11:24:36Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/router/router.js", "diffHunk": "@@ -231,9 +227,15 @@ FLOW.Router = Ember.Router.extend({\n       editSurveysAssignment: Ember.Route.extend({\n         route: '/assign-surveys',\n         connectOutlets(router) {\n-          router\n-            .get('navDevicesController')\n-            .connectOutlet('editSurveyAssignment');\n+          router.get('navDevicesController').connectOutlet('editSurveyAssignment');\n+\n+          // if editing fetch datapoints assignments,\n+          // else well, no need for datapoints assignments in a new assignments\n+          const assignmentId = FLOW.selectedControl.selectedSurveyAssignment.get('keyId');\n+          if (assignmentId) {\n+            FLOW.dataPointAssignmentControl.populate(assignmentId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk3MzU3NQ==", "bodyText": "I'm loading them here to be able to get each data point assignment when it's needed rather than making another API request when in the assignment. And also other checks like, when changing survey folder the datapoints assignments need to be removed, If they're not loaded it wouldn't know what to remove.", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372973575", "createdAt": "2020-01-30T14:18:32Z", "author": {"login": "marvinkome"}, "path": "Dashboard/app/js/lib/router/router.js", "diffHunk": "@@ -231,9 +227,15 @@ FLOW.Router = Ember.Router.extend({\n       editSurveysAssignment: Ember.Route.extend({\n         route: '/assign-surveys',\n         connectOutlets(router) {\n-          router\n-            .get('navDevicesController')\n-            .connectOutlet('editSurveyAssignment');\n+          router.get('navDevicesController').connectOutlet('editSurveyAssignment');\n+\n+          // if editing fetch datapoints assignments,\n+          // else well, no need for datapoints assignments in a new assignments\n+          const assignmentId = FLOW.selectedControl.selectedSurveyAssignment.get('keyId');\n+          if (assignmentId) {\n+            FLOW.dataPointAssignmentControl.populate(assignmentId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ=="}, "originalCommit": {"oid": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk3ODYxNA==", "bodyText": "Then maybe its enough to skip them if there is nothing to remove. and remove if there is something.  So right now you go to the assignments page, select an assignment to edit and there you see a form and a list of devices that are part of that assignment.  however, its only relevant to have information on the datapoint assignment if you actually select a specific device to look at. if you never select a device then we have spent resources and time loading up datapoint assignments which will not be used.  So I can understand the reasoning but I think it will slow down the performance unnecessarily.", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372978614", "createdAt": "2020-01-30T14:26:32Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/router/router.js", "diffHunk": "@@ -231,9 +227,15 @@ FLOW.Router = Ember.Router.extend({\n       editSurveysAssignment: Ember.Route.extend({\n         route: '/assign-surveys',\n         connectOutlets(router) {\n-          router\n-            .get('navDevicesController')\n-            .connectOutlet('editSurveyAssignment');\n+          router.get('navDevicesController').connectOutlet('editSurveyAssignment');\n+\n+          // if editing fetch datapoints assignments,\n+          // else well, no need for datapoints assignments in a new assignments\n+          const assignmentId = FLOW.selectedControl.selectedSurveyAssignment.get('keyId');\n+          if (assignmentId) {\n+            FLOW.dataPointAssignmentControl.populate(assignmentId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ=="}, "originalCommit": {"oid": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk4NjU0MQ==", "bodyText": "True, I see your point. So that means, only load datapoint related to a device when the user clicks on it.", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372986541", "createdAt": "2020-01-30T14:39:52Z", "author": {"login": "marvinkome"}, "path": "Dashboard/app/js/lib/router/router.js", "diffHunk": "@@ -231,9 +227,15 @@ FLOW.Router = Ember.Router.extend({\n       editSurveysAssignment: Ember.Route.extend({\n         route: '/assign-surveys',\n         connectOutlets(router) {\n-          router\n-            .get('navDevicesController')\n-            .connectOutlet('editSurveyAssignment');\n+          router.get('navDevicesController').connectOutlet('editSurveyAssignment');\n+\n+          // if editing fetch datapoints assignments,\n+          // else well, no need for datapoints assignments in a new assignments\n+          const assignmentId = FLOW.selectedControl.selectedSurveyAssignment.get('keyId');\n+          if (assignmentId) {\n+            FLOW.dataPointAssignmentControl.populate(assignmentId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ=="}, "originalCommit": {"oid": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk4NzA2MA==", "bodyText": "Yes exactly \ud83d\udc4d", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372987060", "createdAt": "2020-01-30T14:40:44Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/router/router.js", "diffHunk": "@@ -231,9 +227,15 @@ FLOW.Router = Ember.Router.extend({\n       editSurveysAssignment: Ember.Route.extend({\n         route: '/assign-surveys',\n         connectOutlets(router) {\n-          router\n-            .get('navDevicesController')\n-            .connectOutlet('editSurveyAssignment');\n+          router.get('navDevicesController').connectOutlet('editSurveyAssignment');\n+\n+          // if editing fetch datapoints assignments,\n+          // else well, no need for datapoints assignments in a new assignments\n+          const assignmentId = FLOW.selectedControl.selectedSurveyAssignment.get('keyId');\n+          if (assignmentId) {\n+            FLOW.dataPointAssignmentControl.populate(assignmentId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDY4OQ=="}, "originalCommit": {"oid": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTY2MTYyOnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/utils/index.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTozNzo0NVrOFjoCBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTozNzo0NVrOFjoCBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDM1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              if (!Ember.none(value)) {\n          \n          \n            \n              if (value) {\n          \n      \n    \n    \n  \n\nLets try to get rid of Ember where we can.", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372900359", "createdAt": "2020-01-30T11:37:45Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/utils/index.js", "diffHunk": "@@ -21,3 +21,10 @@ export function ArrNoDupe(a) {\n   }\n   return tempa;\n }\n+\n+export function formatDate(value) {\n+  if (!Ember.none(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTY2NjYwOnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/views/devices/assignment-edit-views.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTozOTo0N1rOFjoE-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTozOTo0N1rOFjoE-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMTExMg==", "bodyText": "this function is already defined on L44 right?", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r372901112", "createdAt": "2020-01-30T11:39:47Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/views/devices/assignment-edit-views.jsx", "diffHunk": "@@ -43,8 +37,15 @@ FLOW.AssignmentEditView = FLOW.ReactComponentView.extend(\n       this.addDevicesCheckedOption = this.addDevicesCheckedOption.bind(this);\n       this.addDevicesToAssignment = this.addDevicesToAssignment.bind(this);\n       this.removeDevicesFromAssignment = this.removeDevicesFromAssignment.bind(this);\n-      this.findDatapoints = this.findDatapoints.bind(this);\n+\n+      // datapoints methods\n+      this.saveDatapoints = this.saveDatapoints.bind(this);\n+      this.setupDatapoints = this.setupDatapoints.bind(this);\n+      this.getDeviceDatapoints = this.getDeviceDatapoints.bind(this);\n       this.detectDatapointsLoaded = this.detectDatapointsLoaded.bind(this);\n+      this.findDatapoints = this.findDatapoints.bind(this);\n+      this.detectSearchedDatapointLoaded = this.detectSearchedDatapointLoaded.bind(this);\n+      this.getDeviceDatapoints = this.getDeviceDatapoints.bind(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ff0201ff9f74cd746dfa1253fd77ca081fa354"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTYwOTE0OnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AssignDatapoints/index.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo1ODowM1rOFkN9Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo1ODowM1rOFkN9Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUyMTc2Nw==", "bodyText": "Dont you think this may end up tripping up people in the long run?  it works but its not clear which of the two is a number or string.  Can this be converted to all numbers without too much trouble?", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r373521767", "createdAt": "2020-01-31T14:58:03Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AssignDatapoints/index.jsx", "diffHunk": "@@ -19,8 +19,8 @@ export default class AssignDatapoints extends React.Component {\n     const { selectedDeviceId } = this.props;\n     const { devices, datapointAssignments } = this.context.data;\n \n-    const deviceData = devices.find(device => device.id === selectedDeviceId);\n-    const datapointAssignment = datapointAssignments.find(dp => dp.deviceId === selectedDeviceId);\n+    const deviceData = devices.find(device => device.id == selectedDeviceId);\n+    const datapointAssignment = datapointAssignments.find(dp => dp.deviceId == selectedDeviceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b0172800e6063c4e38f25140ba0ae1a050d3f5c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTYxMjYxOnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo1ODo1M1rOFkN_gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo1ODo1M1rOFkN_gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUyMjMwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  newSelectedDevicesIds = selectedDevicesIds.filter(device => device !== id);\n          \n          \n            \n                  newSelectedDevicesIds = selectedDevicesIds.filter(deviceId => deviceId !== id);", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r373522304", "createdAt": "2020-01-31T14:58:53Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "diffHunk": "@@ -9,64 +9,60 @@ import DeviceEmpty from '../__partials/DeviceEmpty';\n \n export default class EditDevices extends React.Component {\n   state = {\n-    selectedDevices: [],\n+    selectedDevicesIds: [],\n   };\n \n   getDeviceGroups() {\n-    // filter out selected devices\n+    // filter selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(device =>\n-      selectedDeviceIds.includes(device.id)\n-    );\n+    const selectedDevices = devices.filter(device => selectedDeviceIds.includes(device.id));\n \n-    return _groupBy(filteredDevices, device => device.deviceGroup.id);\n+    return _groupBy(selectedDevices, device => device.deviceGroup.id);\n   }\n \n   onSelectDevice = (id, checked) => {\n-    const { selectedDevices } = this.state;\n-    let newSelectedDevices = [];\n+    const { selectedDevicesIds } = this.state;\n+    let newSelectedDevicesIds = [];\n \n     if (checked) {\n-      newSelectedDevices = selectedDevices.concat(id);\n+      newSelectedDevicesIds = selectedDevicesIds.concat(id);\n     } else {\n-      newSelectedDevices = selectedDevices.filter(device => device !== id);\n+      newSelectedDevicesIds = selectedDevicesIds.filter(device => device !== id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b0172800e6063c4e38f25140ba0ae1a050d3f5c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTYxNDM2OnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo1OToyMlrOFkOAlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDo1OToyMlrOFkOAlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUyMjU4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  newSelectedDevicesIds = selectedDevicesIds.filter(device => !ids.includes(device));\n          \n          \n            \n                  newSelectedDevicesIds = selectedDevicesIds.filter(deviceId => !ids.includes(deviceId));", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r373522581", "createdAt": "2020-01-31T14:59:22Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/EditDevices.jsx", "diffHunk": "@@ -9,64 +9,60 @@ import DeviceEmpty from '../__partials/DeviceEmpty';\n \n export default class EditDevices extends React.Component {\n   state = {\n-    selectedDevices: [],\n+    selectedDevicesIds: [],\n   };\n \n   getDeviceGroups() {\n-    // filter out selected devices\n+    // filter selected devices\n     const { devices, selectedDeviceIds } = this.context.data;\n \n-    const filteredDevices = devices.filter(device =>\n-      selectedDeviceIds.includes(device.id)\n-    );\n+    const selectedDevices = devices.filter(device => selectedDeviceIds.includes(device.id));\n \n-    return _groupBy(filteredDevices, device => device.deviceGroup.id);\n+    return _groupBy(selectedDevices, device => device.deviceGroup.id);\n   }\n \n   onSelectDevice = (id, checked) => {\n-    const { selectedDevices } = this.state;\n-    let newSelectedDevices = [];\n+    const { selectedDevicesIds } = this.state;\n+    let newSelectedDevicesIds = [];\n \n     if (checked) {\n-      newSelectedDevices = selectedDevices.concat(id);\n+      newSelectedDevicesIds = selectedDevicesIds.concat(id);\n     } else {\n-      newSelectedDevices = selectedDevices.filter(device => device !== id);\n+      newSelectedDevicesIds = selectedDevicesIds.filter(device => device !== id);\n     }\n \n-    this.setState({ selectedDevices: newSelectedDevices });\n+    this.setState({ selectedDevicesIds: newSelectedDevicesIds });\n   };\n \n   onSelectMultipleDevices = (ids, checked) => {\n-    const { selectedDevices } = this.state;\n-    let newSelectedDevices = [...selectedDevices];\n+    const { selectedDevicesIds } = this.state;\n+    let newSelectedDevicesIds = [...selectedDevicesIds];\n \n     if (checked) {\n-      newSelectedDevices = selectedDevices.concat(ids);\n+      newSelectedDevicesIds = selectedDevicesIds.concat(ids);\n     } else {\n-      newSelectedDevices = selectedDevices.filter(\n-        device => !ids.includes(device)\n-      );\n+      newSelectedDevicesIds = selectedDevicesIds.filter(device => !ids.includes(device));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b0172800e6063c4e38f25140ba0ae1a050d3f5c"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzEzMTQ3OnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AssignDatapoints/index.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMToxNToyOVrOFkt_DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMToyMToyNlrOFkuIoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0NjQ3Nw==", "bodyText": "Instead of doing this I think its much clearer to set the property to a number. i.e.\nAssignDatapoints.propTypes = {\n  selectedDeviceId: PropTypes.number.isRequired,\n};", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r374046477", "createdAt": "2020-02-03T11:15:29Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AssignDatapoints/index.jsx", "diffHunk": "@@ -20,7 +20,9 @@ export default class AssignDatapoints extends React.Component {\n     const { devices, datapointAssignments } = this.context.data;\n \n     const deviceData = devices.find(device => device.id === selectedDeviceId);\n-    const datapointAssignment = datapointAssignments.find(dp => dp.deviceId === selectedDeviceId);\n+    const datapointAssignment = datapointAssignments.find(\n+      dp => dp.deviceId === parseInt(selectedDeviceId, 10)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b89f97b56e1a312220f456bea88764316df1b341"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0ODkyOA==", "bodyText": "Yeah, But in #3404 it's already converted to a number, this is like a minor hack to make sure this PR works", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r374048928", "createdAt": "2020-02-03T11:21:26Z", "author": {"login": "marvinkome"}, "path": "Dashboard/app/js/lib/components/devices/AssignmentsEditView/screens/AssignDatapoints/index.jsx", "diffHunk": "@@ -20,7 +20,9 @@ export default class AssignDatapoints extends React.Component {\n     const { devices, datapointAssignments } = this.context.data;\n \n     const deviceData = devices.find(device => device.id === selectedDeviceId);\n-    const datapointAssignment = datapointAssignments.find(dp => dp.deviceId === selectedDeviceId);\n+    const datapointAssignment = datapointAssignments.find(\n+      dp => dp.deviceId === parseInt(selectedDeviceId, 10)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0NjQ3Nw=="}, "originalCommit": {"oid": "b89f97b56e1a312220f456bea88764316df1b341"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzEzODYwOnYy", "diffSide": "RIGHT", "path": "Dashboard/app/js/lib/views/devices/assignment-edit-views.jsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMToxODowOFrOFkuDRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMToxODowOFrOFkuDRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA0NzU1Nw==", "bodyText": "Same here regarding setting the PropType", "url": "https://github.com/akvo/akvo-flow/pull/3396#discussion_r374047557", "createdAt": "2020-02-03T11:18:08Z", "author": {"login": "muloem"}, "path": "Dashboard/app/js/lib/views/devices/assignment-edit-views.jsx", "diffHunk": "@@ -706,7 +706,10 @@ FLOW.AssignmentEditView = FLOW.ReactComponentView.extend(\n       this.renderReactSide();\n     },\n \n-    assignDataPointsToDevice(datapoints, deviceId) {\n+    assignDataPointsToDevice(datapoints, deviceIdInString) {\n+      // convert devieId to number\n+      const deviceId = parseInt(deviceIdInString, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b89f97b56e1a312220f456bea88764316df1b341"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4632, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}