{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MTc2ODYx", "number": 3648, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTozMDozMlrOErIm0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTozMjozNFrOErIpnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjY1MjM0OnYy", "diffSide": "RIGHT", "path": "GAE/src/org/waterforpeople/mapping/app/web/SurveyInstanceServlet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTozMDozMlrOHdu1uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTozNTo0NlrOHdvAkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzODE3MQ==", "bodyText": "not sure if every exception is a not found exception \ud83e\udd14 ... maybe we need a couple of specific exceptions to know which kind was thrown (eg: DeviceNotFoundException) from the formInstanceUtil", "url": "https://github.com/akvo/akvo-flow/pull/3648#discussion_r500938171", "createdAt": "2020-10-07T11:30:32Z", "author": {"login": "tangrammer"}, "path": "GAE/src/org/waterforpeople/mapping/app/web/SurveyInstanceServlet.java", "diffHunk": "@@ -85,14 +90,21 @@ protected RestResponse handleRequest(RestRequest req) throws Exception {\n         if (GET_INSTANCE_DATA_ACTION.equals(siReq.getAction())) {\n             return retrieveInstanceData(siReq.surveyInstanceId);\n         } else  if (GET_FORM_INSTANCES_ACTION.equals(siReq.getAction())) {\n-            FormInstanceUtil formInstanceUtil = new FormInstanceUtil();\n-            List<SurveyInstance> formInstances = formInstanceUtil.getFormInstances(siReq.getAndroidId(), siReq.getDataPointIdentifier(), LIMIT_FORM_INSTANCES_30, siReq.getCursor());\n-\n             FormInstanceResponse response = new FormInstanceResponse();\n-            response.setSurveyInstances(formInstanceUtil.getFormInstancesDtoList(formInstances));\n-            response.setCursor(BaseDAO.getCursor(formInstances));\n-            response.setResultCount(formInstances.size());\n+            FormInstanceUtil formInstanceUtil = new FormInstanceUtil();\n \n+            try {\n+                List<SurveyInstance> formInstances = formInstanceUtil.getFormInstances(siReq.getAndroidId(), siReq.getDataPointIdentifier(), LIMIT_FORM_INSTANCES_30, siReq.getCursor());\n+                response.setSurveyInstances(formInstanceUtil.getFormInstancesDtoList(formInstances));\n+                response.setCursor(BaseDAO.getCursor(formInstances));\n+                response.setResultCount(formInstances.size());\n+\n+                return response;\n+            } catch (Exception e) {\n+                log.warning(\"Exception accessing endpoint: \" + e.getMessage());\n+                response.setCode(String.valueOf(HttpServletResponse.SC_NOT_FOUND));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "593d27410012040277154fc830d0db45b7562797"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk0MDk0Ng==", "bodyText": "then you enter in the longish conversation of checked vs unchecked exceptions. https://www.baeldung.com/java-checked-unchecked-exceptions", "url": "https://github.com/akvo/akvo-flow/pull/3648#discussion_r500940946", "createdAt": "2020-10-07T11:35:46Z", "author": {"login": "iperdomo"}, "path": "GAE/src/org/waterforpeople/mapping/app/web/SurveyInstanceServlet.java", "diffHunk": "@@ -85,14 +90,21 @@ protected RestResponse handleRequest(RestRequest req) throws Exception {\n         if (GET_INSTANCE_DATA_ACTION.equals(siReq.getAction())) {\n             return retrieveInstanceData(siReq.surveyInstanceId);\n         } else  if (GET_FORM_INSTANCES_ACTION.equals(siReq.getAction())) {\n-            FormInstanceUtil formInstanceUtil = new FormInstanceUtil();\n-            List<SurveyInstance> formInstances = formInstanceUtil.getFormInstances(siReq.getAndroidId(), siReq.getDataPointIdentifier(), LIMIT_FORM_INSTANCES_30, siReq.getCursor());\n-\n             FormInstanceResponse response = new FormInstanceResponse();\n-            response.setSurveyInstances(formInstanceUtil.getFormInstancesDtoList(formInstances));\n-            response.setCursor(BaseDAO.getCursor(formInstances));\n-            response.setResultCount(formInstances.size());\n+            FormInstanceUtil formInstanceUtil = new FormInstanceUtil();\n \n+            try {\n+                List<SurveyInstance> formInstances = formInstanceUtil.getFormInstances(siReq.getAndroidId(), siReq.getDataPointIdentifier(), LIMIT_FORM_INSTANCES_30, siReq.getCursor());\n+                response.setSurveyInstances(formInstanceUtil.getFormInstancesDtoList(formInstances));\n+                response.setCursor(BaseDAO.getCursor(formInstances));\n+                response.setResultCount(formInstances.size());\n+\n+                return response;\n+            } catch (Exception e) {\n+                log.warning(\"Exception accessing endpoint: \" + e.getMessage());\n+                response.setCode(String.valueOf(HttpServletResponse.SC_NOT_FOUND));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzODE3MQ=="}, "originalCommit": {"oid": "593d27410012040277154fc830d0db45b7562797"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjY1OTQ5OnYy", "diffSide": "RIGHT", "path": "GAE/src/org/waterforpeople/mapping/app/web/SurveyInstanceServlet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTozMjozNFrOHdu6Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTozMzo1NFrOHdu8wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzOTI4Mw==", "bodyText": "We're not using this class. Let's remove the import.", "url": "https://github.com/akvo/akvo-flow/pull/3648#discussion_r500939283", "createdAt": "2020-10-07T11:32:34Z", "author": {"login": "iperdomo"}, "path": "GAE/src/org/waterforpeople/mapping/app/web/SurveyInstanceServlet.java", "diffHunk": "@@ -18,14 +18,17 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.logging.Logger;\n \n import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n \n import com.gallatinsystems.framework.dao.BaseDAO;\n import org.akvo.flow.api.app.FormInstanceResponse;\n import org.akvo.flow.api.app.FormInstanceUtil;\n import org.akvo.flow.util.FlowJsonObjectWriter;\n import org.springframework.beans.BeanUtils;\n+import org.springframework.http.HttpStatus;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "593d27410012040277154fc830d0db45b7562797"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzOTk2OQ==", "bodyText": "Change made and pushed", "url": "https://github.com/akvo/akvo-flow/pull/3648#discussion_r500939969", "createdAt": "2020-10-07T11:33:54Z", "author": {"login": "iperdomo"}, "path": "GAE/src/org/waterforpeople/mapping/app/web/SurveyInstanceServlet.java", "diffHunk": "@@ -18,14 +18,17 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.logging.Logger;\n \n import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n \n import com.gallatinsystems.framework.dao.BaseDAO;\n import org.akvo.flow.api.app.FormInstanceResponse;\n import org.akvo.flow.api.app.FormInstanceUtil;\n import org.akvo.flow.util.FlowJsonObjectWriter;\n import org.springframework.beans.BeanUtils;\n+import org.springframework.http.HttpStatus;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzOTI4Mw=="}, "originalCommit": {"oid": "593d27410012040277154fc830d0db45b7562797"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4595, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}