{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNjM0OTIx", "number": 2632, "title": "[RESTEASY-2781] Clients running in a resource method throw safer WebA\u2026", "bodyText": "\u2026pplicationException", "createdAt": "2020-12-15T19:45:58Z", "url": "https://github.com/resteasy/resteasy/pull/2632", "merged": true, "mergeCommit": {"oid": "5c7757b6dc8972e51b6f7e97e7d2faed3378f280"}, "closed": true, "closedAt": "2020-12-23T22:53:21Z", "author": {"login": "ronsigal"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmjWWlgFqTU1MzEyNDQwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdpGYvXgFqTU1ODI0NDYwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMTI0NDAx", "url": "https://github.com/resteasy/resteasy/pull/2632#pullrequestreview-553124401", "createdAt": "2020-12-15T23:54:04Z", "commit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzo1NDowNFrOIGlSNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzo1Njo1MlrOIGlWlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MzIzOQ==", "bodyText": "This looks different from how we did it in the 3.x branches.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543773239", "createdAt": "2020-12-15T23:54:04Z", "author": {"login": "jamezp"}, "path": "resteasy-client-microprofile-base/src/main/java/org/jboss/resteasy/microprofile/client/DefaultResponseExceptionMapper.java", "diffHunk": "@@ -13,12 +18,15 @@ public Throwable toThrowable(Response response) {\n         try {\n             response.bufferEntity();\n         } catch (Exception ignored) {}\n-        return new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response);\n+        return WebApplicationExceptionWrapper.wrap(new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response));\n     }\n \n     @Override\n     public boolean handles(int status, MultivaluedMap headers) {\n-        return status >= 400;\n+       final Config config = ConfigProvider.getConfig();\n+       final boolean originalBehavior = config.getOptionalValue(ResteasyContextParameters.RESTEASY_ORIGINAL_WEBAPPLICATIONEXCEPTION_BEHAVIOR, boolean.class).orElse(false);\n+       final boolean serverSide = ResteasyDeployment.onServer();\n+       return status >= (originalBehavior || !serverSide ? 400 : 300);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDEyNg==", "bodyText": "Should this just be in the implementation and not the API?", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543774126", "createdAt": "2020-12-15T23:56:19Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ *\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.resteasy.client.exception;\n+\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.ClientErrorException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.NotAcceptableException;\n+import javax.ws.rs.NotAllowedException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.NotSupportedException;\n+import javax.ws.rs.RedirectionException;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.ServiceUnavailableException;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.jboss.resteasy.spi.ResteasyDeployment;\n+\n+/**\n+ * An interface which allows a {@link WebApplicationException} to be unwrapped.\n+ *\n+ * @author <a href=\"mailto:jperkins@redhat.com\">James R. Perkins</a>\n+ */\n+public interface WebApplicationExceptionWrapper<T extends WebApplicationException> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDM1OQ==", "bodyText": "This seems a little weird adding it to the API.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543774359", "createdAt": "2020-12-15T23:56:52Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/pom.xml", "diffHunk": "@@ -45,6 +45,21 @@\n             <artifactId>jakarta.json</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>org.eclipse.microprofile.config</groupId>\r\n+            <artifactId>microprofile-config-api</artifactId>\r\n+            <scope>compile</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>io.smallrye.config</groupId>\r\n+            <artifactId>smallrye-config</artifactId>\r\n+            <exclusions>\r\n+               <exclusion>\r\n+                  <groupId>javax.annotation</groupId>\r\n+                  <artifactId>javax.annotation-api</artifactId>\r\n+               </exclusion>\r\n+            </exclusions>\r\n+        </dependency>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NjA5NjEy", "url": "https://github.com/resteasy/resteasy/pull/2632#pullrequestreview-555609612", "createdAt": "2020-12-18T15:56:16Z", "commit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1NjoxN1rOIIotRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1NjoxN1rOIIotRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNjQ2OA==", "bodyText": "Thinking about this, would this take into account context parameters from a web.xml?", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r545926468", "createdAt": "2020-12-18T15:56:17Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ *\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.resteasy.client.exception;\n+\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.ClientErrorException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.NotAcceptableException;\n+import javax.ws.rs.NotAllowedException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.NotSupportedException;\n+import javax.ws.rs.RedirectionException;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.ServiceUnavailableException;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.jboss.resteasy.spi.ResteasyDeployment;\n+\n+/**\n+ * An interface which allows a {@link WebApplicationException} to be unwrapped.\n+ *\n+ * @author <a href=\"mailto:jperkins@redhat.com\">James R. Perkins</a>\n+ */\n+public interface WebApplicationExceptionWrapper<T extends WebApplicationException> {\n+\n+    /**\n+     * If the {@code resteasy.original.webapplicationexception.behavior} is set to {@code true} or the request is\n+     * determined to not be a server side request, then the {@link WebApplicationException} passed in will be returned.\n+     * If the property is not set to {@code true} and this is a server side request then the exception is wrapped and\n+     * the response is {@linkplain #sanitize(Response) sanitized}.\n+     *\n+     * @param e the exception to possibly wrapped\n+     *\n+     * @return the wrapped exception or the original exception if the exception has already been wrapped the the\n+     * wrapping feature is turned off\n+     */\n+    static WebApplicationException wrap(final WebApplicationException e) {\n+        final Config config = ConfigProvider.getConfig();\n+        final boolean originalBehavior = config.getOptionalValue(\"resteasy.original.webapplicationexception.behavior\", boolean.class).orElse(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5357be639b9b08f3e5b30f6bd111d47169bdc523", "author": {"user": {"login": "ronsigal", "name": "Ron Sigal"}}, "url": "https://github.com/resteasy/resteasy/commit/5357be639b9b08f3e5b30f6bd111d47169bdc523", "committedDate": "2020-12-23T21:26:15Z", "message": "[RESTEASY-2781] Clients running in a resource method throw safer WebApplicationException\n\n[RESTEASY-2781] Removed smallrye reference from resteasy-client-api POM."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318", "author": {"user": {"login": "ronsigal", "name": "Ron Sigal"}}, "url": "https://github.com/resteasy/resteasy/commit/4d71f60cdca3227665f6a24219de2a60cfd9a318", "committedDate": "2020-12-15T19:44:37Z", "message": "[RESTEASY-2781] Clients running in a resource method throw safer WebApplicationException"}, "afterCommit": {"oid": "5357be639b9b08f3e5b30f6bd111d47169bdc523", "author": {"user": {"login": "ronsigal", "name": "Ron Sigal"}}, "url": "https://github.com/resteasy/resteasy/commit/5357be639b9b08f3e5b30f6bd111d47169bdc523", "committedDate": "2020-12-23T21:26:15Z", "message": "[RESTEASY-2781] Clients running in a resource method throw safer WebApplicationException\n\n[RESTEASY-2781] Removed smallrye reference from resteasy-client-api POM."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MjQ0NjAw", "url": "https://github.com/resteasy/resteasy/pull/2632#pullrequestreview-558244600", "createdAt": "2020-12-23T21:54:35Z", "commit": {"oid": "5357be639b9b08f3e5b30f6bd111d47169bdc523"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1632, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}