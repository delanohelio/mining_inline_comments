{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTAzNTY5", "number": 2463, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNToxMjo1MFrOELR1cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yNFQxMjozMzo1OFrOGObahQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjYyMDAxOnYy", "diffSide": "RIGHT", "path": "resteasy-client/src/main/java/org/jboss/resteasy/client/jaxrs/internal/PublisherRxInvokerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNToxMjo1MFrOGszLFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNToxMjo1MFrOGszLFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYyODk0OA==", "bodyText": "Of course, these are still TBD.", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r449628948", "createdAt": "2020-07-03T15:12:50Z", "author": {"login": "crankydillo"}, "path": "resteasy-client/src/main/java/org/jboss/resteasy/client/jaxrs/internal/PublisherRxInvokerImpl.java", "diffHunk": "@@ -0,0 +1,152 @@\n+package org.jboss.resteasy.client.jaxrs.internal;\n+\n+import javax.ws.rs.HttpMethod;\n+import javax.ws.rs.client.Entity;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n+\n+import org.reactivestreams.Publisher;\n+\n+@SuppressWarnings(\"unchecked\")\n+public class PublisherRxInvokerImpl implements PublisherRxInvoker {\n+\n+    private final ClientInvocationBuilder builder;\n+\n+    public PublisherRxInvokerImpl(final ClientInvocationBuilder builder) {\n+        this.builder = builder;\n+    }\n+\n+    private ClientInvocation createClientInvocation(String method, Entity<?> entity)\n+    {\n+        ClientInvocation invocation = builder.createClientInvocation(builder.invocation);\n+        invocation.setMethod(method);\n+        invocation.setEntity(entity);\n+        return invocation;\n+    }\n+\n+    // TODO lots of code shared with CompletionStageRxInvokerImpl.  Isolate.\n+    @Override\n+    public Publisher<Response> get() {\n+        return createClientInvocation(HttpMethod.GET, null).submitRx();\n+    }\n+\n+    @Override\n+    public <T> Publisher<T> get(final Class<T> responseType) {\n+        return createClientInvocation(HttpMethod.GET, null).submitRx(responseType);\n+    }\n+\n+    @Override\n+    public <T> Publisher<T> get(final GenericType<T> responseType) {\n+        return createClientInvocation(HttpMethod.GET, null).submitRx(responseType);\n+    }\n+\n+    @Override\n+    public Publisher<Response> put(final Entity<?> entity) {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3663eb910e4810359ff6a6a123b140dda35e51"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDE1NzUwODU5OnYy", "diffSide": "RIGHT", "path": "resteasy-rxjava2/src/main/java/org/jboss/resteasy/rxjava2/SingleRxInvokerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0xOVQxOTo1NzoyM1rOJwf56g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yMVQyMTozNjo1OFrOJxWCVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDgzNDE1NA==", "bodyText": "Would it make sense to use Single.fromFuture() here?", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r654834154", "createdAt": "2021-06-19T19:57:23Z", "author": {"login": "ronsigal"}, "path": "resteasy-rxjava2/src/main/java/org/jboss/resteasy/rxjava2/SingleRxInvokerImpl.java", "diffHunk": "@@ -1,171 +1,189 @@\n package org.jboss.resteasy.rxjava2;\n \n-import javax.ws.rs.client.CompletionStageRxInvoker;\n import javax.ws.rs.client.Entity;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n \n+import io.reactivex.Flowable;\n import io.reactivex.Single;\n+import org.jboss.resteasy.client.jaxrs.internal.ClientInvocationBuilder;\n+import org.jboss.resteasy.client.jaxrs.internal.UniPublisherRxInvokerImpl;\n+import org.reactivestreams.Publisher;\n+\n+import java.util.Objects;\n+import java.util.concurrent.CompletionStage;\n \n @SuppressWarnings(\"unchecked\")\n public class SingleRxInvokerImpl implements SingleRxInvoker\n {\n-   private final CompletionStageRxInvoker completionStageRxInvoker;\n-   private final SingleProvider singleProvider;\n \n-   public SingleRxInvokerImpl(final CompletionStageRxInvoker completionStageRxInvoker)\n+   private final SinglePublisherInvoker publisherInvoker;\n+\n+   public SingleRxInvokerImpl(final ClientInvocationBuilder builder)\n+   {\n+      publisherInvoker = new SinglePublisherInvoker(Objects.requireNonNull(builder));\n+   }\n+\n+   static class SinglePublisherInvoker extends UniPublisherRxInvokerImpl\n    {\n-      this.completionStageRxInvoker = completionStageRxInvoker;\n-      this.singleProvider = new SingleProvider();\n+      SinglePublisherInvoker(final ClientInvocationBuilder builder)\n+      {\n+         super(builder);\n+      }\n+\n+      @Override\n+      protected <T> Publisher<T> toPublisher(CompletionStage<T> completable) {\n+         return Flowable.fromFuture(completable.toCompletableFuture());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5bc152abf62f05652dcaa6276de8016f050512"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTcyMTA0NA==", "bodyText": "Sorry. I missed this one.  Single#fromFuture won't get us a Publisher.", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r655721044", "createdAt": "2021-06-21T21:36:58Z", "author": {"login": "crankydillo"}, "path": "resteasy-rxjava2/src/main/java/org/jboss/resteasy/rxjava2/SingleRxInvokerImpl.java", "diffHunk": "@@ -1,171 +1,189 @@\n package org.jboss.resteasy.rxjava2;\n \n-import javax.ws.rs.client.CompletionStageRxInvoker;\n import javax.ws.rs.client.Entity;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n \n+import io.reactivex.Flowable;\n import io.reactivex.Single;\n+import org.jboss.resteasy.client.jaxrs.internal.ClientInvocationBuilder;\n+import org.jboss.resteasy.client.jaxrs.internal.UniPublisherRxInvokerImpl;\n+import org.reactivestreams.Publisher;\n+\n+import java.util.Objects;\n+import java.util.concurrent.CompletionStage;\n \n @SuppressWarnings(\"unchecked\")\n public class SingleRxInvokerImpl implements SingleRxInvoker\n {\n-   private final CompletionStageRxInvoker completionStageRxInvoker;\n-   private final SingleProvider singleProvider;\n \n-   public SingleRxInvokerImpl(final CompletionStageRxInvoker completionStageRxInvoker)\n+   private final SinglePublisherInvoker publisherInvoker;\n+\n+   public SingleRxInvokerImpl(final ClientInvocationBuilder builder)\n+   {\n+      publisherInvoker = new SinglePublisherInvoker(Objects.requireNonNull(builder));\n+   }\n+\n+   static class SinglePublisherInvoker extends UniPublisherRxInvokerImpl\n    {\n-      this.completionStageRxInvoker = completionStageRxInvoker;\n-      this.singleProvider = new SingleProvider();\n+      SinglePublisherInvoker(final ClientInvocationBuilder builder)\n+      {\n+         super(builder);\n+      }\n+\n+      @Override\n+      protected <T> Publisher<T> toPublisher(CompletionStage<T> completable) {\n+         return Flowable.fromFuture(completable.toCompletableFuture());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDgzNDE1NA=="}, "originalCommit": {"oid": "cf5bc152abf62f05652dcaa6276de8016f050512"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDE3NzgyNDA1OnYy", "diffSide": "RIGHT", "path": "docbook/reference/en/en-US/modules/RESTEasy_Client_Framework.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yNFQxMjozMzo1OFrOJzbTbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0yNFQxODo1MTozOFrOJztecw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzkwNDQ5NA==", "bodyText": "I like this change.\nAs an aside, I'm not sure how you got this into my PR.  I wasn't aware anyone could push to my repo:P  But.. you are welcome to! :)", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r657904494", "createdAt": "2021-06-24T12:33:58Z", "author": {"login": "crankydillo"}, "path": "docbook/reference/en/en-US/modules/RESTEasy_Client_Framework.xml", "diffHunk": "@@ -1059,8 +1059,25 @@ ResteasyClient client = ((ResteasyClientBuilder)ClientBuilder.newBuilder())\n         </programlisting>\r\n         <para>\r\n             When coupled with the MonoRxInvoker, this has several benefits.\r\n-            Most notably, a Reactor-based timeout will eagerly stop in-flight\r\n-            requests.\r\n+            It supports things like this:\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9b38d5d89aa6191b855a361ed32182bcf2830d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1ODIwMjIyNw==", "bodyText": "I'm not sure how you got this into my PR\n\nI guess I have some extra administrative powers because I can edit a file and commit it right on the spot. It's very convenient. I'm not sure what would happen if I tried to push to your repo. Sometimes I've been able to do that, and sometimes not.\nOld Lodge Skins: Am I still in this world?\nJack Crabb: Yes, Grandfather.\nOld Lodge Skins: [groans] I was afraid of that. Well, sometimes the magic works. Sometimes, it doesn't.", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r658202227", "createdAt": "2021-06-24T18:51:38Z", "author": {"login": "ronsigal"}, "path": "docbook/reference/en/en-US/modules/RESTEasy_Client_Framework.xml", "diffHunk": "@@ -1059,8 +1059,25 @@ ResteasyClient client = ((ResteasyClientBuilder)ClientBuilder.newBuilder())\n         </programlisting>\r\n         <para>\r\n             When coupled with the MonoRxInvoker, this has several benefits.\r\n-            Most notably, a Reactor-based timeout will eagerly stop in-flight\r\n-            requests.\r\n+            It supports things like this:\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzkwNDQ5NA=="}, "originalCommit": {"oid": "7d9b38d5d89aa6191b855a361ed32182bcf2830d"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4904, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}