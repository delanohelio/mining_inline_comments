{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NjU3NDE3", "number": 2361, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyNDowMlrOD1rjnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyNDowMlrOD1rjnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjE0NzQ4OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/sse/SseAPITest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyNDowMlrOGLOwPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMDozNToxMFrOGMMbuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyOTI0Nw==", "bodyText": "Shouldn't the client (and the event source) be closed before leaving the test?", "url": "https://github.com/resteasy/resteasy/pull/2361#discussion_r414429247", "createdAt": "2020-04-24T09:24:02Z", "author": {"login": "asoldano"}, "path": "testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/sse/SseAPITest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.jboss.resteasy.test.providers.sse;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.client.ClientBuilder;\n+import javax.ws.rs.client.WebTarget;\n+import javax.ws.rs.sse.SseEventSource;\n+\n+import org.jboss.arquillian.container.test.api.Deployment;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.resteasy.utils.PermissionUtil;\n+import org.jboss.resteasy.utils.PortProviderUtil;\n+import org.jboss.resteasy.utils.TestUtil;\n+import org.jboss.shrinkwrap.api.Archive;\n+import org.jboss.shrinkwrap.api.asset.EmptyAsset;\n+import org.jboss.shrinkwrap.api.spec.WebArchive;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class SseAPITest {\n+    @Deployment\n+    public static Archive<?> deploy() {\n+        WebArchive war = TestUtil.prepareArchive(SseAPITest.class.getSimpleName());\n+        war.addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\");\n+        war.addAsManifestResource(PermissionUtil.createPermissionsXmlAsset(new RuntimePermission(\"modifyThread\")),\n+                \"permissions.xml\");\n+        return TestUtil.finishContainerPrepare(war, null, SseAPIImpl.class, SseAPI.class);\n+    }\n+\n+    private String generateURL(String path) {\n+        return PortProviderUtil.generateURL(path, SseAPITest.class.getSimpleName());\n+    }\n+\n+    // test for RESTEASY-2017:SSE doesn't work with inherited annotations\n+    @Test\n+    public void testAnnotaitonInherited() throws Exception {\n+        final List<String> results = new ArrayList<String>();\n+        Client client = ClientBuilder.newBuilder().build();\n+        WebTarget target = client.target(generateURL(\"/apitest/events\"));\n+        SseEventSource msgEventSource = SseEventSource.target(target).build();\n+\n+        try (SseEventSource eventSource = msgEventSource) {\n+            CountDownLatch countDownLatch = new CountDownLatch(1);\n+            eventSource.register(event -> {\n+                countDownLatch.countDown();\n+                results.add(event.readData(String.class));\n+            }, e -> {\n+                throw new RuntimeException(e);\n+            });\n+            eventSource.open();\n+            WebTarget sendTarget = client.target(generateURL(\"/apitest/send\"));\n+            sendTarget.request().get();\n+            boolean result = countDownLatch.await(30, TimeUnit.SECONDS);\n+            Assert.assertTrue(\"Waiting for event to be delivered has timed out.\", result);\n+        }\n+        Assert.assertEquals(\"One event message was expected.\", 1, results.size());\n+        Assert.assertTrue(\"Expected event contains:AnnotationInheritedEvent, but is:\" + results.get(0),\n+                results.get(0).contains(\"AnnotationInheritedEvent\"));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6ff5ee23b16a3ce2792973e0fc30f169dc36a2d"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQzOTgwMQ==", "bodyText": "Fixed", "url": "https://github.com/resteasy/resteasy/pull/2361#discussion_r415439801", "createdAt": "2020-04-27T00:35:10Z", "author": {"login": "jimma"}, "path": "testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/sse/SseAPITest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.jboss.resteasy.test.providers.sse;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.client.ClientBuilder;\n+import javax.ws.rs.client.WebTarget;\n+import javax.ws.rs.sse.SseEventSource;\n+\n+import org.jboss.arquillian.container.test.api.Deployment;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.resteasy.utils.PermissionUtil;\n+import org.jboss.resteasy.utils.PortProviderUtil;\n+import org.jboss.resteasy.utils.TestUtil;\n+import org.jboss.shrinkwrap.api.Archive;\n+import org.jboss.shrinkwrap.api.asset.EmptyAsset;\n+import org.jboss.shrinkwrap.api.spec.WebArchive;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class SseAPITest {\n+    @Deployment\n+    public static Archive<?> deploy() {\n+        WebArchive war = TestUtil.prepareArchive(SseAPITest.class.getSimpleName());\n+        war.addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\");\n+        war.addAsManifestResource(PermissionUtil.createPermissionsXmlAsset(new RuntimePermission(\"modifyThread\")),\n+                \"permissions.xml\");\n+        return TestUtil.finishContainerPrepare(war, null, SseAPIImpl.class, SseAPI.class);\n+    }\n+\n+    private String generateURL(String path) {\n+        return PortProviderUtil.generateURL(path, SseAPITest.class.getSimpleName());\n+    }\n+\n+    // test for RESTEASY-2017:SSE doesn't work with inherited annotations\n+    @Test\n+    public void testAnnotaitonInherited() throws Exception {\n+        final List<String> results = new ArrayList<String>();\n+        Client client = ClientBuilder.newBuilder().build();\n+        WebTarget target = client.target(generateURL(\"/apitest/events\"));\n+        SseEventSource msgEventSource = SseEventSource.target(target).build();\n+\n+        try (SseEventSource eventSource = msgEventSource) {\n+            CountDownLatch countDownLatch = new CountDownLatch(1);\n+            eventSource.register(event -> {\n+                countDownLatch.countDown();\n+                results.add(event.readData(String.class));\n+            }, e -> {\n+                throw new RuntimeException(e);\n+            });\n+            eventSource.open();\n+            WebTarget sendTarget = client.target(generateURL(\"/apitest/send\"));\n+            sendTarget.request().get();\n+            boolean result = countDownLatch.await(30, TimeUnit.SECONDS);\n+            Assert.assertTrue(\"Waiting for event to be delivered has timed out.\", result);\n+        }\n+        Assert.assertEquals(\"One event message was expected.\", 1, results.size());\n+        Assert.assertTrue(\"Expected event contains:AnnotationInheritedEvent, but is:\" + results.get(0),\n+                results.get(0).contains(\"AnnotationInheritedEvent\"));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyOTI0Nw=="}, "originalCommit": {"oid": "f6ff5ee23b16a3ce2792973e0fc30f169dc36a2d"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4935, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}