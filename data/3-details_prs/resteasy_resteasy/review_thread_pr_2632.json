{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNjM0OTIx", "number": 2632, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzo1NDowNFrOFF3QeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1NjoxN1rOFHPomw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjkyNTM2OnYy", "diffSide": "RIGHT", "path": "resteasy-client-microprofile-base/src/main/java/org/jboss/resteasy/microprofile/client/DefaultResponseExceptionMapper.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzo1NDowNFrOIGlSNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjo1MjoyMFrOIHPKlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MzIzOQ==", "bodyText": "This looks different from how we did it in the 3.x branches.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543773239", "createdAt": "2020-12-15T23:54:04Z", "author": {"login": "jamezp"}, "path": "resteasy-client-microprofile-base/src/main/java/org/jboss/resteasy/microprofile/client/DefaultResponseExceptionMapper.java", "diffHunk": "@@ -13,12 +18,15 @@ public Throwable toThrowable(Response response) {\n         try {\n             response.bufferEntity();\n         } catch (Exception ignored) {}\n-        return new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response);\n+        return WebApplicationExceptionWrapper.wrap(new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response));\n     }\n \n     @Override\n     public boolean handles(int status, MultivaluedMap headers) {\n-        return status >= 400;\n+       final Config config = ConfigProvider.getConfig();\n+       final boolean originalBehavior = config.getOptionalValue(ResteasyContextParameters.RESTEASY_ORIGINAL_WEBAPPLICATIONEXCEPTION_BEHAVIOR, boolean.class).orElse(false);\n+       final boolean serverSide = ResteasyDeployment.onServer();\n+       return status >= (originalBehavior || !serverSide ? 400 : 300);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxMzU2OA==", "bodyText": "I realized as I was releasing 3.11.3.Final that I had changed the test to include 3xx statuses, which makes sense, I think, since the same leakage problem applies. There was a deadline for 3.11.3.Final and I didn't have time to change that, but I did it for 3.14.0.Final. So asking for the original behavior affects this class too.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543813568", "createdAt": "2020-12-16T01:39:29Z", "author": {"login": "ronsigal"}, "path": "resteasy-client-microprofile-base/src/main/java/org/jboss/resteasy/microprofile/client/DefaultResponseExceptionMapper.java", "diffHunk": "@@ -13,12 +18,15 @@ public Throwable toThrowable(Response response) {\n         try {\n             response.bufferEntity();\n         } catch (Exception ignored) {}\n-        return new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response);\n+        return WebApplicationExceptionWrapper.wrap(new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response));\n     }\n \n     @Override\n     public boolean handles(int status, MultivaluedMap headers) {\n-        return status >= 400;\n+       final Config config = ConfigProvider.getConfig();\n+       final boolean originalBehavior = config.getOptionalValue(ResteasyContextParameters.RESTEASY_ORIGINAL_WEBAPPLICATIONEXCEPTION_BEHAVIOR, boolean.class).orElse(false);\n+       final boolean serverSide = ResteasyDeployment.onServer();\n+       return status >= (originalBehavior || !serverSide ? 400 : 300);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MzIzOQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQwNDk5OA==", "bodyText": "Okay. Maybe not a huge deal, but that's going to be different for EAP 7.3 and EAP 7.4 then. I'll have to back-port that fix to the 3.12 and 3.13 PR's I guess too.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544404998", "createdAt": "2020-12-16T15:45:11Z", "author": {"login": "jamezp"}, "path": "resteasy-client-microprofile-base/src/main/java/org/jboss/resteasy/microprofile/client/DefaultResponseExceptionMapper.java", "diffHunk": "@@ -13,12 +18,15 @@ public Throwable toThrowable(Response response) {\n         try {\n             response.bufferEntity();\n         } catch (Exception ignored) {}\n-        return new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response);\n+        return WebApplicationExceptionWrapper.wrap(new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response));\n     }\n \n     @Override\n     public boolean handles(int status, MultivaluedMap headers) {\n-        return status >= 400;\n+       final Config config = ConfigProvider.getConfig();\n+       final boolean originalBehavior = config.getOptionalValue(ResteasyContextParameters.RESTEASY_ORIGINAL_WEBAPPLICATIONEXCEPTION_BEHAVIOR, boolean.class).orElse(false);\n+       final boolean serverSide = ResteasyDeployment.onServer();\n+       return status >= (originalBehavior || !serverSide ? 400 : 300);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MzIzOQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1OTQxNQ==", "bodyText": "Yeah, my bad.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544459415", "createdAt": "2020-12-16T16:52:20Z", "author": {"login": "ronsigal"}, "path": "resteasy-client-microprofile-base/src/main/java/org/jboss/resteasy/microprofile/client/DefaultResponseExceptionMapper.java", "diffHunk": "@@ -13,12 +18,15 @@ public Throwable toThrowable(Response response) {\n         try {\n             response.bufferEntity();\n         } catch (Exception ignored) {}\n-        return new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response);\n+        return WebApplicationExceptionWrapper.wrap(new WebApplicationException(\"Unknown error, status code \" + response.getStatus(), response));\n     }\n \n     @Override\n     public boolean handles(int status, MultivaluedMap headers) {\n-        return status >= 400;\n+       final Config config = ConfigProvider.getConfig();\n+       final boolean originalBehavior = config.getOptionalValue(ResteasyContextParameters.RESTEASY_ORIGINAL_WEBAPPLICATIONEXCEPTION_BEHAVIOR, boolean.class).orElse(false);\n+       final boolean serverSide = ResteasyDeployment.onServer();\n+       return status >= (originalBehavior || !serverSide ? 400 : 300);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MzIzOQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjkzMTU3OnYy", "diffSide": "RIGHT", "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzo1NjoxOVrOIGlVrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo0Mzo1N1rOIHWMIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDEyNg==", "bodyText": "Should this just be in the implementation and not the API?", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543774126", "createdAt": "2020-12-15T23:56:19Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ *\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.resteasy.client.exception;\n+\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.ClientErrorException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.NotAcceptableException;\n+import javax.ws.rs.NotAllowedException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.NotSupportedException;\n+import javax.ws.rs.RedirectionException;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.ServiceUnavailableException;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.jboss.resteasy.spi.ResteasyDeployment;\n+\n+/**\n+ * An interface which allows a {@link WebApplicationException} to be unwrapped.\n+ *\n+ * @author <a href=\"mailto:jperkins@redhat.com\">James R. Perkins</a>\n+ */\n+public interface WebApplicationExceptionWrapper<T extends WebApplicationException> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxNDUzOQ==", "bodyText": "Hmmm. The new Exceptions depend on it:\npublic class ResteasyBadRequestException extends BadRequestException implements WebApplicationExceptionWrapper<BadRequestException> {", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543814539", "createdAt": "2020-12-16T01:41:59Z", "author": {"login": "ronsigal"}, "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ *\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.resteasy.client.exception;\n+\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.ClientErrorException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.NotAcceptableException;\n+import javax.ws.rs.NotAllowedException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.NotSupportedException;\n+import javax.ws.rs.RedirectionException;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.ServiceUnavailableException;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.jboss.resteasy.spi.ResteasyDeployment;\n+\n+/**\n+ * An interface which allows a {@link WebApplicationException} to be unwrapped.\n+ *\n+ * @author <a href=\"mailto:jperkins@redhat.com\">James R. Perkins</a>\n+ */\n+public interface WebApplicationExceptionWrapper<T extends WebApplicationException> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDEyNg=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxNTIzNg==", "bodyText": "Maybe there's a better way ...", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543815236", "createdAt": "2020-12-16T01:43:50Z", "author": {"login": "ronsigal"}, "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ *\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.resteasy.client.exception;\n+\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.ClientErrorException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.NotAcceptableException;\n+import javax.ws.rs.NotAllowedException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.NotSupportedException;\n+import javax.ws.rs.RedirectionException;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.ServiceUnavailableException;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.jboss.resteasy.spi.ResteasyDeployment;\n+\n+/**\n+ * An interface which allows a {@link WebApplicationException} to be unwrapped.\n+ *\n+ * @author <a href=\"mailto:jperkins@redhat.com\">James R. Perkins</a>\n+ */\n+public interface WebApplicationExceptionWrapper<T extends WebApplicationException> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDEyNg=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQwNzUyMA==", "bodyText": "Well the more I think about it the example I'd done originally should work too. I forgot in general that the RESTEasy 4.x is not backwards compatible with 3.x. I should have designed this a little better because it does seem weird to have this in the API. It makes the API know too much about the implementation.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544407520", "createdAt": "2020-12-16T15:48:07Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ *\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.resteasy.client.exception;\n+\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.ClientErrorException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.NotAcceptableException;\n+import javax.ws.rs.NotAllowedException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.NotSupportedException;\n+import javax.ws.rs.RedirectionException;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.ServiceUnavailableException;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.jboss.resteasy.spi.ResteasyDeployment;\n+\n+/**\n+ * An interface which allows a {@link WebApplicationException} to be unwrapped.\n+ *\n+ * @author <a href=\"mailto:jperkins@redhat.com\">James R. Perkins</a>\n+ */\n+public interface WebApplicationExceptionWrapper<T extends WebApplicationException> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDEyNg=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUxNzY1OQ==", "bodyText": "the example I'd done originally should work too\n\nWhat example is that?", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544517659", "createdAt": "2020-12-16T18:14:48Z", "author": {"login": "ronsigal"}, "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ *\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.resteasy.client.exception;\n+\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.ClientErrorException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.NotAcceptableException;\n+import javax.ws.rs.NotAllowedException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.NotSupportedException;\n+import javax.ws.rs.RedirectionException;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.ServiceUnavailableException;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.jboss.resteasy.spi.ResteasyDeployment;\n+\n+/**\n+ * An interface which allows a {@link WebApplicationException} to be unwrapped.\n+ *\n+ * @author <a href=\"mailto:jperkins@redhat.com\">James R. Perkins</a>\n+ */\n+public interface WebApplicationExceptionWrapper<T extends WebApplicationException> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDEyNg=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3NDQ5OQ==", "bodyText": "jamezp@2a19fc5", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544574499", "createdAt": "2020-12-16T19:43:57Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ *\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.resteasy.client.exception;\n+\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.ClientErrorException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.NotAcceptableException;\n+import javax.ws.rs.NotAllowedException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.NotSupportedException;\n+import javax.ws.rs.RedirectionException;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.ServiceUnavailableException;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.jboss.resteasy.spi.ResteasyDeployment;\n+\n+/**\n+ * An interface which allows a {@link WebApplicationException} to be unwrapped.\n+ *\n+ * @author <a href=\"mailto:jperkins@redhat.com\">James R. Perkins</a>\n+ */\n+public interface WebApplicationExceptionWrapper<T extends WebApplicationException> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDEyNg=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjkzMzMxOnYy", "diffSide": "RIGHT", "path": "resteasy-client-api/pom.xml", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzo1Njo1MlrOIGlWlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMToyNzo1M1rOIHZ58A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDM1OQ==", "bodyText": "This seems a little weird adding it to the API.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543774359", "createdAt": "2020-12-15T23:56:52Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/pom.xml", "diffHunk": "@@ -45,6 +45,21 @@\n             <artifactId>jakarta.json</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>org.eclipse.microprofile.config</groupId>\r\n+            <artifactId>microprofile-config-api</artifactId>\r\n+            <scope>compile</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>io.smallrye.config</groupId>\r\n+            <artifactId>smallrye-config</artifactId>\r\n+            <exclusions>\r\n+               <exclusion>\r\n+                  <groupId>javax.annotation</groupId>\r\n+                  <artifactId>javax.annotation-api</artifactId>\r\n+               </exclusion>\r\n+            </exclusions>\r\n+        </dependency>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxNTI4OQ==", "bodyText": "Well, it's related to your previous comment, since WebApplicationExceptionWrapper uses MP Config:\n    static WebApplicationException wrap(final WebApplicationException e) {\n        final Config config = ConfigProvider.getConfig();\n        final boolean originalBehavior = config.getOptionalValue(\"resteasy.original.webapplicationexception.behavior\", boolean.class).orElse(false);", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r543815289", "createdAt": "2020-12-16T01:43:59Z", "author": {"login": "ronsigal"}, "path": "resteasy-client-api/pom.xml", "diffHunk": "@@ -45,6 +45,21 @@\n             <artifactId>jakarta.json</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>org.eclipse.microprofile.config</groupId>\r\n+            <artifactId>microprofile-config-api</artifactId>\r\n+            <scope>compile</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>io.smallrye.config</groupId>\r\n+            <artifactId>smallrye-config</artifactId>\r\n+            <exclusions>\r\n+               <exclusion>\r\n+                  <groupId>javax.annotation</groupId>\r\n+                  <artifactId>javax.annotation-api</artifactId>\r\n+               </exclusion>\r\n+            </exclusions>\r\n+        </dependency>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDM1OQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQwODE2Mg==", "bodyText": "Yeah. I think we should find a way to keep this part in the implementation. It feels like implementation details are leaking into the API here.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544408162", "createdAt": "2020-12-16T15:48:52Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/pom.xml", "diffHunk": "@@ -45,6 +45,21 @@\n             <artifactId>jakarta.json</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>org.eclipse.microprofile.config</groupId>\r\n+            <artifactId>microprofile-config-api</artifactId>\r\n+            <scope>compile</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>io.smallrye.config</groupId>\r\n+            <artifactId>smallrye-config</artifactId>\r\n+            <exclusions>\r\n+               <exclusion>\r\n+                  <groupId>javax.annotation</groupId>\r\n+                  <artifactId>javax.annotation-api</artifactId>\r\n+               </exclusion>\r\n+            </exclusions>\r\n+        </dependency>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDM1OQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUxNjYxNg==", "bodyText": "I'm not sure I'm following. \"resteasy.original.webapplicationexception.behavior\" is meant to be available to the user ...", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544516616", "createdAt": "2020-12-16T18:13:18Z", "author": {"login": "ronsigal"}, "path": "resteasy-client-api/pom.xml", "diffHunk": "@@ -45,6 +45,21 @@\n             <artifactId>jakarta.json</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>org.eclipse.microprofile.config</groupId>\r\n+            <artifactId>microprofile-config-api</artifactId>\r\n+            <scope>compile</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>io.smallrye.config</groupId>\r\n+            <artifactId>smallrye-config</artifactId>\r\n+            <exclusions>\r\n+               <exclusion>\r\n+                  <groupId>javax.annotation</groupId>\r\n+                  <artifactId>javax.annotation-api</artifactId>\r\n+               </exclusion>\r\n+            </exclusions>\r\n+        </dependency>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDM1OQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUxNzE3Mw==", "bodyText": "In fact, maybe all of those user facing parameter names should be in resteasy-core-spi ... ?", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544517173", "createdAt": "2020-12-16T18:14:08Z", "author": {"login": "ronsigal"}, "path": "resteasy-client-api/pom.xml", "diffHunk": "@@ -45,6 +45,21 @@\n             <artifactId>jakarta.json</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>org.eclipse.microprofile.config</groupId>\r\n+            <artifactId>microprofile-config-api</artifactId>\r\n+            <scope>compile</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>io.smallrye.config</groupId>\r\n+            <artifactId>smallrye-config</artifactId>\r\n+            <exclusions>\r\n+               <exclusion>\r\n+                  <groupId>javax.annotation</groupId>\r\n+                  <artifactId>javax.annotation-api</artifactId>\r\n+               </exclusion>\r\n+            </exclusions>\r\n+        </dependency>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDM1OQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3NTM0OQ==", "bodyText": "The parameter is fine, but the way we retrieve is the implementation detail right? For example using the Config API is an implementation detail of where the property is stored.", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544575349", "createdAt": "2020-12-16T19:45:19Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/pom.xml", "diffHunk": "@@ -45,6 +45,21 @@\n             <artifactId>jakarta.json</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>org.eclipse.microprofile.config</groupId>\r\n+            <artifactId>microprofile-config-api</artifactId>\r\n+            <scope>compile</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>io.smallrye.config</groupId>\r\n+            <artifactId>smallrye-config</artifactId>\r\n+            <exclusions>\r\n+               <exclusion>\r\n+                  <groupId>javax.annotation</groupId>\r\n+                  <artifactId>javax.annotation-api</artifactId>\r\n+               </exclusion>\r\n+            </exclusions>\r\n+        </dependency>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDM1OQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYyOTY0Nw==", "bodyText": "Ah, I didn't see this when I just responded to your email. I guess in my mind, MP Config is like the US dollar ... the global standard. But, you're right, maybe next year will be using NanoProfile Config. ;-)", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544629647", "createdAt": "2020-12-16T21:18:07Z", "author": {"login": "ronsigal"}, "path": "resteasy-client-api/pom.xml", "diffHunk": "@@ -45,6 +45,21 @@\n             <artifactId>jakarta.json</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>org.eclipse.microprofile.config</groupId>\r\n+            <artifactId>microprofile-config-api</artifactId>\r\n+            <scope>compile</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>io.smallrye.config</groupId>\r\n+            <artifactId>smallrye-config</artifactId>\r\n+            <exclusions>\r\n+               <exclusion>\r\n+                  <groupId>javax.annotation</groupId>\r\n+                  <artifactId>javax.annotation-api</artifactId>\r\n+               </exclusion>\r\n+            </exclusions>\r\n+        </dependency>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDM1OQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTM3Ng==", "bodyText": "Ha these days you never know :)", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r544635376", "createdAt": "2020-12-16T21:27:53Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/pom.xml", "diffHunk": "@@ -45,6 +45,21 @@\n             <artifactId>jakarta.json</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n+        <dependency>\r\n+            <groupId>org.eclipse.microprofile.config</groupId>\r\n+            <artifactId>microprofile-config-api</artifactId>\r\n+            <scope>compile</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>io.smallrye.config</groupId>\r\n+            <artifactId>smallrye-config</artifactId>\r\n+            <exclusions>\r\n+               <exclusion>\r\n+                  <groupId>javax.annotation</groupId>\r\n+                  <artifactId>javax.annotation-api</artifactId>\r\n+               </exclusion>\r\n+            </exclusions>\r\n+        </dependency>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDM1OQ=="}, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTQwNTA3OnYy", "diffSide": "RIGHT", "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1NjoxN1rOIIotRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1NjoxN1rOIIotRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNjQ2OA==", "bodyText": "Thinking about this, would this take into account context parameters from a web.xml?", "url": "https://github.com/resteasy/resteasy/pull/2632#discussion_r545926468", "createdAt": "2020-12-18T15:56:17Z", "author": {"login": "jamezp"}, "path": "resteasy-client-api/src/main/java/org/jboss/resteasy/client/exception/WebApplicationExceptionWrapper.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ *\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.resteasy.client.exception;\n+\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.ClientErrorException;\n+import javax.ws.rs.ForbiddenException;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.NotAcceptableException;\n+import javax.ws.rs.NotAllowedException;\n+import javax.ws.rs.NotAuthorizedException;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.NotSupportedException;\n+import javax.ws.rs.RedirectionException;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.ServiceUnavailableException;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.jboss.resteasy.spi.ResteasyDeployment;\n+\n+/**\n+ * An interface which allows a {@link WebApplicationException} to be unwrapped.\n+ *\n+ * @author <a href=\"mailto:jperkins@redhat.com\">James R. Perkins</a>\n+ */\n+public interface WebApplicationExceptionWrapper<T extends WebApplicationException> {\n+\n+    /**\n+     * If the {@code resteasy.original.webapplicationexception.behavior} is set to {@code true} or the request is\n+     * determined to not be a server side request, then the {@link WebApplicationException} passed in will be returned.\n+     * If the property is not set to {@code true} and this is a server side request then the exception is wrapped and\n+     * the response is {@linkplain #sanitize(Response) sanitized}.\n+     *\n+     * @param e the exception to possibly wrapped\n+     *\n+     * @return the wrapped exception or the original exception if the exception has already been wrapped the the\n+     * wrapping feature is turned off\n+     */\n+    static WebApplicationException wrap(final WebApplicationException e) {\n+        final Config config = ConfigProvider.getConfig();\n+        final boolean originalBehavior = config.getOptionalValue(\"resteasy.original.webapplicationexception.behavior\", boolean.class).orElse(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d71f60cdca3227665f6a24219de2a60cfd9a318"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4882, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}