{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NTAyNjI0", "number": 313, "title": "Make EntrypointContainer lazy", "bodyText": "LazyEntrypointContainers are EntrypointContainers that only construct their entrypoint once it's requested. This is intended for situations where you must run some code specific to the ModContainer before constructing an entrypoint.\nEntrypointContainers now only create the entrypoint instance once it is requested, instead of during the construction of the container.\nMy use-case is that I have a global context state that keeps track of which mod's entrypoint currently has code running (Patchwork).\nIf the mod runs code before I set the context, it opens up to undefined behavior that can go from a NullPointerException to registering events/etc. under a different mod id, which would only show its true colors in very specific situations and be extremely difficult to debug.\nAs far as I know there's no way to do this in Loader without doing something like keying your entrypoint name (i.e. patchwork:mod_instance:mymodid) so that requesting the entrypoint only loads the target mod's entrypoint. This solution is much cleaner that that from both a (Patchwork) loader and modder perspective.", "createdAt": "2020-10-04T21:34:04Z", "url": "https://github.com/FabricMC/fabric-loader/pull/313", "merged": true, "mergeCommit": {"oid": "33a9bde440f982c4c9c33e61883e43dec7a3597f"}, "closed": true, "closedAt": "2021-01-10T18:12:02Z", "author": {"login": "TheGlitch76"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPWB7ZgH2gAyNDk3NTAyNjI0OjY1YjkxYmMzZjUwOGEwMGY3NTUyZDUwZjE1NDQ3YmU5ZjYzMjY0YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdu13Q6gFqTU2NDg4Njg4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "65b91bc3f508a00f7552d50f15447be9f63264ae", "author": {"user": {"login": "TheGlitch76", "name": "Glitch"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/65b91bc3f508a00f7552d50f15447be9f63264ae", "committedDate": "2020-10-04T21:26:07Z", "message": "Add LazyEntrypointContainer\n\nLazyEntrypointContainers are EntrypointContainers that only construct their entrypoint once it's requested. This is intended for situations where you must run some code specific to the ModContainer before constructing an entrypoint."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70de32cb688878164bf3507683e98838a4ab60a1", "author": {"user": {"login": "TheGlitch76", "name": "Glitch"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/70de32cb688878164bf3507683e98838a4ab60a1", "committedDate": "2020-10-04T21:45:24Z", "message": "Make LazyEntrypointContainer exceptions match EntrypointContainer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjY1MTg5", "url": "https://github.com/FabricMC/fabric-loader/pull/313#pullrequestreview-501665189", "createdAt": "2020-10-04T22:32:23Z", "commit": {"oid": "70de32cb688878164bf3507683e98838a4ab60a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjozMjoyM1rOHcKmcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjozMjoyM1rOHcKmcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5NTg1Nw==", "bodyText": "A behavior change where existing entrypoints will not create the instance until you ask for it via getEntrypoint() is what I'd prefer probably. You can't really do much via relying on the ctor of the entrypoint in order to instantiate everything.\nIn the case of patchwork, you'd obviously get what you want with a behavior change. If you are relying on the instance being created when you resolve the list then I feel that is a horrible hack.", "url": "https://github.com/FabricMC/fabric-loader/pull/313#discussion_r499295857", "createdAt": "2020-10-04T22:32:23Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/EntrypointStorage.java", "diffHunk": "@@ -203,4 +205,23 @@ boolean hasEntrypoints(String key) {\n \n \t\treturn results;\n \t}\n+\n+\tprotected <T> List<LazyEntrypointContainer<T>> getLazyEntrypointContainers(String key, Class<T> type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70de32cb688878164bf3507683e98838a4ab60a1"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b1717fe6e898c8ce329e9681593b9d5c413afc2", "author": {"user": {"login": "TheGlitch76", "name": "Glitch"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/5b1717fe6e898c8ce329e9681593b9d5c413afc2", "committedDate": "2020-10-05T21:49:07Z", "message": "Make EntrypointContainer only create the entrypoint's instance once\nit is requested"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjE0MTkz", "url": "https://github.com/FabricMC/fabric-loader/pull/313#pullrequestreview-544614193", "createdAt": "2020-12-04T02:32:24Z", "commit": {"oid": "5b1717fe6e898c8ce329e9681593b9d5c413afc2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDAzNDcz", "url": "https://github.com/FabricMC/fabric-loader/pull/313#pullrequestreview-550003473", "createdAt": "2020-12-11T11:06:08Z", "commit": {"oid": "5b1717fe6e898c8ce329e9681593b9d5c413afc2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMTowNjowOFrOID0AuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMTowNjowOFrOID0AuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg2ODc5Mg==", "bodyText": "This should be made thread safe, the easiest solution is making the entire method synchronized.", "url": "https://github.com/FabricMC/fabric-loader/pull/313#discussion_r540868792", "createdAt": "2020-12-11T11:06:08Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/entrypoint/EntrypointContainerImpl.java", "diffHunk": "@@ -16,21 +16,28 @@\n \n package net.fabricmc.loader.entrypoint;\n \n-import net.fabricmc.loader.ModContainer;\n+import net.fabricmc.loader.api.ModContainer;\n import net.fabricmc.loader.api.entrypoint.EntrypointContainer;\n \n+import java.util.function.Supplier;\n+\n public class EntrypointContainerImpl<T> implements EntrypointContainer<T> {\n \tprivate final ModContainer container;\n-\tprivate final T entrypoint;\n+\tprivate final Supplier<T> entrypointSupplier;\n+\tprivate T instance;\n \n-\tpublic EntrypointContainerImpl(ModContainer container, T entrypoint) {\n+\tpublic EntrypointContainerImpl(ModContainer container, Supplier<T> entrypointSupplier) {\n \t\tthis.container = container;\n-\t\tthis.entrypoint = entrypoint;\n+\t\tthis.entrypointSupplier = entrypointSupplier;\n \t}\n \n \t@Override\n \tpublic T getEntrypoint() {\n-\t\treturn entrypoint;\n+\t\tif (instance == null) {\n+\t\t\tthis.instance = entrypointSupplier.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1717fe6e898c8ce329e9681593b9d5c413afc2"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "220d37e29e239e18b6b38b079f5439eac11e1398", "author": {"user": {"login": "TheGlitch76", "name": "Glitch"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/220d37e29e239e18b6b38b079f5439eac11e1398", "committedDate": "2020-12-12T02:54:04Z", "message": "Make getEntrypoint thread-safe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjkyMjcy", "url": "https://github.com/FabricMC/fabric-loader/pull/313#pullrequestreview-550692272", "createdAt": "2020-12-12T05:24:33Z", "commit": {"oid": "220d37e29e239e18b6b38b079f5439eac11e1398"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODg2ODg2", "url": "https://github.com/FabricMC/fabric-loader/pull/313#pullrequestreview-564886886", "createdAt": "2021-01-10T18:03:05Z", "commit": {"oid": "220d37e29e239e18b6b38b079f5439eac11e1398"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3392, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}