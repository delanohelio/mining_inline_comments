{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NzY3MjA4", "number": 259, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo0MjozM1rOEG71eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo0MzoyNlrOEG72FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzA3MjU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/minecraft/McVersionLookup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo0MjozM1rOGmCgJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo0MjozM1rOGmCgJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MDA3MQ==", "bodyText": "the error should include the contents of the release var", "url": "https://github.com/FabricMC/fabric-loader/pull/259#discussion_r442540071", "createdAt": "2020-06-18T22:42:33Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/minecraft/McVersionLookup.java", "diffHunk": "@@ -290,7 +293,20 @@ private static String normalizeVersion(String name, String release) {\n \t\t\t\tmatcher = PRE_RELEASE_PATTERN.matcher(name);\n \n \t\t\t\tif (matcher.matches()) {\n-\t\t\t\t\tname = String.format(\"rc.%s\", matcher.group(1));\n+\t\t\t\t\tboolean legacyVersion;\n+\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tlegacyVersion = SemanticVersionPredicateParser.create(\"<=1.16\").test(new SemanticVersionImpl(release, false));\n+\t\t\t\t\t} catch (VersionParsingException e) {\n+\t\t\t\t\t\tthrow new RuntimeException(\"Failed to parse version\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "307918201ecd4474131a8a87b5dedd5a4fc30c2c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzA3NDEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/minecraft/McVersionLookup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo0MzoyNlrOGmChHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoyODowMFrOGmDUIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MDMxOQ==", "bodyText": "except", "url": "https://github.com/FabricMC/fabric-loader/pull/259#discussion_r442540319", "createdAt": "2020-06-18T22:43:26Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/minecraft/McVersionLookup.java", "diffHunk": "@@ -290,7 +293,20 @@ private static String normalizeVersion(String name, String release) {\n \t\t\t\tmatcher = PRE_RELEASE_PATTERN.matcher(name);\n \n \t\t\t\tif (matcher.matches()) {\n-\t\t\t\t\tname = String.format(\"rc.%s\", matcher.group(1));\n+\t\t\t\t\tboolean legacyVersion;\n+\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tlegacyVersion = SemanticVersionPredicateParser.create(\"<=1.16\").test(new SemanticVersionImpl(release, false));\n+\t\t\t\t\t} catch (VersionParsingException e) {\n+\t\t\t\t\t\tthrow new RuntimeException(\"Failed to parse version\");\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t// Mark pre-releases as beta expect for legacy versions where these were previously marked as rc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "307918201ecd4474131a8a87b5dedd5a4fc30c2c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1MzM3OA==", "bodyText": "The entire comment could be clarified a bit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t// Mark pre-releases as beta expect for legacy versions where these were previously marked as rc\n          \n          \n            \n            \t\t\t\t\t// Mark pre-releases as 'beta' versions, except for version 1.16 and before, where they are 'rc'", "url": "https://github.com/FabricMC/fabric-loader/pull/259#discussion_r442553378", "createdAt": "2020-06-18T23:28:00Z", "author": {"login": "haykam821"}, "path": "src/main/java/net/fabricmc/loader/minecraft/McVersionLookup.java", "diffHunk": "@@ -290,7 +293,20 @@ private static String normalizeVersion(String name, String release) {\n \t\t\t\tmatcher = PRE_RELEASE_PATTERN.matcher(name);\n \n \t\t\t\tif (matcher.matches()) {\n-\t\t\t\t\tname = String.format(\"rc.%s\", matcher.group(1));\n+\t\t\t\t\tboolean legacyVersion;\n+\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tlegacyVersion = SemanticVersionPredicateParser.create(\"<=1.16\").test(new SemanticVersionImpl(release, false));\n+\t\t\t\t\t} catch (VersionParsingException e) {\n+\t\t\t\t\t\tthrow new RuntimeException(\"Failed to parse version\");\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t// Mark pre-releases as beta expect for legacy versions where these were previously marked as rc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MDMxOQ=="}, "originalCommit": {"oid": "307918201ecd4474131a8a87b5dedd5a4fc30c2c"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3298, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}