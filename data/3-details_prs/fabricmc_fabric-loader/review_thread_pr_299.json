{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMDEzNjI4", "number": 299, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNzozNToyN1rOEbO_Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTo0Mjo0MVrOEnAE9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTkyNTgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNzozNToyN1rOHFGloA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNzozNjoyNFrOHFGl8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMjg2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Get the launch arguments\n          \n          \n            \n            \t * Gets the command line arguments used to launch the game.", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r475112864", "createdAt": "2020-08-22T17:35:27Z", "author": {"login": "shartte"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,11 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Get the launch arguments", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beeef6b41366424a7ab8a17f97a7d111671260a0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMjk0NQ==", "bodyText": "Thanks!", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r475112945", "createdAt": "2020-08-22T17:36:24Z", "author": {"login": "TheBrokenRail"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,11 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Get the launch arguments", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMjg2NA=="}, "originalCommit": {"oid": "beeef6b41366424a7ab8a17f97a7d111671260a0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODc4MzA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODowMjo0NFrOHTu_3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0MDoxMFrOHVdvCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NTAwNg==", "bodyText": "I'd probably mention that this does not return any sensitive information.", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490455006", "createdAt": "2020-09-17T18:02:44Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,18 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);\n+\n+\t/**\n+\t * @see FabricLoader#getLaunchArguments(boolean)\n+\t */\n+\tdefault String[] getLaunchArguments() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTMyMQ==", "bodyText": "Done!", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269321", "createdAt": "2020-09-21T18:40:10Z", "author": {"login": "TheBrokenRail"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,18 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);\n+\n+\t/**\n+\t * @see FabricLoader#getLaunchArguments(boolean)\n+\t */\n+\tdefault String[] getLaunchArguments() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NTAwNg=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODc5ODEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODowNjo1NFrOHTvJaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTo0NDo0N1rOHXWgSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NzQ1MQ==", "bodyText": "Hmm, I'd like to ask is the accessToken the only compromising info we want to sanitize?\nMultimc for example actually omits your username, uuid and user type in logs alongside your accessToken like this:\n--username  --version MultiMC5 --gameDir /home/i509vcb/.local/share/multimc/instances/1.16.2 - FABRIC/.minecraft --assetsDir /home/i509vcb/.local/share/multimc/assets --assetIndex 1.16 --uuid --accessToken  --userType  --versionType release", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490457451", "createdAt": "2020-09-17T18:06:54Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2NzEwNA==", "bodyText": "I wouldn't consider the username or UUID sensitive information personally. The UUID is given out to anyone you are on a server with, as well as stored in plain text on your hard drive, and the username is already logged on startup and can be changed. What does user type do?", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492267104", "createdAt": "2020-09-21T18:35:59Z", "author": {"login": "TheBrokenRail"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NzQ1MQ=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0ODAxMQ==", "bodyText": "MC logs/dumps the other information quite happily, I think of this sanitizing as a security feature, not a privacy one.", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494248011", "createdAt": "2020-09-24T11:44:47Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NzQ1MQ=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODgxMTk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoxMToxMlrOHTvSXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTo0MDoxMVrOHXWSTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1OTc0Mw==", "bodyText": "Obviously anyone could call this with false as the parameter and run into the sunset with your access token.\nDo we want to print a stacktrace when someone calls this so we can see who wanted to access the unsanitized arguments?", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490459743", "createdAt": "2020-09-17T18:11:12Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,18 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4NTk4Ng==", "bodyText": "is that really needed? I think it's just log spam.\nBesides, it wouldn't be difficult for malicious mods to bypass this entire thing anyway.", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490485986", "createdAt": "2020-09-17T18:58:56Z", "author": {"login": "UpcraftLP"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,18 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1OTc0Mw=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUwMDQwNA==", "bodyText": "Well I do see your point there, it's probably a bit spammy tbf", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490500404", "createdAt": "2020-09-17T19:23:37Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,18 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1OTc0Mw=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0NDQyOQ==", "bodyText": "The arg is really just to remind people of the dangers involved, aiming at accidental leaks. We can't fundamentally avoid illegitimate disclosure, whether this exists or not, so it should be fine without extra logic that'd at most provide a false sense of security.", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494244429", "createdAt": "2020-09-24T11:40:11Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,18 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1OTc0Mw=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODgxOTYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoxMzoxOFrOHTvXCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0MDoyNlrOHVdviw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MDkzOA==", "bodyText": "Empty line before opening this if statement. Ideally we want to keep this close to fabric api codestyle but we have a lot to do in loader before we pull over checkstyle.", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490460938", "createdAt": "2020-09-17T18:13:18Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTQ1MQ==", "bodyText": "Done!", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269451", "createdAt": "2020-09-21T18:40:26Z", "author": {"login": "TheBrokenRail"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MDkzOA=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODgyMDEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoxMzozMFrOHTvXYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0MDozM1rOHVdv1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTAyNg==", "bodyText": "Empty line before while here", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490461026", "createdAt": "2020-09-17T18:13:30Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTUyNA==", "bodyText": "Done!", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269524", "createdAt": "2020-09-21T18:40:33Z", "author": {"login": "TheBrokenRail"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTAyNg=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODgyMDYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoxMzozOVrOHTvXqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0MToxMlrOHVdxLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTA5OA==", "bodyText": "Empty line before if", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490461098", "createdAt": "2020-09-17T18:13:39Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTg3MQ==", "bodyText": "Done!", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269871", "createdAt": "2020-09-21T18:41:12Z", "author": {"login": "TheBrokenRail"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTA5OA=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODgyMTQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoxMzo1OVrOHTvYUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0MTo1OVrOHVdy-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTI2NA==", "bodyText": "empty line before return", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490461264", "createdAt": "2020-09-17T18:13:59Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {\n+\t\t\t\t\t\tremove = 2;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (remove > 0) {\n+\t\t\t\t\t\titerator.remove();\n+\t\t\t\t\t\tremove--;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn list.toArray(new String[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MDMyOA==", "bodyText": "Done!", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492270328", "createdAt": "2020-09-21T18:41:59Z", "author": {"login": "TheBrokenRail"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {\n+\t\t\t\t\t\tremove = 2;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (remove > 0) {\n+\t\t\t\t\t\titerator.remove();\n+\t\t\t\t\t\tremove--;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn list.toArray(new String[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTI2NA=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODgyMjk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoxNDoyM1rOHTvZRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODo0MToyNFrOHVdxnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTUxMQ==", "bodyText": "you can drop the else here and just return the empty string array at the bottom of the method.", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490461511", "createdAt": "2020-09-17T18:14:23Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {\n+\t\t\t\t\t\tremove = 2;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (remove > 0) {\n+\t\t\t\t\t\titerator.remove();\n+\t\t\t\t\t\tremove--;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn list.toArray(new String[0]);\n+\t\t} else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTk4MQ==", "bodyText": "Done!", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269981", "createdAt": "2020-09-21T18:41:24Z", "author": {"login": "TheBrokenRail"}, "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {\n+\t\t\t\t\t\tremove = 2;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (remove > 0) {\n+\t\t\t\t\t\titerator.remove();\n+\t\t\t\t\t\tremove--;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn list.toArray(new String[0]);\n+\t\t} else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTUxMQ=="}, "originalCommit": {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzMxMTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTo0Mjo0MVrOHXWXYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzoxMDowOVrOHXZ3zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0NTczMQ==", "bodyText": "I'd remove this override, this is a niche API where allowing the caller to omit an arg doesn't provide any significant convenience benefit. It does however clutter the already large FabricLoader interface quite a bit more.", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494245731", "createdAt": "2020-09-24T11:42:41Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,20 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);\n+\n+\t/**\n+\t * @see FabricLoader#getLaunchArguments(boolean)\n+\t * <p>\n+\t * Does not contain any sensitive information.\n+\t */\n+\tdefault String[] getLaunchArguments() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103ecd28f1687801d653fbb80ca083a78aeab7bd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMwMjQ4Nw==", "bodyText": "This was suggested here: #299 (comment)", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494302487", "createdAt": "2020-09-24T13:09:12Z", "author": {"login": "TheBrokenRail"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,20 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);\n+\n+\t/**\n+\t * @see FabricLoader#getLaunchArguments(boolean)\n+\t * <p>\n+\t * Does not contain any sensitive information.\n+\t */\n+\tdefault String[] getLaunchArguments() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0NTczMQ=="}, "originalCommit": {"oid": "103ecd28f1687801d653fbb80ca083a78aeab7bd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMwMzE4MQ==", "bodyText": "I know, not happy with the suggestion.", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494303181", "createdAt": "2020-09-24T13:10:09Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,20 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);\n+\n+\t/**\n+\t * @see FabricLoader#getLaunchArguments(boolean)\n+\t * <p>\n+\t * Does not contain any sensitive information.\n+\t */\n+\tdefault String[] getLaunchArguments() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0NTczMQ=="}, "originalCommit": {"oid": "103ecd28f1687801d653fbb80ca083a78aeab7bd"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3250, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}