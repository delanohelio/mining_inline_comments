{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDgyNjMz", "number": 207, "title": "Add methods to get the ModContainer which as provided an entrypoint", "bodyText": "This is for #199\nThis adds a getEntrypointProvider(Object) method which optionally returns the mod container the entrypoint is from (assuming the object is actually an entrypoint).\nAlso included is some more rich exception handling where the mod which causes an entrypoint error is mentioned, (some restructuring may be needed).", "createdAt": "2020-03-01T19:15:03Z", "url": "https://github.com/FabricMC/fabric-loader/pull/207", "merged": true, "mergeCommit": {"oid": "e4a76832bf3e2ee7becc9fcc0ed4f58330704e24"}, "closed": true, "closedAt": "2020-03-18T23:26:07Z", "author": {"login": "i509VCB"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJhLaaAFqTM2Njg5MzY5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPPNg6gFqTM3NzkzMjEzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODkzNjk5", "url": "https://github.com/FabricMC/fabric-loader/pull/207#pullrequestreview-366893699", "createdAt": "2020-03-01T22:48:55Z", "commit": {"oid": "57f92e290fbf8d70a6e64122097716081f387703"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMjo0ODo1NVrOFwQojg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMjo1MDo0MVrOFwQpEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0ODQ5NA==", "bodyText": "Why? Just create an entrypoint exception right here than passing an entry set.", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r386148494", "createdAt": "2020-03-01T22:48:55Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/EntrypointStorage.java", "diffHunk": "@@ -145,20 +157,39 @@ boolean hasEntrypoints(String key) {\n \t\t\t\t\tresults.add(result);\n \t\t\t\t}\n \t\t\t} catch (Throwable t) {\n-\t\t\t\terrors.add(t);\n+\t\t\t\terrors.put(entry, t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f92e290fbf8d70a6e64122097716081f387703"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0ODUxMw==", "bodyText": "You should integrate the changes in #180 and add the other exceptions as suppressed by the first one.", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r386148513", "createdAt": "2020-03-01T22:49:19Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/EntrypointStorage.java", "diffHunk": "@@ -145,20 +157,39 @@ boolean hasEntrypoints(String key) {\n \t\t\t\t\tresults.add(result);\n \t\t\t\t}\n \t\t\t} catch (Throwable t) {\n-\t\t\t\terrors.add(t);\n+\t\t\t\terrors.put(entry, t);\n \t\t\t}\n \t\t}\n \n \t\tif (!errors.isEmpty()) {\n \t\t\tEntrypointException e = new EntrypointException(\"Could not look up entries for entrypoint \" + key + \"!\");\n \n-\t\t\tfor (Throwable suppressed : errors) {\n-\t\t\t\te.addSuppressed(suppressed);\n+\t\t\tfor (Map.Entry<Entry, Throwable> suppressed : errors.entrySet()) {\n+\t\t\t\te.addSuppressed(new EntrypointException(\"Caused by mod: '\" + suppressed.getKey().getModContainer().getMetadata().getId() + \"' \", suppressed.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f92e290fbf8d70a6e64122097716081f387703"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0ODU1Mw==", "bodyText": "Will this be too slow time-wise? How costly memory-wise is it to track in a hash map instead?", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r386148553", "createdAt": "2020-03-01T22:49:57Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/EntrypointStorage.java", "diffHunk": "@@ -145,20 +157,39 @@ boolean hasEntrypoints(String key) {\n \t\t\t\t\tresults.add(result);\n \t\t\t\t}\n \t\t\t} catch (Throwable t) {\n-\t\t\t\terrors.add(t);\n+\t\t\t\terrors.put(entry, t);\n \t\t\t}\n \t\t}\n \n \t\tif (!errors.isEmpty()) {\n \t\t\tEntrypointException e = new EntrypointException(\"Could not look up entries for entrypoint \" + key + \"!\");\n \n-\t\t\tfor (Throwable suppressed : errors) {\n-\t\t\t\te.addSuppressed(suppressed);\n+\t\t\tfor (Map.Entry<Entry, Throwable> suppressed : errors.entrySet()) {\n+\t\t\t\te.addSuppressed(new EntrypointException(\"Caused by mod: '\" + suppressed.getKey().getModContainer().getMetadata().getId() + \"' \", suppressed.getValue()));\n \t\t\t}\n \n \t\t\tthrow e;\n \t\t} else {\n \t\t\treturn results;\n \t\t}\n \t}\n+\n+\tModContainer getContainerFromEntrypoint(Object entrypoint) {\n+\t\tfor (Map.Entry<String, List<Entry>> entrypointList : entryMap.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f92e290fbf8d70a6e64122097716081f387703"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE0ODYyNg==", "bodyText": "Also see #180, don't create a runtime exception out of the loop", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r386148626", "createdAt": "2020-03-01T22:50:41Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/entrypoint/minecraft/hooks/EntrypointUtils.java", "diffHunk": "@@ -39,25 +42,43 @@\n \t\t@SuppressWarnings(\"deprecation\")\n \t\tFabricLoader loader = FabricLoader.INSTANCE;\n \t\tCollection<T> entrypoints = loader.getEntrypoints(name, type);\n-\t\tList<Throwable> errors = new ArrayList<>();\n+\t\tMap<ModContainer, List<Throwable>> errors = new HashMap<>();\n \n \t\tloader.getLogger().debug(\"Iterating over entrypoint '\" + name + \"'\");\n \n \t\tfor (T e : entrypoints) {\n \t\t\ttry {\n \t\t\t\tinvoker.accept(e);\n \t\t\t} catch (Throwable t) {\n-\t\t\t\terrors.add(t);\n+\t\t\t\terrors.computeIfAbsent(loader.getEntrypointProvider(e).orElse(null), k -> new ArrayList<>()).add(t);\n \t\t\t}\n \t\t}\n \n \t\tif (!errors.isEmpty()) {\n \t\t\tRuntimeException exception = new RuntimeException(\"Could not execute entrypoint stage '\" + name + \"' due to errors!\");\n \n-\t\t\tfor (Throwable t : errors) {\n-\t\t\t\texception.addSuppressed(t);\n+\t\t\tfor (Map.Entry<ModContainer, List<Throwable>> modContainerListEntry : errors.entrySet()) {\n+\t\t\t\tif (modContainerListEntry.getKey() == null) {\n+\t\t\t\t\tcontinue; // We do these at the end.\n+\t\t\t\t}\n+\n+\t\t\t\tRuntimeException modException = new RuntimeException(\"Caused by mod: '\" + modContainerListEntry.getKey().getMetadata().getId() + \"' \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f92e290fbf8d70a6e64122097716081f387703"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57f92e290fbf8d70a6e64122097716081f387703", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/57f92e290fbf8d70a6e64122097716081f387703", "committedDate": "2020-03-01T18:05:36Z", "message": "Use new entrypoint provider logic for richer entrypoint errors."}, "afterCommit": {"oid": "a5f067e3f1460f93486e1a301e6b8a7e0dbbf8f7", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/a5f067e3f1460f93486e1a301e6b8a7e0dbbf8f7", "committedDate": "2020-03-02T01:16:01Z", "message": "Add methods to get the mod which provides an entrypoint."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2OTQyNDE0", "url": "https://github.com/FabricMC/fabric-loader/pull/207#pullrequestreview-366942414", "createdAt": "2020-03-02T04:14:22Z", "commit": {"oid": "338dcdbaeac97cda600c059b8e0b27cde257568d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNDoxNDoyM1rOFwTNTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNDoxNDo0OVrOFwTNmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE5MDY3MQ==", "bodyText": "maybe just return a list", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r386190671", "createdAt": "2020-03-02T04:14:23Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -39,6 +40,8 @@ static FabricLoader getInstance() {\n \n \t<T> List<T> getEntrypoints(String key, Class<T> type);\n \n+\t<T> Collection<EntrypointContainer<T>> getEntrypointContainers(String key, Class<T> type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338dcdbaeac97cda600c059b8e0b27cde257568d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE5MDc0Ng==", "bodyText": "ModContainer getProvider();", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r386190746", "createdAt": "2020-03-02T04:14:49Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/api/entrypoint/EntrypointContainer.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Copyright 2016 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.loader.api.entrypoint;\n+\n+import net.fabricmc.loader.api.ModContainer;\n+\n+public interface EntrypointContainer<T> {\n+\tT getEntrypoint();\n+\n+\tModContainer getProvidingModContainer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338dcdbaeac97cda600c059b8e0b27cde257568d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMTE1MzAw", "url": "https://github.com/FabricMC/fabric-loader/pull/207#pullrequestreview-370115300", "createdAt": "2020-03-06T07:00:23Z", "commit": {"oid": "822c82bf82bc54be1c8bd5082895317d0dc2e7de"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2b2bec408ec81be6a228210830a09f906d9c658", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/e2b2bec408ec81be6a228210830a09f906d9c658", "committedDate": "2020-03-06T15:06:08Z", "message": "Add methods to get the mod which provides an entrypoint."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55d5465bf0a1dec897dba6c7fcc47b80ba65748c", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/55d5465bf0a1dec897dba6c7fcc47b80ba65748c", "committedDate": "2020-03-06T15:07:26Z", "message": "Readding a EntrypointException ctor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3414781bdb0d4236652b6d49d6ea3148416b7840", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/3414781bdb0d4236652b6d49d6ea3148416b7840", "committedDate": "2020-03-06T15:07:27Z", "message": "Some tiny renames"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be9174cf38eed64d1d33369ce31dc00c334ac5e3", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/be9174cf38eed64d1d33369ce31dc00c334ac5e3", "committedDate": "2020-03-06T15:07:27Z", "message": "Make exception handling more natural"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7ce422d2ae9931a8d47f49f514251bc59db4b88", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/f7ce422d2ae9931a8d47f49f514251bc59db4b88", "committedDate": "2020-03-06T14:55:51Z", "message": "Make exception handling more natural"}, "afterCommit": {"oid": "be9174cf38eed64d1d33369ce31dc00c334ac5e3", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/be9174cf38eed64d1d33369ce31dc00c334ac5e3", "committedDate": "2020-03-06T15:07:27Z", "message": "Make exception handling more natural"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNTk3NzUz", "url": "https://github.com/FabricMC/fabric-loader/pull/207#pullrequestreview-370597753", "createdAt": "2020-03-06T20:12:28Z", "commit": {"oid": "be9174cf38eed64d1d33369ce31dc00c334ac5e3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMDoxMjoyOFrOFzGEoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMDoxMzo0OVrOFzGGtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyMTE4NQ==", "bodyText": "Missing blank line above, better make this a single line if (..) ...", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r389121185", "createdAt": "2020-03-06T20:12:28Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/EntrypointStorage.java", "diffHunk": "@@ -145,21 +159,48 @@ boolean hasEntrypoints(String key) {\n \t\t\t\t\tresults.add(result);\n \t\t\t\t}\n \t\t\t} catch (Throwable t) {\n-\t\t\t\terrors.add(t);\n+\t\t\t\tif (exception == null) {\n+\t\t\t\t\texception = new EntrypointException(key, entry.getModContainer().getMetadata().getId(), t);\n+\t\t\t\t} else {\n+\t\t\t\t\texception.addSuppressed(t);\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \n-\t\tif (!errors.isEmpty()) {\n-\t\t\tIterator<Throwable> it = errors.iterator();\n-\t\t\tEntrypointException e = new EntrypointException(key, it.next());\n+\t\tif (exception != null) {\n+\t\t\tthrow exception;\n+\t\t}\n+\n+\t\treturn results;\n+\t}\n \n-\t\t\twhile (it.hasNext()) {\n-\t\t\t\te.addSuppressed(it.next());\n+\tprotected <T> List<EntrypointContainer<T>> getEntrypointContainers(String key, Class<T> type) {\n+\t\tList<Entry> entries = entryMap.get(key);\n+\t\tif (entries == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be9174cf38eed64d1d33369ce31dc00c334ac5e3"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyMTIzMg==", "bodyText": "missing blank above", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r389121232", "createdAt": "2020-03-06T20:12:36Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/EntrypointStorage.java", "diffHunk": "@@ -145,21 +159,48 @@ boolean hasEntrypoints(String key) {\n \t\t\t\t\tresults.add(result);\n \t\t\t\t}\n \t\t\t} catch (Throwable t) {\n-\t\t\t\terrors.add(t);\n+\t\t\t\tif (exception == null) {\n+\t\t\t\t\texception = new EntrypointException(key, entry.getModContainer().getMetadata().getId(), t);\n+\t\t\t\t} else {\n+\t\t\t\t\texception.addSuppressed(t);\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \n-\t\tif (!errors.isEmpty()) {\n-\t\t\tIterator<Throwable> it = errors.iterator();\n-\t\t\tEntrypointException e = new EntrypointException(key, it.next());\n+\t\tif (exception != null) {\n+\t\t\tthrow exception;\n+\t\t}\n+\n+\t\treturn results;\n+\t}\n \n-\t\t\twhile (it.hasNext()) {\n-\t\t\t\te.addSuppressed(it.next());\n+\tprotected <T> List<EntrypointContainer<T>> getEntrypointContainers(String key, Class<T> type) {\n+\t\tList<Entry> entries = entryMap.get(key);\n+\t\tif (entries == null) {\n+\t\t\treturn Collections.emptyList();\n+\t\t}\n+\n+\t\tEntrypointException exception = null;\n+\t\tList<EntrypointContainer<T>> results = new ArrayList<>(entries.size());\n+\t\tfor (Entry entry : entries) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be9174cf38eed64d1d33369ce31dc00c334ac5e3"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyMTI5Nw==", "bodyText": "missing blank above", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r389121297", "createdAt": "2020-03-06T20:12:48Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/EntrypointStorage.java", "diffHunk": "@@ -145,21 +159,48 @@ boolean hasEntrypoints(String key) {\n \t\t\t\t\tresults.add(result);\n \t\t\t\t}\n \t\t\t} catch (Throwable t) {\n-\t\t\t\terrors.add(t);\n+\t\t\t\tif (exception == null) {\n+\t\t\t\t\texception = new EntrypointException(key, entry.getModContainer().getMetadata().getId(), t);\n+\t\t\t\t} else {\n+\t\t\t\t\texception.addSuppressed(t);\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \n-\t\tif (!errors.isEmpty()) {\n-\t\t\tIterator<Throwable> it = errors.iterator();\n-\t\t\tEntrypointException e = new EntrypointException(key, it.next());\n+\t\tif (exception != null) {\n+\t\t\tthrow exception;\n+\t\t}\n+\n+\t\treturn results;\n+\t}\n \n-\t\t\twhile (it.hasNext()) {\n-\t\t\t\te.addSuppressed(it.next());\n+\tprotected <T> List<EntrypointContainer<T>> getEntrypointContainers(String key, Class<T> type) {\n+\t\tList<Entry> entries = entryMap.get(key);\n+\t\tif (entries == null) {\n+\t\t\treturn Collections.emptyList();\n+\t\t}\n+\n+\t\tEntrypointException exception = null;\n+\t\tList<EntrypointContainer<T>> results = new ArrayList<>(entries.size());\n+\t\tfor (Entry entry : entries) {\n+\t\t\ttry {\n+\t\t\t\tT result = entry.getOrCreate(type);\n+\t\t\t\tif (result != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be9174cf38eed64d1d33369ce31dc00c334ac5e3"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyMTU3NQ==", "bodyText": "Are we still using that one, if not change comment to indicate removal please", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r389121575", "createdAt": "2020-03-06T20:13:28Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/api/EntrypointException.java", "diffHunk": "@@ -24,7 +24,16 @@\n \t */\n \t@Deprecated\n \tpublic EntrypointException(String key, Throwable cause) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be9174cf38eed64d1d33369ce31dc00c334ac5e3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyMTcxOA==", "bodyText": "Short comment about what it is/what it is used for please", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r389121718", "createdAt": "2020-03-06T20:13:49Z", "author": {"login": "sfPlayer1"}, "path": "src/main/java/net/fabricmc/loader/api/entrypoint/EntrypointContainer.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Copyright 2016 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.loader.api.entrypoint;\n+\n+import net.fabricmc.loader.api.ModContainer;\n+\n+public interface EntrypointContainer<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be9174cf38eed64d1d33369ce31dc00c334ac5e3"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "180376da2b243e8828986ae5b84b540ec13ef293", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/180376da2b243e8828986ae5b84b540ec13ef293", "committedDate": "2020-03-07T02:09:18Z", "message": "Style and docs handling."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03fee62372095575286ce0133de63bea4e901520", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric-loader/commit/03fee62372095575286ce0133de63bea4e901520", "committedDate": "2020-03-07T19:36:07Z", "message": "Checkstyle fixes II"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzg0ODIy", "url": "https://github.com/FabricMC/fabric-loader/pull/207#pullrequestreview-370784822", "createdAt": "2020-03-07T19:36:45Z", "commit": {"oid": "03fee62372095575286ce0133de63bea4e901520"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzg2NjI1", "url": "https://github.com/FabricMC/fabric-loader/pull/207#pullrequestreview-370786625", "createdAt": "2020-03-07T20:13:39Z", "commit": {"oid": "03fee62372095575286ce0133de63bea4e901520"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QyMDoxMzozOVrOFzRiOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QyMDoxMzozOVrOFzRiOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMwODk4Ng==", "bodyText": "Wouldn't it be as good a time as any to replace that reference with the API instance ?", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r389308986", "createdAt": "2020-03-07T20:13:39Z", "author": {"login": "Pyrofab"}, "path": "src/main/java/net/fabricmc/loader/entrypoint/minecraft/hooks/EntrypointUtils.java", "diffHunk": "@@ -38,26 +40,24 @@\n \tprivate static <T> void invoke0(String name, Class<T> type, Consumer<? super T> invoker) {\n \t\t@SuppressWarnings(\"deprecation\")\n \t\tFabricLoader loader = FabricLoader.INSTANCE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03fee62372095575286ce0133de63bea4e901520"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODEyNTY4", "url": "https://github.com/FabricMC/fabric-loader/pull/207#pullrequestreview-370812568", "createdAt": "2020-03-08T08:20:59Z", "commit": {"oid": "03fee62372095575286ce0133de63bea4e901520"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODgzNjk2", "url": "https://github.com/FabricMC/fabric-loader/pull/207#pullrequestreview-373883696", "createdAt": "2020-03-12T20:37:45Z", "commit": {"oid": "03fee62372095575286ce0133de63bea4e901520"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3OTMyMTMy", "url": "https://github.com/FabricMC/fabric-loader/pull/207#pullrequestreview-377932132", "createdAt": "2020-03-19T17:18:16Z", "commit": {"oid": "03fee62372095575286ce0133de63bea4e901520"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxODoxNlrOF44k8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxODoxNlrOF44k8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5MTUzOQ==", "bodyText": "t is ignored here, please add it back.", "url": "https://github.com/FabricMC/fabric-loader/pull/207#discussion_r395191539", "createdAt": "2020-03-19T17:18:16Z", "author": {"login": "shedaniel"}, "path": "src/main/java/net/fabricmc/loader/entrypoint/minecraft/hooks/EntrypointUtils.java", "diffHunk": "@@ -38,26 +40,24 @@\n \tprivate static <T> void invoke0(String name, Class<T> type, Consumer<? super T> invoker) {\n \t\t@SuppressWarnings(\"deprecation\")\n \t\tFabricLoader loader = FabricLoader.INSTANCE;\n-\t\tCollection<T> entrypoints = loader.getEntrypoints(name, type);\n-\t\tList<Throwable> errors = new ArrayList<>();\n+\t\tRuntimeException exception = null;\n+\t\tCollection<EntrypointContainer<T>> entrypoints = loader.getEntrypointContainers(name, type);\n \n \t\tloader.getLogger().debug(\"Iterating over entrypoint '\" + name + \"'\");\n \n-\t\tfor (T e : entrypoints) {\n+\t\tfor (EntrypointContainer<T> container : entrypoints) {\n \t\t\ttry {\n-\t\t\t\tinvoker.accept(e);\n+\t\t\t\tinvoker.accept(container.getEntrypoint());\n \t\t\t} catch (Throwable t) {\n-\t\t\t\terrors.add(t);\n+\t\t\t\tif (exception == null) {\n+\t\t\t\t\texception = new RuntimeException(\"Could not execute entrypoint stage '\" + name + \"' due to errors, provided by '\" + container.getProvider().getMetadata().getId() + \"'!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03fee62372095575286ce0133de63bea4e901520"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3428, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}