{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzQ1NzM3", "number": 288, "title": "Get LaunchWrapper / FabricTweaker working again", "bodyText": "Fabric*Tweaker can now be used to launch fabric-loader on LaunchWrapper either as the primary tweaker, which should be functionally equivalent to launching with Knot (except for LaunchWrapper caveats ofc), or as a secondary tweaker, which allows fabric-loader (and mods, provided they were built for the right mappings) to run next to third-party tweaker-based mods.\nSee individual commits for details.\nFixes #202\nFixes #168\nPartially #137 (only the LaunchWrapper part, I did not look at KnotCompatibilityClassLoader)\nTested configurations (both on MultiMC):\n\nAll of Fabric 3 on LaunchWrapper (skipping Jumploader, no clue how to configure it)\nReplayMod with a small subset of fabric-api (both compiled to official instead of intermediary mappings) running on Vivecraft (which includes Optifine, both are tweakers) on MC 1.15.2\n\nI have not tested the tweaker on the server side (but given it was completely broken before, it could hardly have become worse).", "createdAt": "2020-07-26T12:48:48Z", "url": "https://github.com/FabricMC/fabric-loader/pull/288", "merged": true, "mergeCommit": {"oid": "849d70640daad0f9452ad09f1145e4430f5e2432"}, "closed": true, "closedAt": "2020-09-04T20:34:41Z", "author": {"login": "Johni0702"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4rAGUAH2gAyNDU2NzQ1NzM3OmIyMTkwY2Q1NzExYjNmMDQxMmNkMzcxODkwNmM5MjZmNDRmMTAxOGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFo6kfAFqTQ4Mjg0NDAxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b2190cd5711b3f0412cd3718906c926f44f1018d", "author": {"user": {"login": "Johni0702", "name": "Jonas Herzig"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/b2190cd5711b3f0412cd3718906c926f44f1018d", "committedDate": "2020-07-26T10:51:52Z", "message": "Fix improper initialization order in FabricTweaker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49f6f49173fa59af07c24558e9031df58b7b6d2b", "author": {"user": {"login": "Johni0702", "name": "Jonas Herzig"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/49f6f49173fa59af07c24558e9031df58b7b6d2b", "committedDate": "2020-07-26T10:52:54Z", "message": "Fix missing class loader exclusion for *ModInitializer\n\nThese interfaces are accessed from the Entrypoint* classes which themselves are\nexcluded from the LaunchClassLoader. Not excluding the interfaces will cause\nthose to be loaded by the LaunchClassLoader as well as its parent, leading to\ncasting errors when mod entry points are to be invoked."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85a3b9ebbd2ab160687de4fe016b8739c17be992", "author": {"user": {"login": "Johni0702", "name": "Jonas Herzig"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/85a3b9ebbd2ab160687de4fe016b8739c17be992", "committedDate": "2020-07-26T10:57:35Z", "message": "Allow FabricTweaker to operate as primary or secondary tweaker\n\nWhen operating as primary tweaker, it provides all launch arguments.\nWhen operating as secondary tweaker, it only provides the class transformer and\nmod loading functionality but not the launch arguments.\n\nThis distinction is necessary because two tweakers providing arguments will\ninvariably lead to arguments being passed multiple times which is not allowed\nfor some of them."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35be2028270168730d73e3be4720abe55f09fba3", "author": {"user": {"login": "Johni0702", "name": "Jonas Herzig"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/35be2028270168730d73e3be4720abe55f09fba3", "committedDate": "2020-07-26T11:01:33Z", "message": "Fix overwriting of third-party tranformations to entry point classes\n\nWe store (`patchedClasses`) and then completely substitute during loading\n(`FabricTransformer.lwTranformerHook`) the bytecode for any classes which our\n`EntrypointTransformer`s need to change.\n\nTherefore, when they ask for any classes, we must explicitly pass the raw\nbytecode through all other transformers in order to not miss out on their\nchanges."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d90f00636f5f2a25ef4af4558e2fe5d1e69a3e07", "author": {"user": {"login": "Johni0702", "name": "Jonas Herzig"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/d90f00636f5f2a25ef4af4558e2fe5d1e69a3e07", "committedDate": "2020-07-26T11:13:08Z", "message": "Fix loading of deobfuscated game with FabricTweaker\n\nSee comment on preloadRemappedJar."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297", "author": {"user": {"login": "Johni0702", "name": "Jonas Herzig"}}, "url": "https://github.com/FabricMC/fabric-loader/commit/4525ea1ebd22b8c4b2f06cf33b728d657d730297", "committedDate": "2020-07-26T12:36:34Z", "message": "Add class loader exclusion for gson to FabricTweaker\n\nSee cc03fd09a786a5d8a84168fd3a88454e3e11eefc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzY2NDY4", "url": "https://github.com/FabricMC/fabric-loader/pull/288#pullrequestreview-455366468", "createdAt": "2020-07-26T13:54:58Z", "commit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMzo1NDo1OFrOG3MkNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMzo1NDo1OFrOG3MkNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzMDc0MA==", "bodyText": "ClientModInitializer and DedicatedServerModInitializers have @Environment annotations. Is this exclusion going to affect their class transformation?", "url": "https://github.com/FabricMC/fabric-loader/pull/288#discussion_r460530740", "createdAt": "2020-07-26T13:54:58Z", "author": {"login": "JamiesWhiteShirt"}, "path": "src/main/java/net/fabricmc/loader/launch/FabricTweaker.java", "diffHunk": "@@ -88,13 +101,19 @@ public void injectIntoClassLoader(LaunchClassLoader launchClassLoader) {\n \n \t\tlaunchClassLoader.addClassLoaderExclusion(\"net.fabricmc.api.Environment\");\n \t\tlaunchClassLoader.addClassLoaderExclusion(\"net.fabricmc.api.EnvType\");\n+\t\tlaunchClassLoader.addClassLoaderExclusion(\"net.fabricmc.api.ModInitializer\");\n+\t\tlaunchClassLoader.addClassLoaderExclusion(\"net.fabricmc.api.ClientModInitializer\");\n+\t\tlaunchClassLoader.addClassLoaderExclusion(\"net.fabricmc.api.DedicatedServerModInitializer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzczMjEy", "url": "https://github.com/FabricMC/fabric-loader/pull/288#pullrequestreview-455373212", "createdAt": "2020-07-26T15:19:49Z", "commit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNToxOTo0OVrOG3NHbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNToxOTo0OVrOG3NHbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzOTc1Ng==", "bodyText": "Why? I haven't looked at this in detail, but this looks at first glance like it might cause an infinite loop. I.e. EntrypointTransformer asks to run transformers which runs the EntrypointTransformer", "url": "https://github.com/FabricMC/fabric-loader/pull/288#discussion_r460539756", "createdAt": "2020-07-26T15:19:49Z", "author": {"login": "Earthcomputer"}, "path": "src/main/java/net/fabricmc/loader/entrypoint/EntrypointTransformer.java", "diffHunk": "@@ -42,7 +42,7 @@ public EntrypointTransformer(Function<EntrypointTransformer, List<EntrypointPatc\n \t}\n \n \tClassNode loadClass(FabricLauncher launcher, String className) throws IOException {\n-\t\tbyte[] data = patchedClasses.containsKey(className) ? patchedClasses.get(className) : launcher.getClassByteArray(className, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDAzNjU1", "url": "https://github.com/FabricMC/fabric-loader/pull/288#pullrequestreview-463003655", "createdAt": "2020-08-07T02:58:22Z", "commit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMjo1ODoyMlrOG9Kz7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMjo1ODoyMlrOG9Kz7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5MzQ1Mg==", "bodyText": "Hmm is there a reason specifically why we need to exclude the mod initializers?", "url": "https://github.com/FabricMC/fabric-loader/pull/288#discussion_r466793452", "createdAt": "2020-08-07T02:58:22Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/launch/FabricTweaker.java", "diffHunk": "@@ -88,13 +101,19 @@ public void injectIntoClassLoader(LaunchClassLoader launchClassLoader) {\n \n \t\tlaunchClassLoader.addClassLoaderExclusion(\"net.fabricmc.api.Environment\");\n \t\tlaunchClassLoader.addClassLoaderExclusion(\"net.fabricmc.api.EnvType\");\n+\t\tlaunchClassLoader.addClassLoaderExclusion(\"net.fabricmc.api.ModInitializer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTQwMDc0", "url": "https://github.com/FabricMC/fabric-loader/pull/288#pullrequestreview-478140074", "createdAt": "2020-08-29T16:41:24Z", "commit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NDA4MjE1", "url": "https://github.com/FabricMC/fabric-loader/pull/288#pullrequestreview-466408215", "createdAt": "2020-08-13T02:45:04Z", "commit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMjo0NTowNFrOG_6CXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMjo0NTowNFrOG_6CXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2NDM0OQ==", "bodyText": "Is it safe to call the black board at this point, I wonder", "url": "https://github.com/FabricMC/fabric-loader/pull/288#discussion_r469664349", "createdAt": "2020-08-13T02:45:04Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/launch/FabricTweaker.java", "diffHunk": "@@ -24,30 +24,43 @@\n import net.fabricmc.loader.game.MinecraftGameProvider;\n import net.fabricmc.loader.launch.common.FabricLauncherBase;\n import net.fabricmc.loader.launch.common.FabricMixinBootstrap;\n+import net.fabricmc.loader.util.Arguments;\n import net.fabricmc.loader.util.UrlConversionException;\n import net.fabricmc.loader.util.UrlUtil;\n+import net.minecraft.launchwrapper.IClassTransformer;\n import net.minecraft.launchwrapper.ITweaker;\n import net.minecraft.launchwrapper.Launch;\n import net.minecraft.launchwrapper.LaunchClassLoader;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.spongepowered.asm.launch.MixinBootstrap;\n import org.spongepowered.asm.mixin.MixinEnvironment;\n+import org.spongepowered.asm.mixin.transformer.Proxy;\n \n+import java.io.ByteArrayOutputStream;\n import java.io.File;\n+import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.lang.reflect.Field;\n import java.net.JarURLConnection;\n import java.net.URL;\n+import java.nio.file.Path;\n import java.util.Collection;\n import java.util.List;\n+import java.util.Map;\n+import java.util.jar.JarEntry;\n+import java.util.jar.JarInputStream;\n \n public abstract class FabricTweaker extends FabricLauncherBase implements ITweaker {\n \tprotected static Logger LOGGER = LogManager.getFormatterLogger(\"Fabric|Tweaker\");\n-\tprotected String[] arguments;\n+\tprotected Arguments arguments;\n \tprivate LaunchClassLoader launchClassLoader;\n \tprivate boolean isDevelopment;\n \n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate final boolean isPrimaryTweaker = ((List<ITweaker>) Launch.blackboard.get(\"Tweaks\")).isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTQ4OTAz", "url": "https://github.com/FabricMC/fabric-loader/pull/288#pullrequestreview-478148903", "createdAt": "2020-08-29T19:05:12Z", "commit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyODQ0MDE2", "url": "https://github.com/FabricMC/fabric-loader/pull/288#pullrequestreview-482844016", "createdAt": "2020-09-04T17:47:02Z", "commit": {"oid": "4525ea1ebd22b8c4b2f06cf33b728d657d730297"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3460, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}