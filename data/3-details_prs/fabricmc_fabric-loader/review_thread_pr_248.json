{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzcyMDIy", "number": 248, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyNjo0N1rOD9kpJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjozODozMFrOD9kzUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODkwMDg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyNjo0N1rOGXJfFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjo0MTo1OFrOGXJy_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTg0Nw==", "bodyText": "Mind quickly document if this map is unmodifiable?", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426925847", "createdAt": "2020-05-18T22:26:47Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNjI2Ng==", "bodyText": "Yes it is unmodifable, (See the CustomValueContainer).\nI'll add docs for it if you deem it nessecary", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426926266", "createdAt": "2020-05-18T22:27:58Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTg0Nw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMDExNA==", "bodyText": "None of the other methods are documented at the moment, and I feel like it might make more sense to document the (un)modifiability of every method in the interface javadoc rather than this method in particular. (Edit: I'm not asking you to add javadocs in this PR, just that I don't think it would fit - plus it would imply that some of the other methods can be modified because they aren't explicitly marked as unmodifiable).", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426930114", "createdAt": "2020-05-18T22:39:38Z", "author": {"login": "AlexIIL"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTg0Nw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMDk0Mg==", "bodyText": "Hmm. Yeah that makes sense, I'd probably open up a separate PR to document those other methods in that case.", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426930942", "createdAt": "2020-05-18T22:41:58Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTg0Nw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODkxMDYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/metadata/ModMetadataV1.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjozMDo1NVrOGXJkyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjozNzo1M1rOGXJtrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzMwNw==", "bodyText": "maybe store the unmodifiable map wrapper in a field so you don't create one for each call", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426927307", "createdAt": "2020-05-18T22:30:55Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/metadata/ModMetadataV1.java", "diffHunk": "@@ -572,4 +564,30 @@ public LicenseEntry deserialize(JsonElement json, Type typeOfT, JsonDeserializat\n \t\t\t}\n \t\t}\n \t}\n+\n+\tpublic static class CustomValueContainer {\n+\t\tprivate Map<String, CustomValue> customValues = new HashMap<>();\n+\n+\t\tprivate Map<String, CustomValue> getCustomValues() {\n+\t\t\treturn Collections.unmodifiableMap(this.customValues);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTU4Mg==", "bodyText": "Well I'd say player should comment on that, we already end up recreating some lists and maps such as getting entrypoint containers here:\nhttps://github.com/FabricMC/fabric-loader/blob/master/src/main/java/net/fabricmc/loader/EntrypointStorage.java#L177", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426929582", "createdAt": "2020-05-18T22:37:53Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/metadata/ModMetadataV1.java", "diffHunk": "@@ -572,4 +564,30 @@ public LicenseEntry deserialize(JsonElement json, Type typeOfT, JsonDeserializat\n \t\t\t}\n \t\t}\n \t}\n+\n+\tpublic static class CustomValueContainer {\n+\t\tprivate Map<String, CustomValue> customValues = new HashMap<>();\n+\n+\t\tprivate Map<String, CustomValue> getCustomValues() {\n+\t\t\treturn Collections.unmodifiableMap(this.customValues);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzMwNw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODkyNjkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "isResolved": true, "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjozODozMFrOGXJubQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMzowOTo0OVrOGXKYKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw==", "bodyText": "Wouldn't it make sense to return a CvObject here ?", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426929773", "createdAt": "2020-05-18T22:38:30Z", "author": {"login": "Pyrofab"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMDIyMA==", "bodyText": "I think it is possible to define any custom value there, such as:\n\"custom\": {\n  \"myval\": true\n}\nWhich wouldn't be a CvObject", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426930220", "createdAt": "2020-05-18T22:39:59Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMDk4NA==", "bodyText": "@i509VCB He means to return CvObject getCustomValues() than Map<String, CustomValue> getCustomValues()\nSo the CvObject is what the \"custom\": has, like in your case,\n{\n  \"myval\": true\n}", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426930984", "createdAt": "2020-05-18T22:42:05Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMTMxNQ==", "bodyText": "Oh I see what was meant. Yeah that makes sense since the root value must be an object", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426931315", "createdAt": "2020-05-18T22:43:04Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMjEyNg==", "bodyText": "I would have thought that the Map is likely to be more useful to expose than a CvObject. (Although I think this brings up the related question of why CvObject doesn't implement Map directly).", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426932126", "createdAt": "2020-05-18T22:45:38Z", "author": {"login": "AlexIIL"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzMjcwNg==", "bodyText": "Imo Map is bad, as we should not expose any modification operations. CvObject doesn't while Map does.", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426932706", "createdAt": "2020-05-18T22:47:26Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzNTcyOQ==", "bodyText": "My reasoning is that we have a vast amount of library methods that can operate on maps directly (as it's a standard Java collection), plus it has a few more methods that might be useful to users (such as keySet()), whereas CvObject is a minimal interface with no javadoc.", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426935729", "createdAt": "2020-05-18T22:55:51Z", "author": {"login": "AlexIIL"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzNjUxNA==", "bodyText": "I could see adding a keySet() method or making it Iterable as of great benefit in another PR. Shouldn't be too bad in the impl side since CvObjectImpl is backed by a map.", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426936514", "createdAt": "2020-05-18T22:57:50Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzNjUyOQ==", "bodyText": "With your reasoning, we should dump the whole custom value system in favor of plain Object, and use checks like instanceof Number instanceof Boolean instanceof Map to retrieve the sub objects.\nI personally disagree with your proposal. The whole custom value system uses custom value, if they can use a map for the top level they still can't avoid depending on/using custom values in lower levels, so there is no point.", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426936529", "createdAt": "2020-05-18T22:57:54Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzODQyNg==", "bodyText": "No, that was not my suggestion. We still need CustomValue to limit the types that are available lower-down, however Map<String, CustomValue> does limit the possible types down to what can be expressed in JSON.", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426938426", "createdAt": "2020-05-18T23:03:08Z", "author": {"login": "AlexIIL"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzOTU2NQ==", "bodyText": "Oh yeah, taking AlexIIL's suggestions into consideration, this doesn't solve much unless we make CvObject implement Iterable<CustomValue> (EDIT: Or expose child objects)\nSo I'll need to add methods to CvObject to expose the child custom objects", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426939565", "createdAt": "2020-05-18T23:06:39Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzOTg4Mw==", "bodyText": "Edit2: Wait no it is iterable, what was I thinking lol", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426939883", "createdAt": "2020-05-18T23:07:41Z", "author": {"login": "i509VCB"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0MDIzOQ==", "bodyText": "CvObject is already Iterable<Map.Entry<String, CustomValue>>", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426940239", "createdAt": "2020-05-18T23:08:59Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0MDQ1OQ==", "bodyText": "The root type is always going to be a JSON object, which is exactly a CvObject", "url": "https://github.com/FabricMC/fabric-loader/pull/248#discussion_r426940459", "createdAt": "2020-05-18T23:09:49Z", "author": {"login": "liach"}, "path": "src/main/java/net/fabricmc/loader/api/metadata/ModMetadata.java", "diffHunk": "@@ -63,6 +64,7 @@\n \n \tboolean containsCustomValue(String key);\n \tCustomValue getCustomValue(String key);\n+\tMap<String, CustomValue> getCustomValues();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyOTc3Mw=="}, "originalCommit": {"oid": "affab7d3c68796db6ce6b9b19f3ed64b06042863"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3296, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}