{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MDE4ODE5", "number": 3151, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNTo0MTo1NlrODsSRlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNjowNjozMlrODsSX9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzYzMzQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNTo0MTo1NlrOF9HFew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNjowNDozMFrOF9HMOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyMzU0Nw==", "bodyText": "Is this method ever called for a pattern of \"\"? If so, it should return \"\" at that point.", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r399623547", "createdAt": "2020-03-28T05:41:56Z", "author": {"login": "jskeet"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -271,15 +271,16 @@ private String getUnqualifiedTypeName() {\n   @VisibleForTesting\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n-    int index = segments.size() - 2;\n-    while (index >= 0 && !isVariableBinding(segments.get(index))) {\n+    int index = segments.size() - 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1d3a42886ca0e89b511b1618aef3acbff939389"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTI3Mg==", "bodyText": "That's a good point!", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r399625272", "createdAt": "2020-03-28T06:04:30Z", "author": {"login": "yihanzhen"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -271,15 +271,16 @@ private String getUnqualifiedTypeName() {\n   @VisibleForTesting\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n-    int index = segments.size() - 2;\n-    while (index >= 0 && !isVariableBinding(segments.get(index))) {\n+    int index = segments.size() - 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyMzU0Nw=="}, "originalCommit": {"oid": "a1d3a42886ca0e89b511b1618aef3acbff939389"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzYzMzU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNTo0MjoxMVrOF9HFhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNjowNDozNVrOF9HMQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyMzU1OQ==", "bodyText": "Does this report an error?", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r399623559", "createdAt": "2020-03-28T05:42:11Z", "author": {"login": "jskeet"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -271,15 +271,16 @@ private String getUnqualifiedTypeName() {\n   @VisibleForTesting\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n-    int index = segments.size() - 2;\n-    while (index >= 0 && !isVariableBinding(segments.get(index))) {\n+    int index = segments.size() - 1;\n+    if (isVariableBinding(segments.get(index))) {\n+      index -= 2;\n+    } else {\n       index--;\n     }\n-    index++;\n-    if (index <= 0) {\n+    if (index < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1d3a42886ca0e89b511b1618aef3acbff939389"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTI4MA==", "bodyText": "Done", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r399625280", "createdAt": "2020-03-28T06:04:35Z", "author": {"login": "yihanzhen"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -271,15 +271,16 @@ private String getUnqualifiedTypeName() {\n   @VisibleForTesting\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n-    int index = segments.size() - 2;\n-    while (index >= 0 && !isVariableBinding(segments.get(index))) {\n+    int index = segments.size() - 1;\n+    if (isVariableBinding(segments.get(index))) {\n+      index -= 2;\n+    } else {\n       index--;\n     }\n-    index++;\n-    if (index <= 0) {\n+    if (index < 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyMzU1OQ=="}, "originalCommit": {"oid": "a1d3a42886ca0e89b511b1618aef3acbff939389"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzY0OTgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNjowNjozMlrOF9HMyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzoxMzoyMVrOF9z29g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTQxNg==", "bodyText": "I suspect this should be index >= 0 - as otherwise we get an empty pattern, which still isn't a useful parent.\n(Basically, taking the parent of \"foo\" for \"foos/{foo}\" is invalid, I'd say. The empty pattern can't represent a resource name, so it's not useful.)", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r399625416", "createdAt": "2020-03-28T06:06:32Z", "author": {"login": "jskeet"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -272,14 +272,16 @@ private String getUnqualifiedTypeName() {\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n     int index = segments.size() - 1;\n+    if (index < 0) {\n+      return \"\";\n+    }\n     if (isVariableBinding(segments.get(index))) {\n       index -= 2;\n     } else {\n       index--;\n     }\n-    if (index < 0) {\n-      return \"\";\n-    }\n+    Preconditions.checkArgument(\n+        index >= -1, \"malformatted pattern, can't calculate parent: %s\", pattern);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b08bf511a9d4b48b8120c31ce3f6cdc03b1012e1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNjA2Nw==", "bodyText": "That is correct from the public-facing point of view - but this is an internal method. We need to call this method on every resource pattern to find if it has a parent, if so, which resource does the parent belong to. Therefore we can't error if the calculated parent is empty (for instance projects/{project}). I guess we are sort of using an empty string as a way to express \"this pattern does not have a parent pattern\".", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r399626067", "createdAt": "2020-03-28T06:14:58Z", "author": {"login": "yihanzhen"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -272,14 +272,16 @@ private String getUnqualifiedTypeName() {\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n     int index = segments.size() - 1;\n+    if (index < 0) {\n+      return \"\";\n+    }\n     if (isVariableBinding(segments.get(index))) {\n       index -= 2;\n     } else {\n       index--;\n     }\n-    if (index < 0) {\n-      return \"\";\n-    }\n+    Preconditions.checkArgument(\n+        index >= -1, \"malformatted pattern, can't calculate parent: %s\", pattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTQxNg=="}, "originalCommit": {"oid": "b08bf511a9d4b48b8120c31ce3f6cdc03b1012e1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyOTA5NQ==", "bodyText": "Ah, okay - in C# I believe we only find parents when we're asked to :)", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r399629095", "createdAt": "2020-03-28T06:56:23Z", "author": {"login": "jskeet"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -272,14 +272,16 @@ private String getUnqualifiedTypeName() {\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n     int index = segments.size() - 1;\n+    if (index < 0) {\n+      return \"\";\n+    }\n     if (isVariableBinding(segments.get(index))) {\n       index -= 2;\n     } else {\n       index--;\n     }\n-    if (index < 0) {\n-      return \"\";\n-    }\n+    Preconditions.checkArgument(\n+        index >= -1, \"malformatted pattern, can't calculate parent: %s\", pattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTQxNg=="}, "originalCommit": {"oid": "b08bf511a9d4b48b8120c31ce3f6cdc03b1012e1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzM0Mg==", "bodyText": "Hi Jon, can you approve the PR if you don't think there are other issues?", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r399727342", "createdAt": "2020-03-29T00:38:09Z", "author": {"login": "yihanzhen"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -272,14 +272,16 @@ private String getUnqualifiedTypeName() {\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n     int index = segments.size() - 1;\n+    if (index < 0) {\n+      return \"\";\n+    }\n     if (isVariableBinding(segments.get(index))) {\n       index -= 2;\n     } else {\n       index--;\n     }\n-    if (index < 0) {\n-      return \"\";\n-    }\n+    Preconditions.checkArgument(\n+        index >= -1, \"malformatted pattern, can't calculate parent: %s\", pattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTQxNg=="}, "originalCommit": {"oid": "b08bf511a9d4b48b8120c31ce3f6cdc03b1012e1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1ODExMQ==", "bodyText": "There's still the matter of the parent - of \"*\" - which wasn't clear in my previous comment due to Markdown, unfortunately. Basically I'd like to see a test showing that if you pass in \"*\", you get \"*\" back - and code to make that work.", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r399758111", "createdAt": "2020-03-29T07:24:52Z", "author": {"login": "jskeet"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -272,14 +272,16 @@ private String getUnqualifiedTypeName() {\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n     int index = segments.size() - 1;\n+    if (index < 0) {\n+      return \"\";\n+    }\n     if (isVariableBinding(segments.get(index))) {\n       index -= 2;\n     } else {\n       index--;\n     }\n-    if (index < 0) {\n-      return \"\";\n-    }\n+    Preconditions.checkArgument(\n+        index >= -1, \"malformatted pattern, can't calculate parent: %s\", pattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTQxNg=="}, "originalCommit": {"oid": "b08bf511a9d4b48b8120c31ce3f6cdc03b1012e1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1NzExMA==", "bodyText": "Oh that solves all the puzzles now. I will fix \"*\" shortly.", "url": "https://github.com/googleapis/gapic-generator/pull/3151#discussion_r400357110", "createdAt": "2020-03-30T17:13:21Z", "author": {"login": "yihanzhen"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -272,14 +272,16 @@ private String getUnqualifiedTypeName() {\n   static String getParentPattern(String pattern) {\n     List<String> segments = getSegments(pattern);\n     int index = segments.size() - 1;\n+    if (index < 0) {\n+      return \"\";\n+    }\n     if (isVariableBinding(segments.get(index))) {\n       index -= 2;\n     } else {\n       index--;\n     }\n-    if (index < 0) {\n-      return \"\";\n-    }\n+    Preconditions.checkArgument(\n+        index >= -1, \"malformatted pattern, can't calculate parent: %s\", pattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTQxNg=="}, "originalCommit": {"oid": "b08bf511a9d4b48b8120c31ce3f6cdc03b1012e1"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3637, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}