{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MzM3NDIw", "number": 3193, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNDo1MlrOD7Z26A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTozMDowMlrOD7aU4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjE2MjMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNDo1MlrOGTtVsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo1MDo0NlrOGUUYMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxODk2Mg==", "bodyText": "super not important: please format these (some have spaces after /* some don't)", "url": "https://github.com/googleapis/gapic-generator/pull/3193#discussion_r423318962", "createdAt": "2020-05-11T21:04:52Z", "author": {"login": "vam-google"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -75,6 +76,19 @@\n   /** The entity name for the resource config. */\n   public abstract String getDerivedEntityName();\n \n+  public static ResourceDescriptorConfig getWildcardResource(ProtoFile protoFile) {\n+    return new AutoValue_ResourceDescriptorConfig(\n+        /* isDefinedAtMessageLevel= */ false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2719bcf7e4b40213458f743da4a2ae94036afa0d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1ODU3Ng==", "bodyText": "Done.", "url": "https://github.com/googleapis/gapic-generator/pull/3193#discussion_r423958576", "createdAt": "2020-05-12T18:50:46Z", "author": {"login": "miraleung"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -75,6 +76,19 @@\n   /** The entity name for the resource config. */\n   public abstract String getDerivedEntityName();\n \n+  public static ResourceDescriptorConfig getWildcardResource(ProtoFile protoFile) {\n+    return new AutoValue_ResourceDescriptorConfig(\n+        /* isDefinedAtMessageLevel= */ false,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxODk2Mg=="}, "originalCommit": {"oid": "2719bcf7e4b40213458f743da4a2ae94036afa0d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjIwNDg4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/google/api/codegen/config/ResourceDescriptorConfigTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMToxODozMFrOGTtwjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo1MDo0NFrOGUUYGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyNTgzOA==", "bodyText": "Is it a debug artifact?", "url": "https://github.com/googleapis/gapic-generator/pull/3193#discussion_r423325838", "createdAt": "2020-05-11T21:18:30Z", "author": {"login": "vam-google"}, "path": "src/test/java/com/google/api/codegen/config/ResourceDescriptorConfigTest.java", "diffHunk": "@@ -294,6 +294,61 @@ public void testGetChildParentResourceMap_MultiParentsMultiPatterns() {\n     assertThat(childParentResourceMap.get(\"food.google.com/Sauce\")).containsExactly(veggie, meat);\n   }\n \n+  @Test\n+  public void testGetChildParentResourceMap_MultiParentsMultiPatternsWithWildcard() {\n+    ResourceDescriptorConfig sauce =\n+        ResourceDescriptorConfig.from(\n+            ResourceDescriptor.newBuilder()\n+                .setType(\"food.google.com/Sauce\")\n+                .addPattern(\"steaks/{steak}/sauces/{sauce}\")\n+                .addPattern(\"barbeques/{barbeque}/sauces/{sauce}\")\n+                .addPattern(\"tofus/{tofu}/sauces/{sauce}\")\n+                .addPattern(\"salads/{salad}/sauces/{sauce}\")\n+                .addPattern(\"*\")\n+                .build(),\n+            protoFile,\n+            true);\n+\n+    ResourceDescriptorConfig meat =\n+        ResourceDescriptorConfig.from(\n+            ResourceDescriptor.newBuilder()\n+                .setType(\"food.google.com/Meat\")\n+                .addPattern(\"steaks/{steak}\")\n+                .addPattern(\"barbeques/{barbeque}\")\n+                .build(),\n+            protoFile,\n+            true);\n+\n+    ResourceDescriptorConfig veggie =\n+        ResourceDescriptorConfig.from(\n+            ResourceDescriptor.newBuilder()\n+                .setType(\"food.google.com/Veggie\")\n+                .addPattern(\"tofus/{tofu}\")\n+                .addPattern(\"salads/{salad}\")\n+                .build(),\n+            protoFile,\n+            true);\n+\n+    ResourceDescriptorConfig wildcard =\n+        ResourceDescriptorConfig.from(\n+            ResourceDescriptor.newBuilder().addPattern(\"*\").build(), protoFile, false);\n+\n+    Map<String, ResourceDescriptorConfig> descriptorConfigMap =\n+        getDescriptorConfigMap(sauce, meat, veggie);\n+    Map<String, List<ResourceDescriptorConfig>> patternResourceDescriptorMap =\n+        ResourceDescriptorConfig.getPatternResourceMap(Arrays.asList(sauce, meat, veggie));\n+\n+    Map<String, List<ResourceDescriptorConfig>> childParentResourceMap =\n+        ResourceDescriptorConfig.getChildParentResourceMap(\n+            descriptorConfigMap, patternResourceDescriptorMap);\n+    System.out.println(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2719bcf7e4b40213458f743da4a2ae94036afa0d"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1ODU1NA==", "bodyText": "Removed.", "url": "https://github.com/googleapis/gapic-generator/pull/3193#discussion_r423958554", "createdAt": "2020-05-12T18:50:44Z", "author": {"login": "miraleung"}, "path": "src/test/java/com/google/api/codegen/config/ResourceDescriptorConfigTest.java", "diffHunk": "@@ -294,6 +294,61 @@ public void testGetChildParentResourceMap_MultiParentsMultiPatterns() {\n     assertThat(childParentResourceMap.get(\"food.google.com/Sauce\")).containsExactly(veggie, meat);\n   }\n \n+  @Test\n+  public void testGetChildParentResourceMap_MultiParentsMultiPatternsWithWildcard() {\n+    ResourceDescriptorConfig sauce =\n+        ResourceDescriptorConfig.from(\n+            ResourceDescriptor.newBuilder()\n+                .setType(\"food.google.com/Sauce\")\n+                .addPattern(\"steaks/{steak}/sauces/{sauce}\")\n+                .addPattern(\"barbeques/{barbeque}/sauces/{sauce}\")\n+                .addPattern(\"tofus/{tofu}/sauces/{sauce}\")\n+                .addPattern(\"salads/{salad}/sauces/{sauce}\")\n+                .addPattern(\"*\")\n+                .build(),\n+            protoFile,\n+            true);\n+\n+    ResourceDescriptorConfig meat =\n+        ResourceDescriptorConfig.from(\n+            ResourceDescriptor.newBuilder()\n+                .setType(\"food.google.com/Meat\")\n+                .addPattern(\"steaks/{steak}\")\n+                .addPattern(\"barbeques/{barbeque}\")\n+                .build(),\n+            protoFile,\n+            true);\n+\n+    ResourceDescriptorConfig veggie =\n+        ResourceDescriptorConfig.from(\n+            ResourceDescriptor.newBuilder()\n+                .setType(\"food.google.com/Veggie\")\n+                .addPattern(\"tofus/{tofu}\")\n+                .addPattern(\"salads/{salad}\")\n+                .build(),\n+            protoFile,\n+            true);\n+\n+    ResourceDescriptorConfig wildcard =\n+        ResourceDescriptorConfig.from(\n+            ResourceDescriptor.newBuilder().addPattern(\"*\").build(), protoFile, false);\n+\n+    Map<String, ResourceDescriptorConfig> descriptorConfigMap =\n+        getDescriptorConfigMap(sauce, meat, veggie);\n+    Map<String, List<ResourceDescriptorConfig>> patternResourceDescriptorMap =\n+        ResourceDescriptorConfig.getPatternResourceMap(Arrays.asList(sauce, meat, veggie));\n+\n+    Map<String, List<ResourceDescriptorConfig>> childParentResourceMap =\n+        ResourceDescriptorConfig.getChildParentResourceMap(\n+            descriptorConfigMap, patternResourceDescriptorMap);\n+    System.out.println(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyNTgzOA=="}, "originalCommit": {"oid": "2719bcf7e4b40213458f743da4a2ae94036afa0d"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjIzOTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTozMDowMlrOGTuGAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo1MDo0MlrOGUUYAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzMTMyOQ==", "bodyText": "Are these intended, or are they the debug artifacts?", "url": "https://github.com/googleapis/gapic-generator/pull/3193#discussion_r423331329", "createdAt": "2020-05-11T21:30:02Z", "author": {"login": "vam-google"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -218,7 +232,25 @@ private String getUnqualifiedTypeName() {\n         ImmutableList.copyOf(descriptorConfigMap.values());\n     for (Map.Entry<String, ResourceDescriptorConfig> entry : descriptorConfigMap.entrySet()) {\n       ResourceDescriptorConfig childResource = entry.getValue();\n+      System.out.println(\n+          \"DEL: Looking at entry \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2719bcf7e4b40213458f743da4a2ae94036afa0d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1ODUyOA==", "bodyText": "Removed.", "url": "https://github.com/googleapis/gapic-generator/pull/3193#discussion_r423958528", "createdAt": "2020-05-12T18:50:42Z", "author": {"login": "miraleung"}, "path": "src/main/java/com/google/api/codegen/config/ResourceDescriptorConfig.java", "diffHunk": "@@ -218,7 +232,25 @@ private String getUnqualifiedTypeName() {\n         ImmutableList.copyOf(descriptorConfigMap.values());\n     for (Map.Entry<String, ResourceDescriptorConfig> entry : descriptorConfigMap.entrySet()) {\n       ResourceDescriptorConfig childResource = entry.getValue();\n+      System.out.println(\n+          \"DEL: Looking at entry \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzMTMyOQ=="}, "originalCommit": {"oid": "2719bcf7e4b40213458f743da4a2ae94036afa0d"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3648, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}