{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NzM2NTUz", "number": 3067, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMDoxNzowM1rODWHzfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMDoyNzowNlrODWH5EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTIzMTM1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/google/api/codegen/discogapic/testdata/java/java_simplecompute.v1.json.baseline", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMDoxNzowNFrOFas4Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODo0MjoyNlrOFbCO_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0MjU4Nw==", "bodyText": "It is ok to keep it here, but please try to not mix unrelated refactoring/formatting with new features. For cases, when it happens, please mention it in the PR description.", "url": "https://github.com/googleapis/gapic-generator/pull/3067#discussion_r363542587", "createdAt": "2020-01-07T00:17:04Z", "author": {"login": "vam-google"}, "path": "src/test/java/com/google/api/codegen/discogapic/testdata/java/java_simplecompute.v1.json.baseline", "diffHunk": "@@ -8890,8 +8890,8 @@ public class AddressClient implements BackgroundResource {\n   public final AggregatedListAddressesPagedResponse aggregatedListAddresses(ProjectName project) {\n     AggregatedListAddressesHttpRequest request =\n         AggregatedListAddressesHttpRequest.newBuilder()\n-        .setProject(project == null ? null : project.toString())\n-        .build();\n+            .setProject(project == null ? null : project.toString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b1c44842b3da6d20511b34ca401190d64667ca8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg5MjQ3Ng==", "bodyText": "Edited the PR description.", "url": "https://github.com/googleapis/gapic-generator/pull/3067#discussion_r363892476", "createdAt": "2020-01-07T18:42:26Z", "author": {"login": "yihanzhen"}, "path": "src/test/java/com/google/api/codegen/discogapic/testdata/java/java_simplecompute.v1.json.baseline", "diffHunk": "@@ -8890,8 +8890,8 @@ public class AddressClient implements BackgroundResource {\n   public final AggregatedListAddressesPagedResponse aggregatedListAddresses(ProjectName project) {\n     AggregatedListAddressesHttpRequest request =\n         AggregatedListAddressesHttpRequest.newBuilder()\n-        .setProject(project == null ? null : project.toString())\n-        .build();\n+            .setProject(project == null ? null : project.toString())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0MjU4Nw=="}, "originalCommit": {"oid": "6b1c44842b3da6d20511b34ca401190d64667ca8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTI0MTgyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/google/api/codegen/csharp/gapic_snippets.snip", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMDoyNDoxMFrOFas-rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODo1Mjo0OFrOFbCgkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDIzOQ==", "bodyText": "Probably the logic like this should be in the view object itself or in the @snippetArgTypes() \"snip\" method (so you can avoid repeating the @if statement everywhere).", "url": "https://github.com/googleapis/gapic-generator/pull/3067#discussion_r363544239", "createdAt": "2020-01-07T00:24:10Z", "author": {"login": "vam-google"}, "path": "src/main/resources/com/google/api/codegen/csharp/gapic_snippets.snip", "diffHunk": "@@ -67,7 +67,7 @@\n @private flattenedMethodSync(snippetMethod)\n     public void {@snippetMethod.snippetMethodName}()\n     {\n-        // Snippet: {@snippetMethod.method.name}({@snippetArgTypes(snippetMethod.method.methodParams)},CallSettings)\n+        // Snippet: {@snippetMethod.method.name}({@snippetArgTypes(snippetMethod.method.methodParams)}{@if(snippetMethod.method.methodParams, \",\", \"\")}CallSettings)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b1c44842b3da6d20511b34ca401190d64667ca8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg5Njk3Nw==", "bodyText": "So @snippetArgTypes() are reused in another overload which has an additional argument CancellationToken (see here). Moving CallingSettings into the view object will cause huge refactoring to C# templates. Given the state of the C# micro generator it is probably not worth it...", "url": "https://github.com/googleapis/gapic-generator/pull/3067#discussion_r363896977", "createdAt": "2020-01-07T18:52:48Z", "author": {"login": "yihanzhen"}, "path": "src/main/resources/com/google/api/codegen/csharp/gapic_snippets.snip", "diffHunk": "@@ -67,7 +67,7 @@\n @private flattenedMethodSync(snippetMethod)\n     public void {@snippetMethod.snippetMethodName}()\n     {\n-        // Snippet: {@snippetMethod.method.name}({@snippetArgTypes(snippetMethod.method.methodParams)},CallSettings)\n+        // Snippet: {@snippetMethod.method.name}({@snippetArgTypes(snippetMethod.method.methodParams)}{@if(snippetMethod.method.methodParams, \",\", \"\")}CallSettings)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDIzOQ=="}, "originalCommit": {"oid": "6b1c44842b3da6d20511b34ca401190d64667ca8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTI0MjgzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/google/api/codegen/java/grpc_test.snip", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMDoyNDo1NlrOFas_UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODo1MzozMVrOFbCh0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDQwMA==", "bodyText": "Why is this needed?", "url": "https://github.com/googleapis/gapic-generator/pull/3067#discussion_r363544400", "createdAt": "2020-01-07T00:24:56Z", "author": {"login": "vam-google"}, "path": "src/main/resources/com/google/api/codegen/java/grpc_test.snip", "diffHunk": "@@ -82,8 +82,10 @@\n   public void {@test.name}() {\n     {@addResponse(test)}\n \n-    {@initCode(test.testCaseInitCode)}\n+    @if test.testCaseInitCode.lines", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b1c44842b3da6d20511b34ca401190d64667ca8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg5NzI5OA==", "bodyText": "To avoid the extra blank line if test.testCaseInitCode is empty.", "url": "https://github.com/googleapis/gapic-generator/pull/3067#discussion_r363897298", "createdAt": "2020-01-07T18:53:31Z", "author": {"login": "yihanzhen"}, "path": "src/main/resources/com/google/api/codegen/java/grpc_test.snip", "diffHunk": "@@ -82,8 +82,10 @@\n   public void {@test.name}() {\n     {@addResponse(test)}\n \n-    {@initCode(test.testCaseInitCode)}\n+    @if test.testCaseInitCode.lines", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDQwMA=="}, "originalCommit": {"oid": "6b1c44842b3da6d20511b34ca401190d64667ca8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTI0NTYxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/com/google/api/codegen/java/main.snip", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMDoyNzowNlrOFatBFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODo1ODowNlrOFbCpaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDg1Mw==", "bodyText": "Can @builderSetCalls method return nothing if apiMethod.requestObjectParams is empty? I is subjective, but it seems like moving the check to the @builderSetCalls snip method is cleaner, than having the if-else statement here. Also it can reduce code duplication (seems same check is done on L613)", "url": "https://github.com/googleapis/gapic-generator/pull/3067#discussion_r363544853", "createdAt": "2020-01-07T00:27:06Z", "author": {"login": "vam-google"}, "path": "src/main/resources/com/google/api/codegen/java/main.snip", "diffHunk": "@@ -452,9 +452,13 @@\n       {@pathTemplateCheckLine(pathTemplateCheck)}\n     @end\n     {@apiMethod.serviceRequestTypeName} request =\n-        {@apiMethod.serviceRequestTypeName}.newBuilder()\n-        {@builderSetCalls(apiMethod.requestObjectParams)}\n-        .build();\n+        @if apiMethod.requestObjectParams\n+          {@apiMethod.serviceRequestTypeName}.newBuilder()\n+              {@builderSetCalls(apiMethod.requestObjectParams)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b1c44842b3da6d20511b34ca401190d64667ca8"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg5OTI0Mw==", "bodyText": "I did this because even if @builderSetCalls returns nothing, there will be an empty newline in the caller method. This is some uncommon settings about snippet that I never understand... That's also why I wrapped @builderSetCalls in an if-else statement.", "url": "https://github.com/googleapis/gapic-generator/pull/3067#discussion_r363899243", "createdAt": "2020-01-07T18:58:06Z", "author": {"login": "yihanzhen"}, "path": "src/main/resources/com/google/api/codegen/java/main.snip", "diffHunk": "@@ -452,9 +452,13 @@\n       {@pathTemplateCheckLine(pathTemplateCheck)}\n     @end\n     {@apiMethod.serviceRequestTypeName} request =\n-        {@apiMethod.serviceRequestTypeName}.newBuilder()\n-        {@builderSetCalls(apiMethod.requestObjectParams)}\n-        .build();\n+        @if apiMethod.requestObjectParams\n+          {@apiMethod.serviceRequestTypeName}.newBuilder()\n+              {@builderSetCalls(apiMethod.requestObjectParams)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NDg1Mw=="}, "originalCommit": {"oid": "6b1c44842b3da6d20511b34ca401190d64667ca8"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3661, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}