{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNzQ0Mzg2", "number": 3268, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMjozMDozMlrOEbw5WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMjozMjozMlrOEbw7JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTQ4MTIxOnYy", "diffSide": "RIGHT", "path": "showcase/java/src/test/java/com/google/api/showcase/ShowcaseTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMjozMDozMlrOHF4ebg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMjozODowMlrOHF4osg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkzMDIyMg==", "bodyText": "Why not just int i = 1 in the for loop declaration?", "url": "https://github.com/googleapis/gapic-generator/pull/3268#discussion_r475930222", "createdAt": "2020-08-24T22:30:32Z", "author": {"login": "vam-google"}, "path": "showcase/java/src/test/java/com/google/api/showcase/ShowcaseTest.java", "diffHunk": "@@ -258,4 +277,66 @@ public void block() {\n                 .build());\n     assertThat(result.getContent()).isEqualTo(\"Hello, World!\");\n   }\n+\n+  @Test\n+  public void attemptSequence() {\n+    Sequence toCreate =\n+        Sequence.newBuilder()\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.UNAVAILABLE_VALUE)))\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.UNAVAILABLE_VALUE)))\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.OK_VALUE)))\n+            .build();\n+    Sequence sequence = seqClient.createSequence(toCreate);\n+    assertThat(sequence.getName()).isNotNull();\n+\n+    seqClient.attemptSequence(sequence.getName());\n+\n+    SequenceReport report = seqClient.getSequenceReport(sequence.getName() + \"/sequenceReport\");\n+    assertThat(report.getAttemptsList()).isNotNull();\n+    assertThat(report.getAttemptsList().size()).isEqualTo(3);\n+  }\n+\n+  @Test\n+  public void attemptSequenceTimeoutBackoff() {\n+    Sequence toCreate =\n+        Sequence.newBuilder()\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setDelay(Duration.newBuilder().setSeconds(2L))\n+                    .setStatus(Status.newBuilder().setCode(Code.UNAVAILABLE_VALUE)))\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setDelay(Duration.newBuilder().setSeconds(2L))\n+                    .setStatus(Status.newBuilder().setCode(Code.UNAVAILABLE_VALUE)))\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.OK_VALUE)))\n+            .build();\n+    Sequence sequence = seqClient.createSequence(toCreate);\n+    assertThat(sequence.getName()).isNotNull();\n+\n+    seqClient.attemptSequence(\n+        AttemptSequenceRequest.newBuilder().setName(sequence.getName()).build());\n+\n+    SequenceReport report = seqClient.getSequenceReport(sequence.getName() + \"/sequenceReport\");\n+    assertThat(report.getAttemptsList()).isNotNull();\n+    assertThat(report.getAttemptsList().size()).isEqualTo(3);\n+    for (int i = 0; i < report.getAttemptsList().size(); i++) {\n+      if (i == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cde440332a0c2a01bc3e2edf4d8b3ee584b3414"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkzMjg1MA==", "bodyText": "Good call, changed.", "url": "https://github.com/googleapis/gapic-generator/pull/3268#discussion_r475932850", "createdAt": "2020-08-24T22:38:02Z", "author": {"login": "noahdietz"}, "path": "showcase/java/src/test/java/com/google/api/showcase/ShowcaseTest.java", "diffHunk": "@@ -258,4 +277,66 @@ public void block() {\n                 .build());\n     assertThat(result.getContent()).isEqualTo(\"Hello, World!\");\n   }\n+\n+  @Test\n+  public void attemptSequence() {\n+    Sequence toCreate =\n+        Sequence.newBuilder()\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.UNAVAILABLE_VALUE)))\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.UNAVAILABLE_VALUE)))\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.OK_VALUE)))\n+            .build();\n+    Sequence sequence = seqClient.createSequence(toCreate);\n+    assertThat(sequence.getName()).isNotNull();\n+\n+    seqClient.attemptSequence(sequence.getName());\n+\n+    SequenceReport report = seqClient.getSequenceReport(sequence.getName() + \"/sequenceReport\");\n+    assertThat(report.getAttemptsList()).isNotNull();\n+    assertThat(report.getAttemptsList().size()).isEqualTo(3);\n+  }\n+\n+  @Test\n+  public void attemptSequenceTimeoutBackoff() {\n+    Sequence toCreate =\n+        Sequence.newBuilder()\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setDelay(Duration.newBuilder().setSeconds(2L))\n+                    .setStatus(Status.newBuilder().setCode(Code.UNAVAILABLE_VALUE)))\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setDelay(Duration.newBuilder().setSeconds(2L))\n+                    .setStatus(Status.newBuilder().setCode(Code.UNAVAILABLE_VALUE)))\n+            .addResponses(\n+                Sequence.Response.newBuilder()\n+                    .setStatus(Status.newBuilder().setCode(Code.OK_VALUE)))\n+            .build();\n+    Sequence sequence = seqClient.createSequence(toCreate);\n+    assertThat(sequence.getName()).isNotNull();\n+\n+    seqClient.attemptSequence(\n+        AttemptSequenceRequest.newBuilder().setName(sequence.getName()).build());\n+\n+    SequenceReport report = seqClient.getSequenceReport(sequence.getName() + \"/sequenceReport\");\n+    assertThat(report.getAttemptsList()).isNotNull();\n+    assertThat(report.getAttemptsList().size()).isEqualTo(3);\n+    for (int i = 0; i < report.getAttemptsList().size(); i++) {\n+      if (i == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkzMDIyMg=="}, "originalCommit": {"oid": "4cde440332a0c2a01bc3e2edf4d8b3ee584b3414"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTQ4NTgwOnYy", "diffSide": "RIGHT", "path": "showcase/java/src/test/java/com/google/api/showcase/ShowcaseTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMjozMjozMlrOHF4hLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMjozOTowMlrOHF4p4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkzMDkyNA==", "bodyText": "The other test is TimeoutBackoff, can you be more specific about what this test tests?", "url": "https://github.com/googleapis/gapic-generator/pull/3268#discussion_r475930924", "createdAt": "2020-08-24T22:32:32Z", "author": {"login": "vam-google"}, "path": "showcase/java/src/test/java/com/google/api/showcase/ShowcaseTest.java", "diffHunk": "@@ -258,4 +277,66 @@ public void block() {\n                 .build());\n     assertThat(result.getContent()).isEqualTo(\"Hello, World!\");\n   }\n+\n+  @Test\n+  public void attemptSequence() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cde440332a0c2a01bc3e2edf4d8b3ee584b3414"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkzMzE1NQ==", "bodyText": "I opted to remove this test because it wasn't doing anything more than the TimeoutBackoff one. It was the first one I added as I was developing it and I removed some others that were irrelevant to this PR, but neglected to remove this one.", "url": "https://github.com/googleapis/gapic-generator/pull/3268#discussion_r475933155", "createdAt": "2020-08-24T22:39:02Z", "author": {"login": "noahdietz"}, "path": "showcase/java/src/test/java/com/google/api/showcase/ShowcaseTest.java", "diffHunk": "@@ -258,4 +277,66 @@ public void block() {\n                 .build());\n     assertThat(result.getContent()).isEqualTo(\"Hello, World!\");\n   }\n+\n+  @Test\n+  public void attemptSequence() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkzMDkyNA=="}, "originalCommit": {"oid": "4cde440332a0c2a01bc3e2edf4d8b3ee584b3414"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3608, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}