{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NTA5Mjc2", "number": 3139, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMjoyMzo0MFrODoBn9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMTo1ODo0NVrODqkfNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjk2MjQ1OnYy", "diffSide": "RIGHT", "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BUILD.bazel.gapic_api.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMjoyMzo0MFrOF2XQeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDoyNDo0OVrOF3sqyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0ODQ3NA==", "bodyText": "Should I use {{name}} attribute here to add the package name suffix instead of parsing the proto package using the newly added assembleGoGapicImportPath method?\nIt would be, simply:\nimportpath = \"{{go_gapic_importpath}};{{name}}\",\nInstead of parsing the proto package and combining it into it's own template variable go_gapic_importpath_pkg.", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r392548474", "createdAt": "2020-03-14T02:23:40Z", "author": {"login": "noahdietz"}, "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BUILD.bazel.gapic_api.mustache", "diffHunk": "@@ -106,10 +106,9 @@ go_proto_library(\n \n go_gapic_library(\n     name = \"{{name}}_go_gapic\",\n-    src = \":{{name}}_proto_with_info\",\n-    gapic_yaml = \"{{gapic_yaml}}\",\n-    importpath = \"{{go_gapic_importpath}}\",\n-    package = \"{{package}}\",\n+    srcs = [\":{{name}}_proto_with_info\"],\n+    grpc_service_config = \"{{grpc_service_config}}\",\n+    importpath = \"{{go_gapic_importpath_pkg}}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8f6f7dd19edb6c03a422b2eed66593c2604b397"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0Nzg1MA==", "bodyText": "{{name}} is derived in the same way, so I'm going to use that instead of redoing the same parsing with a helper function.", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r393947850", "createdAt": "2020-03-17T20:24:49Z", "author": {"login": "noahdietz"}, "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BUILD.bazel.gapic_api.mustache", "diffHunk": "@@ -106,10 +106,9 @@ go_proto_library(\n \n go_gapic_library(\n     name = \"{{name}}_go_gapic\",\n-    src = \":{{name}}_proto_with_info\",\n-    gapic_yaml = \"{{gapic_yaml}}\",\n-    importpath = \"{{go_gapic_importpath}}\",\n-    package = \"{{package}}\",\n+    srcs = [\":{{name}}_proto_with_info\"],\n+    grpc_service_config = \"{{grpc_service_config}}\",\n+    importpath = \"{{go_gapic_importpath_pkg}}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0ODQ3NA=="}, "originalCommit": {"oid": "e8f6f7dd19edb6c03a422b2eed66593c2604b397"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTg5MDUxOnYy", "diffSide": "RIGHT", "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDozMjowMlrOF3s5iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzoyMDo0MlrOF5cq0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1MTYyNQ==", "bodyText": "this change looks suspicious, do you really need part after semicolon? The other go rules (those which come in rules_go) never require it.", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r393951625", "createdAt": "2020-03-17T20:32:02Z", "author": {"login": "vam-google"}, "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java", "diffHunk": "@@ -73,7 +79,7 @@\n     tokens.put(\n         \"java_gapic_test_deps\", joinSetWithIndentationNl(mapJavaGapicTestDeps(actualImports)));\n \n-    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\").split(\";\")[0]);\n+    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c68dadff4529ce9629f8552cf97fcd535324d234"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4Mjg2Nw==", "bodyText": "This is an outdated diff you are commenting on. The \"splitting\" code is still there.", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r395782867", "createdAt": "2020-03-20T17:20:42Z", "author": {"login": "noahdietz"}, "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java", "diffHunk": "@@ -73,7 +79,7 @@\n     tokens.put(\n         \"java_gapic_test_deps\", joinSetWithIndentationNl(mapJavaGapicTestDeps(actualImports)));\n \n-    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\").split(\";\")[0]);\n+    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1MTYyNQ=="}, "originalCommit": {"oid": "c68dadff4529ce9629f8552cf97fcd535324d234"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTY0MTQyOnYy", "diffSide": "RIGHT", "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/ApiDir.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMTo1NzoxN1rOF6ZmWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjozNjoyOVrOF6an_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTE0NQ==", "bodyText": "Look like you are searching for an exact string match. If this is the case, then there is no need to use regexps. This thing already depends heavily on them and uses them in cases where they are not supposed to be used... If we can simplify it, then we probably should.", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r396781145", "createdAt": "2020-03-23T21:57:17Z", "author": {"login": "vam-google"}, "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/ApiDir.java", "diffHunk": "@@ -10,20 +10,32 @@\n       Pattern.compile(\"(?m)^type\\\\s*:\\\\s*google.api.Service\\\\s*$\");\n   private static Pattern SERVICE_YAML_NAME_VERSION =\n       Pattern.compile(\"_(?<version>[a-zA-Z]+\\\\d+[\\\\w]*)\\\\.yaml\");\n+  private static Pattern CLOUD_AUTH_SCOPE =\n+      Pattern.compile(\"https\\\\:\\\\/\\\\/www\\\\.googleapis\\\\.com\\\\/auth\\\\/cloud-platform\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ece2f93db07dcc12747c21cef8b477c4b32a4b36"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5Nzk0OQ==", "bodyText": "I switched it to a String contains check. Is that OK?", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r396797949", "createdAt": "2020-03-23T22:36:29Z", "author": {"login": "noahdietz"}, "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/ApiDir.java", "diffHunk": "@@ -10,20 +10,32 @@\n       Pattern.compile(\"(?m)^type\\\\s*:\\\\s*google.api.Service\\\\s*$\");\n   private static Pattern SERVICE_YAML_NAME_VERSION =\n       Pattern.compile(\"_(?<version>[a-zA-Z]+\\\\d+[\\\\w]*)\\\\.yaml\");\n+  private static Pattern CLOUD_AUTH_SCOPE =\n+      Pattern.compile(\"https\\\\:\\\\/\\\\/www\\\\.googleapis\\\\.com\\\\/auth\\\\/cloud-platform\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTE0NQ=="}, "originalCommit": {"oid": "ece2f93db07dcc12747c21cef8b477c4b32a4b36"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTY0NTk4OnYy", "diffSide": "RIGHT", "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMTo1ODo0NVrOF6ZpGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjozNjozN1rOF6aoLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTg0OQ==", "bodyText": "I guess this constructor is getting really big. If possible, please consider moving this in a private method (it is go-specific stuff, so putting it in separate method should be ok).", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r396781849", "createdAt": "2020-03-23T21:58:45Z", "author": {"login": "vam-google"}, "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java", "diffHunk": "@@ -73,7 +79,29 @@\n     tokens.put(\n         \"java_gapic_test_deps\", joinSetWithIndentationNl(mapJavaGapicTestDeps(actualImports)));\n \n-    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\").split(\";\")[0]);\n+    // Construct GAPIC import path & package name based on go_package proto option\n+    String goPkg = bp.getLangProtoPackages().get(\"go\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ece2f93db07dcc12747c21cef8b477c4b32a4b36"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5Nzk5Nw==", "bodyText": "Done!", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r396797997", "createdAt": "2020-03-23T22:36:37Z", "author": {"login": "noahdietz"}, "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java", "diffHunk": "@@ -73,7 +79,29 @@\n     tokens.put(\n         \"java_gapic_test_deps\", joinSetWithIndentationNl(mapJavaGapicTestDeps(actualImports)));\n \n-    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\").split(\";\")[0]);\n+    // Construct GAPIC import path & package name based on go_package proto option\n+    String goPkg = bp.getLangProtoPackages().get(\"go\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTg0OQ=="}, "originalCommit": {"oid": "ece2f93db07dcc12747c21cef8b477c4b32a4b36"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3627, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}