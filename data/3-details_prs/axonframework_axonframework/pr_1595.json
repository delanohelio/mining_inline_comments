{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3ODg5NzE2", "number": 1595, "title": "Child Entities Duplicated in Aggregate Model", "bodyText": "Whenever an Aggregate class is provided which contained an hierarchy, there were possibilities that @AggregateMember annotated fields/methods would result in duplicate ChildEntity instances inside the AggregateModel. More specifically, this occurred if the root in the hierarchy contained the entities, whilst all other levels in the hierarchy only contained message handling functions.\nThe reason for this occurring turned out to be two fold:\n\nThe AnnotatedAggregateModel#inspectFieldsAndMethods methods loops over all classes found by the AnnotatedHandlerInspector. For the loop it however used the key set from the AnnotatedHandlerInspector#getAllHandlers method. Due to this it was possible that levels in the implementation hierarchy which did not contain any message handling functions were ignored entirely. This was however resolved by the subsequent for-loop which reflectively searches for all fields and methods.\nAlthough issue one was mitigated to some extent by the reflective search of all fields and methods, this also meant that if the AnnotatedHandlerInspector#getAllHandlers method responded with a class type on each level of the Aggregate hierarchy, that subsequent invocation of the reflective operation would have the fields/methods reoccur. Due to this, ChildEntity instances could be inserted into the model several times. Essentially for each level which contained a message handling function, which is the root implementation or a sub implementation of it.\n\nTo solve the above problem, both issues were tackled.\n\nThe AnnotatedHandlerInspector has a new method, called the getAllInspectedTypes. This returns the actual type, all super classes and all sub classes which have been validated by the inspector. It's this set which is used by the AnnotatedAggregateModel to visit every step in the hierarchy and check for annotated fields/methods.\nThe AnnotatedAggregateModel no longer uses a recursive version of the ReflectionUtils fieldsOf/methodsOf functions. This is replaced for a non-recursive variant instead, just checking for fields/methods on the exact class. This is now an option as the entire set of classes which is validated is correctly returned by the AnnotatedHandlerInspector.\n\nThere was a short side track in fixing this through the ChildEntity and AnnotatedChildEntity which was disregarded later. What's left of that side track in this PR is clean up of warnings and javadoc.", "createdAt": "2020-11-09T16:37:48Z", "url": "https://github.com/AxonFramework/AxonFramework/pull/1595", "merged": true, "mergeCommit": {"oid": "e6e977b391be6fda52bd2805ce5045c9486df4d8"}, "closed": true, "closedAt": "2020-11-10T16:29:30Z", "author": {"login": "smcvb"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY7aRpgH2gAyNTE3ODg5NzE2OmM5NjM5MTc2ZjQ0ZDkwMjY0NDM1NmRkYzg0YTk0MjI4MTc3OWJjMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbJIPMAH2gAyNTE3ODg5NzE2Ojc0MmQ2MGFkOTkyMDQxNmMyY2VmZGZiMmJmMjAyZTUyNzAxZGI5YjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c9639176f44d902644356ddc84a942281779bc23", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/c9639176f44d902644356ddc84a942281779bc23", "committedDate": "2020-11-03T16:04:31Z", "message": "Add child entity class method\n\nAdd a method which exposes the class of the child entity. This can\nfurther be used to verify whether a given ChildEntity is included twice\ninto an annotated meta model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a280c8e49c4a1dfa946ea77b3185b9f54d33fc18", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/a280c8e49c4a1dfa946ea77b3185b9f54d33fc18", "committedDate": "2020-11-03T16:05:42Z", "message": "Use a map of class to ChildEntity\n\nUse a map of class to ChildEntity to ensure a second instance of a given\n ChildEntity will override the previous, thus ensuring no duplicate\n entries of a ChildEntity can occur between an annotated meta model's\n children"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b26d01543403371f2685cbe56ebcab93925249a0", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/b26d01543403371f2685cbe56ebcab93925249a0", "committedDate": "2020-11-03T16:07:13Z", "message": "Add a test case validating correct amount of handler invocations\n\nAdd a test case which creates a polymorphic aggregate with aggregate\nmembers on the root. Validate in this test case that the AggregateEvent\nhandler will only be invoked twice (once for the root and once for the\nmember) and that the MemberEvent is only invoked once (for the member)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffb8d7dc320e7514b39ecde3099661c24588614b", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/ffb8d7dc320e7514b39ecde3099661c24588614b", "committedDate": "2020-11-03T16:08:40Z", "message": "Clean up touched code\n\nClean up the touched classes, by fine tuning javadoc, resolving warnings\n and renaming some parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41439493baa67bc8a8fdc3c9672450c18d6e56e3", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/41439493baa67bc8a8fdc3c9672450c18d6e56e3", "committedDate": "2020-11-09T13:51:52Z", "message": "Add non-recursive option to find fields/methods\n\nAdd an option to chose whether fieldsOf and methodsOf should perform\ntheir search recursively by defining a boolean. Add tests for the\nadjustment and remove any warnings were possible\n\n#duplicate-child-entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e77373be4804822fe9e8496167406a67ec30962", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/2e77373be4804822fe9e8496167406a67ec30962", "committedDate": "2020-11-09T13:54:10Z", "message": "Rename test class\n\nRename test class\n\n#duplicate-child-entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d6fc62d63eeafae0c10d9ba57f414c49731ed5", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/34d6fc62d63eeafae0c10d9ba57f414c49731ed5", "committedDate": "2020-11-09T16:04:22Z", "message": "Introduce a getAllInspectedTypes method\n\nIntroduce an operation to return all the inspected types. This can\nfurther be used to drive model creation for example\n\n#duplicate-child-entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62ab41fd35daafd5c95f92abd44eef822dc3d8d7", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/62ab41fd35daafd5c95f92abd44eef822dc3d8d7", "committedDate": "2020-11-09T16:08:19Z", "message": "Adjust model factory to be based on inspected types\n\nThe meta model factory currently has two problems: (1) it only takes\ninto account actual classes which contain handler methods and (2) for\neach of these it will recursively find all the handlers. Point one\nsignals that some parts of the Aggregate hierarchy can be completed\ndisregarded when it comes to searching for aggregate members for\nexample, as it is perfectly fine for a class to have no handlers and\nsome members. Point 2 is a hard requirement because _if_ several levels\nof the hierarchy contain handlers, then we would recursively find all\nfields and methods which should partake in model creation. This however\nmeans that objects on the root will be taken into account every time a\nlower level implementation is scanned. We should thus adjust the\nbehavior to base itself on the inspected classes, and only take the\nfields/methods on each of those into account.\n\n#duplicate-child-entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dce079ddadfa40bc609d39235a749896aca7874", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/2dce079ddadfa40bc609d39235a749896aca7874", "committedDate": "2020-11-09T16:10:05Z", "message": "Undo commit c9639176f44d902644356ddc84a942281779bc23\n\nRemove the option to check a child entities class, as it's not needed\nanymore\n\n#duplicate-child-entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d9211fa6ebbf7912d5ccc2fd6e3c69496b4758a", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/6d9211fa6ebbf7912d5ccc2fd6e3c69496b4758a", "committedDate": "2020-11-09T16:24:59Z", "message": "Introduce polymorphic test case\n\nIntroduce a test case which validate the same behavior of a polymorphic\naggregate is being used\n\n#duplicate-child-entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cd5b654fc9b84319d238cfb33257572a9f453e5", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/5cd5b654fc9b84319d238cfb33257572a9f453e5", "committedDate": "2020-11-09T16:36:47Z", "message": "Correct javadoc\n\nCorrect javadoc to reflect the class hierarchy\n\n#duplicate-child-entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "deae192bc3793efcf38095deaf0eab972aeaea24", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/deae192bc3793efcf38095deaf0eab972aeaea24", "committedDate": "2020-11-10T08:19:29Z", "message": "Fix test case\n\nFix test case by adjusting counter on start up\n\n#duplicate-child-entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32b1f8b5655a2e3ea9e1922757ab34b016e3985a", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/32b1f8b5655a2e3ea9e1922757ab34b016e3985a", "committedDate": "2020-11-10T09:01:40Z", "message": "Rename field\n\nRename field to not bump with global inspectedType field\n\n#duplicate-child-entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0914e33b277a66b5d3b77b9ec566c80612da1de2", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/0914e33b277a66b5d3b77b9ec566c80612da1de2", "committedDate": "2020-11-10T09:02:47Z", "message": "Merge remote-tracking branch 'origin/axon-4.4.x' into bug/deduplicate-child-entities"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTQ2NzMy", "url": "https://github.com/AxonFramework/AxonFramework/pull/1595#pullrequestreview-527146732", "createdAt": "2020-11-10T12:21:54Z", "commit": {"oid": "0914e33b277a66b5d3b77b9ec566c80612da1de2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTQ4MDQz", "url": "https://github.com/AxonFramework/AxonFramework/pull/1595#pullrequestreview-527148043", "createdAt": "2020-11-10T12:23:51Z", "commit": {"oid": "0914e33b277a66b5d3b77b9ec566c80612da1de2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTcxNzYx", "url": "https://github.com/AxonFramework/AxonFramework/pull/1595#pullrequestreview-527171761", "createdAt": "2020-11-10T12:54:15Z", "commit": {"oid": "0914e33b277a66b5d3b77b9ec566c80612da1de2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NDoxNVrOHwbNFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NDoxNVrOHwbNFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUzOTQxMg==", "bodyText": "Nit: Would be good also verify the count of inspected types, or reverse the assertion to verify that all of the expectedInspectedTypes are contained in getAllInspectedTypes().\nThe current verification allows for getAllInspectedTypes() to return only a subset of expectedInspectedTypes", "url": "https://github.com/AxonFramework/AxonFramework/pull/1595#discussion_r520539412", "createdAt": "2020-11-10T12:54:15Z", "author": {"login": "sandjelkovic"}, "path": "messaging/src/test/java/org/axonframework/messaging/annotation/AnnotatedHandlerInspectorTest.java", "diffHunk": "@@ -148,6 +150,14 @@ void testInterceptors() throws Exception {\n         assertThrows(MockException.class, () -> chain.handle(testEventTwo, testTarget, resultHandler));\n     }\n \n+    @Test\n+    void testGetAllInspectedTypes() {\n+        Set<Class<?>> expectedInspectedTypes = Sets.newSet(pA.class, A.class, B.class, C.class, D.class);\n+\n+        inspector.getAllInspectedTypes()\n+                 .forEach(inspectedType -> assertTrue(expectedInspectedTypes.contains(inspectedType)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0914e33b277a66b5d3b77b9ec566c80612da1de2"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTc0NTQ4", "url": "https://github.com/AxonFramework/AxonFramework/pull/1595#pullrequestreview-527174548", "createdAt": "2020-11-10T12:57:48Z", "commit": {"oid": "0914e33b277a66b5d3b77b9ec566c80612da1de2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "742d60ad9920416c2cefdfb2bf202e52701db9b5", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/742d60ad9920416c2cefdfb2bf202e52701db9b5", "committedDate": "2020-11-10T13:11:20Z", "message": "Fine tune test case\n\nFine tune test case to include the validation the other way around, to\nensure both sets are completely equal\n\n#duplicate-child-entities"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2029, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}