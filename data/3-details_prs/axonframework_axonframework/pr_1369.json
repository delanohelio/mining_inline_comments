{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTg1Njc4", "number": 1369, "title": "Invocation of registerHandlerInterceptor() can cause duplicate event processors", "bodyText": "", "createdAt": "2020-03-10T14:59:53Z", "url": "https://github.com/AxonFramework/AxonFramework/pull/1369", "merged": true, "mergeCommit": {"oid": "6724175fb6da85261d5ac0c254bea465440f9022"}, "closed": true, "closedAt": "2020-03-13T06:44:34Z", "author": {"login": "MGathier"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMTqyHAH2gAyMzg2MTg1Njc4OjhkOWViMmE1ZDNjMmRjOGYxMzJkOTk1YTIyMmFhMjAyNThkZWRhZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM7wLqAH2gAyMzg2MTg1Njc4OjhkYzg3ZWJmYWQ4ZDNlZmE0Y2UyOGQ5NmFlYmUyNmE0YWVhZTNhZjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8d9eb2a5d3c2dc8f132d995a222aa20258dedafc", "author": {"user": {"login": "MGathier", "name": "Marc Gathier"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/8d9eb2a5d3c2dc8f132d995a222aa20258dedafc", "committedDate": "2020-03-10T14:48:06Z", "message": "Prevent duplicate creation of tracking event processors on registerHandlerInterceptor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e53fac0f14ea63de642af58b50fc7eba4b2bbe80", "author": {"user": {"login": "MGathier", "name": "Marc Gathier"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/e53fac0f14ea63de642af58b50fc7eba4b2bbe80", "committedDate": "2020-03-10T14:49:48Z", "message": "Added javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDQzMjM4", "url": "https://github.com/AxonFramework/AxonFramework/pull/1369#pullrequestreview-372043238", "createdAt": "2020-03-10T15:08:21Z", "commit": {"oid": "e53fac0f14ea63de642af58b50fc7eba4b2bbe80"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNjUxNzU5", "url": "https://github.com/AxonFramework/AxonFramework/pull/1369#pullrequestreview-372651759", "createdAt": "2020-03-11T10:51:47Z", "commit": {"oid": "e53fac0f14ea63de642af58b50fc7eba4b2bbe80"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dd77a1bd905ca70ae43cccfdc16664f59ee8dae", "author": {"user": {"login": "MGathier", "name": "Marc Gathier"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/9dd77a1bd905ca70ae43cccfdc16664f59ee8dae", "committedDate": "2020-03-12T09:53:12Z", "message": "New test to verify that customizing the event processing configuration for sagas does not lead to events being handled twice."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTEzMTIz", "url": "https://github.com/AxonFramework/AxonFramework/pull/1369#pullrequestreview-373513123", "createdAt": "2020-03-12T12:31:29Z", "commit": {"oid": "9dd77a1bd905ca70ae43cccfdc16664f59ee8dae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTI2MTQ1", "url": "https://github.com/AxonFramework/AxonFramework/pull/1369#pullrequestreview-373526145", "createdAt": "2020-03-12T12:51:28Z", "commit": {"oid": "9dd77a1bd905ca70ae43cccfdc16664f59ee8dae"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMjo1MToyOFrOF1dSlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMjo1MToyOFrOF1dSlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU5ODc0Mw==", "bodyText": "SagaCustomizationIntegrationTest?\nAlso, it wouldn't hurt to add JavaDoc stating what is actually being tested.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1369#discussion_r391598743", "createdAt": "2020-03-12T12:51:28Z", "author": {"login": "m1l4n54v1c"}, "path": "spring-boot-autoconfigure/src/test/java/org/axonframework/springboot/SagaCustomizeIntegrationTest.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.springboot;\n+\n+import org.axonframework.common.transaction.Transaction;\n+import org.axonframework.common.transaction.TransactionManager;\n+import org.axonframework.config.EventProcessingModule;\n+import org.axonframework.eventhandling.EventBus;\n+import org.axonframework.eventhandling.TrackedEventMessage;\n+import org.axonframework.eventhandling.TrackingEventProcessor;\n+import org.axonframework.eventhandling.TrackingEventProcessorConfiguration;\n+import org.axonframework.eventhandling.tokenstore.TokenStore;\n+import org.axonframework.eventsourcing.eventstore.EventStore;\n+import org.axonframework.messaging.StreamableMessageSource;\n+import org.axonframework.messaging.interceptors.LoggingInterceptor;\n+import org.axonframework.messaging.unitofwork.CurrentUnitOfWork;\n+import org.axonframework.messaging.unitofwork.DefaultUnitOfWork;\n+import org.axonframework.modelling.saga.SagaEventHandler;\n+import org.axonframework.modelling.saga.StartSaga;\n+import org.axonframework.spring.stereotype.Saga;\n+import org.axonframework.springboot.autoconfig.AxonAutoConfiguration;\n+import org.axonframework.springboot.autoconfig.AxonServerAutoConfiguration;\n+import org.junit.jupiter.api.*;\n+import org.junit.jupiter.api.extension.*;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.boot.SpringBootConfiguration;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration;\n+import org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.EnableMBeanExport;\n+import org.springframework.core.type.filter.AnnotationTypeFilter;\n+import org.springframework.jmx.support.RegistrationPolicy;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import java.time.Duration;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.UUID;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+\n+import static org.axonframework.eventhandling.GenericEventMessage.asEventMessage;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+@SpringBootTest\n+@ExtendWith(SpringExtension.class)\n+@SpringBootConfiguration\n+@EnableAutoConfiguration(exclude = {\n+        JmxAutoConfiguration.class,\n+        WebClientAutoConfiguration.class,\n+        AxonServerAutoConfiguration.class})\n+@EnableMBeanExport(registration = RegistrationPolicy.IGNORE_EXISTING)\n+public class SagaCustomizeIntegrationTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd77a1bd905ca70ae43cccfdc16664f59ee8dae"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dc87ebfad8d3efa4ce28d96aebe26a4aeae3af7", "author": {"user": {"login": "MGathier", "name": "Marc Gathier"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/8dc87ebfad8d3efa4ce28d96aebe26a4aeae3af7", "committedDate": "2020-03-12T13:30:12Z", "message": "Added description of the purpose of the test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1885, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}