{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MjMyMDc5", "number": 1464, "title": "[#1338] EventTrackerStatusChangeListener for Tracking Event Processors", "bodyText": "This pull request introduces the EventTrackerStatusChangeListener, which is a configurable option for the TrackingEventProcessor.\nThe EventTrackerStatusChangeListener will react to updates of the EventTrackerStatus objects (used by a TrackingEventProcessor to portray it's status to the outside world).\nUsers of the EventTrackerStatusChangeListener functional interface can choose to react only to  boolean status changes like when isReplaying/isMerging turns true/false, or if they want to include the positions of the status fields as well. The latter is turned off by default, as positions will likely shift very often. Lastly, special cases like the removal or addition of a status object are reflected by a RemovedTrackerStatus and AddedTrackerStatus object, allowing users to react to those special scenarios.\nThis pull request resolves #1338.", "createdAt": "2020-07-07T08:02:08Z", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464", "merged": true, "mergeCommit": {"oid": "903df918a0367cea26224ccc327e651e698ebbad"}, "closed": true, "closedAt": "2020-07-27T13:19:28Z", "author": {"login": "smcvb"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxSXjFgH2gAyNDQ1MjMyMDc5OjUwZTMxMzc4MjkyNGRlMDc0MmZhY2Q1YTA5NGIxZGYwZWY5MTE1Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5BsN3AFqTQ1NTc3MDgzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "50e313782924de0742facd5a094b1df0ef911538", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/50e313782924de0742facd5a094b1df0ef911538", "committedDate": "2020-07-03T12:12:23Z", "message": "Introduce EventTrackerStatusChangeListener\n\nIntroduce the EventTrackerStatusChangeListener which users will be able\nto specify to react to changes in the EventTrackerStatus. They'll\nreceive a Map of segmentId to EventTrackerStatus if a change occurred.\nAdditionally, on the interface they can define if they want to react on\nupdated tracker positions. By default it wont, as those happen often and\n thus would typically not be valuable.\n\n#1338"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c93ed687aec2d3c0f84d572ebe1c2a43448a289a", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/c93ed687aec2d3c0f84d572ebe1c2a43448a289a", "committedDate": "2020-07-03T12:24:58Z", "message": "Add matching functions to the EventTrackerStatus\n\nThe EventTrackerStatusChangeListener should react when\nEventTrackerStatus' are different. To that end a mechanism should be\nincluded to detect differences, which may or may not include positions\nvalidation.\n\n#1338"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1833c1091810761e823b4e763efb2e0bac5fac5", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/d1833c1091810761e823b4e763efb2e0bac5fac5", "committedDate": "2020-07-03T12:26:53Z", "message": "Include special case TrackerStatus objects\n\nTo be able to detect new or removed EventTrackerStatus objects which as\nsuch can be passed to the EventTrackerStatusChangeListener, providing\nspecial case implementations is beneficial. These special cases are\nregarded as wrappers to a new/removed actual EventTrackerStatus\nimplementation.\n\n#1338"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d1f47d821f84e8eafe7e7443408c428488fb063", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/8d1f47d821f84e8eafe7e7443408c428488fb063", "committedDate": "2020-07-03T12:27:49Z", "message": "Allow configuration of the EventTrackerStatusChangeListener\n\nThe TrackingEventProcessorConfiguration should provide methods to\nconfigure and retrieve a EventTrackerStatusChangeListener instance. It\nshould default to a no-op implementation.\n\n#1338"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18bd6196bccff4c58499c91aff38b6235f2b1f3a", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/18bd6196bccff4c58499c91aff38b6235f2b1f3a", "committedDate": "2020-07-06T15:37:36Z", "message": "Wrap every status update to check for changes\n\nAll occurrences of an update to the activeSegments should be wrapped. If\n there's a change between the old set and the new set, whether that's an\n addition, removal or changes (with or without positions taken into\n account), the EventTrackerStatusChangeListener should be invoked with\n the adjustments.\n\n#1338"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f16dbf18dd19ecc73f6f7e4ab6b575786efa9e51", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/f16dbf18dd19ecc73f6f7e4ab6b575786efa9e51", "committedDate": "2020-07-06T15:37:51Z", "message": "Merge remote-tracking branch 'origin/master' into feature/1338"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MDAyMDE4", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#pullrequestreview-444002018", "createdAt": "2020-07-07T15:24:40Z", "commit": {"oid": "f16dbf18dd19ecc73f6f7e4ab6b575786efa9e51"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/e8df4e39c1dd19d5612438464089d441e5547543", "committedDate": "2020-07-09T10:20:56Z", "message": "Use is not empty instead of size check\n\nUse is not empty instead of size check to match removed or added\nsegments\n\n#1338"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMzc4NTM4", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#pullrequestreview-452378538", "createdAt": "2020-07-21T11:51:46Z", "commit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMTo1MTo0NlrOG00aPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjozODo0MFrOG019IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzNzgyMA==", "bodyText": "Maybe create an overload that always validates positions boolean isDifferent(EventTrackerStatus that)?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458037820", "createdAt": "2020-07-21T11:51:46Z", "author": {"login": "m1l4n54v1c"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -110,4 +114,51 @@\n      * @return the relative position at which a reset was triggered for this Segment\n      */\n     OptionalLong getResetPosition();\n+\n+    /**\n+     * Check whether {@code this} {@link EventTrackerStatus} is different from {@code that}.\n+     *\n+     * @param that              the other {@link EventTrackerStatus} to validate the difference with\n+     * @param validatePositions flag dictating whether {@link #matchPositions(EventTrackerStatus)} should be taken into\n+     *                          account when matching\n+     * @return {@code true} if both {@link EventTrackerStatus}'s are different, {@code false} otherwise\n+     */\n+    default boolean isDifferent(EventTrackerStatus that, boolean validatePositions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MzEzNw==", "bodyText": "Why introducing Added and Removed``TrackerStatus and not adding two default methods to the EventTrackerStatus interface such as boolean new() and boolean removed()?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458063137", "createdAt": "2020-07-21T12:38:40Z", "author": {"login": "m1l4n54v1c"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.eventhandling;\n+\n+/**\n+ * References a new {@link EventTrackerStatus} which work just has started on. Can be used as a marker to react on in\n+ * the {@link EventTrackerStatusChangeListener}.\n+ *\n+ * @author Steven van Beelen\n+ * @since 4.4\n+ */\n+public class AddedTrackerStatus extends WrappedTrackerStatus {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNDg2MTg0", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#pullrequestreview-452486184", "createdAt": "2020-07-21T13:59:30Z", "commit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1f6992f485af14f260b1137d853af160aa1b93e", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/c1f6992f485af14f260b1137d853af160aa1b93e", "committedDate": "2020-07-21T14:42:56Z", "message": "Merge remote-tracking branch 'origin/master' into feature/1338"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12ac12d8477ffd8e93e83ac084540cb71467f7bb", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/12ac12d8477ffd8e93e83ac084540cb71467f7bb", "committedDate": "2020-07-21T15:11:51Z", "message": "Provide overloaded isDifferent method\n\nProviding an overloaded isDifferent method which defaults to take\npositions into account makes the API somewhat clearer to deal with\n\n#1338"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26357f1b17ed5f69c94a8c0d2f140bd394b86a3d", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/26357f1b17ed5f69c94a8c0d2f140bd394b86a3d", "committedDate": "2020-07-27T09:30:13Z", "message": "Merge remote-tracking branch 'origin/master' into feature/1338"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efd90e201b617230da29855660f9e6e72527963e", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/efd90e201b617230da29855660f9e6e72527963e", "committedDate": "2020-07-27T10:44:07Z", "message": "Introduce methods denominating EventTrackerStatus as added/removed\n\nThe requirement to cast or verify an EventTrackerStatus as being an\nAddedTrackerStatus or RemovedTrackerStatus isn't very user friendly.\nHaving a dedicated method for this, which both default to false on the\nmain interface is a lot easier to use.\n\n#1338"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Njc5Mjk2", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#pullrequestreview-455679296", "createdAt": "2020-07-27T10:58:02Z", "commit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMDo1ODowMlrOG3dn3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMDo1OTowMlrOG3dpqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDIwNQ==", "bodyText": "hmmm?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460810205", "createdAt": "2020-07-27T10:58:02Z", "author": {"login": "m1l4n54v1c"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -87,6 +85,9 @@\n import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.Mockito.*;\n \n+;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDU1Mw==", "bodyText": "Maybe trackerAdded?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460810553", "createdAt": "2020-07-27T10:58:48Z", "author": {"login": "m1l4n54v1c"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -118,6 +118,26 @@\n      */\n     OptionalLong getResetPosition();\n \n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} is starting it's progress for the\n+     * first time. Particularly useful if the {@link EventTrackerStatusChangeListener} should react to added status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n+     */\n+    default boolean addedTracker() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDY2NA==", "bodyText": "Maybe trackerRemoved?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460810664", "createdAt": "2020-07-27T10:59:02Z", "author": {"login": "m1l4n54v1c"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -118,6 +118,26 @@\n      */\n     OptionalLong getResetPosition();\n \n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} is starting it's progress for the\n+     * first time. Particularly useful if the {@link EventTrackerStatusChangeListener} should react to added status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n+     */\n+    default boolean addedTracker() {\n+        return false;\n+    }\n+\n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} has just stopped it's progress.\n+     * Particularly useful if the {@link EventTrackerStatusChangeListener} should react to removed status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} was just removed, {@code false} otherwise\n+     */\n+    default boolean removedTracker() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18ab40127b0eb0b8227152e20dbedc215555e95c", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/18ab40127b0eb0b8227152e20dbedc215555e95c", "committedDate": "2020-07-27T11:50:39Z", "message": "Review comments\n\n-Remove unused semi-colons\n-Switch around method name\n\n#1338"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NzcwODM4", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#pullrequestreview-455770838", "createdAt": "2020-07-27T13:17:58Z", "commit": {"oid": "18ab40127b0eb0b8227152e20dbedc215555e95c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1769, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}