{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MjMyMDc5", "number": 1464, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMTo1MTo0NlrOEQlmbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMDo1OTowMlrOESVosg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODI4NzE5OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMTo1MTo0NlrOG00aPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDo0NDowOFrOG07cnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzNzgyMA==", "bodyText": "Maybe create an overload that always validates positions boolean isDifferent(EventTrackerStatus that)?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458037820", "createdAt": "2020-07-21T11:51:46Z", "author": {"login": "m1l4n54v1c"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -110,4 +114,51 @@\n      * @return the relative position at which a reset was triggered for this Segment\n      */\n     OptionalLong getResetPosition();\n+\n+    /**\n+     * Check whether {@code this} {@link EventTrackerStatus} is different from {@code that}.\n+     *\n+     * @param that              the other {@link EventTrackerStatus} to validate the difference with\n+     * @param validatePositions flag dictating whether {@link #matchPositions(EventTrackerStatus)} should be taken into\n+     *                          account when matching\n+     * @return {@code true} if both {@link EventTrackerStatus}'s are different, {@code false} otherwise\n+     */\n+    default boolean isDifferent(EventTrackerStatus that, boolean validatePositions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1MzExNw==", "bodyText": "Great and reasonable suggestion, will add this.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458153117", "createdAt": "2020-07-21T14:44:08Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -110,4 +114,51 @@\n      * @return the relative position at which a reset was triggered for this Segment\n      */\n     OptionalLong getResetPosition();\n+\n+    /**\n+     * Check whether {@code this} {@link EventTrackerStatus} is different from {@code that}.\n+     *\n+     * @param that              the other {@link EventTrackerStatus} to validate the difference with\n+     * @param validatePositions flag dictating whether {@link #matchPositions(EventTrackerStatus)} should be taken into\n+     *                          account when matching\n+     * @return {@code true} if both {@link EventTrackerStatus}'s are different, {@code false} otherwise\n+     */\n+    default boolean isDifferent(EventTrackerStatus that, boolean validatePositions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzNzgyMA=="}, "originalCommit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODQ0ODE1OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjozODo0MFrOG019IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0ODozNFrOG3bcjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MzEzNw==", "bodyText": "Why introducing Added and Removed``TrackerStatus and not adding two default methods to the EventTrackerStatus interface such as boolean new() and boolean removed()?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458063137", "createdAt": "2020-07-21T12:38:40Z", "author": {"login": "m1l4n54v1c"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.eventhandling;\n+\n+/**\n+ * References a new {@link EventTrackerStatus} which work just has started on. Can be used as a marker to react on in\n+ * the {@link EventTrackerStatusChangeListener}.\n+ *\n+ * @author Steven van Beelen\n+ * @since 4.4\n+ */\n+public class AddedTrackerStatus extends WrappedTrackerStatus {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1NDcyMg==", "bodyText": "I intended to embrace the special case pattern, which my gut told me would work best with dedicated objects.\nI even played with the idea of wrapping the entire collection containing all the status objects, so that it's the collection which knows when something is added, removed or updated. That became rather ugly, rather quickly though, so I abandoned that for the time being.\nBut, what do you think, should we move away from this special case pattern here?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458154722", "createdAt": "2020-07-21T14:46:11Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.eventhandling;\n+\n+/**\n+ * References a new {@link EventTrackerStatus} which work just has started on. Can be used as a marker to react on in\n+ * the {@link EventTrackerStatusChangeListener}.\n+ *\n+ * @author Steven van Beelen\n+ * @since 4.4\n+ */\n+public class AddedTrackerStatus extends WrappedTrackerStatus {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MzEzNw=="}, "originalCommit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3NDU0MQ==", "bodyText": "We had a think and chat about it. Adding default methods which state whether an EventTrackerStatus was added or removed make the API within the EventTrackerStatusChangeListener a lot more friendly, as no instanceof checks or casts would ever be needed. We thus deduced to introduce these methods to promote a nicer API.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460774541", "createdAt": "2020-07-27T09:48:34Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.eventhandling;\n+\n+/**\n+ * References a new {@link EventTrackerStatus} which work just has started on. Can be used as a marker to react on in\n+ * the {@link EventTrackerStatusChangeListener}.\n+ *\n+ * @author Steven van Beelen\n+ * @since 4.4\n+ */\n+public class AddedTrackerStatus extends WrappedTrackerStatus {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MzEzNw=="}, "originalCommit": {"oid": "e8df4e39c1dd19d5612438464089d441e5547543"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjYzOTk2OnYy", "diffSide": "RIGHT", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMDo1ODowMlrOG3dn3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1MTo1NlrOG3fLAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDIwNQ==", "bodyText": "hmmm?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460810205", "createdAt": "2020-07-27T10:58:02Z", "author": {"login": "m1l4n54v1c"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -87,6 +85,9 @@\n import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.Mockito.*;\n \n+;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTU4Ng==", "bodyText": "Weird, removed this.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460835586", "createdAt": "2020-07-27T11:51:56Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -87,6 +85,9 @@\n import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.Mockito.*;\n \n+;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDIwNQ=="}, "originalCommit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjY0MjI1OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMDo1ODo0OFrOG3dpOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1MjowMlrOG3fLMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDU1Mw==", "bodyText": "Maybe trackerAdded?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460810553", "createdAt": "2020-07-27T10:58:48Z", "author": {"login": "m1l4n54v1c"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -118,6 +118,26 @@\n      */\n     OptionalLong getResetPosition();\n \n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} is starting it's progress for the\n+     * first time. Particularly useful if the {@link EventTrackerStatusChangeListener} should react to added status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n+     */\n+    default boolean addedTracker() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTYzMg==", "bodyText": "Sure", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460835632", "createdAt": "2020-07-27T11:52:02Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -118,6 +118,26 @@\n      */\n     OptionalLong getResetPosition();\n \n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} is starting it's progress for the\n+     * first time. Particularly useful if the {@link EventTrackerStatusChangeListener} should react to added status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n+     */\n+    default boolean addedTracker() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDU1Mw=="}, "originalCommit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjY0MzA2OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMDo1OTowMlrOG3dpqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1MjowOFrOG3fLXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDY2NA==", "bodyText": "Maybe trackerRemoved?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460810664", "createdAt": "2020-07-27T10:59:02Z", "author": {"login": "m1l4n54v1c"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -118,6 +118,26 @@\n      */\n     OptionalLong getResetPosition();\n \n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} is starting it's progress for the\n+     * first time. Particularly useful if the {@link EventTrackerStatusChangeListener} should react to added status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n+     */\n+    default boolean addedTracker() {\n+        return false;\n+    }\n+\n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} has just stopped it's progress.\n+     * Particularly useful if the {@link EventTrackerStatusChangeListener} should react to removed status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} was just removed, {@code false} otherwise\n+     */\n+    default boolean removedTracker() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTY3Nw==", "bodyText": "Sure", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460835677", "createdAt": "2020-07-27T11:52:08Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -118,6 +118,26 @@\n      */\n     OptionalLong getResetPosition();\n \n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} is starting it's progress for the\n+     * first time. Particularly useful if the {@link EventTrackerStatusChangeListener} should react to added status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n+     */\n+    default boolean addedTracker() {\n+        return false;\n+    }\n+\n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} has just stopped it's progress.\n+     * Particularly useful if the {@link EventTrackerStatusChangeListener} should react to removed status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} was just removed, {@code false} otherwise\n+     */\n+    default boolean removedTracker() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDY2NA=="}, "originalCommit": {"oid": "efd90e201b617230da29855660f9e6e72527963e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3217, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}