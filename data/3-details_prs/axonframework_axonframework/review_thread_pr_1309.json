{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMDAxMDQw", "number": 1309, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMDo0OToyNFrODWgRwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo1NDozNlrODrHagw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTI0MDk2OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/GrpcInstructionResultPublisher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMDo0OToyNFrOFbTOHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMDo0OToyNFrOFbTOHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MDc4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Responsible to publish through gRPC call the {@link InstructionResult} messages to Axon Server.\n          \n          \n            \n             * Responsible for publishing the {@link InstructionResult} messages through a gRPC call to Axon Server.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r364170783", "createdAt": "2020-01-08T10:49:24Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/GrpcInstructionResultPublisher.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package org.axonframework.axonserver.connector;\n+\n+import io.axoniq.axonserver.grpc.ErrorMessage;\n+import io.axoniq.axonserver.grpc.InstructionResult;\n+import io.axoniq.axonserver.grpc.control.PlatformInboundInstruction;\n+import org.axonframework.axonserver.connector.util.ExceptionSerializer;\n+\n+import java.util.function.Supplier;\n+\n+import static io.axoniq.axonserver.grpc.ErrorMessage.newBuilder;\n+import static org.axonframework.axonserver.connector.ErrorCode.INSTRUCTION_EXECUTION_ERROR;\n+\n+/**\n+ * Responsible to publish through gRPC call the {@link InstructionResult} messages to Axon Server.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086b897038007b145fbec3f02a6e5f738ab5e183"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTI1MzU4OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMDo1Mzo0OVrOFbTVeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMDo1Mzo0OVrOFbTVeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MjY2Ng==", "bodyText": "Just changing the constructors would essentially mean a breaking changes. I however think that the amount of users constructing a EventProcessorControlService themselves is near zero..should be fine for once to just change the constructor then.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r364172666", "createdAt": "2020-01-08T10:53:49Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -58,10 +62,15 @@\n      *                                    {@link PlatformOutboundInstruction} have been received\n      * @param eventProcessorController    the {@link EventProcessorController} used to perform operations on the\n      *                                    {@link EventProcessor}s\n+     * @param axonServerConfiguration     the {@link AxonServerConfiguration} used to retrieve the client identifier\n      */\n     public EventProcessorControlService(AxonServerConnectionManager axonServerConnectionManager,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086b897038007b145fbec3f02a6e5f738ab5e183"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTI2MzAzOnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMDo1NzozOFrOFbTbfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMDo1NzozOFrOFbTbfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3NDIwNA==", "bodyText": "The EventProcessorController#splitSegment(String, int) method returns a boolean which states whether the operation was successful according to the TrackingEventProcessor. Might be valuable to use this result too to either publish a success or failure.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r364174204", "createdAt": "2020-01-08T10:57:38Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -143,8 +154,10 @@ private void splitSegment(PlatformOutboundInstruction platformOutboundInstructio\n         String processorName = splitSegment.getProcessorName();\n         try {\n             eventProcessorController.splitSegment(processorName, segmentId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086b897038007b145fbec3f02a6e5f738ab5e183"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTI2MzM3OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMDo1Nzo0NlrOFbTbsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMDo1Nzo0NlrOFbTbsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3NDI1Nw==", "bodyText": "The EventProcessorController#mergeSegment(String, int) method returns a boolean which states whether the operation was successful according to the TrackingEventProcessor. Might be valuable to use this result too to either publish a success or failure.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r364174257", "createdAt": "2020-01-08T10:57:46Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -154,8 +167,10 @@ private void mergeSegment(PlatformOutboundInstruction platformOutboundInstructio\n         int segmentId = mergeSegment.getSegmentIdentifier();\n         try {\n             eventProcessorController.mergeSegment(processorName, segmentId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086b897038007b145fbec3f02a6e5f738ab5e183"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDAxMTk4OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/InstructionResultPublisher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjozNzo0M1rOFdeFsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjozNzo0M1rOFdeFsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ0NjAwMQ==", "bodyText": "Not all failures are represented by a Throwable. Having an overload with a String representing a cause could be beneficial. What do you think?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r366446001", "createdAt": "2020-01-14T16:37:43Z", "author": {"login": "m1l4n54v1c"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/InstructionResultPublisher.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.axonframework.axonserver.connector;\n+\n+/**\n+ * Interface that encapsulates the instruction result publication functionality.\n+ *\n+ * @author Sara Pellegrini\n+ * @since 4.4\n+ */\n+public interface InstructionResultPublisher {\n+\n+    /**\n+     * Notifies to Axon Server a successful execution of the specified instruction.\n+     *\n+     * @param instructionId the identifier of the instruction that has been successfully processed.\n+     */\n+    void publishSuccessFor(String instructionId);\n+\n+    /**\n+     * Notifies to Axon Server a failure during the execution of the specified instruction.\n+     *\n+     * @param instructionId the identifier of the instruction.\n+     * @param error         the error happened during the instruction execution.\n+     */\n+    void publishFailureFor(String instructionId, Throwable error);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a01106b76147b108a7c2bd6e216700320e96d573"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDAyMDYyOnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/EventProcessorControlServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjo0MDowNFrOFdeLAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjo0MDowNFrOFdeLAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ0NzM2Mg==", "bodyText": "I'm missing tests for checking whether instruction result is sent after split/merge.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r366447362", "createdAt": "2020-01-14T16:40:04Z", "author": {"login": "m1l4n54v1c"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/EventProcessorControlServiceTest.java", "diffHunk": "@@ -27,15 +28,18 @@\n \n class EventProcessorControlServiceTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a01106b76147b108a7c2bd6e216700320e96d573"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTM2NTAyOnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo1Mzo0MFrOF7RMrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToyNDowMlrOF7gekw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjA3Ng==", "bodyText": "The EventProcessorController#splitSegment(String, int) function will also return false if the underlying TrackingEventProcessor couldn't fulfill the request. Thus stating it's an IllegalArgumentException because the given processorName is not a TrackingEventProcessor is not always correct.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397692076", "createdAt": "2020-03-25T08:53:40Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -146,9 +158,13 @@ private void splitSegment(PlatformOutboundInstruction platformOutboundInstructio\n         int segmentId = splitSegment.getSegmentIdentifier();\n         String processorName = splitSegment.getProcessorName();\n         try {\n-            eventProcessorController.splitSegment(processorName, segmentId);\n+            if (!eventProcessorController.splitSegment(processorName, segmentId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f67e4842c8ff78e67f3b02ee367748663967d432"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0MjQxOQ==", "bodyText": "Yes, you are right. I will change it with a generic message like \"Impossible to split/merge segment [{}] for processor [{}]\", or something similar.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397942419", "createdAt": "2020-03-25T15:24:02Z", "author": {"login": "saratry"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -146,9 +158,13 @@ private void splitSegment(PlatformOutboundInstruction platformOutboundInstructio\n         int segmentId = splitSegment.getSegmentIdentifier();\n         String processorName = splitSegment.getProcessorName();\n         try {\n-            eventProcessorController.splitSegment(processorName, segmentId);\n+            if (!eventProcessorController.splitSegment(processorName, segmentId)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjA3Ng=="}, "originalCommit": {"oid": "f67e4842c8ff78e67f3b02ee367748663967d432"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTM2NTY4OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo1Mzo1MVrOF7RNEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo1Mzo1MVrOF7RNEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjE3OQ==", "bodyText": "The EventProcessorController#mergeSegment(String, int) function will also return false if the underlying TrackingEventProcessor couldn't fulfill the request. Thus stating it's an IllegalArgumentException because the given processorName is not a TrackingEventProcessor is not always correct.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397692179", "createdAt": "2020-03-25T08:53:51Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -157,9 +173,13 @@ private void mergeSegment(PlatformOutboundInstruction platformOutboundInstructio\n         String processorName = mergeSegment.getProcessorName();\n         int segmentId = mergeSegment.getSegmentIdentifier();\n         try {\n-            eventProcessorController.mergeSegment(processorName, segmentId);\n+            if (!eventProcessorController.mergeSegment(processorName, segmentId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f67e4842c8ff78e67f3b02ee367748663967d432"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTM2ODM1OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/EventProcessorControlServiceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo1NDozNlrOF7ROwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToyMDo1M1rOF7gUQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjYwOA==", "bodyText": "Nit: I think the test constants can be made private.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397692608", "createdAt": "2020-03-25T08:54:36Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/EventProcessorControlServiceTest.java", "diffHunk": "@@ -16,26 +16,55 @@\n \n package org.axonframework.axonserver.connector.processor;\n \n+import io.axoniq.axonserver.grpc.ErrorMessage;\n+import io.axoniq.axonserver.grpc.InstructionResult;\n+import io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference;\n+import io.axoniq.axonserver.grpc.control.PlatformInboundInstruction;\n+import io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction;\n+import org.axonframework.axonserver.connector.AxonServerConfiguration;\n import org.axonframework.axonserver.connector.AxonServerConnectionManager;\n import org.junit.jupiter.api.*;\n \n+import java.util.concurrent.atomic.AtomicReference;\n import java.util.function.Consumer;\n+import javax.annotation.Nonnull;\n \n import static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.RequestCase.*;\n import static org.axonframework.axonserver.connector.TestTargetContextResolver.BOUNDED_CONTEXT;\n import static org.mockito.Mockito.*;\n \n class EventProcessorControlServiceTest {\n \n+    public static final String GOOD_INSTRUCTION_ID = \"goodInstructionId\";\n+    public static final String TRACKING_EVENT_PROCESSOR = \"TEP\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f67e4842c8ff78e67f3b02ee367748663967d432"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzOTc3OA==", "bodyText": "Sure, right!", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397939778", "createdAt": "2020-03-25T15:20:53Z", "author": {"login": "saratry"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/EventProcessorControlServiceTest.java", "diffHunk": "@@ -16,26 +16,55 @@\n \n package org.axonframework.axonserver.connector.processor;\n \n+import io.axoniq.axonserver.grpc.ErrorMessage;\n+import io.axoniq.axonserver.grpc.InstructionResult;\n+import io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference;\n+import io.axoniq.axonserver.grpc.control.PlatformInboundInstruction;\n+import io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction;\n+import org.axonframework.axonserver.connector.AxonServerConfiguration;\n import org.axonframework.axonserver.connector.AxonServerConnectionManager;\n import org.junit.jupiter.api.*;\n \n+import java.util.concurrent.atomic.AtomicReference;\n import java.util.function.Consumer;\n+import javax.annotation.Nonnull;\n \n import static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.RequestCase.*;\n import static org.axonframework.axonserver.connector.TestTargetContextResolver.BOUNDED_CONTEXT;\n import static org.mockito.Mockito.*;\n \n class EventProcessorControlServiceTest {\n \n+    public static final String GOOD_INSTRUCTION_ID = \"goodInstructionId\";\n+    public static final String TRACKING_EVENT_PROCESSOR = \"TEP\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjYwOA=="}, "originalCommit": {"oid": "f67e4842c8ff78e67f3b02ee367748663967d432"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3267, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}