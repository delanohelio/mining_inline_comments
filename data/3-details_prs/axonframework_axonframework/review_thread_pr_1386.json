{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0Nzc0Mzg5", "number": 1386, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDoyMTowNFrODsFecA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDoyMTowNFrODsFecA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTUzNjQ4OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/query/AxonServerQueryBus.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDoyMTowNFrOF8zRrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMToxODo0OVrOF9k_og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5ODk4OQ==", "bodyText": "Sounds fair. Is there a doable test class to be made which verifies that this works?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1386#discussion_r399298989", "createdAt": "2020-03-27T14:21:04Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/query/AxonServerQueryBus.java", "diffHunk": "@@ -719,6 +719,7 @@ public void onNext(QueryProviderInbound inboundRequest) {\n                 @Override\n                 public void onError(Throwable ex) {\n                     logger.warn(\"Query Inbound Stream closed with error\", ex);\n+                    outboundStreamObserver = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1534c05f8b47e2d6cd2a37b9055a08ca3a12f0c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMwMDAyNg==", "bodyText": "I could only reproduce the issue when I was running on Docker, so probably timing related.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1386#discussion_r399300026", "createdAt": "2020-03-27T14:22:35Z", "author": {"login": "MGathier"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/query/AxonServerQueryBus.java", "diffHunk": "@@ -719,6 +719,7 @@ public void onNext(QueryProviderInbound inboundRequest) {\n                 @Override\n                 public void onError(Throwable ex) {\n                     logger.warn(\"Query Inbound Stream closed with error\", ex);\n+                    outboundStreamObserver = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5ODk4OQ=="}, "originalCommit": {"oid": "c1534c05f8b47e2d6cd2a37b9055a08ca3a12f0c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwNjYyNw==", "bodyText": "Shouldn't we make sure that the outbound stream is also properly \"completed\" before setting it to null? I'm afraid we'll be leaking connections if we don't close both sides.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1386#discussion_r400006627", "createdAt": "2020-03-30T08:18:32Z", "author": {"login": "abuijze"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/query/AxonServerQueryBus.java", "diffHunk": "@@ -719,6 +719,7 @@ public void onNext(QueryProviderInbound inboundRequest) {\n                 @Override\n                 public void onError(Throwable ex) {\n                     logger.warn(\"Query Inbound Stream closed with error\", ex);\n+                    outboundStreamObserver = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5ODk4OQ=="}, "originalCommit": {"oid": "c1534c05f8b47e2d6cd2a37b9055a08ca3a12f0c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExMzU3MA==", "bodyText": "Will create a new issue for this, as this needs to be done in more places.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1386#discussion_r400113570", "createdAt": "2020-03-30T11:18:49Z", "author": {"login": "MGathier"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/query/AxonServerQueryBus.java", "diffHunk": "@@ -719,6 +719,7 @@ public void onNext(QueryProviderInbound inboundRequest) {\n                 @Override\n                 public void onError(Throwable ex) {\n                     logger.warn(\"Query Inbound Stream closed with error\", ex);\n+                    outboundStreamObserver = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5ODk4OQ=="}, "originalCommit": {"oid": "c1534c05f8b47e2d6cd2a37b9055a08ca3a12f0c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3353, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}