{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3OTEzODQz", "number": 1373, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyODowOVrODpB7sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMjozOFrODpCCkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzQ5ODczOnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/AxonServerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyODowOVrOF38jtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyODowOVrOF38jtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwODE4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Indicates whether it is ok to query events from the local Axon Server node - the node the client is currently\n          \n          \n            \n                 * Indicates whether it is OK to query events from the local Axon Server node - the node the client is currently", "url": "https://github.com/AxonFramework/AxonFramework/pull/1373#discussion_r394208182", "createdAt": "2020-03-18T09:28:09Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/AxonServerConfiguration.java", "diffHunk": "@@ -210,6 +210,17 @@\n      */\n     private long connectTimeout = 5000;\n \n+    /**\n+     * Indicates whether it is ok to query events from the local Axon Server node - the node the client is currently", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc531329c25ffb83ad37479013187950da82c975"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzUwMTcxOnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/AxonServerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyODo1NFrOF38lkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyODo1NFrOF38lkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwODY1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * this node yet. Used when criteria for eventual consistency is loosen up. It will spread the load for querying\n          \n          \n            \n                 * this node yet. Can be used when the criteria for eventual consistency is less strict. It will spread the load for querying", "url": "https://github.com/AxonFramework/AxonFramework/pull/1373#discussion_r394208657", "createdAt": "2020-03-18T09:28:54Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/AxonServerConfiguration.java", "diffHunk": "@@ -210,6 +210,17 @@\n      */\n     private long connectTimeout = 5000;\n \n+    /**\n+     * Indicates whether it is ok to query events from the local Axon Server node - the node the client is currently\n+     * connected to. This means that the client will probably get stale events since all events my not be replicated to\n+     * this node yet. Used when criteria for eventual consistency is loosen up. It will spread the load for querying", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc531329c25ffb83ad37479013187950da82c975"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzUwODc2OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMDozN1rOF38qAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMDozN1rOF38qAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwOTc5Mw==", "bodyText": "Would it make sense to set this field once for the AxonIQEventStorageEngine to be used on every GetEventsRequest and QueryEventsRequest call instead of retrieving it from the config each time? \ud83e\udd14", "url": "https://github.com/AxonFramework/AxonFramework/pull/1373#discussion_r394209793", "createdAt": "2020-03-18T09:30:37Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java", "diffHunk": "@@ -481,7 +481,10 @@ public void onCompleted() {\n                     requestStream,\n                     configuration.getClientId(),\n                     configuration.getEventFlowControl(),\n-                    t -> GetEventsRequest.newBuilder().setNumberOfPermits(t.getPermits()).build(),\n+                    t -> GetEventsRequest.newBuilder()\n+                                         .setAllowReadingFromFollower(configuration.isAllowReadingEventsFromFollower())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc531329c25ffb83ad37479013187950da82c975"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzUxMjU1OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/event/EventStoreImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMTozOVrOF38sdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMTozOVrOF38sdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxMDQyMQ==", "bodyText": "Nit: I'd expected your changes to update the copyright notice to 2020.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1373#discussion_r394210421", "createdAt": "2020-03-18T09:31:39Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/event/EventStoreImpl.java", "diffHunk": "@@ -16,16 +16,40 @@\n \n package org.axonframework.axonserver.connector.event;\n \n-import io.axoniq.axonserver.grpc.event.*;\n+import io.axoniq.axonserver.grpc.event.Confirmation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc531329c25ffb83ad37479013187950da82c975"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzUxNjM1OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/event/EventStoreImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMjozOFrOF38u4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMjozOFrOF38u4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxMTA0MA==", "bodyText": "When in the spot, might be nice to provide a short piece of class-level javadoc.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1373#discussion_r394211040", "createdAt": "2020-03-18T09:32:38Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/event/EventStoreImpl.java", "diffHunk": "@@ -16,16 +16,40 @@\n \n package org.axonframework.axonserver.connector.event;\n \n-import io.axoniq.axonserver.grpc.event.*;\n+import io.axoniq.axonserver.grpc.event.Confirmation;\n+import io.axoniq.axonserver.grpc.event.Event;\n+import io.axoniq.axonserver.grpc.event.EventStoreGrpc;\n+import io.axoniq.axonserver.grpc.event.EventWithToken;\n+import io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest;\n+import io.axoniq.axonserver.grpc.event.GetEventsRequest;\n+import io.axoniq.axonserver.grpc.event.QueryEventsRequest;\n+import io.axoniq.axonserver.grpc.event.QueryEventsResponse;\n+import io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest;\n+import io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse;\n import io.grpc.stub.StreamObserver;\n \n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.atomic.AtomicLong;\n \n public class EventStoreImpl extends EventStoreGrpc.EventStoreImplBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc531329c25ffb83ad37479013187950da82c975"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3345, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}