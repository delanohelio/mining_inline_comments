{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTU4MjQz", "number": 1308, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNToxNToyMlrODV_7Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMToyODo0NVrODWrJvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mzk0MDU1OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/axonframework/test/aggregate/ResultValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNToxNToyMlrOFagQeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDowMjowMVrOFa02JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMzNTgwMA==", "bodyText": "This is still a @duration =)\njavadoc changes as usual", "url": "https://github.com/AxonFramework/AxonFramework/pull/1308#discussion_r363335800", "createdAt": "2020-01-06T15:15:22Z", "author": {"login": "lfgcampos"}, "path": "test/src/main/java/org/axonframework/test/aggregate/ResultValidator.java", "diffHunk": "@@ -274,6 +275,100 @@\n      */\n     ResultValidator<T> expectNoScheduledDeadlines();\n \n+    /**\n+     * Asserts that <b>no</b> deadline matching the given {@code matcher} should be scheduled after the given {@code\n+     * duration}.\n+     *\n+     * @param duration the time at which no deadline matching the given {@code matcher} should be scheduled\n+     * @param matcher  the matcher defining the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineMatching(Duration duration,\n+                                                         Matcher<? super DeadlineMessage<?>> matcher);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline equal to the given {@code deadline} has been scheduled after the given {@code\n+     * duration}.\n+     * <p/>\n+     * Note that the source attribute of the deadline is ignored when comparing deadlines. Deadlines are compared using\n+     * an \"equals\" check on all fields in the deadlines.\n+     *\n+     * @param duration the time at which no deadline equal to the given {@code deadline} should be scheduled\n+     * @param deadline the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadline(Duration duration, Object deadline);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline of the given {@code deadlineType} has been scheduled at the given {@code\n+     * scheduledTime}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b474f56cc0639f1496edac714f3b41ffb513fb8"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3MzEyNQ==", "bodyText": "Darn it...thanks for spotting it though! Resolved it just now.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1308#discussion_r363673125", "createdAt": "2020-01-07T10:02:01Z", "author": {"login": "smcvb"}, "path": "test/src/main/java/org/axonframework/test/aggregate/ResultValidator.java", "diffHunk": "@@ -274,6 +275,100 @@\n      */\n     ResultValidator<T> expectNoScheduledDeadlines();\n \n+    /**\n+     * Asserts that <b>no</b> deadline matching the given {@code matcher} should be scheduled after the given {@code\n+     * duration}.\n+     *\n+     * @param duration the time at which no deadline matching the given {@code matcher} should be scheduled\n+     * @param matcher  the matcher defining the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineMatching(Duration duration,\n+                                                         Matcher<? super DeadlineMessage<?>> matcher);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline equal to the given {@code deadline} has been scheduled after the given {@code\n+     * duration}.\n+     * <p/>\n+     * Note that the source attribute of the deadline is ignored when comparing deadlines. Deadlines are compared using\n+     * an \"equals\" check on all fields in the deadlines.\n+     *\n+     * @param duration the time at which no deadline equal to the given {@code deadline} should be scheduled\n+     * @param deadline the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadline(Duration duration, Object deadline);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline of the given {@code deadlineType} has been scheduled at the given {@code\n+     * scheduledTime}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMzNTgwMA=="}, "originalCommit": {"oid": "6b474f56cc0639f1496edac714f3b41ffb513fb8"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTAyMjY4OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/axonframework/test/aggregate/ResultValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMToyODo0NVrOFbkYVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMzo1Njo1OVrOFcUw_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1MTkyNA==", "bodyText": "The timestamp of a DeadlineMessage should reflect the time of expiry of the deadline. At least, the DeadlineManager implementations for production use, have the schedule date as the event timestamp once they publish the Deadline Message. It would be nice for the StubDeadlineManager to reflect this behavior.\nThat would make the Instant parameter obsolete for this method. As a result, the method could become more powerful, as one can more easily validate the absence of any deadlines that match certain criteria.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1308#discussion_r364451924", "createdAt": "2020-01-08T21:28:45Z", "author": {"login": "abuijze"}, "path": "test/src/main/java/org/axonframework/test/aggregate/ResultValidator.java", "diffHunk": "@@ -274,6 +275,100 @@\n      */\n     ResultValidator<T> expectNoScheduledDeadlines();\n \n+    /**\n+     * Asserts that <b>no</b> deadline matching the given {@code matcher} should be scheduled after the given {@code\n+     * duration}.\n+     *\n+     * @param duration the time at which no deadline matching the given {@code matcher} should be scheduled\n+     * @param matcher  the matcher defining the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineMatching(Duration duration,\n+                                                         Matcher<? super DeadlineMessage<?>> matcher);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline equal to the given {@code deadline} has been scheduled after the given {@code\n+     * duration}.\n+     * <p/>\n+     * Note that the source attribute of the deadline is ignored when comparing deadlines. Deadlines are compared using\n+     * an \"equals\" check on all fields in the deadlines.\n+     *\n+     * @param duration the time at which no deadline equal to the given {@code deadline} should be scheduled\n+     * @param deadline the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadline(Duration duration, Object deadline);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline of the given {@code deadlineType} has been scheduled after the given {@code\n+     * duration}.\n+     *\n+     * @param duration     the time at which no deadline of {@code deadlineType} should be scheduled\n+     * @param deadlineType the type of the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineOfType(Duration duration, Class<?> deadlineType);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline with the given {@code deadlineName} has been scheduled after the given {@code\n+     * duration}.\n+     *\n+     * @param duration     the time at which no deadline of {@code deadlineName} should be scheduled\n+     * @param deadlineName the name of the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineWithName(Duration duration, String deadlineName);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline matching the given {@code matcher} has been scheduled at the given {@code\n+     * scheduledTime}.\n+     * <p/>\n+     * If the {@code scheduledTime} is calculated based on the \"current time\", use the {@link\n+     * TestExecutor#currentTime()} to get the time to use as \"current time\".\n+     *\n+     * @param scheduledTime the time at which no deadline matching the given {@code matcher} should be scheduled\n+     * @param matcher       the matcher defining the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineMatching(Instant scheduledTime,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fcc6c48329afe15f2c41a643eb4cf302701ad6"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI0NDY2OA==", "bodyText": "Very good point @abuijze! I've made the suggested change in this commit. Would you mind giving your opinion on it?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1308#discussion_r365244668", "createdAt": "2020-01-10T13:56:59Z", "author": {"login": "smcvb"}, "path": "test/src/main/java/org/axonframework/test/aggregate/ResultValidator.java", "diffHunk": "@@ -274,6 +275,100 @@\n      */\n     ResultValidator<T> expectNoScheduledDeadlines();\n \n+    /**\n+     * Asserts that <b>no</b> deadline matching the given {@code matcher} should be scheduled after the given {@code\n+     * duration}.\n+     *\n+     * @param duration the time at which no deadline matching the given {@code matcher} should be scheduled\n+     * @param matcher  the matcher defining the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineMatching(Duration duration,\n+                                                         Matcher<? super DeadlineMessage<?>> matcher);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline equal to the given {@code deadline} has been scheduled after the given {@code\n+     * duration}.\n+     * <p/>\n+     * Note that the source attribute of the deadline is ignored when comparing deadlines. Deadlines are compared using\n+     * an \"equals\" check on all fields in the deadlines.\n+     *\n+     * @param duration the time at which no deadline equal to the given {@code deadline} should be scheduled\n+     * @param deadline the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadline(Duration duration, Object deadline);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline of the given {@code deadlineType} has been scheduled after the given {@code\n+     * duration}.\n+     *\n+     * @param duration     the time at which no deadline of {@code deadlineType} should be scheduled\n+     * @param deadlineType the type of the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineOfType(Duration duration, Class<?> deadlineType);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline with the given {@code deadlineName} has been scheduled after the given {@code\n+     * duration}.\n+     *\n+     * @param duration     the time at which no deadline of {@code deadlineName} should be scheduled\n+     * @param deadlineName the name of the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineWithName(Duration duration, String deadlineName);\n+\n+    /**\n+     * Asserts that <b>no</b> deadline matching the given {@code matcher} has been scheduled at the given {@code\n+     * scheduledTime}.\n+     * <p/>\n+     * If the {@code scheduledTime} is calculated based on the \"current time\", use the {@link\n+     * TestExecutor#currentTime()} to get the time to use as \"current time\".\n+     *\n+     * @param scheduledTime the time at which no deadline matching the given {@code matcher} should be scheduled\n+     * @param matcher       the matcher defining the deadline which should not be scheduled\n+     * @return the current ResultValidator, for fluent interfacing\n+     */\n+    ResultValidator<T> expectNoScheduledDeadlineMatching(Instant scheduledTime,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1MTkyNA=="}, "originalCommit": {"oid": "73fcc6c48329afe15f2c41a643eb4cf302701ad6"}, "originalPosition": 163}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3264, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}