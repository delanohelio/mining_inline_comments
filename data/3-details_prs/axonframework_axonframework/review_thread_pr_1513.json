{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMTgxNDA5", "number": 1513, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDowODo0NVrOElllog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDoxMDoxMFrOEllnpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODQ4NjEwOnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/AxonServerConnectionManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDowODo0NVrOHVI5uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToxMTo0NVrOHVK5Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyNzk5NQ==", "bodyText": "Can we add a test that such a channelCustomization is actually invoked upon creation of the AxonServerConnectionManager?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1513#discussion_r491927995", "createdAt": "2020-09-21T10:08:45Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/AxonServerConnectionManager.java", "diffHunk": "@@ -186,6 +189,21 @@ public Builder tagsConfiguration(TagsConfiguration tagsConfiguration) {\n             return this;\n         }\n \n+        /**\n+         * Registers the given {@code channelCustomization}, which configures the underling {@link ManagedChannelBuilder} used\n+         * to set up connections to AxonServer.\n+         * <p>\n+         * This method may be used in case none of the operations on this Builder provide support for the required\n+         * feature.\n+         *\n+         * @param channelCustomization A function defining the customization to make on the ManagedChannelBuilder\n+         * @return this builder for further configuration\n+         */\n+        public Builder channelCustomizer(UnaryOperator<ManagedChannelBuilder<?>> channelCustomization) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9054a421fe24fd33ef4a75fea4702fceeeb0429f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2MDYwMw==", "bodyText": "added testcase", "url": "https://github.com/AxonFramework/AxonFramework/pull/1513#discussion_r491960603", "createdAt": "2020-09-21T11:11:45Z", "author": {"login": "MGathier"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/AxonServerConnectionManager.java", "diffHunk": "@@ -186,6 +189,21 @@ public Builder tagsConfiguration(TagsConfiguration tagsConfiguration) {\n             return this;\n         }\n \n+        /**\n+         * Registers the given {@code channelCustomization}, which configures the underling {@link ManagedChannelBuilder} used\n+         * to set up connections to AxonServer.\n+         * <p>\n+         * This method may be used in case none of the operations on this Builder provide support for the required\n+         * feature.\n+         *\n+         * @param channelCustomization A function defining the customization to make on the ManagedChannelBuilder\n+         * @return this builder for further configuration\n+         */\n+        public Builder channelCustomizer(UnaryOperator<ManagedChannelBuilder<?>> channelCustomization) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyNzk5NQ=="}, "originalCommit": {"oid": "9054a421fe24fd33ef4a75fea4702fceeeb0429f"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODQ4NzgxOnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/ManagedChannelCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDowOToxN1rOHVI6yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToxOToxM1rOHVLHXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyODI2Nw==", "bodyText": "Curious: would you need to add @FunctionalInterface on this level too or is that taken over from the UnaryOperator automatically?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1513#discussion_r491928267", "createdAt": "2020-09-21T10:09:17Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/ManagedChannelCustomizer.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.axonframework.axonserver.connector;\n+\n+import io.grpc.ManagedChannelBuilder;\n+import java.util.function.UnaryOperator;\n+\n+/**\n+ * Customizer to add more customizations to a managed channel to Axon Server.\n+ *\n+ * @author Marc Gathier\n+ * @since 4.4.3\n+ */\n+public interface ManagedChannelCustomizer extends UnaryOperator<ManagedChannelBuilder<?>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9054a421fe24fd33ef4a75fea4702fceeeb0429f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2NDI1Mw==", "bodyText": "Apparently not taken super interface, so added this.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1513#discussion_r491964253", "createdAt": "2020-09-21T11:19:13Z", "author": {"login": "MGathier"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/ManagedChannelCustomizer.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.axonframework.axonserver.connector;\n+\n+import io.grpc.ManagedChannelBuilder;\n+import java.util.function.UnaryOperator;\n+\n+/**\n+ * Customizer to add more customizations to a managed channel to Axon Server.\n+ *\n+ * @author Marc Gathier\n+ * @since 4.4.3\n+ */\n+public interface ManagedChannelCustomizer extends UnaryOperator<ManagedChannelBuilder<?>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyODI2Nw=="}, "originalCommit": {"oid": "9054a421fe24fd33ef4a75fea4702fceeeb0429f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODQ5MTI1OnYy", "diffSide": "RIGHT", "path": "spring-boot-autoconfigure/src/main/java/org/axonframework/springboot/autoconfig/AxonServerAutoConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDoxMDoxMFrOHVI8wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToxMTozNFrOHVK4wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyODc2OA==", "bodyText": "This addition serves a simple additional verification in the AxonServerAutoConfigurationTest I think.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1513#discussion_r491928768", "createdAt": "2020-09-21T10:10:10Z", "author": {"login": "smcvb"}, "path": "spring-boot-autoconfigure/src/main/java/org/axonframework/springboot/autoconfig/AxonServerAutoConfiguration.java", "diffHunk": "@@ -90,12 +91,20 @@ private String clientName(String id) {\n         return id;\n     }\n \n+    @Bean\n+    @ConditionalOnMissingBean\n+    public ManagedChannelCustomizer managedChannelCustomizer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9054a421fe24fd33ef4a75fea4702fceeeb0429f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2MDUxMw==", "bodyText": "Added test for this", "url": "https://github.com/AxonFramework/AxonFramework/pull/1513#discussion_r491960513", "createdAt": "2020-09-21T11:11:34Z", "author": {"login": "MGathier"}, "path": "spring-boot-autoconfigure/src/main/java/org/axonframework/springboot/autoconfig/AxonServerAutoConfiguration.java", "diffHunk": "@@ -90,12 +91,20 @@ private String clientName(String id) {\n         return id;\n     }\n \n+    @Bean\n+    @ConditionalOnMissingBean\n+    public ManagedChannelCustomizer managedChannelCustomizer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyODc2OA=="}, "originalCommit": {"oid": "9054a421fe24fd33ef4a75fea4702fceeeb0429f"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3237, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}