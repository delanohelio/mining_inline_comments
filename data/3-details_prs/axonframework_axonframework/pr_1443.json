{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyOTc5NjM2", "number": 1443, "title": "[#1391] Allow easy configuration of Snapshot Filter", "bodyText": "This pull request provides the option to more easily configure a snapshot filter per Aggregate, and have them be combined through the configuration API on the event storage engine being used.\nTo that end, a SnapshotFilter functional interface has been provided, which can be provided to the AggregateConfigurer and @Aggregate annotation. The Configuration API will pull all existing SnapshotFilter instances per Aggregate, combines them and provides the combined filter to the storage engine.\nThis led to the deprecation of the old Builder#snapshotFilter(Predicate<DomainEventData<?>>) methods, in favor of a Builder#snapshotFilter(SnapshotFilter) method.\nNote that the SnapshotFilter interface and it's implementations have been added to the org.axonframework.eventsourcing.snapshotting package, whereas the other snapshotting logic reside on the org.axonframework.eventsourcing.\nThis PR resolves #1391.", "createdAt": "2020-06-11T10:18:06Z", "url": "https://github.com/AxonFramework/AxonFramework/pull/1443", "merged": true, "mergeCommit": {"oid": "266639438dc225f1ea6b59d00a92320295253330"}, "closed": true, "closedAt": "2020-06-23T13:26:52Z", "author": {"login": "smcvb"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqKq77gH2gAyNDMyOTc5NjM2OmJjNmFlMjA4ODVlNGIxYTFhODc1OTg1ZTJkMjE4ZGRlMTRmZDZiMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuEhWpgH2gAyNDMyOTc5NjM2OmZiYmRlOGVhZjJjYThlZTI0M2Q5YzEzMDBlMTdiYTg3YWFjMjE2NTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bc6ae20885e4b1a1a875985e2d218dde14fd6b01", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/bc6ae20885e4b1a1a875985e2d218dde14fd6b01", "committedDate": "2020-06-11T09:16:51Z", "message": "Introduce SnapshotFilter\n\nIntroduce the SnapshotFilter functional interface, providing an And, Or\nand Negate implementation for convenience. The SnapshotFilter will be\nused as the unit to provide to the AggregateConfigurer or as a bean in\nthe application context, referenced through the @Aggregate\nannotation.\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "884b770242591913c399dd1999031bb29202459e", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/884b770242591913c399dd1999031bb29202459e", "committedDate": "2020-06-11T09:19:25Z", "message": "Allow configuration of a SnapshotFilter on the AggregateConfigurer\n\nAllow configuration of a SnapshotFilter on the AggregateConfigurer\nthrough a dedicated method. Added, provide a means to retrieve the\nSnapshotFilter from the AggregateConfiguration, so that it can be\nprovisioned to the EventStorageEngine. Added, fix some warnings and\nindentation issues\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bd3077b9d48cc97fdf5a55a78d13ba4df2ec8d4", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/9bd3077b9d48cc97fdf5a55a78d13ba4df2ec8d4", "committedDate": "2020-06-11T09:23:17Z", "message": "Provide builder options for the SnapshotFilter on the storage engines\n\nAll (non in memory) storage engines should allow for setting the\nSnapshotFilter. This should replace the old SnapshotFilter, which used\na plain Predicate. The AbstractEventStorageEngine implementation should\nuse the filter when reading snapshots. Finally, adjust the documentation\n accordingly, with added deprecation for the old snapshot filter builder\n methods.\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33e688a6ed641844d14bfb3d605cb1d53f7d4e6e", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/33e688a6ed641844d14bfb3d605cb1d53f7d4e6e", "committedDate": "2020-06-11T09:27:06Z", "message": "Set the configured SnapshotFilter on the storage engines\n\nA combined SnapshotFilter needs to be retrieved from the Configuration,\nwhich traverses all existing AggregateConfigurers and combines them in\nan AND operation. The SnapshotFilter should be provided to the right\nplaces in the configurers to be added to the storage engines.\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4276584ee7c3b0e0a9cb2943db47ddde6333b851", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/4276584ee7c3b0e0a9cb2943db47ddde6333b851", "committedDate": "2020-06-11T09:29:03Z", "message": "Allow configuration of SnapshotFilter bean on the @Aggregate\n\nThe @Aggregate annotation should include a snapshotFilter property which\n will reference the SnapshotFilter bean name. The\n SpringAxonAutoConfigurer should search for the bean and tie it to the\n AggregateConfigurer. Added, clean up some of the code to simplify.\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2d7e7a094e54268bccddd610dd454a55a1e5000", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/a2d7e7a094e54268bccddd610dd454a55a1e5000", "committedDate": "2020-06-11T09:30:02Z", "message": "Add the SnapshotFilter to the jdbc/jpa auto configuration classes\n\nAdd the SnapshotFilter to the jdbc/jpa auto configuration classes.\nProvide a test case which validates the overall Spring auto\nconfiguration.\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da16fbeb6b103ae5c98d3a465074aa30c8b287e6", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/da16fbeb6b103ae5c98d3a465074aa30c8b287e6", "committedDate": "2020-06-11T10:07:47Z", "message": "Add the SnapshotFilter to the axon server auto configuration class\n\nAdd the SnapshotFilter to the axon server auto configuration class.\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f256cff6ffae656aca2e39fe2db6b1d3d296636a", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/f256cff6ffae656aca2e39fe2db6b1d3d296636a", "committedDate": "2020-06-11T10:17:29Z", "message": "Rename test class and add javadoc line\n\nRename test class and add javadoc line for clarity\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c405844244ae2e367ea6dc880fd46276944d03b2", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/c405844244ae2e367ea6dc880fd46276944d03b2", "committedDate": "2020-06-11T10:31:15Z", "message": "Merge remote-tracking branch 'origin/master' into feature/1391\n\n# Conflicts:\n#\teventsourcing/src/main/java/org/axonframework/eventsourcing/eventstore/AbstractEventStorageEngine.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74401ccb7ec335f0593fe5ad8c7eabf39327176a", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/74401ccb7ec335f0593fe5ad8c7eabf39327176a", "committedDate": "2020-06-11T12:16:02Z", "message": "Prefix overridden builder methods with class name\n\nPrefixing the overridden builder methods with the class name will ensure\n they're not marked as duplicate pieces of code.\n\n#1391"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMjQ1MDc0", "url": "https://github.com/AxonFramework/AxonFramework/pull/1443#pullrequestreview-431245074", "createdAt": "2020-06-16T07:49:27Z", "commit": {"oid": "74401ccb7ec335f0593fe5ad8c7eabf39327176a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzo0OToyN1rOGkPWNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzo0OToyN1rOGkPWNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzM2NQ==", "bodyText": "Why not extending a Predicate here?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1443#discussion_r440653365", "createdAt": "2020-06-16T07:49:27Z", "author": {"login": "m1l4n54v1c"}, "path": "eventsourcing/src/main/java/org/axonframework/eventsourcing/snapshotting/SnapshotFilter.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.eventsourcing.snapshotting;\n+\n+import org.axonframework.eventhandling.DomainEventData;\n+\n+/**\n+ * Functional interface defining a filter of snapshot data in the form of {@link DomainEventData}. When providing an\n+ * instance of this, take the following into account:\n+ * <ol>\n+ *     <li> Only return {@code false} if the snapshot data belongs to the corresponding aggregate <b>and</b> it does no conform to the desired format.</li>\n+ *     <li> Return {@code true} if the snapshot data belongs to the corresponding aggregate and conforms to the desired format.</li>\n+ *     <li> Return {@code true} if the snapshot data <b>does not</b> correspond to the desired aggregate.</li>\n+ * </ol>\n+ * <p>\n+ * Whether the {@code DomainEventData} corresponds to the right aggregate and is of the desired format, is dependent on\n+ * the {@link org.axonframework.eventsourcing.Snapshotter} instance being used. By default, the {@link\n+ * org.axonframework.eventsourcing.AggregateSnapshotter} instances would be used.\n+ * <p>\n+ * In such a default set up, {@code DomainEventData} <i>corresponding to the right aggregate</i> means that the {@link\n+ * DomainEventData#getType()} matches the aggregate's type. If {@code DomainEventData} is of the <i>desired format</i>\n+ * should be based on the {@link DomainEventData#getPayload()}, which contains the entire aggregate state.\n+ *\n+ * @author Steven van Beelen\n+ * @since 4.4\n+ */\n+@FunctionalInterface\n+public interface SnapshotFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74401ccb7ec335f0593fe5ad8c7eabf39327176a"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "426214ff14dbba4436435d3f46316a927d93b3fa", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/426214ff14dbba4436435d3f46316a927d93b3fa", "committedDate": "2020-06-16T09:28:09Z", "message": "Merge remote-tracking branch 'origin/master' into feature/1391\n\n# Conflicts:\n#\tconfig/src/main/java/org/axonframework/config/AggregateConfiguration.java\n#\tconfig/src/main/java/org/axonframework/config/AggregateConfigurer.java\n#\tconfig/src/test/java/org/axonframework/config/AggregateConfigurerTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2668c949027b18e6ed51788d8f55e4c9cb5f73d2", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/2668c949027b18e6ed51788d8f55e4c9cb5f73d2", "committedDate": "2020-06-16T10:49:35Z", "message": "Let SnapshotFilter extend Predicate\n\nLet SnapshotFilter extend Predicate to clarify it's nothing more than a\nwrapper around a regular predicate. Doing so omits the requirement to\ncast the SnapshotFilter in the builders.\n\n#1391"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDgwNTYw", "url": "https://github.com/AxonFramework/AxonFramework/pull/1443#pullrequestreview-431480560", "createdAt": "2020-06-16T13:05:24Z", "commit": {"oid": "2668c949027b18e6ed51788d8f55e4c9cb5f73d2"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzowNToyNFrOGkaUow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozNDo1OFrOGkeZcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzMzE4Nw==", "bodyText": "We had an assertNonNull before, should we keep it?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1443#discussion_r440833187", "createdAt": "2020-06-16T13:05:24Z", "author": {"login": "lfgcampos"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java", "diffHunk": "@@ -240,8 +265,25 @@ public Builder eventSerializer(Serializer eventSerializer) {\n          *\n          * @param snapshotFilter The snapshot filter predicate\n          * @return the current Builder instance, for fluent interfacing\n+         * @deprecated in favor of {@link #snapshotFilter(SnapshotFilter)}\n          */\n+        @Deprecated\n         public Builder snapshotFilter(Predicate<? super DomainEventData<?>> snapshotFilter) {\n+            snapshotFilter(snapshotFilter::test);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2668c949027b18e6ed51788d8f55e4c9cb5f73d2"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0MzI3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class JpaEventStoreAutoConfigurationWithSnapshotting {\n          \n          \n            \n            class JpaEventStoreAutoConfigurationWithSnapshottingTest {", "url": "https://github.com/AxonFramework/AxonFramework/pull/1443#discussion_r440843274", "createdAt": "2020-06-16T13:20:35Z", "author": {"login": "lfgcampos"}, "path": "spring-boot-autoconfigure/src/test/java/org/axonframework/springboot/JpaEventStoreAutoConfigurationWithSnapshotting.java", "diffHunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.springboot;\n+\n+import org.axonframework.commandhandling.CommandHandler;\n+import org.axonframework.commandhandling.gateway.CommandGateway;\n+import org.axonframework.eventhandling.EventHandler;\n+import org.axonframework.eventsourcing.AggregateSnapshotter;\n+import org.axonframework.eventsourcing.EventCountSnapshotTriggerDefinition;\n+import org.axonframework.eventsourcing.GenericAggregateFactory;\n+import org.axonframework.eventsourcing.SnapshotTriggerDefinition;\n+import org.axonframework.eventsourcing.Snapshotter;\n+import org.axonframework.eventsourcing.eventstore.EventStore;\n+import org.axonframework.eventsourcing.eventstore.jpa.JpaEventStorageEngine;\n+import org.axonframework.eventsourcing.snapshotting.SnapshotFilter;\n+import org.axonframework.modelling.command.AggregateIdentifier;\n+import org.axonframework.modelling.command.AggregateLifecycle;\n+import org.axonframework.modelling.command.TargetAggregateIdentifier;\n+import org.axonframework.spring.stereotype.Aggregate;\n+import org.axonframework.springboot.autoconfig.AxonServerAutoConfiguration;\n+import org.junit.jupiter.api.*;\n+import org.junit.jupiter.api.extension.*;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.EnableMBeanExport;\n+import org.springframework.jmx.support.RegistrationPolicy;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.*;\n+\n+/**\n+ * Test class validating auto configured snapshotting logic.\n+ *\n+ * @author Steven van Beelen\n+ */\n+@ContextConfiguration(classes = JpaEventStoreAutoConfigurationWithSnapshotting.TestContext.class)\n+@ExtendWith(SpringExtension.class)\n+@EnableAutoConfiguration(exclude = {AxonServerAutoConfiguration.class})\n+@EnableMBeanExport(registration = RegistrationPolicy.IGNORE_EXISTING)\n+class JpaEventStoreAutoConfigurationWithSnapshotting {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2668c949027b18e6ed51788d8f55e4c9cb5f73d2"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg5OTk1NQ==", "bodyText": "We had an assertNonNull before, should we keep it?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1443#discussion_r440899955", "createdAt": "2020-06-16T14:34:58Z", "author": {"login": "lfgcampos"}, "path": "eventsourcing/src/main/java/org/axonframework/eventsourcing/eventstore/AbstractEventStorageEngine.java", "diffHunk": "@@ -314,8 +315,24 @@ public Builder eventSerializer(Serializer eventSerializer) {\n          *\n          * @param snapshotFilter a {@link Predicate} which decides whether to take a snapshot into account\n          * @return the current Builder instance, for fluent interfacing\n+         * @deprecated in favor of {@link #snapshotFilter(SnapshotFilter)}\n          */\n+        @Deprecated\n         public Builder snapshotFilter(Predicate<? super DomainEventData<?>> snapshotFilter) {\n+            return snapshotFilter(snapshotFilter::test);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2668c949027b18e6ed51788d8f55e4c9cb5f73d2"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6563b5e86a4a5ac0332e29c8ac23c9b07f1e9551", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/6563b5e86a4a5ac0332e29c8ac23c9b07f1e9551", "committedDate": "2020-06-17T08:41:35Z", "message": "Update test class name\n\nUpdate test class name to contain \"Test\"\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c05eed2e13799f405443622561d5e44ab0e52798", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/c05eed2e13799f405443622561d5e44ab0e52798", "committedDate": "2020-06-17T08:42:56Z", "message": "Merge remote-tracking branch 'origin/master' into feature/1391\n\n# Conflicts:\n#\tconfig/src/test/java/org/axonframework/config/DefaultConfigurerTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03c9e0fd0a4f64f2cac15b674c43703c16252e9c", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/03c9e0fd0a4f64f2cac15b674c43703c16252e9c", "committedDate": "2020-06-17T10:23:31Z", "message": "Make changes through merging with master\n\nMake changes through merging with master\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3a27549fbcd40b6c601f669250ff736fb4730f4", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/d3a27549fbcd40b6c601f669250ff736fb4730f4", "committedDate": "2020-06-23T12:20:36Z", "message": "Adjust SnapshotFilter API\n\nChange the SnapshotFilter API to be more to the point. In doing so,\nrename `filter` to `allow`, as the function should allow or reject\nsnapshot data. On top, only the `and` operation is used, which logically\n should be `combine`, as you'd combine these allow methods, not \"and\"\n them.\n\n#1391"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbbde8eaf2ca8ee243d9c1300e17ba87aac21659", "author": {"user": {"login": "smcvb", "name": "Steven van Beelen"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/fbbde8eaf2ca8ee243d9c1300e17ba87aac21659", "committedDate": "2020-06-23T12:22:39Z", "message": "Merge remote-tracking branch 'origin/master' into feature/1391"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1753, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}