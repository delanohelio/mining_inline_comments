{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NjU3ODUz", "number": 1335, "title": "[#1253] Expose 'merging status' in Tracking Processor status", "bodyText": "This PR resolves #1253 .\nTwo new information will be available into EventTrackerStatus to recognize if a merge operation is in progress and what is the furthest relative token position estimated to merge completion.", "createdAt": "2020-01-31T16:16:47Z", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335", "merged": true, "mergeCommit": {"oid": "8c924c1f5b792778aa76635631142afdf501b419"}, "closed": true, "closedAt": "2020-02-07T10:58:20Z", "author": {"login": "corradom"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_bY0NAH2gAyMzY5NjU3ODUzOjkyZTQyYTAyOThjYjk0N2JiODk0ZWMwYzQxZWUyNGQ1ZDUxZGFiNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcB8yudgFqTM1NTA2NDA4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "92e42a0298cb947bb894ec0c41ee24d5d51dab58", "author": {"user": {"login": "corradom", "name": "Corrado Musumeci"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/92e42a0298cb947bb894ec0c41ee24d5d51dab58", "committedDate": "2020-01-30T14:26:42Z", "message": "expose merge operation info on an EventTrackerStatus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93ceb29463e5d33492c533a1928ac34f0e4a828d", "author": {"user": {"login": "corradom", "name": "Corrado Musumeci"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/93ceb29463e5d33492c533a1928ac34f0e4a828d", "committedDate": "2020-01-31T16:05:52Z", "message": "introduce mergeCompletedPosition in EventTrackerStatus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32", "author": {"user": {"login": "corradom", "name": "Corrado Musumeci"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/7092083292cb15843ec2e5fa29ce892bb14e2c32", "committedDate": "2020-01-31T16:38:34Z", "message": "add minor fix after failing CI built"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMTA4NTUy", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#pullrequestreview-352108552", "createdAt": "2020-02-03T09:16:26Z", "commit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOToxNjoyN1rOFkqlsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOToxODo1MFrOFkqpgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MDgzMg==", "bodyText": "This gives the upper most position when merging should be resolved, but don't we also need the lowest point of the existing tokens?\nIt's those two numbers which can give us the \"merging progress\", quite similar to exposing the replayPosition and tokenAtResetPosition.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r373990832", "createdAt": "2020-02-03T09:16:27Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "diffHunk": "@@ -76,6 +76,38 @@ protected MergedTrackingToken(TrackingToken lowerSegmentToken, TrackingToken upp\n         this.upperSegmentAdvanced = upperSegmentAdvanced;\n     }\n \n+    /**\n+     * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.\n+     *\n+     * @param trackingToken The token to verify\n+     * @return {@code true} if the token indicates a merge\n+     */\n+    public static boolean isMergeInProgress(TrackingToken trackingToken) {\n+        return WrappedToken.unwrap(trackingToken, MergedTrackingToken.class).isPresent();\n+    }\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    public static OptionalLong mergePosition(TrackingToken trackingToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MTUyNA==", "bodyText": "Added, I am not overly pleased with the name of this method, but haven't landed on something satisfying either...\nI can only think in terms of \"upper most token\" and \"lowest token\", which would suggest that this method would be renamed to upperMergePosition/upperMergingPosition and the other would be lowestMergePosition/lowestMergingPosition.\nWhat do you think?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r373991524", "createdAt": "2020-02-03T09:18:09Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "diffHunk": "@@ -76,6 +76,38 @@ protected MergedTrackingToken(TrackingToken lowerSegmentToken, TrackingToken upp\n         this.upperSegmentAdvanced = upperSegmentAdvanced;\n     }\n \n+    /**\n+     * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.\n+     *\n+     * @param trackingToken The token to verify\n+     * @return {@code true} if the token indicates a merge\n+     */\n+    public static boolean isMergeInProgress(TrackingToken trackingToken) {\n+        return WrappedToken.unwrap(trackingToken, MergedTrackingToken.class).isPresent();\n+    }\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    public static OptionalLong mergePosition(TrackingToken trackingToken) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MDgzMg=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MTgxMQ==", "bodyText": "I am not overly pleased with the name of this method, but haven't landed on something satisfying either...\nI can only think in terms of \"upper most token\" and \"lowest token\", which would suggest that this method would be renamed to upperMergePosition/upperMergingPosition and the other would be lowestMergePosition/lowestMergingPosition.\nWhat do you think?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r373991811", "createdAt": "2020-02-03T09:18:50Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    OptionalLong mergeCompletedPosition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyODA5Njgz", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#pullrequestreview-352809683", "createdAt": "2020-02-04T08:58:11Z", "commit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1ODoxMVrOFlMUXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo0NDo1NlrOFlNuGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzQ1NA==", "bodyText": "Nit: Maybe use a named variable for 0 called segmentId. I know what happens here, but on face value it's a magic number I think.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374543454", "createdAt": "2020-02-04T08:58:11Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -966,8 +966,14 @@ void testMergeSegments() throws InterruptedException {\n         }\n \n         assertTrue(testSubject.mergeSegment(0).join(), \"Expected merge to succeed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0NDExOQ==", "bodyText": "I have the same segmentId variable suggestion here :-)", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374544119", "createdAt": "2020-02-04T08:59:28Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -983,10 +989,17 @@ void testMergeSegments_BothClaimedByProcessor() throws Exception {\n         testSubject.start();\n         waitForActiveThreads(2);\n \n+        assertFalse(testSubject.processingStatus().get(0).isMerging());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1OTkzMg==", "bodyText": "Why not check that after this mergeSegment call that the status isMerging returns true?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374559932", "createdAt": "2020-02-04T09:31:53Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -1065,6 +1083,8 @@ void testDoubleSplitAndMerge() throws Exception {\n \n         waitForProcessingStatus(0, EventTrackerStatus::isCaughtUp);\n \n+        assertFalse(testSubject.processingStatus().get(0).isMerging());\n+\n         assertTrue(testSubject.mergeSegment(0).join(), \"Expected merge to succeed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MDI0MA==", "bodyText": "Super nit: unnecessary empty line.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374560240", "createdAt": "2020-02-04T09:32:31Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -1277,6 +1299,8 @@ void testMergeWithSingleSegmentRejected() throws InterruptedException {\n         CompletableFuture<Boolean> actual = testSubject.mergeSegment(0);\n \n         assertFalse(actual.join(), \"Expected merge to be rejected\");\n+        waitForProcessingNotInStatus(0, EventTrackerStatus::isMerging);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MTY1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Indicates whether this Segment is still merging events.\n          \n          \n            \n                 * Indicates whether this Segment is still merging two (or more) Segments. The merging process will be done once all Segments have reached the same position.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374561654", "createdAt": "2020-02-04T09:35:26Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MTc5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return {@code true} if this segment is merging events, otherwise {@code false}\n          \n          \n            \n                 * @return {@code true} if this segment is merging Segments, otherwise {@code false}", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374561790", "createdAt": "2020-02-04T09:35:42Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NDYzMA==", "bodyText": "I have a naming suggestion for this method. What about we call it the mergingFinishPosition or ``mergingGoalPosition`?\nI was thinking about what this field represent, and that's essentially the \"finish line when merging will be resolved\".", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374564630", "createdAt": "2020-02-04T09:41:28Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    OptionalLong mergeCompletedPosition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NTYxNQ==", "bodyText": "Suggestion: might be nice to mention on this piece of javadoc that this method will return a non-empty result as long as isMerging returns true.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374565615", "createdAt": "2020-02-04T09:43:23Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NjE0Nw==", "bodyText": "I believe this issue has been covered in the other discussion around sharing a regular getPosition method to be used for both replaying and merging, with a dedicated finish-line-position method. Hence I'll resolve this conversation.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374566147", "createdAt": "2020-02-04T09:44:25Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "diffHunk": "@@ -76,6 +76,38 @@ protected MergedTrackingToken(TrackingToken lowerSegmentToken, TrackingToken upp\n         this.upperSegmentAdvanced = upperSegmentAdvanced;\n     }\n \n+    /**\n+     * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.\n+     *\n+     * @param trackingToken The token to verify\n+     * @return {@code true} if the token indicates a merge\n+     */\n+    public static boolean isMergeInProgress(TrackingToken trackingToken) {\n+        return WrappedToken.unwrap(trackingToken, MergedTrackingToken.class).isPresent();\n+    }\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    public static OptionalLong mergePosition(TrackingToken trackingToken) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MDgzMg=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NjQyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.\n          \n          \n            \n                 * Indicates whether the given {@code trackingToken} represents a token that is part of a merge.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374566424", "createdAt": "2020-02-04T09:44:56Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "diffHunk": "@@ -76,6 +76,38 @@ protected MergedTrackingToken(TrackingToken lowerSegmentToken, TrackingToken upp\n         this.upperSegmentAdvanced = upperSegmentAdvanced;\n     }\n \n+    /**\n+     * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04a16133b364acd927990ea7f442b506248a203a", "author": {"user": {"login": "corradom", "name": "Corrado Musumeci"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/04a16133b364acd927990ea7f442b506248a203a", "committedDate": "2020-02-04T15:22:17Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Steven van Beelen <steven.vanbeelen@axoniq.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "129dda9218ce8ecda921d9cc82cda59c2342c4d7", "author": {"user": {"login": "corradom", "name": "Corrado Musumeci"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/129dda9218ce8ecda921d9cc82cda59c2342c4d7", "committedDate": "2020-02-04T17:10:17Z", "message": "Apply suggestions from code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "493aff656859172cc91d3f808164f134d3ed2538", "author": {"user": {"login": "corradom", "name": "Corrado Musumeci"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/493aff656859172cc91d3f808164f134d3ed2538", "committedDate": "2020-02-05T15:56:54Z", "message": "Merge remote-tracking branch 'origin/master' into improve/expose-merge-info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4de6251dd015cce5614b9182981a586c8287627", "author": {"user": {"login": "corradom", "name": "Corrado Musumeci"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/f4de6251dd015cce5614b9182981a586c8287627", "committedDate": "2020-02-06T14:44:54Z", "message": "minor suggestions from code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e95315018c6dd959ba78a6b67fe981d5367582fb", "author": {"user": {"login": "corradom", "name": "Corrado Musumeci"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/e95315018c6dd959ba78a6b67fe981d5367582fb", "committedDate": "2020-02-07T10:23:29Z", "message": "improve javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MDY0MDg0", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#pullrequestreview-355064084", "createdAt": "2020-02-07T10:29:43Z", "commit": {"oid": "e95315018c6dd959ba78a6b67fe981d5367582fb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1833, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}