{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NTg0Mzg5", "number": 1348, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxNzo1OFrODgsKAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxODo1OVrODgsLaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjA0NDgzOnYy", "diffSide": "RIGHT", "path": "spring/src/main/java/org/axonframework/spring/config/SpringAxonAutoConfigurer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxNzo1OFrOFrB8hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxNzo1OFrOFrB8hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2NDk2Ng==", "bodyText": "I suppose this needs to be beanNamesForType.length != 1?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1348#discussion_r380664966", "createdAt": "2020-02-18T13:17:58Z", "author": {"login": "abuijze"}, "path": "spring/src/main/java/org/axonframework/spring/config/SpringAxonAutoConfigurer.java", "diffHunk": "@@ -327,6 +330,18 @@ private void registerSagaBeanDefinitions(EventProcessingConfigurer configurer) {\n         return hierarchy;\n     }\n \n+    private <A> String prototype(Class<A> type) {\n+        String[] beanNamesForType = beanFactory.getBeanNamesForType(type);\n+        if (beanNamesForType.length == 0) {\n+            throw new AxonConfigurationException(format(\"There are no spring beans for '%s' defined.\", type.getName()));\n+        } else {\n+            if (beanNamesForType.length == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5069f1e23e673a5fd8557a6b76a894ebde6b93b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjA0NzEwOnYy", "diffSide": "RIGHT", "path": "spring/src/main/java/org/axonframework/spring/config/SpringAxonAutoConfigurer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxODozN1rOFrB91Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxODozN1rOFrB91Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2NTMwMQ==", "bodyText": "The name \"prototype\" is misleading, as this returns the name of the bean (which happens to be a prototype bean)", "url": "https://github.com/AxonFramework/AxonFramework/pull/1348#discussion_r380665301", "createdAt": "2020-02-18T13:18:37Z", "author": {"login": "abuijze"}, "path": "spring/src/main/java/org/axonframework/spring/config/SpringAxonAutoConfigurer.java", "diffHunk": "@@ -327,6 +330,18 @@ private void registerSagaBeanDefinitions(EventProcessingConfigurer configurer) {\n         return hierarchy;\n     }\n \n+    private <A> String prototype(Class<A> type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5069f1e23e673a5fd8557a6b76a894ebde6b93b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjA0ODQxOnYy", "diffSide": "RIGHT", "path": "spring/src/main/java/org/axonframework/spring/config/SpringAxonAutoConfigurer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxODo1OVrOFrB-oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxODo1OVrOFrB-oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2NTUwNA==", "bodyText": "Suggest renaming this property to \"beanName\".", "url": "https://github.com/AxonFramework/AxonFramework/pull/1348#discussion_r380665504", "createdAt": "2020-02-18T13:18:59Z", "author": {"login": "abuijze"}, "path": "spring/src/main/java/org/axonframework/spring/config/SpringAxonAutoConfigurer.java", "diffHunk": "@@ -526,4 +543,40 @@ private ModuleConfiguration getDelegate() {\n             return delegate;\n         }\n     }\n+\n+    private static class SpringAggregate<T> {\n+        private final String prototype;\n+        private final Class<T> classType;\n+\n+        private SpringAggregate(String prototype, Class<T> classType) {\n+            this.prototype = prototype;\n+            this.classType = classType;\n+        }\n+\n+        public String getPrototype() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5069f1e23e673a5fd8557a6b76a894ebde6b93b"}, "originalPosition": 97}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3340, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}