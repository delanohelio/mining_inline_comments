{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNzM5OTg0", "number": 1652, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODo1MzoxMFrOFIE4rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODo1MzoxMFrOFIE4rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDEyOTczOnYy", "diffSide": "RIGHT", "path": "metrics-micrometer/src/main/java/org/axonframework/micrometer/EventProcessorLatencyMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODo1MzoxMFrOIJzTKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODo1MzoxMFrOIJzTKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE0ODU4NQ==", "bodyText": "Did you intent this constructor to be protected?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1652#discussion_r547148585", "createdAt": "2020-12-22T08:53:10Z", "author": {"login": "smcvb"}, "path": "metrics-micrometer/src/main/java/org/axonframework/micrometer/EventProcessorLatencyMonitor.java", "diffHunk": "@@ -41,21 +45,32 @@\n     private final String meterNamePrefix;\n     private final MeterRegistry meterRegistry;\n     private final Function<Message<?>, Iterable<Tag>> tagsBuilder;\n-    private final AtomicLong lastReceivedTime = new AtomicLong(-1);\n-    private final AtomicLong lastProcessedTime = new AtomicLong(-1);\n+    private final Clock clock;\n+    private final ConcurrentMap<Tags, AtomicLong> gauges = new ConcurrentHashMap<>();\n \n     private EventProcessorLatencyMonitor(String meterNamePrefix, MeterRegistry meterRegistry) {\n         this(meterNamePrefix,\n              meterRegistry,\n-             message -> Tags.empty());\n+             message -> Tags.empty(),\n+             Clock.SYSTEM);\n     }\n \n-    private EventProcessorLatencyMonitor(String meterNamePrefix,\n-                                         MeterRegistry meterRegistry,\n-                                         Function<Message<?>, Iterable<Tag>> tagsBuilder) {\n+    /**\n+     * Initialize the monitor with given properties.\n+     *\n+     * @param meterNamePrefix The prefix to use on this meter. It will be suffixed with \".latency\".\n+     * @param meterRegistry   The registry to register this meter with\n+     * @param tagsBuilder     The function that provides the Tags to measure latency under for each message\n+     * @param clock           The clock to use to measure time\n+     */\n+    protected EventProcessorLatencyMonitor(String meterNamePrefix,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd292413dcf74fc14cf75a7b0e97ae4233453ba5"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3179, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}