{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NjU3ODUz", "number": 1335, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOToxNjoyNlrODckApQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo0NDo1NVrODc6fcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjc2NzA5OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOToxNjoyN1rOFkqlsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo0NDoyNVrOFlNtAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MDgzMg==", "bodyText": "This gives the upper most position when merging should be resolved, but don't we also need the lowest point of the existing tokens?\nIt's those two numbers which can give us the \"merging progress\", quite similar to exposing the replayPosition and tokenAtResetPosition.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r373990832", "createdAt": "2020-02-03T09:16:27Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "diffHunk": "@@ -76,6 +76,38 @@ protected MergedTrackingToken(TrackingToken lowerSegmentToken, TrackingToken upp\n         this.upperSegmentAdvanced = upperSegmentAdvanced;\n     }\n \n+    /**\n+     * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.\n+     *\n+     * @param trackingToken The token to verify\n+     * @return {@code true} if the token indicates a merge\n+     */\n+    public static boolean isMergeInProgress(TrackingToken trackingToken) {\n+        return WrappedToken.unwrap(trackingToken, MergedTrackingToken.class).isPresent();\n+    }\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    public static OptionalLong mergePosition(TrackingToken trackingToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MTUyNA==", "bodyText": "Added, I am not overly pleased with the name of this method, but haven't landed on something satisfying either...\nI can only think in terms of \"upper most token\" and \"lowest token\", which would suggest that this method would be renamed to upperMergePosition/upperMergingPosition and the other would be lowestMergePosition/lowestMergingPosition.\nWhat do you think?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r373991524", "createdAt": "2020-02-03T09:18:09Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "diffHunk": "@@ -76,6 +76,38 @@ protected MergedTrackingToken(TrackingToken lowerSegmentToken, TrackingToken upp\n         this.upperSegmentAdvanced = upperSegmentAdvanced;\n     }\n \n+    /**\n+     * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.\n+     *\n+     * @param trackingToken The token to verify\n+     * @return {@code true} if the token indicates a merge\n+     */\n+    public static boolean isMergeInProgress(TrackingToken trackingToken) {\n+        return WrappedToken.unwrap(trackingToken, MergedTrackingToken.class).isPresent();\n+    }\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    public static OptionalLong mergePosition(TrackingToken trackingToken) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MDgzMg=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NjE0Nw==", "bodyText": "I believe this issue has been covered in the other discussion around sharing a regular getPosition method to be used for both replaying and merging, with a dedicated finish-line-position method. Hence I'll resolve this conversation.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374566147", "createdAt": "2020-02-04T09:44:25Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "diffHunk": "@@ -76,6 +76,38 @@ protected MergedTrackingToken(TrackingToken lowerSegmentToken, TrackingToken upp\n         this.upperSegmentAdvanced = upperSegmentAdvanced;\n     }\n \n+    /**\n+     * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.\n+     *\n+     * @param trackingToken The token to verify\n+     * @return {@code true} if the token indicates a merge\n+     */\n+    public static boolean isMergeInProgress(TrackingToken trackingToken) {\n+        return WrappedToken.unwrap(trackingToken, MergedTrackingToken.class).isPresent();\n+    }\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    public static OptionalLong mergePosition(TrackingToken trackingToken) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MDgzMg=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjc3MzYzOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOToxODo1MFrOFkqpgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowNDo1OFrOFk2uzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MTgxMQ==", "bodyText": "I am not overly pleased with the name of this method, but haven't landed on something satisfying either...\nI can only think in terms of \"upper most token\" and \"lowest token\", which would suggest that this method would be renamed to upperMergePosition/upperMergingPosition and the other would be lowestMergePosition/lowestMergingPosition.\nWhat do you think?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r373991811", "createdAt": "2020-02-03T09:18:50Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    OptionalLong mergeCompletedPosition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA4ODU2Mg==", "bodyText": "I'm not happy with the name too, but didn't found nothing that fits better.\nFrom a user perspective upperMergePosition doen't provide the same information as merceCompletedPosition, in my opinion.\nLet's think about it for a while.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374088562", "createdAt": "2020-02-03T13:01:33Z", "author": {"login": "corradom"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    OptionalLong mergeCompletedPosition();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MTgxMQ=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEyNDA0Mw==", "bodyText": "We discussed with @abuijze on this: from this comment https://github.com/AxonFramework/AxonFramework/pull/1330/files#r372591669 on another PR I think we can then have a method called currentPosition that exposes the estimation current tracking token position if available.\nIn addition to this we will have specific replay/merge method suck has\nmergeCompletedPosition() : estimated relative token position this Segment will have after a merge operation is complete\nisMerging() : Indicates whether this Segment is still merging events\nisReplaying() : Indicates whether this Segment is still replaying previously processed Events\ngetResetPosition() :  the relative position at which a reset was triggered for this Segment\nSo currentPosition will promote and expose TrackinToken.position() method and return\n\nthe estimated relative replay position this Segment represents (in case of Replay)\nthe estimated relative merge position this Segment represents (in case of merge)\nOptionalLong.empty() for all the other case\n\nwhat do you think?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374124043", "createdAt": "2020-02-03T14:14:14Z", "author": {"login": "corradom"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    OptionalLong mergeCompletedPosition();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MTgxMQ=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4OTc3NQ==", "bodyText": "That sounds like a great idea! Think my comment has been overruled by this \ud83d\udc4d", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374189775", "createdAt": "2020-02-03T16:04:58Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    OptionalLong mergeCompletedPosition();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MTgxMQ=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjMwNTk4OnYy", "diffSide": "RIGHT", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1ODoxMVrOFlMUXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1ODoxMVrOFlMUXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzQ1NA==", "bodyText": "Nit: Maybe use a named variable for 0 called segmentId. I know what happens here, but on face value it's a magic number I think.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374543454", "createdAt": "2020-02-04T08:58:11Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -966,8 +966,14 @@ void testMergeSegments() throws InterruptedException {\n         }\n \n         assertTrue(testSubject.mergeSegment(0).join(), \"Expected merge to succeed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjMxMDE4OnYy", "diffSide": "RIGHT", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1OToyOFrOFlMW9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTowMTo1NFrOFlwH9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0NDExOQ==", "bodyText": "I have the same segmentId variable suggestion here :-)", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374544119", "createdAt": "2020-02-04T08:59:28Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -983,10 +989,17 @@ void testMergeSegments_BothClaimedByProcessor() throws Exception {\n         testSubject.start();\n         waitForActiveThreads(2);\n \n+        assertFalse(testSubject.processingStatus().get(0).isMerging());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEzMDEwMg==", "bodyText": "You can also use the ``segmentId` variable on this line! ^_^", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r375130102", "createdAt": "2020-02-05T09:01:54Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -983,10 +989,17 @@ void testMergeSegments_BothClaimedByProcessor() throws Exception {\n         testSubject.start();\n         waitForActiveThreads(2);\n \n+        assertFalse(testSubject.processingStatus().get(0).isMerging());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0NDExOQ=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjQwOTM3OnYy", "diffSide": "RIGHT", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTozMTo1M1rOFlNUvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNzowNzo0MlrOFl_4mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1OTkzMg==", "bodyText": "Why not check that after this mergeSegment call that the status isMerging returns true?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374559932", "createdAt": "2020-02-04T09:31:53Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -1065,6 +1083,8 @@ void testDoubleSplitAndMerge() throws Exception {\n \n         waitForProcessingStatus(0, EventTrackerStatus::isCaughtUp);\n \n+        assertFalse(testSubject.processingStatus().get(0).isMerging());\n+\n         assertTrue(testSubject.mergeSegment(0).join(), \"Expected merge to succeed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM4ODMxMw==", "bodyText": "due to a race condition is really hard to test this into this particular test case. Most of the time the test will fail.\nWe will think about a better strategy to avoid this race condition that occurs from time to time also in CI env.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r375388313", "createdAt": "2020-02-05T17:07:42Z", "author": {"login": "corradom"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -1065,6 +1083,8 @@ void testDoubleSplitAndMerge() throws Exception {\n \n         waitForProcessingStatus(0, EventTrackerStatus::isCaughtUp);\n \n+        assertFalse(testSubject.processingStatus().get(0).isMerging());\n+\n         assertTrue(testSubject.mergeSegment(0).join(), \"Expected merge to succeed\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1OTkzMg=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjQxMTMyOnYy", "diffSide": "RIGHT", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTozMjozMVrOFlNV8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTozMjozMVrOFlNV8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MDI0MA==", "bodyText": "Super nit: unnecessary empty line.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374560240", "createdAt": "2020-02-04T09:32:31Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -1277,6 +1299,8 @@ void testMergeWithSingleSegmentRejected() throws InterruptedException {\n         CompletableFuture<Boolean> actual = testSubject.mergeSegment(0);\n \n         assertFalse(actual.join(), \"Expected merge to be rejected\");\n+        waitForProcessingNotInStatus(0, EventTrackerStatus::isMerging);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjQxOTgxOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTozNToyNlrOFlNbdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTozNToyNlrOFlNbdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MTY1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Indicates whether this Segment is still merging events.\n          \n          \n            \n                 * Indicates whether this Segment is still merging two (or more) Segments. The merging process will be done once all Segments have reached the same position.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374561654", "createdAt": "2020-02-04T09:35:26Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjQyMDgzOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTozNTo0MlrOFlNb_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTozNTo0MlrOFlNb_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MTc5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return {@code true} if this segment is merging events, otherwise {@code false}\n          \n          \n            \n                 * @return {@code true} if this segment is merging Segments, otherwise {@code false}", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374561790", "createdAt": "2020-02-04T09:35:42Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjQzOTEyOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo0MToyOFrOFlNnFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNDo0NzoxN1rOFmdpnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NDYzMA==", "bodyText": "I have a naming suggestion for this method. What about we call it the mergingFinishPosition or ``mergingGoalPosition`?\nI was thinking about what this field represent, and that's essentially the \"finish line when merging will be resolved\".", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374564630", "createdAt": "2020-02-04T09:41:28Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    OptionalLong mergeCompletedPosition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg3NTk5OQ==", "bodyText": "After a quick round of consultations, the team decided to stick with my proposal mergeCompletedPosition()", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r375875999", "createdAt": "2020-02-06T14:47:17Z", "author": {"login": "corradom"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return return the estimated relative position this Segment will reach after a merge operation is complete.\n+     */\n+    OptionalLong mergeCompletedPosition();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NDYzMA=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjQ0NTU4OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo0MzoyM1rOFlNq7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTowNToxMFrOFm2YSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NTYxNQ==", "bodyText": "Suggestion: might be nice to mention on this piece of javadoc that this method will return a non-empty result as long as isMerging returns true.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374565615", "createdAt": "2020-02-04T09:43:23Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3NzUxNw==", "bodyText": "Think this line could still be added? \ud83d\udc7c", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r376277517", "createdAt": "2020-02-07T08:56:28Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NTYxNQ=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI4MTE2Mg==", "bodyText": "Oh sorry I forgot to reply this one \ud83e\udd26\u200d\u2642\ufe0f\nI feel that is not completely true : a segment can return true for isMerging(), but will return OptionalLong.empty() in case no estimation can be given.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r376281162", "createdAt": "2020-02-07T09:05:10Z", "author": {"login": "corradom"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -49,6 +51,21 @@\n      */\n     boolean isReplaying();\n \n+    /**\n+     * Indicates whether this Segment is still merging events.\n+     *\n+     * @return {@code true} if this segment is merging events, otherwise {@code false}\n+     */\n+    boolean isMerging();\n+\n+    /**\n+     * Return the estimated relative token position this Segment will have after a merge operation is complete.\n+     * In case no estimation can be given or no merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NTYxNQ=="}, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjQ1MDQyOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo0NDo1NlrOFlNuGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo0NDo1NlrOFlNuGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NjQyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.\n          \n          \n            \n                 * Indicates whether the given {@code trackingToken} represents a token that is part of a merge.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1335#discussion_r374566424", "createdAt": "2020-02-04T09:44:56Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/MergedTrackingToken.java", "diffHunk": "@@ -76,6 +76,38 @@ protected MergedTrackingToken(TrackingToken lowerSegmentToken, TrackingToken upp\n         this.upperSegmentAdvanced = upperSegmentAdvanced;\n     }\n \n+    /**\n+     * Indicates whether the given {@code trackingToken} represents a position that is part of a merge.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092083292cb15843ec2e5fa29ce892bb14e2c32"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3292, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}