{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NTA3ODcz", "number": 1397, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTozODo1M1rODvDBAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTozODo1M1rODvDBAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjU5MDc0OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/util/UpstreamAwareStreamObserver.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTozODo1M1rOGBPm7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTo0MjowOFrOGBPvmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk1NzQ4Ng==", "bodyText": "There is a StreamObserverUtils that contains this logic already. Can't we use that one instead?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1397#discussion_r403957486", "createdAt": "2020-04-06T09:38:53Z", "author": {"login": "abuijze"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/util/UpstreamAwareStreamObserver.java", "diffHunk": "@@ -27,4 +27,18 @@ public void beforeStart(ClientCallStreamObserver<Object> requestStream) {\n     public ClientCallStreamObserver<?> getRequestStream() {\n         return requestStream;\n     }\n+\n+    /**\n+     * Completes the request steam related to this stream observer. Ignores exceptions that may occur (for instance if\n+     * the request stream is already half-closed).\n+     */\n+    protected void completeRequestStream() {\n+         if( requestStream != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8727e85365fe92253be5e1c57fa2a043af94244e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk1ODE3OQ==", "bodyText": "StreamObserverUtils is class in axonserver se", "url": "https://github.com/AxonFramework/AxonFramework/pull/1397#discussion_r403958179", "createdAt": "2020-04-06T09:39:56Z", "author": {"login": "MGathier"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/util/UpstreamAwareStreamObserver.java", "diffHunk": "@@ -27,4 +27,18 @@ public void beforeStart(ClientCallStreamObserver<Object> requestStream) {\n     public ClientCallStreamObserver<?> getRequestStream() {\n         return requestStream;\n     }\n+\n+    /**\n+     * Completes the request steam related to this stream observer. Ignores exceptions that may occur (for instance if\n+     * the request stream is already half-closed).\n+     */\n+    protected void completeRequestStream() {\n+         if( requestStream != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk1NzQ4Ng=="}, "originalCommit": {"oid": "8727e85365fe92253be5e1c57fa2a043af94244e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk1OTcwNA==", "bodyText": "\ud83e\udd26\u200d\u2642", "url": "https://github.com/AxonFramework/AxonFramework/pull/1397#discussion_r403959704", "createdAt": "2020-04-06T09:42:08Z", "author": {"login": "abuijze"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/util/UpstreamAwareStreamObserver.java", "diffHunk": "@@ -27,4 +27,18 @@ public void beforeStart(ClientCallStreamObserver<Object> requestStream) {\n     public ClientCallStreamObserver<?> getRequestStream() {\n         return requestStream;\n     }\n+\n+    /**\n+     * Completes the request steam related to this stream observer. Ignores exceptions that may occur (for instance if\n+     * the request stream is already half-closed).\n+     */\n+    protected void completeRequestStream() {\n+         if( requestStream != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk1NzQ4Ng=="}, "originalCommit": {"oid": "8727e85365fe92253be5e1c57fa2a043af94244e"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3184, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}