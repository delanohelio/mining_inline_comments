{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MDY2MTA0", "number": 1612, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjozMzoyNlrOE7I4TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjozMzoyNlrOE7I4TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDQ2OTI1OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjozMzoyNlrOH2nMYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwOTozMTozNVrOH3H44A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAyNzI5OQ==", "bodyText": "The third if calls   eventChannel.openAggregateStream(aggregateIdentifier)  wich also calls\n.openAggregateStream(aggregateIdentifier,true)  , so what's the use of this branche ?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1612#discussion_r527027299", "createdAt": "2020-11-19T16:33:26Z", "author": {"login": "kad-hesseg"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java", "diffHunk": "@@ -475,7 +475,7 @@ protected void storeSnapshot(DomainEventMessage<?> snapshot, Serializer serializ\n             EventChannel eventChannel = connectionManager.getConnection(context).eventChannel();\n \n             AggregateEventStream aggregateStream;\n-            if (firstSequenceNumber > 0) {\n+            if (firstSequenceNumber >= 0) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, firstSequenceNumber);\n             } else if (firstSequenceNumber == ALLOW_SNAPSHOTS_MAGIC_VALUE && !snapshotFilterSet) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "306fa819cb42f391ef1d755264147f822f87e986"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAzMDAyMQ==", "bodyText": "just for overriding ?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1612#discussion_r527030021", "createdAt": "2020-11-19T16:37:04Z", "author": {"login": "kad-hesseg"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java", "diffHunk": "@@ -475,7 +475,7 @@ protected void storeSnapshot(DomainEventMessage<?> snapshot, Serializer serializ\n             EventChannel eventChannel = connectionManager.getConnection(context).eventChannel();\n \n             AggregateEventStream aggregateStream;\n-            if (firstSequenceNumber > 0) {\n+            if (firstSequenceNumber >= 0) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, firstSequenceNumber);\n             } else if (firstSequenceNumber == ALLOW_SNAPSHOTS_MAGIC_VALUE && !snapshotFilterSet) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAyNzI5OQ=="}, "originalCommit": {"oid": "306fa819cb42f391ef1d755264147f822f87e986"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU1MDI0MA==", "bodyText": "I was actually going to explain every branch, and then I indeed followed up your point, noting the javadoc of the EventChannel as well that basically line 481 and 483 do exactly the same. Thanks for noting, I am pretty confident the else should invoke openAggregateStream(aggregateIdentifier, false) instead of the default which uses true. Thanks for signaling this!", "url": "https://github.com/AxonFramework/AxonFramework/pull/1612#discussion_r527550240", "createdAt": "2020-11-20T09:10:00Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java", "diffHunk": "@@ -475,7 +475,7 @@ protected void storeSnapshot(DomainEventMessage<?> snapshot, Serializer serializ\n             EventChannel eventChannel = connectionManager.getConnection(context).eventChannel();\n \n             AggregateEventStream aggregateStream;\n-            if (firstSequenceNumber > 0) {\n+            if (firstSequenceNumber >= 0) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, firstSequenceNumber);\n             } else if (firstSequenceNumber == ALLOW_SNAPSHOTS_MAGIC_VALUE && !snapshotFilterSet) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAyNzI5OQ=="}, "originalCommit": {"oid": "306fa819cb42f391ef1d755264147f822f87e986"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU2Mjk3Ng==", "bodyText": "ah, ok.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1612#discussion_r527562976", "createdAt": "2020-11-20T09:31:35Z", "author": {"login": "kad-hesseg"}, "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java", "diffHunk": "@@ -475,7 +475,7 @@ protected void storeSnapshot(DomainEventMessage<?> snapshot, Serializer serializ\n             EventChannel eventChannel = connectionManager.getConnection(context).eventChannel();\n \n             AggregateEventStream aggregateStream;\n-            if (firstSequenceNumber > 0) {\n+            if (firstSequenceNumber >= 0) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, firstSequenceNumber);\n             } else if (firstSequenceNumber == ALLOW_SNAPSHOTS_MAGIC_VALUE && !snapshotFilterSet) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAyNzI5OQ=="}, "originalCommit": {"oid": "306fa819cb42f391ef1d755264147f822f87e986"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3153, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}