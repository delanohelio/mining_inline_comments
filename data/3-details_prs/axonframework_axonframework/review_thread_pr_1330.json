{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODc4Nzg4", "number": 1330, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0ODoyMVrODa1V0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo1MDozMlrODdQHwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDYzNTA0OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0ODoyMVrOFh-e3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0ODoyMVrOFh-e3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3MTAzOQ==", "bodyText": "Nit: To be more in line with the getReplayPosition method name, I'd call this method the getResetPosition.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371171039", "createdAt": "2020-01-27T10:48:21Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "diffHunk": "@@ -70,4 +73,15 @@ public boolean isErrorState() {\n     public Throwable getError() {\n         return exception;\n     }\n+\n+    @Override\n+    public OptionalLong getReplayPosition() {\n+        return (replaying) ? trackingToken.position() : OptionalLong.empty();\n+    }\n+\n+    @Override\n+    public OptionalLong getResetTokenPosition() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDYzODI1OnYy", "diffSide": "RIGHT", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0OToyNFrOFh-grQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0OToyNFrOFh-grQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3MTUwMQ==", "bodyText": "Nit: I think using 1 second i.o. 5 for the getResetTokenPosition validation is sufficient.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371171501", "createdAt": "2020-01-27T10:49:24Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -700,8 +700,12 @@ void testResetCausesEventsToBeReplayed() throws Exception {\n         assertEquals(handled.subList(0, 4), handled.subList(4, 8));\n         assertEquals(handled.subList(4, 8), handledInRedelivery);\n         assertTrue(testSubject.processingStatus().get(0).isReplaying());\n+        assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent());\n+        assertTrue(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent());\n         eventBus.publish(createEvents(1));\n         assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).isReplaying()));\n+        assertWithin(1, TimeUnit.SECONDS, () -> assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent()));\n+        assertWithin(5, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDYzODc3OnYy", "diffSide": "RIGHT", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0OTozM1rOFh-g9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0OTozM1rOFh-g9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3MTU3Mg==", "bodyText": "Nit: I think using 1 second i.o. 5 for the getResetTokenPosition validation is sufficient.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371171572", "createdAt": "2020-01-27T10:49:33Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -732,8 +736,12 @@ void testResetToPositionCausesCertainEventsToBeReplayed() throws Exception {\n         assertEquals(handled.subList(2, 4), handled.subList(4, 6));\n         assertEquals(handled.subList(4, 6), handledInRedelivery);\n         assertTrue(testSubject.processingStatus().get(0).isReplaying());\n+        assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent());\n+        assertTrue(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent());\n         eventBus.publish(createEvents(1));\n         assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).isReplaying()));\n+        assertWithin(1, TimeUnit.SECONDS, () -> assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent()));\n+        assertWithin(5, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDY4NTY1OnYy", "diffSide": "RIGHT", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowNjozM1rOFh-9Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowNjozM1rOFh-9Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3ODc4Mg==", "bodyText": "Shouldn't both getReplayPosition and getResetTokenPosition return false it this point, as isReplaying is false too?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371178782", "createdAt": "2020-01-27T11:06:33Z", "author": {"login": "smcvb"}, "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -806,6 +818,8 @@ void testResetBeforeStartingPerformsANormalRun() throws Exception {\n         assertWithin(1, TimeUnit.SECONDS, () -> assertEquals(4, handled.size()));\n         assertEquals(0, handledInRedelivery.size());\n         assertFalse(testSubject.processingStatus().get(0).isReplaying());\n+        assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDY4ODA1OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowNzoyNlrOFh--kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowNzoyNlrOFh--kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTE1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n          \n          \n            \n                 * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179153", "createdAt": "2020-01-27T11:07:26Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDY4OTgwOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowODowN1rOFh-_nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowODowN1rOFh-_nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTQyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n          \n          \n            \n                 * Return the estimated relative replay position this Segment represents.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179420", "createdAt": "2020-01-27T11:08:07Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDY5MTA5OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowODozMlrOFh_AYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowODozMlrOFh_AYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTYxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n          \n          \n            \n                 * Return the relative position at which a reset was triggered for this Segment.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179619", "createdAt": "2020-01-27T11:08:32Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDY5MjI5OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowODo1NFrOFh_BFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowODo1NFrOFh_BFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTc5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n          \n          \n            \n                 * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179797", "createdAt": "2020-01-27T11:08:54Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDY5MjkxOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowOToxMVrOFh_Bew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowOToxMVrOFh_Bew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTg5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the relative position at which a reset was triggered whether this Segment is still replaying\n          \n          \n            \n                 * @return the relative position at which a reset was triggered for this Segment", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179899", "createdAt": "2020-01-27T11:09:11Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered whether this Segment is still replaying", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDY5ODcwOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxMToyM1rOFh_E_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxMToyM1rOFh_E_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MDc5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n          \n          \n            \n                 * @return return the estimated relative replay position this Segment represents", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371180798", "createdAt": "2020-01-27T11:11:23Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDcwMDc2OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxMjowMlrOFh_GGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxMjowMlrOFh_GGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MTA4Mw==", "bodyText": "Nit: To be more in line with the getReplayPosition method name, I'd call this method the getResetPosition.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371181083", "createdAt": "2020-01-27T11:12:02Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     */\n+    OptionalLong getResetTokenPosition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDcwMzYzOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxMjo1NVrOFh_HrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxMjo1NVrOFh_HrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MTQ4NQ==", "bodyText": "I'd adjust this javadoc somewhat similar to the suggested adjustments in the EventTrackerStatus interface.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371181485", "createdAt": "2020-01-27T11:12:55Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java", "diffHunk": "@@ -99,6 +99,18 @@ public static boolean isReplay(TrackingToken trackingToken) {\n \n     }\n \n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDcwNjkwOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxMzo0N1rOFh_Jdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxMzo0N1rOFh_Jdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MTk0Mg==", "bodyText": "I think this method should check whether this.trackingToken is an instance of ReplayToken. Otherwise, I wouldn't expect a position.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371181942", "createdAt": "2020-01-27T11:13:47Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "diffHunk": "@@ -864,6 +865,16 @@ public Throwable getError() {\n             return errorState;\n         }\n \n+        @Override\n+        public OptionalLong getReplayPosition() {\n+            return trackingToken.position();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDcyODY0OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToyMDo1MlrOFh_V5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1MjozNlrOFlMKLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NTEyNQ==", "bodyText": "Can be useful to have here a method that returns the estimated number of events remaining to process.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371185125", "createdAt": "2020-01-27T11:20:52Z", "author": {"login": "saratry"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     */\n+    OptionalLong getResetTokenPosition();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5NTgwMg==", "bodyText": "Good point.\nThis will be part of a future issue.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371795802", "createdAt": "2020-01-28T13:18:55Z", "author": {"login": "corradom"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     */\n+    OptionalLong getResetTokenPosition();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NTEyNQ=="}, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5MTY2OQ==", "bodyText": "I would prefer to expose 2 (or ultimately 3) positions:\n\ncurrent position\nreset position (if still replaying)\n(and later) the position of the head of the stream\n\nComponents that then monitor the state of the processor can then calculate the estimated time for catching up with the reset position and/or head. From the framework, I prefer to emit the simple facts, and let observing components do the \"magic\" math ;-)", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r372591669", "createdAt": "2020-01-29T19:41:12Z", "author": {"login": "abuijze"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     */\n+    OptionalLong getResetTokenPosition();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NTEyNQ=="}, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MDg0NA==", "bodyText": "Sweet plan. That'll leave the getResetPosition as is, but will replace the getReplayPosition() method for a regular getPosition.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374540844", "createdAt": "2020-02-04T08:52:36Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     */\n+    OptionalLong getResetTokenPosition();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NTEyNQ=="}, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDc0NzQyOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToyNjoyMVrOFh_gEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo0MjoyMlrOFjVOXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NzczMA==", "bodyText": "is it really useful? getTrackingToken().getPosition() and is Replaying() together can give the same information I think, is it correct?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371187730", "createdAt": "2020-01-27T11:26:21Z", "author": {"login": "saratry"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5NTU4NQ==", "bodyText": "The idea behind the ticket is to promote and get a much more clear way to access already existing information.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371795585", "createdAt": "2020-01-28T13:18:32Z", "author": {"login": "corradom"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NzczMA=="}, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5MjIyMQ==", "bodyText": "I agree, it seems that currentPosition and reset(Token)Position should be enough", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r372592221", "createdAt": "2020-01-29T19:42:22Z", "author": {"login": "abuijze"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NzczMA=="}, "originalCommit": {"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjI4NjI3OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1MToyMFrOFlMICA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo1MToyNVrOFlv0Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MDI5Ng==", "bodyText": "Based on the discussions we've had, I think this should be replaced for a getPosition().", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374540296", "createdAt": "2020-02-04T08:51:20Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "diffHunk": "@@ -70,4 +73,15 @@ public boolean isErrorState() {\n     public Throwable getError() {\n         return exception;\n     }\n+\n+    @Override\n+    public OptionalLong getReplayPosition() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb80a066b382123b2fb6fe62a49abded6459d67"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1OTAzMg==", "bodyText": "the exposed method name is getCurrentPosition()", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374759032", "createdAt": "2020-02-04T15:56:33Z", "author": {"login": "corradom"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "diffHunk": "@@ -70,4 +73,15 @@ public boolean isErrorState() {\n     public Throwable getError() {\n         return exception;\n     }\n+\n+    @Override\n+    public OptionalLong getReplayPosition() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MDI5Ng=="}, "originalCommit": {"oid": "4eb80a066b382123b2fb6fe62a49abded6459d67"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyNTAzNA==", "bodyText": "Aah, that makes sense naming wise! :-)", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r375125034", "createdAt": "2020-02-05T08:51:25Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "diffHunk": "@@ -70,4 +73,15 @@ public boolean isErrorState() {\n     public Throwable getError() {\n         return exception;\n     }\n+\n+    @Override\n+    public OptionalLong getReplayPosition() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MDI5Ng=="}, "originalCommit": {"oid": "4eb80a066b382123b2fb6fe62a49abded6459d67"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjI5MjcwOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1MzozN1rOFlMMBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1MzozN1rOFlMMBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MTMxOA==", "bodyText": "I think this new method justifies a test in the ReplayTokenTest class.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374541318", "createdAt": "2020-02-04T08:53:37Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java", "diffHunk": "@@ -99,6 +99,18 @@ public static boolean isReplay(TrackingToken trackingToken) {\n \n     }\n \n+    /**\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered for this Segment\n+     */\n+    public static OptionalLong getTokenAtReset(TrackingToken trackingToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb80a066b382123b2fb6fe62a49abded6459d67"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjI5MzMzOnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1Mzo1M1rOFlMMdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNTo1NzoyNFrOFlZgqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MTQzMA==", "bodyText": "Based on the discussions we've had, I think this should be replaced for a getPosition().", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374541430", "createdAt": "2020-02-04T08:53:53Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "diffHunk": "@@ -864,6 +865,18 @@ public Throwable getError() {\n             return errorState;\n         }\n \n+        @Override\n+        public OptionalLong getReplayPosition() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb80a066b382123b2fb6fe62a49abded6459d67"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1OTU5NA==", "bodyText": "As said up, the exposed method name is getCurrentPosition()", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374759594", "createdAt": "2020-02-04T15:57:24Z", "author": {"login": "corradom"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "diffHunk": "@@ -864,6 +865,18 @@ public Throwable getError() {\n             return errorState;\n         }\n \n+        @Override\n+        public OptionalLong getReplayPosition() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MTQzMA=="}, "originalCommit": {"oid": "4eb80a066b382123b2fb6fe62a49abded6459d67"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjQ0NDY3OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo0MzowN1rOFlNqWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo0MzowN1rOFlNqWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NTQ2Ng==", "bodyText": "Suggestion: might be nice to mention on this piece of javadoc that this method will return a non-empty result as long as isReplaying returns true.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374565466", "createdAt": "2020-02-04T09:43:07Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb80a066b382123b2fb6fe62a49abded6459d67"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTk5MDQ1OnYy", "diffSide": "RIGHT", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo0OTowM1rOFlvwEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo0OTowM1rOFlvwEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyMzk4Ng==", "bodyText": "Nit: indentation is slight off, as I'd expect spaces around !=", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r375123986", "createdAt": "2020-02-05T08:49:03Z", "author": {"login": "smcvb"}, "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "diffHunk": "@@ -70,4 +73,15 @@ public boolean isErrorState() {\n     public Throwable getError() {\n         return exception;\n     }\n+\n+    @Override\n+    public OptionalLong getCurrentPosition() {\n+        return (trackingToken!=null) ? trackingToken.position() : OptionalLong.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41e50d8140ec5e0111575a758e31cc8ba9fe2b5d"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTk5NDI0OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo1MDozMlrOFlvyXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwODo1MDozMlrOFlvyXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyNDU3Mg==", "bodyText": "Nit: You could use {@inheritDoc} to copy over the documentation from the interface so that you do not have to duplicate it.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r375124572", "createdAt": "2020-02-05T08:50:32Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "diffHunk": "@@ -864,6 +865,28 @@ public Throwable getError() {\n             return errorState;\n         }\n \n+        /**\n+         * Return the estimated relative replay position this Segment represents.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41e50d8140ec5e0111575a758e31cc8ba9fe2b5d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3285, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}