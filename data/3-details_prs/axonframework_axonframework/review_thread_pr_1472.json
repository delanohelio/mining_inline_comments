{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NTg0ODkz", "number": 1472, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDozNToyNFrOER2O3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDozNToyNFrOER2O3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTQ5Nzg4OnYy", "diffSide": "RIGHT", "path": "messaging/src/main/java/org/axonframework/eventhandling/tokenstore/jpa/JpaTokenStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDozNToyNFrOG2x0ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjozMTo1NlrOG3gZeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA5MjUyMg==", "bodyText": "Is it useful to log.debug for example when it happens?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1472#discussion_r460092522", "createdAt": "2020-07-24T14:35:24Z", "author": {"login": "lfgcampos"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/tokenstore/jpa/JpaTokenStore.java", "diffHunk": "@@ -118,8 +118,31 @@ public void initializeTokenSegments(String processorName, int segmentCount, Trac\n     @Override\n     public void storeToken(TrackingToken token, String processorName, int segment) {\n         EntityManager entityManager = entityManagerProvider.getEntityManager();\n-        TokenEntry tokenEntry = loadToken(processorName, segment, entityManager);\n-        tokenEntry.updateToken(token, serializer);\n+        TokenEntry tokenToStore = new TokenEntry(processorName, segment, token, serializer);\n+        byte[] tokenDataToStore =\n+                getOrDefault(tokenToStore.getSerializedToken(), SerializedObject::getData, new byte[0]);\n+        String tokenTypeToStore = getOrDefault(tokenToStore.getTokenType(), SerializedType::getName, null);\n+\n+        int updatedTokens = entityManager.createQuery(\"UPDATE TokenEntry te SET \"\n+                                                              + \"te.token = :token, \"\n+                                                              + \"te.tokenType = :tokenType, \"\n+                                                              + \"te.timestamp = :timestamp \"\n+                                                              + \"WHERE te.owner = :owner \"\n+                                                              + \"AND te.processorName = :processorName \"\n+                                                              + \"AND te.segment = :segment\")\n+                                         .setParameter(\"token\", tokenDataToStore)\n+                                         .setParameter(\"tokenType\", tokenTypeToStore)\n+                                         .setParameter(\"timestamp\", tokenToStore.timestampAsString())\n+                                         .setParameter(\"owner\", nodeId)\n+                                         .setParameter(\"processorName\", processorName)\n+                                         .setParameter(\"segment\", segment)\n+                                         .executeUpdate();\n+\n+        if (updatedTokens == 0) {\n+            // Update couldn't succeed, trying to first load the token and than update it instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7924fd6f77ab5ec7951f108142ea352489703838"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1NTY3Mw==", "bodyText": "Sure thing, added!", "url": "https://github.com/AxonFramework/AxonFramework/pull/1472#discussion_r460855673", "createdAt": "2020-07-27T12:31:56Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/eventhandling/tokenstore/jpa/JpaTokenStore.java", "diffHunk": "@@ -118,8 +118,31 @@ public void initializeTokenSegments(String processorName, int segmentCount, Trac\n     @Override\n     public void storeToken(TrackingToken token, String processorName, int segment) {\n         EntityManager entityManager = entityManagerProvider.getEntityManager();\n-        TokenEntry tokenEntry = loadToken(processorName, segment, entityManager);\n-        tokenEntry.updateToken(token, serializer);\n+        TokenEntry tokenToStore = new TokenEntry(processorName, segment, token, serializer);\n+        byte[] tokenDataToStore =\n+                getOrDefault(tokenToStore.getSerializedToken(), SerializedObject::getData, new byte[0]);\n+        String tokenTypeToStore = getOrDefault(tokenToStore.getTokenType(), SerializedType::getName, null);\n+\n+        int updatedTokens = entityManager.createQuery(\"UPDATE TokenEntry te SET \"\n+                                                              + \"te.token = :token, \"\n+                                                              + \"te.tokenType = :tokenType, \"\n+                                                              + \"te.timestamp = :timestamp \"\n+                                                              + \"WHERE te.owner = :owner \"\n+                                                              + \"AND te.processorName = :processorName \"\n+                                                              + \"AND te.segment = :segment\")\n+                                         .setParameter(\"token\", tokenDataToStore)\n+                                         .setParameter(\"tokenType\", tokenTypeToStore)\n+                                         .setParameter(\"timestamp\", tokenToStore.timestampAsString())\n+                                         .setParameter(\"owner\", nodeId)\n+                                         .setParameter(\"processorName\", processorName)\n+                                         .setParameter(\"segment\", segment)\n+                                         .executeUpdate();\n+\n+        if (updatedTokens == 0) {\n+            // Update couldn't succeed, trying to first load the token and than update it instead.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA5MjUyMg=="}, "originalCommit": {"oid": "7924fd6f77ab5ec7951f108142ea352489703838"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3219, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}