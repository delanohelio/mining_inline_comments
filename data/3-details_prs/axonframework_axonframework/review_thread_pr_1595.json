{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3ODg5NzE2", "number": 1595, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NDoxNVrOE3NnJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NDoxNVrOE3NnJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzMwMTUxOnYy", "diffSide": "RIGHT", "path": "messaging/src/test/java/org/axonframework/messaging/annotation/AnnotatedHandlerInspectorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NDoxNVrOHwbNFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzoxMDo1MlrOHwb1Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUzOTQxMg==", "bodyText": "Nit: Would be good also verify the count of inspected types, or reverse the assertion to verify that all of the expectedInspectedTypes are contained in getAllInspectedTypes().\nThe current verification allows for getAllInspectedTypes() to return only a subset of expectedInspectedTypes", "url": "https://github.com/AxonFramework/AxonFramework/pull/1595#discussion_r520539412", "createdAt": "2020-11-10T12:54:15Z", "author": {"login": "sandjelkovic"}, "path": "messaging/src/test/java/org/axonframework/messaging/annotation/AnnotatedHandlerInspectorTest.java", "diffHunk": "@@ -148,6 +150,14 @@ void testInterceptors() throws Exception {\n         assertThrows(MockException.class, () -> chain.handle(testEventTwo, testTarget, resultHandler));\n     }\n \n+    @Test\n+    void testGetAllInspectedTypes() {\n+        Set<Class<?>> expectedInspectedTypes = Sets.newSet(pA.class, A.class, B.class, C.class, D.class);\n+\n+        inspector.getAllInspectedTypes()\n+                 .forEach(inspectedType -> assertTrue(expectedInspectedTypes.contains(inspectedType)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0914e33b277a66b5d3b77b9ec566c80612da1de2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU0OTcxNA==", "bodyText": "Couldn't agree more with you here. We'll make it so!", "url": "https://github.com/AxonFramework/AxonFramework/pull/1595#discussion_r520549714", "createdAt": "2020-11-10T13:10:52Z", "author": {"login": "smcvb"}, "path": "messaging/src/test/java/org/axonframework/messaging/annotation/AnnotatedHandlerInspectorTest.java", "diffHunk": "@@ -148,6 +150,14 @@ void testInterceptors() throws Exception {\n         assertThrows(MockException.class, () -> chain.handle(testEventTwo, testTarget, resultHandler));\n     }\n \n+    @Test\n+    void testGetAllInspectedTypes() {\n+        Set<Class<?>> expectedInspectedTypes = Sets.newSet(pA.class, A.class, B.class, C.class, D.class);\n+\n+        inspector.getAllInspectedTypes()\n+                 .forEach(inspectedType -> assertTrue(expectedInspectedTypes.contains(inspectedType)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUzOTQxMg=="}, "originalCommit": {"oid": "0914e33b277a66b5d3b77b9ec566c80612da1de2"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3145, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}