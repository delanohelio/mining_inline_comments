{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxODE5NTc1", "number": 1644, "title": "#1613 Added ability to set ClassLoader on XStreamSerializer builder", "bodyText": "This PR resolves #1613", "createdAt": "2020-12-17T12:05:38Z", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644", "merged": true, "mergeCommit": {"oid": "3e4a5282d84a726eba133f200f11012aa2fdad04"}, "closed": true, "closedAt": "2020-12-23T08:29:14Z", "author": {"login": "aupodogov"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnB6IggH2gAyNTQxODE5NTc1OjM1YjgwY2JhMzI4Nzc4ZmFkY2NjNTBmMTY2NjEwOTQ5YWJhODE5MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdo6vp0gFqTU1NzcxMDgwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "35b80cba328778fadccc50f166610949aba81932", "author": {"user": null}, "url": "https://github.com/AxonFramework/AxonFramework/commit/35b80cba328778fadccc50f166610949aba81932", "committedDate": "2020-12-17T11:33:41Z", "message": "#1613 Added ability to set ClassLoader on XStreamSerializer builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1Mzc4NjMy", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#pullrequestreview-555378632", "createdAt": "2020-12-18T10:39:47Z", "commit": {"oid": "35b80cba328778fadccc50f166610949aba81932"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMDozOTo0N1rOIIdwpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMDo0Mjo1N1rOIId3gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc0NzEwOQ==", "bodyText": "Small pointer, but I feel it would be nicer to perform this validation and check in the build() method on the XStreamSerializer. Mainly because the classLoader doesn't mean anything from the perspective of this constructor, it's purely there to define what the XStream instance would look like.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r545747109", "createdAt": "2020-12-18T10:39:47Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java", "diffHunk": "@@ -65,6 +65,10 @@ protected AbstractXStreamSerializer(Builder builder) {\n         this.converter = builder.converter;\n         this.revisionResolver = builder.revisionResolver;\n \n+        if (builder.classLoader != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35b80cba328778fadccc50f166610949aba81932"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc0ODg2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Sets the {@link ClassLoader} used as an override for default class loader in {@link XStream}.\n          \n          \n            \n                     * Sets the {@link ClassLoader} used as an override for default {@code ClassLoader} used in the {@link XStream}.\n          \n          \n            \n                     * The same solution could thus be achieved by configuring the `XStream` instance directly.", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r545748867", "createdAt": "2020-12-18T10:42:57Z", "author": {"login": "smcvb"}, "path": "messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java", "diffHunk": "@@ -328,6 +333,18 @@ public Builder converter(Converter converter) {\n             return this;\n         }\n \n+        /**\n+         * Sets the {@link ClassLoader} used as an override for default class loader in {@link XStream}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35b80cba328778fadccc50f166610949aba81932"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "066308494018bd01dd5ed71f7e8179494be4268e", "author": {"user": {"login": "aupodogov", "name": "Podogov Aleksey"}}, "url": "https://github.com/AxonFramework/AxonFramework/commit/066308494018bd01dd5ed71f7e8179494be4268e", "committedDate": "2020-12-18T10:53:39Z", "message": "Apply javadoc suggestion\n\nCo-authored-by: Steven van Beelen <steven.vanbeelen@axoniq.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfa8700affb448b715d4f84d408d384681794271", "author": {"user": null}, "url": "https://github.com/AxonFramework/AxonFramework/commit/cfa8700affb448b715d4f84d408d384681794271", "committedDate": "2020-12-18T11:34:25Z", "message": "#1613 Setting XStream ClassLoader on autoconfiguration via builder method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eb64e012ae4f11b452be3272e26a3f8fc471a46", "author": {"user": null}, "url": "https://github.com/AxonFramework/AxonFramework/commit/3eb64e012ae4f11b452be3272e26a3f8fc471a46", "committedDate": "2020-12-22T07:39:15Z", "message": "#1613 Setting ClassLoader for XStreamSerializer moved to AbstractXStreamSerializer.Builder#validate method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTE0MjY3", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#pullrequestreview-556914267", "createdAt": "2020-12-22T08:51:06Z", "commit": {"oid": "3eb64e012ae4f11b452be3272e26a3f8fc471a46"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bcb25a762f172182ea3d9b1d2ead0933dc6c9be", "author": {"user": null}, "url": "https://github.com/AxonFramework/AxonFramework/commit/1bcb25a762f172182ea3d9b1d2ead0933dc6c9be", "committedDate": "2020-12-22T15:05:09Z", "message": "#1613 Added ability to set ClassLoader on JacksonSerializer builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MjI3OTc1", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#pullrequestreview-557227975", "createdAt": "2020-12-22T17:02:22Z", "commit": {"oid": "1bcb25a762f172182ea3d9b1d2ead0933dc6c9be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzowMjoyMlrOIKCKjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzowMjoyMlrOIKCKjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5MjE0MQ==", "bodyText": "Shouldn't this be done for the JacksonSerializer too?", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r547392141", "createdAt": "2020-12-22T17:02:22Z", "author": {"login": "smcvb"}, "path": "spring-boot-autoconfigure/src/main/java/org/axonframework/springboot/autoconfig/AxonAutoConfiguration.java", "diffHunk": "@@ -165,11 +165,10 @@ private Serializer buildSerializer(RevisionResolver revisionResolver,\n             case XSTREAM:\n             case DEFAULT:\n             default:\n-                XStreamSerializer xStreamSerializer = XStreamSerializer.builder()\n-                                                                       .revisionResolver(revisionResolver)\n-                                                                       .build();\n-                xStreamSerializer.getXStream().setClassLoader(beanClassLoader);\n-                return xStreamSerializer;\n+                return XStreamSerializer.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bcb25a762f172182ea3d9b1d2ead0933dc6c9be"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NzEwODAy", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#pullrequestreview-557710802", "createdAt": "2020-12-23T08:20:45Z", "commit": {"oid": "1bcb25a762f172182ea3d9b1d2ead0933dc6c9be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2047, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}