{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMDQ1MjYw", "number": 1375, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDozNDo1NFrOFFn_sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNToxNDoyOVrOFFpV4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDQyNDgzOnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/workbasket-list-toolbar/workbasket-list-toolbar.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDozNDo1NFrOIGObZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNToxMjo1NVrOIGw-3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5ODc1Ng==", "bodyText": "'done' isn't used, is it?", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543398756", "createdAt": "2020-12-15T14:34:54Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/workbasket-list-toolbar/workbasket-list-toolbar.component.spec.ts", "diffHunk": "@@ -109,25 +110,35 @@ describe('WorkbasketListToolbarComponent', () => {\n   }));\n \n   it('should emit value when sorting is called', (done) => {\n-    const mockSort: Sorting = { sortBy: '123', sortDirection: 'asc' };\n-    let sort: Sorting = { sortBy: '123', sortDirection: 'asc' };\n-    component.performSorting.subscribe((sortBy: Sorting) => {\n+    const mockSort: Sorting<WorkbasketQuerySortParameter> = {\n+      'sort-by': WorkbasketQuerySortParameter.KEY,\n+      order: Direction.ASC\n+    };\n+    let sort: Sorting<WorkbasketQuerySortParameter> = undefined;\n+    component.performSorting.subscribe((sortBy: Sorting<WorkbasketQuerySortParameter>) => {\n       sort = sortBy;\n       done();\n     });\n-    component.sorting(sort);\n+    component.sorting(mockSort);\n     expect(sort).toMatchObject(mockSort);\n   });\n \n-  it('should emit value when filtering is called', async((done) => {\n-    const mockFilter: Filter = { filterParams: 'abc' };\n-    let filterBy: Filter = { filterParams: 'abc' };\n-    component.performFilter.subscribe((filter: Filter) => {\n-      filterBy = filter;\n-      done();\n-    });\n-    component.filtering(filterBy);\n-    expect(filterBy).toMatchObject(mockFilter);\n+  it('should NOT emit value when filtering is called with wrong component', async((done) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk2NDg5NA==", "bodyText": "true. This is also not an async test.", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543964894", "createdAt": "2020-12-16T05:12:55Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/administration/components/workbasket-list-toolbar/workbasket-list-toolbar.component.spec.ts", "diffHunk": "@@ -109,25 +110,35 @@ describe('WorkbasketListToolbarComponent', () => {\n   }));\n \n   it('should emit value when sorting is called', (done) => {\n-    const mockSort: Sorting = { sortBy: '123', sortDirection: 'asc' };\n-    let sort: Sorting = { sortBy: '123', sortDirection: 'asc' };\n-    component.performSorting.subscribe((sortBy: Sorting) => {\n+    const mockSort: Sorting<WorkbasketQuerySortParameter> = {\n+      'sort-by': WorkbasketQuerySortParameter.KEY,\n+      order: Direction.ASC\n+    };\n+    let sort: Sorting<WorkbasketQuerySortParameter> = undefined;\n+    component.performSorting.subscribe((sortBy: Sorting<WorkbasketQuerySortParameter>) => {\n       sort = sortBy;\n       done();\n     });\n-    component.sorting(sort);\n+    component.sorting(mockSort);\n     expect(sort).toMatchObject(mockSort);\n   });\n \n-  it('should emit value when filtering is called', async((done) => {\n-    const mockFilter: Filter = { filterParams: 'abc' };\n-    let filterBy: Filter = { filterParams: 'abc' };\n-    component.performFilter.subscribe((filter: Filter) => {\n-      filterBy = filter;\n-      done();\n-    });\n-    component.filtering(filterBy);\n-    expect(filterBy).toMatchObject(mockFilter);\n+  it('should NOT emit value when filtering is called with wrong component', async((done) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5ODc1Ng=="}, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDQyNTkxOnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/workbasket-list-toolbar/workbasket-list-toolbar.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDozNTowOFrOIGOcCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNToxMzowM1rOIGw_KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5ODkyMw==", "bodyText": "see above", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543398923", "createdAt": "2020-12-15T14:35:08Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/workbasket-list-toolbar/workbasket-list-toolbar.component.spec.ts", "diffHunk": "@@ -109,25 +110,35 @@ describe('WorkbasketListToolbarComponent', () => {\n   }));\n \n   it('should emit value when sorting is called', (done) => {\n-    const mockSort: Sorting = { sortBy: '123', sortDirection: 'asc' };\n-    let sort: Sorting = { sortBy: '123', sortDirection: 'asc' };\n-    component.performSorting.subscribe((sortBy: Sorting) => {\n+    const mockSort: Sorting<WorkbasketQuerySortParameter> = {\n+      'sort-by': WorkbasketQuerySortParameter.KEY,\n+      order: Direction.ASC\n+    };\n+    let sort: Sorting<WorkbasketQuerySortParameter> = undefined;\n+    component.performSorting.subscribe((sortBy: Sorting<WorkbasketQuerySortParameter>) => {\n       sort = sortBy;\n       done();\n     });\n-    component.sorting(sort);\n+    component.sorting(mockSort);\n     expect(sort).toMatchObject(mockSort);\n   });\n \n-  it('should emit value when filtering is called', async((done) => {\n-    const mockFilter: Filter = { filterParams: 'abc' };\n-    let filterBy: Filter = { filterParams: 'abc' };\n-    component.performFilter.subscribe((filter: Filter) => {\n-      filterBy = filter;\n-      done();\n-    });\n-    component.filtering(filterBy);\n-    expect(filterBy).toMatchObject(mockFilter);\n+  it('should NOT emit value when filtering is called with wrong component', async((done) => {\n+    const mockFilter: Pair<string, WorkbasketQueryFilterParameter> = { left: 'foo', right: { domain: ['DOMAIN_A'] } };\n+    const performFilterSpy = jest.spyOn(component.performFilter, 'emit');\n+    component.filtering(mockFilter);\n+    expect(performFilterSpy).toBeCalledTimes(0);\n+  }));\n+\n+  it('should emit value when filtering is called with correct component', async((done) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk2NDk2OQ==", "bodyText": "true. This is also not an async test.", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543964969", "createdAt": "2020-12-16T05:13:03Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/administration/components/workbasket-list-toolbar/workbasket-list-toolbar.component.spec.ts", "diffHunk": "@@ -109,25 +110,35 @@ describe('WorkbasketListToolbarComponent', () => {\n   }));\n \n   it('should emit value when sorting is called', (done) => {\n-    const mockSort: Sorting = { sortBy: '123', sortDirection: 'asc' };\n-    let sort: Sorting = { sortBy: '123', sortDirection: 'asc' };\n-    component.performSorting.subscribe((sortBy: Sorting) => {\n+    const mockSort: Sorting<WorkbasketQuerySortParameter> = {\n+      'sort-by': WorkbasketQuerySortParameter.KEY,\n+      order: Direction.ASC\n+    };\n+    let sort: Sorting<WorkbasketQuerySortParameter> = undefined;\n+    component.performSorting.subscribe((sortBy: Sorting<WorkbasketQuerySortParameter>) => {\n       sort = sortBy;\n       done();\n     });\n-    component.sorting(sort);\n+    component.sorting(mockSort);\n     expect(sort).toMatchObject(mockSort);\n   });\n \n-  it('should emit value when filtering is called', async((done) => {\n-    const mockFilter: Filter = { filterParams: 'abc' };\n-    let filterBy: Filter = { filterParams: 'abc' };\n-    component.performFilter.subscribe((filter: Filter) => {\n-      filterBy = filter;\n-      done();\n-    });\n-    component.filtering(filterBy);\n-    expect(filterBy).toMatchObject(mockFilter);\n+  it('should NOT emit value when filtering is called with wrong component', async((done) => {\n+    const mockFilter: Pair<string, WorkbasketQueryFilterParameter> = { left: 'foo', right: { domain: ['DOMAIN_A'] } };\n+    const performFilterSpy = jest.spyOn(component.performFilter, 'emit');\n+    component.filtering(mockFilter);\n+    expect(performFilterSpy).toBeCalledTimes(0);\n+  }));\n+\n+  it('should emit value when filtering is called with correct component', async((done) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5ODkyMw=="}, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDQ1Njc0OnYy", "diffSide": "RIGHT", "path": "web/src/app/history/task-history-query/task-history-query.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDo0MDo0NVrOIGOufA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDo0MDo0NVrOIGOufA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwMzY0NA==", "bodyText": "remove console.log?", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543403644", "createdAt": "2020-12-15T14:40:45Z", "author": {"login": "sofie29"}, "path": "web/src/app/history/task-history-query/task-history-query.component.ts", "diffHunk": "@@ -146,11 +147,12 @@ export class TaskQueryComponent implements OnInit {\n   }\n \n   changeOrderBy(key: string) {\n+    console.log(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDUxNjczOnYy", "diffSide": "LEFT", "path": "web/src/app/shared/components/workbasket-filter/workbasket-filter.component.scss", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDo1MToyM1rOIGPSJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNToxOTowM1rOIGxR2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQxMjc3Mw==", "bodyText": "Classes like this are used in the task-filter component and the scss file of the task-filter is empty. I don't know how it looks like without the css classes. In case there are no big differences and since the workplace still needs to be refactored, you can keep it the way it is.", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543412773", "createdAt": "2020-12-15T14:51:23Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/workbasket-filter/workbasket-filter.component.scss", "diffHunk": "@@ -38,37 +33,15 @@\n   justify-content: space-between;\n }\n \n-.dropdown-menu-users {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk2OTc1Mg==", "bodyText": "Oh. I probably forgot that. I'll check the css classes for task-filter", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543969752", "createdAt": "2020-12-16T05:19:03Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/components/workbasket-filter/workbasket-filter.component.scss", "diffHunk": "@@ -38,37 +33,15 @@\n   justify-content: space-between;\n }\n \n-.dropdown-menu-users {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQxMjc3Mw=="}, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDUyMzA5OnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/classification-details/classification-details.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDo1MjoyM1rOIGPVyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNToxMzoyOFrOIGxAKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQxMzcwNg==", "bodyText": "attribute names left, right aren't very self declaring. how about icon, icon-description", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543413706", "createdAt": "2020-12-15T14:52:23Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/administration/components/classification-details/classification-details.component.ts", "diffHunk": "@@ -137,12 +137,12 @@ export class ClassificationDetailsComponent implements OnInit, OnDestroy {\n     this.store.dispatch(new DeselectClassification());\n   }\n \n-  getCategoryIcon(category: string): Observable<Pair> {\n+  getCategoryIcon(category: string): Observable<Pair<string, string>> {\n     return this.categoryIcons$.pipe(\n       map((iconMap) =>\n         iconMap[category]\n-          ? new Pair(iconMap[category], category)\n-          : new Pair(iconMap.missing, 'Category does not match with the configuration')\n+          ? { left: iconMap[category], right: category }\n+          : { left: iconMap.missing, right: 'Category does not match with the configuration' }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk2NTIyNw==", "bodyText": "let's discuss this as you requested.", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543965227", "createdAt": "2020-12-16T05:13:28Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/administration/components/classification-details/classification-details.component.ts", "diffHunk": "@@ -137,12 +137,12 @@ export class ClassificationDetailsComponent implements OnInit, OnDestroy {\n     this.store.dispatch(new DeselectClassification());\n   }\n \n-  getCategoryIcon(category: string): Observable<Pair> {\n+  getCategoryIcon(category: string): Observable<Pair<string, string>> {\n     return this.categoryIcons$.pipe(\n       map((iconMap) =>\n         iconMap[category]\n-          ? new Pair(iconMap[category], category)\n-          : new Pair(iconMap.missing, 'Category does not match with the configuration')\n+          ? { left: iconMap[category], right: category }\n+          : { left: iconMap.missing, right: 'Category does not match with the configuration' }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQxMzcwNg=="}, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDU2NDg4OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/models/workbasket-query-parameters.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDo1OTo0OVrOIGPvCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNToyNDoyNFrOIGxiGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyMDE3MA==", "bodyText": "file name is 'workbasket-query-parameters'. For consistency, it has to be 'workbasket-query-filter-parameter'.", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543420170", "createdAt": "2020-12-15T14:59:49Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/models/workbasket-query-parameters.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import { WorkbasketType } from './workbasket-type';\n+import { WorkbasketPermission } from './workbasket-permission';\n+\n+export interface WorkbasketQueryFilterParameter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk3MzkxMg==", "bodyText": "good catch! \ud83d\udc4f", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543973912", "createdAt": "2020-12-16T05:24:24Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/workbasket-query-parameters.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import { WorkbasketType } from './workbasket-type';\n+import { WorkbasketPermission } from './workbasket-permission';\n+\n+export interface WorkbasketQueryFilterParameter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyMDE3MA=="}, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDU2OTEzOnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/workbasket-list-toolbar/workbasket-list-toolbar.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTowMDozNlrOIGPxqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTowMDozNlrOIGPxqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyMDg0Mg==", "bodyText": "instead of left, right maybe component, filterParams? Otherwise you have a reason why left, right for Pairs is better idea", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543420842", "createdAt": "2020-12-15T15:00:36Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/administration/components/workbasket-list-toolbar/workbasket-list-toolbar.component.ts", "diffHunk": "@@ -61,20 +46,16 @@ export class WorkbasketListToolbarComponent implements OnInit {\n     });\n   }\n \n-  sorting(sort: Sorting) {\n+  sorting(sort: Sorting<WorkbasketQuerySortParameter>) {\n     this.performSorting.emit(sort);\n   }\n \n-  filtering(filterBy: Filter) {\n-    if (this.component === 'workbasket-list') {\n-      this.performFilter.emit(filterBy);\n+  filtering({ left: component, right: filter }: Pair<string, WorkbasketQueryFilterParameter>) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDU2OTcwOnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/workbasket-distribution-targets-list/workbasket-distribution-targets-list.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTowMDo0M1rOIGPyCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTowMDo0M1rOIGPyCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyMDkzNg==", "bodyText": "see below comment", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543420936", "createdAt": "2020-12-15T15:00:43Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/administration/components/workbasket-distribution-targets-list/workbasket-distribution-targets-list.component.ts", "diffHunk": "@@ -55,17 +55,13 @@ export class WorkbasketDistributionTargetsListComponent implements OnInit, After\n     this.allSelectedChange.emit(this.allSelected);\n   }\n \n-  setComponent(component: string) {\n-    this.component = component;\n-  }\n-\n   onScroll() {\n     this.scrolling.emit(this.side);\n   }\n \n-  performAvailableFilter(filterModel: Filter) {\n-    if (this.component === 'distribution-target') {\n-      this.performDualListFilter.emit({ filterBy: filterModel, side: this.side });\n+  performAvailableFilter(pair: Pair<string, WorkbasketQueryFilterParameter>) {\n+    if (pair.left === 'distribution-target') {\n+      this.performDualListFilter.emit({ left: this.side, right: pair.right });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDU5MzgyOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/models/notifications.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTowNToxMVrOIGQAjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTowNToxMVrOIGQAjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyNDY1NQ==", "bodyText": "I see why you would like to have left,right as attr names. Is there any way we can name the attrs meaningfully?", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543424655", "createdAt": "2020-12-15T15:05:11Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/models/notifications.ts", "diffHunk": "@@ -59,163 +59,194 @@ export enum NOTIFICATION_TYPES {\n   WARNING_CANT_COPY\n }\n \n-export const notifications = new Map<NOTIFICATION_TYPES, Pair>([\n+export const notifications = new Map<NOTIFICATION_TYPES, Pair<string, string>>([", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDYwNTM1OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/pipes/select-workbaskets.pipe.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTowNzoxNlrOIGQHSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNToxODowOVrOIGxOtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyNjM3Nw==", "bodyText": "wb and sWb could vbe named more meaningfully", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543426377", "createdAt": "2020-12-15T15:07:16Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/pipes/select-workbaskets.pipe.ts", "diffHunk": "@@ -1,31 +1,21 @@\n import { Pipe, PipeTransform } from '@angular/core';\n-import { TaskanaQueryParameters } from 'app/shared/util/query-parameters';\n import { WorkbasketSummary } from '../models/workbasket-summary';\n+import { Side } from '../../administration/components/workbasket-distribution-targets/workbasket-distribution-targets.component';\n \n @Pipe({ name: 'selectWorkbaskets' })\n export class SelectWorkBasketPipe implements PipeTransform {\n-  transform(originArray: any, selectionArray: any, arg1: any): WorkbasketSummary[] {\n-    let returnArray = [];\n-    if (!originArray || !selectionArray) {\n-      return returnArray;\n+  transform(\n+    allWorkbaskets: WorkbasketSummary[],\n+    selectedWorkbaskets: WorkbasketSummary[],\n+    side: Side\n+  ): WorkbasketSummary[] {\n+    if (!allWorkbaskets || !selectedWorkbaskets) {\n+      return [];\n     }\n-    for (let index = originArray.length - 1; index >= 0; index--) {\n-      if (\n-        (arg1 &&\n-          !selectionArray.some(\n-            (elementToRemove) => originArray[index].workbasketId === elementToRemove.workbasketId\n-          )) ||\n-        (!arg1 &&\n-          selectionArray.some((elementToRemove) => originArray[index].workbasketId === elementToRemove.workbasketId))\n-      ) {\n-        originArray.splice(index, 1);\n-      }\n+    if (side === Side.SELECTED) {\n+      return selectedWorkbaskets;\n     }\n-\n-    if (originArray.length > TaskanaQueryParameters.pageSize) {\n-      originArray.slice(0, TaskanaQueryParameters.pageSize);\n-    }\n-    returnArray = originArray;\n-    return returnArray;\n+    const isNotSelectedWorkbasket = (wb) => !selectedWorkbaskets.some((sWb) => sWb.workbasketId === wb.workbasketId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk2ODk0OQ==", "bodyText": "I don't think wb is a bad abbreviation. I think writing out workbasket would be too long.\nAnyway, I refactored this so that it is a little more readable.", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543968949", "createdAt": "2020-12-16T05:18:09Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/pipes/select-workbaskets.pipe.ts", "diffHunk": "@@ -1,31 +1,21 @@\n import { Pipe, PipeTransform } from '@angular/core';\n-import { TaskanaQueryParameters } from 'app/shared/util/query-parameters';\n import { WorkbasketSummary } from '../models/workbasket-summary';\n+import { Side } from '../../administration/components/workbasket-distribution-targets/workbasket-distribution-targets.component';\n \n @Pipe({ name: 'selectWorkbaskets' })\n export class SelectWorkBasketPipe implements PipeTransform {\n-  transform(originArray: any, selectionArray: any, arg1: any): WorkbasketSummary[] {\n-    let returnArray = [];\n-    if (!originArray || !selectionArray) {\n-      return returnArray;\n+  transform(\n+    allWorkbaskets: WorkbasketSummary[],\n+    selectedWorkbaskets: WorkbasketSummary[],\n+    side: Side\n+  ): WorkbasketSummary[] {\n+    if (!allWorkbaskets || !selectedWorkbaskets) {\n+      return [];\n     }\n-    for (let index = originArray.length - 1; index >= 0; index--) {\n-      if (\n-        (arg1 &&\n-          !selectionArray.some(\n-            (elementToRemove) => originArray[index].workbasketId === elementToRemove.workbasketId\n-          )) ||\n-        (!arg1 &&\n-          selectionArray.some((elementToRemove) => originArray[index].workbasketId === elementToRemove.workbasketId))\n-      ) {\n-        originArray.splice(index, 1);\n-      }\n+    if (side === Side.SELECTED) {\n+      return selectedWorkbaskets;\n     }\n-\n-    if (originArray.length > TaskanaQueryParameters.pageSize) {\n-      originArray.slice(0, TaskanaQueryParameters.pageSize);\n-    }\n-    returnArray = originArray;\n-    return returnArray;\n+    const isNotSelectedWorkbasket = (wb) => !selectedWorkbaskets.some((sWb) => sWb.workbasketId === wb.workbasketId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyNjM3Nw=="}, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDYyMDMyOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/models/pair.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNToxMDowN1rOIGQQZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNToxMDowN1rOIGQQZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQyODcwOQ==", "bodyText": "\ud83e\udd14 I'm not sure if someone new to the project would find this helpful \ud83d\ude13", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543428709", "createdAt": "2020-12-15T15:10:07Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/models/pair.ts", "diffHunk": "@@ -1,3 +1,4 @@\n-export class Pair {\n-  constructor(public name?: string, public text?: string) {}\n+export interface Pair<L, R> {\n+  left: L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDY0NTQ3OnYy", "diffSide": "RIGHT", "path": "web/src/app/workplace/components/taskdetails-general/general-fields.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNToxNDoyOVrOIGQfGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNToxNDoyOVrOIGQfGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQzMjQ3NQ==", "bodyText": "I think the unsubscription is missing ( .pipe(takeUntil(this.$destroy)) like in the other components)", "url": "https://github.com/Taskana/taskana/pull/1375#discussion_r543432475", "createdAt": "2020-12-15T15:14:29Z", "author": {"login": "sofie29"}, "path": "web/src/app/workplace/components/taskdetails-general/general-fields.component.ts", "diffHunk": "@@ -102,14 +102,15 @@ export class TaskdetailsGeneralFieldsComponent implements OnInit, OnChanges, OnD\n     });\n   }\n \n+  // TODO: this is currently called for every selected task and is only necessary when we switch the workbasket -> can be optimized.\n   private getClassificationByDomain() {\n     this.requestInProgress = true;\n     this.classificationService\n-      .getClassificationsByDomain(this.domainService.getSelectedDomainValue())\n-      .then((classificationPagingList) => {\n+      .getClassifications({ domain: [this.task.workbasketSummary.domain] })\n+      .subscribe((classificationPagingList) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6392396bb6b30f1d6a14fe040099231dcb8e941e"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4479, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}