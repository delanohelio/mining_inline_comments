{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NjcyOTIx", "number": 1366, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0NzoxM1rOFCx2ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxMDo1N1rOFCyckg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDU4MzA3OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0NzoxM1rOICGujQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTo1NTo0NVrOICMCgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3ODI4NQ==", "bodyText": "why are you testing this twice?", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539078285", "createdAt": "2020-12-09T07:47:13Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE2NTMxNQ==", "bodyText": "Wanted to use empty String in the second, I change it", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539165315", "createdAt": "2020-12-09T09:55:45Z", "author": {"login": "tge20"}, "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3ODI4NQ=="}, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDU5MDk5OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0OTozMFrOICGzGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0OTozMFrOICGzGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3OTQ0OA==", "bodyText": "While this is not wrong, I think we decided to use the following structure:\nassertThatThrownBy(() -> workbasketService.updateWorkbasket(workbasket))\n.isInstanceOf(InvalidWorkbasketException.class);", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539079448", "createdAt": "2020-12-09T07:49:30Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDU5MjQyOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0OTo0N1rOICGz3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0OTo0N1rOICGz3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3OTY0Ng==", "bodyText": "see above", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539079646", "createdAt": "2020-12-09T07:49:47Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+  }\n+\n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithTypeNull() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setType(null);\n+\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDU5NTE4OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo1MDozN1rOICG1Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTo0MToyMFrOICLZoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA4MDAzNQ==", "bodyText": "why did you rename this? To name the new method validateNameAndType without workbasket?", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539080035", "createdAt": "2020-12-09T07:50:37Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -1199,7 +1197,7 @@ private void markWorkbasketForDeletion(String workbasketId)\n     taskanaEngine.getEngine().checkRoleMembership(TaskanaRole.BUSINESS_ADMIN, TaskanaRole.ADMIN);\n     try {\n       taskanaEngine.openConnection();\n-      validateWorkbasketId(workbasketId);\n+      validateId(workbasketId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE1NDg0OQ==", "bodyText": "I just thought it would be clearer and easier to read", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539154849", "createdAt": "2020-12-09T09:41:20Z", "author": {"login": "tge20"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -1199,7 +1197,7 @@ private void markWorkbasketForDeletion(String workbasketId)\n     taskanaEngine.getEngine().checkRoleMembership(TaskanaRole.BUSINESS_ADMIN, TaskanaRole.ADMIN);\n     try {\n       taskanaEngine.openConnection();\n-      validateWorkbasketId(workbasketId);\n+      validateId(workbasketId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA4MDAzNQ=="}, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDY3NjE0OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxMDoxN1rOICHjGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTo1Mzo0NlrOICL9KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MTczNg==", "bodyText": "I think we could have just re-used the validateWorkbasket method here", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539091736", "createdAt": "2020-12-09T08:10:17Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -173,38 +173,30 @@ public Workbasket createWorkbasket(Workbasket newWorkbasket)\n \n   @Override\n   public Workbasket updateWorkbasket(Workbasket workbasketToUpdate)\n-      throws NotAuthorizedException, WorkbasketNotFoundException, ConcurrencyException {\n+      throws NotAuthorizedException, WorkbasketNotFoundException, ConcurrencyException,\n+          InvalidWorkbasketException {\n \n     LOGGER.debug(\"entry to updateWorkbasket(Workbasket = {})\", workbasketToUpdate);\n \n     taskanaEngine.getEngine().checkRoleMembership(TaskanaRole.BUSINESS_ADMIN, TaskanaRole.ADMIN);\n-\n-    WorkbasketImpl workbasketImplToUpdate = null;\n+    WorkbasketImpl workbasketImplToUpdate = (WorkbasketImpl) workbasketToUpdate;\n+    validateNameAndType(workbasketToUpdate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE2Mzk0NA==", "bodyText": "Possible, I thought it would only be necessary to check those two. Problem could be that according to line 193-197 in method update(...) it seems to be possible that you update a workbasket having Id null or empty (it won't update the id) which thus should not throw an exception if wanted by intention.", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539163944", "createdAt": "2020-12-09T09:53:46Z", "author": {"login": "tge20"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -173,38 +173,30 @@ public Workbasket createWorkbasket(Workbasket newWorkbasket)\n \n   @Override\n   public Workbasket updateWorkbasket(Workbasket workbasketToUpdate)\n-      throws NotAuthorizedException, WorkbasketNotFoundException, ConcurrencyException {\n+      throws NotAuthorizedException, WorkbasketNotFoundException, ConcurrencyException,\n+          InvalidWorkbasketException {\n \n     LOGGER.debug(\"entry to updateWorkbasket(Workbasket = {})\", workbasketToUpdate);\n \n     taskanaEngine.getEngine().checkRoleMembership(TaskanaRole.BUSINESS_ADMIN, TaskanaRole.ADMIN);\n-\n-    WorkbasketImpl workbasketImplToUpdate = null;\n+    WorkbasketImpl workbasketImplToUpdate = (WorkbasketImpl) workbasketToUpdate;\n+    validateNameAndType(workbasketToUpdate);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MTczNg=="}, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDY3OTg2OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxMDo1N1rOICHlaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTo1NDoyNlrOICL-7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MjMyOQ==", "bodyText": "If we re-use the whole validateWorkbasket method, then we woudln't have to refactor this to a separate method, right?", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539092329", "createdAt": "2020-12-09T08:10:57Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -1158,27 +1138,45 @@ private boolean skipAuthorizationCheck(WorkbasketPermission... requestedPermissi\n   private void validateWorkbasket(Workbasket workbasket)\n       throws InvalidWorkbasketException, DomainNotFoundException {\n     // check that required properties (database not null) are set\n+    validateNameAndType(workbasket);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE2NDM5Ng==", "bodyText": "True, but see above", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539164396", "createdAt": "2020-12-09T09:54:26Z", "author": {"login": "tge20"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -1158,27 +1138,45 @@ private boolean skipAuthorizationCheck(WorkbasketPermission... requestedPermissi\n   private void validateWorkbasket(Workbasket workbasket)\n       throws InvalidWorkbasketException, DomainNotFoundException {\n     // check that required properties (database not null) are set\n+    validateNameAndType(workbasket);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MjMyOQ=="}, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4476, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}