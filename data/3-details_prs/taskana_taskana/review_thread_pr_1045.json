{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNzkyMTU1", "number": 1045, "reviewThreads": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODozNTowNFrOD4USfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozMTowMlrOD8Oe5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzc5MjYyOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring-example-boot/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODozNTowNFrOGPE6tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODozNTowNFrOGPE6tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2MjM4OQ==", "bodyText": "set it back to false please", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r418462389", "createdAt": "2020-05-01T08:35:04Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring-example-boot/src/main/resources/application.properties", "diffHunk": "@@ -20,7 +20,7 @@ taskana.schemaName=TASKANA\n ########spring.jpa.generate-ddl=true\n ########spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true\n ####### property that control rest api security deploy use true for no security.\n-devMode=false\n+devMode=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6806ed31a3b44f35c7d29ba7fc52a9df445346a5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzc5ODI0OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring-example-common/src/main/java/pro/taskana/ldap/LdapCacheTestImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODozODowNlrOGPE97A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODozODowNlrOGPE97A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2MzIxMg==", "bodyText": "usersAndGroups.sort(\nComparator.comparing(\nAccessIdRepresentationModel::getAccessId, String.CASE_INSENSITIVE_ORDER));", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r418463212", "createdAt": "2020-05-01T08:38:06Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring-example-common/src/main/java/pro/taskana/ldap/LdapCacheTestImpl.java", "diffHunk": "@@ -331,19 +340,19 @@\n     }\n \n     usersAndGroups.sort(\n-        (AccessIdResource a, AccessIdResource b) -> {\n+        (AccessIdRepresentationModel a, AccessIdRepresentationModel b) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6806ed31a3b44f35c7d29ba7fc52a9df445346a5"}, "originalPosition": 598}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzgwNTg4OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/ldap/LdapClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODo0MjoyNVrOGPFCsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODo0MjoyNVrOGPFCsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2NDQzMg==", "bodyText": "accessIds.sort(\nComparator.comparing(\nAccessIdRepresentationModel::getAccessId, String.CASE_INSENSITIVE_ORDER));", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r418464432", "createdAt": "2020-05-01T08:42:25Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/ldap/LdapClient.java", "diffHunk": "@@ -288,9 +289,9 @@ void isInitOrFail() {\n     }\n   }\n \n-  void sortListOfAccessIdResources(List<AccessIdResource> accessIds) {\n+  void sortListOfAccessIdResources(List<AccessIdRepresentationModel> accessIds) {\n     accessIds.sort(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6806ed31a3b44f35c7d29ba7fc52a9df445346a5"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTU2NzYxOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketAccessItemController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozMzo0NlrOGTC9cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozMzo0NlrOGTC9cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNDYyNg==", "bodyText": "Please reformat", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422624626", "createdAt": "2020-05-10T10:33:46Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketAccessItemController.java", "diffHunk": "@@ -47,18 +48,21 @@\n \n   @Autowired private WorkbasketService workbasketService;\n \n-  @Autowired private WorkbasketAccessItemResourceAssembler workbasketAccessItemResourceAssembler;\n+  @Autowired\n+  private WorkbasketAccessItemRepresentationModelAssembler\n+      workbasketAccessItemRepresentationModelAssembler;\n \n   /**\n    * This GET method return all workbasketAccessItems that correspond the given data.\n    *\n    * @param params filter, order and access ids.\n    * @return all WorkbasketAccesItemResource.\n-   * @throws NotAuthorizedException if the user is not authorized.\n+   * @throws NotAuthorizedException   if the user is not authorized.\n    * @throws InvalidArgumentException if some argument is invalid.\n    */\n   @GetMapping(path = Mapping.URL_WORKBASKETACCESSITEMS)\n-  public ResponseEntity<WorkbasketAccessItemListResource> getWorkbasketAccessItems(\n+  @SuppressWarnings(\"checkstyle:LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTU2Nzk1OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNDoyNFrOGTC9ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNDoyNFrOGTC9ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNDY3NQ==", "bodyText": "Please reformat", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422624675", "createdAt": "2020-05-10T10:34:24Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "diffHunk": "@@ -215,17 +224,18 @@\n \n   @GetMapping(path = Mapping.URL_WORKBASKET_ID_ACCESSITEMS, produces = MediaTypes.HAL_JSON_VALUE)\n   @Transactional(readOnly = true, rollbackFor = Exception.class)\n-  public ResponseEntity<WorkbasketAccessItemListResource> getWorkbasketAccessItems(\n-      @PathVariable(value = \"workbasketId\") String workbasketId)\n+  @SuppressWarnings(\"checkstyle:LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTU2ODE2OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNDozNlrOGTC9uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNDozNlrOGTC9uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNDY5OQ==", "bodyText": "Please reformat", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422624699", "createdAt": "2020-05-10T10:34:36Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "diffHunk": "@@ -235,27 +245,28 @@\n \n   @PutMapping(path = Mapping.URL_WORKBASKET_ID_ACCESSITEMS)\n   @Transactional(rollbackFor = Exception.class)\n-  public ResponseEntity<WorkbasketAccessItemListResource> setWorkbasketAccessItems(\n+  @SuppressWarnings(\"checkstyle:LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 208}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTU2ODI0OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNDo0NlrOGTC9xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNDo0NlrOGTC9xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNDcxMQ==", "bodyText": "Please reformat", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422624711", "createdAt": "2020-05-10T10:34:46Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "diffHunk": "@@ -265,16 +276,16 @@\n \n   @GetMapping(path = Mapping.URL_WORKBASKET_ID_DISTRIBUTION, produces = MediaTypes.HAL_JSON_VALUE)\n   @Transactional(readOnly = true, rollbackFor = Exception.class)\n-  public ResponseEntity<DistributionTargetListResource> getDistributionTargets(\n-      @PathVariable(value = \"workbasketId\") String workbasketId)\n+  @SuppressWarnings(\"checkstyle:LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 245}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTU2ODQwOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNDo1NVrOGTC92Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNDo1NVrOGTC92Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNDcyOQ==", "bodyText": "Please reformat", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422624729", "createdAt": "2020-05-10T10:34:55Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "diffHunk": "@@ -285,7 +296,8 @@\n \n   @PutMapping(path = Mapping.URL_WORKBASKET_ID_DISTRIBUTION)\n   @Transactional(rollbackFor = Exception.class)\n-  public ResponseEntity<DistributionTargetListResource> setDistributionTargetsForWorkbasketId(\n+  @SuppressWarnings(\"checkstyle:LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 266}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTU2ODU3OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNTowNFrOGTC97w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDozNTowNFrOGTC97w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNDc1MQ==", "bodyText": "Please reformat", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422624751", "createdAt": "2020-05-10T10:35:04Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/WorkbasketController.java", "diffHunk": "@@ -314,10 +325,10 @@\n   // TODO - schema inconsistent with PUT and GET\n   @DeleteMapping(path = Mapping.URL_WORKBASKET_DISTRIBUTION_ID)\n   @Transactional(rollbackFor = Exception.class)\n-  public ResponseEntity<CollectionModel<DistributionTargetResource>>\n-      removeDistributionTargetForWorkbasketId(\n-          @PathVariable(value = \"workbasketId\") String targetWorkbasketId)\n-          throws WorkbasketNotFoundException, NotAuthorizedException {\n+  @SuppressWarnings(\"checkstyle:LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 292}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTc3MDIwOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/AttachmentRepresentationModelAssembler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNDowODoyMFrOGTEiKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNDowODoyMFrOGTEiKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1MDQxMQ==", "bodyText": "This is for all toModel implementations:\nPlease add @NonNull to the Method and the parameter, so that the IntelliJ warning goes away", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422650411", "createdAt": "2020-05-10T14:08:20Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/AttachmentRepresentationModelAssembler.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package pro.taskana.rest.resource;\n+\n+import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.linkTo;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.hateoas.server.RepresentationModelAssembler;\n+import org.springframework.stereotype.Component;\n+\n+import pro.taskana.rest.AttachmentController;\n+import pro.taskana.task.api.TaskService;\n+import pro.taskana.task.api.models.Attachment;\n+import pro.taskana.task.internal.models.AttachmentImpl;\n+\n+/**\n+ * EntityModel assembler for {@link AttachmentRepresentationModel}.\n+ */\n+@Component\n+public class AttachmentRepresentationModelAssembler\n+    implements RepresentationModelAssembler<Attachment, AttachmentRepresentationModel> {\n+\n+  private final TaskService taskService;\n+\n+  private final ClassificationSummaryRepresentationModelAssembler classificationAssembler;\n+\n+  @Autowired\n+  public AttachmentRepresentationModelAssembler(TaskService taskService,\n+      ClassificationSummaryRepresentationModelAssembler classificationAssembler) {\n+    this.taskService = taskService;\n+    this.classificationAssembler = classificationAssembler;\n+  }\n+\n+\n+  @Override\n+  public AttachmentRepresentationModel toModel(Attachment attachment) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTc4MDYwOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/ClassificationController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNDoxOTowN1rOGTEnIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNDoxOTowN1rOGTEnIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1MTY4Mg==", "bodyText": "Reformat pls", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422651682", "createdAt": "2020-05-10T14:19:07Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/ClassificationController.java", "diffHunk": "@@ -80,23 +81,28 @@\n \n   private ClassificationService classificationService;\n \n-  private ClassificationResourceAssembler classificationResourceAssembler;\n+  private ClassificationRepresentationModelAssembler classificationRepresentationModelAssembler;\n \n-  private ClassificationSummaryResourceAssembler classificationSummaryResourceAssembler;\n+  private ClassificationSummaryRepresentationModelAssembler\n+      classificationSummaryRepresentationModelAssembler;\n \n   ClassificationController(\n       ClassificationService classificationService,\n-      ClassificationResourceAssembler classificationResourceAssembler,\n-      ClassificationSummaryResourceAssembler classificationSummaryResourceAssembler) {\n+      ClassificationRepresentationModelAssembler classificationRepresentationModelAssembler,\n+      ClassificationSummaryRepresentationModelAssembler\n+          classificationSummaryRepresentationModelAssembler) {\n     this.classificationService = classificationService;\n-    this.classificationResourceAssembler = classificationResourceAssembler;\n-    this.classificationSummaryResourceAssembler = classificationSummaryResourceAssembler;\n+    this.classificationRepresentationModelAssembler = classificationRepresentationModelAssembler;\n+    this.classificationSummaryRepresentationModelAssembler =\n+        classificationSummaryRepresentationModelAssembler;\n   }\n \n   @GetMapping(path = Mapping.URL_CLASSIFICATIONS)\n   @Transactional(readOnly = true, rollbackFor = Exception.class)\n-  public ResponseEntity<ClassificationSummaryListResource> getClassifications(\n-      @RequestParam MultiValueMap<String, String> params) throws InvalidArgumentException {\n+  @SuppressWarnings(\"checkstyle:LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTgyMDAxOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/AttachmentSummaryRepresentationModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNDo1OToxM1rOGTE6wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNDo1OToxM1rOGTE6wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1NjcwNQ==", "bodyText": "please rename this property to classificationSummary", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422656705", "createdAt": "2020-05-10T14:59:13Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/AttachmentSummaryRepresentationModel.java", "diffHunk": "@@ -5,29 +5,33 @@\n import pro.taskana.task.api.models.AttachmentSummary;\n import pro.taskana.task.api.models.ObjectReference;\n \n-/** EntityModel class for {@link AttachmentSummary}. */\n-public class AttachmentSummaryResource extends RepresentationModel<AttachmentSummaryResource> {\n+/**\n+ * EntityModel class for {@link AttachmentSummary}.\n+ */\n+public class AttachmentSummaryRepresentationModel\n+    extends RepresentationModel<AttachmentSummaryRepresentationModel> {\n \n-  private String attachmentId;\n-  private String taskId;\n-  private String created;\n-  private String modified;\n-  private ClassificationSummaryResource classificationSummaryResource;\n-  private ObjectReference objectReference;\n-  private String channel;\n-  private String received;\n+  protected String attachmentId;\n+  protected String taskId;\n+  protected String created;\n+  protected String modified;\n+  protected ClassificationSummaryRepresentationModel classificationSummaryRepresentationModel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTgyNTQ5OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/ClassificationRepresentationModelAssembler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTowNDo1MlrOGTE9hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTowNDo1MlrOGTE9hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1NzQxMw==", "bodyText": "This is a duplicate of toModel Please replace its usage with a toModel call", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422657413", "createdAt": "2020-05-10T15:04:52Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/ClassificationRepresentationModelAssembler.java", "diffHunk": "@@ -17,30 +17,32 @@\n import pro.taskana.rest.ClassificationController;\n \n /**\n- * Transforms {@link Classification} to its resource counterpart {@link ClassificationResource} and\n- * vice versa.\n+ * Transforms {@link Classification} to its resource counterpart {@link\n+ * ClassificationRepresentationModel} and vice versa.\n  */\n @Component\n-public class ClassificationResourceAssembler\n-    extends RepresentationModelAssemblerSupport<Classification, ClassificationResource> {\n+public class ClassificationRepresentationModelAssembler\n+    implements RepresentationModelAssembler<Classification, ClassificationRepresentationModel> {\n \n   final ClassificationService classificationService;\n \n   @Autowired\n-  public ClassificationResourceAssembler(ClassificationService classificationService) {\n-    super(ClassificationController.class, ClassificationResource.class);\n+  public ClassificationRepresentationModelAssembler(\n+      ClassificationService classificationService) {\n     this.classificationService = classificationService;\n   }\n \n-  public ClassificationResource toDefinition(Classification classification) {\n-    ClassificationResource resource = new ClassificationResource(classification);\n+  public ClassificationRepresentationModel toDefinition(Classification classification) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTgzMTUwOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskCommentRepresentationModelAssembler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNToxMToyNVrOGTFAmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjo0MToxMVrOGT4IQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1ODIwMg==", "bodyText": "I think It's a lot cooler to catch a generic Exception. What do you think?", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422658202", "createdAt": "2020-05-10T15:11:25Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskCommentRepresentationModelAssembler.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package pro.taskana.rest.resource;\n+\n+import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.linkTo;\n+import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.methodOn;\n+import static pro.taskana.rest.resource.TaskanaPagedModelKeys.TASK_COMMENTS;\n+\n+import java.time.Instant;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.hateoas.PagedModel.PageMetadata;\n+import org.springframework.hateoas.server.RepresentationModelAssembler;\n+import org.springframework.stereotype.Component;\n+\n+import pro.taskana.common.api.exceptions.InvalidArgumentException;\n+import pro.taskana.common.api.exceptions.NotAuthorizedException;\n+import pro.taskana.common.api.exceptions.SystemException;\n+import pro.taskana.rest.Mapping;\n+import pro.taskana.rest.TaskCommentController;\n+import pro.taskana.rest.resource.links.PageLinks;\n+import pro.taskana.task.api.TaskService;\n+import pro.taskana.task.api.exceptions.TaskCommentNotFoundException;\n+import pro.taskana.task.api.exceptions.TaskNotFoundException;\n+import pro.taskana.task.api.models.TaskComment;\n+import pro.taskana.task.internal.models.TaskCommentImpl;\n+\n+/** EntityModel assembler for {@link TaskCommentRepresentationModel}. */\n+@Component\n+public class TaskCommentRepresentationModelAssembler\n+    implements RepresentationModelAssembler<TaskComment, TaskCommentRepresentationModel> {\n+\n+  private final TaskService taskService;\n+\n+  @Autowired\n+  public TaskCommentRepresentationModelAssembler(TaskService taskService) {\n+    this.taskService = taskService;\n+  }\n+\n+  @Override\n+  public TaskCommentRepresentationModel toModel(TaskComment taskComment) {\n+    TaskCommentRepresentationModel taskCommentRepresentationModel =\n+        new TaskCommentRepresentationModel(taskComment);\n+    try {\n+      taskCommentRepresentationModel.add(\n+          linkTo(methodOn(TaskCommentController.class).getTaskComment(taskComment.getId()))\n+              .withSelfRel());\n+    } catch (TaskCommentNotFoundException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5NTc0NQ==", "bodyText": "As in correspondance with @gitgoodjhe:\nin cases in which there are several exceptions that all get treated the same, there is a case to be made for an allencompassing generic exception. however in other cases this is a bad practice and the more specific exception should be caught.", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r423495745", "createdAt": "2020-05-12T06:41:11Z", "author": {"login": "krozzus"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskCommentRepresentationModelAssembler.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package pro.taskana.rest.resource;\n+\n+import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.linkTo;\n+import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.methodOn;\n+import static pro.taskana.rest.resource.TaskanaPagedModelKeys.TASK_COMMENTS;\n+\n+import java.time.Instant;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.hateoas.PagedModel.PageMetadata;\n+import org.springframework.hateoas.server.RepresentationModelAssembler;\n+import org.springframework.stereotype.Component;\n+\n+import pro.taskana.common.api.exceptions.InvalidArgumentException;\n+import pro.taskana.common.api.exceptions.NotAuthorizedException;\n+import pro.taskana.common.api.exceptions.SystemException;\n+import pro.taskana.rest.Mapping;\n+import pro.taskana.rest.TaskCommentController;\n+import pro.taskana.rest.resource.links.PageLinks;\n+import pro.taskana.task.api.TaskService;\n+import pro.taskana.task.api.exceptions.TaskCommentNotFoundException;\n+import pro.taskana.task.api.exceptions.TaskNotFoundException;\n+import pro.taskana.task.api.models.TaskComment;\n+import pro.taskana.task.internal.models.TaskCommentImpl;\n+\n+/** EntityModel assembler for {@link TaskCommentRepresentationModel}. */\n+@Component\n+public class TaskCommentRepresentationModelAssembler\n+    implements RepresentationModelAssembler<TaskComment, TaskCommentRepresentationModel> {\n+\n+  private final TaskService taskService;\n+\n+  @Autowired\n+  public TaskCommentRepresentationModelAssembler(TaskService taskService) {\n+    this.taskService = taskService;\n+  }\n+\n+  @Override\n+  public TaskCommentRepresentationModel toModel(TaskComment taskComment) {\n+    TaskCommentRepresentationModel taskCommentRepresentationModel =\n+        new TaskCommentRepresentationModel(taskComment);\n+    try {\n+      taskCommentRepresentationModel.add(\n+          linkTo(methodOn(TaskCommentController.class).getTaskComment(taskComment.getId()))\n+              .withSelfRel());\n+    } catch (TaskCommentNotFoundException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1ODIwMg=="}, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTgzODYzOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskSummaryRepresentationModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNToxOTowOVrOGTFESQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNToxOTowOVrOGTFESQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1OTE0NQ==", "bodyText": "Please rename field to classificationSummary", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422659145", "createdAt": "2020-05-10T15:19:09Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskSummaryRepresentationModel.java", "diffHunk": "@@ -4,61 +4,64 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.springframework.hateoas.RepresentationModel;\n-import org.springframework.hateoas.server.core.Relation;\n \n import pro.taskana.common.api.exceptions.InvalidArgumentException;\n import pro.taskana.task.api.TaskState;\n import pro.taskana.task.api.models.ObjectReference;\n import pro.taskana.task.api.models.TaskSummary;\n import pro.taskana.workbasket.api.models.WorkbasketSummary;\n \n-/** EntityModel class for {@link WorkbasketSummary}. */\n-@Relation(collectionRelation = \"tasks\")\n-public class TaskSummaryResource extends RepresentationModel<TaskSummaryResource> {\n-\n-  private String taskId;\n-  private String externalId;\n-  private String created; // ISO-8601\n-  private String claimed; // ISO-8601\n-  private String completed; // ISO-8601\n-  private String modified; // ISO-8601\n-  private String planned; // ISO-8601\n-  private String due; // ISO-8601\n-  private String name;\n-  private String creator;\n-  private String note;\n-  private String description;\n-  private int priority;\n-  private TaskState state;\n-  private ClassificationSummaryResource classificationSummaryResource;\n-  private WorkbasketSummaryResource workbasketSummaryResource;\n-  private String businessProcessId;\n-  private String parentBusinessProcessId;\n-  private String owner;\n-  private ObjectReference primaryObjRef;\n-  private boolean isRead;\n-  private boolean isTransferred;\n-  private List<AttachmentSummaryResource> attachmentSummaryResources = new ArrayList<>();\n-  private String custom1;\n-  private String custom2;\n-  private String custom3;\n-  private String custom4;\n-  private String custom5;\n-  private String custom6;\n-  private String custom7;\n-  private String custom8;\n-  private String custom9;\n-  private String custom10;\n-  private String custom11;\n-  private String custom12;\n-  private String custom13;\n-  private String custom14;\n-  private String custom15;\n-  private String custom16;\n-\n-  TaskSummaryResource() {}\n-\n-  public TaskSummaryResource(TaskSummary taskSummary) throws InvalidArgumentException {\n+/**\n+ * EntityModel class for {@link WorkbasketSummary}.\n+ */\n+public class TaskSummaryRepresentationModel\n+    extends RepresentationModel<TaskSummaryRepresentationModel> {\n+\n+  protected String taskId;\n+  protected String externalId;\n+  protected String created; // ISO-8601\n+  protected String claimed; // ISO-8601\n+  protected String completed; // ISO-8601\n+  protected String modified; // ISO-8601\n+  protected String planned; // ISO-8601\n+  protected String due; // ISO-8601\n+  protected String name;\n+  protected String creator;\n+  protected String note;\n+  protected String description;\n+  protected int priority;\n+  protected TaskState state;\n+  protected ClassificationSummaryRepresentationModel classificationSummaryRepresentationModel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTgzODc2OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskSummaryRepresentationModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNToxOToyM1rOGTFEWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNToxOToyM1rOGTFEWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1OTE2Mg==", "bodyText": "Please rename field to workbasketSummary", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422659162", "createdAt": "2020-05-10T15:19:23Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskSummaryRepresentationModel.java", "diffHunk": "@@ -4,61 +4,64 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.springframework.hateoas.RepresentationModel;\n-import org.springframework.hateoas.server.core.Relation;\n \n import pro.taskana.common.api.exceptions.InvalidArgumentException;\n import pro.taskana.task.api.TaskState;\n import pro.taskana.task.api.models.ObjectReference;\n import pro.taskana.task.api.models.TaskSummary;\n import pro.taskana.workbasket.api.models.WorkbasketSummary;\n \n-/** EntityModel class for {@link WorkbasketSummary}. */\n-@Relation(collectionRelation = \"tasks\")\n-public class TaskSummaryResource extends RepresentationModel<TaskSummaryResource> {\n-\n-  private String taskId;\n-  private String externalId;\n-  private String created; // ISO-8601\n-  private String claimed; // ISO-8601\n-  private String completed; // ISO-8601\n-  private String modified; // ISO-8601\n-  private String planned; // ISO-8601\n-  private String due; // ISO-8601\n-  private String name;\n-  private String creator;\n-  private String note;\n-  private String description;\n-  private int priority;\n-  private TaskState state;\n-  private ClassificationSummaryResource classificationSummaryResource;\n-  private WorkbasketSummaryResource workbasketSummaryResource;\n-  private String businessProcessId;\n-  private String parentBusinessProcessId;\n-  private String owner;\n-  private ObjectReference primaryObjRef;\n-  private boolean isRead;\n-  private boolean isTransferred;\n-  private List<AttachmentSummaryResource> attachmentSummaryResources = new ArrayList<>();\n-  private String custom1;\n-  private String custom2;\n-  private String custom3;\n-  private String custom4;\n-  private String custom5;\n-  private String custom6;\n-  private String custom7;\n-  private String custom8;\n-  private String custom9;\n-  private String custom10;\n-  private String custom11;\n-  private String custom12;\n-  private String custom13;\n-  private String custom14;\n-  private String custom15;\n-  private String custom16;\n-\n-  TaskSummaryResource() {}\n-\n-  public TaskSummaryResource(TaskSummary taskSummary) throws InvalidArgumentException {\n+/**\n+ * EntityModel class for {@link WorkbasketSummary}.\n+ */\n+public class TaskSummaryRepresentationModel\n+    extends RepresentationModel<TaskSummaryRepresentationModel> {\n+\n+  protected String taskId;\n+  protected String externalId;\n+  protected String created; // ISO-8601\n+  protected String claimed; // ISO-8601\n+  protected String completed; // ISO-8601\n+  protected String modified; // ISO-8601\n+  protected String planned; // ISO-8601\n+  protected String due; // ISO-8601\n+  protected String name;\n+  protected String creator;\n+  protected String note;\n+  protected String description;\n+  protected int priority;\n+  protected TaskState state;\n+  protected ClassificationSummaryRepresentationModel classificationSummaryRepresentationModel;\n+  protected WorkbasketSummaryRepresentationModel workbasketSummaryRepresentationModel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg0MzAzOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskanaPagedModelKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNToyMzo0MVrOGTFGiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNToyMzo0MVrOGTFGiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1OTcyMQ==", "bodyText": "We are using camelCase everywhere. Can we replace this with taskComments. @gitgoodjhe we need your input here", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422659721", "createdAt": "2020-05-10T15:23:41Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskanaPagedModelKeys.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package pro.taskana.rest.resource;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+public enum TaskanaPagedModelKeys {\n+  ACCESSITEMS(\"accessItems\"),\n+  CLASSIFICATIONS(\"classifications\"),\n+  DISTRIBUTIONTARGETS(\"distributionTargets\"),\n+  TASKS(\"tasks\"),\n+  TASK_COMMENTS(\"task_comments\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg0NjgxOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModel.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNToyNzoxM1rOGTFIcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzo0NjozMFrOGT6K1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MDIwOA==", "bodyText": "Why are we ignoring markedForDeletion?", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422660208", "createdAt": "2020-05-10T15:27:13Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModel.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package pro.taskana.rest.resource;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import pro.taskana.workbasket.api.models.Workbasket;\n+\n+/**\n+ * EntityModel class for {@link Workbasket}.\n+ */\n+@JsonIgnoreProperties(\"markedForDeletion\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MDM4OQ==", "bodyText": "@holgerhagen Is there a reason why the markedForDeletion is only shown in the summary?", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422660389", "createdAt": "2020-05-10T15:28:34Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModel.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package pro.taskana.rest.resource;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import pro.taskana.workbasket.api.models.Workbasket;\n+\n+/**\n+ * EntityModel class for {@link Workbasket}.\n+ */\n+@JsonIgnoreProperties(\"markedForDeletion\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MDIwOA=="}, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyOTE3Mg==", "bodyText": "this is a bug and has been fixed as part of the latest commit", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r423529172", "createdAt": "2020-05-12T07:46:30Z", "author": {"login": "krozzus"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModel.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package pro.taskana.rest.resource;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import pro.taskana.workbasket.api.models.Workbasket;\n+\n+/**\n+ * EntityModel class for {@link Workbasket}.\n+ */\n+@JsonIgnoreProperties(\"markedForDeletion\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MDIwOA=="}, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg1NDMzOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTozNTowNlrOGTFMQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOToxMzo1OVrOGTTr-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MTE4NA==", "bodyText": "please make this constructor private\nplease use the @Supresswarnings(\"unused\") annotation\nplease comment that this constructor exists for jackson", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422661184", "createdAt": "2020-05-10T15:35:06Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModel.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package pro.taskana.rest.resource;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import pro.taskana.workbasket.api.models.Workbasket;\n+\n+/**\n+ * EntityModel class for {@link Workbasket}.\n+ */\n+@JsonIgnoreProperties(\"markedForDeletion\")\n+public class WorkbasketRepresentationModel\n+    extends WorkbasketSummaryRepresentationModel {\n+\n+\n+  private String created; // ISO-8601\n+  private String modified; // ISO-8601\n+\n+\n+  public WorkbasketRepresentationModel() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg5ODY4Mw==", "bodyText": "will be implemented as protected, else the tests and WorkbasketRepresentationModelWithoutLinks cause issues", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422898683", "createdAt": "2020-05-11T09:13:59Z", "author": {"login": "krozzus"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModel.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package pro.taskana.rest.resource;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import pro.taskana.workbasket.api.models.Workbasket;\n+\n+/**\n+ * EntityModel class for {@link Workbasket}.\n+ */\n+@JsonIgnoreProperties(\"markedForDeletion\")\n+public class WorkbasketRepresentationModel\n+    extends WorkbasketSummaryRepresentationModel {\n+\n+\n+  private String created; // ISO-8601\n+  private String modified; // ISO-8601\n+\n+\n+  public WorkbasketRepresentationModel() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MTE4NA=="}, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg1NTkwOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTozNjo0OFrOGTFNBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTozNjo0OFrOGTFNBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MTM4MQ==", "bodyText": "We can configure jackson to serialize Instant data types. Can you write this down in our list of TODO's?\nPersonally I think having a String here is somewhat bad.", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422661381", "createdAt": "2020-05-10T15:36:48Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModel.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package pro.taskana.rest.resource;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import pro.taskana.workbasket.api.models.Workbasket;\n+\n+/**\n+ * EntityModel class for {@link Workbasket}.\n+ */\n+@JsonIgnoreProperties(\"markedForDeletion\")\n+public class WorkbasketRepresentationModel\n+    extends WorkbasketSummaryRepresentationModel {\n+\n+\n+  private String created; // ISO-8601", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg2MTIyOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModelWithoutLinks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0MjozMlrOGTFPqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0MjozMlrOGTFPqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MjA1Nw==", "bodyText": "Can you please write down that we don't have this for classification (or create a bug ticket for this?)", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422662057", "createdAt": "2020-05-10T15:42:32Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketRepresentationModelWithoutLinks.java", "diffHunk": "@@ -6,11 +6,11 @@\n \n /** EntityModel class for {@link Workbasket} but without links property. */\n @JsonIgnoreProperties(value = {\"links\"})\n-public class WorkbasketResourceWithoutLinks extends WorkbasketResource {\n+public class WorkbasketRepresentationModelWithoutLinks extends WorkbasketRepresentationModel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg2MjEzOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketSummaryRepresentationModelAssembler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0MzoyOFrOGTFQGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0MzoyOFrOGTFQGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MjE3MA==", "bodyText": "Please remove this and format", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422662170", "createdAt": "2020-05-10T15:43:28Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketSummaryRepresentationModelAssembler.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package pro.taskana.rest.resource;\n+\n+import static pro.taskana.rest.resource.TaskanaPagedModelKeys.WORKBASKETS;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.hateoas.PagedModel.PageMetadata;\n+import org.springframework.hateoas.server.RepresentationModelAssembler;\n+import org.springframework.stereotype.Component;\n+\n+import pro.taskana.rest.Mapping;\n+import pro.taskana.rest.resource.links.PageLinks;\n+import pro.taskana.workbasket.api.WorkbasketService;\n+import pro.taskana.workbasket.api.models.WorkbasketSummary;\n+import pro.taskana.workbasket.internal.models.WorkbasketImpl;\n+\n+/**\n+ * EntityModel assembler for {@link WorkbasketSummaryRepresentationModel}.\n+ */\n+@SuppressWarnings(\"checkstyle:LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg2MzQ0OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketSummaryRepresentationModelAssembler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0NDo0M1rOGTFQvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0NDo0M1rOGTFQvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MjMzMw==", "bodyText": "Do you remember why we marked this component as primary? I'm missing a comment here.\nOr better: Can you replace this annotation with a qualifier", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422662333", "createdAt": "2020-05-10T15:44:43Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/WorkbasketSummaryRepresentationModelAssembler.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package pro.taskana.rest.resource;\n+\n+import static pro.taskana.rest.resource.TaskanaPagedModelKeys.WORKBASKETS;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Primary;\n+import org.springframework.hateoas.PagedModel.PageMetadata;\n+import org.springframework.hateoas.server.RepresentationModelAssembler;\n+import org.springframework.stereotype.Component;\n+\n+import pro.taskana.rest.Mapping;\n+import pro.taskana.rest.resource.links.PageLinks;\n+import pro.taskana.workbasket.api.WorkbasketService;\n+import pro.taskana.workbasket.api.models.WorkbasketSummary;\n+import pro.taskana.workbasket.internal.models.WorkbasketImpl;\n+\n+/**\n+ * EntityModel assembler for {@link WorkbasketSummaryRepresentationModel}.\n+ */\n+@SuppressWarnings(\"checkstyle:LineLength\")\n+@Component\n+@Primary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg2ODQ1OnYy", "diffSide": "LEFT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/ClassificationControllerRestDocumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0OToyNFrOGTFTIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0OToyNFrOGTFTIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2Mjk0NQ==", "bodyText": "Do we have a test verifying that our paging get's deserialized properly?", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422662945", "createdAt": "2020-05-10T15:49:24Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/ClassificationControllerRestDocumentation.java", "diffHunk": "@@ -87,11 +87,6 @@ void setUp() {\n           subsectionWithPath(\"classifications\")\n               .description(\"An Array of <<classification-subset, Classification-Subsets>>\"),\n           fieldWithPath(\"_links.self.href\").ignored(),\n-          fieldWithPath(\"page\").ignored(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg2ODk3OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskControllerRestDocumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0OTo1OVrOGTFTaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo0OTo1OVrOGTFTaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MzAxNw==", "bodyText": "please use classificationSummary", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422663017", "createdAt": "2020-05-10T15:49:59Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskControllerRestDocumentation.java", "diffHunk": "@@ -60,10 +60,11 @@ void setUp() {\n     taskFieldDescriptionsMap.put(\"priority\", \"The priority of the task\");\n     taskFieldDescriptionsMap.put(\"state\", \"he state of the task. See (...)\");\n     taskFieldDescriptionsMap.put(\n-        \"classificationSummaryResource\",\n+        \"classificationSummaryRepresentationModel\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg2OTQzOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskCommentControllerRestDocumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1MDozMVrOGTFTqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1MDozMVrOGTFTqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MzA4MQ==", "bodyText": "As mentioned above, please talk to @gitgoodjhe and find out if we can use taskComments in order to keep consistant with our field naming (which is camel case)", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422663081", "createdAt": "2020-05-10T15:50:31Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskCommentControllerRestDocumentation.java", "diffHunk": "@@ -82,7 +82,8 @@ void setUp() {\n \n     allTaskCommentsFieldDescriptors =\n         new FieldDescriptor[] {\n-          subsectionWithPath(\"task comments\").description(\"An Array of task comments\")\n+          subsectionWithPath(\"task_comments\").description(\"An Array of task comments\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg2OTY5OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskControllerRestDocumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1MDo0NlrOGTFTzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1MDo0NlrOGTFTzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MzExNg==", "bodyText": "please use workbasketSummary", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422663116", "createdAt": "2020-05-10T15:50:46Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskControllerRestDocumentation.java", "diffHunk": "@@ -60,10 +60,11 @@ void setUp() {\n     taskFieldDescriptionsMap.put(\"priority\", \"The priority of the task\");\n     taskFieldDescriptionsMap.put(\"state\", \"he state of the task. See (...)\");\n     taskFieldDescriptionsMap.put(\n-        \"classificationSummaryResource\",\n+        \"classificationSummaryRepresentationModel\",\n         \"The <<classification-subset, Classification>> of the task\");\n     taskFieldDescriptionsMap.put(\n-        \"workbasketSummaryResource\", \"The <<workbasket-subset, Workbasket>> of the task\");\n+        \"workbasketSummaryRepresentationModel\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg3MDA3OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskControllerRestDocumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1MTowMlrOGTFT-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1MTowMlrOGTFT-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MzE2MA==", "bodyText": "please use classificationSummary", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422663160", "createdAt": "2020-05-10T15:51:02Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskControllerRestDocumentation.java", "diffHunk": "@@ -145,10 +141,11 @@ void setUp() {\n               .description(\"Some custom Note\"),\n           fieldWithPath(\"priority\").description(taskFieldDescriptionsMap.get(\"priority\")),\n           fieldWithPath(\"state\").description(taskFieldDescriptionsMap.get(\"state\")),\n-          subsectionWithPath(\"classificationSummaryResource\")\n-              .description(taskFieldDescriptionsMap.get(\"classificationSummaryResource\")),\n-          subsectionWithPath(\"workbasketSummaryResource\")\n-              .description(taskFieldDescriptionsMap.get(\"workbasketSummaryResource\")),\n+          subsectionWithPath(\"classificationSummaryRepresentationModel\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg3MDM4OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskControllerRestDocumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1MToyNlrOGTFUIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1MToyNlrOGTFUIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MzIwMQ==", "bodyText": "please use workbasketSummary", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422663201", "createdAt": "2020-05-10T15:51:26Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskControllerRestDocumentation.java", "diffHunk": "@@ -145,10 +141,11 @@ void setUp() {\n               .description(\"Some custom Note\"),\n           fieldWithPath(\"priority\").description(taskFieldDescriptionsMap.get(\"priority\")),\n           fieldWithPath(\"state\").description(taskFieldDescriptionsMap.get(\"state\")),\n-          subsectionWithPath(\"classificationSummaryResource\")\n-              .description(taskFieldDescriptionsMap.get(\"classificationSummaryResource\")),\n-          subsectionWithPath(\"workbasketSummaryResource\")\n-              .description(taskFieldDescriptionsMap.get(\"workbasketSummaryResource\")),\n+          subsectionWithPath(\"classificationSummaryRepresentationModel\")\n+              .description(\n+                  taskFieldDescriptionsMap.get(\"classificationSummaryRepresentationModel\")),\n+          subsectionWithPath(\"workbasketSummaryRepresentationModel\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg3MTQ1OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/WorkbasketControllerRestDocumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1MjozOVrOGTFUoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTo1Mjo0OFrOGTFUvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MzMyOQ==", "bodyText": "I am still not sure weather I like this change or not ..", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422663329", "createdAt": "2020-05-10T15:52:39Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/WorkbasketControllerRestDocumentation.java", "diffHunk": "@@ -72,55 +74,52 @@ void setUp() {\n         \"_links.removeDistributionTargets.href\",\n         \"Link to remove all distribution-targets from the workbasket\");\n     workbasketFieldDescriptionsMap.put(\n-        \"_links.accessItems.href\", \"The Access-Items of the workbasket\");\n+        \"_links.\" + PROPERTY_NAME + \".href\", \"The Access-Items of the workbasket\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MzM1Nw==", "bodyText": "Let's keep it for now", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422663357", "createdAt": "2020-05-10T15:52:48Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/WorkbasketControllerRestDocumentation.java", "diffHunk": "@@ -72,55 +74,52 @@ void setUp() {\n         \"_links.removeDistributionTargets.href\",\n         \"Link to remove all distribution-targets from the workbasket\");\n     workbasketFieldDescriptionsMap.put(\n-        \"_links.accessItems.href\", \"The Access-Items of the workbasket\");\n+        \"_links.\" + PROPERTY_NAME + \".href\", \"The Access-Items of the workbasket\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MzMyOQ=="}, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg4MzE4OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNjowNDo0OVrOGTFaVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNjowNDo0OVrOGTFaVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2NDc5MA==", "bodyText": "Please don't do this.\nAdd assertThat(response.getBody()).isNotNull()\nYou have done this 16 times. Please replace this everywhere.", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422664790", "createdAt": "2020-05-10T16:04:49Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java", "diffHunk": "@@ -421,20 +427,20 @@ void testThrowsExceptionIfInvalidFilterIsUsed() {\n   void testGetLastPageSortedByPorValue() {\n \n     HttpEntity<String> request = new HttpEntity<>(restHelper.getHeadersAdmin());\n-    ResponseEntity<TaskSummaryListResource> response =\n+    ResponseEntity<TaskanaPagedModel<TaskSummaryRepresentationModel>> response =\n         template.exchange(\n             restHelper.toUrl(Mapping.URL_TASKS)\n                 + \"?state=READY,CLAIMED&sort-by=por.value&order=desc&page=15&page-size=5\",\n             HttpMethod.GET,\n             request,\n-            ParameterizedTypeReference.forType(TaskSummaryListResource.class));\n-    assertThat(response.getBody().getContent()).hasSize(1);\n+            TASK_SUMMARY_PAGE_MODEL_TYPE);\n+    assertThat(Objects.requireNonNull(response.getBody()).getContent()).hasSize(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 448}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg4OTkzOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/WorkbasketControllerIntTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNjoxMjowOFrOGTFdjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNjoxMjowOFrOGTFdjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2NTYxNQ==", "bodyText": "ACCESS_ITEM please :) two words", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422665615", "createdAt": "2020-05-10T16:12:08Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/WorkbasketControllerIntTest.java", "diffHunk": "@@ -21,17 +21,26 @@\n \n import pro.taskana.RestHelper;\n import pro.taskana.TaskanaSpringBootTest;\n-import pro.taskana.rest.resource.DistributionTargetListResource;\n-import pro.taskana.rest.resource.DistributionTargetResource;\n-import pro.taskana.rest.resource.WorkbasketAccessItemListResource;\n-import pro.taskana.rest.resource.WorkbasketResource;\n-import pro.taskana.rest.resource.WorkbasketSummaryListResource;\n+import pro.taskana.rest.resource.TaskanaPagedModel;\n+import pro.taskana.rest.resource.WorkbasketAccessItemRepresentationModel;\n+import pro.taskana.rest.resource.WorkbasketRepresentationModel;\n+import pro.taskana.rest.resource.WorkbasketSummaryRepresentationModel;\n import pro.taskana.workbasket.api.WorkbasketType;\n \n /** Test WorkbasketController. */\n @TaskanaSpringBootTest\n class WorkbasketControllerIntTest {\n \n+  private static final ParameterizedTypeReference<\n+          TaskanaPagedModel<WorkbasketAccessItemRepresentationModel>>\n+      WORKBASKET_ACCESSITEM_PAGE_MODEL_TYPE =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg5NDkyOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/resource/TaskRepresentationModelAssemberTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNjoxNzo0NlrOGTFf5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNjoxNzo0NlrOGTFf5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2NjIxMw==", "bodyText": "Can you please use an autowired constructor?", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422666213", "createdAt": "2020-05-10T16:17:46Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/resource/TaskRepresentationModelAssemberTest.java", "diffHunk": "@@ -24,30 +24,32 @@\n import pro.taskana.workbasket.api.WorkbasketService;\n import pro.taskana.workbasket.api.models.Workbasket;\n \n-/** Test for {@link TaskResourceAssembler}. */\n+/** Test for {@link TaskRepresentationModelAssembler}. */\n @TaskanaSpringBootTest\n-class TaskResourceAssemberTest {\n+class TaskRepresentationModelAssemberTest {\n \n   @Autowired TaskService taskService;\n   @Autowired WorkbasketService workbasketService;\n   @Autowired ClassificationService classificationService;\n-  @Autowired TaskResourceAssembler taskResourceAssembler;\n+  @Autowired TaskRepresentationModelAssembler taskRepresentationModelAssembler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg5NTcwOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/resource/TaskSummaryAssemblerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNjoxODoyNFrOGTFgQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNjoxODoyNFrOGTFgQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2NjMwNg==", "bodyText": "Can you please use an autowired constructor?", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r422666306", "createdAt": "2020-05-10T16:18:24Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/resource/TaskSummaryAssemblerTest.java", "diffHunk": "@@ -24,7 +24,7 @@\n class TaskSummaryAssemblerTest {\n \n   @Autowired TaskService taskService;\n-  @Autowired TaskSummaryResourceAssembler taskSummaryResourceAssembler;\n+  @Autowired TaskSummaryRepresentationModelAssembler taskSummaryRepresentationModelAssembler;\n   @Autowired WorkbasketService workbasketService;\n   @Autowired ClassificationService classificationService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329f7aaae49aa6392c1c2f336345d9cbe007b9d2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc0ODcxOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/jobs/TaskCleanupJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxMDoxN1rOGUkOSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxMDoxN1rOGUkOSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIxODE4Ng==", "bodyText": "Can you replace this variable with a static import?", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424218186", "createdAt": "2020-05-13T07:10:17Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/jobs/TaskCleanupJob.java", "diffHunk": "@@ -23,19 +23,21 @@\n import pro.taskana.common.internal.util.LogSanitizer;\n import pro.taskana.task.api.models.TaskSummary;\n \n-/** Job to cleanup completed tasks after a period of time. */\n+/**\n+ * Job to cleanup completed tasks after a period of time.\n+ */\n public class TaskCleanupJob extends AbstractTaskanaJob {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(TaskCleanupJob.class);\n \n-  private static BaseQuery.SortDirection asc = BaseQuery.SortDirection.ASCENDING;\n+  private static final BaseQuery.SortDirection ASCENDING = BaseQuery.SortDirection.ASCENDING;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c550f1f54bfb1a5c99f4127bc303f4c7d16a9f0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc1MTUwOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/jobs/WorkbasketCleanupJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxMToxNlrOGUkQJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxMToxNlrOGUkQJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIxODY2Mw==", "bodyText": "Why are you additionally casting from Integer to int? Autounboxing should do this automatically", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424218663", "createdAt": "2020-05-13T07:11:16Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/jobs/WorkbasketCleanupJob.java", "diffHunk": "@@ -76,31 +76,27 @@ public static void initializeSchedule(TaskanaEngine taskanaEngine) {\n   }\n \n   private List<String> getWorkbasketsMarkedForDeletion() {\n-    List<String> workbasketList =\n-        taskanaEngineImpl\n-            .getWorkbasketService()\n-            .createWorkbasketQuery()\n-            .markedForDeletion(true)\n-            .listValues(WorkbasketQueryColumnName.ID, BaseQuery.SortDirection.ASCENDING);\n \n-    return workbasketList;\n+    return taskanaEngineImpl\n+        .getWorkbasketService()\n+        .createWorkbasketQuery()\n+        .markedForDeletion(true)\n+        .listValues(WorkbasketQueryColumnName.ID, BaseQuery.SortDirection.ASCENDING);\n   }\n \n   private int deleteWorkbasketsTransactionally(List<String> workbasketsToBeDeleted) {\n     int deletedWorkbasketsCount = 0;\n     if (txProvider != null) {\n-      int count =\n-          (Integer)\n-              txProvider.executeInTransaction(\n-                  () -> {\n-                    try {\n-                      return deleteWorkbaskets(workbasketsToBeDeleted);\n-                    } catch (Exception e) {\n-                      LOGGER.warn(\"Could not delete workbaskets.\", e);\n-                      return 0;\n-                    }\n-                  });\n-      return count;\n+      return (int) (Integer)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c550f1f54bfb1a5c99f4127bc303f4c7d16a9f0"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc2NzMwOnYy", "diffSide": "LEFT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskCommentRepresentationModelAssembler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxNjozMVrOGUkaHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxNjozMVrOGUkaHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyMTIxNA==", "bodyText": "Personally I'd keep the enum name with an underscore", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424221214", "createdAt": "2020-05-13T07:16:31Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskCommentRepresentationModelAssembler.java", "diffHunk": "@@ -81,6 +76,6 @@ public TaskComment toEntityModel(TaskCommentRepresentationModel taskCommentRepre\n                .collect(\n                    Collectors.collectingAndThen(\n                        Collectors.toList(),\n-                       list -> new TaskanaPagedModel<>(TASK_COMMENTS, list, pageMetadata)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c550f1f54bfb1a5c99f4127bc303f4c7d16a9f0"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc3Mjk5OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskanaPagedModelKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxODoyN1rOGUkdzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxODoyN1rOGUkdzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyMjE1OA==", "bodyText": "as mentionned above: I prefer TASK_COMMENTS", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424222158", "createdAt": "2020-05-13T07:18:27Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskanaPagedModelKeys.java", "diffHunk": "@@ -11,7 +11,7 @@\n   CLASSIFICATIONS(\"classifications\"),\n   DISTRIBUTIONTARGETS(\"distributionTargets\"),\n   TASKS(\"tasks\"),\n-  TASK_COMMENTS(\"task_comments\"),\n+  TASKCOMMENTS(\"taskComments\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c550f1f54bfb1a5c99f4127bc303f4c7d16a9f0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc3Mzk0OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskanaPagedModelKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxODo0NVrOGUkeWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxODo0NVrOGUkeWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyMjI5OA==", "bodyText": "DISTRIBUTION_TARGETS would be a better name. (personal preference)", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424222298", "createdAt": "2020-05-13T07:18:45Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/rest/resource/TaskanaPagedModelKeys.java", "diffHunk": "@@ -11,7 +11,7 @@\n   CLASSIFICATIONS(\"classifications\"),\n   DISTRIBUTIONTARGETS(\"distributionTargets\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c550f1f54bfb1a5c99f4127bc303f4c7d16a9f0"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc3ODAwOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/ClassificationControllerRestDocumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyMDowNVrOGUkg9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyMDowNVrOGUkg9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyMjk2NQ==", "bodyText": "why did you add this?", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424222965", "createdAt": "2020-05-13T07:20:05Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/ClassificationControllerRestDocumentation.java", "diffHunk": "@@ -248,10 +250,11 @@ void setUp() {\n \n   @Test\n   void getAllClassificationsDocTest() throws Exception {\n+    classificationFieldDescriptionsMap.put(\"_links.self.href\", \"link to self\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c550f1f54bfb1a5c99f4127bc303f4c7d16a9f0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc4NTMzOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/WorkbasketAccessItemControllerIntTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyMjoxOVrOGUklXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyMjoxOVrOGUklXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNDA5Mw==", "bodyText": "remove this please", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424224093", "createdAt": "2020-05-13T07:22:19Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/WorkbasketAccessItemControllerIntTest.java", "diffHunk": "@@ -47,20 +47,23 @@ void testGetAllWorkbasketAccessItems() {\n             restHelper.toUrl(Mapping.URL_WORKBASKETACCESSITEMS),\n             HttpMethod.GET,\n             restHelper.defaultRequest(),\n-            WORKBASKET_ACCESSITEM_PAGE_MODEL_TYPE);\n+            WORKBASKET_ACCESS_ITEM_PAGE_MODEL_TYPE);\n+    assertThat(response.getBody()).isNotNull();\n     assertThat(response.getBody().getLink(IanaLinkRelations.SELF)).isNotNull();\n   }\n \n   @Test\n   void testGetWorkbasketAccessItemsKeepingFilters() {\n-    String parameters = \"?sort-by=workbasket-key&order=asc&page=1&page-size=9&access-ids=user_1_1\";\n+    String parameters = \"?sort-by=workbasket-key&order=asc&page-size=9&access-ids=user_1_1&page=1\";\n     ResponseEntity<TaskanaPagedModel<WorkbasketAccessItemRepresentationModel>> response =\n         template.exchange(\n             restHelper.toUrl(Mapping.URL_WORKBASKETACCESSITEMS) + parameters,\n             HttpMethod.GET,\n             restHelper.defaultRequest(),\n-            WORKBASKET_ACCESSITEM_PAGE_MODEL_TYPE);\n+            WORKBASKET_ACCESS_ITEM_PAGE_MODEL_TYPE);\n+    assertThat(response.getBody()).isNotNull();\n     assertThat(response.getBody().getLink(IanaLinkRelations.SELF)).isNotNull();\n+    System.out.println(response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c550f1f54bfb1a5c99f4127bc303f4c7d16a9f0"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc4NjMyOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/WorkbasketAccessItemControllerIntTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyMjozNlrOGUkl9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyMjozNlrOGUkl9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNDI0Nw==", "bodyText": "remove this please", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424224247", "createdAt": "2020-05-13T07:22:36Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/WorkbasketAccessItemControllerIntTest.java", "diffHunk": "@@ -90,17 +91,19 @@ void testThrowsExceptionIfInvalidFilterIsUsed() {\n \n   @Test\n   void testGetSecondPageSortedByWorkbasketKey() {\n-    String parameters = \"?sort-by=workbasket-key&order=asc&page=2&page-size=9&access-ids=user_1_1\";\n+    String parameters = \"?sort-by=workbasket-key&order=asc&page-size=9&access-ids=user_1_1&page=1\";\n     ResponseEntity<TaskanaPagedModel<WorkbasketAccessItemRepresentationModel>> response =\n         template.exchange(\n             restHelper.toUrl(Mapping.URL_WORKBASKETACCESSITEMS) + parameters,\n             HttpMethod.GET,\n             restHelper.defaultRequest(),\n-            WORKBASKET_ACCESSITEM_PAGE_MODEL_TYPE);\n+            WORKBASKET_ACCESS_ITEM_PAGE_MODEL_TYPE);\n+    assertThat(response.getBody()).isNotNull();\n     assertThat(response.getBody().getContent()).hasSize(1);\n     assertThat(response.getBody().getContent().iterator().next().getAccessId())\n         .isEqualTo(\"user_1_1\");\n     assertThat(response.getBody().getLink(IanaLinkRelations.SELF)).isNotNull();\n+    System.out.println(response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c550f1f54bfb1a5c99f4127bc303f4c7d16a9f0"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc5MzUwOnYy", "diffSide": "LEFT", "path": "web/package-lock.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyNDo0NlrOGUkqlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyNDo0NlrOGUkqlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNTQzMA==", "bodyText": "why did you remove this?", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424225430", "createdAt": "2020-05-13T07:24:46Z", "author": {"login": "mustaphazorgati"}, "path": "web/package-lock.json", "diffHunk": "@@ -7017,11 +7017,6 @@\n       \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.3.tgz\",\n       \"integrity\": \"sha512-a30VEBm4PEdx1dRB7MFK7BejejvCvBronbLjht+sHuGYj8PHs7M/5Z+rt5lw551vZ7yfTCj4Vuyy3mSJytDWRQ==\"\n     },\n-    \"hammerjs\": {\n-      \"version\": \"2.0.8\",\n-      \"resolved\": \"https://registry.npmjs.org/hammerjs/-/hammerjs-2.0.8.tgz\",\n-      \"integrity\": \"sha1-BO93hiz/K7edMPdpIJWTAiK/YPE=\"\n-    },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c550f1f54bfb1a5c99f4127bc303f4c7d16a9f0"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDc4NDM5OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/jobs/TaskCleanupJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozMTowMlrOGVCblw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozMTowMlrOGVCblw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxMzExMQ==", "bodyText": "That's not what I meant.. But it's fine.. no need for further refactoring", "url": "https://github.com/Taskana/taskana/pull/1045#discussion_r424713111", "createdAt": "2020-05-13T20:31:02Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/jobs/TaskCleanupJob.java", "diffHunk": "@@ -30,7 +30,7 @@\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(TaskCleanupJob.class);\n \n-  private static final BaseQuery.SortDirection ASCENDING = BaseQuery.SortDirection.ASCENDING;\n+  private static final SortDirection ASCENDING = SortDirection.ASCENDING;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7db062636f7168020a615c193ec50b0ae22aae"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4358, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}