{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NjMyNzE4", "number": 1008, "title": "TSK-1179", "bodyText": "", "createdAt": "2020-04-06T13:06:56Z", "url": "https://github.com/Taskana/taskana/pull/1008", "merged": true, "mergeCommit": {"oid": "d9de7242c6311c9f47199e7335e12fb6e19cd990"}, "closed": true, "closedAt": "2020-04-09T12:03:55Z", "author": {"login": "gitgoodjhe"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcU-V4fgH2gAyMzk5NjMyNzE4OmEwMzBhYWI2MTEyNjFkOTY3Y2MxMjBlMDAyOTM1NGE0ZDYxYmQ5NGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcV7SiGAFqTM5MDczMDQxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a030aab611261d967cc120e0029354a4d61bd94b", "author": {"user": {"login": "gitgoodjhe", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/a030aab611261d967cc120e0029354a4d61bd94b", "committedDate": "2020-04-06T13:02:35Z", "message": "TSK-1179"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NzcwMDI5", "url": "https://github.com/Taskana/taskana/pull/1008#pullrequestreview-388770029", "createdAt": "2020-04-07T04:09:36Z", "commit": {"oid": "a030aab611261d967cc120e0029354a4d61bd94b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af", "author": {"user": {"login": "gitgoodjhe", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af", "committedDate": "2020-04-09T09:38:59Z", "message": "fixed DB2 ordering issues in QueryTaskWithAttachmentAccTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNzE2MTM5", "url": "https://github.com/Taskana/taskana/pull/1008#pullrequestreview-390716139", "createdAt": "2020-04-09T11:39:04Z", "commit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozOTowNFrOGDVCtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTo0MDo0NFrOGDVFnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0MzY3MQ==", "bodyText": "Why are you sorting the list?", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406143671", "createdAt": "2020-04-09T11:39:04Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -73,17 +75,23 @@ void testIfNewTaskHasEmptyAttachmentList() {\n       userName = \"user_1_1\",\n       groupNames = {\"group_1\"})\n   @Test\n-  void testIfAttachmentSummariesAreCorrectUsingTaskQueryAndGetTaskById()\n+  void should_ConfirmIfAttachmentSummariesAreCorrect_When_UsingTaskQueryAndGetTaskById()\n       throws TaskNotFoundException, NotAuthorizedException {\n     TaskService taskService = taskanaEngine.getTaskService();\n     // find Task with ID TKI:00...00\n     List<TaskSummary> tasks =\n         taskService.createTaskQuery().idIn(\"TKI:000000000000000000000000000000000000\").list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0Mzc5OQ==", "bodyText": "why are you sorting the list?", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406143799", "createdAt": "2020-04-09T11:39:17Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -73,17 +75,23 @@ void testIfNewTaskHasEmptyAttachmentList() {\n       userName = \"user_1_1\",\n       groupNames = {\"group_1\"})\n   @Test\n-  void testIfAttachmentSummariesAreCorrectUsingTaskQueryAndGetTaskById()\n+  void should_ConfirmIfAttachmentSummariesAreCorrect_When_UsingTaskQueryAndGetTaskById()\n       throws TaskNotFoundException, NotAuthorizedException {\n     TaskService taskService = taskanaEngine.getTaskService();\n     // find Task with ID TKI:00...00\n     List<TaskSummary> tasks =\n         taskService.createTaskQuery().idIn(\"TKI:000000000000000000000000000000000000\").list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))\n+            .collect(Collectors.toList());\n \n     Task originalTask = taskService.getTask(\"TKI:000000000000000000000000000000000000\");\n-    List<Attachment> originalAttachments = originalTask.getAttachments();\n+    List<Attachment> originalAttachments =\n+        originalTask.getAttachments().stream()\n+            .sorted(Comparator.comparing(Attachment::getId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0NDM0MQ==", "bodyText": "again, why sorting?", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406144341", "createdAt": "2020-04-09T11:40:32Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -132,10 +140,16 @@ void testIfAttachmentSummariesAreCorrect()\n             .customAttributeIn(\"1\", \"custom1\")\n             .list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0NDQxNQ==", "bodyText": "why sorting?", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406144415", "createdAt": "2020-04-09T11:40:44Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -132,10 +140,16 @@ void testIfAttachmentSummariesAreCorrect()\n             .customAttributeIn(\"1\", \"custom1\")\n             .list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))\n+            .collect(Collectors.toList());\n \n     Task originalTask = taskService.getTask(\"TKI:000000000000000000000000000000000000\");\n-    List<Attachment> originalAttachments = originalTask.getAttachments();\n+    List<Attachment> originalAttachments =\n+        originalTask.getAttachments().stream()\n+            .sorted(Comparator.comparing(Attachment::getId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNzMwNDE1", "url": "https://github.com/Taskana/taskana/pull/1008#pullrequestreview-390730415", "createdAt": "2020-04-09T12:03:08Z", "commit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4526, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}