{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NTI5MDc5", "number": 1022, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoxOTo1MVrOD0jQkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDozNjowMVrOD0jfcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMwMjI0OnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/access-items-management/access-items-management.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoxOTo1MVrOGJio1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjoyODo1NlrOGJlgKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY1Nzg3Ng==", "bodyText": "can we replace the this. from the replacement?", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412657876", "createdAt": "2020-04-22T04:19:51Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.ts", "diffHunk": "@@ -163,18 +161,15 @@ export class AccessItemsManagementComponent implements OnInit, OnDestroy {\n         // new Key: ALERT_TYPES.SUCCESS_ALERT\n         response => {\n           this.requestInProgressService.setRequestInProgress(false);\n-          this.alertService.triggerAlert(\n-            new AlertModel(\n-              AlertType.SUCCESS,\n-              `${this.accessIdSelected\n-              } was removed successfully`\n-            )\n+          this.notificationsService.triggerAlert(\n+            NOTIFICATION_TYPES.SUCCESS_ALERT, new Map<string, string>([['this.accessIdSelected', this.accessIdSelected]])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwNDgwOQ==", "bodyText": "done", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412704809", "createdAt": "2020-04-22T06:28:56Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.ts", "diffHunk": "@@ -163,18 +161,15 @@ export class AccessItemsManagementComponent implements OnInit, OnDestroy {\n         // new Key: ALERT_TYPES.SUCCESS_ALERT\n         response => {\n           this.requestInProgressService.setRequestInProgress(false);\n-          this.alertService.triggerAlert(\n-            new AlertModel(\n-              AlertType.SUCCESS,\n-              `${this.accessIdSelected\n-              } was removed successfully`\n-            )\n+          this.notificationsService.triggerAlert(\n+            NOTIFICATION_TYPES.SUCCESS_ALERT, new Map<string, string>([['this.accessIdSelected', this.accessIdSelected]])", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY1Nzg3Ng=="}, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMwNDMwOnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/classification-details/classification-details.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyMDozOVrOGJip4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyMDozOVrOGJip4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY1ODE0NA==", "bodyText": "this import necessary?", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412658144", "createdAt": "2020-04-22T04:20:39Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/administration/components/classification-details/classification-details.component.ts", "diffHunk": "@@ -26,9 +24,12 @@ import { ImportExportService } from 'app/administration/services/import-export.s\n import { map, take } from 'rxjs/operators';\n import { EngineConfigurationSelectors } from 'app/store/engine-configuration-store/engine-configuration.selectors';\n import { ClassificationSelectors } from 'app/store/classification-store/classification.selectors';\n-import { ERROR_TYPES } from '../../../shared/models/errors';\n-import { ErrorsService } from '../../../shared/services/errors/errors.service';\n-import { ClassificationCategoryImages, CustomField, getCustomFields } from '../../../shared/models/customisation';\n+import { log } from 'util';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMwOTU2OnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/workbasket-access-items/workbasket-access-items.component.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyMjo0MVrOGJislw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyMjo0MVrOGJislw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY1ODgzOQ==", "bodyText": "we are not calling it alert anymore ;)", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412658839", "createdAt": "2020-04-22T04:22:41Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/administration/components/workbasket-access-items/workbasket-access-items.component.spec.ts", "diffHunk": "@@ -115,15 +115,16 @@ describe('WorkbasketAccessItemsComponent', () => {\n     expect(debugElement.querySelectorAll('#table-access-items > tbody > tr').length).toBe(1);\n   });\n \n-  it('should show alert successfull after saving', async(() => {\n+  it('should show success alert after saving', async(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMxNjUzOnYy", "diffSide": "RIGHT", "path": "web/src/app/app.module.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyNTo0MVrOGJiwPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjoyOTo0NFrOGJlhiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY1OTc3Mw==", "bodyText": "For what is ModuleWithProviders used for?", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412659773", "createdAt": "2020-04-22T04:25:41Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/app.module.ts", "diffHunk": "@@ -2,7 +2,7 @@\n  * Modules\n  */\n import { BrowserModule } from '@angular/platform-browser';\n-import { APP_INITIALIZER, NgModule } from '@angular/core';\n+import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwNTE2Mw==", "bodyText": "This has been autoimported by Intelij and was a mistake\nHas been removed in the upcoming commit", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412705163", "createdAt": "2020-04-22T06:29:44Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/app.module.ts", "diffHunk": "@@ -2,7 +2,7 @@\n  * Modules\n  */\n import { BrowserModule } from '@angular/platform-browser';\n-import { APP_INITIALIZER, NgModule } from '@angular/core';\n+import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY1OTc3Mw=="}, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMxODc5OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/alert/alert.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyNjoyM1rOGJixXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyNjozOVrOGJixpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MDA2MA==", "bodyText": "you didn't cleanup here ;)", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412660060", "createdAt": "2020-04-22T04:26:23Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/components/alert/alert.component.html", "diffHunk": "@@ -2,8 +2,9 @@\n  role=\"alert\">\n \t<span id=\"alert-icon\" title=\"{{alert.type}}\" data-toggle=\"tooltip\" class=\"material-icons md-20\">{{alert.type ===\n \t\t'success'? 'done': (alert.type === 'danger'? 'error' :alert.type)}}</span>\n-\t<span id=\"alert-text\">{{alert.text}}</span>\n+\t<!--TODO: aufr\u00e4umen-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MDEzMg==", "bodyText": "or are we doing this sometimes later?", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412660132", "createdAt": "2020-04-22T04:26:39Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/components/alert/alert.component.html", "diffHunk": "@@ -2,8 +2,9 @@\n  role=\"alert\">\n \t<span id=\"alert-icon\" title=\"{{alert.type}}\" data-toggle=\"tooltip\" class=\"material-icons md-20\">{{alert.type ===\n \t\t'success'? 'done': (alert.type === 'danger'? 'error' :alert.type)}}</span>\n-\t<span id=\"alert-text\">{{alert.text}}</span>\n+\t<!--TODO: aufr\u00e4umen-->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MDA2MA=="}, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMyNDkxOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/models/alert-model.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyOToxNVrOGJi0qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyOToxNVrOGJi0qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MDkwNA==", "bodyText": "can you make this a constant within the component and not the model?", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412660904", "createdAt": "2020-04-22T04:29:15Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/alert-model.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+import { NOTIFICATION_TYPES, notifications } from './notifications';\n+import { Pair } from './pair';\n+\n+export class AlertModel {\n+  public readonly closingDelay = 2500;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMyNTUzOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/models/alert-model.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyOToyN1rOGJi09g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDoyOToyN1rOGJi09g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MDk4Mg==", "bodyText": "Can you remove this and all its usages?", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412660982", "createdAt": "2020-04-22T04:29:27Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/alert-model.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+import { NOTIFICATION_TYPES, notifications } from './notifications';\n+import { Pair } from './pair';\n+\n+export class AlertModel {\n+  public readonly closingDelay = 2500;\n+  public readonly autoClosing = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMzMDcyOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/models/notifications.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDozMTozOFrOGJi3ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjo0ODoyOVrOGJmG7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MTY5OQ==", "bodyText": "Generally I don't like that we have the this reference within the template. This may lead to some confustion for less technical people.\nWhat do you think of renaming e.g. this.workbasketId to workbasketId. Same applies for anything nested.", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412661699", "createdAt": "2020-04-22T04:31:38Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/notifications.ts", "diffHunk": "@@ -56,254 +56,255 @@ export enum ERROR_TYPES {\n   WARNING_ALERT_2,\n }\n \n-export const errors = new Map<ERROR_TYPES, Pair>([\n+export const notifications = new Map<NOTIFICATION_TYPES, Pair>([\n   // access-items-management.component.ts\n-  [ERROR_TYPES.FETCH_ERR, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR, new Pair(\n     'There was error while retrieving your access ids with groups.',\n     ''\n   )],\n   // access-items-management.component.ts\n-  [ERROR_TYPES.FETCH_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_2, new Pair(\n     'There was error while retrieving your access items ',\n     ''\n   )],\n   // access-items-management.component.ts\n-  [ERROR_TYPES.DELETE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.DELETE_ERR, new Pair(\n     'You can\\'t delete a group',\n     '',\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.CREATE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.CREATE_ERR, new Pair(\n     'There was an error creating a classification',\n     '',\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.REMOVE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.REMOVE_ERR, new Pair(\n     'There was error while removing your classification',\n     ''\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SAVE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR, new Pair(\n     'There was error while saving your classification',\n     ''\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SELECT_ERR, new Pair(\n+  [NOTIFICATION_TYPES.SELECT_ERR, new Pair(\n     'There is no classification selected',\n     'Please check if you are creating a classification'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.FILE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.FILE_ERR, new Pair(\n     'Wrong format',\n     'This file format is not allowed! Please use a .json file.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_1, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_1, new Pair(\n     'Import was not successful',\n     'Import was not successful, you have no access to apply this operation.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_2, new Pair(\n     'Import was not successful',\n     'Import was not successful, operation was not found.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_3, new Pair(\n     'Import was not successful',\n     'Import was not successful, operation has some conflicts.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_4, new Pair(\n     'Import was not successful',\n     'Import was not successful, maximum file size exceeded.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.UPLOAD_ERR, new Pair(\n+  [NOTIFICATION_TYPES.UPLOAD_ERR, new Pair(\n     'Upload failed',\n     `The upload didn't proceed sucessfully. \n     \\n Probably the uploaded file exceeded the maximum file size of 10 MB.`\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.FETCH_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_3, new Pair(\n     '',\n     'An error occurred while fetching the task'\n   )],\n   // workbasket-details.component\n-  [ERROR_TYPES.FETCH_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_4, new Pair(\n     'An error occurred while fetching the workbasket',\n     ''\n   )],\n   // access-items.component\n-  [ERROR_TYPES.SAVE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_2, new Pair(\n     'There was error while saving your workbasket\\'s access items',\n     ''\n   )],\n   // workbaskets-distribution-targets.component\n-  [ERROR_TYPES.SAVE_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_3, new Pair(\n     'There was error while saving your workbasket\\'s distribution targets',\n     '',\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.REMOVE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.REMOVE_ERR_2, new Pair(\n     'There was an error removing distribution target for {workbasketId}.',\n     '',\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SAVE_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_4, new Pair(\n     'There was error while saving your workbasket',\n     ''\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.CREATE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.CREATE_ERR_2, new Pair(\n     'There was an error creating a workbasket',\n     ''\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.MARK_ERR, new Pair(\n+  [NOTIFICATION_TYPES.MARK_ERR, new Pair(\n     'Workbasket was marked for deletion.',\n     'The Workbasket {workbasketId} still contains completed tasks and could not be deleted.'\n       + 'Instead is was marked for deletion and will be deleted automatically '\n       + 'as soon as the completed tasks are deleted from the database.'\n   )],\n   // domain.guard\n-  [ERROR_TYPES.FETCH_ERR_5, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_5, new Pair(\n     'There was an error, please contact with your administrator',\n     'There was an error getting Domains'\n   )],\n   // history.guard\n-  [ERROR_TYPES.FETCH_ERR_6, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_6, new Pair(\n     'There was an error, please contact with your administrator',\n     'There was an error getting history provider'\n   )],\n   // http-client-interceptor.service\n-  [ERROR_TYPES.ACCESS_ERR, new Pair(\n+  [NOTIFICATION_TYPES.ACCESS_ERR, new Pair(\n     'You have no access to this resource ',\n     ''\n   )],\n   // http-client-interceptor.service\n-  [ERROR_TYPES.GENERAL_ERR, new Pair(\n+  [NOTIFICATION_TYPES.GENERAL_ERR, new Pair(\n     'There was error, please contact with your administrator',\n     ''\n   )],\n   // spinner.component\n-  [ERROR_TYPES.TIMEOUT_ERR, new Pair(\n+  [NOTIFICATION_TYPES.TIMEOUT_ERR, new Pair(\n     'There was an error with your request, please make sure you have internet connection',\n     'Request time exceeded'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.FETCH_ERR_7, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_7, new Pair(\n     'An error occurred while fetching the task',\n     ''\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DELETE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.DELETE_ERR_2, new Pair(\n     'An error occurred while deleting the task',\n     ''\n   )],\n \n   // ALERTS\n \n   // access-items-management.component\n-  [ERROR_TYPES.SUCCESS_ALERT, new Pair(\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT, new Pair(\n     '',\n     '{this.accessIdSelected} was removed successfully'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_2, new Pair(\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_2, new Pair(\n     '',\n-    'Classification {classification.key} was saved successfully'\n+    'Classification {classification.key} was created successfully'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_3, new Pair(\n-    'Classification {this.classification.key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_3, new Pair(\n+    '',\n+    'Classification {this.classification.key} was saved successfully'\n   )],\n   // classification-details.component\n   // access-items.component\n   // workbasket.distribution-targets.component\n   // workbasket-information.component\n-  [ERROR_TYPES.INFO_ALERT, new Pair(\n-    'Reset edited fields',\n-    ''\n+  // taskdetails.component\n+  [NOTIFICATION_TYPES.INFO_ALERT, new Pair(\n+    '',\n+    'Reset edited fields'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_4, new Pair(\n-    'Classification {key} was removed successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_4, new Pair(\n+    '',\n+    'Classification {key} was removed successfully'\n   )],\n   // classification-list.component\n-  [ERROR_TYPES.SUCCESS_ALERT_5, new Pair(\n-    'Classification {key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_5, new Pair(\n+    '',\n+    'Classification {key} was moved successfully'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.SUCCESS_ALERT_6, new Pair(\n-    'Import was successful',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_6, new Pair(\n+    '',\n+    'Import was successful'\n   )],\n   // access-items.component\n-  [ERROR_TYPES.SUCCESS_ALERT_7, new Pair(\n-    'Workbasket {component.workbasket.key} Access items were saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_7, new Pair(\n+    '',\n+    'Workbasket {component.workbasket.key} Access items were saved successfully'\n   )],\n   // workbasket.distribution-targets.component\n-  [ERROR_TYPES.SUCCESS_ALERT_8, new Pair(\n-    'Workbasket {this.workbasket.name} Distribution targets were saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_8, new Pair(\n+    '',\n+    'Workbasket {this.workbasket.name} Distribution targets were saved successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_9, new Pair(\n-    'DistributionTarget for workbasketID {this.workbasket.workbasketId} was removed successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_9, new Pair(\n+    '',\n+    'DistributionTargets for workbasketID {this.workbasket.workbasketId} was removed successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_10, new Pair(\n-    'Workbasket {workbasketUpdated.key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_10, new Pair(\n+    '',\n+    'Workbasket {workbasketUpdated.key} was saved successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_11, new Pair(\n-    'Workbasket {workbasketUpdated.key} was created successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_11, new Pair(\n+    '',\n+    'Workbasket {workbasketUpdated.key} was created successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_12, new Pair(\n-    'The Workbasket {workbasketId} has been deleted.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_12, new Pair(\n+    '',\n+    'The Workbasket {workbasketId} has been deleted.'\n   )],\n   // forms-validator.service\n-  [ERROR_TYPES.WARNING_ALERT, new Pair(\n-    'There are some empty fields which are required.',\n-    ''\n+  [NOTIFICATION_TYPES.WARNING_ALERT, new Pair(\n+    '',\n+    'There are some empty fields which are required.'\n   )],\n   // forms-validator.service x2\n-  [ERROR_TYPES.WARNING_ALERT_2, new Pair(\n-    'The {responseOwner.field} introduced is not valid.',\n-    ''\n+  [NOTIFICATION_TYPES.WARNING_ALERT_2, new Pair(\n+    '',\n+    'The {responseOwner.field} introduced is not valid.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DANGER_ALERT, new Pair(\n-    'There was an error while updating.',\n-    ''\n+  [NOTIFICATION_TYPES.DANGER_ALERT, new Pair(\n+    '',\n+    'There was an error while updating.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.SUCCESS_ALERT_13, new Pair(\n-    'Task {this.currentId} was created successfully.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_13, new Pair(\n+    '',\n+    'Task {this.currentId} was created successfully.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.SUCCESS_ALERT_14, new Pair(\n-    'Updating was successful.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_14, new Pair(\n+    '',\n+    'Updating was successful.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DANGER_ALERT_2, new Pair(\n-    'There was an error while creating a new task.',\n-    ''\n+  [NOTIFICATION_TYPES.DANGER_ALERT_2, new Pair(\n+    '',\n+    'There was an error while creating a new task.'\n   )],\n   // task-master.component\n-  [ERROR_TYPES.INFO_ALERT_2, new Pair(\n-    'The selected Workbasket is empty!',\n-    ''\n+  [NOTIFICATION_TYPES.INFO_ALERT_2, new Pair(\n+    '',\n+    'The selected Workbasket is empty!'\n   )],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 349}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MTg1MA==", "bodyText": "responseOwner.field can also be reduced to owner", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412661850", "createdAt": "2020-04-22T04:32:10Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/notifications.ts", "diffHunk": "@@ -56,254 +56,255 @@ export enum ERROR_TYPES {\n   WARNING_ALERT_2,\n }\n \n-export const errors = new Map<ERROR_TYPES, Pair>([\n+export const notifications = new Map<NOTIFICATION_TYPES, Pair>([\n   // access-items-management.component.ts\n-  [ERROR_TYPES.FETCH_ERR, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR, new Pair(\n     'There was error while retrieving your access ids with groups.',\n     ''\n   )],\n   // access-items-management.component.ts\n-  [ERROR_TYPES.FETCH_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_2, new Pair(\n     'There was error while retrieving your access items ',\n     ''\n   )],\n   // access-items-management.component.ts\n-  [ERROR_TYPES.DELETE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.DELETE_ERR, new Pair(\n     'You can\\'t delete a group',\n     '',\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.CREATE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.CREATE_ERR, new Pair(\n     'There was an error creating a classification',\n     '',\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.REMOVE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.REMOVE_ERR, new Pair(\n     'There was error while removing your classification',\n     ''\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SAVE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR, new Pair(\n     'There was error while saving your classification',\n     ''\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SELECT_ERR, new Pair(\n+  [NOTIFICATION_TYPES.SELECT_ERR, new Pair(\n     'There is no classification selected',\n     'Please check if you are creating a classification'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.FILE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.FILE_ERR, new Pair(\n     'Wrong format',\n     'This file format is not allowed! Please use a .json file.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_1, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_1, new Pair(\n     'Import was not successful',\n     'Import was not successful, you have no access to apply this operation.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_2, new Pair(\n     'Import was not successful',\n     'Import was not successful, operation was not found.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_3, new Pair(\n     'Import was not successful',\n     'Import was not successful, operation has some conflicts.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_4, new Pair(\n     'Import was not successful',\n     'Import was not successful, maximum file size exceeded.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.UPLOAD_ERR, new Pair(\n+  [NOTIFICATION_TYPES.UPLOAD_ERR, new Pair(\n     'Upload failed',\n     `The upload didn't proceed sucessfully. \n     \\n Probably the uploaded file exceeded the maximum file size of 10 MB.`\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.FETCH_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_3, new Pair(\n     '',\n     'An error occurred while fetching the task'\n   )],\n   // workbasket-details.component\n-  [ERROR_TYPES.FETCH_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_4, new Pair(\n     'An error occurred while fetching the workbasket',\n     ''\n   )],\n   // access-items.component\n-  [ERROR_TYPES.SAVE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_2, new Pair(\n     'There was error while saving your workbasket\\'s access items',\n     ''\n   )],\n   // workbaskets-distribution-targets.component\n-  [ERROR_TYPES.SAVE_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_3, new Pair(\n     'There was error while saving your workbasket\\'s distribution targets',\n     '',\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.REMOVE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.REMOVE_ERR_2, new Pair(\n     'There was an error removing distribution target for {workbasketId}.',\n     '',\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SAVE_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_4, new Pair(\n     'There was error while saving your workbasket',\n     ''\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.CREATE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.CREATE_ERR_2, new Pair(\n     'There was an error creating a workbasket',\n     ''\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.MARK_ERR, new Pair(\n+  [NOTIFICATION_TYPES.MARK_ERR, new Pair(\n     'Workbasket was marked for deletion.',\n     'The Workbasket {workbasketId} still contains completed tasks and could not be deleted.'\n       + 'Instead is was marked for deletion and will be deleted automatically '\n       + 'as soon as the completed tasks are deleted from the database.'\n   )],\n   // domain.guard\n-  [ERROR_TYPES.FETCH_ERR_5, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_5, new Pair(\n     'There was an error, please contact with your administrator',\n     'There was an error getting Domains'\n   )],\n   // history.guard\n-  [ERROR_TYPES.FETCH_ERR_6, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_6, new Pair(\n     'There was an error, please contact with your administrator',\n     'There was an error getting history provider'\n   )],\n   // http-client-interceptor.service\n-  [ERROR_TYPES.ACCESS_ERR, new Pair(\n+  [NOTIFICATION_TYPES.ACCESS_ERR, new Pair(\n     'You have no access to this resource ',\n     ''\n   )],\n   // http-client-interceptor.service\n-  [ERROR_TYPES.GENERAL_ERR, new Pair(\n+  [NOTIFICATION_TYPES.GENERAL_ERR, new Pair(\n     'There was error, please contact with your administrator',\n     ''\n   )],\n   // spinner.component\n-  [ERROR_TYPES.TIMEOUT_ERR, new Pair(\n+  [NOTIFICATION_TYPES.TIMEOUT_ERR, new Pair(\n     'There was an error with your request, please make sure you have internet connection',\n     'Request time exceeded'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.FETCH_ERR_7, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_7, new Pair(\n     'An error occurred while fetching the task',\n     ''\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DELETE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.DELETE_ERR_2, new Pair(\n     'An error occurred while deleting the task',\n     ''\n   )],\n \n   // ALERTS\n \n   // access-items-management.component\n-  [ERROR_TYPES.SUCCESS_ALERT, new Pair(\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT, new Pair(\n     '',\n     '{this.accessIdSelected} was removed successfully'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_2, new Pair(\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_2, new Pair(\n     '',\n-    'Classification {classification.key} was saved successfully'\n+    'Classification {classification.key} was created successfully'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_3, new Pair(\n-    'Classification {this.classification.key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_3, new Pair(\n+    '',\n+    'Classification {this.classification.key} was saved successfully'\n   )],\n   // classification-details.component\n   // access-items.component\n   // workbasket.distribution-targets.component\n   // workbasket-information.component\n-  [ERROR_TYPES.INFO_ALERT, new Pair(\n-    'Reset edited fields',\n-    ''\n+  // taskdetails.component\n+  [NOTIFICATION_TYPES.INFO_ALERT, new Pair(\n+    '',\n+    'Reset edited fields'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_4, new Pair(\n-    'Classification {key} was removed successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_4, new Pair(\n+    '',\n+    'Classification {key} was removed successfully'\n   )],\n   // classification-list.component\n-  [ERROR_TYPES.SUCCESS_ALERT_5, new Pair(\n-    'Classification {key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_5, new Pair(\n+    '',\n+    'Classification {key} was moved successfully'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.SUCCESS_ALERT_6, new Pair(\n-    'Import was successful',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_6, new Pair(\n+    '',\n+    'Import was successful'\n   )],\n   // access-items.component\n-  [ERROR_TYPES.SUCCESS_ALERT_7, new Pair(\n-    'Workbasket {component.workbasket.key} Access items were saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_7, new Pair(\n+    '',\n+    'Workbasket {component.workbasket.key} Access items were saved successfully'\n   )],\n   // workbasket.distribution-targets.component\n-  [ERROR_TYPES.SUCCESS_ALERT_8, new Pair(\n-    'Workbasket {this.workbasket.name} Distribution targets were saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_8, new Pair(\n+    '',\n+    'Workbasket {this.workbasket.name} Distribution targets were saved successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_9, new Pair(\n-    'DistributionTarget for workbasketID {this.workbasket.workbasketId} was removed successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_9, new Pair(\n+    '',\n+    'DistributionTargets for workbasketID {this.workbasket.workbasketId} was removed successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_10, new Pair(\n-    'Workbasket {workbasketUpdated.key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_10, new Pair(\n+    '',\n+    'Workbasket {workbasketUpdated.key} was saved successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_11, new Pair(\n-    'Workbasket {workbasketUpdated.key} was created successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_11, new Pair(\n+    '',\n+    'Workbasket {workbasketUpdated.key} was created successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_12, new Pair(\n-    'The Workbasket {workbasketId} has been deleted.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_12, new Pair(\n+    '',\n+    'The Workbasket {workbasketId} has been deleted.'\n   )],\n   // forms-validator.service\n-  [ERROR_TYPES.WARNING_ALERT, new Pair(\n-    'There are some empty fields which are required.',\n-    ''\n+  [NOTIFICATION_TYPES.WARNING_ALERT, new Pair(\n+    '',\n+    'There are some empty fields which are required.'\n   )],\n   // forms-validator.service x2\n-  [ERROR_TYPES.WARNING_ALERT_2, new Pair(\n-    'The {responseOwner.field} introduced is not valid.',\n-    ''\n+  [NOTIFICATION_TYPES.WARNING_ALERT_2, new Pair(\n+    '',\n+    'The {responseOwner.field} introduced is not valid.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DANGER_ALERT, new Pair(\n-    'There was an error while updating.',\n-    ''\n+  [NOTIFICATION_TYPES.DANGER_ALERT, new Pair(\n+    '',\n+    'There was an error while updating.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.SUCCESS_ALERT_13, new Pair(\n-    'Task {this.currentId} was created successfully.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_13, new Pair(\n+    '',\n+    'Task {this.currentId} was created successfully.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.SUCCESS_ALERT_14, new Pair(\n-    'Updating was successful.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_14, new Pair(\n+    '',\n+    'Updating was successful.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DANGER_ALERT_2, new Pair(\n-    'There was an error while creating a new task.',\n-    ''\n+  [NOTIFICATION_TYPES.DANGER_ALERT_2, new Pair(\n+    '',\n+    'There was an error while creating a new task.'\n   )],\n   // task-master.component\n-  [ERROR_TYPES.INFO_ALERT_2, new Pair(\n-    'The selected Workbasket is empty!',\n-    ''\n+  [NOTIFICATION_TYPES.INFO_ALERT_2, new Pair(\n+    '',\n+    'The selected Workbasket is empty!'\n   )],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MTY5OQ=="}, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 349}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MTk1MQ==", "bodyText": "If you agree on doing this don't forget to replace all the replacement keys within the calling replacement maps", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412661951", "createdAt": "2020-04-22T04:32:33Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/notifications.ts", "diffHunk": "@@ -56,254 +56,255 @@ export enum ERROR_TYPES {\n   WARNING_ALERT_2,\n }\n \n-export const errors = new Map<ERROR_TYPES, Pair>([\n+export const notifications = new Map<NOTIFICATION_TYPES, Pair>([\n   // access-items-management.component.ts\n-  [ERROR_TYPES.FETCH_ERR, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR, new Pair(\n     'There was error while retrieving your access ids with groups.',\n     ''\n   )],\n   // access-items-management.component.ts\n-  [ERROR_TYPES.FETCH_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_2, new Pair(\n     'There was error while retrieving your access items ',\n     ''\n   )],\n   // access-items-management.component.ts\n-  [ERROR_TYPES.DELETE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.DELETE_ERR, new Pair(\n     'You can\\'t delete a group',\n     '',\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.CREATE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.CREATE_ERR, new Pair(\n     'There was an error creating a classification',\n     '',\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.REMOVE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.REMOVE_ERR, new Pair(\n     'There was error while removing your classification',\n     ''\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SAVE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR, new Pair(\n     'There was error while saving your classification',\n     ''\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SELECT_ERR, new Pair(\n+  [NOTIFICATION_TYPES.SELECT_ERR, new Pair(\n     'There is no classification selected',\n     'Please check if you are creating a classification'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.FILE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.FILE_ERR, new Pair(\n     'Wrong format',\n     'This file format is not allowed! Please use a .json file.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_1, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_1, new Pair(\n     'Import was not successful',\n     'Import was not successful, you have no access to apply this operation.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_2, new Pair(\n     'Import was not successful',\n     'Import was not successful, operation was not found.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_3, new Pair(\n     'Import was not successful',\n     'Import was not successful, operation has some conflicts.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_4, new Pair(\n     'Import was not successful',\n     'Import was not successful, maximum file size exceeded.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.UPLOAD_ERR, new Pair(\n+  [NOTIFICATION_TYPES.UPLOAD_ERR, new Pair(\n     'Upload failed',\n     `The upload didn't proceed sucessfully. \n     \\n Probably the uploaded file exceeded the maximum file size of 10 MB.`\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.FETCH_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_3, new Pair(\n     '',\n     'An error occurred while fetching the task'\n   )],\n   // workbasket-details.component\n-  [ERROR_TYPES.FETCH_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_4, new Pair(\n     'An error occurred while fetching the workbasket',\n     ''\n   )],\n   // access-items.component\n-  [ERROR_TYPES.SAVE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_2, new Pair(\n     'There was error while saving your workbasket\\'s access items',\n     ''\n   )],\n   // workbaskets-distribution-targets.component\n-  [ERROR_TYPES.SAVE_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_3, new Pair(\n     'There was error while saving your workbasket\\'s distribution targets',\n     '',\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.REMOVE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.REMOVE_ERR_2, new Pair(\n     'There was an error removing distribution target for {workbasketId}.',\n     '',\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SAVE_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_4, new Pair(\n     'There was error while saving your workbasket',\n     ''\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.CREATE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.CREATE_ERR_2, new Pair(\n     'There was an error creating a workbasket',\n     ''\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.MARK_ERR, new Pair(\n+  [NOTIFICATION_TYPES.MARK_ERR, new Pair(\n     'Workbasket was marked for deletion.',\n     'The Workbasket {workbasketId} still contains completed tasks and could not be deleted.'\n       + 'Instead is was marked for deletion and will be deleted automatically '\n       + 'as soon as the completed tasks are deleted from the database.'\n   )],\n   // domain.guard\n-  [ERROR_TYPES.FETCH_ERR_5, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_5, new Pair(\n     'There was an error, please contact with your administrator',\n     'There was an error getting Domains'\n   )],\n   // history.guard\n-  [ERROR_TYPES.FETCH_ERR_6, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_6, new Pair(\n     'There was an error, please contact with your administrator',\n     'There was an error getting history provider'\n   )],\n   // http-client-interceptor.service\n-  [ERROR_TYPES.ACCESS_ERR, new Pair(\n+  [NOTIFICATION_TYPES.ACCESS_ERR, new Pair(\n     'You have no access to this resource ',\n     ''\n   )],\n   // http-client-interceptor.service\n-  [ERROR_TYPES.GENERAL_ERR, new Pair(\n+  [NOTIFICATION_TYPES.GENERAL_ERR, new Pair(\n     'There was error, please contact with your administrator',\n     ''\n   )],\n   // spinner.component\n-  [ERROR_TYPES.TIMEOUT_ERR, new Pair(\n+  [NOTIFICATION_TYPES.TIMEOUT_ERR, new Pair(\n     'There was an error with your request, please make sure you have internet connection',\n     'Request time exceeded'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.FETCH_ERR_7, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_7, new Pair(\n     'An error occurred while fetching the task',\n     ''\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DELETE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.DELETE_ERR_2, new Pair(\n     'An error occurred while deleting the task',\n     ''\n   )],\n \n   // ALERTS\n \n   // access-items-management.component\n-  [ERROR_TYPES.SUCCESS_ALERT, new Pair(\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT, new Pair(\n     '',\n     '{this.accessIdSelected} was removed successfully'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_2, new Pair(\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_2, new Pair(\n     '',\n-    'Classification {classification.key} was saved successfully'\n+    'Classification {classification.key} was created successfully'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_3, new Pair(\n-    'Classification {this.classification.key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_3, new Pair(\n+    '',\n+    'Classification {this.classification.key} was saved successfully'\n   )],\n   // classification-details.component\n   // access-items.component\n   // workbasket.distribution-targets.component\n   // workbasket-information.component\n-  [ERROR_TYPES.INFO_ALERT, new Pair(\n-    'Reset edited fields',\n-    ''\n+  // taskdetails.component\n+  [NOTIFICATION_TYPES.INFO_ALERT, new Pair(\n+    '',\n+    'Reset edited fields'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_4, new Pair(\n-    'Classification {key} was removed successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_4, new Pair(\n+    '',\n+    'Classification {key} was removed successfully'\n   )],\n   // classification-list.component\n-  [ERROR_TYPES.SUCCESS_ALERT_5, new Pair(\n-    'Classification {key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_5, new Pair(\n+    '',\n+    'Classification {key} was moved successfully'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.SUCCESS_ALERT_6, new Pair(\n-    'Import was successful',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_6, new Pair(\n+    '',\n+    'Import was successful'\n   )],\n   // access-items.component\n-  [ERROR_TYPES.SUCCESS_ALERT_7, new Pair(\n-    'Workbasket {component.workbasket.key} Access items were saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_7, new Pair(\n+    '',\n+    'Workbasket {component.workbasket.key} Access items were saved successfully'\n   )],\n   // workbasket.distribution-targets.component\n-  [ERROR_TYPES.SUCCESS_ALERT_8, new Pair(\n-    'Workbasket {this.workbasket.name} Distribution targets were saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_8, new Pair(\n+    '',\n+    'Workbasket {this.workbasket.name} Distribution targets were saved successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_9, new Pair(\n-    'DistributionTarget for workbasketID {this.workbasket.workbasketId} was removed successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_9, new Pair(\n+    '',\n+    'DistributionTargets for workbasketID {this.workbasket.workbasketId} was removed successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_10, new Pair(\n-    'Workbasket {workbasketUpdated.key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_10, new Pair(\n+    '',\n+    'Workbasket {workbasketUpdated.key} was saved successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_11, new Pair(\n-    'Workbasket {workbasketUpdated.key} was created successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_11, new Pair(\n+    '',\n+    'Workbasket {workbasketUpdated.key} was created successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_12, new Pair(\n-    'The Workbasket {workbasketId} has been deleted.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_12, new Pair(\n+    '',\n+    'The Workbasket {workbasketId} has been deleted.'\n   )],\n   // forms-validator.service\n-  [ERROR_TYPES.WARNING_ALERT, new Pair(\n-    'There are some empty fields which are required.',\n-    ''\n+  [NOTIFICATION_TYPES.WARNING_ALERT, new Pair(\n+    '',\n+    'There are some empty fields which are required.'\n   )],\n   // forms-validator.service x2\n-  [ERROR_TYPES.WARNING_ALERT_2, new Pair(\n-    'The {responseOwner.field} introduced is not valid.',\n-    ''\n+  [NOTIFICATION_TYPES.WARNING_ALERT_2, new Pair(\n+    '',\n+    'The {responseOwner.field} introduced is not valid.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DANGER_ALERT, new Pair(\n-    'There was an error while updating.',\n-    ''\n+  [NOTIFICATION_TYPES.DANGER_ALERT, new Pair(\n+    '',\n+    'There was an error while updating.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.SUCCESS_ALERT_13, new Pair(\n-    'Task {this.currentId} was created successfully.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_13, new Pair(\n+    '',\n+    'Task {this.currentId} was created successfully.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.SUCCESS_ALERT_14, new Pair(\n-    'Updating was successful.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_14, new Pair(\n+    '',\n+    'Updating was successful.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DANGER_ALERT_2, new Pair(\n-    'There was an error while creating a new task.',\n-    ''\n+  [NOTIFICATION_TYPES.DANGER_ALERT_2, new Pair(\n+    '',\n+    'There was an error while creating a new task.'\n   )],\n   // task-master.component\n-  [ERROR_TYPES.INFO_ALERT_2, new Pair(\n-    'The selected Workbasket is empty!',\n-    ''\n+  [NOTIFICATION_TYPES.INFO_ALERT_2, new Pair(\n+    '',\n+    'The selected Workbasket is empty!'\n   )],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MTY5OQ=="}, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 349}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNDczMg==", "bodyText": "I knew this, but wanted to refactor this together with the entire NOTIFICATION_TYPES at a later time. The NOTIFICATION_TYPES should get split in MESSAGE_TYPES and ERROR_TYPES and renamed to more appropriate and specific names.\ne.g.: NOTIFICATION_TYPES.SUCCESS_ALERT -> MESSAGE_TYPES.SUCCESS_ACCESS_REMOVE\nI have replaced the keys for now.", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412714732", "createdAt": "2020-04-22T06:48:29Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/shared/models/notifications.ts", "diffHunk": "@@ -56,254 +56,255 @@ export enum ERROR_TYPES {\n   WARNING_ALERT_2,\n }\n \n-export const errors = new Map<ERROR_TYPES, Pair>([\n+export const notifications = new Map<NOTIFICATION_TYPES, Pair>([\n   // access-items-management.component.ts\n-  [ERROR_TYPES.FETCH_ERR, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR, new Pair(\n     'There was error while retrieving your access ids with groups.',\n     ''\n   )],\n   // access-items-management.component.ts\n-  [ERROR_TYPES.FETCH_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_2, new Pair(\n     'There was error while retrieving your access items ',\n     ''\n   )],\n   // access-items-management.component.ts\n-  [ERROR_TYPES.DELETE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.DELETE_ERR, new Pair(\n     'You can\\'t delete a group',\n     '',\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.CREATE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.CREATE_ERR, new Pair(\n     'There was an error creating a classification',\n     '',\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.REMOVE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.REMOVE_ERR, new Pair(\n     'There was error while removing your classification',\n     ''\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SAVE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR, new Pair(\n     'There was error while saving your classification',\n     ''\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SELECT_ERR, new Pair(\n+  [NOTIFICATION_TYPES.SELECT_ERR, new Pair(\n     'There is no classification selected',\n     'Please check if you are creating a classification'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.FILE_ERR, new Pair(\n+  [NOTIFICATION_TYPES.FILE_ERR, new Pair(\n     'Wrong format',\n     'This file format is not allowed! Please use a .json file.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_1, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_1, new Pair(\n     'Import was not successful',\n     'Import was not successful, you have no access to apply this operation.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_2, new Pair(\n     'Import was not successful',\n     'Import was not successful, operation was not found.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_3, new Pair(\n     'Import was not successful',\n     'Import was not successful, operation has some conflicts.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.IMPORT_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.IMPORT_ERR_4, new Pair(\n     'Import was not successful',\n     'Import was not successful, maximum file size exceeded.'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.UPLOAD_ERR, new Pair(\n+  [NOTIFICATION_TYPES.UPLOAD_ERR, new Pair(\n     'Upload failed',\n     `The upload didn't proceed sucessfully. \n     \\n Probably the uploaded file exceeded the maximum file size of 10 MB.`\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.FETCH_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_3, new Pair(\n     '',\n     'An error occurred while fetching the task'\n   )],\n   // workbasket-details.component\n-  [ERROR_TYPES.FETCH_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_4, new Pair(\n     'An error occurred while fetching the workbasket',\n     ''\n   )],\n   // access-items.component\n-  [ERROR_TYPES.SAVE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_2, new Pair(\n     'There was error while saving your workbasket\\'s access items',\n     ''\n   )],\n   // workbaskets-distribution-targets.component\n-  [ERROR_TYPES.SAVE_ERR_3, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_3, new Pair(\n     'There was error while saving your workbasket\\'s distribution targets',\n     '',\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.REMOVE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.REMOVE_ERR_2, new Pair(\n     'There was an error removing distribution target for {workbasketId}.',\n     '',\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SAVE_ERR_4, new Pair(\n+  [NOTIFICATION_TYPES.SAVE_ERR_4, new Pair(\n     'There was error while saving your workbasket',\n     ''\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.CREATE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.CREATE_ERR_2, new Pair(\n     'There was an error creating a workbasket',\n     ''\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.MARK_ERR, new Pair(\n+  [NOTIFICATION_TYPES.MARK_ERR, new Pair(\n     'Workbasket was marked for deletion.',\n     'The Workbasket {workbasketId} still contains completed tasks and could not be deleted.'\n       + 'Instead is was marked for deletion and will be deleted automatically '\n       + 'as soon as the completed tasks are deleted from the database.'\n   )],\n   // domain.guard\n-  [ERROR_TYPES.FETCH_ERR_5, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_5, new Pair(\n     'There was an error, please contact with your administrator',\n     'There was an error getting Domains'\n   )],\n   // history.guard\n-  [ERROR_TYPES.FETCH_ERR_6, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_6, new Pair(\n     'There was an error, please contact with your administrator',\n     'There was an error getting history provider'\n   )],\n   // http-client-interceptor.service\n-  [ERROR_TYPES.ACCESS_ERR, new Pair(\n+  [NOTIFICATION_TYPES.ACCESS_ERR, new Pair(\n     'You have no access to this resource ',\n     ''\n   )],\n   // http-client-interceptor.service\n-  [ERROR_TYPES.GENERAL_ERR, new Pair(\n+  [NOTIFICATION_TYPES.GENERAL_ERR, new Pair(\n     'There was error, please contact with your administrator',\n     ''\n   )],\n   // spinner.component\n-  [ERROR_TYPES.TIMEOUT_ERR, new Pair(\n+  [NOTIFICATION_TYPES.TIMEOUT_ERR, new Pair(\n     'There was an error with your request, please make sure you have internet connection',\n     'Request time exceeded'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.FETCH_ERR_7, new Pair(\n+  [NOTIFICATION_TYPES.FETCH_ERR_7, new Pair(\n     'An error occurred while fetching the task',\n     ''\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DELETE_ERR_2, new Pair(\n+  [NOTIFICATION_TYPES.DELETE_ERR_2, new Pair(\n     'An error occurred while deleting the task',\n     ''\n   )],\n \n   // ALERTS\n \n   // access-items-management.component\n-  [ERROR_TYPES.SUCCESS_ALERT, new Pair(\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT, new Pair(\n     '',\n     '{this.accessIdSelected} was removed successfully'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_2, new Pair(\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_2, new Pair(\n     '',\n-    'Classification {classification.key} was saved successfully'\n+    'Classification {classification.key} was created successfully'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_3, new Pair(\n-    'Classification {this.classification.key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_3, new Pair(\n+    '',\n+    'Classification {this.classification.key} was saved successfully'\n   )],\n   // classification-details.component\n   // access-items.component\n   // workbasket.distribution-targets.component\n   // workbasket-information.component\n-  [ERROR_TYPES.INFO_ALERT, new Pair(\n-    'Reset edited fields',\n-    ''\n+  // taskdetails.component\n+  [NOTIFICATION_TYPES.INFO_ALERT, new Pair(\n+    '',\n+    'Reset edited fields'\n   )],\n   // classification-details.component\n-  [ERROR_TYPES.SUCCESS_ALERT_4, new Pair(\n-    'Classification {key} was removed successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_4, new Pair(\n+    '',\n+    'Classification {key} was removed successfully'\n   )],\n   // classification-list.component\n-  [ERROR_TYPES.SUCCESS_ALERT_5, new Pair(\n-    'Classification {key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_5, new Pair(\n+    '',\n+    'Classification {key} was moved successfully'\n   )],\n   // import-export.component\n-  [ERROR_TYPES.SUCCESS_ALERT_6, new Pair(\n-    'Import was successful',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_6, new Pair(\n+    '',\n+    'Import was successful'\n   )],\n   // access-items.component\n-  [ERROR_TYPES.SUCCESS_ALERT_7, new Pair(\n-    'Workbasket {component.workbasket.key} Access items were saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_7, new Pair(\n+    '',\n+    'Workbasket {component.workbasket.key} Access items were saved successfully'\n   )],\n   // workbasket.distribution-targets.component\n-  [ERROR_TYPES.SUCCESS_ALERT_8, new Pair(\n-    'Workbasket {this.workbasket.name} Distribution targets were saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_8, new Pair(\n+    '',\n+    'Workbasket {this.workbasket.name} Distribution targets were saved successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_9, new Pair(\n-    'DistributionTarget for workbasketID {this.workbasket.workbasketId} was removed successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_9, new Pair(\n+    '',\n+    'DistributionTargets for workbasketID {this.workbasket.workbasketId} was removed successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_10, new Pair(\n-    'Workbasket {workbasketUpdated.key} was saved successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_10, new Pair(\n+    '',\n+    'Workbasket {workbasketUpdated.key} was saved successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_11, new Pair(\n-    'Workbasket {workbasketUpdated.key} was created successfully',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_11, new Pair(\n+    '',\n+    'Workbasket {workbasketUpdated.key} was created successfully'\n   )],\n   // workbasket-information.component\n-  [ERROR_TYPES.SUCCESS_ALERT_12, new Pair(\n-    'The Workbasket {workbasketId} has been deleted.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_12, new Pair(\n+    '',\n+    'The Workbasket {workbasketId} has been deleted.'\n   )],\n   // forms-validator.service\n-  [ERROR_TYPES.WARNING_ALERT, new Pair(\n-    'There are some empty fields which are required.',\n-    ''\n+  [NOTIFICATION_TYPES.WARNING_ALERT, new Pair(\n+    '',\n+    'There are some empty fields which are required.'\n   )],\n   // forms-validator.service x2\n-  [ERROR_TYPES.WARNING_ALERT_2, new Pair(\n-    'The {responseOwner.field} introduced is not valid.',\n-    ''\n+  [NOTIFICATION_TYPES.WARNING_ALERT_2, new Pair(\n+    '',\n+    'The {responseOwner.field} introduced is not valid.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DANGER_ALERT, new Pair(\n-    'There was an error while updating.',\n-    ''\n+  [NOTIFICATION_TYPES.DANGER_ALERT, new Pair(\n+    '',\n+    'There was an error while updating.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.SUCCESS_ALERT_13, new Pair(\n-    'Task {this.currentId} was created successfully.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_13, new Pair(\n+    '',\n+    'Task {this.currentId} was created successfully.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.SUCCESS_ALERT_14, new Pair(\n-    'Updating was successful.',\n-    ''\n+  [NOTIFICATION_TYPES.SUCCESS_ALERT_14, new Pair(\n+    '',\n+    'Updating was successful.'\n   )],\n   // taskdetails.component\n-  [ERROR_TYPES.DANGER_ALERT_2, new Pair(\n-    'There was an error while creating a new task.',\n-    ''\n+  [NOTIFICATION_TYPES.DANGER_ALERT_2, new Pair(\n+    '',\n+    'There was an error while creating a new task.'\n   )],\n   // task-master.component\n-  [ERROR_TYPES.INFO_ALERT_2, new Pair(\n-    'The selected Workbasket is empty!',\n-    ''\n+  [NOTIFICATION_TYPES.INFO_ALERT_2, new Pair(\n+    '',\n+    'The selected Workbasket is empty!'\n   )],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MTY5OQ=="}, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 349}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMzNzQwOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/services/notifications/notification.service.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDozNDo0MlrOGJi7cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDozNDo0MlrOGJi7cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MjY0Mg==", "bodyText": "Chi told us that this is pretty Oldschool. When we decide to refactor both toast and error notification with angular material this should not be  an issue.", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412662642", "createdAt": "2020-04-22T04:34:42Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/services/notifications/notification.service.ts", "diffHunk": "@@ -0,0 +1,37 @@\n+import { Injectable } from '@angular/core';\n+import { Observable, Subject } from 'rxjs';\n+import { HttpErrorResponse } from '@angular/common/http';\n+import { ErrorModel } from '../../models/error-model';\n+import { NOTIFICATION_TYPES } from '../../models/notifications';\n+import { AlertModel } from '../../models/alert-model';\n+\n+@Injectable({\n+  providedIn: 'root'\n+})\n+export class NotificationService {\n+  errorSubject$: Subject<ErrorModel> = new Subject<ErrorModel>();\n+\n+  alertSubject$: Subject<AlertModel> = new Subject<AlertModel>();\n+\n+  public triggerError(key: NOTIFICATION_TYPES, passedError?: HttpErrorResponse, addition?: Map<String, String>): void {\n+    const errorModel = new ErrorModel(key, passedError, addition);\n+    this.updateErrorSubject(errorModel);\n+  }\n+\n+  getError(): Observable<ErrorModel> {\n+    return this.errorSubject$.asObservable();\n+  }\n+\n+  protected updateErrorSubject(errorToShow: ErrorModel) {\n+    this.errorSubject$.next(errorToShow);\n+  }\n+\n+  triggerAlert(key: NOTIFICATION_TYPES, additions?: Map<string, string>) {\n+    const alert: AlertModel = new AlertModel(key, additions);\n+    this.alertSubject$.next(alert);\n+  }\n+\n+  getAlert(): Observable<AlertModel> {\n+    return this.alertSubject$.asObservable();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDMzODY1OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/services/notifications/notification.service.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDozNToxOFrOGJi8LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDozNToxOFrOGJi8LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MjgyOQ==", "bodyText": "We decided to not call this Alert anymore. What do you think of toast? That was your idea in one of our meetings.\nPlease do this everywhere. ;)", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412662829", "createdAt": "2020-04-22T04:35:18Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/services/notifications/notification.service.ts", "diffHunk": "@@ -0,0 +1,37 @@\n+import { Injectable } from '@angular/core';\n+import { Observable, Subject } from 'rxjs';\n+import { HttpErrorResponse } from '@angular/common/http';\n+import { ErrorModel } from '../../models/error-model';\n+import { NOTIFICATION_TYPES } from '../../models/notifications';\n+import { AlertModel } from '../../models/alert-model';\n+\n+@Injectable({\n+  providedIn: 'root'\n+})\n+export class NotificationService {\n+  errorSubject$: Subject<ErrorModel> = new Subject<ErrorModel>();\n+\n+  alertSubject$: Subject<AlertModel> = new Subject<AlertModel>();\n+\n+  public triggerError(key: NOTIFICATION_TYPES, passedError?: HttpErrorResponse, addition?: Map<String, String>): void {\n+    const errorModel = new ErrorModel(key, passedError, addition);\n+    this.updateErrorSubject(errorModel);\n+  }\n+\n+  getError(): Observable<ErrorModel> {\n+    return this.errorSubject$.asObservable();\n+  }\n+\n+  protected updateErrorSubject(errorToShow: ErrorModel) {\n+    this.errorSubject$.next(errorToShow);\n+  }\n+\n+  triggerAlert(key: NOTIFICATION_TYPES, additions?: Map<string, string>) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDM0MDMzOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/services/notifications/notifications.service.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDozNjowMVrOGJi9DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjo1OTowOFrOGJmeCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MzA1Mg==", "bodyText": "why are you testing two times? What is the difference between those two tests?", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412663052", "createdAt": "2020-04-22T04:36:01Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/services/notifications/notifications.service.spec.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+import { inject, TestBed } from '@angular/core/testing';\n+\n+import { NotificationService } from './notification.service';\n+\n+describe('ErrorsService', () => {\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      providers: [NotificationService]\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: NotificationService = TestBed.get(NotificationService);\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should be created', inject([NotificationService], (service: NotificationService) => {\n+    expect(service).toBeTruthy();\n+  }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMDY0OQ==", "bodyText": "this is most likely an artifact from the short time, where i had notification.service as a class from which error.service and alert.service extended.\nintellij auto renaming most likely did this.\nthe difference is that the second variation is type-safe, whie the first one with Testbed.get is not\ni removed the first test", "url": "https://github.com/Taskana/taskana/pull/1022#discussion_r412720649", "createdAt": "2020-04-22T06:59:08Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/shared/services/notifications/notifications.service.spec.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+import { inject, TestBed } from '@angular/core/testing';\n+\n+import { NotificationService } from './notification.service';\n+\n+describe('ErrorsService', () => {\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      providers: [NotificationService]\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: NotificationService = TestBed.get(NotificationService);\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should be created', inject([NotificationService], (service: NotificationService) => {\n+    expect(service).toBeTruthy();\n+  }));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MzA1Mg=="}, "originalCommit": {"oid": "1b27f688145b9cdf656ef91423148ba8d91b63d4"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4340, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}