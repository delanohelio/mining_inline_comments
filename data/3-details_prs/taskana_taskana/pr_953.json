{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNzY2Nzc4", "number": 953, "title": "TSK-1147 Replaced getRestTemplate() by constant TEMPLATE", "bodyText": "and converted to AssertJ / replaced \"fail()\" by \"assertThatThrownBy()\"\nSonarcloud passed: https://sonarcloud.io/dashboard?branch=TSK-1147&id=sofie29_taskana", "createdAt": "2020-02-27T10:46:13Z", "url": "https://github.com/Taskana/taskana/pull/953", "merged": true, "mergeCommit": {"oid": "ea2f8829d40f7f4c36dc8b9af76d06c8e059640c"}, "closed": true, "closedAt": "2020-03-03T10:40:48Z", "author": {"login": "sofie29"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIe90WgFqTM2NTg1OTk2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJ_4sugFqTM2Nzg2Nzk3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1ODU5OTY5", "url": "https://github.com/Taskana/taskana/pull/953#pullrequestreview-365859969", "createdAt": "2020-02-27T17:33:53Z", "commit": {"oid": "0206334604a59ef9f6e5dd2e9de6befc36f666d3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzozMzo1M1rOFvaljg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo0MjowMFrOFva2Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2Mjk5MA==", "bodyText": "Maybe we can use containsOnly?", "url": "https://github.com/Taskana/taskana/pull/953#discussion_r385262990", "createdAt": "2020-02-27T17:33:53Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskanaEngineControllerIntTest.java", "diffHunk": "@@ -49,9 +47,9 @@ void testClassificationTypes() {\n             HttpMethod.GET,\n             restHelper.defaultRequest(),\n             ParameterizedTypeReference.forType(List.class));\n-    assertTrue(response.getBody().contains(\"TASK\"));\n-    assertTrue(response.getBody().contains(\"DOCUMENT\"));\n-    assertFalse(response.getBody().contains(\"UNKNOWN\"));\n+    assertThat(response.getBody().contains(\"TASK\")).isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0206334604a59ef9f6e5dd2e9de6befc36f666d3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MzAyMg==", "bodyText": "Maybe we can use containsOnly?", "url": "https://github.com/Taskana/taskana/pull/953#discussion_r385263022", "createdAt": "2020-02-27T17:33:57Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskanaEngineControllerIntTest.java", "diffHunk": "@@ -62,11 +60,11 @@ void testClassificationCategories() {\n             HttpMethod.GET,\n             restHelper.defaultRequest(),\n             ParameterizedTypeReference.forType(List.class));\n-    assertTrue(response.getBody().contains(\"MANUAL\"));\n-    assertTrue(response.getBody().contains(\"EXTERNAL\"));\n-    assertTrue(response.getBody().contains(\"AUTOMATIC\"));\n-    assertTrue(response.getBody().contains(\"PROCESS\"));\n-    assertFalse(response.getBody().contains(\"UNKNOWN\"));\n+    assertThat(response.getBody().contains(\"MANUAL\")).isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0206334604a59ef9f6e5dd2e9de6befc36f666d3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NTg5Mw==", "bodyText": "as is wrong. (As far as I understand it.) Please use isEqualTo()", "url": "https://github.com/Taskana/taskana/pull/953#discussion_r385265893", "createdAt": "2020-02-27T17:39:32Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TestSchemaNameCustomizable.java", "diffHunk": "@@ -57,7 +58,7 @@ void checkCustomSchemaNameIsDefined_Postgres() throws SQLException {\n           String tableName = rs.getString(\"tablename\");\n           tablefound = tableName.equals(\"workbasket\");\n         }\n-        Assertions.assertTrue(tablefound, \"Table workbasket should be there ...\");\n+        assertThat(tablefound).as(\"Table workbasket should be there ...\").isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0206334604a59ef9f6e5dd2e9de6befc36f666d3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NTkzMw==", "bodyText": "Same as above", "url": "https://github.com/Taskana/taskana/pull/953#discussion_r385265933", "createdAt": "2020-02-27T17:39:37Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TestSchemaNameCustomizable.java", "diffHunk": "@@ -78,7 +79,7 @@ void checkCustomSchemaNameIsDefined_OtherDb() throws SQLException {\n           String tableName = rs.getString(\"TABLE_NAME\");\n           tablefound = tableName.equals(\"WORKBASKET\");\n         }\n-        Assertions.assertTrue(tablefound, \"Table WORKBASKET should be there ...\");\n+        assertThat(tablefound).as(\"Table WORKBASKET should be there ...\").isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0206334604a59ef9f6e5dd2e9de6befc36f666d3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NzI4Nw==", "bodyText": "assertThat(\nresponse2.getBody().getContent().stream().map(DistributionTargetResource::getWorkbasketId).noneMatch(\"WBI:...\")).isTrue()\nwhat do u think?", "url": "https://github.com/Taskana/taskana/pull/953#discussion_r385267287", "createdAt": "2020-02-27T17:42:00Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/WorkbasketControllerIntTest.java", "diffHunk": "@@ -214,9 +212,8 @@ void testRemoveWorkbasketAsDistributionTarget() {\n             restHelper.defaultRequest(),\n             ParameterizedTypeReference.forType(DistributionTargetListResource.class));\n     assertThat(response2.getStatusCode()).isEqualTo(HttpStatus.OK);\n-    Iterator<DistributionTargetResource> iterator = response2.getBody().getContent().iterator();\n-    while (iterator.hasNext()) {\n-      assertThat(iterator.next().getWorkbasketId())\n+    for (DistributionTargetResource distributionTargetResource : response2.getBody().getContent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0206334604a59ef9f6e5dd2e9de6befc36f666d3"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzM3NDkx", "url": "https://github.com/Taskana/taskana/pull/953#pullrequestreview-367737491", "createdAt": "2020-03-03T06:56:02Z", "commit": {"oid": "521e4124be0d403f5b89020d10cf61f4c084567f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNjo1NjowM1rOFw6H5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNjo1NjoxMVrOFw6ICA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyODI2MQ==", "bodyText": "The main benefit of using containsOnly is that we don't have to do additional checks like this one. Since the list contains only TASK and DOCUMENT", "url": "https://github.com/Taskana/taskana/pull/953#discussion_r386828261", "createdAt": "2020-03-03T06:56:03Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskanaEngineControllerIntTest.java", "diffHunk": "@@ -49,9 +47,8 @@ void testClassificationTypes() {\n             HttpMethod.GET,\n             restHelper.defaultRequest(),\n             ParameterizedTypeReference.forType(List.class));\n-    assertTrue(response.getBody().contains(\"TASK\"));\n-    assertTrue(response.getBody().contains(\"DOCUMENT\"));\n-    assertFalse(response.getBody().contains(\"UNKNOWN\"));\n+    assertThat(response.getBody()).containsOnly(\"TASK\", \"DOCUMENT\");\n+    assertThat(response.getBody()).doesNotContain(\"UNKNOWN\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "521e4124be0d403f5b89020d10cf61f4c084567f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyODI5Ng==", "bodyText": "see above", "url": "https://github.com/Taskana/taskana/pull/953#discussion_r386828296", "createdAt": "2020-03-03T06:56:11Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskanaEngineControllerIntTest.java", "diffHunk": "@@ -62,11 +59,8 @@ void testClassificationCategories() {\n             HttpMethod.GET,\n             restHelper.defaultRequest(),\n             ParameterizedTypeReference.forType(List.class));\n-    assertTrue(response.getBody().contains(\"MANUAL\"));\n-    assertTrue(response.getBody().contains(\"EXTERNAL\"));\n-    assertTrue(response.getBody().contains(\"AUTOMATIC\"));\n-    assertTrue(response.getBody().contains(\"PROCESS\"));\n-    assertFalse(response.getBody().contains(\"UNKNOWN\"));\n+    assertThat(response.getBody()).containsOnly(\"MANUAL\", \"EXTERNAL\", \"AUTOMATIC\", \"PROCESS\");\n+    assertThat(response.getBody()).doesNotContain(\"UNKNOWN\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "521e4124be0d403f5b89020d10cf61f4c084567f"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0b004373ddcb6e623f0a7dd4f754d10e6e701eb", "author": {"user": {"login": "sofie29", "name": "Sofie Hofmann"}}, "url": "https://github.com/Taskana/taskana/commit/b0b004373ddcb6e623f0a7dd4f754d10e6e701eb", "committedDate": "2020-03-03T09:57:26Z", "message": "TSK-1147 Replaced getRestTemplate() by constant TEMPLATE\n\nTSK-1147 Usage of AssertJ ListAsserts\n\nTSK-1147 Usage of AssertJ ListAssert\n\nTSK-1147 Removed doesNotContain"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODY3OTc3", "url": "https://github.com/Taskana/taskana/pull/953#pullrequestreview-367867977", "createdAt": "2020-03-03T10:36:41Z", "commit": {"oid": "b0b004373ddcb6e623f0a7dd4f754d10e6e701eb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDozNjo0MVrOFxAbuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDozNjo0MVrOFxAbuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkzMTY0MA==", "bodyText": "We forgot this one here.", "url": "https://github.com/Taskana/taskana/pull/953#discussion_r386931640", "createdAt": "2020-03-03T10:36:41Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskanaEngineControllerIntTest.java", "diffHunk": "@@ -77,9 +69,9 @@ void testGetCurrentUserInfo() {\n             HttpMethod.GET,\n             restHelper.defaultRequest(),\n             ParameterizedTypeReference.forType(TaskanaUserInfoResource.class));\n-    assertEquals(\"teamlead_1\", response.getBody().getUserId());\n-    assertTrue(response.getBody().getGroupIds().contains(\"businessadmin\"));\n-    assertTrue(response.getBody().getRoles().contains(TaskanaRole.BUSINESS_ADMIN));\n-    assertFalse(response.getBody().getRoles().contains(TaskanaRole.ADMIN));\n+    assertThat(response.getBody().getUserId()).isEqualTo(\"teamlead_1\");\n+    assertThat(response.getBody().getGroupIds()).contains(\"businessadmin\");\n+    assertThat(response.getBody().getRoles()).contains(TaskanaRole.BUSINESS_ADMIN);\n+    assertThat(response.getBody().getRoles()).doesNotContain(TaskanaRole.ADMIN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b004373ddcb6e623f0a7dd4f754d10e6e701eb"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4570, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}