{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNjEyNTIy", "number": 984, "title": "TSK-1143C mismatch between forward and backward calculation between p\u2026", "bodyText": "\u2026lanned and due\nSonar is green: https://sonarcloud.io/dashboard?branch=TSK-1143c&id=BerndBreier_taskana", "createdAt": "2020-03-20T16:00:46Z", "url": "https://github.com/Taskana/taskana/pull/984", "merged": true, "mergeCommit": {"oid": "5ea592898c2583a8b960ffba0a4f6f3624c08283"}, "closed": true, "closedAt": "2020-03-25T07:44:20Z", "author": {"login": "BerndBreier"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQXbfjgFqTM3OTE0MDU0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRBX-MgFqTM4MDg4MDgxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTQwNTQw", "url": "https://github.com/Taskana/taskana/pull/984#pullrequestreview-379140540", "createdAt": "2020-03-23T05:26:42Z", "commit": {"oid": "7a815271df2c8bbd196b925f9ad04088c55f2a61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNToyNjo0MlrOF53U3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNToyNjo0MlrOF53U3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIxOTYxNA==", "bodyText": "How can it be that the startTime is null?\nThat parameter is necessary. - Should we throw an exception instead of going to the default?", "url": "https://github.com/Taskana/taskana/pull/984#discussion_r396219614", "createdAt": "2020-03-23T05:26:42Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/common/internal/util/DaysToWorkingDaysConverter.java", "diffHunk": "@@ -74,10 +74,16 @@ public static void setCustomHolidays(List<LocalDate> holidays) {\n   }\n \n   public long convertWorkingDaysToDays(Instant startTime, long numberOfDays) {\n+    if (startTime == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a815271df2c8bbd196b925f9ad04088c55f2a61"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTQyMzA5", "url": "https://github.com/Taskana/taskana/pull/984#pullrequestreview-379142309", "createdAt": "2020-03-23T05:33:27Z", "commit": {"oid": "7a815271df2c8bbd196b925f9ad04088c55f2a61"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNTozMzoyN1rOF53ajg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNTo0MTo1M1rOF53h2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMTA3MA==", "bodyText": "unnecessary parenthesis around the last statement. But doesn't matter :)", "url": "https://github.com/Taskana/taskana/pull/984#discussion_r396221070", "createdAt": "2020-03-23T05:33:27Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/ServiceLevelHandler.java", "diffHunk": "@@ -159,17 +159,53 @@ private TaskImpl updatePlannedDueOnTaskUpdate(\n         Instant planned =\n             (converter.subtractWorkingDaysFromInstant(\n                 newTaskImpl.getDue(), durationPrioHolder.getDuration()));\n-        if (newTaskImpl.getPlanned() != null && !planned.equals(newTaskImpl.getPlanned())) {\n+        // planned may not be the same as newTaskImpl.planned and the request may nevertheless be\n+        // correct.\n+        // Scenario: If task.planned is Saturday morning, and duration is 1 working day, then\n+        // calculating forward from planned to due will give Tuesday morning as due date, because\n+        // sunday is skipped.\n+        // On the other hand, calculating from due (Tuesday morning) 1 day backwards will\n+        // result in a planned date of monday morning which differs from task.planned.\n+        // Therefore, if newTaskImpl.getPlanned is not equal to planned, the service\n+        // level is not violated and we still must grant the request if the following\n+        // conditions are fulfilled:\n+        // - planned is after newTaskImpl.planned\n+        // - newTaskImpl.planned is not a working day,\n+        // - there is no working day between newTaskImpl.planned and planned.\n+        if (newTaskImpl.getPlanned() != null\n+            && !planned.equals(newTaskImpl.getPlanned())\n+            && (plannedDateViolatesServiceLevel(planned, newTaskImpl.getPlanned()))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a815271df2c8bbd196b925f9ad04088c55f2a61"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMjkzNg==", "bodyText": "For the sake of readability:\n\nMove this important comment as a JavaDoc comment for the method plannedDateViolatesServiceLevel\ninclude newTaskImpl.getPlanned() != null && !planned.equals(newTaskImpl.getPlanned() into the method plannedDateViolatesServiceLevel (for completeness and reusability)\nMaybe make the method plannedDateViolatesServiceLevel a void return type and let it throw the exception? - I am not sure about this last one\n\nWould this help? What do you think?", "url": "https://github.com/Taskana/taskana/pull/984#discussion_r396222936", "createdAt": "2020-03-23T05:41:53Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/ServiceLevelHandler.java", "diffHunk": "@@ -159,17 +159,53 @@ private TaskImpl updatePlannedDueOnTaskUpdate(\n         Instant planned =\n             (converter.subtractWorkingDaysFromInstant(\n                 newTaskImpl.getDue(), durationPrioHolder.getDuration()));\n-        if (newTaskImpl.getPlanned() != null && !planned.equals(newTaskImpl.getPlanned())) {\n+        // planned may not be the same as newTaskImpl.planned and the request may nevertheless be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a815271df2c8bbd196b925f9ad04088c55f2a61"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a815271df2c8bbd196b925f9ad04088c55f2a61", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/7a815271df2c8bbd196b925f9ad04088c55f2a61", "committedDate": "2020-03-20T15:48:35Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}, "afterCommit": {"oid": "61ef04985c9795c3559f9c8975c81a834b04e710", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/61ef04985c9795c3559f9c8975c81a834b04e710", "committedDate": "2020-03-23T08:10:22Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MjEwNTQ4", "url": "https://github.com/Taskana/taskana/pull/984#pullrequestreview-379210548", "createdAt": "2020-03-23T08:23:38Z", "commit": {"oid": "61ef04985c9795c3559f9c8975c81a834b04e710"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61ef04985c9795c3559f9c8975c81a834b04e710", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/61ef04985c9795c3559f9c8975c81a834b04e710", "committedDate": "2020-03-23T08:10:22Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}, "afterCommit": {"oid": "86081febf6a0375e44a9b64680e4be9cb1eeeecc", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/86081febf6a0375e44a9b64680e4be9cb1eeeecc", "committedDate": "2020-03-23T10:57:48Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MzMyMDQ0", "url": "https://github.com/Taskana/taskana/pull/984#pullrequestreview-379332044", "createdAt": "2020-03-23T11:13:16Z", "commit": {"oid": "86081febf6a0375e44a9b64680e4be9cb1eeeecc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToxMzoxNlrOF6AwxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToxMzozOFrOF6Axgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM3NDIxMg==", "bodyText": "This is not a JavaDoc ;)", "url": "https://github.com/Taskana/taskana/pull/984#discussion_r396374212", "createdAt": "2020-03-23T11:13:16Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/ServiceLevelHandler.java", "diffHunk": "@@ -159,17 +173,66 @@ private TaskImpl updatePlannedDueOnTaskUpdate(\n         Instant planned =\n             (converter.subtractWorkingDaysFromInstant(\n                 newTaskImpl.getDue(), durationPrioHolder.getDuration()));\n-        if (newTaskImpl.getPlanned() != null && !planned.equals(newTaskImpl.getPlanned())) {\n-          throw new InvalidArgumentException(\n-              \"Cannot update a task with given planned \"\n-                  + \"and due date not matching the service level\");\n-        }\n+        ensureServiceLevelIsNotViolated(newTaskImpl, durationPrioHolder.getDuration(), planned);\n         newTaskImpl.setPlanned(planned);\n+        if (!converter.isWorkingDay(0, newTaskImpl.getDue())) {\n+          newTaskImpl.setDue(getFirstPreceedingWorkingDay(newTaskImpl.getDue()));\n+        }\n       }\n     }\n     return newTaskImpl;\n   }\n \n+  private Instant getFirstPreceedingWorkingDay(Instant due) {\n+    long days = 0;\n+    while (!converter.isWorkingDay(days, due)) {\n+      days--;\n+    }\n+    return due.minus(Duration.ofDays(Math.abs(days)));\n+  }\n+\n+  private void ensureServiceLevelIsNotViolated(\n+      TaskImpl newTaskImpl, Duration duration, Instant planned) throws InvalidArgumentException {\n+    // planned was calculated by subtracting the service level duration from newTaskImpl.due.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86081febf6a0375e44a9b64680e4be9cb1eeeecc"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM3NDMzMg==", "bodyText": "Is this supposed to be an assert? :)", "url": "https://github.com/Taskana/taskana/pull/984#discussion_r396374332", "createdAt": "2020-03-23T11:13:30Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/ServiceLevelPriorityAccTest.java", "diffHunk": "@@ -379,4 +380,37 @@ void testUpdatePlannedAndDue() throws NotAuthorizedException, TaskNotFoundExcept\n     assertThatThrownBy(() -> taskService.updateTask(task))\n         .isInstanceOf(InvalidArgumentException.class);\n   }\n+\n+  @WithAccessId(\n+      userName = \"user_1_2\",\n+      groupNames = {\"group_1\"})\n+  @Test\n+  void testUpdateTaskSetPlannedOrDueToWeekend()\n+      throws NotAuthorizedException, TaskNotFoundException, ClassificationNotFoundException,\n+          InvalidArgumentException, InvalidStateException, ConcurrencyException,\n+          AttachmentPersistenceException {\n+    Task task = taskService.getTask(\"TKI:000000000000000000000000000000000030\"); // SL=P13D\n+    task.setPlanned(getInstant(\"2020-03-21T07:00:00\")); // planned = saturday\n+    task = taskService.updateTask(task);\n+    assertThat(task.getDue()).isEqualTo(getInstant(\"2020-04-09T07:00:00\"));\n+\n+    task.setDue(getInstant(\"2020-04-11T07:00:00\")); // due = saturday\n+    task.setPlanned(null);\n+    task = taskService.updateTask(task);\n+    assertThat(task.getPlanned()).isEqualTo(getInstant(\"2020-03-24T07:00:00\"));\n+\n+    task.setDue(getInstant(\"2020-04-12T07:00:00\")); // due = sunday\n+    task = taskService.updateTask(task);\n+    assertThat(task.getPlanned()).isEqualTo(getInstant(\"2020-03-24T07:00:00\"));\n+\n+    task.setPlanned(getInstant(\"2020-03-21T07:00:00\")); // planned = saturday\n+    task.setDue(getInstant(\"2020-04-09T07:00:00\")); // thursday\n+    task = taskService.updateTask(task);\n+    assertThat(task.getPlanned()).isEqualTo(getInstant(\"2020-03-23T07:00:00\"));\n+\n+    task.setPlanned(getInstant(\"2020-03-03T07:00:00\")); // planned on saturday\n+    task.setDue(getInstant(\"2020-03-22T07:00:00\")); // due = sunday\n+    task = taskService.updateTask(task);\n+    System.out.println(task.getPlanned() + \", \" + task.getDue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86081febf6a0375e44a9b64680e4be9cb1eeeecc"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM3NDQwMg==", "bodyText": "bump", "url": "https://github.com/Taskana/taskana/pull/984#discussion_r396374402", "createdAt": "2020-03-23T11:13:38Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/common/internal/util/DaysToWorkingDaysConverter.java", "diffHunk": "@@ -74,10 +74,16 @@ public static void setCustomHolidays(List<LocalDate> holidays) {\n   }\n \n   public long convertWorkingDaysToDays(Instant startTime, long numberOfDays) {\n+    if (startTime == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIxOTYxNA=="}, "originalCommit": {"oid": "7a815271df2c8bbd196b925f9ad04088c55f2a61"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86081febf6a0375e44a9b64680e4be9cb1eeeecc", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/86081febf6a0375e44a9b64680e4be9cb1eeeecc", "committedDate": "2020-03-23T10:57:48Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}, "afterCommit": {"oid": "8ec4ce6e0b997e4a3bf1540d19bb2ba6be418cd0", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/8ec4ce6e0b997e4a3bf1540d19bb2ba6be418cd0", "committedDate": "2020-03-23T12:03:16Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ec4ce6e0b997e4a3bf1540d19bb2ba6be418cd0", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/8ec4ce6e0b997e4a3bf1540d19bb2ba6be418cd0", "committedDate": "2020-03-23T12:03:16Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}, "afterCommit": {"oid": "92669c7060ec3c3436437a2c32f15251f98c7677", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/92669c7060ec3c3436437a2c32f15251f98c7677", "committedDate": "2020-03-23T18:08:15Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92669c7060ec3c3436437a2c32f15251f98c7677", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/92669c7060ec3c3436437a2c32f15251f98c7677", "committedDate": "2020-03-23T18:08:15Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}, "afterCommit": {"oid": "7e8a9f30c2305810851e4cfe12ccc898a9d4b217", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/7e8a9f30c2305810851e4cfe12ccc898a9d4b217", "committedDate": "2020-03-24T06:33:13Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e8a9f30c2305810851e4cfe12ccc898a9d4b217", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/7e8a9f30c2305810851e4cfe12ccc898a9d4b217", "committedDate": "2020-03-24T06:33:13Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}, "afterCommit": {"oid": "365277323ac023acdffef05e4fde653679926b15", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/365277323ac023acdffef05e4fde653679926b15", "committedDate": "2020-03-24T06:47:59Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8a38ce99909025e019bbf4f553c2902237860c7", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/b8a38ce99909025e019bbf4f553c2902237860c7", "committedDate": "2020-03-24T07:23:56Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "365277323ac023acdffef05e4fde653679926b15", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/365277323ac023acdffef05e4fde653679926b15", "committedDate": "2020-03-24T06:47:59Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}, "afterCommit": {"oid": "b8a38ce99909025e019bbf4f553c2902237860c7", "author": {"user": {"login": "BerndBreier", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/b8a38ce99909025e019bbf4f553c2902237860c7", "committedDate": "2020-03-24T07:23:56Z", "message": "TSK-1143C mismatch between forward and backward calculation between planned and due"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODgwODE0", "url": "https://github.com/Taskana/taskana/pull/984#pullrequestreview-380880814", "createdAt": "2020-03-25T06:18:53Z", "commit": {"oid": "b8a38ce99909025e019bbf4f553c2902237860c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4518, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}