{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNjUyMjEx", "number": 1151, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTozMjo0N1rOEJ7-Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo1MzoxNVrOEKbIZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODU1MTg2OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/AccessIdController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTozMjo0N1rOGqsU7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTozMjo0N1rOGqsU7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQxOTYyOA==", "bodyText": "Why declare the type and then assign the value? This can be optimized (you don't have to do this.. I just noticed it)", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447419628", "createdAt": "2020-06-30T05:32:47Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/AccessIdController.java", "diffHunk": "@@ -58,16 +66,20 @@ public AccessIdController(LdapClient ldapClient) {\n \n   @GetMapping(path = Mapping.URL_ACCESSID_GROUPS)\n   public ResponseEntity<List<AccessIdRepresentationModel>> getGroupsByAccessId(\n-      @RequestParam(\"access-id\") String accessId) throws InvalidArgumentException {\n+      @RequestParam(\"access-id\") String accessId)\n+      throws InvalidArgumentException, NotAuthorizedException {\n+\n     LOGGER.debug(\"Entry to getGroupsByAccessId(access-id= {})\", accessId);\n+\n+    taskanaEngine.checkRoleMembership(TaskanaRole.ADMIN, TaskanaRole.BUSINESS_ADMIN);\n+\n     if (!validateAccessId(accessId)) {\n       throw new InvalidArgumentException(\"The accessId is invalid\");\n     }\n-    List<AccessIdRepresentationModel> accessIdUsers;\n+    List<AccessIdRepresentationModel> accessIds;\n     ResponseEntity<List<AccessIdRepresentationModel>> response;\n-    accessIdUsers = ldapClient.searchUsersAndGroups(accessId);\n-    accessIdUsers.addAll(ldapClient.searchGroupsofUsersIsMember(accessId));\n-    response = ResponseEntity.ok(accessIdUsers);\n+    accessIds = ldapClient.searchGroupsAccessIdIsMemberOf(accessId);\n+    response = ResponseEntity.ok(accessIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODU1MjY3OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTozMzoxMVrOGqsVWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOToxODoyMFrOGqzkWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQxOTczNw==", "bodyText": "Does this work recursively?", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447419737", "createdAt": "2020-06-30T05:33:11Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -187,15 +188,15 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n     return accessId;\n   }\n \n-  public List<AccessIdRepresentationModel> searchGroupsofUsersIsMember(final String name)\n+  public List<AccessIdRepresentationModel> searchGroupsAccessIdIsMemberOf(final String name)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyMjcxMQ==", "bodyText": "No, it doesn't. And based on my understanding, it shouldn't. Do you have another opinion?", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447522711", "createdAt": "2020-06-30T08:53:39Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -187,15 +188,15 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n     return accessId;\n   }\n \n-  public List<AccessIdRepresentationModel> searchGroupsofUsersIsMember(final String name)\n+  public List<AccessIdRepresentationModel> searchGroupsAccessIdIsMemberOf(final String name)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQxOTczNw=="}, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzODI2Ng==", "bodyText": "Was just wondering. Nothing more :)", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447538266", "createdAt": "2020-06-30T09:18:20Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -187,15 +188,15 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n     return accessId;\n   }\n \n-  public List<AccessIdRepresentationModel> searchGroupsofUsersIsMember(final String name)\n+  public List<AccessIdRepresentationModel> searchGroupsAccessIdIsMemberOf(final String name)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQxOTczNw=="}, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODU1NTA2OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTozNDoyMFrOGqsWsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOToyMDoxOFrOGqzpaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMDA4Mg==", "bodyText": "What's the reason for the like? Are we not searching strictly according to the accessId name?", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447420082", "createdAt": "2020-06-30T05:34:20Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -187,15 +188,15 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n     return accessId;\n   }\n \n-  public List<AccessIdRepresentationModel> searchGroupsofUsersIsMember(final String name)\n+  public List<AccessIdRepresentationModel> searchGroupsAccessIdIsMemberOf(final String name)\n       throws InvalidArgumentException {\n-    LOGGER.debug(\"entry to searchGroupsofUsersIsMember(name = {}).\", name);\n+    LOGGER.debug(\"entry to searchGroupsAccessIdIsMemberOf(name = {}).\", name);\n     isInitOrFail();\n     testMinSearchForLength(name);\n \n     final AndFilter andFilter = new AndFilter();\n-    andFilter.and(new WhitespaceWildcardsFilter(getGroupNameAttribute(), \"\"));\n-    andFilter.and(new EqualsFilter(getGroupsOfUser(), name));\n+    andFilter.and(new EqualsFilter(getGroupSearchFilterName(), getGroupSearchFilterValue()));\n+    andFilter.and(new LikeFilter(getGroupsOfUser(), \"*\" + name + \"*\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyMzYzMg==", "bodyText": "No. name could be a user, which we handle as uid olny. In the uniquemember field we do have the DN for users and groups.", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447523632", "createdAt": "2020-06-30T08:55:05Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -187,15 +188,15 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n     return accessId;\n   }\n \n-  public List<AccessIdRepresentationModel> searchGroupsofUsersIsMember(final String name)\n+  public List<AccessIdRepresentationModel> searchGroupsAccessIdIsMemberOf(final String name)\n       throws InvalidArgumentException {\n-    LOGGER.debug(\"entry to searchGroupsofUsersIsMember(name = {}).\", name);\n+    LOGGER.debug(\"entry to searchGroupsAccessIdIsMemberOf(name = {}).\", name);\n     isInitOrFail();\n     testMinSearchForLength(name);\n \n     final AndFilter andFilter = new AndFilter();\n-    andFilter.and(new WhitespaceWildcardsFilter(getGroupNameAttribute(), \"\"));\n-    andFilter.and(new EqualsFilter(getGroupsOfUser(), name));\n+    andFilter.and(new EqualsFilter(getGroupSearchFilterName(), getGroupSearchFilterValue()));\n+    andFilter.and(new LikeFilter(getGroupsOfUser(), \"*\" + name + \"*\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMDA4Mg=="}, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzOTU2MQ==", "bodyText": "Then I don't like the name of the method. The methodname implies that the parameter is a accessId. Can we talk about this? That's faster than typing.", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447539561", "createdAt": "2020-06-30T09:20:18Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -187,15 +188,15 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n     return accessId;\n   }\n \n-  public List<AccessIdRepresentationModel> searchGroupsofUsersIsMember(final String name)\n+  public List<AccessIdRepresentationModel> searchGroupsAccessIdIsMemberOf(final String name)\n       throws InvalidArgumentException {\n-    LOGGER.debug(\"entry to searchGroupsofUsersIsMember(name = {}).\", name);\n+    LOGGER.debug(\"entry to searchGroupsAccessIdIsMemberOf(name = {}).\", name);\n     isInitOrFail();\n     testMinSearchForLength(name);\n \n     final AndFilter andFilter = new AndFilter();\n-    andFilter.and(new WhitespaceWildcardsFilter(getGroupNameAttribute(), \"\"));\n-    andFilter.and(new EqualsFilter(getGroupsOfUser(), name));\n+    andFilter.and(new EqualsFilter(getGroupSearchFilterName(), getGroupSearchFilterValue()));\n+    andFilter.and(new LikeFilter(getGroupsOfUser(), \"*\" + name + \"*\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMDA4Mg=="}, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODU2NTM5OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/resources/application.properties", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTozOToyNlrOGqscsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo1MDoxOFrOGrc5WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMTYxNw==", "bodyText": "What's with the user search base?\nAnd what about our other X configs:\n\nrest/taskana-rest-spring-example-boot/src/main/resources/application-postgres.properties\nrest/taskana-rest-spring-example-boot/src/main/resources/application.properties\nrest/taskana-rest-spring-example-common/src/test/resources/application.properties\nrest/taskana-rest-spring-example-wildfly/src/main/resources/application-postgres.properties\nrest/taskana-rest-spring-example-wildfly/src/main/resources/application.properties\nrest/taskana-rest-spring-example-wildfly/src/test/resources/application.properties\nrest/taskana-rest-spring/src/test/resources/application.properties\nADAPTER: taskana-adapter-camunda-wildfly-example/src/main/resources/application.properties", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447421617", "createdAt": "2020-06-30T05:39:26Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/resources/application.properties", "diffHunk": "@@ -25,13 +25,13 @@ taskana.ldap.userSearchFilterValue=person\n taskana.ldap.userFirstnameAttribute=givenName\n taskana.ldap.userLastnameAttribute=sn\n taskana.ldap.userIdAttribute=uid\n-taskana.ldap.groupSearchBase=cn=groups\n+taskana.ldap.groupSearchBase=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyNjI1OQ==", "bodyText": "We can decide about the other properties. They don't need to be exactly the same. Do you prefer to have the same settingseverywhere?", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447526259", "createdAt": "2020-06-30T08:59:06Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/test/resources/application.properties", "diffHunk": "@@ -25,13 +25,13 @@ taskana.ldap.userSearchFilterValue=person\n taskana.ldap.userFirstnameAttribute=givenName\n taskana.ldap.userLastnameAttribute=sn\n taskana.ldap.userIdAttribute=uid\n-taskana.ldap.groupSearchBase=cn=groups\n+taskana.ldap.groupSearchBase=", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMTYxNw=="}, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0MDA4Nw==", "bodyText": "Again, let's talk about this :)", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447540087", "createdAt": "2020-06-30T09:21:10Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/resources/application.properties", "diffHunk": "@@ -25,13 +25,13 @@ taskana.ldap.userSearchFilterValue=person\n taskana.ldap.userFirstnameAttribute=givenName\n taskana.ldap.userLastnameAttribute=sn\n taskana.ldap.userIdAttribute=uid\n-taskana.ldap.groupSearchBase=cn=groups\n+taskana.ldap.groupSearchBase=", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMTYxNw=="}, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIxNTM4NQ==", "bodyText": "Since the properties are different already, I will not touch this point in this ticket.", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r448215385", "createdAt": "2020-07-01T08:50:18Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/test/resources/application.properties", "diffHunk": "@@ -25,13 +25,13 @@ taskana.ldap.userSearchFilterValue=person\n taskana.ldap.userFirstnameAttribute=givenName\n taskana.ldap.userLastnameAttribute=sn\n taskana.ldap.userIdAttribute=uid\n-taskana.ldap.groupSearchBase=cn=groups\n+taskana.ldap.groupSearchBase=", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMTYxNw=="}, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODU2OTYzOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTo0MToyMVrOGqsfIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTo0MToyMVrOGqsfIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMjI0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                List<AccessIdRepresentationModel> body = response.getBody();\n          \n          \n            \n                assertThat(body).isNotNull();\n          \n          \n            \n                assertThat(body)\n          \n          \n            \n                assertThat(response.getBody()).isNotNull()", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447422240", "createdAt": "2020-06-30T05:41:21Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "diffHunk": "@@ -110,6 +111,79 @@ void testBadRequestWhenSearchForIsTooShort() {\n         .isEqualTo(HttpStatus.BAD_REQUEST);\n   }\n \n+  @Test\n+  void should_returnAccessIdsOfGroupsTheAccessIdIsMemberOf_ifAccessIdOfUserIsGiven() {\n+    ResponseEntity<List<AccessIdRepresentationModel>> response =\n+        template.exchange(\n+            restHelper.toUrl(Mapping.URL_ACCESSID_GROUPS) + \"?access-id=teamlead-2\",\n+            HttpMethod.GET,\n+            restHelper.defaultRequest(),\n+            ParameterizedTypeReference.forType(AccessIdListResource.class));\n+\n+    List<AccessIdRepresentationModel> body = response.getBody();\n+    assertThat(body).isNotNull();\n+    assertThat(body)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODU3MDcyOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTo0MTo1MFrOGqsf0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTo0MTo1MFrOGqsf0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMjQxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                List<AccessIdRepresentationModel> body = response.getBody();\n          \n          \n            \n                assertThat(body).isNotNull();\n          \n          \n            \n                assertThat(body)\n          \n          \n            \n                assertThat(response.getBody()).isNotNull()", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447422418", "createdAt": "2020-06-30T05:41:50Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "diffHunk": "@@ -110,6 +111,79 @@ void testBadRequestWhenSearchForIsTooShort() {\n         .isEqualTo(HttpStatus.BAD_REQUEST);\n   }\n \n+  @Test\n+  void should_returnAccessIdsOfGroupsTheAccessIdIsMemberOf_ifAccessIdOfUserIsGiven() {\n+    ResponseEntity<List<AccessIdRepresentationModel>> response =\n+        template.exchange(\n+            restHelper.toUrl(Mapping.URL_ACCESSID_GROUPS) + \"?access-id=teamlead-2\",\n+            HttpMethod.GET,\n+            restHelper.defaultRequest(),\n+            ParameterizedTypeReference.forType(AccessIdListResource.class));\n+\n+    List<AccessIdRepresentationModel> body = response.getBody();\n+    assertThat(body).isNotNull();\n+    assertThat(body)\n+        .extracting(AccessIdRepresentationModel::getAccessId)\n+        .usingElementComparator(String.CASE_INSENSITIVE_ORDER)\n+        .containsExactlyInAnyOrder(\n+            \"cn=ksc-teamleads,cn=groups,OU=Test,O=TASKANA\",\n+            \"cn=business-admins,cn=groups,OU=Test,O=TASKANA\",\n+            \"cn=monitor-users,cn=groups,OU=Test,O=TASKANA\",\n+            \"cn=Organisationseinheit KSC 2,\"\n+                + \"cn=Organisationseinheit KSC,cn=organisation,OU=Test,O=TASKANA\");\n+  }\n+\n+  @Test\n+  void should_returnAccessIdsOfGroupsTheAccessIdIsMemberOf_ifAccessIdOfGroupIsGiven() {\n+    ResponseEntity<List<AccessIdRepresentationModel>> response =\n+        template.exchange(\n+            restHelper.toUrl(Mapping.URL_ACCESSID_GROUPS)\n+                + \"?access-id=cn=Organisationseinheit KSC 1,\"\n+                + \"cn=Organisationseinheit KSC,cn=organisation,OU=Test,O=TASKANA\",\n+            HttpMethod.GET,\n+            restHelper.defaultRequest(),\n+            ParameterizedTypeReference.forType(AccessIdListResource.class));\n+\n+    List<AccessIdRepresentationModel> body = response.getBody();\n+    assertThat(body).isNotNull();\n+    assertThat(body)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODU4NzM3OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/task/rest/TaskControllerIntTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTo0OTozOFrOGqspdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo1NzozM1rOGqyxaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNDg4NA==", "bodyText": "whats the reason for the changes in this file? I don't see a matching change", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447424884", "createdAt": "2020-06-30T05:49:38Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/task/rest/TaskControllerIntTest.java", "diffHunk": "@@ -476,8 +476,8 @@ void testGetLastPageSortedByDueWithHiddenTasksRemovedFromResult() {\n     assertThat(response.getBody()).isNotNull();\n     assertThat((response.getBody()).getContent()).hasSize(5);\n     assertThat(response.getBody().getRequiredLink(IanaLinkRelations.LAST).getHref())\n-        .contains(\"page=5\");\n-    assertThat(\"TKI:000000000000000000000000000000000023\")\n+        .contains(\"page=10\");\n+    assertThat(\"TKI:000000000000000000000000000000000005\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyNTIyNw==", "bodyText": "It's due to the changed groupSearchBase. Now he uses the org groups as well, resulting in more hits.", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447525227", "createdAt": "2020-06-30T08:57:33Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/task/rest/TaskControllerIntTest.java", "diffHunk": "@@ -476,8 +476,8 @@ void testGetLastPageSortedByDueWithHiddenTasksRemovedFromResult() {\n     assertThat(response.getBody()).isNotNull();\n     assertThat((response.getBody()).getContent()).hasSize(5);\n     assertThat(response.getBody().getRequiredLink(IanaLinkRelations.LAST).getHref())\n-        .contains(\"page=5\");\n-    assertThat(\"TKI:000000000000000000000000000000000023\")\n+        .contains(\"page=10\");\n+    assertThat(\"TKI:000000000000000000000000000000000005\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNDg4NA=="}, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODU4OTE1OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/workbasket/rest/WorkbasketControllerIntTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTo1MDoxNVrOGqsqaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo1Nzo0MlrOGqyxyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTEyOQ==", "bodyText": "what's the reason for this change?", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447425129", "createdAt": "2020-06-30T05:50:15Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/workbasket/rest/WorkbasketControllerIntTest.java", "diffHunk": "@@ -82,7 +82,7 @@ void testGetAllWorkbasketsBusinessAdminHasOpenPermission() {\n             WORKBASKET_SUMMARY_PAGE_MODEL_TYPE);\n     assertThat(response.getBody()).isNotNull();\n     assertThat(response.getBody().getRequiredLink(IanaLinkRelations.SELF)).isNotNull();\n-    assertThat(response.getBody().getContent()).hasSize(3);\n+    assertThat(response.getBody().getContent()).hasSize(6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyNTMyMw==", "bodyText": "see above.", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r447525323", "createdAt": "2020-06-30T08:57:42Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/workbasket/rest/WorkbasketControllerIntTest.java", "diffHunk": "@@ -82,7 +82,7 @@ void testGetAllWorkbasketsBusinessAdminHasOpenPermission() {\n             WORKBASKET_SUMMARY_PAGE_MODEL_TYPE);\n     assertThat(response.getBody()).isNotNull();\n     assertThat(response.getBody().getRequiredLink(IanaLinkRelations.SELF)).isNotNull();\n-    assertThat(response.getBody().getContent()).hasSize(3);\n+    assertThat(response.getBody().getContent()).hasSize(6);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTEyOQ=="}, "originalCommit": {"oid": "3429b7f6e7f48ca39a6d53a77ca8ef5caaa6e28c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzY1NzMyOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo1MzoxNVrOGrc_-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo1MzoxNVrOGrc_-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIxNzA4Mw==", "bodyText": "name = accessId? Aber egal jetzt :D", "url": "https://github.com/Taskana/taskana/pull/1151#discussion_r448217083", "createdAt": "2020-07-01T08:53:15Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -187,15 +188,15 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n     return accessId;\n   }\n \n-  public List<AccessIdRepresentationModel> searchGroupsofUsersIsMember(final String name)\n+  public List<AccessIdRepresentationModel> searchGroupsAccessIdIsMemberOf(final String accessId)\n       throws InvalidArgumentException {\n-    LOGGER.debug(\"entry to searchGroupsofUsersIsMember(name = {}).\", name);\n+    LOGGER.debug(\"entry to searchGroupsAccessIdIsMemberOf(name = {}).\", accessId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432615af11182aac45aded11f8a58cdd88f370a1"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4266, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}