{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MjQyMDM2", "number": 1131, "title": "TSK-1283: replaced usernames with - instead of _", "bodyText": "", "createdAt": "2020-06-16T14:08:26Z", "url": "https://github.com/Taskana/taskana/pull/1131", "merged": true, "mergeCommit": {"oid": "a63fad02579b6536f337a18d6898934f46528dd2"}, "closed": true, "closedAt": "2020-06-22T14:05:20Z", "author": {"login": "holgerhagen"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsyFmNgH2gAyNDM1MjQyMDM2OjQ4MmQ0YzcyYjMwMjQwNzM5ZTJiNTUwNmUyMzk5MWZmYjgxZTI3MzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABctxN8PgFqTQzNDk0NDQ4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "482d4c72b30240739e2b5506e23991ffb81e2734", "author": {"user": {"login": "holgerhagen", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/482d4c72b30240739e2b5506e23991ffb81e2734", "committedDate": "2020-06-19T12:20:07Z", "message": "TSK-1283: replaced usernames with - instead of _"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjIxODE1", "url": "https://github.com/Taskana/taskana/pull/1131#pullrequestreview-434221815", "createdAt": "2020-06-19T16:57:45Z", "commit": {"oid": "482d4c72b30240739e2b5506e23991ffb81e2734"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1Nzo0NVrOGmbh8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMjoyODo0NVrOGmilUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDEzMQ==", "bodyText": "Where did this test go?", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r442950131", "createdAt": "2020-06-19T16:57:45Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/DeleteClassificationAccTest.java", "diffHunk": "@@ -39,15 +39,6 @@ void testDeleteClassificationInDomain()\n     assertThat(classification.getDomain()).isEqualTo(\"\");\n   }\n \n-  @WithAccessId(\n-      user = \"teamlead_1\",\n-      groups = {\"group-1\", \"group-2\"})\n-  @Test\n-  void testDeleteClassificationInDomainUserIsNotAuthorized() {\n-    ThrowingCallable call = () -> classificationService.deleteClassification(\"L140101\", \"DOMAIN_A\");\n-    assertThatThrownBy(call).isInstanceOf(NotAuthorizedException.class);\n-  }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "482d4c72b30240739e2b5506e23991ffb81e2734"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDM1MA==", "bodyText": "What happened here?", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r442950350", "createdAt": "2020-06-19T16:58:19Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/UpdateClassificationAccTest.java", "diffHunk": "@@ -80,28 +80,9 @@ void testUpdateClassification()\n   }\n \n   @Test\n-  void testUpdateClassificationFails() throws ClassificationNotFoundException {\n-    String newName = \"updated Name\";\n-    String newEntryPoint = \"updated EntryPoint\";\n+  void should_ThrowException_When_UserIsNotAuthorized() throws ClassificationNotFoundException {\n     Classification classification = classificationService.getClassification(\"T2100\", \"DOMAIN_A\");\n-\n-    classification.setApplicationEntryPoint(newEntryPoint);\n-    classification.setCategory(\"PROCESS\");\n     classification.setCustom1(\"newCustom1\");\n-    classification.setCustom2(\"newCustom2\");\n-    classification.setCustom3(\"newCustom3\");\n-    classification.setCustom4(\"newCustom4\");\n-    classification.setCustom5(\"newCustom5\");\n-    classification.setCustom6(\"newCustom6\");\n-    classification.setCustom7(\"newCustom7\");\n-    classification.setCustom8(\"newCustom8\");\n-    classification.setDescription(\"newDescription\");\n-    classification.setIsValidInDomain(false);\n-    classification.setName(newName);\n-    classification.setParentId(\"T2000\");\n-    classification.setPriority(1000);\n-    classification.setServiceLevel(\"P2DT3H4M\");\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "482d4c72b30240739e2b5506e23991ffb81e2734"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1Njc0MA==", "bodyText": "I like this a lot \ud83d\udc4d", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r442956740", "createdAt": "2020-06-19T17:13:16Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/CompleteTaskAccTest.java", "diffHunk": "@@ -126,35 +126,50 @@ void testForceCompleteNotClaimed()\n     assertThat(completedTask.getCompleted()).isEqualTo(completedTask.getModified());\n   }\n \n-  @WithAccessId(user = \"user-1-1\", groups = \"group-1\")\n+  @WithAccessId(user = \"user-1-1\")\n   @Test\n-  void testCompleteTaskThrowsErrors() {\n+  void should_ThrowException_When_TaskIsNotFound() {\n     ThrowingCallable call =\n         () -> {\n           TASK_SERVICE.completeTask(\"TKI:0000000000000000000000000000000000xx\");\n         };\n     assertThatThrownBy(call).isInstanceOf(TaskNotFoundException.class);\n+  }\n \n-    call =\n-        () -> {\n-          TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000004\");\n-        };\n+  @WithAccessId(user = \"user-1-1\")\n+  @Test\n+  void should_ThrowException_When_UserIsNotAuthorizedOnTask() {\n+    ThrowingCallable call =\n+        call =\n+            () -> {\n+              TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000004\");\n+            };\n     assertThatThrownBy(call).isInstanceOf(NotAuthorizedException.class);\n+  }\n \n-    call =\n-        () -> {\n-          TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000025\");\n-        };\n+  @WithAccessId(user = \"user-1-2\")\n+  @Test\n+  void should_ThrowException_When_TaskIsInStateReady() {\n+    ThrowingCallable call =\n+        call =\n+            () -> {\n+              TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000025\");\n+            };\n     assertThatThrownBy(call).isInstanceOf(InvalidStateException.class);\n+  }\n \n-    call =\n-        () -> {\n-          TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000027\");\n-        };\n+  @WithAccessId(user = \"user-1-2\")\n+  @Test\n+  void should_ThrowException_When_TaskCallerIsNotTheOwner() {\n+    ThrowingCallable call =\n+        call =\n+            () -> {\n+              TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000026\");\n+            };\n     assertThatThrownBy(call).isInstanceOf(InvalidOwnerException.class);\n   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "482d4c72b30240739e2b5506e23991ffb81e2734"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2MjMwNQ==", "bodyText": "Is this really necessary?", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r442962305", "createdAt": "2020-06-19T17:25:52Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAuthorizationsAccTest.java", "diffHunk": "@@ -155,7 +151,7 @@ void testUpdatedAccessItemLeadsToNotAuthorizedException()\n \n     String wbKey = \"USER-2-1\";\n     String wbDomain = \"DOMAIN_A\";\n-    final String groupName = \"group-2\";\n+    final String groupName = GROUP_2_DN;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "482d4c72b30240739e2b5506e23991ffb81e2734"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA2NTY4MQ==", "bodyText": "I trust you on this file ;)", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r443065681", "createdAt": "2020-06-19T22:28:45Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-data/src/main/resources/sql/monitor-data/monitor-sample-data.sql", "diffHunk": "@@ -29,53 +29,53 @@ INSERT INTO ATTACHMENT VALUES('ATT:000000000000000000000000000000000010', 'TKI:0\n INSERT INTO ATTACHMENT VALUES('ATT:000000000000000000000000000000000011', 'TKI:000000000000000000000000000000000045', RELATIVE_DATE(0) , RELATIVE_DATE(0) , 'L99000'          ,'CLI:000000000000000000000000000000000009', ''         , ''        , ''          , ''      , ''       , ''     , RELATIVE_DATE(0) , null              );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "482d4c72b30240739e2b5506e23991ffb81e2734"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0OTMxNzY2", "url": "https://github.com/Taskana/taskana/pull/1131#pullrequestreview-434931766", "createdAt": "2020-06-22T13:39:19Z", "commit": {"oid": "6164f13f2ecad13691f1a3f0627051f3f14f0200"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad1a68151d9d061216dbeefa5954c65d13908bad", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/ad1a68151d9d061216dbeefa5954c65d13908bad", "committedDate": "2020-06-22T13:52:40Z", "message": "TSK-1283: general refactoring + made accessIds lowercase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0OTQ0NDg2", "url": "https://github.com/Taskana/taskana/pull/1131#pullrequestreview-434944486", "createdAt": "2020-06-22T13:53:15Z", "commit": {"oid": "ad1a68151d9d061216dbeefa5954c65d13908bad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4500, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}