{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NzMxMDM5", "number": 887, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowNjo1M1rODb13xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowOTowOFrODb16Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTIwNzczOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowNjo1M1rOFjjsPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjoyNDoyN1rOFjxTAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTI0NA==", "bodyText": "Can we use optional here?\nI always aim to minimize nulls ;)", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r372829244", "createdAt": "2020-01-30T09:06:53Z", "author": {"login": "benjamineckstein"}, "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "diffHunk": "@@ -54,15 +55,16 @@ public Map getNullableResult(ResultSet rs, int columnIndex) throws SQLException\n   }\n \n   @Override\n-  public Map getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n+  public Map<String, Object> getNullableResult(CallableStatement cs, int columnIndex)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb47534d055d4475b9b1290b70f2b865e208e5e8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1MjE2Mw==", "bodyText": "unfortunately we can't. We are extending the Mybatis TypeHandler class and are bound to its signature", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r373052163", "createdAt": "2020-01-30T16:24:27Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "diffHunk": "@@ -54,15 +55,16 @@ public Map getNullableResult(ResultSet rs, int columnIndex) throws SQLException\n   }\n \n   @Override\n-  public Map getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n+  public Map<String, Object> getNullableResult(CallableStatement cs, int columnIndex)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTI0NA=="}, "originalCommit": {"oid": "fb47534d055d4475b9b1290b70f2b865e208e5e8"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTIxMTg1OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowODoyM1rOFjjuuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjoyMzowM1rOFjxP2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTg4Mw==", "bodyText": "depending on map size ... this could be time consuming. is this a problem?", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r372829883", "createdAt": "2020-01-30T09:08:23Z", "author": {"login": "benjamineckstein"}, "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "diffHunk": "@@ -17,16 +17,16 @@\n  *\n  * @author EH\n  */\n-@SuppressWarnings(\"rawtypes\")\n-public class MapTypeHandler extends BaseTypeHandler<Map> {\n+public class MapTypeHandler extends BaseTypeHandler<Map<String, Object>> {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(MapTypeHandler.class);\n \n   @Override\n-  public void setNonNullParameter(PreparedStatement ps, int i, Map parameter, JdbcType jdbcType)\n+  public void setNonNullParameter(\n+      PreparedStatement ps, int i, Map<String, Object> parameter, JdbcType jdbcType)\n       throws SQLException {\n     if (parameter != null && parameter.size() > 0) {\n-      LOGGER.debug(\"Input-Map before serializing: \", parameter);\n+      LOGGER.debug(\"Input-Map before serializing: {}\", parameter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb47534d055d4475b9b1290b70f2b865e208e5e8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1MTM1Mg==", "bodyText": "it's debug. Not production relevant.\n+ As soon as we get slf4j 2.0 we will use the lambda method and thus this will be no issue", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r373051352", "createdAt": "2020-01-30T16:23:03Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "diffHunk": "@@ -17,16 +17,16 @@\n  *\n  * @author EH\n  */\n-@SuppressWarnings(\"rawtypes\")\n-public class MapTypeHandler extends BaseTypeHandler<Map> {\n+public class MapTypeHandler extends BaseTypeHandler<Map<String, Object>> {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(MapTypeHandler.class);\n \n   @Override\n-  public void setNonNullParameter(PreparedStatement ps, int i, Map parameter, JdbcType jdbcType)\n+  public void setNonNullParameter(\n+      PreparedStatement ps, int i, Map<String, Object> parameter, JdbcType jdbcType)\n       throws SQLException {\n     if (parameter != null && parameter.size() > 0) {\n-      LOGGER.debug(\"Input-Map before serializing: \", parameter);\n+      LOGGER.debug(\"Input-Map before serializing: {}\", parameter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTg4Mw=="}, "originalCommit": {"oid": "fb47534d055d4475b9b1290b70f2b865e208e5e8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTIxMzc0OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowOTowOFrOFjjv7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTowOTowOFrOFjjv7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzMDE4OA==", "bodyText": "every suppressWarning that we can prevent / refactor is a win !! good job ;)", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r372830188", "createdAt": "2020-01-30T09:09:08Z", "author": {"login": "benjamineckstein"}, "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "diffHunk": "@@ -17,16 +17,16 @@\n  *\n  * @author EH\n  */\n-@SuppressWarnings(\"rawtypes\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb47534d055d4475b9b1290b70f2b865e208e5e8"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4395, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}