{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMDk0MjUz", "number": 1324, "title": "TSK-1445: Update Acess Items Management component with material design ", "bodyText": "For the submitter:\n\n I updated the documentation and will supply links to the specific files\n I did not update the documentation\n I included a link to the SonarCloud branch analysis\n I added a description of changes on the current release notes\n I did not update the current release notes\n I put the ticket in review\n After integration of the pull request, I verified our bluemix test environment is not broken\n\nVerified by the reviewer:\n\n Commit message format \u2192 TSK-XXX: Your commit message.\n Submitter's update to documentation is sufficient\n SonarCloud analysis meets our standards\n Update of the current release notes reflects changes\n PR fulfills the ticket\n Edge cases and unwanted side effects are tested\n Readability", "createdAt": "2020-10-30T15:40:36Z", "url": "https://github.com/Taskana/taskana/pull/1324", "merged": true, "mergeCommit": {"oid": "b4d0e0c947c0c514ec1e39e5f38056def324e88f"}, "closed": true, "closedAt": "2020-11-16T20:26:46Z", "author": {"login": "Franzi321"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXnY8PAH2gAyNTEzMDk0MjUzOjIwNTM1YTkzZDc4YmYxYzIwOTU4YjUwNGY3NWYwM2QxMDE0MTM2ZTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddISOPgFqTUzMTUzODcwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "20535a93d78bf1c20958b504f75f03d1014136e2", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/20535a93d78bf1c20958b504f75f03d1014136e2", "committedDate": "2020-10-30T14:11:02Z", "message": "TSK-1445: remove bootstrap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "738c641edbc465981c660ee7952415d69e3e5f25", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/738c641edbc465981c660ee7952415d69e3e5f25", "committedDate": "2020-10-30T15:38:06Z", "message": "TSK-1445: update access items management component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e7670bdb3beabc3809471814a67c828f8dab49c", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/5e7670bdb3beabc3809471814a67c828f8dab49c", "committedDate": "2020-11-03T12:17:02Z", "message": "TSK-1445: update access items"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80650e70d1c556928929aaea51955b2a2a54f4a8", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/80650e70d1c556928929aaea51955b2a2a54f4a8", "committedDate": "2020-11-03T13:27:53Z", "message": "TSK-1445: fix bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c714bc8d948454d00488d2346ac23a970f3cc811", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/c714bc8d948454d00488d2346ac23a970f3cc811", "committedDate": "2020-11-10T15:28:54Z", "message": "TSK-1445: update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dccdad3a332535b5c489e9f472d7da44516b04b", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/3dccdad3a332535b5c489e9f472d7da44516b04b", "committedDate": "2020-11-11T10:16:39Z", "message": "TSK-1445: update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767", "committedDate": "2020-11-11T10:20:49Z", "message": "TSK-1445: remove inline styles"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MDQ4NjY1", "url": "https://github.com/Taskana/taskana/pull/1324#pullrequestreview-528048665", "createdAt": "2020-11-11T10:30:02Z", "commit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDozMDowMlrOHxHVEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTozMjoxNFrOHxJVrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2MjM1Mg==", "bodyText": "MatDialog and MAT_DIALOG_DEFAULT_OPTIONS aren't used.", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521262352", "createdAt": "2020-11-11T10:30:02Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/administration.module.ts", "diffHunk": "@@ -48,6 +49,9 @@ import { MatProgressBarModule } from '@angular/material/progress-bar';\n import { MatToolbarModule } from '@angular/material/toolbar';\n import { MatCheckboxModule } from '@angular/material/checkbox';\n import { MatRippleModule } from '@angular/material/core';\n+import { MatTableModule } from '@angular/material/table';\n+import { MatDialog, MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2NzgxNw==", "bodyText": "'align' is marked as deprecated, is there another option?\nOn the 'false', the warning 'wrong attribute value' occurs...", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521267817", "createdAt": "2020-11-11T10:39:45Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management-dialog/access-items-management-dialog.component.html", "diffHunk": "@@ -0,0 +1,15 @@\n+<h4>Belonging groups</h4>\n+<mat-dialog-content>\n+    <mat-list *ngIf=\"groups && groups.length > 0; else no\">\n+        <mat-list-item *ngFor=\"let group of groups\">\n+            {{group.name}}\n+            <mat-divider></mat-divider>\n+        </mat-list-item>\n+    </mat-list>\n+    <ng-template #no>The user is not associated to\n+        any groups\n+    </ng-template>\n+</mat-dialog-content>\n+<mat-dialog-actions align=\"end\" autofocus=\"false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2OTMwMw==", "bodyText": "Could we find a name which is a little more meaningful than 'no'? \ud83d\ude04  Maybe 'noGroups'?", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521269303", "createdAt": "2020-11-11T10:42:33Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management-dialog/access-items-management-dialog.component.html", "diffHunk": "@@ -0,0 +1,15 @@\n+<h4>Belonging groups</h4>\n+<mat-dialog-content>\n+    <mat-list *ngIf=\"groups && groups.length > 0; else no\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI3MTE1OQ==", "bodyText": "This is the default value, isn't it? In case this is true, please remove it.", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521271159", "createdAt": "2020-11-11T10:46:00Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management-dialog/access-items-management-dialog.component.scss", "diffHunk": "@@ -0,0 +1,5 @@\n+@import '../../../../theme/colors';\n+\n+.mat-button {\n+  outline: none;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI3MTI2NA==", "bodyText": "unused import?", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521271264", "createdAt": "2020-11-11T10:46:12Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management-dialog/access-items-management-dialog.component.scss", "diffHunk": "@@ -0,0 +1,5 @@\n+@import '../../../../theme/colors';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI3MTkxNg==", "bodyText": "please add 'should create component'", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521271916", "createdAt": "2020-11-11T10:47:21Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management-dialog/access-items-management-dialog.component.spec.ts", "diffHunk": "@@ -0,0 +1,34 @@\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { MatDividerModule } from '@angular/material/divider';\n+import { AccessItemsManagementDialogComponent } from './access-items-management-dialog.component';\n+import { MatListModule } from '@angular/material/list';\n+import { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n+\n+describe('AccessItemsManagementDialogComponent', () => {\n+  let component: AccessItemsManagementDialogComponent;\n+  let fixture: ComponentFixture<AccessItemsManagementDialogComponent>;\n+\n+  beforeEach(async(() => {\n+    const mockDialogRef = {\n+      close: jasmine.createSpy('close')\n+    };\n+    TestBed.configureTestingModule({\n+      imports: [MatDividerModule, MatListModule, MatDialogModule],\n+      declarations: [AccessItemsManagementDialogComponent],\n+      providers: [\n+        { provide: MatDialogRef, useValue: { mockDialogRef } },\n+        { provide: MAT_DIALOG_DATA, useValue: {} }\n+      ]\n+    }).compileComponents();\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(AccessItemsManagementDialogComponent);\n+    component = fixture.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI3MzgwNg==", "bodyText": "The HTML is not tested. In case you don't want to add tests here, we could create a new ticket.", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521273806", "createdAt": "2020-11-11T10:50:57Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management-dialog/access-items-management-dialog.component.spec.ts", "diffHunk": "@@ -0,0 +1,34 @@\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { MatDividerModule } from '@angular/material/divider';\n+import { AccessItemsManagementDialogComponent } from './access-items-management-dialog.component';\n+import { MatListModule } from '@angular/material/list';\n+import { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n+\n+describe('AccessItemsManagementDialogComponent', () => {\n+  let component: AccessItemsManagementDialogComponent;\n+  let fixture: ComponentFixture<AccessItemsManagementDialogComponent>;\n+\n+  beforeEach(async(() => {\n+    const mockDialogRef = {\n+      close: jasmine.createSpy('close')\n+    };\n+    TestBed.configureTestingModule({\n+      imports: [MatDividerModule, MatListModule, MatDialogModule],\n+      declarations: [AccessItemsManagementDialogComponent],\n+      providers: [\n+        { provide: MatDialogRef, useValue: { mockDialogRef } },\n+        { provide: MAT_DIALOG_DATA, useValue: {} }\n+      ]\n+    }).compileComponents();\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(AccessItemsManagementDialogComponent);\n+    component = fixture.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI3ODUyOQ==", "bodyText": "We don't use jasmine anymore, instead we use jest. I think this is sufficient: const mockDialogRef = jest.fn();", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521278529", "createdAt": "2020-11-11T10:59:45Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management-dialog/access-items-management-dialog.component.spec.ts", "diffHunk": "@@ -0,0 +1,34 @@\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { MatDividerModule } from '@angular/material/divider';\n+import { AccessItemsManagementDialogComponent } from './access-items-management-dialog.component';\n+import { MatListModule } from '@angular/material/list';\n+import { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n+\n+describe('AccessItemsManagementDialogComponent', () => {\n+  let component: AccessItemsManagementDialogComponent;\n+  let fixture: ComponentFixture<AccessItemsManagementDialogComponent>;\n+\n+  beforeEach(async(() => {\n+    const mockDialogRef = {\n+      close: jasmine.createSpy('close')\n+    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI3OTA4Ng==", "bodyText": "What is the type of groups? In case it is possible, please add a type.", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521279086", "createdAt": "2020-11-11T11:00:46Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management-dialog/access-items-management-dialog.component.ts", "diffHunk": "@@ -0,0 +1,21 @@\n+import { Component, Inject } from '@angular/core';\n+import { MatDialogRef } from '@angular/material/dialog';\n+import { MAT_DIALOG_DATA } from '@angular/material/dialog';\n+\n+@Component({\n+  selector: 'app-access-items-management-dialog',\n+  templateUrl: './access-items-management-dialog.component.html',\n+  styleUrls: ['./access-items-management-dialog.component.scss']\n+})\n+export class AccessItemsManagementDialogComponent {\n+  groups = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI4MDAwMQ==", "bodyText": "Since you are using ngOnInit(), please add 'implements OnInit'", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521280001", "createdAt": "2020-11-11T11:02:38Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management-dialog/access-items-management-dialog.component.ts", "diffHunk": "@@ -0,0 +1,21 @@\n+import { Component, Inject } from '@angular/core';\n+import { MatDialogRef } from '@angular/material/dialog';\n+import { MAT_DIALOG_DATA } from '@angular/material/dialog';\n+\n+@Component({\n+  selector: 'app-access-items-management-dialog',\n+  templateUrl: './access-items-management-dialog.component.html',\n+  styleUrls: ['./access-items-management-dialog.component.scss']\n+})\n+export class AccessItemsManagementDialogComponent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI4MTc5Mg==", "bodyText": "I get the warning 'Unresolved variable or type panelOpenState'.", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521281792", "createdAt": "2020-11-11T11:05:54Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.html", "diffHunk": "@@ -1,177 +1,136 @@\n <div class=\"access-items-management panel panel-default\">\n-\n-  <div class=\"panel-heading\">\n-    <h4 class=\"panel-header\">Access items management</h4>\n-  </div>\n-\n   <div class=\"panel-body\">\n-    <div class=\"col-md-6 col-md-offset-3 margin\">\n+    <div class=\"panel-body__typeahead\">\n       <taskana-shared-type-ahead name=\"accessIdSelected\" [(ngModel)]=\"accessIdSelected\"\n         placeHolderMessage=\"Search for access id...\" (selectedItem)=\"onSelectAccessId($event)\" displayError=true\n         isRequired=\"false\">\n       </taskana-shared-type-ahead>\n     </div>\n-\n-    <!-- NO ID PLACEHOLDER -->\n-    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail col-xs-12\">\n+    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail\">\n       <h3 class=\"grey\">Select an access id</h3>\n       <svg-icon class=\"empty-icon\" src=\"./assets/icons/users.svg\"></svg-icon>\n     </div>\n-\n-    <!-- CONTENT -->\n-    <div *ngIf=\"accessItemsForm\" class=\"row col-xs-12\">\n-      <ng-form [formGroup]=\"accessItemsForm\">\n-        <!-- TABLE WITH ACCESS ID -->\n-        <table id=\"table-access-items\" class=\"table table-striped table-center\">\n-          <thead>\n-            <!-- TABLE FIRST ROW -->\n-            <tr>\n-              <th>\n-                <taskana-shared-sort [sortingFields]=\"sortingFields\" (performSorting)=\"sorting($event)\"\n-                  menuPosition=\"left\">\n-                </taskana-shared-sort>\n-              </th>\n-              <th class=\"text-align min-width\">Workbasket Key</th>\n-              <th colspan=\"2\" class=\"text-align\">Access Id</th>\n-              <th>Read</th>\n-              <th>Open</th>\n-              <th>Append</th>\n-              <th>Transfer</th>\n-              <th>Distribute</th>\n-              <ng-container *ngFor=\"let customField of customFields$ | async\">\n-                <th *ngIf=\"customField.visible\">\n-                  {{customField.field}}\n+    <mat-expansion-panel *ngIf=\"accessItemsForm\" class=\"expansion-panel\" (opened)=\"panelOpenState = true\"\n+      (closed)=\"panelOpenState = false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI4MjQwNw==", "bodyText": "In case this is not needed anymore, please remove the comments.", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521282407", "createdAt": "2020-11-11T11:07:01Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.scss", "diffHunk": "@@ -15,17 +15,26 @@\n }\n \n .has-changes {\n-    border-bottom: 1px solid $brown;\n-  }\n+  border-bottom: 1px solid $brown;\n+}\n \n+.table {\n+  width: 100%;\n+  //margin-left:2%;\n+  //margin-right:2%;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI4NzQwMw==", "bodyText": "\u00c0ccording to BEM naming convention, the name 'expansion-panel' should be 'panel-body__expansion-panel'.", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521287403", "createdAt": "2020-11-11T11:16:38Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.html", "diffHunk": "@@ -1,177 +1,136 @@\n <div class=\"access-items-management panel panel-default\">\n-\n-  <div class=\"panel-heading\">\n-    <h4 class=\"panel-header\">Access items management</h4>\n-  </div>\n-\n   <div class=\"panel-body\">\n-    <div class=\"col-md-6 col-md-offset-3 margin\">\n+    <div class=\"panel-body__typeahead\">\n       <taskana-shared-type-ahead name=\"accessIdSelected\" [(ngModel)]=\"accessIdSelected\"\n         placeHolderMessage=\"Search for access id...\" (selectedItem)=\"onSelectAccessId($event)\" displayError=true\n         isRequired=\"false\">\n       </taskana-shared-type-ahead>\n     </div>\n-\n-    <!-- NO ID PLACEHOLDER -->\n-    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail col-xs-12\">\n+    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail\">\n       <h3 class=\"grey\">Select an access id</h3>\n       <svg-icon class=\"empty-icon\" src=\"./assets/icons/users.svg\"></svg-icon>\n     </div>\n-\n-    <!-- CONTENT -->\n-    <div *ngIf=\"accessItemsForm\" class=\"row col-xs-12\">\n-      <ng-form [formGroup]=\"accessItemsForm\">\n-        <!-- TABLE WITH ACCESS ID -->\n-        <table id=\"table-access-items\" class=\"table table-striped table-center\">\n-          <thead>\n-            <!-- TABLE FIRST ROW -->\n-            <tr>\n-              <th>\n-                <taskana-shared-sort [sortingFields]=\"sortingFields\" (performSorting)=\"sorting($event)\"\n-                  menuPosition=\"left\">\n-                </taskana-shared-sort>\n-              </th>\n-              <th class=\"text-align min-width\">Workbasket Key</th>\n-              <th colspan=\"2\" class=\"text-align\">Access Id</th>\n-              <th>Read</th>\n-              <th>Open</th>\n-              <th>Append</th>\n-              <th>Transfer</th>\n-              <th>Distribute</th>\n-              <ng-container *ngFor=\"let customField of customFields$ | async\">\n-                <th *ngIf=\"customField.visible\">\n-                  {{customField.field}}\n+    <mat-expansion-panel *ngIf=\"accessItemsForm\" class=\"expansion-panel\" (opened)=\"panelOpenState = true\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5MDUzNQ==", "bodyText": "'table' is no BEM naming convention. Is 'table' from bootstrap?", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521290535", "createdAt": "2020-11-11T11:22:48Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.html", "diffHunk": "@@ -1,177 +1,136 @@\n <div class=\"access-items-management panel panel-default\">\n-\n-  <div class=\"panel-heading\">\n-    <h4 class=\"panel-header\">Access items management</h4>\n-  </div>\n-\n   <div class=\"panel-body\">\n-    <div class=\"col-md-6 col-md-offset-3 margin\">\n+    <div class=\"panel-body__typeahead\">\n       <taskana-shared-type-ahead name=\"accessIdSelected\" [(ngModel)]=\"accessIdSelected\"\n         placeHolderMessage=\"Search for access id...\" (selectedItem)=\"onSelectAccessId($event)\" displayError=true\n         isRequired=\"false\">\n       </taskana-shared-type-ahead>\n     </div>\n-\n-    <!-- NO ID PLACEHOLDER -->\n-    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail col-xs-12\">\n+    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail\">\n       <h3 class=\"grey\">Select an access id</h3>\n       <svg-icon class=\"empty-icon\" src=\"./assets/icons/users.svg\"></svg-icon>\n     </div>\n-\n-    <!-- CONTENT -->\n-    <div *ngIf=\"accessItemsForm\" class=\"row col-xs-12\">\n-      <ng-form [formGroup]=\"accessItemsForm\">\n-        <!-- TABLE WITH ACCESS ID -->\n-        <table id=\"table-access-items\" class=\"table table-striped table-center\">\n-          <thead>\n-            <!-- TABLE FIRST ROW -->\n-            <tr>\n-              <th>\n-                <taskana-shared-sort [sortingFields]=\"sortingFields\" (performSorting)=\"sorting($event)\"\n-                  menuPosition=\"left\">\n-                </taskana-shared-sort>\n-              </th>\n-              <th class=\"text-align min-width\">Workbasket Key</th>\n-              <th colspan=\"2\" class=\"text-align\">Access Id</th>\n-              <th>Read</th>\n-              <th>Open</th>\n-              <th>Append</th>\n-              <th>Transfer</th>\n-              <th>Distribute</th>\n-              <ng-container *ngFor=\"let customField of customFields$ | async\">\n-                <th *ngIf=\"customField.visible\">\n-                  {{customField.field}}\n+    <mat-expansion-panel *ngIf=\"accessItemsForm\" class=\"expansion-panel\" (opened)=\"panelOpenState = true\"\n+      (closed)=\"panelOpenState = false\">\n+      <mat-expansion-panel-header>\n+        <mat-panel-title>\n+          Groups of {{accessId.accessId}}</mat-panel-title>\n+      </mat-expansion-panel-header>\n+      <mat-list class=\"expansion-panel__list\" *ngIf=\"groups && groups.length > 0; else no\">\n+        <mat-list-item *ngFor=\"let group of groups\">\n+          {{group.name}}\n+          <mat-divider></mat-divider>\n+        </mat-list-item>\n+      </mat-list>\n+      <ng-template #no>The user is not associated to\n+        any groups\n+      </ng-template>\n+    </mat-expansion-panel>\n+    <mat-expansion-panel *ngIf=\"accessItemsForm\" [expanded]=\"true\" class=\"expansion-panel\" (opened)=\"panelState = true\"\n+      (closed)=\"panelState = false\">\n+      <mat-expansion-panel-header>\n+        <mat-panel-title>\n+          Authorizations of {{accessId.accessId}}</mat-panel-title>\n+      </mat-expansion-panel-header>\n+      <div *ngIf=\"accessItemsForm\">\n+        <ng-form [formGroup]=\"accessItemsForm\">\n+          <table id=\"table-access-items\" class=\"table table-striped table-center\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5MTE0OQ==", "bodyText": "class name should be table-access-items__clear-filter", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521291149", "createdAt": "2020-11-11T11:24:02Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.html", "diffHunk": "@@ -1,177 +1,136 @@\n <div class=\"access-items-management panel panel-default\">\n-\n-  <div class=\"panel-heading\">\n-    <h4 class=\"panel-header\">Access items management</h4>\n-  </div>\n-\n   <div class=\"panel-body\">\n-    <div class=\"col-md-6 col-md-offset-3 margin\">\n+    <div class=\"panel-body__typeahead\">\n       <taskana-shared-type-ahead name=\"accessIdSelected\" [(ngModel)]=\"accessIdSelected\"\n         placeHolderMessage=\"Search for access id...\" (selectedItem)=\"onSelectAccessId($event)\" displayError=true\n         isRequired=\"false\">\n       </taskana-shared-type-ahead>\n     </div>\n-\n-    <!-- NO ID PLACEHOLDER -->\n-    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail col-xs-12\">\n+    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail\">\n       <h3 class=\"grey\">Select an access id</h3>\n       <svg-icon class=\"empty-icon\" src=\"./assets/icons/users.svg\"></svg-icon>\n     </div>\n-\n-    <!-- CONTENT -->\n-    <div *ngIf=\"accessItemsForm\" class=\"row col-xs-12\">\n-      <ng-form [formGroup]=\"accessItemsForm\">\n-        <!-- TABLE WITH ACCESS ID -->\n-        <table id=\"table-access-items\" class=\"table table-striped table-center\">\n-          <thead>\n-            <!-- TABLE FIRST ROW -->\n-            <tr>\n-              <th>\n-                <taskana-shared-sort [sortingFields]=\"sortingFields\" (performSorting)=\"sorting($event)\"\n-                  menuPosition=\"left\">\n-                </taskana-shared-sort>\n-              </th>\n-              <th class=\"text-align min-width\">Workbasket Key</th>\n-              <th colspan=\"2\" class=\"text-align\">Access Id</th>\n-              <th>Read</th>\n-              <th>Open</th>\n-              <th>Append</th>\n-              <th>Transfer</th>\n-              <th>Distribute</th>\n-              <ng-container *ngFor=\"let customField of customFields$ | async\">\n-                <th *ngIf=\"customField.visible\">\n-                  {{customField.field}}\n+    <mat-expansion-panel *ngIf=\"accessItemsForm\" class=\"expansion-panel\" (opened)=\"panelOpenState = true\"\n+      (closed)=\"panelOpenState = false\">\n+      <mat-expansion-panel-header>\n+        <mat-panel-title>\n+          Groups of {{accessId.accessId}}</mat-panel-title>\n+      </mat-expansion-panel-header>\n+      <mat-list class=\"expansion-panel__list\" *ngIf=\"groups && groups.length > 0; else no\">\n+        <mat-list-item *ngFor=\"let group of groups\">\n+          {{group.name}}\n+          <mat-divider></mat-divider>\n+        </mat-list-item>\n+      </mat-list>\n+      <ng-template #no>The user is not associated to\n+        any groups\n+      </ng-template>\n+    </mat-expansion-panel>\n+    <mat-expansion-panel *ngIf=\"accessItemsForm\" [expanded]=\"true\" class=\"expansion-panel\" (opened)=\"panelState = true\"\n+      (closed)=\"panelState = false\">\n+      <mat-expansion-panel-header>\n+        <mat-panel-title>\n+          Authorizations of {{accessId.accessId}}</mat-panel-title>\n+      </mat-expansion-panel-header>\n+      <div *ngIf=\"accessItemsForm\">\n+        <ng-form [formGroup]=\"accessItemsForm\">\n+          <table id=\"table-access-items\" class=\"table table-striped table-center\">\n+            <thead>\n+              <tr>\n+                <th></th>\n+                <th class=\"table-access-items__align-header\">Workbasket Key</th>\n+                <th class=\"table-access-items__align-header\">Access Id</th>\n+                <th>Read</th>\n+                <th>Open</th>\n+                <th>Append</th>\n+                <th>Transfer</th>\n+                <th>Distribute</th>\n+                <ng-container *ngFor=\"let customField of customFields$ | async\">\n+                  <th *ngIf=\"customField.visible\">\n+                    {{customField.field}}\n+                  </th>\n+                </ng-container>\n+              </tr>\n+              <tr>\n+                <th class=\"table-access-items__sorting\">\n+                  <taskana-shared-sort [sortingFields]=\"sortingFields\" (performSorting)=\"sorting($event)\"\n+                    menuPosition=\"left\">\n+                  </taskana-shared-sort>\n+                </th>\n+                <th>\n+                  <mat-form-field class=\"table-access-items__filter\" appearance=\"outline\">\n+                    <mat-label>Workbasket filter</mat-label>\n+                    <input matInput formControlName=\"workbasketKeyFilter\"\n+                      (keyup.enter)=\"searchForAccessItemsWorkbaskets()\" type=\"text\">\n+                  </mat-form-field>\n+                </th>\n+                <th>\n+                  <mat-form-field class=\"table-access-items__filter\" appearance=\"outline\">\n+                    <mat-label>Access id filter</mat-label>\n+                    <input matInput formControlName=\"accessIdFilter\" (keyup.enter)=\"searchForAccessItemsWorkbaskets()\"\n+                      type=\"text\">\n+                  </mat-form-field>\n+                </th>\n+                <th>\n+                  <button mat-icon-button class=\"table-access-items__clearFilter\" matTooltip=\"Clear filter\" color=\"warn\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5Mjc5NQ==", "bodyText": "'form-control' is bootstrap. There are input fields from material: https://material.angular.io/components/input/overview", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521292795", "createdAt": "2020-11-11T11:27:15Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.html", "diffHunk": "@@ -1,177 +1,136 @@\n <div class=\"access-items-management panel panel-default\">\n-\n-  <div class=\"panel-heading\">\n-    <h4 class=\"panel-header\">Access items management</h4>\n-  </div>\n-\n   <div class=\"panel-body\">\n-    <div class=\"col-md-6 col-md-offset-3 margin\">\n+    <div class=\"panel-body__typeahead\">\n       <taskana-shared-type-ahead name=\"accessIdSelected\" [(ngModel)]=\"accessIdSelected\"\n         placeHolderMessage=\"Search for access id...\" (selectedItem)=\"onSelectAccessId($event)\" displayError=true\n         isRequired=\"false\">\n       </taskana-shared-type-ahead>\n     </div>\n-\n-    <!-- NO ID PLACEHOLDER -->\n-    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail col-xs-12\">\n+    <div *ngIf=\"!accessItemsForm\" class=\"center-block no-detail\">\n       <h3 class=\"grey\">Select an access id</h3>\n       <svg-icon class=\"empty-icon\" src=\"./assets/icons/users.svg\"></svg-icon>\n     </div>\n-\n-    <!-- CONTENT -->\n-    <div *ngIf=\"accessItemsForm\" class=\"row col-xs-12\">\n-      <ng-form [formGroup]=\"accessItemsForm\">\n-        <!-- TABLE WITH ACCESS ID -->\n-        <table id=\"table-access-items\" class=\"table table-striped table-center\">\n-          <thead>\n-            <!-- TABLE FIRST ROW -->\n-            <tr>\n-              <th>\n-                <taskana-shared-sort [sortingFields]=\"sortingFields\" (performSorting)=\"sorting($event)\"\n-                  menuPosition=\"left\">\n-                </taskana-shared-sort>\n-              </th>\n-              <th class=\"text-align min-width\">Workbasket Key</th>\n-              <th colspan=\"2\" class=\"text-align\">Access Id</th>\n-              <th>Read</th>\n-              <th>Open</th>\n-              <th>Append</th>\n-              <th>Transfer</th>\n-              <th>Distribute</th>\n-              <ng-container *ngFor=\"let customField of customFields$ | async\">\n-                <th *ngIf=\"customField.visible\">\n-                  {{customField.field}}\n+    <mat-expansion-panel *ngIf=\"accessItemsForm\" class=\"expansion-panel\" (opened)=\"panelOpenState = true\"\n+      (closed)=\"panelOpenState = false\">\n+      <mat-expansion-panel-header>\n+        <mat-panel-title>\n+          Groups of {{accessId.accessId}}</mat-panel-title>\n+      </mat-expansion-panel-header>\n+      <mat-list class=\"expansion-panel__list\" *ngIf=\"groups && groups.length > 0; else no\">\n+        <mat-list-item *ngFor=\"let group of groups\">\n+          {{group.name}}\n+          <mat-divider></mat-divider>\n+        </mat-list-item>\n+      </mat-list>\n+      <ng-template #no>The user is not associated to\n+        any groups\n+      </ng-template>\n+    </mat-expansion-panel>\n+    <mat-expansion-panel *ngIf=\"accessItemsForm\" [expanded]=\"true\" class=\"expansion-panel\" (opened)=\"panelState = true\"\n+      (closed)=\"panelState = false\">\n+      <mat-expansion-panel-header>\n+        <mat-panel-title>\n+          Authorizations of {{accessId.accessId}}</mat-panel-title>\n+      </mat-expansion-panel-header>\n+      <div *ngIf=\"accessItemsForm\">\n+        <ng-form [formGroup]=\"accessItemsForm\">\n+          <table id=\"table-access-items\" class=\"table table-striped table-center\">\n+            <thead>\n+              <tr>\n+                <th></th>\n+                <th class=\"table-access-items__align-header\">Workbasket Key</th>\n+                <th class=\"table-access-items__align-header\">Access Id</th>\n+                <th>Read</th>\n+                <th>Open</th>\n+                <th>Append</th>\n+                <th>Transfer</th>\n+                <th>Distribute</th>\n+                <ng-container *ngFor=\"let customField of customFields$ | async\">\n+                  <th *ngIf=\"customField.visible\">\n+                    {{customField.field}}\n+                  </th>\n+                </ng-container>\n+              </tr>\n+              <tr>\n+                <th class=\"table-access-items__sorting\">\n+                  <taskana-shared-sort [sortingFields]=\"sortingFields\" (performSorting)=\"sorting($event)\"\n+                    menuPosition=\"left\">\n+                  </taskana-shared-sort>\n+                </th>\n+                <th>\n+                  <mat-form-field class=\"table-access-items__filter\" appearance=\"outline\">\n+                    <mat-label>Workbasket filter</mat-label>\n+                    <input matInput formControlName=\"workbasketKeyFilter\"\n+                      (keyup.enter)=\"searchForAccessItemsWorkbaskets()\" type=\"text\">\n+                  </mat-form-field>\n+                </th>\n+                <th>\n+                  <mat-form-field class=\"table-access-items__filter\" appearance=\"outline\">\n+                    <mat-label>Access id filter</mat-label>\n+                    <input matInput formControlName=\"accessIdFilter\" (keyup.enter)=\"searchForAccessItemsWorkbaskets()\"\n+                      type=\"text\">\n+                  </mat-form-field>\n+                </th>\n+                <th>\n+                  <button mat-icon-button class=\"table-access-items__clearFilter\" matTooltip=\"Clear filter\" color=\"warn\"\n+                    (click)=\"clearFilter()\" title=\"clearFilter\">\n+                    <mat-icon>close</mat-icon>\n+                  </button>\n                 </th>\n-              </ng-container>\n-            </tr>\n-            <!-- TABLE SECOND ROW -->\n-            <tr>\n-              <th colspan=\"2\" class=\"text-align\"><label>\n-                  <input type=\"text\" formControlName=\"workbasketKeyFilter\"\n-                    (keyup.enter)=\"searchForAccessItemsWorkbaskets()\" class=\"form-control\"\n-                    placeholder=\"Workbasket filter\">\n-                </label></th>\n-              <th class=\"text-align\"><label>\n-                  <input type=\"text\" formControlName=\"accessIdFilter\" (keyup.enter)=\"searchForAccessItemsWorkbaskets()\"\n-                    class=\"form-control\" placeholder=\"Access id filter\">\n-                </label></th>\n-              <th>\n-                <button type=\"button\" (click)=\"searchForAccessItemsWorkbaskets()\" class=\"btn btn-default\"\n-                  data-toggle=\"tooltip\" title=\"Search\">\n-                  <span class=\"material-icons md-20 blue\">search</span>\n-                </button>\n-              </th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-              <th></th>\n-            </tr>\n-          </thead>\n-\n-          <!-- ACCESS ITEMS GROUPS -->\n-          <tbody formArrayName=\"accessItemsGroups\">\n-            <tr class=\"table__access-item-groups\"\n-              *ngFor=\"let accessItem of accessItemsGroups.controls; let index = index;\"\n-              [formGroupName]=\"index.toString()\">\n-              <td colspan=\"2\">\n-                <label class=\"wrap\">{{accessItem.value.workbasketKey}}</label>\n-              </td>\n-              <td *ngIf=\"(accessItemsCustomization$ | async)?.accessId.lookupField else accessIdInput\" colspan=\"2\"\n-                class=\"text-align text-width taskana-type-ahead\" style=\"padding-top: 0;\">\n-                <div>\n-                  <taskana-shared-type-ahead formControlName=\"accessId\" placeHolderMessage=\"* Access id is required\"\n-                    [validationValue]=\"toggleValidationAccessIdMap.get(index)\"\n-                    [displayError]=\"!isFieldValid('accessItem.value.accessId', index)\" [disable]=true>\n-                  </taskana-shared-type-ahead>\n-                </div>\n-              </td>\n-              <ng-template #accessIdInput>\n-                <td colspan=\"2\" class=\"text-align text-width\">\n-                  <div>\n-                    <label>\n-                      <input type=\"text\" class=\"form-control\" formControlName=\"accessId\" placeholder=\"{{accessItem.invalid?\n+              </tr>\n+            </thead>\n+            <tbody formArrayName=\"accessItemsGroups\">\n+              <tr class=\"table-access-item__content\"\n+                *ngFor=\"let accessItem of accessItemsGroups.controls; let index = index;\"\n+                [formGroupName]=\"index.toString()\">\n+                <td></td>\n+                <td colspan=\"1\" class=\"text-align text-width taskana-type-ahead\">\n+                  <label class=\"wrap\">{{accessItem.value.workbasketKey}}</label>\n+                </td>\n+                <td *ngIf=\"(accessItemsCustomization$ | async)?.accessId.lookupField else accessIdInput\"\n+                  class=\"text-align text-width taskana-type-ahead\">\n+                  <label matTooltip=\"{{accessItem.value.accessId}}\" class=\"wrap\">{{accessItem.value.accessName}}</label>\n+                </td>\n+                <ng-template #accessIdInput>\n+                  <td colspan=\"1\" class=\"text-align text-width\">\n+                    <div>\n+                      <label>\n+                        <input type=\"text\" class=\"form-control\" formControlName=\"accessId\" placeholder=\"{{accessItem.invalid?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 192}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NTAyMA==", "bodyText": "unused import", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521295020", "createdAt": "2020-11-11T11:31:39Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.ts", "diffHunk": "@@ -18,6 +18,9 @@ import {\n   RemoveAccessItemsPermissions\n } from '../../../shared/store/access-items-management-store/access-items-management.actions';\n import { AccessItemsManagementSelector } from '../../../shared/store/access-items-management-store/access-items-management.selector';\n+import { MatTableDataSource } from '@angular/material/table';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NTA5OA==", "bodyText": "unused import", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521295098", "createdAt": "2020-11-11T11:31:49Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.ts", "diffHunk": "@@ -18,6 +18,9 @@ import {\n   RemoveAccessItemsPermissions\n } from '../../../shared/store/access-items-management-store/access-items-management.actions';\n import { AccessItemsManagementSelector } from '../../../shared/store/access-items-management-store/access-items-management.selector';\n+import { MatTableDataSource } from '@angular/material/table';\n+import { MatDialog } from '@angular/material/dialog';\n+import { AccessItemsManagementDialogComponent } from '../access-items-management-dialog/access-items-management-dialog.component';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NTI3OQ==", "bodyText": "please add a type", "url": "https://github.com/Taskana/taskana/pull/1324#discussion_r521295279", "createdAt": "2020-11-11T11:32:14Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/access-items-management/access-items-management.component.ts", "diffHunk": "@@ -28,7 +31,8 @@ export class AccessItemsManagementComponent implements OnInit {\n   accessIdSelected: string;\n   accessIdPrevious: string;\n   isRequired: boolean = false;\n-\n+  accessIdName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b2dfbaf0bc1932f68d1b68d3f8d30460c27767"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "247c4c6fafe5d73ab47f7fa2f6113e272c097f19", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/247c4c6fafe5d73ab47f7fa2f6113e272c097f19", "committedDate": "2020-11-12T13:43:25Z", "message": "TSK-1445: adapt requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f6f7210c1f1039d6d6ce418d0b6869f7c7aaeff", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/9f6f7210c1f1039d6d6ce418d0b6869f7c7aaeff", "committedDate": "2020-11-16T17:12:19Z", "message": "TSK-1445: update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTM4NzA0", "url": "https://github.com/Taskana/taskana/pull/1324#pullrequestreview-531538704", "createdAt": "2020-11-16T17:20:11Z", "commit": {"oid": "9f6f7210c1f1039d6d6ce418d0b6869f7c7aaeff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4577, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}