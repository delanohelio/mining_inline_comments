{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTEyNzk0", "number": 1347, "title": "TSK-1443: Order TaskQueries by Workbasket Name", "bodyText": "Implemented an option to order the result of the TaskQuery by the Workbasket-Name.\n\n\n \nFor the submitter:\n\n I updated the documentation and will supply links to the specific files\n I did not update the documentation\n I included a link to the SonarCloud branch analysis\n I added a description of changes on the current release notes\n I did not update the current release notes\n I put the ticket in review\n After integration of the pull request, I verified our bluemix test environment is not broken\n\nVerified by the reviewer:\n\n Commit message format \u2192 TSK-XXX: Your commit message.\n Submitter's update to documentation is sufficient\n SonarCloud analysis meets our standards\n Update of the current release notes reflects changes\n PR fulfills the ticket\n Edge cases and unwanted side effects are tested\n Readability", "createdAt": "2020-11-17T15:50:03Z", "url": "https://github.com/Taskana/taskana/pull/1347", "merged": true, "mergeCommit": {"oid": "70a3ade7f23d12dc4a2bb4fdf7b7010c9423f493"}, "closed": true, "closedAt": "2020-12-02T22:24:09Z", "author": {"login": "tge20"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddqIpnAFqTUzMzIwMjI2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh2F1dgH2gAyNTIyNTEyNzk0OmQ5YmRiMjRiNGMwOGZhYTVjMGQzZGMwYTlkMTVmZmZjYjBiMmYxNTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMjAyMjY5", "url": "https://github.com/Taskana/taskana/pull/1347#pullrequestreview-533202269", "createdAt": "2020-11-18T08:27:00Z", "commit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODoyNzowMFrOH1iKeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo0NjowMFrOH1i31g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg5NjMxNA==", "bodyText": "These are the workbasket names, not the ids, right?", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525896314", "createdAt": "2020-11-18T08:27:00Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg5NjUwMA==", "bodyText": "see above", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525896500", "createdAt": "2020-11-18T08:27:15Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }\n+    results = taskService.createTaskQuery().orderByWorkbasketName(desc).list();\n+\n+    List<String> idsDesc =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMDk5NQ==", "bodyText": "I'm missing a separate \"joinWithWorkbaskets\" property here like for the attachments and classifications.", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525900995", "createdAt": "2020-11-18T08:34:42Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryMapper.java", "diffHunk": "@@ -37,6 +40,9 @@\n           + \"<if test=\\\"joinWithAttachmentClassifications\\\">\"\n           + \"LEFT JOIN CLASSIFICATION AS ac ON a.CLASSIFICATION_ID = ac.ID \"\n           + \"</if>\"\n+          + \"<if test=\\\"addWorkbasketNameForOrdering\\\">\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMzA0NQ==", "bodyText": "should we name this \"addWorkbasketNameToSelectClauseForOrdering\" to be consistent with the rest?\nAren't we missing a \"joinWithWorkbaskets\" property? (Which should probably also be handled in the setupJoinAndOrderParameters() method)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525903045", "createdAt": "2020-11-18T08:37:59Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryImpl.java", "diffHunk": "@@ -158,6 +158,7 @@\n   private boolean addAttachmentColumnsToSelectClauseForOrdering = false;\n   private boolean addClassificationNameToSelectClauseForOrdering = false;\n   private boolean addAttachmentClassificationNameToSelectClauseForOrdering = false;\n+  private boolean addWorkbasketNameForOrdering = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNDA2Nw==", "bodyText": "workbasket name instead of workbasket-Name?", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525904067", "createdAt": "2020-11-18T08:39:35Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/api/TaskQuery.java", "diffHunk": "@@ -848,6 +848,15 @@ TaskQuery customAttributeLike(TaskCustomField customField, String... searchArgum\n    */\n   TaskQuery orderByWorkbasketId(SortDirection sortDirection);\n \n+  /**\n+   * This method sorts the query result according to the workbasket-Name of the tasks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNTIzOQ==", "bodyText": "should we name this \"addWorkbasketNameToSelectClauseForOdering\", to be consistent with the if tests for ClassificationName and AttachmentClassificationName? (See TaskQueryImpl comment)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525905239", "createdAt": "2020-11-18T08:41:38Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryMapper.java", "diffHunk": "@@ -217,6 +223,9 @@\n           + \"<if test=\\\"addAttachmentClassificationNameToSelectClauseForOrdering\\\">\"\n           + \", ACNAME \"\n           + \"</if>\"\n+          + \"<if test=\\\"addWorkbasketNameForOrdering\\\">\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNjkwNA==", "bodyText": "Our naming pattern for tests is:\nshould_ExpectedBehavior_When_StateUnderTest\nExample: \"should_AddErrorsForInvalidTaskIds_When_BulkForceCompletingTasks()\"", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525906904", "createdAt": "2020-11-18T08:44:26Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNzkyNg==", "bodyText": "Please don't use admin as the user", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525907926", "createdAt": "2020-11-18T08:46:00Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNTQ5MzI5", "url": "https://github.com/Taskana/taskana/pull/1347#pullrequestreview-533549329", "createdAt": "2020-11-18T15:15:36Z", "commit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxNTozNlrOH1yqxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxOToxNVrOH1y2PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2NjcyNA==", "bodyText": "please use DB#isDb2", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526166724", "createdAt": "2020-11-18T15:15:36Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryImpl.java", "diffHunk": "@@ -851,6 +852,14 @@ public TaskQuery orderByWorkbasketId(SortDirection sortDirection) {\n     return addOrderCriteria(\"WORKBASKET_ID\", sortDirection);\n   }\n \n+  @Override\n+  public TaskQuery orderByWorkbasketName(SortDirection sortDirection) {\n+    addWorkbasketNameForOrdering = true;\n+    return DB.DB2.dbProductId.equals(getDatabaseId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2NzA3MA==", "bodyText": "@gitgoodjhe why not? Was done in that file anyway", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526167070", "createdAt": "2020-11-18T15:16:02Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNzkyNg=="}, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODM0NQ==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use the provided options from assertJ (see ListAssert)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526168345", "createdAt": "2020-11-18T15:17:35Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODUyOQ==", "bodyText": "why do you sort the list?", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526168529", "createdAt": "2020-11-18T15:17:51Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODc5OQ==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use the provided options from assertJ (see ListAssert)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526168799", "createdAt": "2020-11-18T15:18:09Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODk0Mg==", "bodyText": "why do you sort the list?", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526168942", "createdAt": "2020-11-18T15:18:21Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }\n+    results = taskService.createTaskQuery().orderByWorkbasketName(desc).list();\n+\n+    List<String> idsDesc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted(Comparator.reverseOrder())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2OTAxOA==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use the provided options from assertJ (see ListAssert)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526169018", "createdAt": "2020-11-18T15:18:26Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }\n+    results = taskService.createTaskQuery().orderByWorkbasketName(desc).list();\n+\n+    List<String> idsDesc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted(Comparator.reverseOrder())\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsDesc.get(i));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2OTUzNw==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use method references", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526169537", "createdAt": "2020-11-18T15:19:05Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }\n+    results = taskService.createTaskQuery().orderByWorkbasketName(desc).list();\n+\n+    List<String> idsDesc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2OTY2MQ==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use method references", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526169661", "createdAt": "2020-11-18T15:19:15Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjY5NDg3", "url": "https://github.com/Taskana/taskana/pull/1347#pullrequestreview-535669487", "createdAt": "2020-11-20T18:13:53Z", "commit": {"oid": "b756d5c35d6a948ec4bf166f6a78b9373990fdc1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTQ5NTI3", "url": "https://github.com/Taskana/taskana/pull/1347#pullrequestreview-540549527", "createdAt": "2020-11-30T01:20:58Z", "commit": {"oid": "b756d5c35d6a948ec4bf166f6a78b9373990fdc1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "272842e864315902c69500c77dd87565aad71741", "author": {"user": {"login": "tge20", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/272842e864315902c69500c77dd87565aad71741", "committedDate": "2020-12-01T08:57:59Z", "message": "TSK-1443: Implemented an option to order the result of the TaskQuery by the Workbasket-Name."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9bdb24b4c08faa5c0d3dc0a9d15fffcb0b2f158", "author": {"user": {"login": "tge20", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/d9bdb24b4c08faa5c0d3dc0a9d15fffcb0b2f158", "committedDate": "2020-12-01T08:57:59Z", "message": "TSK-1443: improvements after review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4583, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}