{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDQxMjUy", "number": 1009, "title": "Tsk 1180", "bodyText": "migrate from hamcreat via Junit 5 Assertions to assertJ", "createdAt": "2020-04-09T14:00:15Z", "url": "https://github.com/Taskana/taskana/pull/1009", "merged": true, "mergeCommit": {"oid": "3c326b6e3f34fd1e7082db9d6b71775b10ed2519"}, "closed": true, "closedAt": "2020-04-20T06:10:18Z", "author": {"login": "sfrevel"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWCqiGgBqjMyMTk4ODg4ODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZYMztAFqTM5NjE0NzE2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34ffddc223440a64d5e08dca441f8fd4aacc5112", "author": {"user": {"login": "sfrevel", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/34ffddc223440a64d5e08dca441f8fd4aacc5112", "committedDate": "2020-04-09T12:29:45Z", "message": "TSK-1180: add archUnit rule for checking if org.junit.jupiter.api.Assertions is used in classes"}, "afterCommit": {"oid": "ed9bae9a83aabda72f1dda54b111575717e16d01", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/ed9bae9a83aabda72f1dda54b111575717e16d01", "committedDate": "2020-04-09T20:38:30Z", "message": "TSK-1080: fixed archunit tests which failed due to rebase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzMxMzY1", "url": "https://github.com/Taskana/taskana/pull/1009#pullrequestreview-391331365", "createdAt": "2020-04-10T08:31:11Z", "commit": {"oid": "ed9bae9a83aabda72f1dda54b111575717e16d01"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwODozMToxMVrOGD0nPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxODo1NzoxM1rOGEPUZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY2MDkyNA==", "bodyText": "any idea why this is/was commented out?", "url": "https://github.com/Taskana/taskana/pull/1009#discussion_r406660924", "createdAt": "2020-04-10T08:31:11Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/GetClassificationAccTest.java", "diffHunk": "@@ -91,55 +91,53 @@ void testGetClassificationAsSummary() throws ClassificationNotFoundException {\n         classificationService\n             .getClassification(\"CLI:100000000000000000000000000000000011\")\n             .asSummary();\n-    assertNotNull(classification);\n-    assertEquals(\"T6310\", classification.getKey());\n-    assertEquals(\"\", classification.getParentId());\n-    assertEquals(\"AUTOMATIC\", classification.getCategory());\n-    assertEquals(\"TASK\", classification.getType());\n-    assertEquals(\"DOMAIN_A\", classification.getDomain());\n-    assertEquals(\"T-GUK Honorarrechnung erstellen\", classification.getName());\n-    // assertEquals(\"Generali Unterst\u00fctzungskasse Honorar wird f\u00e4llig\",\n-    // classification.getDescription());\n-    assertEquals(2, classification.getPriority());\n-    assertEquals(\"P2D\", classification.getServiceLevel());\n+    assertThat(classification).isNotNull();\n+    assertThat(classification.getKey()).isEqualTo(\"T6310\");\n+    assertThat(classification.getParentId()).isEqualTo(\"\");\n+    assertThat(classification.getCategory()).isEqualTo(\"AUTOMATIC\");\n+    assertThat(classification.getType()).isEqualTo(\"TASK\");\n+    assertThat(classification.getDomain()).isEqualTo(\"DOMAIN_A\");\n+    assertThat(classification.getName()).isEqualTo(\"T-GUK Honorarrechnung erstellen\");\n+    //    assertThat(classification.getDescription())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed9bae9a83aabda72f1dda54b111575717e16d01"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2ODY5Ng==", "bodyText": "Can be removed", "url": "https://github.com/Taskana/taskana/pull/1009#discussion_r407068696", "createdAt": "2020-04-11T14:12:51Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/QueryClassificationAccTest.java", "diffHunk": "@@ -198,83 +170,72 @@ void testGetClassificationsWithParentKey() {\n             .parentKeyIn(\"L10000\", \"T2100\", \"T6310\")\n             .domainIn(\"DOMAIN_A\")\n             .list();\n-    assertNotNull(classifications);\n-    assertEquals(2, classifications.size());\n+    assertThat(classifications).isNotNull().hasSize(2);\n   }\n \n   @Test\n   void testGetClassificationsWithCustom1() throws InvalidArgumentException {\n-    ClassificationService classificationService = taskanaEngine.getClassificationService();\n     List<ClassificationSummary> classifications =\n         classificationService\n             .createClassificationQuery()\n             .customAttributeIn(\"1\", \"VNR,RVNR,KOLVNR\", \"VNR\")\n             .domainIn(\"DOMAIN_A\")\n             .list();\n-    assertNotNull(classifications);\n-    assertEquals(14, classifications.size());\n+    assertThat(classifications).isNotNull().hasSize(14);\n   }\n \n   @Test\n   void testGetClassificationsWithCustom1Like() throws InvalidArgumentException {\n-    ClassificationService classificationService = taskanaEngine.getClassificationService();\n     List<ClassificationSummary> classifications =\n         classificationService\n             .createClassificationQuery()\n             .customAttributeLike(\"1\", \"%RVNR%\")\n             .domainIn(\"DOMAIN_A\")\n             .typeIn(\"TASK\")\n             .list();\n-    assertNotNull(classifications);\n-    assertEquals(13, classifications.size());\n+    assertThat(classifications).isNotNull().hasSize(13);\n   }\n \n   @Test\n   void testGetClassificationsWithParentAndCustom2() throws InvalidArgumentException {\n-    ClassificationService classificationService = taskanaEngine.getClassificationService();\n     List<ClassificationSummary> classifications =\n         classificationService\n             .createClassificationQuery()\n             .parentIdIn(\"CLI:100000000000000000000000000000000004\")\n             .customAttributeIn(\"2\", \"TEXT_1\", \"TEXT_2\")\n             .list();\n     // zwei tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93aec17907d494b6c45df3c5735f7095b8c0f18f"}, "originalPosition": 267}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2ODkzMg==", "bodyText": "hasSize() implicitly tests NotNull. Please remove", "url": "https://github.com/Taskana/taskana/pull/1009#discussion_r407068932", "createdAt": "2020-04-11T14:14:28Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/QueryClassificationAccTest.java", "diffHunk": "@@ -198,83 +170,72 @@ void testGetClassificationsWithParentKey() {\n             .parentKeyIn(\"L10000\", \"T2100\", \"T6310\")\n             .domainIn(\"DOMAIN_A\")\n             .list();\n-    assertNotNull(classifications);\n-    assertEquals(2, classifications.size());\n+    assertThat(classifications).isNotNull().hasSize(2);\n   }\n \n   @Test\n   void testGetClassificationsWithCustom1() throws InvalidArgumentException {\n-    ClassificationService classificationService = taskanaEngine.getClassificationService();\n     List<ClassificationSummary> classifications =\n         classificationService\n             .createClassificationQuery()\n             .customAttributeIn(\"1\", \"VNR,RVNR,KOLVNR\", \"VNR\")\n             .domainIn(\"DOMAIN_A\")\n             .list();\n-    assertNotNull(classifications);\n-    assertEquals(14, classifications.size());\n+    assertThat(classifications).isNotNull().hasSize(14);\n   }\n \n   @Test\n   void testGetClassificationsWithCustom1Like() throws InvalidArgumentException {\n-    ClassificationService classificationService = taskanaEngine.getClassificationService();\n     List<ClassificationSummary> classifications =\n         classificationService\n             .createClassificationQuery()\n             .customAttributeLike(\"1\", \"%RVNR%\")\n             .domainIn(\"DOMAIN_A\")\n             .typeIn(\"TASK\")\n             .list();\n-    assertNotNull(classifications);\n-    assertEquals(13, classifications.size());\n+    assertThat(classifications).isNotNull().hasSize(13);\n   }\n \n   @Test\n   void testGetClassificationsWithParentAndCustom2() throws InvalidArgumentException {\n-    ClassificationService classificationService = taskanaEngine.getClassificationService();\n     List<ClassificationSummary> classifications =\n         classificationService\n             .createClassificationQuery()\n             .parentIdIn(\"CLI:100000000000000000000000000000000004\")\n             .customAttributeIn(\"2\", \"TEXT_1\", \"TEXT_2\")\n             .list();\n     // zwei tests\n-    assertNotNull(classifications);\n-    assertEquals(3, classifications.size());\n+    assertThat(classifications).isNotNull().hasSize(3);\n   }\n \n   @Test\n   void testFindClassificationsByCreatedTimestamp() {\n-    ClassificationService classificationService = taskanaEngine.getClassificationService();\n     List<ClassificationSummary> classificationSummaryList =\n         classificationService\n             .createClassificationQuery()\n             .domainIn(\"DOMAIN_A\")\n             .createdWithin(todaysInterval())\n             .list();\n \n-    assertNotNull(classificationSummaryList);\n-    assertEquals(17, classificationSummaryList.size());\n+    assertThat(classificationSummaryList).isNotNull().hasSize(17);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93aec17907d494b6c45df3c5735f7095b8c0f18f"}, "originalPosition": 285}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2OTQyNw==", "bodyText": "can be improved.", "url": "https://github.com/Taskana/taskana/pull/1009#discussion_r407069427", "createdAt": "2020-04-11T14:19:41Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/UpdateClassificationAccTest.java", "diffHunk": "@@ -82,11 +77,11 @@ public void testUpdateClassification()\n     // Get and check the new value\n     Classification updatedClassification =\n         classificationService.getClassification(\"T2100\", \"DOMAIN_A\");\n-    assertNotNull(updatedClassification);\n-    assertThat(updatedClassification.getName(), equalTo(newName));\n-    assertThat(updatedClassification.getApplicationEntryPoint(), equalTo(newEntryPoint));\n-    assertThat(updatedClassification.getCreated(), equalTo(createdBefore));\n-    assertTrue(modifiedBefore.isBefore(updatedClassification.getModified()));\n+    assertThat(updatedClassification).isNotNull();\n+    assertThat(updatedClassification.getName()).isEqualTo(newName);\n+    assertThat(updatedClassification.getApplicationEntryPoint()).isEqualTo(newEntryPoint);\n+    assertThat(updatedClassification.getCreated()).isEqualTo(createdBefore);\n+    assertThat(modifiedBefore.isBefore(updatedClassification.getModified())).isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93aec17907d494b6c45df3c5735f7095b8c0f18f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2OTQ3NQ==", "bodyText": "assertThat(modifiedBefore).isBefore(updatedClassification.getModified());", "url": "https://github.com/Taskana/taskana/pull/1009#discussion_r407069475", "createdAt": "2020-04-11T14:20:11Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/UpdateClassificationAccTest.java", "diffHunk": "@@ -82,11 +77,11 @@ public void testUpdateClassification()\n     // Get and check the new value\n     Classification updatedClassification =\n         classificationService.getClassification(\"T2100\", \"DOMAIN_A\");\n-    assertNotNull(updatedClassification);\n-    assertThat(updatedClassification.getName(), equalTo(newName));\n-    assertThat(updatedClassification.getApplicationEntryPoint(), equalTo(newEntryPoint));\n-    assertThat(updatedClassification.getCreated(), equalTo(createdBefore));\n-    assertTrue(modifiedBefore.isBefore(updatedClassification.getModified()));\n+    assertThat(updatedClassification).isNotNull();\n+    assertThat(updatedClassification.getName()).isEqualTo(newName);\n+    assertThat(updatedClassification.getApplicationEntryPoint()).isEqualTo(newEntryPoint);\n+    assertThat(updatedClassification.getCreated()).isEqualTo(createdBefore);\n+    assertThat(modifiedBefore.isBefore(updatedClassification.getModified())).isTrue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2OTQyNw=="}, "originalCommit": {"oid": "93aec17907d494b6c45df3c5735f7095b8c0f18f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5ODQ2OA==", "bodyText": "assertThat(modifiedBefore).isBeforeOrEqualTo(updatedClassification.getModified());", "url": "https://github.com/Taskana/taskana/pull/1009#discussion_r407098468", "createdAt": "2020-04-11T18:57:13Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/UpdateClassificationAccTest.java", "diffHunk": "@@ -139,20 +133,18 @@ public void testUpdateTaskOnClassificationKeyCategoryChange() throws Exception {\n     TaskImpl updatedTask =\n         (TaskImpl)\n             taskanaEngine.getTaskService().getTask(\"TKI:000000000000000000000000000000000000\");\n-    assertThat(\n-        updatedTask.getClassificationCategory(),\n-        not(equalTo(beforeTask.getClassificationCategory())));\n-    assertThat(\n-        updatedTask.getClassificationSummary().getCategory(),\n-        not(equalTo(beforeTask.getClassificationSummary().getCategory())));\n-    assertThat(updatedTask.getClassificationCategory(), equalTo(\"PROCESS\"));\n-    assertThat(updatedTask.getClassificationSummary().getCategory(), equalTo(\"PROCESS\"));\n-\n-    assertThat(classification.getCreated(), equalTo(createdBefore));\n+    assertThat(beforeTask.getClassificationCategory())\n+        .isNotEqualTo(updatedTask.getClassificationCategory());\n+    assertThat(beforeTask.getClassificationSummary().getCategory())\n+        .isNotEqualTo(updatedTask.getClassificationSummary().getCategory());\n+    assertThat(updatedTask.getClassificationCategory()).isEqualTo(\"PROCESS\");\n+    assertThat(updatedTask.getClassificationSummary().getCategory()).isEqualTo(\"PROCESS\");\n+    assertThat(classification.getCreated()).isEqualTo(createdBefore);\n     // isBeforeOrEquals in case of too fast execution\n-    assertTrue(\n-        modifiedBefore.isBefore(classification.getModified())\n-            || modifiedBefore.equals(classification.getModified()));\n+    assertThat(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93aec17907d494b6c45df3c5735f7095b8c0f18f"}, "originalPosition": 78}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81272075d7e61af231985aac5eb1def637dcd47f", "author": {"user": {"login": "sfrevel", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/81272075d7e61af231985aac5eb1def637dcd47f", "committedDate": "2020-04-17T13:26:17Z", "message": "Merge branch 'TSK-1180' of https://github.com/sfrevel/taskana into TSK-1180"}, "afterCommit": {"oid": "cb37351207d72d68973f57ee76ccbf26c5183109", "author": {"user": {"login": "sfrevel", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/cb37351207d72d68973f57ee76ccbf26c5183109", "committedDate": "2020-04-17T17:17:38Z", "message": "TSK-1180: migrate from JUnit 5 assertions to assertJ assertions\n\nTSK-1180: remove hemcrest dependency\n\nTSK-1180: convertes junit Assertions.ThrownBy to assertJ style\n\nTSK-1180: add archUnit rule for checking if org.junit.jupiter.api.Assertions is used in classes\n\nTSK-1080: fixed archunit tests which failed due to rebase\n\ntest\n\nfixed order problem with H2 database -> set collation to DEFAULT_de_DE\n\ndisabled test with collation problems, readded old style assrtj test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f000aebca6cf62e02ce4bdd17679a4892ebcb47e", "author": {"user": {"login": "sfrevel", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/f000aebca6cf62e02ce4bdd17679a4892ebcb47e", "committedDate": "2020-04-20T05:25:31Z", "message": "TSK-1180: migrate from JUnit 5 assertions to assertJ assertions\n\nTSK-1180: remove hemcrest dependency\n\nTSK-1180: convertes junit Assertions.ThrownBy to assertJ style\n\nTSK-1180: add archUnit rule for checking if org.junit.jupiter.api.Assertions is used in classes\n\nTSK-1080: fixed archunit tests which failed due to rebase\n\ntest\n\nfixed order problem with H2 database -> set collation to DEFAULT_de_DE\n\ndisabled test with collation problems, readded old style assrtj test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb37351207d72d68973f57ee76ccbf26c5183109", "author": {"user": {"login": "sfrevel", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/cb37351207d72d68973f57ee76ccbf26c5183109", "committedDate": "2020-04-17T17:17:38Z", "message": "TSK-1180: migrate from JUnit 5 assertions to assertJ assertions\n\nTSK-1180: remove hemcrest dependency\n\nTSK-1180: convertes junit Assertions.ThrownBy to assertJ style\n\nTSK-1180: add archUnit rule for checking if org.junit.jupiter.api.Assertions is used in classes\n\nTSK-1080: fixed archunit tests which failed due to rebase\n\ntest\n\nfixed order problem with H2 database -> set collation to DEFAULT_de_DE\n\ndisabled test with collation problems, readded old style assrtj test"}, "afterCommit": {"oid": "f000aebca6cf62e02ce4bdd17679a4892ebcb47e", "author": {"user": {"login": "sfrevel", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/f000aebca6cf62e02ce4bdd17679a4892ebcb47e", "committedDate": "2020-04-20T05:25:31Z", "message": "TSK-1180: migrate from JUnit 5 assertions to assertJ assertions\n\nTSK-1180: remove hemcrest dependency\n\nTSK-1180: convertes junit Assertions.ThrownBy to assertJ style\n\nTSK-1180: add archUnit rule for checking if org.junit.jupiter.api.Assertions is used in classes\n\nTSK-1080: fixed archunit tests which failed due to rebase\n\ntest\n\nfixed order problem with H2 database -> set collation to DEFAULT_de_DE\n\ndisabled test with collation problems, readded old style assrtj test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTQ3MTY4", "url": "https://github.com/Taskana/taskana/pull/1009#pullrequestreview-396147168", "createdAt": "2020-04-20T05:25:54Z", "commit": {"oid": "cb37351207d72d68973f57ee76ccbf26c5183109"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4527, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}