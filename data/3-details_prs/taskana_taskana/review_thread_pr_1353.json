{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1Njg1Njgy", "number": 1353, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo1NDoxN1rOFAq94w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0NToxOVrOFLSTMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjQ4MjkxOnYy", "diffSide": "RIGHT", "path": "common/taskana-common/src/main/java/pro/taskana/common/internal/configuration/DbSchemaCreator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo1NDoxN1rOH_E2sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo1NDoxN1rOH_E2sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMTg3NQ==", "bodyText": "Can you please use the try-with-resources statement here?", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535901875", "createdAt": "2020-12-04T07:54:17Z", "author": {"login": "mustaphazorgati"}, "path": "common/taskana-common/src/main/java/pro/taskana/common/internal/configuration/DbSchemaCreator.java", "diffHunk": "@@ -137,18 +148,17 @@ private ScriptRunner getScriptRunnerInstance(Connection connection) {\n     return runner;\n   }\n \n-  private boolean isSchemaPreexisting(Connection connection) {\n+  private boolean isSchemaPreexisting(Connection connection, String dbProductId) {\n     ScriptRunner runner = getScriptRunnerInstance(connection);\n     StringWriter errorWriter = new StringWriter();\n     runner.setErrorLogWriter(new PrintWriter(errorWriter));\n     try {\n-      String scriptPath =\n-          selectDbSchemaDetectionScript(connection.getMetaData().getDatabaseProductName());\n+      String scriptPath = selectDbSchemaDetectionScript(dbProductId);\n       InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n       BufferedReader reader =\n           new BufferedReader(new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8));\n       runner.runScript(getSqlSchemaNameParsed(reader));\n-    } catch (RuntimeSqlException | SQLException e) {\n+    } catch (RuntimeSqlException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjQ4NzU2OnYy", "diffSide": "RIGHT", "path": "history/taskana-simplehistory-provider/src/test/java/pro/taskana/simplehistory/impl/SimpleHistoryServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo1NToyOFrOH_E5Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo1NToyOFrOH_E5Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMjUyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              void testInitializeSimpleHistoryService() throws SQLException {\n          \n          \n            \n              void testInitializeSimpleHistoryService() throws Exception {", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535902522", "createdAt": "2020-12-04T07:55:28Z", "author": {"login": "mustaphazorgati"}, "path": "history/taskana-simplehistory-provider/src/test/java/pro/taskana/simplehistory/impl/SimpleHistoryServiceImplTest.java", "diffHunk": "@@ -54,7 +55,7 @@\n   @Mock private SqlSession sqlSessionMock;\n \n   @Test\n-  void testInitializeSimpleHistoryService() {\n+  void testInitializeSimpleHistoryService() throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjQ5NDYxOnYy", "diffSide": "RIGHT", "path": "history/taskana-simplehistory-rest-spring/src/main/java/pro/taskana/simplehistory/rest/TaskHistoryEventController.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo1NzoyMVrOH_E9Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjoxMzozOFrOICRkeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMzUyMw==", "bodyText": "why do we have this exception here?", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535903523", "createdAt": "2020-12-04T07:57:21Z", "author": {"login": "mustaphazorgati"}, "path": "history/taskana-simplehistory-rest-spring/src/main/java/pro/taskana/simplehistory/rest/TaskHistoryEventController.java", "diffHunk": "@@ -90,7 +91,8 @@\n   public TaskHistoryEventController(\n       TaskanaEngineConfiguration taskanaEngineConfiguration,\n       SimpleHistoryServiceImpl simpleHistoryServiceImpl,\n-      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler) {\n+      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler)\n+      throws SQLException {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyNDE3NA==", "bodyText": "Because we call here buildTaskanaEngine() from the engineConfiguration, which now - due to the shift of schema creation - throws a SQLException.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r536124174", "createdAt": "2020-12-04T14:07:52Z", "author": {"login": "tge20"}, "path": "history/taskana-simplehistory-rest-spring/src/main/java/pro/taskana/simplehistory/rest/TaskHistoryEventController.java", "diffHunk": "@@ -90,7 +91,8 @@\n   public TaskHistoryEventController(\n       TaskanaEngineConfiguration taskanaEngineConfiguration,\n       SimpleHistoryServiceImpl simpleHistoryServiceImpl,\n-      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler) {\n+      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler)\n+      throws SQLException {\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMzUyMw=="}, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyNzgxOA==", "bodyText": "And why are we building the engine again? We could just autowire the existing engine instead of rebuilding it. @gitgoodjhe can you have a look at this please? Do you agree with me?", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r536127818", "createdAt": "2020-12-04T14:13:36Z", "author": {"login": "mustaphazorgati"}, "path": "history/taskana-simplehistory-rest-spring/src/main/java/pro/taskana/simplehistory/rest/TaskHistoryEventController.java", "diffHunk": "@@ -90,7 +91,8 @@\n   public TaskHistoryEventController(\n       TaskanaEngineConfiguration taskanaEngineConfiguration,\n       SimpleHistoryServiceImpl simpleHistoryServiceImpl,\n-      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler) {\n+      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler)\n+      throws SQLException {\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMzUyMw=="}, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1NTkzMA==", "bodyText": "Basically I agree. Did a quick test and it didn't work instantly. So I would suggest to put this in a separate ticket...maybe in the one that deals with transactionality, which is also long over due?", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r539255930", "createdAt": "2020-12-09T12:13:38Z", "author": {"login": "gitgoodjhe"}, "path": "history/taskana-simplehistory-rest-spring/src/main/java/pro/taskana/simplehistory/rest/TaskHistoryEventController.java", "diffHunk": "@@ -90,7 +91,8 @@\n   public TaskHistoryEventController(\n       TaskanaEngineConfiguration taskanaEngineConfiguration,\n       SimpleHistoryServiceImpl simpleHistoryServiceImpl,\n-      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler) {\n+      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler)\n+      throws SQLException {\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMzUyMw=="}, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjUxNzEwOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/pro/taskana/classification/internal/ClassificationServiceImplIntAutoCommitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODowMzo0M1rOH_FJ9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODowMzo0M1rOH_FJ9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwNjgwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              void setup() throws SQLException {\n          \n          \n            \n              void setup() throws Exception {", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535906805", "createdAt": "2020-12-04T08:03:43Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/classification/internal/ClassificationServiceImplIntAutoCommitTest.java", "diffHunk": "@@ -41,7 +42,7 @@ static void beforeAll() throws Exception {\n   }\n \n   @BeforeEach\n-  void setup() {\n+  void setup() throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjUxODA3OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/pro/taskana/task/internal/TaskServiceImplIntAutocommitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODowNDowM1rOH_FKhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODowNDowM1rOH_FKhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwNjk1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              void setup() throws SQLException {\n          \n          \n            \n              void setup() throws Exception {", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535906951", "createdAt": "2020-12-04T08:04:03Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/task/internal/TaskServiceImplIntAutocommitTest.java", "diffHunk": "@@ -63,7 +64,7 @@ static void beforeAll() throws Exception {\n   }\n \n   @BeforeEach\n-  void setup() {\n+  void setup() throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTY3OTg5OnYy", "diffSide": "RIGHT", "path": "common/taskana-common/src/main/java/pro/taskana/common/internal/configuration/DbSchemaCreator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzoyNzoxNFrOIJLMMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzoyNzoxNFrOIJLMMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5MTQ0Mg==", "bodyText": "This is not what I had in mind. Let's do this later together.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r546491442", "createdAt": "2020-12-21T03:27:14Z", "author": {"login": "mustaphazorgati"}, "path": "common/taskana-common/src/main/java/pro/taskana/common/internal/configuration/DbSchemaCreator.java", "diffHunk": "@@ -137,18 +148,22 @@ private ScriptRunner getScriptRunnerInstance(Connection connection) {\n     return runner;\n   }\n \n-  private boolean isSchemaPreexisting(Connection connection) {\n+  private boolean isSchemaPreexisting(Connection connection, String dbProductId) {\n     ScriptRunner runner = getScriptRunnerInstance(connection);\n     StringWriter errorWriter = new StringWriter();\n     runner.setErrorLogWriter(new PrintWriter(errorWriter));\n+\n     try {\n-      String scriptPath =\n-          selectDbSchemaDetectionScript(connection.getMetaData().getDatabaseProductName());\n-      InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n-      BufferedReader reader =\n-          new BufferedReader(new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8));\n-      runner.runScript(getSqlSchemaNameParsed(reader));\n-    } catch (RuntimeSqlException | SQLException e) {\n+      String scriptPath = selectDbSchemaDetectionScript(dbProductId);\n+\n+      try (InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n+          InputStreamReader inputReader =\n+              new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8);\n+          BufferedReader reader = new BufferedReader(inputReader); ) {\n+        runner.runScript(getSqlSchemaNameParsed(reader));\n+      }\n+\n+    } catch (RuntimeSqlException | IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fccab1917f7594b792bae49e3dc36f46a978155e"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzc3MzMxOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java.BASE", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MjoxN1rOIOXptA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MjoxN1rOIOXptA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzODQ4NA==", "bodyText": "Please delete this file.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551938484", "createdAt": "2021-01-05T13:42:17Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java.BASE", "diffHunk": "@@ -0,0 +1,612 @@\n+package pro.taskana;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzc3NDA0OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java.LOCAL", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MjoyOFrOIOXqLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MjoyOFrOIOXqLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzODYwNg==", "bodyText": "please delete this file.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551938606", "createdAt": "2021-01-05T13:42:28Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java.LOCAL", "diffHunk": "@@ -0,0 +1,612 @@\n+package pro.taskana;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzc3NDczOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java.REMOTE", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MjozOFrOIOXqkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MjozOFrOIOXqkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzODcwNQ==", "bodyText": "please delete this file.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551938705", "createdAt": "2021-01-05T13:42:38Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java.REMOTE", "diffHunk": "@@ -0,0 +1,593 @@\n+package pro.taskana;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzc3ODI5OnYy", "diffSide": "RIGHT", "path": "common/taskana-common/src/main/java/pro/taskana/common/internal/configuration/DbSchemaCreator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MzozNFrOIOXsqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MzozNFrOIOXsqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzOTI0MQ==", "bodyText": "I think this can be formatted a little better. Can you have another look please?\ne.g. The InputStreamReader can probably be reduced to a single line when resourceAsStream gets a shorter name.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551939241", "createdAt": "2021-01-05T13:43:34Z", "author": {"login": "mustaphazorgati"}, "path": "common/taskana-common/src/main/java/pro/taskana/common/internal/configuration/DbSchemaCreator.java", "diffHunk": "@@ -142,18 +153,20 @@ private ScriptRunner getScriptRunnerInstance(Connection connection) {\n     return runner;\n   }\n \n-  private boolean isSchemaPreexisting(Connection connection) {\n+  private boolean isSchemaPreexisting(Connection connection, String dbProductId) {\n     ScriptRunner runner = getScriptRunnerInstance(connection);\n     StringWriter errorWriter = new StringWriter();\n     runner.setErrorLogWriter(new PrintWriter(errorWriter));\n-    try {\n-      String scriptPath =\n-          selectDbSchemaDetectionScript(connection.getMetaData().getDatabaseProductName());\n-      InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n-      BufferedReader reader =\n-          new BufferedReader(new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8));\n+\n+    String scriptPath = selectDbSchemaDetectionScript(dbProductId);\n+\n+    try (InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n+        InputStreamReader inputReader =\n+            new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8);\n+        BufferedReader reader = new BufferedReader(inputReader)) {\n       runner.runScript(getSqlSchemaNameParsed(reader));\n-    } catch (RuntimeSqlException | SQLException e) {\n+\n+    } catch (RuntimeSqlException | IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzc4NDgxOnYy", "diffSide": "RIGHT", "path": "lib/taskana-spring-example/src/main/java/pro/taskana/TaskanaConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0NToxOVrOIOXwfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0NToxOVrOIOXwfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0MDIyMw==", "bodyText": "Did you update the current release notes regarding the SqlException?", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551940223", "createdAt": "2021-01-05T13:45:19Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-spring-example/src/main/java/pro/taskana/TaskanaConfig.java", "diffHunk": "@@ -47,13 +47,13 @@ public DataSourceTransactionManager transactionManager(DataSource dataSource) {\n   }\n \n   @Bean\n-  public SpringTaskanaEngineConfiguration taskanaEngineConfiguration(DataSource dataSource)\n-      throws SQLException {\n+  public SpringTaskanaEngineConfiguration taskanaEngineConfiguration(DataSource dataSource) {\n     return new SpringTaskanaEngineConfiguration(dataSource, true, false, schemaName);\n   }\n \n   @Bean\n-  public TaskanaEngine taskanaEngine(SpringTaskanaEngineConfiguration taskanaEngineConfiguration) {\n+  public TaskanaEngine taskanaEngine(SpringTaskanaEngineConfiguration taskanaEngineConfiguration)\n+      throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4465, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}