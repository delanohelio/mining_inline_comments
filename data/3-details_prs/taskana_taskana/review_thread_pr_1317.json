{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwOTY2Nzcw", "number": 1317, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDozMTo1OVrOEyv0UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDozMTo1OVrOEyv0UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjQ3Njk3OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/classification/CreateClassificationAccTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDozMTo1OVrOHpjk4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDo1MzoyMFrOHpkXKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMzNjU0NQ==", "bodyText": "please remove redundant isNotNull()", "url": "https://github.com/Taskana/taskana/pull/1317#discussion_r513336545", "createdAt": "2020-10-28T10:31:59Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/CreateClassificationAccTest.java", "diffHunk": "@@ -108,8 +108,7 @@ void testCreateClassificationWithExistingMaster() throws Exception {\n     long amountOfClassificationsAfter = CLASSIFICATION_SERVICE.createClassificationQuery().count();\n \n     assertThat(amountOfClassificationsAfter).isEqualTo(amountOfClassificationsBefore + 1);\n-    assertThat(actual).isNotNull();\n-    assertThat(actual).isSameAs(expected);\n+    assertThat(actual).isNotNull().isSameAs(expected);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e748064d1e6ae5e41c9bb25ac977b32ee92c8bb1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM0OTQxOQ==", "bodyText": "Done", "url": "https://github.com/Taskana/taskana/pull/1317#discussion_r513349419", "createdAt": "2020-10-28T10:53:20Z", "author": {"login": "SAllhusen"}, "path": "lib/taskana-core/src/test/java/acceptance/classification/CreateClassificationAccTest.java", "diffHunk": "@@ -108,8 +108,7 @@ void testCreateClassificationWithExistingMaster() throws Exception {\n     long amountOfClassificationsAfter = CLASSIFICATION_SERVICE.createClassificationQuery().count();\n \n     assertThat(amountOfClassificationsAfter).isEqualTo(amountOfClassificationsBefore + 1);\n-    assertThat(actual).isNotNull();\n-    assertThat(actual).isSameAs(expected);\n+    assertThat(actual).isNotNull().isSameAs(expected);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMzNjU0NQ=="}, "originalCommit": {"oid": "e748064d1e6ae5e41c9bb25ac977b32ee92c8bb1"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4511, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}