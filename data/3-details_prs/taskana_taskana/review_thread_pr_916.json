{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjgxNzcx", "number": 916, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo0NDoxM1rODe1HEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowNDowNFrODe1ofw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjU0MDMyOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo0NDoxM1rOFoLnIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNDo0NDoxM1rOFoLnIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY3NzYwMA==", "bodyText": "Pls get rid of this", "url": "https://github.com/Taskana/taskana/pull/916#discussion_r377677600", "createdAt": "2020-02-11T14:44:13Z", "author": {"login": "gitgoodjhe"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java", "diffHunk": "@@ -1,11 +1,8 @@\n package pro.taskana.rest;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.jupiter.api.Assertions.assertThrows;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5061c79baf19a623d2c42e12623980139dd79c7"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjYxNjUwOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowMTozN1rOFoMVyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowMTozN1rOFoMVyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4OTU0Ng==", "bodyText": "We can substitute these Assertions.assertThrows cases with assertJ as follows:\nassertThatThrownBy(\n\n    () -> template.exchange(\n        restHelper.toUrl(Mapping.URL_CLASSIFICATIONS),\n        HttpMethod.POST,\n        new HttpEntity<>(newClassification, restHelper.getHeaders()),\n        ParameterizedTypeReference.forType(ClassificationResource.class)))\n    .isInstanceOf(HttpClientErrorException.class)\n    .extracting(ex ->((HttpClientErrorException) ex ).getStatusCode())\n      .isEqualTo(HttpStatus.BAD_REQUEST);", "url": "https://github.com/Taskana/taskana/pull/916#discussion_r377689546", "createdAt": "2020-02-11T15:01:37Z", "author": {"login": "gitgoodjhe"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java", "diffHunk": "@@ -235,13 +234,13 @@ void testReturn400IfCreateClassificationWithIncompatibleParentIdAndKey() throws\n                     new HttpEntity<>(newClassification, restHelper.getHeaders()),\n                     ParameterizedTypeReference.forType(ClassificationResource.class)));\n \n-    assertNotNull(e);\n-    assertEquals(HttpStatus.BAD_REQUEST, e.getStatusCode());\n+    assertThat(e).isNotNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5061c79baf19a623d2c42e12623980139dd79c7"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjYxOTA3OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowMjoxNVrOFoMXbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowMjoxNVrOFoMXbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4OTk2Nw==", "bodyText": "see above", "url": "https://github.com/Taskana/taskana/pull/916#discussion_r377689967", "createdAt": "2020-02-11T15:02:15Z", "author": {"login": "gitgoodjhe"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java", "diffHunk": "@@ -257,28 +256,28 @@ void testCreateClassificationWithClassificationIdReturnsError400() throws IOExce\n                     new HttpEntity<>(newClassification, restHelper.getHeaders()),\n                     ParameterizedTypeReference.forType(ClassificationResource.class)));\n \n-    assertNotNull(e);\n-    assertEquals(HttpStatus.BAD_REQUEST, e.getStatusCode());\n+    assertThat(e).isNotNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5061c79baf19a623d2c42e12623980139dd79c7"}, "originalPosition": 207}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjYyNTkxOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowNDowNFrOFoMbzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowNDowNFrOFoMbzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY5MTA4NA==", "bodyText": "is this a formatter issue? same for the following identation differences", "url": "https://github.com/Taskana/taskana/pull/916#discussion_r377691084", "createdAt": "2020-02-11T15:04:04Z", "author": {"login": "gitgoodjhe"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java", "diffHunk": "@@ -251,21 +252,22 @@ void testGetAllTasksByWorkbasketIdWithinSingleIndefiniteDueTimeInterval() {\n     assertThat(response.getBody().getContent()).hasSize(6);\n   }\n \n+  @SuppressWarnings(\"checkstyle:Indentation\")\n   @Test\n   void testGetAllTasksByWorkbasketIdWithInvalidDueParamsCombination() {\n     assertThatThrownBy(\n-        () ->\n-          template.exchange(\n-            restHelper.toUrl(Mapping.URL_TASKS)\n-                + \"?workbasket-id=WBI:100000000000000000000000000000000001\"\n-                + \"&due=2020-01-22T09:44:47.453Z,,\"\n-                + \"2020-01-19T07:44:47.453Z,2020-01-19T19:44:47.453Z,\"\n-                + \",2020-01-18T09:44:47.453Z\"\n-                + \"&due-from=2020-01-19T07:44:47.453Z\"\n-                + \"&sort-by=planned\",\n-            HttpMethod.GET,\n-            restHelper.defaultRequest(),\n-            ParameterizedTypeReference.forType(TaskSummaryListResource.class)))\n+            () ->\n+                template.exchange(\n+                    restHelper.toUrl(Mapping.URL_TASKS)\n+                        + \"?workbasket-id=WBI:100000000000000000000000000000000001\"\n+                        + \"&due=2020-01-22T09:44:47.453Z,,\"\n+                        + \"2020-01-19T07:44:47.453Z,2020-01-19T19:44:47.453Z,\"\n+                        + \",2020-01-18T09:44:47.453Z\"\n+                        + \"&due-from=2020-01-19T07:44:47.453Z\"\n+                        + \"&sort-by=planned\",\n+                    HttpMethod.GET,\n+                    restHelper.defaultRequest(),\n+                    ParameterizedTypeReference.forType(TaskSummaryListResource.class)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5061c79baf19a623d2c42e12623980139dd79c7"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4414, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}