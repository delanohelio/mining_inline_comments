{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1Njg1Njgy", "number": 1353, "title": "TSK-1472: Replaced the DB check with productName by productId", "bodyText": "For the submitter:\n\n I updated the documentation and will supply links to the specific files\n I did not update the documentation\n I included a link to the SonarCloud branch analysis\n I added a description of changes on the current release notes\n I did not update the current release notes\n I put the ticket in review\n After integration of the pull request, I verified our bluemix test environment is not broken\n\nVerified by the reviewer:\n\n Commit message format \u2192 TSK-XXX: Your commit message.\n Submitter's update to documentation is sufficient\n SonarCloud analysis meets our standards\n Update of the current release notes reflects changes\n PR fulfills the ticket\n Edge cases and unwanted side effects are tested\n Readability", "createdAt": "2020-11-23T12:09:38Z", "url": "https://github.com/Taskana/taskana/pull/1353", "merged": true, "mergeCommit": {"oid": "d7fb60353dac59c7ac97584c0327e54d34232fc4"}, "closed": true, "closedAt": "2021-01-05T13:28:54Z", "author": {"login": "tge20"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdizIIZAFqTU0NDcyNTA0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtLMjvAFqTU2MTc5NTc3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NzI1MDQz", "url": "https://github.com/Taskana/taskana/pull/1353#pullrequestreview-544725043", "createdAt": "2020-12-04T07:54:17Z", "commit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo1NDoxN1rOH_E2sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODowNDowM1rOH_FKhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMTg3NQ==", "bodyText": "Can you please use the try-with-resources statement here?", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535901875", "createdAt": "2020-12-04T07:54:17Z", "author": {"login": "mustaphazorgati"}, "path": "common/taskana-common/src/main/java/pro/taskana/common/internal/configuration/DbSchemaCreator.java", "diffHunk": "@@ -137,18 +148,17 @@ private ScriptRunner getScriptRunnerInstance(Connection connection) {\n     return runner;\n   }\n \n-  private boolean isSchemaPreexisting(Connection connection) {\n+  private boolean isSchemaPreexisting(Connection connection, String dbProductId) {\n     ScriptRunner runner = getScriptRunnerInstance(connection);\n     StringWriter errorWriter = new StringWriter();\n     runner.setErrorLogWriter(new PrintWriter(errorWriter));\n     try {\n-      String scriptPath =\n-          selectDbSchemaDetectionScript(connection.getMetaData().getDatabaseProductName());\n+      String scriptPath = selectDbSchemaDetectionScript(dbProductId);\n       InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n       BufferedReader reader =\n           new BufferedReader(new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8));\n       runner.runScript(getSqlSchemaNameParsed(reader));\n-    } catch (RuntimeSqlException | SQLException e) {\n+    } catch (RuntimeSqlException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMjUyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              void testInitializeSimpleHistoryService() throws SQLException {\n          \n          \n            \n              void testInitializeSimpleHistoryService() throws Exception {", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535902522", "createdAt": "2020-12-04T07:55:28Z", "author": {"login": "mustaphazorgati"}, "path": "history/taskana-simplehistory-provider/src/test/java/pro/taskana/simplehistory/impl/SimpleHistoryServiceImplTest.java", "diffHunk": "@@ -54,7 +55,7 @@\n   @Mock private SqlSession sqlSessionMock;\n \n   @Test\n-  void testInitializeSimpleHistoryService() {\n+  void testInitializeSimpleHistoryService() throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMzUyMw==", "bodyText": "why do we have this exception here?", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535903523", "createdAt": "2020-12-04T07:57:21Z", "author": {"login": "mustaphazorgati"}, "path": "history/taskana-simplehistory-rest-spring/src/main/java/pro/taskana/simplehistory/rest/TaskHistoryEventController.java", "diffHunk": "@@ -90,7 +91,8 @@\n   public TaskHistoryEventController(\n       TaskanaEngineConfiguration taskanaEngineConfiguration,\n       SimpleHistoryServiceImpl simpleHistoryServiceImpl,\n-      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler) {\n+      TaskHistoryEventRepresentationModelAssembler taskHistoryEventRepresentationModelAssembler)\n+      throws SQLException {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwNjgwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              void setup() throws SQLException {\n          \n          \n            \n              void setup() throws Exception {", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535906805", "createdAt": "2020-12-04T08:03:43Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/classification/internal/ClassificationServiceImplIntAutoCommitTest.java", "diffHunk": "@@ -41,7 +42,7 @@ static void beforeAll() throws Exception {\n   }\n \n   @BeforeEach\n-  void setup() {\n+  void setup() throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwNjk1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              void setup() throws SQLException {\n          \n          \n            \n              void setup() throws Exception {", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r535906951", "createdAt": "2020-12-04T08:04:03Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/task/internal/TaskServiceImplIntAutocommitTest.java", "diffHunk": "@@ -63,7 +64,7 @@ static void beforeAll() throws Exception {\n   }\n \n   @BeforeEach\n-  void setup() {\n+  void setup() throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccc91569c14f9497c0bb678d55d03457dc6fd50"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTEwNTgw", "url": "https://github.com/Taskana/taskana/pull/1353#pullrequestreview-556110580", "createdAt": "2020-12-21T03:27:14Z", "commit": {"oid": "fccab1917f7594b792bae49e3dc36f46a978155e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzoyNzoxNFrOIJLMMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzoyNzoxNFrOIJLMMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5MTQ0Mg==", "bodyText": "This is not what I had in mind. Let's do this later together.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r546491442", "createdAt": "2020-12-21T03:27:14Z", "author": {"login": "mustaphazorgati"}, "path": "common/taskana-common/src/main/java/pro/taskana/common/internal/configuration/DbSchemaCreator.java", "diffHunk": "@@ -137,18 +148,22 @@ private ScriptRunner getScriptRunnerInstance(Connection connection) {\n     return runner;\n   }\n \n-  private boolean isSchemaPreexisting(Connection connection) {\n+  private boolean isSchemaPreexisting(Connection connection, String dbProductId) {\n     ScriptRunner runner = getScriptRunnerInstance(connection);\n     StringWriter errorWriter = new StringWriter();\n     runner.setErrorLogWriter(new PrintWriter(errorWriter));\n+\n     try {\n-      String scriptPath =\n-          selectDbSchemaDetectionScript(connection.getMetaData().getDatabaseProductName());\n-      InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n-      BufferedReader reader =\n-          new BufferedReader(new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8));\n-      runner.runScript(getSqlSchemaNameParsed(reader));\n-    } catch (RuntimeSqlException | SQLException e) {\n+      String scriptPath = selectDbSchemaDetectionScript(dbProductId);\n+\n+      try (InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n+          InputStreamReader inputReader =\n+              new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8);\n+          BufferedReader reader = new BufferedReader(inputReader); ) {\n+        runner.runScript(getSqlSchemaNameParsed(reader));\n+      }\n+\n+    } catch (RuntimeSqlException | IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fccab1917f7594b792bae49e3dc36f46a978155e"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b4268adefee82110c89de566a0e929205a9f00d", "author": {"user": {"login": "tge20", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/1b4268adefee82110c89de566a0e929205a9f00d", "committedDate": "2021-01-04T14:47:00Z", "message": "TSK-1472: Moved initialization of the schema from the taskanaEngineConfiguration to taskanaEngineImpl."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c638a5d61a4ba45decde75fb77403f2439c09a37", "author": {"user": {"login": "tge20", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/c638a5d61a4ba45decde75fb77403f2439c09a37", "committedDate": "2021-01-04T14:47:06Z", "message": "TSK-1472: Changed the check of current DB type from productName to productId to enable places where we don't want to open a connection to the DB not to do so."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a", "author": {"user": {"login": "tge20", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/65168ae35b6f4317e492fec648edd94b8a5a7c7a", "committedDate": "2021-01-04T14:47:07Z", "message": "TSK-1472: Improvements after review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMDg3ODEy", "url": "https://github.com/Taskana/taskana/pull/1353#pullrequestreview-561087812", "createdAt": "2021-01-04T14:50:06Z", "commit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNzk1Nzc5", "url": "https://github.com/Taskana/taskana/pull/1353#pullrequestreview-561795779", "createdAt": "2021-01-05T13:42:17Z", "commit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MjoxN1rOIOXptA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0NToxOVrOIOXwfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzODQ4NA==", "bodyText": "Please delete this file.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551938484", "createdAt": "2021-01-05T13:42:17Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java.BASE", "diffHunk": "@@ -0,0 +1,612 @@\n+package pro.taskana;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzODYwNg==", "bodyText": "please delete this file.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551938606", "createdAt": "2021-01-05T13:42:28Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java.LOCAL", "diffHunk": "@@ -0,0 +1,612 @@\n+package pro.taskana;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzODcwNQ==", "bodyText": "please delete this file.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551938705", "createdAt": "2021-01-05T13:42:38Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java.REMOTE", "diffHunk": "@@ -0,0 +1,593 @@\n+package pro.taskana;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzOTI0MQ==", "bodyText": "I think this can be formatted a little better. Can you have another look please?\ne.g. The InputStreamReader can probably be reduced to a single line when resourceAsStream gets a shorter name.", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551939241", "createdAt": "2021-01-05T13:43:34Z", "author": {"login": "mustaphazorgati"}, "path": "common/taskana-common/src/main/java/pro/taskana/common/internal/configuration/DbSchemaCreator.java", "diffHunk": "@@ -142,18 +153,20 @@ private ScriptRunner getScriptRunnerInstance(Connection connection) {\n     return runner;\n   }\n \n-  private boolean isSchemaPreexisting(Connection connection) {\n+  private boolean isSchemaPreexisting(Connection connection, String dbProductId) {\n     ScriptRunner runner = getScriptRunnerInstance(connection);\n     StringWriter errorWriter = new StringWriter();\n     runner.setErrorLogWriter(new PrintWriter(errorWriter));\n-    try {\n-      String scriptPath =\n-          selectDbSchemaDetectionScript(connection.getMetaData().getDatabaseProductName());\n-      InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n-      BufferedReader reader =\n-          new BufferedReader(new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8));\n+\n+    String scriptPath = selectDbSchemaDetectionScript(dbProductId);\n+\n+    try (InputStream resourceAsStream = DbSchemaCreator.class.getResourceAsStream(scriptPath);\n+        InputStreamReader inputReader =\n+            new InputStreamReader(resourceAsStream, StandardCharsets.UTF_8);\n+        BufferedReader reader = new BufferedReader(inputReader)) {\n       runner.runScript(getSqlSchemaNameParsed(reader));\n-    } catch (RuntimeSqlException | SQLException e) {\n+\n+    } catch (RuntimeSqlException | IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0MDIyMw==", "bodyText": "Did you update the current release notes regarding the SqlException?", "url": "https://github.com/Taskana/taskana/pull/1353#discussion_r551940223", "createdAt": "2021-01-05T13:45:19Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-spring-example/src/main/java/pro/taskana/TaskanaConfig.java", "diffHunk": "@@ -47,13 +47,13 @@ public DataSourceTransactionManager transactionManager(DataSource dataSource) {\n   }\n \n   @Bean\n-  public SpringTaskanaEngineConfiguration taskanaEngineConfiguration(DataSource dataSource)\n-      throws SQLException {\n+  public SpringTaskanaEngineConfiguration taskanaEngineConfiguration(DataSource dataSource) {\n     return new SpringTaskanaEngineConfiguration(dataSource, true, false, schemaName);\n   }\n \n   @Bean\n-  public TaskanaEngine taskanaEngine(SpringTaskanaEngineConfiguration taskanaEngineConfiguration) {\n+  public TaskanaEngine taskanaEngine(SpringTaskanaEngineConfiguration taskanaEngineConfiguration)\n+      throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65168ae35b6f4317e492fec648edd94b8a5a7c7a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4585, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}