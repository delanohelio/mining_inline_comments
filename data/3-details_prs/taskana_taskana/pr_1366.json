{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NjcyOTIx", "number": 1366, "title": "TSK-1468: Added validation of name and type of workbasket when updating Workbasket", "bodyText": "For the submitter:\n\n I updated the documentation and will supply links to the specific files\n I did not update the documentation\n I included a link to the SonarCloud branch analysis\n I added a description of changes on the current release notes\n I did not update the current release notes\n I put the ticket in review\n After integration of the pull request, I verified our bluemix test environment is not broken\n\nVerified by the reviewer:\n\n Commit message format \u2192 TSK-XXX: Your commit message.\n Submitter's update to documentation is sufficient\n SonarCloud analysis meets our standards\n Update of the current release notes reflects changes\n PR fulfills the ticket\n Edge cases and unwanted side effects are tested\n Readability", "createdAt": "2020-12-08T19:28:19Z", "url": "https://github.com/Taskana/taskana/pull/1366", "merged": true, "mergeCommit": {"oid": "218e0389016e29dd01a6675cf6e622fbe7182b24"}, "closed": true, "closedAt": "2020-12-14T11:13:16Z", "author": {"login": "tge20"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkO8qDAH2gAyNTM0NjcyOTIxOmMzNTVhMTQ5NmEwMzE3ZTJiZGE0ZTFhMjhmMTlkYzExMWJiMDAxMmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmCWWngFqTU1MTE4NTc3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c", "author": {"user": {"login": "tge20", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/c355a1496a0317e2bda4e1a28f19dc111bb0012c", "committedDate": "2020-12-08T19:03:26Z", "message": "TSK-1468: Added validation of name and type of workbasket when updating Workbasket"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTEzMDU3", "url": "https://github.com/Taskana/taskana/pull/1366#pullrequestreview-547913057", "createdAt": "2020-12-09T07:47:13Z", "commit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0NzoxM1rOICGujQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoxMDo1N1rOICHlaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3ODI4NQ==", "bodyText": "why are you testing this twice?", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539078285", "createdAt": "2020-12-09T07:47:13Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3OTQ0OA==", "bodyText": "While this is not wrong, I think we decided to use the following structure:\nassertThatThrownBy(() -> workbasketService.updateWorkbasket(workbasket))\n.isInstanceOf(InvalidWorkbasketException.class);", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539079448", "createdAt": "2020-12-09T07:49:30Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3OTY0Ng==", "bodyText": "see above", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539079646", "createdAt": "2020-12-09T07:49:47Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAccTest.java", "diffHunk": "@@ -57,6 +58,35 @@ void testUpdateWorkbasket() throws Exception {\n     assertThat(updatedWorkbasket.getModified()).isNotEqualTo(modified);\n   }\n \n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithInvalidName() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+\n+    workbasket.setName(null);\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)\n+        .isThrownBy(() -> workbasketService.updateWorkbasket(workbasket));\n+  }\n+\n+  @WithAccessId(user = \"businessadmin\")\n+  @Test\n+  void should_ThrowException_When_UpdatingWorkbasketWithTypeNull() throws Exception {\n+    WorkbasketService workbasketService = taskanaEngine.getWorkbasketService();\n+\n+    WorkbasketImpl workbasket =\n+        (WorkbasketImpl) workbasketService.getWorkbasket(\"GPK_KSC\", \"DOMAIN_A\");\n+    workbasket.setType(null);\n+\n+    assertThatExceptionOfType(InvalidWorkbasketException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA4MDAzNQ==", "bodyText": "why did you rename this? To name the new method validateNameAndType without workbasket?", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539080035", "createdAt": "2020-12-09T07:50:37Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -1199,7 +1197,7 @@ private void markWorkbasketForDeletion(String workbasketId)\n     taskanaEngine.getEngine().checkRoleMembership(TaskanaRole.BUSINESS_ADMIN, TaskanaRole.ADMIN);\n     try {\n       taskanaEngine.openConnection();\n-      validateWorkbasketId(workbasketId);\n+      validateId(workbasketId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MTczNg==", "bodyText": "I think we could have just re-used the validateWorkbasket method here", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539091736", "createdAt": "2020-12-09T08:10:17Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -173,38 +173,30 @@ public Workbasket createWorkbasket(Workbasket newWorkbasket)\n \n   @Override\n   public Workbasket updateWorkbasket(Workbasket workbasketToUpdate)\n-      throws NotAuthorizedException, WorkbasketNotFoundException, ConcurrencyException {\n+      throws NotAuthorizedException, WorkbasketNotFoundException, ConcurrencyException,\n+          InvalidWorkbasketException {\n \n     LOGGER.debug(\"entry to updateWorkbasket(Workbasket = {})\", workbasketToUpdate);\n \n     taskanaEngine.getEngine().checkRoleMembership(TaskanaRole.BUSINESS_ADMIN, TaskanaRole.ADMIN);\n-\n-    WorkbasketImpl workbasketImplToUpdate = null;\n+    WorkbasketImpl workbasketImplToUpdate = (WorkbasketImpl) workbasketToUpdate;\n+    validateNameAndType(workbasketToUpdate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA5MjMyOQ==", "bodyText": "If we re-use the whole validateWorkbasket method, then we woudln't have to refactor this to a separate method, right?", "url": "https://github.com/Taskana/taskana/pull/1366#discussion_r539092329", "createdAt": "2020-12-09T08:10:57Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -1158,27 +1138,45 @@ private boolean skipAuthorizationCheck(WorkbasketPermission... requestedPermissi\n   private void validateWorkbasket(Workbasket workbasket)\n       throws InvalidWorkbasketException, DomainNotFoundException {\n     // check that required properties (database not null) are set\n+    validateNameAndType(workbasket);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c355a1496a0317e2bda4e1a28f19dc111bb0012c"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc201ff5bd3a54325b150035539b0b3652b2e006", "author": {"user": {"login": "tge20", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/cc201ff5bd3a54325b150035539b0b3652b2e006", "committedDate": "2020-12-09T11:31:58Z", "message": "TSK-1468: Improvements after review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTg1Nzcx", "url": "https://github.com/Taskana/taskana/pull/1366#pullrequestreview-551185771", "createdAt": "2020-12-14T09:30:35Z", "commit": {"oid": "cc201ff5bd3a54325b150035539b0b3652b2e006"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4589, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}