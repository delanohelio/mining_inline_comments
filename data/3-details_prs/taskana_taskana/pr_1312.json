{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MTIyODQw", "number": 1312, "title": "TSK-1401: Update Typeahead component with material design", "bodyText": "For the submitter:\n\n I updated the documentation and will supply links to the specific files\n I did not update the documentation\n I included a link to the SonarCloud branch analysis\n I added a description of changes on the current release notes\n I did not update the current release notes\n I put the ticket in review\n After integration of the pull request, I verified our bluemix test environment is not broken\n\nVerified by the reviewer:\n\n Commit message format \u2192 TSK-XXX: Your commit message.\n Submitter's update to documentation is sufficient\n SonarCloud analysis meets our standards\n Update of the current release notes reflects changes\n PR fulfills the ticket\n Edge cases and unwanted side effects are tested\n Readability", "createdAt": "2020-10-22T08:45:36Z", "url": "https://github.com/Taskana/taskana/pull/1312", "merged": true, "mergeCommit": {"oid": "ea38c7ddba6ef86a35614397713504d9accf3688"}, "closed": true, "closedAt": "2020-10-28T08:43:10Z", "author": {"login": "Franzi321"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWQLUmgFqTUxNjU1MjMxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdW5W2bgFqTUxODQyMjg4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NTUyMzE1", "url": "https://github.com/Taskana/taskana/pull/1312#pullrequestreview-516552315", "createdAt": "2020-10-26T08:28:21Z", "commit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODoyODoyMVrOHoE_ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODozMjozOVrOHoFICw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4Njg1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <label class=\"typeahead__label\">\n          \n      \n    \n    \n  \n\nRemove this label", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511786853", "createdAt": "2020-10-26T08:28:21Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.html", "diffHunk": "@@ -1,48 +1,19 @@\n-<div *ngIf=\"dataSource\" class=\"custom-form-control\" [ngStyle]=\"{'width': width ? width : auto }\">\n-  <ng-template class=\"wrapper-text\" #customItemTemplate let-model=\"item\" let-index=\"indexTemplate\" let-query=\"query\">\n-    <div (mousedown)=\"typeaheadOnSelect({'item':model})\">\n-      <div>\n-        <span [innerHTML]=\"join(model.accessId, query)\">\n-        </span>\n-      </div>\n-      <div>\n-        <span [innerHTML]=\"join(model.name, query)\">\n-        </span>\n-      </div>\n-    </div>\n-  </ng-template>\n-  <div [ngClass]=\"{'hidden': !dataSource.selected || typing,\n-                   'disable': disable}\" class=\"wrapper-text\"\n-    (click)=\"setTyping(true)\">\n-    <span>\n-      <label>\n-        {{dataSource.selected?.name}}\n-      </label>\n-    </span>\n-    <div class=\"input-group form-control\">\n-      <div>{{dataSource.selected?.accessId}}</div>\n-    </div>\n-  </div>\n-  <div [ngClass]=\"{'hidden': dataSource.selected && !typing}\">\n-    <span class=\"field-label-wrapper\">\n-      <label>\n-        {{dataSource.selected?.name}}\n-      </label>\n-    </span>\n-    <div class=\"input-group\">\n-      <input #inputTypeAhead class=\"form-control input-text\" [ngClass]=\"{'invalid': !dataSource.length && isRequired}\"  (blur)=\"typeaheadOnSelect({'item':dataSource.selected})\"\n-        name=\"accessItem-{{index}}\" [required]=\"isRequired ? 'required' : null\" #accessItemName=\"ngModel\" [(ngModel)]=\"value\"\n-        [typeahead]=\"dataSource\" typeaheadOptionField=\"name\" [typeaheadItemTemplate]=\"customItemTemplate\"\n-        (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadScrollable]=\"true\"\n-        [typeaheadOptionsInScrollableView]=\"typeaheadOptionsInScrollableView\" [typeaheadMinLength]=\"typeaheadMinLength\"\n-        [typeaheadWaitMs]=\"typeaheadWaitMs\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\" placeholder=\"{{displayError? placeHolderMessage: ''}}\"\n-        [@validation]=\"validationValue\" data-cy=\"typeahead_input\">\n-      <button *ngIf=\"!typeaheadLoading\" type=\"button\" title=\"search\" class=\"btn rounded blue search-button\" >\n-        <span class=\"material-icons md-20 blue\">search</span>\n-      </button>\n-      <div *ngIf=\"typeaheadLoading\" class=\"loading\">\n-        <taskana-shared-spinner [isRunning]=\"typeaheadLoading\" positionClass=\"type-ahead-spinner\"></taskana-shared-spinner>\n-      </div>\n-    </div>\n-  </div>\n-</div>\n+<div *ngIf=\"dataSource\" class=\"typeahead\">\n+  <label class=\"typeahead__label\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4ODYwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  <mat-label>{{placeHolderMessage}}</mat-label>\n          \n          \n            \n                  <mat-label>{{dataSource.selected?.name ? dataSource.selected?.name : placeHolderMessage}}</mat-label>\n          \n      \n    \n    \n  \n\nand change this mat-label would result this:", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511788607", "createdAt": "2020-10-26T08:31:39Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.html", "diffHunk": "@@ -1,48 +1,19 @@\n-<div *ngIf=\"dataSource\" class=\"custom-form-control\" [ngStyle]=\"{'width': width ? width : auto }\">\n-  <ng-template class=\"wrapper-text\" #customItemTemplate let-model=\"item\" let-index=\"indexTemplate\" let-query=\"query\">\n-    <div (mousedown)=\"typeaheadOnSelect({'item':model})\">\n-      <div>\n-        <span [innerHTML]=\"join(model.accessId, query)\">\n-        </span>\n-      </div>\n-      <div>\n-        <span [innerHTML]=\"join(model.name, query)\">\n-        </span>\n-      </div>\n-    </div>\n-  </ng-template>\n-  <div [ngClass]=\"{'hidden': !dataSource.selected || typing,\n-                   'disable': disable}\" class=\"wrapper-text\"\n-    (click)=\"setTyping(true)\">\n-    <span>\n-      <label>\n-        {{dataSource.selected?.name}}\n-      </label>\n-    </span>\n-    <div class=\"input-group form-control\">\n-      <div>{{dataSource.selected?.accessId}}</div>\n-    </div>\n-  </div>\n-  <div [ngClass]=\"{'hidden': dataSource.selected && !typing}\">\n-    <span class=\"field-label-wrapper\">\n-      <label>\n-        {{dataSource.selected?.name}}\n-      </label>\n-    </span>\n-    <div class=\"input-group\">\n-      <input #inputTypeAhead class=\"form-control input-text\" [ngClass]=\"{'invalid': !dataSource.length && isRequired}\"  (blur)=\"typeaheadOnSelect({'item':dataSource.selected})\"\n-        name=\"accessItem-{{index}}\" [required]=\"isRequired ? 'required' : null\" #accessItemName=\"ngModel\" [(ngModel)]=\"value\"\n-        [typeahead]=\"dataSource\" typeaheadOptionField=\"name\" [typeaheadItemTemplate]=\"customItemTemplate\"\n-        (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadScrollable]=\"true\"\n-        [typeaheadOptionsInScrollableView]=\"typeaheadOptionsInScrollableView\" [typeaheadMinLength]=\"typeaheadMinLength\"\n-        [typeaheadWaitMs]=\"typeaheadWaitMs\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\" placeholder=\"{{displayError? placeHolderMessage: ''}}\"\n-        [@validation]=\"validationValue\" data-cy=\"typeahead_input\">\n-      <button *ngIf=\"!typeaheadLoading\" type=\"button\" title=\"search\" class=\"btn rounded blue search-button\" >\n-        <span class=\"material-icons md-20 blue\">search</span>\n-      </button>\n-      <div *ngIf=\"typeaheadLoading\" class=\"loading\">\n-        <taskana-shared-spinner [isRunning]=\"typeaheadLoading\" positionClass=\"type-ahead-spinner\"></taskana-shared-spinner>\n-      </div>\n-    </div>\n-  </div>\n-</div>\n+<div *ngIf=\"dataSource\" class=\"typeahead\">\n+  <label class=\"typeahead__label\">\n+    {{dataSource.selected?.name}}\n+  </label>\n+  <form>\n+    <mat-form-field class=\"typeahead__form\" focused=\"false\" appearance=\"outline\">\n+      <mat-label>{{placeHolderMessage}}</mat-label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4ODkyOQ==", "bodyText": "unused variable", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511788929", "createdAt": "2020-10-26T08:32:20Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.ts", "diffHunk": "@@ -34,6 +33,9 @@ export class TypeAheadComponent implements AfterViewInit, ControlValueAccessor {\n   dataSource: any;\n   typing = false;\n \n+  _value = '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4OTA2Nw==", "bodyText": "ditto", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511789067", "createdAt": "2020-10-26T08:32:39Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.ts", "diffHunk": "@@ -60,6 +62,7 @@ export class TypeAheadComponent implements AfterViewInit, ControlValueAccessor {\n \n   @ViewChild('inputTypeAhead')\n   private inputTypeAhead;\n+  private input;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NTM2NTgw", "url": "https://github.com/Taskana/taskana/pull/1312#pullrequestreview-516536580", "createdAt": "2020-10-26T08:04:16Z", "commit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODowNDoxNlrOHoEQHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODo0MDoxNVrOHoFYKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc3NDc1MA==", "bodyText": "I get a warning that says \"Attribute focused is not allowed here\". Please remove in case it is not necessary.", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511774750", "createdAt": "2020-10-26T08:04:16Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.html", "diffHunk": "@@ -1,48 +1,19 @@\n-<div *ngIf=\"dataSource\" class=\"custom-form-control\" [ngStyle]=\"{'width': width ? width : auto }\">\n-  <ng-template class=\"wrapper-text\" #customItemTemplate let-model=\"item\" let-index=\"indexTemplate\" let-query=\"query\">\n-    <div (mousedown)=\"typeaheadOnSelect({'item':model})\">\n-      <div>\n-        <span [innerHTML]=\"join(model.accessId, query)\">\n-        </span>\n-      </div>\n-      <div>\n-        <span [innerHTML]=\"join(model.name, query)\">\n-        </span>\n-      </div>\n-    </div>\n-  </ng-template>\n-  <div [ngClass]=\"{'hidden': !dataSource.selected || typing,\n-                   'disable': disable}\" class=\"wrapper-text\"\n-    (click)=\"setTyping(true)\">\n-    <span>\n-      <label>\n-        {{dataSource.selected?.name}}\n-      </label>\n-    </span>\n-    <div class=\"input-group form-control\">\n-      <div>{{dataSource.selected?.accessId}}</div>\n-    </div>\n-  </div>\n-  <div [ngClass]=\"{'hidden': dataSource.selected && !typing}\">\n-    <span class=\"field-label-wrapper\">\n-      <label>\n-        {{dataSource.selected?.name}}\n-      </label>\n-    </span>\n-    <div class=\"input-group\">\n-      <input #inputTypeAhead class=\"form-control input-text\" [ngClass]=\"{'invalid': !dataSource.length && isRequired}\"  (blur)=\"typeaheadOnSelect({'item':dataSource.selected})\"\n-        name=\"accessItem-{{index}}\" [required]=\"isRequired ? 'required' : null\" #accessItemName=\"ngModel\" [(ngModel)]=\"value\"\n-        [typeahead]=\"dataSource\" typeaheadOptionField=\"name\" [typeaheadItemTemplate]=\"customItemTemplate\"\n-        (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadScrollable]=\"true\"\n-        [typeaheadOptionsInScrollableView]=\"typeaheadOptionsInScrollableView\" [typeaheadMinLength]=\"typeaheadMinLength\"\n-        [typeaheadWaitMs]=\"typeaheadWaitMs\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\" placeholder=\"{{displayError? placeHolderMessage: ''}}\"\n-        [@validation]=\"validationValue\" data-cy=\"typeahead_input\">\n-      <button *ngIf=\"!typeaheadLoading\" type=\"button\" title=\"search\" class=\"btn rounded blue search-button\" >\n-        <span class=\"material-icons md-20 blue\">search</span>\n-      </button>\n-      <div *ngIf=\"typeaheadLoading\" class=\"loading\">\n-        <taskana-shared-spinner [isRunning]=\"typeaheadLoading\" positionClass=\"type-ahead-spinner\"></taskana-shared-spinner>\n-      </div>\n-    </div>\n-  </div>\n-</div>\n+<div *ngIf=\"dataSource\" class=\"typeahead\">\n+  <label class=\"typeahead__label\">\n+    {{dataSource.selected?.name}}\n+  </label>\n+  <form>\n+    <mat-form-field class=\"typeahead__form\" focused=\"false\" appearance=\"outline\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4MDcwMw==", "bodyText": "attribute name should be 'accessId', not 'acessId'", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511780703", "createdAt": "2020-10-26T08:16:42Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.html", "diffHunk": "@@ -1,48 +1,19 @@\n-<div *ngIf=\"dataSource\" class=\"custom-form-control\" [ngStyle]=\"{'width': width ? width : auto }\">\n-  <ng-template class=\"wrapper-text\" #customItemTemplate let-model=\"item\" let-index=\"indexTemplate\" let-query=\"query\">\n-    <div (mousedown)=\"typeaheadOnSelect({'item':model})\">\n-      <div>\n-        <span [innerHTML]=\"join(model.accessId, query)\">\n-        </span>\n-      </div>\n-      <div>\n-        <span [innerHTML]=\"join(model.name, query)\">\n-        </span>\n-      </div>\n-    </div>\n-  </ng-template>\n-  <div [ngClass]=\"{'hidden': !dataSource.selected || typing,\n-                   'disable': disable}\" class=\"wrapper-text\"\n-    (click)=\"setTyping(true)\">\n-    <span>\n-      <label>\n-        {{dataSource.selected?.name}}\n-      </label>\n-    </span>\n-    <div class=\"input-group form-control\">\n-      <div>{{dataSource.selected?.accessId}}</div>\n-    </div>\n-  </div>\n-  <div [ngClass]=\"{'hidden': dataSource.selected && !typing}\">\n-    <span class=\"field-label-wrapper\">\n-      <label>\n-        {{dataSource.selected?.name}}\n-      </label>\n-    </span>\n-    <div class=\"input-group\">\n-      <input #inputTypeAhead class=\"form-control input-text\" [ngClass]=\"{'invalid': !dataSource.length && isRequired}\"  (blur)=\"typeaheadOnSelect({'item':dataSource.selected})\"\n-        name=\"accessItem-{{index}}\" [required]=\"isRequired ? 'required' : null\" #accessItemName=\"ngModel\" [(ngModel)]=\"value\"\n-        [typeahead]=\"dataSource\" typeaheadOptionField=\"name\" [typeaheadItemTemplate]=\"customItemTemplate\"\n-        (typeaheadOnSelect)=\"typeaheadOnSelect($event)\" [typeaheadScrollable]=\"true\"\n-        [typeaheadOptionsInScrollableView]=\"typeaheadOptionsInScrollableView\" [typeaheadMinLength]=\"typeaheadMinLength\"\n-        [typeaheadWaitMs]=\"typeaheadWaitMs\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\" placeholder=\"{{displayError? placeHolderMessage: ''}}\"\n-        [@validation]=\"validationValue\" data-cy=\"typeahead_input\">\n-      <button *ngIf=\"!typeaheadLoading\" type=\"button\" title=\"search\" class=\"btn rounded blue search-button\" >\n-        <span class=\"material-icons md-20 blue\">search</span>\n-      </button>\n-      <div *ngIf=\"typeaheadLoading\" class=\"loading\">\n-        <taskana-shared-spinner [isRunning]=\"typeaheadLoading\" positionClass=\"type-ahead-spinner\"></taskana-shared-spinner>\n-      </div>\n-    </div>\n-  </div>\n-</div>\n+<div *ngIf=\"dataSource\" class=\"typeahead\">\n+  <label class=\"typeahead__label\">\n+    {{dataSource.selected?.name}}\n+  </label>\n+  <form>\n+    <mat-form-field class=\"typeahead__form\" focused=\"false\" appearance=\"outline\">\n+      <mat-label>{{placeHolderMessage}}</mat-label>\n+      <input #inputTypeAhead [required]=\"isRequired\" class=\"typeahead__form-input align\" matInput type=\"text\"\n+        [matAutocomplete]=\"auto\" placeholder=\"{{placeHolderMessage}}\" [(ngModel)]=\"value\" name=\"acessId\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4NjE1NA==", "bodyText": "Is 'el' used?", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511786154", "createdAt": "2020-10-26T08:27:02Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.ts", "diffHunk": "@@ -105,7 +111,7 @@ export class TypeAheadComponent implements AfterViewInit, ControlValueAccessor {\n     this.onTouchedCallback = fn;\n   }\n \n-  constructor(private accessIdsService: AccessIdsService) {}\n+  constructor(private accessIdsService: AccessIdsService, private el: ElementRef) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4Nzg4NQ==", "bodyText": "I think the name 'should create component' would be more appropriate.", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511787885", "createdAt": "2020-10-26T08:30:10Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.spec.ts", "diffHunk": "@@ -0,0 +1,75 @@\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { DebugElement } from '@angular/core';\n+import { AccessIdsService } from 'app/shared/services/access-ids/access-ids.service';\n+import { TypeAheadComponent } from './type-ahead.component';\n+import { BrowserModule, By } from '@angular/platform-browser';\n+import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n+import { HttpClientTestingModule } from '@angular/common/http/testing';\n+import { RouterModule } from '@angular/router';\n+import { RouterTestingModule } from '@angular/router/testing';\n+import { of } from 'rxjs/internal/observable/of';\n+import { MatSelectModule } from '@angular/material/select';\n+import { MatAutocompleteModule } from '@angular/material/autocomplete';\n+import { MatFormFieldModule } from '@angular/material/form-field';\n+import { MatInputModule } from '@angular/material/input';\n+import { FormsModule } from '@angular/forms';\n+import { compileComponentFromMetadata, componentFactoryName } from '@angular/compiler';\n+\n+const AccessIdsServiceSpy = jest.fn().mockImplementation(\n+  (): Partial<AccessIdsService> => ({\n+    getAccessItems: jest.fn().mockReturnValue(of()),\n+    searchForAccessId: jest.fn().mockReturnValue(of())\n+  })\n+);\n+\n+describe('TypeAheadComponent', () => {\n+  let component: TypeAheadComponent;\n+  let fixture: ComponentFixture<TypeAheadComponent>;\n+  let debugElement: DebugElement;\n+\n+  beforeEach(async(() => {\n+    TestBed.configureTestingModule({\n+      declarations: [TypeAheadComponent],\n+      imports: [\n+        BrowserModule,\n+        RouterModule,\n+        RouterTestingModule,\n+        HttpClientTestingModule,\n+        MatSelectModule,\n+        MatAutocompleteModule,\n+        MatFormFieldModule,\n+        MatInputModule,\n+        FormsModule,\n+        BrowserAnimationsModule\n+      ],\n+      providers: [{ provide: AccessIdsService, useClass: AccessIdsServiceSpy }]\n+    }).compileComponents();\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(TypeAheadComponent);\n+    debugElement = fixture.debugElement;\n+    component = fixture.debugElement.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4OTIwMw==", "bodyText": "A variable 'debugElement' was created in line 51. This variable should replace 'fixture.debugElement'.", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511789203", "createdAt": "2020-10-26T08:32:55Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.spec.ts", "diffHunk": "@@ -0,0 +1,75 @@\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { DebugElement } from '@angular/core';\n+import { AccessIdsService } from 'app/shared/services/access-ids/access-ids.service';\n+import { TypeAheadComponent } from './type-ahead.component';\n+import { BrowserModule, By } from '@angular/platform-browser';\n+import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n+import { HttpClientTestingModule } from '@angular/common/http/testing';\n+import { RouterModule } from '@angular/router';\n+import { RouterTestingModule } from '@angular/router/testing';\n+import { of } from 'rxjs/internal/observable/of';\n+import { MatSelectModule } from '@angular/material/select';\n+import { MatAutocompleteModule } from '@angular/material/autocomplete';\n+import { MatFormFieldModule } from '@angular/material/form-field';\n+import { MatInputModule } from '@angular/material/input';\n+import { FormsModule } from '@angular/forms';\n+import { compileComponentFromMetadata, componentFactoryName } from '@angular/compiler';\n+\n+const AccessIdsServiceSpy = jest.fn().mockImplementation(\n+  (): Partial<AccessIdsService> => ({\n+    getAccessItems: jest.fn().mockReturnValue(of()),\n+    searchForAccessId: jest.fn().mockReturnValue(of())\n+  })\n+);\n+\n+describe('TypeAheadComponent', () => {\n+  let component: TypeAheadComponent;\n+  let fixture: ComponentFixture<TypeAheadComponent>;\n+  let debugElement: DebugElement;\n+\n+  beforeEach(async(() => {\n+    TestBed.configureTestingModule({\n+      declarations: [TypeAheadComponent],\n+      imports: [\n+        BrowserModule,\n+        RouterModule,\n+        RouterTestingModule,\n+        HttpClientTestingModule,\n+        MatSelectModule,\n+        MatAutocompleteModule,\n+        MatFormFieldModule,\n+        MatInputModule,\n+        FormsModule,\n+        BrowserAnimationsModule\n+      ],\n+      providers: [{ provide: AccessIdsService, useClass: AccessIdsServiceSpy }]\n+    }).compileComponents();\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(TypeAheadComponent);\n+    debugElement = fixture.debugElement;\n+    component = fixture.debugElement.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should change value via the input field', async(() => {\n+    component.value = 'val_1';\n+    component.changeValue();\n+    fixture.detectChanges();\n+    fixture.whenStable().then(() => {\n+      let input = fixture.debugElement.query(By.css('.typeahead__form-input'));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc5MjE4OQ==", "bodyText": "Why don't you call initializeDataSource() instead of changeValue()? I think changeValue() is unnecessary.", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511792189", "createdAt": "2020-10-26T08:38:35Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.ts", "diffHunk": "@@ -95,6 +97,10 @@ export class TypeAheadComponent implements AfterViewInit, ControlValueAccessor {\n     }\n   }\n \n+  changeValue() {\n+    this.initializeDataSource();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc5MzE5Mw==", "bodyText": "Please remove the comment in case it is not necessary.", "url": "https://github.com/Taskana/taskana/pull/1312#discussion_r511793193", "createdAt": "2020-10-26T08:40:15Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/type-ahead/type-ahead.component.scss", "diffHunk": "@@ -1,99 +1,10 @@\n @import '../../../../theme/colors';\n \n-.wrapper-text {\n-  min-width: 150px;\n-  height: 47px;\n-  & label {\n-    margin-bottom: 0px;\n-    //font-style: italic;\n-    //color: grey;\n-    overflow: hidden;\n-  }\n-  & > div {\n-    & > div {\n-      margin-top: 2px;\n-      max-width: 175px;\n-    }\n-  }\n-  > div {\n-    border-bottom: 1px solid $pallete-blue !important;\n-    border-radius: 4px !important;\n-    height: 32px;\n-    text-overflow: ellipsis;\n-    overflow: hidden;\n-    white-space: nowrap;\n-    margin-right: 35px;\n-    padding-left: 12px;\n-  }\n-}\n-.custom-form-control {\n-  margin-top: -5px;\n-  max-height: 57px;\n-  & .input-group {\n-    width: 100%;\n-  }\n-}\n-\n-.input-text {\n-  margin-top: 4px;\n-  margin-bottom: 16px;\n-  background: white;\n-  box-shadow: none;\n-  border-radius: 4px !important;\n-  //border-color: lightgray;\n-  border-bottom: 1px solid $pallete-blue !important;\n-  min-width: 150px;\n-  height: 32px;\n-  padding: 13px 0 13px 12px;\n-}\n-\n-.field-label-wrapper {\n-  position: relative;\n-  height: 28px;\n-  box-sizing: content-box;\n-  overflow: hidden;\n-  pointer-events: none;\n-  label {\n-    margin-bottom: 1px;\n-  }\n-}\n-\n-.form-control:focus {\n-  //border-color: unset;\n-  box-shadow: none;\n-}\n-\n-.loading {\n-  position: absolute;\n-  top: 0px;\n-  right: 0;\n-}\n-\n-.btn.rounded {\n-  position: absolute;\n-  top: 0px;\n-  right: 0px;\n-  padding-top: 0;\n-}\n-.search-button {\n-  z-index: 999;\n-  margin-top: 8px;\n-}\n-\n ::placeholder {\n   /* Chrome, Firefox, Opera, Safari 10.1+ */\n-  color: $invalid;\n+  //color: $invalid;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d26a705b8a2da8f4c9e4e7a8879b1c5ce065d41"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6abf3d4a84bdb3a4731f77307d136399f9ccc3ae", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/6abf3d4a84bdb3a4731f77307d136399f9ccc3ae", "committedDate": "2020-10-27T15:32:22Z", "message": "TSK-1401: remove bootstrap from typeahead component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c61336d0aed9536c71386ebf9743b19ce61ba9e6", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/c61336d0aed9536c71386ebf9743b19ce61ba9e6", "committedDate": "2020-10-27T15:32:22Z", "message": "TSK-1401: rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a4a7e6fd28726c160e9d054c2aed2a622140b23", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/4a4a7e6fd28726c160e9d054c2aed2a622140b23", "committedDate": "2020-10-27T15:32:23Z", "message": "TSK-1401: modify typeahead component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad2eb89e65dfe22ec5b2e6413341e023d2f5f0d0", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/ad2eb89e65dfe22ec5b2e6413341e023d2f5f0d0", "committedDate": "2020-10-27T15:32:23Z", "message": "TSK-1401: fixed CI error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1468524eb800380dff2b2470413646b5fb970ebd", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/1468524eb800380dff2b2470413646b5fb970ebd", "committedDate": "2020-10-27T15:32:23Z", "message": "TSK-1401: fixed test error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "699caebe91bd5fb25aa2fb623799eb7fe40bd4ea", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/699caebe91bd5fb25aa2fb623799eb7fe40bd4ea", "committedDate": "2020-10-27T15:32:23Z", "message": "TSK-1401: fixed format error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7769a104ac38a65ad3aa44ca3b875ae38308dea", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/b7769a104ac38a65ad3aa44ca3b875ae38308dea", "committedDate": "2020-10-27T15:32:23Z", "message": "TSK-1401: add blur function after selection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f6574e95786dd1075f65481c4cbe0ce27b752c7", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/8f6574e95786dd1075f65481c4cbe0ce27b752c7", "committedDate": "2020-10-27T15:32:23Z", "message": "TSK-1401: fix CI error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac2eb048ee8100a5a439ebad5cf6dcee88e054fb", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/ac2eb048ee8100a5a439ebad5cf6dcee88e054fb", "committedDate": "2020-10-27T15:32:24Z", "message": "TSK-1401: integrate requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1ffd9fa8e48456cd18d2ebaaa2df25fe27d28e1", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/e1ffd9fa8e48456cd18d2ebaaa2df25fe27d28e1", "committedDate": "2020-10-27T15:32:24Z", "message": "TSK-1401: integrate changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3baab9d92610a326c65098fea1b2c8d5b2f79333", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/3baab9d92610a326c65098fea1b2c8d5b2f79333", "committedDate": "2020-10-27T15:32:24Z", "message": "TSK-1401: update sidenav and typeahead"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3757d1063077cbab1ff5c7eb18b715f2fb491cff", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/3757d1063077cbab1ff5c7eb18b715f2fb491cff", "committedDate": "2020-10-27T15:32:24Z", "message": "TSK-1401: fix tabs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8afcab2a3dd42785526f2d3a10fb1f8a8eca3c26", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/8afcab2a3dd42785526f2d3a10fb1f8a8eca3c26", "committedDate": "2020-10-27T15:32:24Z", "message": "TSK-1401: fix CI error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5fb39ef41f08a189470b781d85e4da53855ff73", "author": {"user": {"login": "Franzi321", "name": null}}, "url": "https://github.com/Taskana/taskana/commit/b5fb39ef41f08a189470b781d85e4da53855ff73", "committedDate": "2020-10-27T15:32:24Z", "message": "TSK-1401: add pipe for tab bar"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NDIyODgx", "url": "https://github.com/Taskana/taskana/pull/1312#pullrequestreview-518422881", "createdAt": "2020-10-28T08:33:07Z", "commit": {"oid": "b5fb39ef41f08a189470b781d85e4da53855ff73"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4603, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}