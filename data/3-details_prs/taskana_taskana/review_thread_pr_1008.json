{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NjMyNzE4", "number": 1008, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozOTowNFrODwXm-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTo0MDo0NFrODwXoug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDQ1MDQ4OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozOTowNFrOGDVCtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozOTowNFrOGDVCtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0MzY3MQ==", "bodyText": "Why are you sorting the list?", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406143671", "createdAt": "2020-04-09T11:39:04Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -73,17 +75,23 @@ void testIfNewTaskHasEmptyAttachmentList() {\n       userName = \"user_1_1\",\n       groupNames = {\"group_1\"})\n   @Test\n-  void testIfAttachmentSummariesAreCorrectUsingTaskQueryAndGetTaskById()\n+  void should_ConfirmIfAttachmentSummariesAreCorrect_When_UsingTaskQueryAndGetTaskById()\n       throws TaskNotFoundException, NotAuthorizedException {\n     TaskService taskService = taskanaEngine.getTaskService();\n     // find Task with ID TKI:00...00\n     List<TaskSummary> tasks =\n         taskService.createTaskQuery().idIn(\"TKI:000000000000000000000000000000000000\").list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDQ1MTQyOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozOToxN1rOGDVDNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozOToxN1rOGDVDNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0Mzc5OQ==", "bodyText": "why are you sorting the list?", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406143799", "createdAt": "2020-04-09T11:39:17Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -73,17 +75,23 @@ void testIfNewTaskHasEmptyAttachmentList() {\n       userName = \"user_1_1\",\n       groupNames = {\"group_1\"})\n   @Test\n-  void testIfAttachmentSummariesAreCorrectUsingTaskQueryAndGetTaskById()\n+  void should_ConfirmIfAttachmentSummariesAreCorrect_When_UsingTaskQueryAndGetTaskById()\n       throws TaskNotFoundException, NotAuthorizedException {\n     TaskService taskService = taskanaEngine.getTaskService();\n     // find Task with ID TKI:00...00\n     List<TaskSummary> tasks =\n         taskService.createTaskQuery().idIn(\"TKI:000000000000000000000000000000000000\").list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))\n+            .collect(Collectors.toList());\n \n     Task originalTask = taskService.getTask(\"TKI:000000000000000000000000000000000000\");\n-    List<Attachment> originalAttachments = originalTask.getAttachments();\n+    List<Attachment> originalAttachments =\n+        originalTask.getAttachments().stream()\n+            .sorted(Comparator.comparing(Attachment::getId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDQ1NDU5OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTo0MDozMlrOGDVFVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTo0MDozMlrOGDVFVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0NDM0MQ==", "bodyText": "again, why sorting?", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406144341", "createdAt": "2020-04-09T11:40:32Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -132,10 +140,16 @@ void testIfAttachmentSummariesAreCorrect()\n             .customAttributeIn(\"1\", \"custom1\")\n             .list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDQ1NDk4OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTo0MDo0NFrOGDVFnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTo0MDo0NFrOGDVFnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0NDQxNQ==", "bodyText": "why sorting?", "url": "https://github.com/Taskana/taskana/pull/1008#discussion_r406144415", "createdAt": "2020-04-09T11:40:44Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -132,10 +140,16 @@ void testIfAttachmentSummariesAreCorrect()\n             .customAttributeIn(\"1\", \"custom1\")\n             .list();\n     assertEquals(1, tasks.size());\n-    List<AttachmentSummary> queryAttachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    List<AttachmentSummary> queryAttachmentSummaries =\n+        tasks.get(0).getAttachmentSummaries().stream()\n+            .sorted(Comparator.comparing(AttachmentSummary::getId))\n+            .collect(Collectors.toList());\n \n     Task originalTask = taskService.getTask(\"TKI:000000000000000000000000000000000000\");\n-    List<Attachment> originalAttachments = originalTask.getAttachments();\n+    List<Attachment> originalAttachments =\n+        originalTask.getAttachments().stream()\n+            .sorted(Comparator.comparing(Attachment::getId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4562cb58a2ae4e45b18e6cbece0c5b775d6a1af"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4322, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}