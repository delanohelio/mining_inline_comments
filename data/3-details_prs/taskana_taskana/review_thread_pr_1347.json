{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTEyNzk0", "number": 1347, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODoyNzowMFrOE6c2JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxOToxNVrOE6nd5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzI1NDc3OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODoyNzowMFrOH1iKeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODoyNzowMFrOH1iKeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg5NjMxNA==", "bodyText": "These are the workbasket names, not the ids, right?", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525896314", "createdAt": "2020-11-18T08:27:00Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzI1NjAzOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODoyNzoxNVrOH1iLNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODoyNzoxNVrOH1iLNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg5NjUwMA==", "bodyText": "see above", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525896500", "createdAt": "2020-11-18T08:27:15Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }\n+    results = taskService.createTaskQuery().orderByWorkbasketName(desc).list();\n+\n+    List<String> idsDesc =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzI4NDUyOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODozNDo0MlrOH1icww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNDozMDoxM1rOH1weuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMDk5NQ==", "bodyText": "I'm missing a separate \"joinWithWorkbaskets\" property here like for the attachments and classifications.", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525900995", "createdAt": "2020-11-18T08:34:42Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryMapper.java", "diffHunk": "@@ -37,6 +40,9 @@\n           + \"<if test=\\\"joinWithAttachmentClassifications\\\">\"\n           + \"LEFT JOIN CLASSIFICATION AS ac ON a.CLASSIFICATION_ID = ac.ID \"\n           + \"</if>\"\n+          + \"<if test=\\\"addWorkbasketNameForOrdering\\\">\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEzMDg3NQ==", "bodyText": "explained above", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526130875", "createdAt": "2020-11-18T14:30:13Z", "author": {"login": "tge20"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryMapper.java", "diffHunk": "@@ -37,6 +40,9 @@\n           + \"<if test=\\\"joinWithAttachmentClassifications\\\">\"\n           + \"LEFT JOIN CLASSIFICATION AS ac ON a.CLASSIFICATION_ID = ac.ID \"\n           + \"</if>\"\n+          + \"<if test=\\\"addWorkbasketNameForOrdering\\\">\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMDk5NQ=="}, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzI5NzQ4OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODozNzo1OVrOH1ikxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNDoyODo1NlrOH1waPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMzA0NQ==", "bodyText": "should we name this \"addWorkbasketNameToSelectClauseForOrdering\" to be consistent with the rest?\nAren't we missing a \"joinWithWorkbaskets\" property? (Which should probably also be handled in the setupJoinAndOrderParameters() method)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525903045", "createdAt": "2020-11-18T08:37:59Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryImpl.java", "diffHunk": "@@ -158,6 +158,7 @@\n   private boolean addAttachmentColumnsToSelectClauseForOrdering = false;\n   private boolean addClassificationNameToSelectClauseForOrdering = false;\n   private boolean addAttachmentClassificationNameToSelectClauseForOrdering = false;\n+  private boolean addWorkbasketNameForOrdering = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEyNjg5Mw==", "bodyText": "The way I see it, a different handling of \"joinWithWorkbasket\" and \"addWorkbasketNameToSelectClauseForOrdering\" is not necessary. When joining the workbaskets in the queries we always want to also select the workbasket name.\nThe  reason is that we don't implement the option to search for a certain workbasket name in which case we would join but not select. We only want to be able to order the results by the workbasket names (join + select).", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526126893", "createdAt": "2020-11-18T14:25:24Z", "author": {"login": "tge20"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryImpl.java", "diffHunk": "@@ -158,6 +158,7 @@\n   private boolean addAttachmentColumnsToSelectClauseForOrdering = false;\n   private boolean addClassificationNameToSelectClauseForOrdering = false;\n   private boolean addAttachmentClassificationNameToSelectClauseForOrdering = false;\n+  private boolean addWorkbasketNameForOrdering = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMzA0NQ=="}, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEyOTcyNQ==", "bodyText": "\"addWorkbasketNameToSelectClauseForOrdering\" would be consistent, in my view \"addWorkbasketNameForOrdering\" is easier and could emphasize the difference to attachments and classifications...", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526129725", "createdAt": "2020-11-18T14:28:56Z", "author": {"login": "tge20"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryImpl.java", "diffHunk": "@@ -158,6 +158,7 @@\n   private boolean addAttachmentColumnsToSelectClauseForOrdering = false;\n   private boolean addClassificationNameToSelectClauseForOrdering = false;\n   private boolean addAttachmentClassificationNameToSelectClauseForOrdering = false;\n+  private boolean addWorkbasketNameForOrdering = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMzA0NQ=="}, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzMwMzc4OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/task/api/TaskQuery.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODozOTozNVrOH1ioww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODozOTozNVrOH1ioww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNDA2Nw==", "bodyText": "workbasket name instead of workbasket-Name?", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525904067", "createdAt": "2020-11-18T08:39:35Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/api/TaskQuery.java", "diffHunk": "@@ -848,6 +848,15 @@ TaskQuery customAttributeLike(TaskCustomField customField, String... searchArgum\n    */\n   TaskQuery orderByWorkbasketId(SortDirection sortDirection);\n \n+  /**\n+   * This method sorts the query result according to the workbasket-Name of the tasks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzMxMTI1OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo0MTozOFrOH1itVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo0MTozOFrOH1itVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNTIzOQ==", "bodyText": "should we name this \"addWorkbasketNameToSelectClauseForOdering\", to be consistent with the if tests for ClassificationName and AttachmentClassificationName? (See TaskQueryImpl comment)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525905239", "createdAt": "2020-11-18T08:41:38Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryMapper.java", "diffHunk": "@@ -217,6 +223,9 @@\n           + \"<if test=\\\"addAttachmentClassificationNameToSelectClauseForOrdering\\\">\"\n           + \", ACNAME \"\n           + \"</if>\"\n+          + \"<if test=\\\"addWorkbasketNameForOrdering\\\">\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzMyMTcxOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo0NDoyNlrOH1iz2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo0NDoyNlrOH1iz2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNjkwNA==", "bodyText": "Our naming pattern for tests is:\nshould_ExpectedBehavior_When_StateUnderTest\nExample: \"should_AddErrorsForInvalidTaskIds_When_BulkForceCompletingTasks()\"", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525906904", "createdAt": "2020-11-18T08:44:26Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzMyODUxOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo0NjowMFrOH1i31g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNzo1MTo0MlrOH4CGVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNzkyNg==", "bodyText": "Please don't use admin as the user", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r525907926", "createdAt": "2020-11-18T08:46:00Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2NzA3MA==", "bodyText": "@gitgoodjhe why not? Was done in that file anyway", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526167070", "createdAt": "2020-11-18T15:16:02Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNzkyNg=="}, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODUxNjY5Mg==", "bodyText": "@mustaphazorgati admin skips several security checks. That's not important here, but as a general rule we usually don't use admin in tests unless it is really needed to test admin features", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r528516692", "createdAt": "2020-11-23T07:51:42Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNzkyNg=="}, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODk3NjkwOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxNTozNlrOH1yqxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxNTozNlrOH1yqxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2NjcyNA==", "bodyText": "please use DB#isDb2", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526166724", "createdAt": "2020-11-18T15:15:36Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/task/internal/TaskQueryImpl.java", "diffHunk": "@@ -851,6 +852,14 @@ public TaskQuery orderByWorkbasketId(SortDirection sortDirection) {\n     return addOrderCriteria(\"WORKBASKET_ID\", sortDirection);\n   }\n \n+  @Override\n+  public TaskQuery orderByWorkbasketName(SortDirection sortDirection) {\n+    addWorkbasketNameForOrdering = true;\n+    return DB.DB2.dbProductId.equals(getDatabaseId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODk4NzAxOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxNzozNVrOH1yxGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxNzozNVrOH1yxGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODM0NQ==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use the provided options from assertJ (see ListAssert)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526168345", "createdAt": "2020-11-18T15:17:35Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODk4Nzk0OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxNzo1MVrOH1yx0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxNzo1MVrOH1yx0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODUyOQ==", "bodyText": "why do you sort the list?", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526168529", "createdAt": "2020-11-18T15:17:51Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODk4OTUxOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxODowOVrOH1yy3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxODowOVrOH1yy3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODc5OQ==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use the provided options from assertJ (see ListAssert)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526168799", "createdAt": "2020-11-18T15:18:09Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODk5MDMyOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxODoyMVrOH1yzbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxODoyMVrOH1yzbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2ODk0Mg==", "bodyText": "why do you sort the list?", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526168942", "createdAt": "2020-11-18T15:18:21Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }\n+    results = taskService.createTaskQuery().orderByWorkbasketName(desc).list();\n+\n+    List<String> idsDesc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted(Comparator.reverseOrder())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODk5MDg0OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxODoyNlrOH1yzug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxODoyNlrOH1yzug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2OTAxOA==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use the provided options from assertJ (see ListAssert)", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526169018", "createdAt": "2020-11-18T15:18:26Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }\n+    results = taskService.createTaskQuery().orderByWorkbasketName(desc).list();\n+\n+    List<String> idsDesc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted(Comparator.reverseOrder())\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsDesc.get(i));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODk5NDA3OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxOTowNVrOH1y1wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxOTowNVrOH1y1wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2OTUzNw==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use method references", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526169537", "createdAt": "2020-11-18T15:19:05Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())\n+            .sorted()\n+            .collect(Collectors.toList());\n+\n+    for (int i = 0; i < results.size(); i++) {\n+      assertThat(results.get(i).getWorkbasketSummary().getName()).isEqualTo(idsAsc.get(i));\n+    }\n+    results = taskService.createTaskQuery().orderByWorkbasketName(desc).list();\n+\n+    List<String> idsDesc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODk5NDk1OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxOToxNVrOH1y2PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToxOToxNVrOH1y2PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2OTY2MQ==", "bodyText": "according to our coding guidelines this is not ok.\nPlease use method references", "url": "https://github.com/Taskana/taskana/pull/1347#discussion_r526169661", "createdAt": "2020-11-18T15:19:15Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksWithSortingAccTest.java", "diffHunk": "@@ -98,6 +98,42 @@ void testSortByTaskIdAsc() {\n     }\n   }\n \n+  @WithAccessId(user = \"admin\")\n+  @Test\n+  void testSortByWorkbasketName() {\n+    TaskService taskService = taskanaEngine.getTaskService();\n+    List<TaskSummary> results = taskService.createTaskQuery().orderByWorkbasketName(asc).list();\n+\n+    // test is only valid with at least 2 results\n+    assertThat(\n+            results.stream()\n+                .map(t -> t.getWorkbasketSummary().getName())\n+                .distinct()\n+                .collect(Collectors.toList()))\n+        .hasSizeGreaterThan(2);\n+\n+    List<String> idsAsc =\n+        results.stream()\n+            .map(t -> t.getWorkbasketSummary().getName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74abcd2eba76b532fe30f4d253ce0b6f7992ee5b"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4462, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}