{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjY5MTMw", "number": 1159, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0OToxMlrOEKfzxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo1Mjo0MVrOEKf42A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDQyMzc0OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0OToxMlrOGrkeRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwODoxMTo1MlrOGsCKBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTUyNA==", "bodyText": "what happens if the accessId is already a full dn? Do we have a test for this case?", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448339524", "createdAt": "2020-07-01T12:49:12Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -191,7 +191,18 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n \n     final AndFilter andFilter = new AndFilter();\n     andFilter.and(new EqualsFilter(getGroupSearchFilterName(), getGroupSearchFilterValue()));\n-    andFilter.and(new LikeFilter(getGroupsOfUser(), \"*\" + accessId + \"*\"));\n+    final OrFilter orFilter = new OrFilter();\n+    orFilter.or(new EqualsFilter(getGroupsOfUser(), accessId));\n+    orFilter.or(\n+        new EqualsFilter(\n+            getGroupsOfUser(),\n+            LdapNameBuilder.newInstance()\n+                .add(getBaseDn())\n+                .add(getUserSearchBase())\n+                .add(\"uid\", accessId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0OTg3Ng==", "bodyText": "It could be either a full dn, then \"orFilter.or(new EqualsFilter(getGroupsOfUser(), accessId))\" applies, or it is a userid, then this case applies.", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448349876", "createdAt": "2020-07-01T13:07:32Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -191,7 +191,18 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n \n     final AndFilter andFilter = new AndFilter();\n     andFilter.and(new EqualsFilter(getGroupSearchFilterName(), getGroupSearchFilterValue()));\n-    andFilter.and(new LikeFilter(getGroupsOfUser(), \"*\" + accessId + \"*\"));\n+    final OrFilter orFilter = new OrFilter();\n+    orFilter.or(new EqualsFilter(getGroupsOfUser(), accessId));\n+    orFilter.or(\n+        new EqualsFilter(\n+            getGroupsOfUser(),\n+            LdapNameBuilder.newInstance()\n+                .add(getBaseDn())\n+                .add(getUserSearchBase())\n+                .add(\"uid\", accessId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTUyNA=="}, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyOTk3Mw==", "bodyText": "I don't see a matching test for that.", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448629973", "createdAt": "2020-07-01T21:38:49Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -191,7 +191,18 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n \n     final AndFilter andFilter = new AndFilter();\n     andFilter.and(new EqualsFilter(getGroupSearchFilterName(), getGroupSearchFilterValue()));\n-    andFilter.and(new LikeFilter(getGroupsOfUser(), \"*\" + accessId + \"*\"));\n+    final OrFilter orFilter = new OrFilter();\n+    orFilter.or(new EqualsFilter(getGroupsOfUser(), accessId));\n+    orFilter.or(\n+        new EqualsFilter(\n+            getGroupsOfUser(),\n+            LdapNameBuilder.newInstance()\n+                .add(getBaseDn())\n+                .add(getUserSearchBase())\n+                .add(\"uid\", accessId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTUyNA=="}, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgxNzg3NA==", "bodyText": "This test already exists:\nAccessIdControllerIntTest::should_returnAccessIdsOfGroupsTheAccessIdIsMemberOf_ifAccessIdOfGroupIsGiven", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448817874", "createdAt": "2020-07-02T07:58:07Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -191,7 +191,18 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n \n     final AndFilter andFilter = new AndFilter();\n     andFilter.and(new EqualsFilter(getGroupSearchFilterName(), getGroupSearchFilterValue()));\n-    andFilter.and(new LikeFilter(getGroupsOfUser(), \"*\" + accessId + \"*\"));\n+    final OrFilter orFilter = new OrFilter();\n+    orFilter.or(new EqualsFilter(getGroupsOfUser(), accessId));\n+    orFilter.or(\n+        new EqualsFilter(\n+            getGroupsOfUser(),\n+            LdapNameBuilder.newInstance()\n+                .add(getBaseDn())\n+                .add(getUserSearchBase())\n+                .add(\"uid\", accessId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTUyNA=="}, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgyNTg2Mw==", "bodyText": "ok :) Missed that. Thanks", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448825863", "createdAt": "2020-07-02T08:11:52Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -191,7 +191,18 @@ public AccessIdRepresentationModel searchGroupByDn(final String name) {\n \n     final AndFilter andFilter = new AndFilter();\n     andFilter.and(new EqualsFilter(getGroupSearchFilterName(), getGroupSearchFilterValue()));\n-    andFilter.and(new LikeFilter(getGroupsOfUser(), \"*\" + accessId + \"*\"));\n+    final OrFilter orFilter = new OrFilter();\n+    orFilter.or(new EqualsFilter(getGroupsOfUser(), accessId));\n+    orFilter.or(\n+        new EqualsFilter(\n+            getGroupsOfUser(),\n+            LdapNameBuilder.newInstance()\n+                .add(getBaseDn())\n+                .add(getUserSearchBase())\n+                .add(\"uid\", accessId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTUyNA=="}, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDQzMzQ5OnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo1MTo1MlrOGrkkHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTozOToyNVrOGr2Nuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0MTAyMg==", "bodyText": "Sorry \ud83d\ude05 : I don't understand the test name.\nWhat in ksc-teamleads,cn=groups is invalid?", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448341022", "createdAt": "2020-07-01T12:51:52Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "diffHunk": "@@ -61,6 +61,17 @@ void testQueryGroupsByCn() {\n         .containsExactly(\"cn=ksc-users,cn=groups,OU=Test,O=TASKANA\");\n   }\n \n+  @Test\n+  void should_returnEmptyResults_ifInvalidCharacterIsUsedInCondition() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1MDY4Nw==", "bodyText": "It is supposed to be a cn and nothing more. LDAP injection aims to prevent, that you can change the search path implictly, as I try in this case.", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448350687", "createdAt": "2020-07-01T13:08:59Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "diffHunk": "@@ -61,6 +61,17 @@ void testQueryGroupsByCn() {\n         .containsExactly(\"cn=ksc-users,cn=groups,OU=Test,O=TASKANA\");\n   }\n \n+  @Test\n+  void should_returnEmptyResults_ifInvalidCharacterIsUsedInCondition() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0MTAyMg=="}, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzMDIwMw==", "bodyText": "thanks! :)", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448630203", "createdAt": "2020-07-01T21:39:25Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "diffHunk": "@@ -61,6 +61,17 @@ void testQueryGroupsByCn() {\n         .containsExactly(\"cn=ksc-users,cn=groups,OU=Test,O=TASKANA\");\n   }\n \n+  @Test\n+  void should_returnEmptyResults_ifInvalidCharacterIsUsedInCondition() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0MTAyMg=="}, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDQzNjcyOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo1Mjo0MVrOGrkl-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTozOToxNVrOGr2NeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0MTQ5OQ==", "bodyText": "Does this test make sense? You want to test something within the LdapClient, but the exception is thrown in the AccessIdController. Thus this test only tests that getGroupsByAccessId is called with a valid accessId", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448341499", "createdAt": "2020-07-01T12:52:41Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "diffHunk": "@@ -128,6 +139,23 @@ void should_returnAccessIdsOfGroupsTheAccessIdIsMemberOf_ifAccessIdOfUserIsGiven\n                 + \"cn=Organisationseinheit KSC,cn=organisation,OU=Test,O=TASKANA\");\n   }\n \n+  @Test\n+  void should_returnBadRequest_ifAccessIdOfUserContainsInvalidCharacter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1NDI2NA==", "bodyText": "This makes sense in case we do a refactoring. In the end, the test makes sure that this case is correctly handled, regardless the way we do it...\nOk for you?", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448354264", "createdAt": "2020-07-01T13:14:50Z", "author": {"login": "holgerhagen"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "diffHunk": "@@ -128,6 +139,23 @@ void should_returnAccessIdsOfGroupsTheAccessIdIsMemberOf_ifAccessIdOfUserIsGiven\n                 + \"cn=Organisationseinheit KSC,cn=organisation,OU=Test,O=TASKANA\");\n   }\n \n+  @Test\n+  void should_returnBadRequest_ifAccessIdOfUserContainsInvalidCharacter() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0MTQ5OQ=="}, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzMDEzNg==", "bodyText": "For now, yes :)", "url": "https://github.com/Taskana/taskana/pull/1159#discussion_r448630136", "createdAt": "2020-07-01T21:39:15Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/common/rest/AccessIdControllerIntTest.java", "diffHunk": "@@ -128,6 +139,23 @@ void should_returnAccessIdsOfGroupsTheAccessIdIsMemberOf_ifAccessIdOfUserIsGiven\n                 + \"cn=Organisationseinheit KSC,cn=organisation,OU=Test,O=TASKANA\");\n   }\n \n+  @Test\n+  void should_returnBadRequest_ifAccessIdOfUserContainsInvalidCharacter() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0MTQ5OQ=="}, "originalCommit": {"oid": "3f0b65182672711523570e54faa384a1ce772006"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4083, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}