{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTAxMTc5", "number": 1288, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo0OTozNVrOErgt9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowNTozN1rOEtXW6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDYwMjc5OnYy", "diffSide": "RIGHT", "path": "web/src/app/app.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo0OTozNVrOHeUUSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo0OTozNVrOHeUUSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MjIwMA==", "bodyText": "why should all of these variables and functions be in the app.component? Some of them seem redundant since it's a literal copy of navbar.component? Can you clean up the unused variables/functions?", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r501552200", "createdAt": "2020-10-08T08:49:35Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/app.component.ts", "diffHunk": "@@ -30,21 +41,48 @@ export class AppComponent implements OnInit, OnDestroy {\n   uploadingFileSubscription: Subscription;\n   error: ErrorModel;\n \n+  titleAdministration = 'Administration';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc07ddfc37dd65bf2ee1c3267c9131344a3265b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDYxMTY2OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/nav-bar/nav-bar.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1MTo0MFrOHeUZug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1MTo0MFrOHeUZug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MzU5NA==", "bodyText": "meta tags should only be in index.html, please remove this line", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r501553594", "createdAt": "2020-10-08T08:51:40Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/nav-bar/nav-bar.component.html", "diffHunk": "@@ -1,78 +1,12 @@\n-<nav class=\"navbar\">\n-  <div class=\"navbar  no-border-radius navbar-inverse no-gutter col-xs-12\">\n-    <div class=\"pull-left col-sm-3 col-md-4\">\n-      <button type=\"button\" *ngIf=\"!showNavbar\" class=\"btn btn-default navbar-toggle show pull-left\" (click)=\"toggleNavBar();\"\n-        aria-expanded=\"true\" aria-controls=\"navbar\" data-toggle=\"tooltip\" title=\"Menu\">\n-        <span class=\"material-icons md-24 white\">menu</span>\n-      </button>\n-      <span>&nbsp;</span>\n-    </div>\n-    <div class=\"col-xs-6 col-sm-5 col-md-4\">\n-      <ul class=\"nav logo\">\n-        <svg-icon class=\"logo white hidden-xs\" src=\"./assets/icons/logo-copy.svg\"></svg-icon>\n-        <h2 class=\"navbar-brand no-margin\"> {{title}}</h2>\n-      </ul>\n-    </div>\n-    <div *ngIf=\"showDomainSelector()\" class=\"pull-right domain-form\">\n-      <div class=\"dropdown clearfix btn-group\">\n-        <label class=\"control-label hidden-xs\">Working on </label>\n-        <button type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n-          {{selectedDomain? selectedDomain: 'MASTER DOMAIN'}}\n-          <span class=\"caret\"></span>\n-        </button>\n-        <ul class=\"dropdown-menu dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n-          <li>\n-            <a *ngFor=\"let domain of domains\" (click)=\"switchDomain(domain)\">\n-              <label>{{domain? domain: 'MASTER DOMAIN'}}</label>\n-            </a>\n-          </li>\n-        </ul>\n-      </div>\n-    </div>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc07ddfc37dd65bf2ee1c3267c9131344a3265b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDYzMzI3OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/nav-bar/nav-bar.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1Njo1NVrOHeUnBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1Njo1NVrOHeUnBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1Njk5OA==", "bodyText": "this function is very demanding which can cause slowness in our website. Please implement this using css @media query instead.", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r501556998", "createdAt": "2020-10-08T08:56:55Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/nav-bar/nav-bar.component.ts", "diffHunk": "@@ -49,9 +56,21 @@ export class NavBarComponent implements OnInit, OnDestroy {\n     private selectedRouteService: SelectedRouteService,\n     private domainService: DomainService,\n     private taskanaEngineService: TaskanaEngineService,\n-    private window: WindowRefService\n+    private window: WindowRefService,\n+    private sidenavService: SidenavService\n   ) {}\n \n+  @HostListener('window:resize', ['$event'])\n+  onResize() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc07ddfc37dd65bf2ee1c3267c9131344a3265b"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDYzNjA1OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/nav-bar/nav-bar.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1NzoyOVrOHeUonQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1NzoyOVrOHeUonQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NzQwNQ==", "bodyText": "Please remember to remove all console commands in the future", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r501557405", "createdAt": "2020-10-08T08:57:29Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/nav-bar/nav-bar.component.ts", "diffHunk": "@@ -49,9 +56,21 @@ export class NavBarComponent implements OnInit, OnDestroy {\n     private selectedRouteService: SelectedRouteService,\n     private domainService: DomainService,\n     private taskanaEngineService: TaskanaEngineService,\n-    private window: WindowRefService\n+    private window: WindowRefService,\n+    private sidenavService: SidenavService\n   ) {}\n \n+  @HostListener('window:resize', ['$event'])\n+  onResize() {\n+    this.innerWidth = window.innerWidth;\n+    console.log(this.innerWidth);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc07ddfc37dd65bf2ee1c3267c9131344a3265b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTk3ODAzOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/nav-bar/nav-bar.component.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1MDowNVrOHhGfXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1MDowNVrOHhGfXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3MTM5MQ==", "bodyText": "Please change test name to fit with the component name in TS file. EG: NavBarComponent", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504471391", "createdAt": "2020-10-14T07:50:05Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/nav-bar/nav-bar.component.spec.ts", "diffHunk": "@@ -0,0 +1,67 @@\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { DebugElement } from '@angular/core';\n+import { NavBarComponent } from './nav-bar.component';\n+import { SelectedRouteService } from 'app/shared/services/selected-route/selected-route';\n+import { MatIconModule } from '@angular/material';\n+import { SidenavService } from '../../../shared/services/sidenav/sidenav.service';\n+import { AngularSvgIconModule } from 'angular-svg-icon';\n+import { HttpClientTestingModule } from '@angular/common/http/testing';\n+import { By } from '@angular/platform-browser';\n+import { of } from 'rxjs/internal/observable/of';\n+\n+const SidenavServiceSpy = jest.fn().mockImplementation(\n+  (): Partial<SidenavService> => ({\n+    toggle_sidenav: jest.fn().mockReturnValue(of())\n+  })\n+);\n+\n+const SelectedRouteServiceSpy = jest.fn().mockImplementation(\n+  (): Partial<SelectedRouteService> => ({\n+    getSelectedRoute: jest.fn().mockReturnValue(of())\n+  })\n+);\n+\n+describe('SidenavListComponent', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68030fb788b6b05e0bf9b58aa40cd1288974126"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTk4MzkzOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/nav-bar/nav-bar.component.spec.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1MTozMlrOHhGi2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1MTozMlrOHhGi2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3MjI4Mw==", "bodyText": "only use let for variable that can be changed and const for constants that don't change", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504472283", "createdAt": "2020-10-14T07:51:32Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/nav-bar/nav-bar.component.spec.ts", "diffHunk": "@@ -0,0 +1,67 @@\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { DebugElement } from '@angular/core';\n+import { NavBarComponent } from './nav-bar.component';\n+import { SelectedRouteService } from 'app/shared/services/selected-route/selected-route';\n+import { MatIconModule } from '@angular/material';\n+import { SidenavService } from '../../../shared/services/sidenav/sidenav.service';\n+import { AngularSvgIconModule } from 'angular-svg-icon';\n+import { HttpClientTestingModule } from '@angular/common/http/testing';\n+import { By } from '@angular/platform-browser';\n+import { of } from 'rxjs/internal/observable/of';\n+\n+const SidenavServiceSpy = jest.fn().mockImplementation(\n+  (): Partial<SidenavService> => ({\n+    toggle_sidenav: jest.fn().mockReturnValue(of())\n+  })\n+);\n+\n+const SelectedRouteServiceSpy = jest.fn().mockImplementation(\n+  (): Partial<SelectedRouteService> => ({\n+    getSelectedRoute: jest.fn().mockReturnValue(of())\n+  })\n+);\n+\n+describe('SidenavListComponent', () => {\n+  let component: NavBarComponent;\n+  let fixture: ComponentFixture<NavBarComponent>;\n+  let debugElement: DebugElement;\n+  var route = '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68030fb788b6b05e0bf9b58aa40cd1288974126"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDAwMjYzOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/nav-bar/nav-bar.component.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1NjowNVrOHhGtzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1NjowNVrOHhGtzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NTA4NA==", "bodyText": "By.css('button') isn't a precise query. You can set the element <button class=\"navbar__toggle-button\" .... />, then you can query By.css('button.navbar__toggle-button'). With this query it will be unambiguous and you will 100% get the desired element. This can remove the risk of getting wrong element when all components are built together.", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504475084", "createdAt": "2020-10-14T07:56:05Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/nav-bar/nav-bar.component.spec.ts", "diffHunk": "@@ -0,0 +1,67 @@\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { DebugElement } from '@angular/core';\n+import { NavBarComponent } from './nav-bar.component';\n+import { SelectedRouteService } from 'app/shared/services/selected-route/selected-route';\n+import { MatIconModule } from '@angular/material';\n+import { SidenavService } from '../../../shared/services/sidenav/sidenav.service';\n+import { AngularSvgIconModule } from 'angular-svg-icon';\n+import { HttpClientTestingModule } from '@angular/common/http/testing';\n+import { By } from '@angular/platform-browser';\n+import { of } from 'rxjs/internal/observable/of';\n+\n+const SidenavServiceSpy = jest.fn().mockImplementation(\n+  (): Partial<SidenavService> => ({\n+    toggle_sidenav: jest.fn().mockReturnValue(of())\n+  })\n+);\n+\n+const SelectedRouteServiceSpy = jest.fn().mockImplementation(\n+  (): Partial<SelectedRouteService> => ({\n+    getSelectedRoute: jest.fn().mockReturnValue(of())\n+  })\n+);\n+\n+describe('SidenavListComponent', () => {\n+  let component: NavBarComponent;\n+  let fixture: ComponentFixture<NavBarComponent>;\n+  let debugElement: DebugElement;\n+  var route = '';\n+\n+  beforeEach(async(() => {\n+    TestBed.configureTestingModule({\n+      declarations: [NavBarComponent],\n+      imports: [MatIconModule, HttpClientTestingModule, AngularSvgIconModule],\n+      providers: [\n+        { provide: SidenavService, useClass: SidenavServiceSpy },\n+        { provide: SelectedRouteService, useClass: SelectedRouteServiceSpy }\n+      ]\n+    }).compileComponents();\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(NavBarComponent);\n+    debugElement = fixture.debugElement;\n+    component = fixture.debugElement.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should set title to workbasket if workbasket ist selected', () => {\n+    route = 'workbaskets';\n+    fixture.detectChanges();\n+    component.setTitle(route);\n+    expect(component.title).toBe('Workbaskets');\n+  });\n+\n+  it('should toggle sidenav when button clicked', () => {\n+    fixture.detectChanges();\n+    expect(component.toggle).toBe(false);\n+    const button = debugElement.query(By.css('button')).nativeElement;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68030fb788b6b05e0bf9b58aa40cd1288974126"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDAwODM3OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/nav-bar/nav-bar.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1NzoyM1rOHhGxQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1NzoyM1rOHhGxQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NTk2OA==", "bodyText": "this variable isn't used", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504475968", "createdAt": "2020-10-14T07:57:23Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/nav-bar/nav-bar.component.ts", "diffHunk": "@@ -1,27 +1,17 @@\n-import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\n-import { environment } from 'environments/environment';\n+import { Component, OnInit } from '@angular/core';\n import { SelectedRouteService } from 'app/shared/services/selected-route/selected-route';\n import { Subscription } from 'rxjs';\n-import { DomainService } from 'app/shared/services/domain/domain.service';\n-import { BusinessAdminGuard } from 'app/shared/guards/business-admin.guard';\n-import { MonitorGuard } from 'app/shared/guards/monitor.guard';\n-import { WindowRefService } from 'app/shared/services/window/window.service';\n-import { UserGuard } from 'app/shared/guards/user.guard';\n import { expandRight } from 'app/shared/animations/expand.animation';\n-import { TaskanaEngineService } from '../../services/taskana-engine/taskana-engine.service';\n import { SidenavService } from '../../services/sidenav/sidenav.service';\n-import { Side } from 'app/administration/components/workbasket-distribution-targets/workbasket-distribution-targets.component';\n-import { ConstantPool } from '@angular/compiler';\n \n @Component({\n   selector: 'taskana-shared-nav-bar',\n   templateUrl: './nav-bar.component.html',\n   styleUrls: ['./nav-bar.component.scss'],\n   animations: [expandRight]\n })\n-export class NavBarComponent implements OnInit, OnDestroy {\n+export class NavBarComponent implements OnInit {\n   selectedRoute = '';\n-  route: string;\n   title = '';\n \n   titleAdministration = 'Administration';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68030fb788b6b05e0bf9b58aa40cd1288974126"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDAxNzMzOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/sidenav-list/sidenav-list.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1OTo0MlrOHhG25Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1OTo0MlrOHhG25Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NzQxMw==", "bodyText": "routerLinks in html are all hardcoded while url variables aren't used?", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504477413", "createdAt": "2020-10-14T07:59:42Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/sidenav-list/sidenav-list.component.html", "diffHunk": "@@ -1,16 +1,18 @@\n <mat-nav-list>\n-    <a mat-list-item [routerLink]=\"'taskana/administration/workbaskets'\" [routerLinkActive]=\"['active']\"\n-        *ngIf=\"administrationAccess\" (click)=\"toggleSidenav()\">Administration</a>\n-    <a mat-list-item [routerLink]=\"'taskana/administration/workbaskets'\" [routerLinkActive]=\"['active']\"\n-        class=\"list-item\" *ngIf=\"administrationAccess\" (click)=\"toggleSidenav()\">Workbaskets</a>\n-    <a mat-list-item [routerLink]=\"'taskana/administration/classifications'\" [routerLinkActive]=\"['active']\"\n-        class=\"list-item\" *ngIf=\"administrationAccess\" (click)=\"toggleSidenav()\">Classifications</a>\n-    <a mat-list-item [routerLink]=\"'taskana/administration/access-items-management'\" [routerLinkActive]=\"['active']\"\n-        class=\"list-item\" (click)=\"toggleSidenav()\">Access Items</a>\n-    <a mat-list-item [routerLink]=\"'taskana/monitor'\" [routerLinkActive]=\"['active']\" *ngIf=\"monitorAccess\"\n-        (click)=\"toggleSidenav()\">Monitor</a>\n-    <a mat-list-item [routerLink]=\"'taskana/workplace'\" [routerLinkActive]=\"['active']\" *ngIf=\"workplaceAccess\"\n-        (click)=\"toggleSidenav()\">Workplace</a>\n-    <a mat-list-item [routerLink]=\"'taskana/history'\" [routerLinkActive]=\"['active']\" *ngIf=\"historyAccess\"\n-        (click)=\"toggleSidenav()\">History</a>\n+    <a mat-list-item class=\"list-item list-item__admin\" [routerLink]=\"'taskana/administration/workbaskets'\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68030fb788b6b05e0bf9b58aa40cd1288974126"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDAyNDU3OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/sidenav-list/sidenav-list.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMToyMlrOHhG7Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMToyMlrOHhG7Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3ODQ5NA==", "bodyText": "these variables aren't used?", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504478494", "createdAt": "2020-10-14T08:01:22Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/sidenav-list/sidenav-list.component.ts", "diffHunk": "@@ -1,104 +1,46 @@\n-import { Component, OnInit, OnDestroy } from '@angular/core';\n-import { environment } from 'environments/environment';\n-import { SelectedRouteService } from 'app/shared/services/selected-route/selected-route';\n-import { Subscription } from 'rxjs';\n-import { DomainService } from 'app/shared/services/domain/domain.service';\n+import { Component, OnInit } from '@angular/core';\n import { BusinessAdminGuard } from 'app/shared/guards/business-admin.guard';\n import { MonitorGuard } from 'app/shared/guards/monitor.guard';\n-import { WindowRefService } from 'app/shared/services/window/window.service';\n import { UserGuard } from 'app/shared/guards/user.guard';\n-import { expandRight } from 'app/shared/animations/expand.animation';\n import { TaskanaEngineService } from '../../services/taskana-engine/taskana-engine.service';\n import { SidenavService } from '../../services/sidenav/sidenav.service';\n-import { Side } from 'app/administration/components/workbasket-distribution-targets/workbasket-distribution-targets.component';\n-import { ConstantPool } from '@angular/compiler';\n \n @Component({\n   selector: 'taskana-sidenav-list',\n   templateUrl: './sidenav-list.component.html',\n   styleUrls: ['./sidenav-list.component.scss']\n })\n export class SidenavListComponent implements OnInit {\n-  selectedRoute = '';\n-  route: string;\n-  title = '';\n-\n-  titleAdministration = 'Administration';\n-  titleWorkbaskets = 'Workbaskets';\n-  titleClassifications = 'Classifications';\n-  titleAccessItems = 'Access items';\n-  titleMonitor = 'Monitor';\n-  titleWorkplace = 'Workplace';\n-  titleHistory = 'History';\n-  showNavbar = false;\n-  domains: Array<string> = [];\n-  selectedDomain: string;\n-  version: string;\n   toggle: boolean = false;\n \n   adminUrl = 'taskana/administration';\n   monitorUrl = 'taskana/monitor';\n   workplaceUrl = 'taskana/workplace';\n   historyUrl = 'taskana/history';\n+  accessUrl = 'taskana/administration/access-items-management';\n+  classificationUrl = 'taskana/administration/classifications';\n+  workbasketsUrl = 'taskana/administration/workbaskets';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68030fb788b6b05e0bf9b58aa40cd1288974126"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDAyNzA1OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/user-information/user-information.component.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMjowMlrOHhG8mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMjowMlrOHhG8mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3ODg3NA==", "bodyText": "ambiguous query like above", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504478874", "createdAt": "2020-10-14T08:02:02Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/components/user-information/user-information.component.spec.ts", "diffHunk": "@@ -0,0 +1,53 @@\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { Component, DebugElement } from '@angular/core';\n+import { UserInformationComponent } from './user-information.component';\n+import { BrowserModule, By } from '@angular/platform-browser';\n+import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n+import { TaskanaEngineService } from '../../services/taskana-engine/taskana-engine.service';\n+import { TaskanaEngineServiceMock } from '../../services/taskana-engine/taskana-engine.mock.service';\n+import { of } from 'rxjs/internal/observable/of';\n+import { expandDown } from '../../animations/expand.animation';\n+import { AngularSvgIconModule } from 'angular-svg-icon';\n+import { HttpClientTestingModule } from '@angular/common/http/testing';\n+import { fromEventPattern } from 'rxjs';\n+\n+const TaskanaEngingeServiceSpy = jest.fn().mockImplementation(\n+  (): Partial<TaskanaEngineServiceMock> => ({\n+    hasRole: jest.fn().mockReturnValue(of()),\n+    isHistoryProviderEnabled: jest.fn().mockReturnValue(of())\n+  })\n+);\n+\n+describe('UserInformationComponent', () => {\n+  let component: UserInformationComponent;\n+  let fixture: ComponentFixture<UserInformationComponent>;\n+  let debugElement: DebugElement;\n+\n+  beforeEach(async(() => {\n+    TestBed.configureTestingModule({\n+      declarations: [UserInformationComponent],\n+      imports: [BrowserModule, AngularSvgIconModule, HttpClientTestingModule, BrowserAnimationsModule],\n+      providers: [{ provide: TaskanaEngineService, useClass: TaskanaEngingeServiceSpy }]\n+    }).compileComponents();\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(UserInformationComponent);\n+    debugElement = fixture.debugElement;\n+    component = fixture.debugElement.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should toggle roles when roles clicked', () => {\n+    fixture.detectChanges();\n+    expect(component.showRoles).toBe(false);\n+    const button = debugElement.query(By.css('button')).nativeElement;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68030fb788b6b05e0bf9b58aa40cd1288974126"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDAyOTIzOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/services/sidenav/sidenav.service.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMjozNlrOHhG-Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMjozNlrOHhG-Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3OTIzNQ==", "bodyText": "please rename the function name to be camel case, EG toggleSidenav()", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504479235", "createdAt": "2020-10-14T08:02:36Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/shared/services/sidenav/sidenav.service.ts", "diffHunk": "@@ -6,12 +6,14 @@ import { MatSidenav } from '@angular/material';\n })\n export class SidenavService {\n   private sidenav: MatSidenav;\n+  state: boolean = false;\n \n   public setSidenav(sidenav: MatSidenav) {\n     this.sidenav = sidenav;\n   }\n \n-  public toggle(): void {\n+  public toggle_sidenav(): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68030fb788b6b05e0bf9b58aa40cd1288974126"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDA0MDc0OnYy", "diffSide": "RIGHT", "path": "web/src/app/app.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowNTozN1rOHhHFFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODo0NjowOFrOHhIqqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MTA0NA==", "bodyText": "empty subscription? Did you mean write the 86 line inside this?", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504481044", "createdAt": "2020-10-14T08:05:37Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/app.component.ts", "diffHunk": "@@ -79,6 +81,11 @@ export class AppComponent implements OnInit, OnDestroy {\n     });\n   }\n \n+  logout() {\n+    this.taskanaEngineService.logout().subscribe(() => {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b74e14992618d050b3a3fb06644df0d36217b6eb"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ5ODcxMw==", "bodyText": "I actually didn't change the function, only moved it from the old nav-bar component to the app component. So I don't even know why there is a subscription needed. I guess I can just remove it, shouldn't change anything.", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504498713", "createdAt": "2020-10-14T08:33:24Z", "author": {"login": "Franzi321"}, "path": "web/src/app/app.component.ts", "diffHunk": "@@ -79,6 +81,11 @@ export class AppComponent implements OnInit, OnDestroy {\n     });\n   }\n \n+  logout() {\n+    this.taskanaEngineService.logout().subscribe(() => {});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MTA0NA=="}, "originalCommit": {"oid": "b74e14992618d050b3a3fb06644df0d36217b6eb"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwNzA1MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/Taskana/taskana/pull/1288#discussion_r504507050", "createdAt": "2020-10-14T08:46:08Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/app.component.ts", "diffHunk": "@@ -79,6 +81,11 @@ export class AppComponent implements OnInit, OnDestroy {\n     });\n   }\n \n+  logout() {\n+    this.taskanaEngineService.logout().subscribe(() => {});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MTA0NA=="}, "originalCommit": {"oid": "b74e14992618d050b3a3fb06644df0d36217b6eb"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4499, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}