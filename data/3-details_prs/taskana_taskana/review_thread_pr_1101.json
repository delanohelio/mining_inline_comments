{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3ODA4NTIw", "number": 1101, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyMzoyMlrOECvWKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyMzoyMlrOECvWKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzA4MzMwOnYy", "diffSide": "RIGHT", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/task/rest/TaskCommentControllerIntTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyMzoyMlrOGfYhlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyMzoyMlrOGfYhlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MDg1NA==", "bodyText": "fyi: This can be replaces with isSorted()", "url": "https://github.com/Taskana/taskana/pull/1101#discussion_r435560854", "createdAt": "2020-06-04T21:23:22Z", "author": {"login": "mustaphazorgati"}, "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/task/rest/TaskCommentControllerIntTest.java", "diffHunk": "@@ -83,6 +88,85 @@ void should_FailToReturnTaskComments_When_TaskIstNotVisible() {\n         .isEqualTo(HttpStatus.FORBIDDEN);\n   }\n \n+  @Test\n+  void should_ReturnSortedAndOrederedTaskCommentsSortedByModified_When_UsingSortAndOrderParams() {\n+\n+    String url =\n+        restHelper.toUrl(Mapping.URL_TASK_GET_POST_COMMENTS,\n+            \"TKI:000000000000000000000000000000000000\");\n+\n+    ResponseEntity<TaskanaPagedModel<TaskCommentRepresentationModel>>\n+        getTaskCommentsSortedByModifiedOrderedByDescendingResponse = template.exchange(\n+        url + \"?sort-by=modified&order=desc\",\n+        HttpMethod.GET,\n+        new HttpEntity<String>(restHelper.getHeadersAdmin()),\n+        TASK_COMMENT_PAGE_MODEL_TYPE);\n+\n+    assertThat(getTaskCommentsSortedByModifiedOrderedByDescendingResponse.getBody().getContent())\n+        .hasSize(3)\n+        .extracting(TaskCommentRepresentationModel::getModified)\n+        .isSortedAccordingTo(Comparator.reverseOrder());\n+\n+    ResponseEntity<TaskanaPagedModel<TaskCommentRepresentationModel>>\n+        getTaskCommentsSortedByModifiedOrderedByAscendingResponse = template.exchange(\n+        url + \"?sort-by=modified\",\n+        HttpMethod.GET,\n+        new HttpEntity<String>(restHelper.getHeadersAdmin()),\n+        TASK_COMMENT_PAGE_MODEL_TYPE);\n+\n+    assertThat(getTaskCommentsSortedByModifiedOrderedByAscendingResponse.getBody().getContent())\n+        .hasSize(3)\n+        .extracting(TaskCommentRepresentationModel::getModified)\n+        .isSortedAccordingTo(Comparator.naturalOrder());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2585b3d0e4576029caea46af0d1446ea18198b1f"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4226, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}