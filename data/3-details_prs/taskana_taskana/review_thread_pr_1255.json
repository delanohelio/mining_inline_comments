{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNzk0MDg0", "number": 1255, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo1MzoxN1rOEhICkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo1MzoxN1rOEhICkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTcwMTk1OnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/classification-details/classification-details.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo1MzoxN1rOHORDjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOTo1Njo1OFrOHOVs2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMTU1MQ==", "bodyText": "this stub isn't in declaration?", "url": "https://github.com/Taskana/taskana/pull/1255#discussion_r484721551", "createdAt": "2020-09-08T07:53:17Z", "author": {"login": "cnguyen-de"}, "path": "web/src/app/administration/components/classification-details/classification-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,359 @@\n+import { Component, DebugElement, Input } from '@angular/core';\n+import { ClassificationsService } from '../../../shared/services/classifications/classifications.service';\n+import { Observable, of } from 'rxjs';\n+import { ClassificationCategoriesService } from '../../../shared/services/classification-categories/classification-categories.service';\n+import { DomainService } from '../../../shared/services/domain/domain.service';\n+import { ImportExportService } from '../../services/import-export.service';\n+import { async, ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { Actions, NgxsModule, ofActionDispatched, Store } from '@ngxs/store';\n+import { ClassificationState } from '../../../shared/store/classification-store/classification.state';\n+import { EngineConfigurationState } from '../../../shared/store/engine-configuration-store/engine-configuration.state';\n+import { classificationStateMock, engineConfigurationMock } from '../../../shared/store/mock-data/mock-store';\n+import { ClassificationDetailsComponent } from './classification-details.component';\n+import { FormsModule } from '@angular/forms';\n+import { RequestInProgressService } from '../../../shared/services/request-in-progress/request-in-progress.service';\n+import { FormsValidatorService } from '../../../shared/services/forms-validator/forms-validator.service';\n+import { MatSnackBarModule } from '@angular/material/snack-bar';\n+import { MatDialogModule } from '@angular/material/dialog';\n+import { NumberPickerComponent } from '../../../shared/components/number-picker/number-picker.component';\n+import { NotificationService } from '../../../shared/services/notifications/notification.service';\n+import {\n+  CopyClassification,\n+  RemoveSelectedClassification,\n+  RestoreSelectedClassification,\n+  SaveCreatedClassification,\n+  SaveModifiedClassification\n+} from '../../../shared/store/classification-store/classification.actions';\n+\n+@Component({ selector: 'taskana-shared-number-picker', template: '' })\n+class NumberPickerStub {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62fc44cbc50dec6e1eb0839f0f4700c65f0357d3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc5NzY1Nw==", "bodyText": "You're right, I removed the stub. I think we replaced the stub by the component because of the error \"No value accessor for form control with name: ... \"", "url": "https://github.com/Taskana/taskana/pull/1255#discussion_r484797657", "createdAt": "2020-09-08T09:56:58Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/classification-details/classification-details.component.spec.ts", "diffHunk": "@@ -0,0 +1,359 @@\n+import { Component, DebugElement, Input } from '@angular/core';\n+import { ClassificationsService } from '../../../shared/services/classifications/classifications.service';\n+import { Observable, of } from 'rxjs';\n+import { ClassificationCategoriesService } from '../../../shared/services/classification-categories/classification-categories.service';\n+import { DomainService } from '../../../shared/services/domain/domain.service';\n+import { ImportExportService } from '../../services/import-export.service';\n+import { async, ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { Actions, NgxsModule, ofActionDispatched, Store } from '@ngxs/store';\n+import { ClassificationState } from '../../../shared/store/classification-store/classification.state';\n+import { EngineConfigurationState } from '../../../shared/store/engine-configuration-store/engine-configuration.state';\n+import { classificationStateMock, engineConfigurationMock } from '../../../shared/store/mock-data/mock-store';\n+import { ClassificationDetailsComponent } from './classification-details.component';\n+import { FormsModule } from '@angular/forms';\n+import { RequestInProgressService } from '../../../shared/services/request-in-progress/request-in-progress.service';\n+import { FormsValidatorService } from '../../../shared/services/forms-validator/forms-validator.service';\n+import { MatSnackBarModule } from '@angular/material/snack-bar';\n+import { MatDialogModule } from '@angular/material/dialog';\n+import { NumberPickerComponent } from '../../../shared/components/number-picker/number-picker.component';\n+import { NotificationService } from '../../../shared/services/notifications/notification.service';\n+import {\n+  CopyClassification,\n+  RemoveSelectedClassification,\n+  RestoreSelectedClassification,\n+  SaveCreatedClassification,\n+  SaveModifiedClassification\n+} from '../../../shared/store/classification-store/classification.actions';\n+\n+@Component({ selector: 'taskana-shared-number-picker', template: '' })\n+class NumberPickerStub {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMTU1MQ=="}, "originalCommit": {"oid": "62fc44cbc50dec6e1eb0839f0f4700c65f0357d3"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4491, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}