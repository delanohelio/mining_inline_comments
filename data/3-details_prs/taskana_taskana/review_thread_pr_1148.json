{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTQyMTcx", "number": 1148, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDoxMTozOVrOEIkdtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MzozMVrOEJ_zBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDIxNDk1OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/store/classification-store/classification.state.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDoxMTozOVrOGonNUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODozMDowM1rOGpYYFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzODYwOQ==", "bodyText": "Honestly I hate this name.. Any suggestions?", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r445238609", "createdAt": "2020-06-25T00:11:39Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/store/classification-store/classification.state.ts", "diffHunk": "@@ -192,9 +185,18 @@ export class ClassificationState implements NgxsAfterBootstrap {\n   }\n }\n \n+function replaceClassifications(classifications: ClassificationSummary[], classification: Classification) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ac53a62ad3310656ec9cb1006a02bf044c6ec32"}, "originalPosition": 232}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0NDE4MQ==", "bodyText": "nice naming :)", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446044181", "createdAt": "2020-06-26T08:30:03Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/store/classification-store/classification.state.ts", "diffHunk": "@@ -192,9 +185,18 @@ export class ClassificationState implements NgxsAfterBootstrap {\n   }\n }\n \n+function replaceClassifications(classifications: ClassificationSummary[], classification: Classification) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzODYwOQ=="}, "originalCommit": {"oid": "0ac53a62ad3310656ec9cb1006a02bf044c6ec32"}, "originalPosition": 232}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDk2NDc1OnYy", "diffSide": "RIGHT", "path": "web/package.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzoyMTo1NlrOGouZHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODozMDoyM1rOGpYYqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM1NjMxOQ==", "bodyText": "Why not lint:fix? this would be consistent with the other script names", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r445356319", "createdAt": "2020-06-25T07:21:56Z", "author": {"login": "Tristan2357"}, "path": "web/package.json", "diffHunk": "@@ -10,7 +10,8 @@\n     \"build:prod-silent\": \"ng build --prod=true --no-progress\",\n     \"test\": \"ng test --karma-config karma.conf.js --watch=false --browsers Firefox\",\n     \"test:watch\": \"ng test --karma-config karma.conf.js --browsers Chrome\",\n-    \"lint\": \"eslint --ext .ts src\"\n+    \"lint\": \"eslint --ext .ts src\",\n+    \"lint-fix\": \"eslint --ext .ts src --fix\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0NDMzMQ==", "bodyText": "done", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446044331", "createdAt": "2020-06-26T08:30:23Z", "author": {"login": "mustaphazorgati"}, "path": "web/package.json", "diffHunk": "@@ -10,7 +10,8 @@\n     \"build:prod-silent\": \"ng build --prod=true --no-progress\",\n     \"test\": \"ng test --karma-config karma.conf.js --watch=false --browsers Firefox\",\n     \"test:watch\": \"ng test --karma-config karma.conf.js --browsers Chrome\",\n-    \"lint\": \"eslint --ext .ts src\"\n+    \"lint\": \"eslint --ext .ts src\",\n+    \"lint-fix\": \"eslint --ext .ts src --fix\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM1NjMxOQ=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTUwNTIxOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/models/classification-summary.ts", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwOTo1NTowOFrOGozuTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxMjoyMTo1MlrOGp8-_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0MzY2Mg==", "bodyText": "Is this always 8? Is there a way to avoid this magic  number?", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r445443662", "createdAt": "2020-06-25T09:55:08Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/shared/models/classification-summary.ts", "diffHunk": "@@ -0,0 +1,23 @@\n+export interface ClassificationSummary {\n+  classificationId?: string;\n+  key?: string;\n+  applicationEntryPoint?: string;\n+  category?: string;\n+  domain?: string;\n+  name?: string;\n+  parentId?: string;\n+  parentKey?: string;\n+  priority?: number;\n+  serviceLevel?: string;\n+  type?: string;\n+  custom1?: string;\n+  custom2?: string;\n+  custom3?: string;\n+  custom4?: string;\n+  custom5?: string;\n+  custom6?: string;\n+  custom7?: string;\n+  custom8?: string;\n+}\n+\n+export const customFieldCount: number = 8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0NTQ3OA==", "bodyText": "This variable exists because in the implementation we iterate over the 8 custom fields this class exposes.\nWhenever we add more custom fields to the classification summary we have to update this number aswell.", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446045478", "createdAt": "2020-06-26T08:32:37Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/classification-summary.ts", "diffHunk": "@@ -0,0 +1,23 @@\n+export interface ClassificationSummary {\n+  classificationId?: string;\n+  key?: string;\n+  applicationEntryPoint?: string;\n+  category?: string;\n+  domain?: string;\n+  name?: string;\n+  parentId?: string;\n+  parentKey?: string;\n+  priority?: number;\n+  serviceLevel?: string;\n+  type?: string;\n+  custom1?: string;\n+  custom2?: string;\n+  custom3?: string;\n+  custom4?: string;\n+  custom5?: string;\n+  custom6?: string;\n+  custom7?: string;\n+  custom8?: string;\n+}\n+\n+export const customFieldCount: number = 8;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0MzY2Mg=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYxNjcyNw==", "bodyText": "Is there maybe a way to dynamically generate this number, or would this be too much/ not worth the effort?", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446616727", "createdAt": "2020-06-28T08:05:57Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/shared/models/classification-summary.ts", "diffHunk": "@@ -0,0 +1,23 @@\n+export interface ClassificationSummary {\n+  classificationId?: string;\n+  key?: string;\n+  applicationEntryPoint?: string;\n+  category?: string;\n+  domain?: string;\n+  name?: string;\n+  parentId?: string;\n+  parentKey?: string;\n+  priority?: number;\n+  serviceLevel?: string;\n+  type?: string;\n+  custom1?: string;\n+  custom2?: string;\n+  custom3?: string;\n+  custom4?: string;\n+  custom5?: string;\n+  custom6?: string;\n+  custom7?: string;\n+  custom8?: string;\n+}\n+\n+export const customFieldCount: number = 8;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0MzY2Mg=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYzMTU0NQ==", "bodyText": "I have no idea how we should do this. We can timebox this and try it out (in a different ticket).", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446631545", "createdAt": "2020-06-28T10:21:57Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/classification-summary.ts", "diffHunk": "@@ -0,0 +1,23 @@\n+export interface ClassificationSummary {\n+  classificationId?: string;\n+  key?: string;\n+  applicationEntryPoint?: string;\n+  category?: string;\n+  domain?: string;\n+  name?: string;\n+  parentId?: string;\n+  parentKey?: string;\n+  priority?: number;\n+  serviceLevel?: string;\n+  type?: string;\n+  custom1?: string;\n+  custom2?: string;\n+  custom3?: string;\n+  custom4?: string;\n+  custom5?: string;\n+  custom6?: string;\n+  custom7?: string;\n+  custom8?: string;\n+}\n+\n+export const customFieldCount: number = 8;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0MzY2Mg=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY0Mzk2NQ==", "bodyText": "https://taskana.atlassian.net/browse/TSK-1311", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446643965", "createdAt": "2020-06-28T12:21:52Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/classification-summary.ts", "diffHunk": "@@ -0,0 +1,23 @@\n+export interface ClassificationSummary {\n+  classificationId?: string;\n+  key?: string;\n+  applicationEntryPoint?: string;\n+  category?: string;\n+  domain?: string;\n+  name?: string;\n+  parentId?: string;\n+  parentKey?: string;\n+  priority?: number;\n+  serviceLevel?: string;\n+  type?: string;\n+  custom1?: string;\n+  custom2?: string;\n+  custom3?: string;\n+  custom4?: string;\n+  custom5?: string;\n+  custom6?: string;\n+  custom7?: string;\n+  custom8?: string;\n+}\n+\n+export const customFieldCount: number = 8;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ0MzY2Mg=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTU4NjEwOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/services/classifications/classifications.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDoxOToxOFrOGo0hEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODozNTo1N1rOGpYj6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1NjY1OQ==", "bodyText": "As far is i can tell this call does nothing, as requestInProgress never gets set to true, so setting it to false after this call does not make sense. Maybe remove this call. Or this could be related to TSK-1306 and be removed or reworked there.", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r445456659", "createdAt": "2020-06-25T10:19:18Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/shared/services/classifications/classifications.service.ts", "diffHunk": "@@ -16,52 +15,50 @@ import { QueryParameters } from 'app/shared/models/query-parameters';\n @Injectable()\n export class ClassificationsService {\n   private url = `${environment.taskanaRestUrl}/v1/classifications/`;\n-  private classificationSaved = new Subject<number>();\n-  private classificationResourcePromise: Promise<ClassificationResource>;\n+  private classificationResourcePromise: Promise<ClassificationPagingList>;\n   private lastDomain: string;\n \n   constructor(\n     private httpClient: HttpClient,\n     private domainService: DomainService,\n-  ) {}\n+  ) {\n+  }\n \n-  private static classificationParameters(domain: string): QueryParameters {\n+  private static classificationParameters(domain: string, type?: string): QueryParameters {\n     const parameters = new QueryParameters();\n     parameters.SORTBY = TaskanaQueryParameters.parameters.KEY;\n     parameters.SORTDIRECTION = Direction.ASC;\n     parameters.DOMAIN = domain;\n+    parameters.TYPE = type;\n     delete TaskanaQueryParameters.page;\n     delete TaskanaQueryParameters.pageSize;\n \n     return parameters;\n   }\n \n   // GET\n-  getClassifications(classificationType?: string): Observable<Array<Classification>> {\n-    return this.domainService.getSelectedDomain().pipe(\n-      mergeMap(domain => this.getClassificationObservable(this.httpClient.get<ClassificationResource>(\n-        `${this.url}${TaskanaQueryParameters.getQueryParameters(ClassificationsService.classificationParameters(domain))}`\n-      ), classificationType)),\n-      tap(() => {\n-        this.domainService.domainChangedComplete();\n-      })\n-    );\n+  getClassifications(classificationType?: string): Observable<ClassificationPagingList> {\n+    return this.httpClient.get<ClassificationPagingList>(\n+      `${this.url}${TaskanaQueryParameters.getQueryParameters(\n+        ClassificationsService.classificationParameters(this.domainService.getSelectedDomainValue(), classificationType)\n+      )}`\n+    ).pipe(tap(() => this.domainService.domainChangedComplete()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0NzIwOQ==", "bodyText": "You are right. I am breaking the requestInProgress mechanism of the domainService. The domainService and the requestInProgress mechanism should be reworked. Until that we have multiple solutions:\n\nrevert this hunk so that we have the old mechanism in play\nremove the call\n\nwhich one is preferred?\nFor now I'll revert this hunk.", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446047209", "createdAt": "2020-06-26T08:35:57Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/services/classifications/classifications.service.ts", "diffHunk": "@@ -16,52 +15,50 @@ import { QueryParameters } from 'app/shared/models/query-parameters';\n @Injectable()\n export class ClassificationsService {\n   private url = `${environment.taskanaRestUrl}/v1/classifications/`;\n-  private classificationSaved = new Subject<number>();\n-  private classificationResourcePromise: Promise<ClassificationResource>;\n+  private classificationResourcePromise: Promise<ClassificationPagingList>;\n   private lastDomain: string;\n \n   constructor(\n     private httpClient: HttpClient,\n     private domainService: DomainService,\n-  ) {}\n+  ) {\n+  }\n \n-  private static classificationParameters(domain: string): QueryParameters {\n+  private static classificationParameters(domain: string, type?: string): QueryParameters {\n     const parameters = new QueryParameters();\n     parameters.SORTBY = TaskanaQueryParameters.parameters.KEY;\n     parameters.SORTDIRECTION = Direction.ASC;\n     parameters.DOMAIN = domain;\n+    parameters.TYPE = type;\n     delete TaskanaQueryParameters.page;\n     delete TaskanaQueryParameters.pageSize;\n \n     return parameters;\n   }\n \n   // GET\n-  getClassifications(classificationType?: string): Observable<Array<Classification>> {\n-    return this.domainService.getSelectedDomain().pipe(\n-      mergeMap(domain => this.getClassificationObservable(this.httpClient.get<ClassificationResource>(\n-        `${this.url}${TaskanaQueryParameters.getQueryParameters(ClassificationsService.classificationParameters(domain))}`\n-      ), classificationType)),\n-      tap(() => {\n-        this.domainService.domainChangedComplete();\n-      })\n-    );\n+  getClassifications(classificationType?: string): Observable<ClassificationPagingList> {\n+    return this.httpClient.get<ClassificationPagingList>(\n+      `${this.url}${TaskanaQueryParameters.getQueryParameters(\n+        ClassificationsService.classificationParameters(this.domainService.getSelectedDomainValue(), classificationType)\n+      )}`\n+    ).pipe(tap(() => this.domainService.domainChangedComplete()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1NjY1OQ=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTU5MzYyOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/store/classification-store/classification.state.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDoyMTo0NVrOGo0l5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODo0MjowMlrOGpYvxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1Nzg5NA==", "bodyText": "Should we maybe declare, that there is the possibility of a null response? Or do you think this is not necessary?", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r445457894", "createdAt": "2020-06-25T10:21:45Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/shared/store/classification-store/classification.state.ts", "diffHunk": "@@ -45,16 +59,15 @@ export class ClassificationState implements NgxsAfterBootstrap {\n   }\n \n   @Action(SelectClassification)\n-  selectClassification(ctx: StateContext<ClassificationStateModel>, action: SelectClassification): Observable<any|null> {\n+  selectClassification(ctx: StateContext<ClassificationStateModel>, action: SelectClassification): Observable<Classification> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0ODcwNQ==", "bodyText": "I honestly don't know.", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446048705", "createdAt": "2020-06-26T08:38:52Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/store/classification-store/classification.state.ts", "diffHunk": "@@ -45,16 +59,15 @@ export class ClassificationState implements NgxsAfterBootstrap {\n   }\n \n   @Action(SelectClassification)\n-  selectClassification(ctx: StateContext<ClassificationStateModel>, action: SelectClassification): Observable<any|null> {\n+  selectClassification(ctx: StateContext<ClassificationStateModel>, action: SelectClassification): Observable<Classification> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1Nzg5NA=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA1MDI0NQ==", "bodyText": "done", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446050245", "createdAt": "2020-06-26T08:42:02Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/store/classification-store/classification.state.ts", "diffHunk": "@@ -45,16 +59,15 @@ export class ClassificationState implements NgxsAfterBootstrap {\n   }\n \n   @Action(SelectClassification)\n-  selectClassification(ctx: StateContext<ClassificationStateModel>, action: SelectClassification): Observable<any|null> {\n+  selectClassification(ctx: StateContext<ClassificationStateModel>, action: SelectClassification): Observable<Classification> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1Nzg5NA=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjAyMjQ5OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/models/links.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0MTo1MlrOGo4zvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxMDoyMzowMVrOGp8O9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNjk3NA==", "bodyText": "I am not sure if i like this change. With these computed Property names we do not know which fields this class provides. This at least needs a comment or a documentation link, that explains what links could be provided", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r445526974", "createdAt": "2020-06-25T12:41:52Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/shared/models/links.ts", "diffHunk": "@@ -1,9 +1,5 @@\n-export class Links {\n-  constructor(\n-    public self?: { 'href': string },\n-    public distributionTargets?: { 'href': string },\n-    public accessItems?: { 'href': string },\n-    public allWorkbasketUrl?: { 'href': string },\n-    public removeDistributionTargets?: {'href': string}\n-  ) { }\n+export interface Links {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0OTI5Mw==", "bodyText": "The issue here: Our backend is not consistent yet. Therefore the hateoas links provided by the backend are not consistent. Proposal: We live with it for now and specify the links whenever the backend is ready", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446049293", "createdAt": "2020-06-26T08:40:04Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/links.ts", "diffHunk": "@@ -1,9 +1,5 @@\n-export class Links {\n-  constructor(\n-    public self?: { 'href': string },\n-    public distributionTargets?: { 'href': string },\n-    public accessItems?: { 'href': string },\n-    public allWorkbasketUrl?: { 'href': string },\n-    public removeDistributionTargets?: {'href': string}\n-  ) { }\n+export interface Links {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNjk3NA=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYxODYzNQ==", "bodyText": "This sounds like a reasonable solution. Maybe we should comment this and create a corelating issue, to the issue for the backend", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446618635", "createdAt": "2020-06-28T08:23:10Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/shared/models/links.ts", "diffHunk": "@@ -1,9 +1,5 @@\n-export class Links {\n-  constructor(\n-    public self?: { 'href': string },\n-    public distributionTargets?: { 'href': string },\n-    public accessItems?: { 'href': string },\n-    public allWorkbasketUrl?: { 'href': string },\n-    public removeDistributionTargets?: {'href': string}\n-  ) { }\n+export interface Links {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNjk3NA=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYzMTY3MA==", "bodyText": "https://taskana.atlassian.net/browse/TSK-1294", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446631670", "createdAt": "2020-06-28T10:23:01Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/models/links.ts", "diffHunk": "@@ -1,9 +1,5 @@\n-export class Links {\n-  constructor(\n-    public self?: { 'href': string },\n-    public distributionTargets?: { 'href': string },\n-    public accessItems?: { 'href': string },\n-    public allWorkbasketUrl?: { 'href': string },\n-    public removeDistributionTargets?: {'href': string}\n-  ) { }\n+export interface Links {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNjk3NA=="}, "originalCommit": {"oid": "a7a7660b434874a2b43ac41bf981bf749cac0d71"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDU0NjI5OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjo0MToyN1rOGqGu9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDo1NToyMlrOGqrrSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMzcwMw==", "bodyText": "I would prefer declaring the type of the variable for better understanding / readability.", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446803703", "createdAt": "2020-06-29T06:41:27Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "diffHunk": "@@ -86,10 +84,22 @@ describe('TaskanaTreeComponent', () => {\n   });\n \n   it('should be change the classification parent (onMoveNode)', async () => {\n-    const classification = new ClassificationDefinition('id4',\n-      'key4', '', '', 'MANUAL', 'DOMAIN_A', 'TASK', true, '019-04-10T10:23:34.985Z', '2019-04-10T10:23:34.985Z',\n-      'classification4', 'description', 1, 'level', '', '', '', '', '', '',\n-      '', '', '', new LinksClassification({ href: '' }, '', '', { href: '' }, { href: '' }, { href: '' }));\n+    const classification = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108916958b9928801fd107b28474b09522dbfc8e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwODk3MQ==", "bodyText": "done", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447408971", "createdAt": "2020-06-30T04:55:22Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "diffHunk": "@@ -86,10 +84,22 @@ describe('TaskanaTreeComponent', () => {\n   });\n \n   it('should be change the classification parent (onMoveNode)', async () => {\n-    const classification = new ClassificationDefinition('id4',\n-      'key4', '', '', 'MANUAL', 'DOMAIN_A', 'TASK', true, '019-04-10T10:23:34.985Z', '2019-04-10T10:23:34.985Z',\n-      'classification4', 'description', 1, 'level', '', '', '', '', '', '',\n-      '', '', '', new LinksClassification({ href: '' }, '', '', { href: '' }, { href: '' }, { href: '' }));\n+    const classification = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMzcwMw=="}, "originalCommit": {"oid": "108916958b9928801fd107b28474b09522dbfc8e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDU0NzM2OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjo0MTo1MlrOGqGvjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDo1NToyOFrOGqrraQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMzg1NQ==", "bodyText": "I would prefer declaring the type of the variable for better understanding / readability.", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446803855", "createdAt": "2020-06-29T06:41:52Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "diffHunk": "@@ -108,10 +118,22 @@ describe('TaskanaTreeComponent', () => {\n   });\n \n   it('should be changed the parent classification to root node (onDrop)', async () => {\n-    const classification = new ClassificationDefinition('id3',\n-      'key3', 'id1', 'key1', 'MANUAL', 'DOMAIN_A', 'TASK', true, '019-04-10T10:23:34.985Z', '2019-04-10T10:23:34.985Z',\n-      'classification3', 'description', 1, 'level', '', '', '', '', '', '',\n-      '', '', '', new LinksClassification({ href: '' }, '', '', { href: '' }, { href: '' }, { href: '' }));\n+    const classification = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108916958b9928801fd107b28474b09522dbfc8e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwOTAwMQ==", "bodyText": "done", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447409001", "createdAt": "2020-06-30T04:55:28Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "diffHunk": "@@ -108,10 +118,22 @@ describe('TaskanaTreeComponent', () => {\n   });\n \n   it('should be changed the parent classification to root node (onDrop)', async () => {\n-    const classification = new ClassificationDefinition('id3',\n-      'key3', 'id1', 'key1', 'MANUAL', 'DOMAIN_A', 'TASK', true, '019-04-10T10:23:34.985Z', '2019-04-10T10:23:34.985Z',\n-      'classification3', 'description', 1, 'level', '', '', '', '', '', '',\n-      '', '', '', new LinksClassification({ href: '' }, '', '', { href: '' }, { href: '' }, { href: '' }));\n+    const classification = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMzg1NQ=="}, "originalCommit": {"oid": "108916958b9928801fd107b28474b09522dbfc8e"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDY3MzA3OnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/classification-details/classification-details.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzoyNDo0OVrOGqH5kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTowNTo1NlrOGqr2gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgyMjgwMg==", "bodyText": "We should not only keep these two properties, we should also keep the category, type, creation time, domain and  modified time = creation time when restoring. In case you don't want to change here, I could create a new ticket.", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446822802", "createdAt": "2020-06-29T07:24:49Z", "author": {"login": "sofie29"}, "path": "web/src/app/administration/components/classification-details/classification-details.component.ts", "diffHunk": "@@ -137,7 +135,7 @@ export class ClassificationDetailsComponent implements OnInit, OnDestroy {\n   onRestore() {\n     this.formsValidatorService.formSubmitAttempt = false;\n     if (this.action === ACTION.CREATE) {\n-      this.classification = new ClassificationDefinition();\n+      this.classification = { parentId: this.classification.parentId, parentKey: this.classification.parentKey };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108916958b9928801fd107b28474b09522dbfc8e"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQxMTg0MQ==", "bodyText": "done", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447411841", "createdAt": "2020-06-30T05:05:56Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/administration/components/classification-details/classification-details.component.ts", "diffHunk": "@@ -137,7 +135,7 @@ export class ClassificationDetailsComponent implements OnInit, OnDestroy {\n   onRestore() {\n     this.formsValidatorService.formSubmitAttempt = false;\n     if (this.action === ACTION.CREATE) {\n-      this.classification = new ClassificationDefinition();\n+      this.classification = { parentId: this.classification.parentId, parentKey: this.classification.parentKey };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgyMjgwMg=="}, "originalCommit": {"oid": "108916958b9928801fd107b28474b09522dbfc8e"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDc1NzY4OnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/components/tree/tree.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzo1MDowMVrOGqIrjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzo1MDowMVrOGqIrjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzNTU5OQ==", "bodyText": "This is very nice \ud83d\udc4d \ud83d\udc4d", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r446835599", "createdAt": "2020-06-29T07:50:01Z", "author": {"login": "sofie29"}, "path": "web/src/app/shared/components/tree/tree.component.ts", "diffHunk": "@@ -85,34 +93,31 @@ export class TaskanaTreeComponent implements OnInit, AfterViewChecked, OnDestroy\n       this.action = action;\n     });\n \n-    const classificationCopy$: Observable<TreeNodeModel[]> = this.classifications$.pipe(\n+    const computedTreeNodes$: Observable<TreeNodeModel[]> = this.classifications$.pipe(\n       filter(classifications => typeof (classifications) !== 'undefined'),\n-      map(classifications => classifications.map(c => this.classificationsDeepCopy(c)))\n+      map(classifications => this.classificationTreeService.transformToTreeNode(classifications))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108916958b9928801fd107b28474b09522dbfc8e"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTEwMzI5OnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/classification-list/classification-list.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODoyNTo1OVrOGqxfQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0NTo1NlrOGqyT3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUwNDE5NQ==", "bodyText": "Is this mehtod really needed? Would a simple requestInProgress=$event in the html not suffice?", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447504195", "createdAt": "2020-06-30T08:25:59Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/administration/components/classification-list/classification-list.component.ts", "diffHunk": "@@ -118,4 +109,8 @@ export class ClassificationListComponent implements OnInit, OnDestroy {\n     this.destroy$.next();\n     this.destroy$.complete();\n   }\n+\n+  setRequestInProgress(requestInProgress: boolean) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94877c36288ea544a9eb163565c69ab0b6d3ae50"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNzY2Mw==", "bodyText": "true that.. done", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447517663", "createdAt": "2020-06-30T08:45:56Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/administration/components/classification-list/classification-list.component.ts", "diffHunk": "@@ -118,4 +109,8 @@ export class ClassificationListComponent implements OnInit, OnDestroy {\n     this.destroy$.next();\n     this.destroy$.complete();\n   }\n+\n+  setRequestInProgress(requestInProgress: boolean) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUwNDE5NQ=="}, "originalCommit": {"oid": "94877c36288ea544a9eb163565c69ab0b6d3ae50"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTEwNDE3OnYy", "diffSide": "RIGHT", "path": "web/src/app/administration/components/classification-list/classification-list.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODoyNjoxMlrOGqxfzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOTowMzozNVrOGqzALg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUwNDMzMw==", "bodyText": "Would a simple requestInProgress=$event not suffice?", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447504333", "createdAt": "2020-06-30T08:26:12Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/administration/components/classification-list/classification-list.component.html", "diffHunk": "@@ -53,7 +53,7 @@\n \t<!-- CLASSIFICATION TREE -->\n \t<taskana-spinner class=\"col-xs-12\" [isRunning]=\"requestInProgress\" positionClass=\"centered-spinner-whole-screen\"></taskana-spinner>\n \t<taskana-tree class=\"col-xs-12\" *ngIf=\"(classifications && classifications.length) else empty_classifications\"\n-\t [filterText]=\"inputValue\" [filterIcon]=\"selectedCategory\"></taskana-tree>\n+\t [filterText]=\"inputValue\" [filterIcon]=\"selectedCategory\" (switchTaskanaSpinnerEmit)=\"setRequestInProgress($event)\"></taskana-tree>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94877c36288ea544a9eb163565c69ab0b6d3ae50"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyOTAwNg==", "bodyText": "done", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447529006", "createdAt": "2020-06-30T09:03:35Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/administration/components/classification-list/classification-list.component.html", "diffHunk": "@@ -53,7 +53,7 @@\n \t<!-- CLASSIFICATION TREE -->\n \t<taskana-spinner class=\"col-xs-12\" [isRunning]=\"requestInProgress\" positionClass=\"centered-spinner-whole-screen\"></taskana-spinner>\n \t<taskana-tree class=\"col-xs-12\" *ngIf=\"(classifications && classifications.length) else empty_classifications\"\n-\t [filterText]=\"inputValue\" [filterIcon]=\"selectedCategory\"></taskana-tree>\n+\t [filterText]=\"inputValue\" [filterIcon]=\"selectedCategory\" (switchTaskanaSpinnerEmit)=\"setRequestInProgress($event)\"></taskana-tree>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUwNDMzMw=="}, "originalCommit": {"oid": "94877c36288ea544a9eb163565c69ab0b6d3ae50"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTE3MzkwOnYy", "diffSide": "RIGHT", "path": "web/src/app/shared/models/notifications.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MjoxOFrOGqyKaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MjoxOFrOGqyKaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNTI0MQ==", "bodyText": "This warning is misleading in my opinion, the problem is not, that the classification has not been saved, but instead, that it has not been created.", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447515241", "createdAt": "2020-06-30T08:42:18Z", "author": {"login": "Tristan2357"}, "path": "web/src/app/shared/models/notifications.ts", "diffHunk": "@@ -310,5 +310,9 @@ export const notifications = new Map<NOTIFICATION_TYPES, Pair>([\n   [NOTIFICATION_TYPES.INFO_ALERT_2, new Pair(\n     '',\n     'The selected Workbasket is empty!'\n+  )],\n+  [NOTIFICATION_TYPES.WARNING_CANT_COPY, new Pair(\n+    '',\n+    'Can\\'t copy an unsaved classification!'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94877c36288ea544a9eb163565c69ab0b6d3ae50"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTE3ODU4OnYy", "diffSide": "LEFT", "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MzoyNlrOGqyNYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MzoyNlrOGqyNYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNjAwMg==", "bodyText": "Since I've put the switchTaskanaSpinner(false) statement within the inner subscription I have no idea to test this..", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447516002", "createdAt": "2020-06-30T08:43:26Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "diffHunk": "@@ -124,7 +146,5 @@ describe('TaskanaTreeComponent', () => {\n \n     expect(classification.parentId).toEqual('');\n     expect(classification.parentKey).toEqual('');\n-    expect(component.switchTaskanaSpinner).toHaveBeenCalledWith(true);\n-    expect(component.switchTaskanaSpinner).toHaveBeenCalledWith(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "940a1293126291e24a7d38547f559af53beacff8"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTE3ODkzOnYy", "diffSide": "LEFT", "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MzozMVrOGqyNlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MzozMVrOGqyNlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNjA1Mg==", "bodyText": "Since I've put the switchTaskanaSpinner(false) statement within the inner subscription I have no idea to test this..", "url": "https://github.com/Taskana/taskana/pull/1148#discussion_r447516052", "createdAt": "2020-06-30T08:43:31Z", "author": {"login": "mustaphazorgati"}, "path": "web/src/app/shared/components/tree/tree.component.spec.ts", "diffHunk": "@@ -103,15 +115,25 @@ describe('TaskanaTreeComponent', () => {\n     expect(classification.parentId).toEqual('id3');\n     expect(classification.parentKey).toEqual('key3');\n     expect(storeSpy.dispatch).toHaveBeenCalledWith(new UpdateClassification(classification));\n-    expect(component.switchTaskanaSpinner).toHaveBeenCalledWith(true);\n-    expect(component.switchTaskanaSpinner).toHaveBeenCalledWith(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "940a1293126291e24a7d38547f559af53beacff8"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4254, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}