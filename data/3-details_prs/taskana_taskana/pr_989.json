{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMTI3NDA2", "number": 989, "title": "Task/tsk 1168", "bodyText": "Added a clone method to the interfaces and implementations of the models workbasket, task, classification and all their associated models.\nAdded 3 new testclasses, one for each package of connected models.\nEach testclass serves as a unittest for the clone method of the implementation classes.\nThe constructors are filled with dummy data then cloned and compared.\nThe first comparison compares the original object with its clone and asserts that they equal one another.\nThe second comparison asserts that the 2 objects are different by asserting that they do not share a reference.", "createdAt": "2020-03-24T17:03:59Z", "url": "https://github.com/Taskana/taskana/pull/989", "merged": true, "mergeCommit": {"oid": "566c6d9017de4eb461f918fce1695ff483d5fe6e"}, "closed": true, "closedAt": "2020-04-09T08:03:08Z", "author": {"login": "krozzus"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRB7uSAFqTM4MDg4OTgxMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcV3qfggBqjMyMTcxNzAwOTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODg5ODEz", "url": "https://github.com/Taskana/taskana/pull/989#pullrequestreview-380889813", "createdAt": "2020-03-25T06:46:34Z", "commit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo0NjozNFrOF7N4Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo1Njo0NVrOF7OEqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzY5OA==", "bodyText": "please make this constructor private. The code segment which is using the constructor should use the new clone method instead.", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r397637698", "createdAt": "2020-03-25T06:46:34Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/classification/internal/models/ClassificationImpl.java", "diffHunk": "@@ -16,30 +16,12 @@\n \n   public ClassificationImpl() {}\n \n-  public ClassificationImpl(ClassificationImpl classification) {\n-    this.id = classification.getId();\n-    this.key = classification.getKey();\n-    this.parentId = classification.getParentId();\n-    this.parentKey = classification.getParentKey();\n-    this.category = classification.getCategory();\n-    this.type = classification.getType();\n-    this.domain = classification.getDomain();\n-    this.isValidInDomain = classification.getIsValidInDomain();\n-    this.created = classification.getCreated();\n-    this.modified = classification.getModified();\n-    this.name = classification.getName();\n-    this.description = classification.getDescription();\n-    this.priority = classification.getPriority();\n-    this.serviceLevel = classification.getServiceLevel();\n-    this.applicationEntryPoint = classification.getApplicationEntryPoint();\n-    this.custom1 = classification.getCustom1();\n-    this.custom2 = classification.getCustom2();\n-    this.custom3 = classification.getCustom3();\n-    this.custom4 = classification.getCustom4();\n-    this.custom5 = classification.getCustom5();\n-    this.custom6 = classification.getCustom6();\n-    this.custom7 = classification.getCustom7();\n-    this.custom8 = classification.getCustom8();\n+  public ClassificationImpl(ClassificationImpl copyFrom) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MDA1Mg==", "bodyText": "our convention is Test. Here it would be ClassificationTest", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r397640052", "createdAt": "2020-03-25T06:54:03Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/classification/api/models/ClassificationApiModelsCloneTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package pro.taskana.classification.api.models;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import pro.taskana.classification.internal.models.ClassificationImpl;\n+\n+class ClassificationApiModelsCloneTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MDI2Mw==", "bodyText": "TaskTest", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r397640263", "createdAt": "2020-03-25T06:54:44Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/task/api/models/TaskApiModelsCloneTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package pro.taskana.task.api.models;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import pro.taskana.task.internal.CreateTaskApiModelHelper;\n+import pro.taskana.task.internal.models.TaskCommentImpl;\n+\n+class TaskApiModelsCloneTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MDQ3NA==", "bodyText": "I need a second opinion on this test structure :)", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r397640474", "createdAt": "2020-03-25T06:55:30Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/task/api/models/TaskApiModelsCloneTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package pro.taskana.task.api.models;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import pro.taskana.task.internal.CreateTaskApiModelHelper;\n+import pro.taskana.task.internal.models.TaskCommentImpl;\n+\n+class TaskApiModelsCloneTest {\n+\n+  @Test\n+  void testCloneInTaskSummary() {\n+    Task dummyTaskForSummaryTest =\n+        CreateTaskApiModelHelper.createUnitTestTask(\n+            \"dummyTaskId\",\n+            \"dummyTaskName\",\n+            \"workbasketKey\",\n+            CreateTaskApiModelHelper.createDummyClassification());\n+    TaskSummary dummyTaskSummary = dummyTaskForSummaryTest.asSummary();\n+    TaskSummary dummyTaskSummaryCloned = dummyTaskSummary.clone();\n+    assertThat(dummyTaskSummaryCloned).isEqualTo(dummyTaskSummary);\n+  }\n+\n+  @Test\n+  void testCloneInTask() {\n+    Task dummyTask =\n+        CreateTaskApiModelHelper.createUnitTestTask(\n+            \"dummyTaskId\",\n+            \"dummyTaskName\",\n+            \"workbasketKey\",\n+            CreateTaskApiModelHelper.createDummyClassification());\n+    Task dummyTaskCloned = dummyTask.clone();\n+    assertThat(dummyTaskCloned).isEqualTo(dummyTask);\n+  }\n+\n+  @Test\n+  void testCloneInTaskComment() {\n+    TaskComment dummyComment = new TaskCommentImpl();\n+    dummyComment.setTextField(\"dummyTextField\");\n+    TaskComment dummyCommentCloned = dummyComment.clone();\n+    assertThat(dummyCommentCloned).isEqualTo(dummyComment);\n+  }\n+\n+  @Test\n+  void testCloneInObjectReference() {\n+    ObjectReference dummyReference = new ObjectReference();\n+    dummyReference.setId(\"dummyId\");\n+    dummyReference.setSystem(\"dummySystem\");\n+    dummyReference.setCompany(\"dummyCompany\");\n+    dummyReference.setSystemInstance(\"dummySystemInstance\");\n+    dummyReference.setType(\"dummyType\");\n+    dummyReference.setValue(\"dummyValue\");\n+    ObjectReference dummyReferenceCloned = dummyReference.clone();\n+    assertThat(dummyReferenceCloned).isEqualTo(dummyReference);\n+    assertThat(dummyReferenceCloned != dummyReference);\n+  }\n+\n+  @Test\n+  void testCloneInAttachmentSummary() {\n+    Attachment dummyAttachmentForSummaryTest =\n+        CreateTaskApiModelHelper.createAttachment(\"dummyAttachmentId\", \"dummyTaskId\");\n+    AttachmentSummary dummyAttachmentSummary = dummyAttachmentForSummaryTest.asSummary();\n+    AttachmentSummary dummyAttachmentSummaryCloned = dummyAttachmentSummary.clone();\n+    assertThat(dummyAttachmentSummaryCloned).isEqualTo(dummyAttachmentSummary);\n+    assertThat(dummyAttachmentSummaryCloned != dummyAttachmentSummary);\n+  }\n+\n+  @Test\n+  void testCloneInAttachment() {\n+    Attachment dummyAttachment =\n+        CreateTaskApiModelHelper.createAttachment(\"dummyAttachmentId\", \"dummyTaskId\");\n+    Attachment dummyAttachmentCloned = dummyAttachment.clone();\n+    assertThat(dummyAttachmentCloned).isEqualTo(dummyAttachment);\n+    assertThat(dummyAttachmentCloned != dummyAttachment);\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MDg3Mg==", "bodyText": "Is there a reason you removed the annotation?", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r397640872", "createdAt": "2020-03-25T06:56:45Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/task/internal/TaskAttachmentTest.java", "diffHunk": "@@ -28,13 +26,13 @@\n @ExtendWith(MockitoExtension.class)\n class TaskAttachmentTest {\n \n-  @InjectMocks private TaskImpl cut;\n+  private TaskImpl cut = new TaskImpl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTA0MjM1", "url": "https://github.com/Taskana/taskana/pull/989#pullrequestreview-380904235", "createdAt": "2020-03-25T07:24:41Z", "commit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzoyNDo0MVrOF7OpCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzoyNDo0MVrOF7OpCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1MDE4NQ==", "bodyText": "please also remove this.", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r397650185", "createdAt": "2020-03-25T07:24:41Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/task/internal/TaskAttachmentTest.java", "diffHunk": "@@ -28,13 +26,13 @@\n @ExtendWith(MockitoExtension.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTQzNTcy", "url": "https://github.com/Taskana/taskana/pull/989#pullrequestreview-380943572", "createdAt": "2020-03-25T08:38:12Z", "commit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODozODoxMlrOF7Qq1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODozODoxMlrOF7Qq1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4MzQxMg==", "bodyText": "assertThat(dummyREferenceCloned).isNotSameAs(dummyRefernce);", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r397683412", "createdAt": "2020-03-25T08:38:12Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/task/api/models/TaskApiModelsCloneTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package pro.taskana.task.api.models;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import pro.taskana.task.internal.CreateTaskApiModelHelper;\n+import pro.taskana.task.internal.models.TaskCommentImpl;\n+\n+class TaskApiModelsCloneTest {\n+\n+  @Test\n+  void testCloneInTaskSummary() {\n+    Task dummyTaskForSummaryTest =\n+        CreateTaskApiModelHelper.createUnitTestTask(\n+            \"dummyTaskId\",\n+            \"dummyTaskName\",\n+            \"workbasketKey\",\n+            CreateTaskApiModelHelper.createDummyClassification());\n+    TaskSummary dummyTaskSummary = dummyTaskForSummaryTest.asSummary();\n+    TaskSummary dummyTaskSummaryCloned = dummyTaskSummary.clone();\n+    assertThat(dummyTaskSummaryCloned).isEqualTo(dummyTaskSummary);\n+  }\n+\n+  @Test\n+  void testCloneInTask() {\n+    Task dummyTask =\n+        CreateTaskApiModelHelper.createUnitTestTask(\n+            \"dummyTaskId\",\n+            \"dummyTaskName\",\n+            \"workbasketKey\",\n+            CreateTaskApiModelHelper.createDummyClassification());\n+    Task dummyTaskCloned = dummyTask.clone();\n+    assertThat(dummyTaskCloned).isEqualTo(dummyTask);\n+  }\n+\n+  @Test\n+  void testCloneInTaskComment() {\n+    TaskComment dummyComment = new TaskCommentImpl();\n+    dummyComment.setTextField(\"dummyTextField\");\n+    TaskComment dummyCommentCloned = dummyComment.clone();\n+    assertThat(dummyCommentCloned).isEqualTo(dummyComment);\n+  }\n+\n+  @Test\n+  void testCloneInObjectReference() {\n+    ObjectReference dummyReference = new ObjectReference();\n+    dummyReference.setId(\"dummyId\");\n+    dummyReference.setSystem(\"dummySystem\");\n+    dummyReference.setCompany(\"dummyCompany\");\n+    dummyReference.setSystemInstance(\"dummySystemInstance\");\n+    dummyReference.setType(\"dummyType\");\n+    dummyReference.setValue(\"dummyValue\");\n+    ObjectReference dummyReferenceCloned = dummyReference.clone();\n+    assertThat(dummyReferenceCloned).isEqualTo(dummyReference);\n+    assertThat(dummyReferenceCloned != dummyReference);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTQ0Njg3", "url": "https://github.com/Taskana/taskana/pull/989#pullrequestreview-380944687", "createdAt": "2020-03-25T08:39:49Z", "commit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODozOTo1MFrOF7QuXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODozOTo1MFrOF7QuXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NDMxOA==", "bodyText": "Please remove Api", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r397684318", "createdAt": "2020-03-25T08:39:50Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/workbasket/api/models/WorkbasketApiModelsCloneTest.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package pro.taskana.workbasket.api.models;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import pro.taskana.workbasket.internal.models.WorkbasketAccessItemImpl;\n+import pro.taskana.workbasket.internal.models.WorkbasketImpl;\n+\n+class WorkbasketApiModelsCloneTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c716535a8074c36c4afb8b5569f2258a620340ff"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a7ad1ce7a3cf81f2c335d02bb179f70bc3edb0a", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/0a7ad1ce7a3cf81f2c335d02bb179f70bc3edb0a", "committedDate": "2020-03-25T15:31:23Z", "message": "TSK-1168: Fullfilled additional requirements of the review"}, "afterCommit": {"oid": "b9edff90f4253471d6e69b0ba17bd805cb33c2eb", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/b9edff90f4253471d6e69b0ba17bd805cb33c2eb", "committedDate": "2020-03-26T09:56:31Z", "message": "TSK-1168: Fullfilled additional requirements of the review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9edff90f4253471d6e69b0ba17bd805cb33c2eb", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/b9edff90f4253471d6e69b0ba17bd805cb33c2eb", "committedDate": "2020-03-26T09:56:31Z", "message": "TSK-1168: Fullfilled additional requirements of the review"}, "afterCommit": {"oid": "ea1708a0281357ada21ef793d99cab9e95da6ccb", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/ea1708a0281357ada21ef793d99cab9e95da6ccb", "committedDate": "2020-03-26T10:14:03Z", "message": "TSK-1168: Fullfilled additional requirements of the review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f4edb3d658bb88cdbc2a43ec2614ff571ced37e", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/8f4edb3d658bb88cdbc2a43ec2614ff571ced37e", "committedDate": "2020-03-26T13:21:42Z", "message": "tsk-1168 changed all exterma\u00f6 classes dependent on the clone method to use copy instead"}, "afterCommit": {"oid": "696ed37e21361318666cfa2a2734c7c3eb475988", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/696ed37e21361318666cfa2a2734c7c3eb475988", "committedDate": "2020-03-26T13:45:21Z", "message": "TSK-1168: A copy method now makes all entities clonable and added tests to confirm this"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDUzMDcz", "url": "https://github.com/Taskana/taskana/pull/989#pullrequestreview-382053073", "createdAt": "2020-03-26T14:17:49Z", "commit": {"oid": "696ed37e21361318666cfa2a2734c7c3eb475988"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoxNzo0OVrOF8JFlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDoxOTowN1rOF8JJpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwNzc2Ng==", "bodyText": "Please remove this //Compliant //Compliant", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r398607766", "createdAt": "2020-03-26T14:17:49Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/models/WorkbasketSummaryImpl.java", "diffHunk": "@@ -231,6 +250,11 @@ public void setMarkedForDeletion(boolean markedForDeletion) {\n     this.markedForDeletion = markedForDeletion;\n   }\n \n+  @Override\n+  public WorkbasketSummaryImpl copy() { // Compliant// Compliant", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "696ed37e21361318666cfa2a2734c7c3eb475988"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwODgwNw==", "bodyText": "Please change this back to dummyComment.clone()", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r398608807", "createdAt": "2020-03-26T14:19:07Z", "author": {"login": "gitgoodjhe"}, "path": "lib/taskana-core/src/test/java/pro/taskana/task/api/models/TaskModelsCloneTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+package pro.taskana.task.api.models;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.junit.jupiter.api.Test;\n+\n+import pro.taskana.task.internal.CreateTaskModelHelper;\n+import pro.taskana.task.internal.models.TaskCommentImpl;\n+import pro.taskana.task.internal.models.TaskSummaryImpl;\n+\n+class TaskModelsCloneTest {\n+\n+  @Test\n+  void testCloneInTaskSummary() {\n+    TaskSummaryImpl dummyTaskSummary = new TaskSummaryImpl();\n+\n+    Attachment dummyAttachmentForSummaryTestPreClone =\n+        CreateTaskModelHelper.createAttachment(\"uniqueIdForDeepTest\", \"uniqueTaskIdForDeepTest\");\n+    AttachmentSummary dummyAttachmentSummary = dummyAttachmentForSummaryTestPreClone.asSummary();\n+    ArrayList<AttachmentSummary> attachmentSummaries = new ArrayList<>();\n+    attachmentSummaries.add(dummyAttachmentSummary);\n+    dummyTaskSummary.setAttachmentSummaries(attachmentSummaries);\n+\n+    TaskSummary dummyTaskSummaryCloned = dummyTaskSummary.copy();\n+    assertThat(dummyTaskSummaryCloned).isEqualTo(dummyTaskSummary);\n+    assertThat(dummyTaskSummaryCloned).isNotSameAs(dummyTaskSummary);\n+\n+    Attachment dummyAttachmentForSummaryTestPostClone =\n+        CreateTaskModelHelper.createAttachment(\n+            \"differentIdForDeepTest\", \"differentTaskIdForDeepTest\");\n+    AttachmentSummary dummyAttachmentSummary2 = dummyAttachmentForSummaryTestPostClone.asSummary();\n+    attachmentSummaries.add(dummyAttachmentSummary2);\n+    assertThat(dummyTaskSummaryCloned).isNotEqualTo(dummyTaskSummary);\n+  }\n+\n+  @Test\n+  void testCloneInTask() {\n+    Task dummyTask =\n+        CreateTaskModelHelper.createUnitTestTask(\n+            \"dummyTaskId\",\n+            \"dummyTaskName\",\n+            \"workbasketKey\",\n+            CreateTaskModelHelper.createDummyClassification());\n+    Map<String, String> dummyCustomAttributesPreClone = new HashMap<>();\n+    dummyCustomAttributesPreClone.put(\"dummyAttributeKey\", \"dummyAttributeValue\");\n+    dummyTask.setCustomAttributes(dummyCustomAttributesPreClone);\n+    Map<String, String> dummyCallbackInfoPreClone = new HashMap<>();\n+    dummyCallbackInfoPreClone.put(\"dummyCallbackKey\", \"dummyCallbackValue\");\n+    dummyTask.setCallbackInfo(dummyCallbackInfoPreClone);\n+\n+    Task dummyTaskCloned = dummyTask.copy();\n+    assertThat(dummyTaskCloned).isEqualTo(dummyTask);\n+    assertThat(dummyTaskCloned).isNotSameAs(dummyTask);\n+\n+    dummyCustomAttributesPreClone.put(\"deepTestAttributeKey\", \"deepTestAttributeValue\");\n+    dummyCallbackInfoPreClone.put(\"deepTestCallbackKey\", \"deepTestCallbackValue\");\n+    assertThat(dummyTaskCloned).isNotEqualTo(dummyTask);\n+  }\n+\n+  @Test\n+  void testCloneInTaskComment() {\n+    TaskCommentImpl dummyComment = new TaskCommentImpl();\n+    dummyComment.setTextField(\"dummyTextField\");\n+    TaskComment dummyCommentCloned = new TaskCommentImpl(dummyComment);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "696ed37e21361318666cfa2a2734c7c3eb475988"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "696ed37e21361318666cfa2a2734c7c3eb475988", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/696ed37e21361318666cfa2a2734c7c3eb475988", "committedDate": "2020-03-26T13:45:21Z", "message": "TSK-1168: A copy method now makes all entities clonable and added tests to confirm this"}, "afterCommit": {"oid": "2177b3df8e7fa3830fb7efa181a88cd03eae0ce5", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/2177b3df8e7fa3830fb7efa181a88cd03eae0ce5", "committedDate": "2020-03-26T14:33:15Z", "message": "TSK-1168: made interfaces clonable with a new \"copy()\" method, added tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDk4NDEy", "url": "https://github.com/Taskana/taskana/pull/989#pullrequestreview-382098412", "createdAt": "2020-03-26T15:02:13Z", "commit": {"oid": "2177b3df8e7fa3830fb7efa181a88cd03eae0ce5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDkxNTE1", "url": "https://github.com/Taskana/taskana/pull/989#pullrequestreview-388091515", "createdAt": "2020-04-06T09:46:34Z", "commit": {"oid": "1ad8e97e5e4c09026aae4c86e46132521c94d351"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MTA0NTcz", "url": "https://github.com/Taskana/taskana/pull/989#pullrequestreview-388104573", "createdAt": "2020-04-06T10:04:26Z", "commit": {"oid": "1ad8e97e5e4c09026aae4c86e46132521c94d351"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDowNDoyNlrOGBQk8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDowNDoyNlrOGBQk8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk3MzM2Mg==", "bodyText": "Please comment that the id will not be duplicated.\n(and do this for every entity)", "url": "https://github.com/Taskana/taskana/pull/989#discussion_r403973362", "createdAt": "2020-04-06T10:04:26Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/classification/api/models/Classification.java", "diffHunk": "@@ -36,6 +36,27 @@\n    */\n   String getDomain();\n \n+  /**\n+   * Get the logical name of the associated application entry point.\n+   *\n+   * @return applicationEntryPoint\n+   */\n+  String getApplicationEntryPoint();\n+\n+  /**\n+   * Set the logical name of the associated application entry point.\n+   *\n+   * @param applicationEntryPoint The application entry point\n+   */\n+  void setApplicationEntryPoint(String applicationEntryPoint);\n+\n+  /**\n+   * Duplicates this Classification.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ad8e97e5e4c09026aae4c86e46132521c94d351"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MTA0Nzg5", "url": "https://github.com/Taskana/taskana/pull/989#pullrequestreview-388104789", "createdAt": "2020-04-06T10:04:46Z", "commit": {"oid": "1ad8e97e5e4c09026aae4c86e46132521c94d351"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04e8b798dd3c79219f2a06edceeb61c86c5ae0b1", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/04e8b798dd3c79219f2a06edceeb61c86c5ae0b1", "committedDate": "2020-04-06T10:14:03Z", "message": "TSK-1168: made interfaces of entities clonable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "360db7cff36fd4181ab3d31182b5cc0d9a550f41", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/360db7cff36fd4181ab3d31182b5cc0d9a550f41", "committedDate": "2020-04-06T10:18:00Z", "message": "TSK-1168: made interfaces clonable with a new \"copy()\" method, added tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ad8e97e5e4c09026aae4c86e46132521c94d351", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/1ad8e97e5e4c09026aae4c86e46132521c94d351", "committedDate": "2020-04-06T09:10:01Z", "message": "TSK-1168: Removed Id from CopyConstructor"}, "afterCommit": {"oid": "02766da94eb1ad6bf7d77d8e1778903ea01052b4", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/02766da94eb1ad6bf7d77d8e1778903ea01052b4", "committedDate": "2020-04-06T11:07:29Z", "message": "broken commit, beware"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e95a87480f0baeaa50f2d7c10ca012295acf5190", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/e95a87480f0baeaa50f2d7c10ca012295acf5190", "committedDate": "2020-04-06T17:43:24Z", "message": "TSK-1168: added acceptance test to show that you can create new task after copy"}, "afterCommit": {"oid": "279c2c3bb1e656ee99afd50dc33e18888bc3477e", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/279c2c3bb1e656ee99afd50dc33e18888bc3477e", "committedDate": "2020-04-06T18:19:19Z", "message": "TSK-1168: added acceptance test to show that you can create new task after copy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "279c2c3bb1e656ee99afd50dc33e18888bc3477e", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/279c2c3bb1e656ee99afd50dc33e18888bc3477e", "committedDate": "2020-04-06T18:19:19Z", "message": "TSK-1168: added acceptance test to show that you can create new task after copy"}, "afterCommit": {"oid": "a98897906823fd4d2dd527a94bad3252eb37024d", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/a98897906823fd4d2dd527a94bad3252eb37024d", "committedDate": "2020-04-07T08:22:50Z", "message": "TSK-1168: added acceptance test to show that you can create new task after copy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ac99e7f57d69c2bdfc5d2724d7ea8660f974c94", "author": {"user": null}, "url": "https://github.com/Taskana/taskana/commit/3ac99e7f57d69c2bdfc5d2724d7ea8660f974c94", "committedDate": "2020-04-07T08:27:43Z", "message": "TSK-1168: Removed Id from CopyConstructor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a98897906823fd4d2dd527a94bad3252eb37024d", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/a98897906823fd4d2dd527a94bad3252eb37024d", "committedDate": "2020-04-07T08:22:50Z", "message": "TSK-1168: added acceptance test to show that you can create new task after copy"}, "afterCommit": {"oid": "f9543b1208f41d14c598d61ebc03d142312f0bbf", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/f9543b1208f41d14c598d61ebc03d142312f0bbf", "committedDate": "2020-04-07T08:27:43Z", "message": "TSK-1168: added acceptance test to show that you can create new task after copy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9543b1208f41d14c598d61ebc03d142312f0bbf", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/f9543b1208f41d14c598d61ebc03d142312f0bbf", "committedDate": "2020-04-07T08:27:43Z", "message": "TSK-1168: added acceptance test to show that you can create new task after copy"}, "afterCommit": {"oid": "f93f520d90c3da7ca856c6e0bb14c25f8bb74d2e", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/f93f520d90c3da7ca856c6e0bb14c25f8bb74d2e", "committedDate": "2020-04-07T15:04:50Z", "message": "TSK-1168: added acceptance test to show that you can create new task after copy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca417f8a7de56af76c42846d9c12892de0fd9c4", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/6ca417f8a7de56af76c42846d9c12892de0fd9c4", "committedDate": "2020-04-09T07:49:30Z", "message": "TSK-1168: added acceptance tests to show that you can create entities after copy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f93f520d90c3da7ca856c6e0bb14c25f8bb74d2e", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/f93f520d90c3da7ca856c6e0bb14c25f8bb74d2e", "committedDate": "2020-04-07T15:04:50Z", "message": "TSK-1168: added acceptance test to show that you can create new task after copy"}, "afterCommit": {"oid": "6ca417f8a7de56af76c42846d9c12892de0fd9c4", "author": {"user": {"login": "mustaphazorgati", "name": "Mustapha Zorgati"}}, "url": "https://github.com/Taskana/taskana/commit/6ca417f8a7de56af76c42846d9c12892de0fd9c4", "committedDate": "2020-04-09T07:49:30Z", "message": "TSK-1168: added acceptance tests to show that you can create entities after copy"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4522, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}