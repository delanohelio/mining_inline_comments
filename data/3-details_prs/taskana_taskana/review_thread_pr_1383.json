{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNDQ5NDI3", "number": 1383, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowMDoxMlrOFTDncg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxNTo1NzoyN1rOFfMFuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1NTI2NTE0OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/test/java/acceptance/task/CreateTaskAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowMDoxMlrOIaTzLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowMDoxMlrOIaTzLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ1ODI4NA==", "bodyText": "why did you remove this?", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r564458284", "createdAt": "2021-01-26T12:00:12Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/CreateTaskAccTest.java", "diffHunk": "@@ -170,71 +168,6 @@ void testIdempotencyOfTaskCreation() throws Exception {\n     assertThatThrownBy(call).isInstanceOf(TaskAlreadyExistException.class);\n   }\n \n-  @WithAccessId(user = \"user-1-1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65752564edafc715a52df64846a986d5d498bd8e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1NTI3MTk4OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowMjoyOVrOIaT3hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowMjoyOVrOIaT3hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ1OTM5OQ==", "bodyText": "please make this a seperate test again.", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r564459399", "createdAt": "2021-01-26T12:02:29Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -29,29 +28,24 @@\n \n   @WithAccessId(user = \"user-1-1\")\n   @Test\n-  void testGetAttachmentSummariesFromTask() {\n+  void should_ReturnTaskSummaryIncludingAttachmentsIfPresent_When_UsingTaskQuery() {\n     TaskService taskService = taskanaEngine.getTaskService();\n     List<TaskSummary> tasks = taskService.createTaskQuery().classificationKeyIn(\"L110102\").list();\n     assertThat(tasks).hasSize(1);\n \n     List<AttachmentSummary> attachmentSummaries = tasks.get(0).getAttachmentSummaries();\n     assertThat(attachmentSummaries).hasSize(2);\n-  }\n \n-  @WithAccessId(user = \"user-1-2\")\n-  @Test\n-  void testGetNoAttachmentSummaryFromTask() {\n-    TaskService taskService = taskanaEngine.getTaskService();\n-    List<TaskSummary> tasks = taskService.createTaskQuery().list();\n-    assertThat(tasks).hasSize(30);\n+    tasks = taskService.createTaskQuery().idIn(\"TKI:000000000000000000000000000000000066\").list();\n+    assertThat(tasks).hasSize(1);\n \n-    List<AttachmentSummary> attachmentSummaries = tasks.get(0).getAttachmentSummaries();\n+    attachmentSummaries = tasks.get(0).getAttachmentSummaries();\n     assertThat(attachmentSummaries).isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65752564edafc715a52df64846a986d5d498bd8e"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1NTI3Mjg2OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowMjo0MVrOIaT4BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowMjo0MVrOIaT4BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ1OTUyNA==", "bodyText": "please rework this name (after test separation)", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r564459524", "createdAt": "2021-01-26T12:02:41Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -29,29 +28,24 @@\n \n   @WithAccessId(user = \"user-1-1\")\n   @Test\n-  void testGetAttachmentSummariesFromTask() {\n+  void should_ReturnTaskSummaryIncludingAttachmentsIfPresent_When_UsingTaskQuery() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65752564edafc715a52df64846a986d5d498bd8e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1NTI3Mzk2OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowMzowMlrOIaT4uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowMzowMlrOIaT4uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ1OTcwNA==", "bodyText": "why did you delete this?", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r564459704", "createdAt": "2021-01-26T12:03:02Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -81,31 +75,4 @@ void should_ConfirmIfAttachmentSummariesAreCorrect_When_UsingTaskQueryAndGetTask\n         .usingElementComparator(REFERENCE_COMPARATOR)\n         .doesNotContainAnyElementsOf(originalAttachments); // but not same reference\n   }\n-\n-  @WithAccessId(user = \"user-1-1\")\n-  @Test\n-  void should_ConfirmIfAttachmentSummariesAreCorrect() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65752564edafc715a52df64846a986d5d498bd8e"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1NTI3ODk2OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowNDo0M1rOIaT8Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowNDo0M1rOIaT8Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ2MDU2Mg==", "bodyText": "taskService.createTaskQuery().idIn(\"TKI:00...00\").list()", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r564460562", "createdAt": "2021-01-26T12:04:43Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTaskWithAttachmentAccTest.java", "diffHunk": "@@ -81,31 +75,4 @@ void should_ConfirmIfAttachmentSummariesAreCorrect_When_UsingTaskQueryAndGetTask\n         .usingElementComparator(REFERENCE_COMPARATOR)\n         .doesNotContainAnyElementsOf(originalAttachments); // but not same reference\n   }\n-\n-  @WithAccessId(user = \"user-1-1\")\n-  @Test\n-  void should_ConfirmIfAttachmentSummariesAreCorrect() throws Exception {\n-    TaskService taskService = taskanaEngine.getTaskService();\n-    // find Task with ID TKI:00...00\n-    List<TaskSummary> tasks =\n-        taskService\n-            .createTaskQuery()\n-            .classificationKeyIn(\"T2000\")\n-            .customAttributeIn(TaskCustomField.CUSTOM_1, \"custom1\")\n-            .list();\n-    assertThat(tasks).hasSize(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65752564edafc715a52df64846a986d5d498bd8e"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1NTI4MTk4OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksAccTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowNTo0MFrOIaT93w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowNTo0MFrOIaT93w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ2MTAyMw==", "bodyText": "Why did you remove this?", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r564461023", "createdAt": "2021-01-26T12:05:40Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/task/QueryTasksAccTest.java", "diffHunk": "@@ -333,47 +327,6 @@ void testQueryForCustom7WithException() throws Exception {\n     assertThat(result2).hasSize(2);\n   }\n \n-  @WithAccessId(user = \"admin\")\n-  @Test\n-  void testQueryTaskByCustomAttributes() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65752564edafc715a52df64846a986d5d498bd8e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1NTI5MTU1OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/test/java/pro/taskana/sampledata/SampleDataGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowODozNFrOIaUDuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxMjowODozNFrOIaUDuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ2MjUyMA==", "bodyText": "Please move this test to taskana-common-data", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r564462520", "createdAt": "2021-01-26T12:08:34Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/sampledata/SampleDataGeneratorTest.java", "diffHunk": "@@ -1,26 +0,0 @@\n-package pro.taskana.sampledata;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65752564edafc715a52df64846a986d5d498bd8e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4MTE1NDAxOnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDoyMzoxNlrOIsgI6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDoyMzoxNlrOIsgI6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUzNDgyNg==", "bodyText": "why is this public?", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r583534826", "createdAt": "2021-02-26T10:23:16Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/main/java/pro/taskana/workbasket/internal/WorkbasketServiceImpl.java", "diffHunk": "@@ -1044,8 +1044,8 @@ public void deleteWorkbasketAccessItemsForAccessId(String accessId)\n    * @param workbasketImplToUpdate the workbasket to update\n    * @throws ConcurrencyException if the workbasket has been modified by some other process.\n    */\n-  void checkModifiedHasNotChanged(Workbasket oldWorkbasket, WorkbasketImpl workbasketImplToUpdate)\n-      throws ConcurrencyException {\n+  public void checkModifiedHasNotChanged(\n+      Workbasket oldWorkbasket, WorkbasketImpl workbasketImplToUpdate) throws ConcurrencyException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5023f2818380f698c63fe00b9d0f7dc2c9927f0a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4MTE3OTk3OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/test/java/pro/taskana/classification/internal/models/ClassificationModelsCloneTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDoyOTozMFrOIsgYMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDoyOTozMFrOIsgYMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUzODczNg==", "bodyText": "This test is important.", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r583538736", "createdAt": "2021-02-26T10:29:30Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/classification/internal/models/ClassificationModelsCloneTest.java", "diffHunk": "@@ -1,81 +0,0 @@\n-package pro.taskana.classification.internal.models;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5023f2818380f698c63fe00b9d0f7dc2c9927f0a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4MTE4OTE4OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/test/java/pro/taskana/monitor/internal/ReportTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDozMTozOVrOIsgdrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDozMTozOVrOIsgdrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzU0MDE0MA==", "bodyText": "This is important.", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r583540140", "createdAt": "2021-02-26T10:31:39Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/monitor/internal/ReportTest.java", "diffHunk": "@@ -1,308 +0,0 @@\n-package pro.taskana.monitor.internal;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-import java.util.stream.IntStream;\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-\n-import pro.taskana.monitor.api.reports.Report;\n-import pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader;\n-import pro.taskana.monitor.api.reports.item.MonitorQueryItem;\n-import pro.taskana.monitor.api.reports.item.QueryItemPreprocessor;\n-import pro.taskana.monitor.api.reports.row.FoldableRow;\n-import pro.taskana.monitor.api.reports.row.Row;\n-import pro.taskana.monitor.api.reports.row.SingleRow;\n-\n-/** Tests for {@link Report}. */\n-class ReportTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5023f2818380f698c63fe00b9d0f7dc2c9927f0a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4MTE5ODk4OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/test/java/pro/taskana/monitor/internal/WorkingDaysToDaysReportConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDozNDoxN1rOIsgjmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDozNDoxN1rOIsgjmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzU0MTY1OA==", "bodyText": "This is important", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r583541658", "createdAt": "2021-02-26T10:34:17Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/monitor/internal/WorkingDaysToDaysReportConverterTest.java", "diffHunk": "@@ -1,334 +0,0 @@\n-package pro.taskana.monitor.internal;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-import java.time.Instant;\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.junit.jupiter.api.Test;\n-\n-import pro.taskana.common.api.CustomHoliday;\n-import pro.taskana.common.api.WorkingDaysToDaysConverter;\n-import pro.taskana.monitor.api.reports.header.TimeIntervalColumnHeader;\n-import pro.taskana.monitor.internal.preprocessor.WorkingDaysToDaysReportConverter;\n-\n-/** Test for the DaysToWorkingDaysReportConverter. */\n-class WorkingDaysToDaysReportConverterTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5023f2818380f698c63fe00b9d0f7dc2c9927f0a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4MTIwNjI2OnYy", "diffSide": "LEFT", "path": "lib/taskana-core/src/test/java/pro/taskana/task/internal/TaskAttachmentTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDozNjoyMFrOIsgoFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDozNjoyMFrOIsgoFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzU0MjgwNw==", "bodyText": "this is important.", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r583542807", "createdAt": "2021-02-26T10:36:20Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/pro/taskana/task/internal/TaskAttachmentTest.java", "diffHunk": "@@ -1,137 +0,0 @@\n-package pro.taskana.task.internal;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-import java.time.Instant;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import org.junit.jupiter.api.Test;\n-\n-import pro.taskana.classification.internal.models.ClassificationImpl;\n-import pro.taskana.task.api.models.Attachment;\n-import pro.taskana.task.api.models.AttachmentSummary;\n-import pro.taskana.task.api.models.ObjectReference;\n-import pro.taskana.task.internal.models.TaskImpl;\n-\n-/**\n- * Unit Test for methods needed fot attachment at TaskImpl.<br>\n- * This test should test every interaction with Attachments, which means adding, removing, nulling\n- * them.\n- */\n-class TaskAttachmentTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5023f2818380f698c63fe00b9d0f7dc2c9927f0a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4MjQ4MjQ5OnYy", "diffSide": "RIGHT", "path": "lib/taskana-core/src/test/java/acceptance/AbstractAccTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxNTo1NzoyN1rOIsso6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxNTo1NzoyN1rOIsso6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzczOTYyNQ==", "bodyText": "Please make them protected again.", "url": "https://github.com/Taskana/taskana/pull/1383#discussion_r583739625", "createdAt": "2021-02-26T15:57:27Z", "author": {"login": "mustaphazorgati"}, "path": "lib/taskana-core/src/test/java/acceptance/AbstractAccTest.java", "diffHunk": "@@ -41,11 +40,11 @@\n   protected static WorkingDaysToDaysConverter converter;\n \n   @BeforeAll\n-  protected static void setupTest() throws Exception {\n+  public static void setupTest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a1003d5754033f1608a66a92653e7d545fb556"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4484, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}