{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MDI3NDcz", "number": 304, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjowMzo1MVrOEBbEsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzowMDoxNFrOEBnk6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTI3NjAzOnYy", "diffSide": "RIGHT", "path": "uploader/pantheon.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjowMzo1MVrOGdQoSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjo1MzoxMFrOGdgZ4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzNDM0Ng==", "bodyText": "Do we need update the jcr:lastModified timestamp. My understanding is that sling populates for us by default", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433334346", "createdAt": "2020-06-01T16:03:51Z", "author": {"login": "xdavidson"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -299,22 +300,26 @@ def process_workspace(path):\n     logger.debug('url: %s', url)\n     workspace = {}\n     workspace['jcr:primaryType'] = 'pant:workspace'\n+    workspace['jcr:lastModified'] = datetime.now().strftime(\"%Y-%m-%dT%H:%m:%S\") #SimpleDateFormat:yyyy-MM-dd'T'HH:mm:ss", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6c7cbff71fd056479422b85c965789c9bd94e60"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3MjI2Ng==", "bodyText": "I see there might be a reason we need update the jcr:lastModified timestamp where same repo is re-uploaded with modifications. the timestamp you populated here is based off the timezone on the client size. On the serverside the time is UTC based. If you have to generate the modified timestamp on the client side, you should ensure it's utc time.", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433372266", "createdAt": "2020-06-01T17:14:25Z", "author": {"login": "xdavidson"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -299,22 +300,26 @@ def process_workspace(path):\n     logger.debug('url: %s', url)\n     workspace = {}\n     workspace['jcr:primaryType'] = 'pant:workspace'\n+    workspace['jcr:lastModified'] = datetime.now().strftime(\"%Y-%m-%dT%H:%m:%S\") #SimpleDateFormat:yyyy-MM-dd'T'HH:mm:ss", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzNDM0Ng=="}, "originalCommit": {"oid": "b6c7cbff71fd056479422b85c965789c9bd94e60"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU5MjgwMw==", "bodyText": "Added changes to convert localtime to UTC in latest commit", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433592803", "createdAt": "2020-06-02T02:53:10Z", "author": {"login": "rednitish"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -299,22 +300,26 @@ def process_workspace(path):\n     logger.debug('url: %s', url)\n     workspace = {}\n     workspace['jcr:primaryType'] = 'pant:workspace'\n+    workspace['jcr:lastModified'] = datetime.now().strftime(\"%Y-%m-%dT%H:%m:%S\") #SimpleDateFormat:yyyy-MM-dd'T'HH:mm:ss", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzNDM0Ng=="}, "originalCommit": {"oid": "b6c7cbff71fd056479422b85c965789c9bd94e60"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTI5MDIwOnYy", "diffSide": "RIGHT", "path": "uploader/pantheon.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjo0ODowNFrOGdkNzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDozNjowNVrOGdr2Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1NTI0NQ==", "bodyText": "Hey Nitish, can you confirm if \"yyyy-MM-dd\" is the format same as that being used consistently in the Pantheon App?", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433655245", "createdAt": "2020-06-02T06:48:04Z", "author": {"login": "anknite"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -299,22 +301,26 @@ def process_workspace(path):\n     logger.debug('url: %s', url)\n     workspace = {}\n     workspace['jcr:primaryType'] = 'pant:workspace'\n+    workspace['jcr:lastModified'] = datetime.now().utcnow().strftime(\"%Y-%m-%dT%H:%m:%S\") #SimpleDateFormat:yyyy-MM-dd'T'HH:mm:ss", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc4MDMwMg==", "bodyText": "Yes @anknite  it's the same.:)", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433780302", "createdAt": "2020-06-02T10:36:05Z", "author": {"login": "rednitish"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -299,22 +301,26 @@ def process_workspace(path):\n     logger.debug('url: %s', url)\n     workspace = {}\n     workspace['jcr:primaryType'] = 'pant:workspace'\n+    workspace['jcr:lastModified'] = datetime.now().utcnow().strftime(\"%Y-%m-%dT%H:%m:%S\") #SimpleDateFormat:yyyy-MM-dd'T'HH:mm:ss", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1NTI0NQ=="}, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTMwMTAyOnYy", "diffSide": "RIGHT", "path": "uploader/pantheon.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjo1MTo1NlrOGdkUkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDo0MzoxM1rOGdsDYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1Njk3Ng==", "bodyText": "There seems to be a warning here, nothing major just a uniformity check for new line I guess. Could you please add it.", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433656976", "createdAt": "2020-06-02T06:51:56Z", "author": {"login": "anknite"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -483,5 +493,6 @@ def process_attributes_as_resources(variants):\n         _warn(f'{leftoverFiles} additional files detected but not uploaded. Only files specified in '\n               + CONFIG_FILE\n               + ' are handled for upload.')\n-\n+else:\n+    sys.exit('Modules and resources not found, please check yaml syntax')\n print('Finished!')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc4MzY0OA==", "bodyText": "added new line at the end of script for uniformity", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433783648", "createdAt": "2020-06-02T10:43:13Z", "author": {"login": "rednitish"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -483,5 +493,6 @@ def process_attributes_as_resources(variants):\n         _warn(f'{leftoverFiles} additional files detected but not uploaded. Only files specified in '\n               + CONFIG_FILE\n               + ' are handled for upload.')\n-\n+else:\n+    sys.exit('Modules and resources not found, please check yaml syntax')\n print('Finished!')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1Njk3Ng=="}, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTMxMzQ5OnYy", "diffSide": "RIGHT", "path": "uploader/pantheon.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjo1NjoyMFrOGdkb8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDo0MTo1NVrOGdsBBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1ODg2Ng==", "bodyText": "I see that cannonicalPresent is being initialized to False and not being used further. Is there a reason this was left off?", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433658866", "createdAt": "2020-06-02T06:56:20Z", "author": {"login": "anknite"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -299,22 +301,26 @@ def process_workspace(path):\n     logger.debug('url: %s', url)\n     workspace = {}\n     workspace['jcr:primaryType'] = 'pant:workspace'\n+    workspace['jcr:lastModified'] = datetime.now().utcnow().strftime(\"%Y-%m-%dT%H:%m:%S\") #SimpleDateFormat:yyyy-MM-dd'T'HH:mm:ss\n     # Process variants. variants is a list of dictionaries\n \n     data = {}\n+    cannonicalPresent = False", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc4MzA0NQ==", "bodyText": "answered below", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433783045", "createdAt": "2020-06-02T10:41:55Z", "author": {"login": "rednitish"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -299,22 +301,26 @@ def process_workspace(path):\n     logger.debug('url: %s', url)\n     workspace = {}\n     workspace['jcr:primaryType'] = 'pant:workspace'\n+    workspace['jcr:lastModified'] = datetime.now().utcnow().strftime(\"%Y-%m-%dT%H:%m:%S\") #SimpleDateFormat:yyyy-MM-dd'T'HH:mm:ss\n     # Process variants. variants is a list of dictionaries\n \n     data = {}\n+    cannonicalPresent = False", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1ODg2Ng=="}, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTMxNjYxOnYy", "diffSide": "RIGHT", "path": "uploader/pantheon.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjo1NzoyMFrOGdkd0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDo0MTozM1rOGdsAZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1OTM0NQ==", "bodyText": "Similar to my earlier comment cannonicalPresent is now 'true' however its not being used. Am I missing something?", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433659345", "createdAt": "2020-06-02T06:57:20Z", "author": {"login": "anknite"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -299,22 +301,26 @@ def process_workspace(path):\n     logger.debug('url: %s', url)\n     workspace = {}\n     workspace['jcr:primaryType'] = 'pant:workspace'\n+    workspace['jcr:lastModified'] = datetime.now().utcnow().strftime(\"%Y-%m-%dT%H:%m:%S\") #SimpleDateFormat:yyyy-MM-dd'T'HH:mm:ss\n     # Process variants. variants is a list of dictionaries\n \n     data = {}\n+    cannonicalPresent = False\n     if variants:\n         validateVariants()\n         for variant in variants:\n             # Each variant is of type dictionary. Rename the keys to match ModuleVariantDefinition\n             module_variants = {}\n+            module_variants['pant:canonical'] = 'false'\n             for key, value in variant.items():\n                 if key.lower() == 'name':\n                     module_variants['pant:name'] = value\n                 if key.lower() == 'path':\n                     module_variants['pant:attributesFilePath'] = value\n                 if key.lower() == 'canonical':\n                     module_variants['pant:canonical'] = value\n-            if 'pant:canonical' not in module_variants:\n+                    cannonicalPresent = 'true'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc4Mjg4Ng==", "bodyText": "Good catch, cannonicalPresent was used earlier code , this PR eliminated cannonicalPresent. we can remove it.", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433782886", "createdAt": "2020-06-02T10:41:33Z", "author": {"login": "rednitish"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -299,22 +301,26 @@ def process_workspace(path):\n     logger.debug('url: %s', url)\n     workspace = {}\n     workspace['jcr:primaryType'] = 'pant:workspace'\n+    workspace['jcr:lastModified'] = datetime.now().utcnow().strftime(\"%Y-%m-%dT%H:%m:%S\") #SimpleDateFormat:yyyy-MM-dd'T'HH:mm:ss\n     # Process variants. variants is a list of dictionaries\n \n     data = {}\n+    cannonicalPresent = False\n     if variants:\n         validateVariants()\n         for variant in variants:\n             # Each variant is of type dictionary. Rename the keys to match ModuleVariantDefinition\n             module_variants = {}\n+            module_variants['pant:canonical'] = 'false'\n             for key, value in variant.items():\n                 if key.lower() == 'name':\n                     module_variants['pant:name'] = value\n                 if key.lower() == 'path':\n                     module_variants['pant:attributesFilePath'] = value\n                 if key.lower() == 'canonical':\n                     module_variants['pant:canonical'] = value\n-            if 'pant:canonical' not in module_variants:\n+                    cannonicalPresent = 'true'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1OTM0NQ=="}, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTMyNDU5OnYy", "diffSide": "RIGHT", "path": "uploader/pantheon.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzowMDoxNFrOGdki1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDo0MDowNlrOGdr9ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY2MDYyOQ==", "bodyText": "Should we be adding a warning/error message if 'canonical' not in variant\nessentially an else of this if", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433660629", "createdAt": "2020-06-02T07:00:14Z", "author": {"login": "anknite"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -338,8 +344,11 @@ def validateVariants():\n             sys.exit(\"Variant (name) missing, please correct variant name \")\n         if 'path' not in variant or  variant['path'] is None:  # path is mandatory for variant, throw errors in case of missing\n             sys.exit(\"Variant (path) missing, please correct variant path \")\n-        if 'canonical' in variant and variant['canonical'] is not None:\n-            isCannonicalList.append(variant['canonical'])\n+        if 'canonical' in variant:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc4MjE3OQ==", "bodyText": "It shouldn't be the case as in a single variant case, cannonical is optional.", "url": "https://github.com/redhataccess/pantheon/pull/304#discussion_r433782179", "createdAt": "2020-06-02T10:40:06Z", "author": {"login": "rednitish"}, "path": "uploader/pantheon.py", "diffHunk": "@@ -338,8 +344,11 @@ def validateVariants():\n             sys.exit(\"Variant (name) missing, please correct variant name \")\n         if 'path' not in variant or  variant['path'] is None:  # path is mandatory for variant, throw errors in case of missing\n             sys.exit(\"Variant (path) missing, please correct variant path \")\n-        if 'canonical' in variant and variant['canonical'] is not None:\n-            isCannonicalList.append(variant['canonical'])\n+        if 'canonical' in variant:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY2MDYyOQ=="}, "originalCommit": {"oid": "ca441c48e8e43b63899698905566e4a03933f653"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 302, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}