{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1OTY5ODg5", "number": 393, "title": "eliminate the ResourceTraversal class", "bodyText": "This change simplifies the mechanism for navigating through a model structure in a null-safe manner. It basically removes the ResourceTraversal class and instead uses the existing Child interface to accommodate the navigation functionality. It also removes the deprecated map method, which was the first attempt to offer a similar mechanism.\nMost of the changes are about adapting to the new, simpler API. The core changes can be found in the following classes:\nChild\nField\nNullObjects\nSlingModels", "createdAt": "2020-08-30T22:06:12Z", "url": "https://github.com/redhataccess/pantheon/pull/393", "merged": true, "mergeCommit": {"oid": "3f6f4904e5b1696321a188b1aa55868eb195a9cf"}, "closed": true, "closedAt": "2020-12-04T15:51:05Z", "author": {"login": "carlosmunoz"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFPcF5gBqjM3MjQzNzU5MTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi5kXNAFqTU0NTA2MzkwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b0885fc8b6fb50a23d1061a41af7d419db9a272", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/8b0885fc8b6fb50a23d1061a41af7d419db9a272", "committedDate": "2020-08-30T22:04:57Z", "message": "eliminate the ResourceTraversal class\n\nmove the provided functionality to the Child class"}, "afterCommit": {"oid": "034e53aad1b5a7af7cb7660fffb15698e4988176", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/034e53aad1b5a7af7cb7660fffb15698e4988176", "committedDate": "2020-09-03T12:05:25Z", "message": "rebase onto latest master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d21bf8aa56d73066c437f5852ba45f82c87891d1", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/d21bf8aa56d73066c437f5852ba45f82c87891d1", "committedDate": "2020-11-23T15:27:34Z", "message": "refactoring Child and ChildImpl classes\n\nall functionality remains the same"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51c943835e2b6da2537fc0b1f186929694708b4c", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/51c943835e2b6da2537fc0b1f186929694708b4c", "committedDate": "2020-11-23T16:01:57Z", "message": "Add traversal methods to the Child class\n\nalso add a series of null object classes to facilitate null-safe navigation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ad3fa0ec19921a3804833a6d4784d0c8b7da648", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/8ad3fa0ec19921a3804833a6d4784d0c8b7da648", "committedDate": "2020-11-23T16:07:18Z", "message": "add documentation to the NullObjects class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5968a2c6f725413e998048f3858ab81ba7daf656", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/5968a2c6f725413e998048f3858ab81ba7daf656", "committedDate": "2020-11-23T16:11:28Z", "message": "remove the Child.traverse() method.\n\nReplace all uses of this method with the new Child apis."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/1ead9c636484d33d92ff39c1530a4c7820250480", "committedDate": "2020-11-23T16:32:47Z", "message": "remote the ResourceTraversal class and replace uses with the new Child methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "034e53aad1b5a7af7cb7660fffb15698e4988176", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/034e53aad1b5a7af7cb7660fffb15698e4988176", "committedDate": "2020-09-03T12:05:25Z", "message": "rebase onto latest master"}, "afterCommit": {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/1ead9c636484d33d92ff39c1530a4c7820250480", "committedDate": "2020-11-23T16:32:47Z", "message": "remote the ResourceTraversal class and replace uses with the new Child methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMjM5NzA3", "url": "https://github.com/redhataccess/pantheon/pull/393#pullrequestreview-542239707", "createdAt": "2020-12-01T19:46:50Z", "commit": {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxOTo0Njo1MVrOH89E-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxOTo0Njo1MVrOH89E-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3NzMwNw==", "bodyText": "I think this warrants some further explanation. It's easy to think that the isPresent() call applies to the child, when I think this must apply to the parent.\nI realized this when I was trying to get to the bottom of why your changes help to make things null-safe. For example, if you have this chain:\nChild.from(A)\n.toChild(B)\n.toChild(C)\n.toChild(D)\n.toChild(E)\n.getAsOptional()\n\n...and let's say that you get a null on C, then what the heck stops us from getting an NPE on the call to D?\nI guess the answer must be that there's some code that makes sure that once C becomes a NullChild, then the call to get D must also return a NullChild, and the same for the call down into E. The code that I have attached this comment to must be what does that. But like I said, it's easy to misread at first glance, so if I'm right then I'd like to request something that makes this look less innocuous and more critically important (which I believe it is). Maybe some enhanced javadoc, or some // INLINE COMMENTS IN ALL CAPS or something - whatever you think would be most fitting.", "url": "https://github.com/redhataccess/pantheon/pull/393#discussion_r533677307", "createdAt": "2020-12-01T19:46:51Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java", "diffHunk": "@@ -37,28 +41,92 @@\n      * Indicates if the child exists.\n      * @return True, if the child exists. False otherwise.\n      */\n-    boolean isPresent();\n+    default boolean isPresent() {\n+        return get() != null;\n+    }\n \n     /**\n-     * Provides a null-safe way to operate on the value of the child, and return an\n-     * {@link Optional} with the result of the operation. This allowes the caller to\n-     * continue to operate in a null-safe fashion.\n-     * @param func The function to apply to the value\n+     * Convert this Child to an {@link Optional}\n+     * @return An {@link Optional} with the contained value.\n+     */\n+    default Optional<T> asOptional() {\n+        return Optional.ofNullable(get());\n+    }\n+\n+    /**\n+     * Navigates to the {@link Child} provided by an accessor function.\n+     * @param childAccessor A function which given a {@link SlingModel} type, will\n+     *                      yield a child\n      * @param <R>\n-     * @return An optional indicating the result of the operation. If the operation\n-     * returns null, or if the value of this child was not present in the first place,\n-     * this returns an empty Optional\n-     * @deprecated Use {@link ResourceTraversal#traverseFrom(SlingModel)}\n-     * for safe resource traversals\n+     * @return A {@link Child} (may be non-existent) as indicated by the accessor.\n      */\n-    @Deprecated\n-    <R> Optional<R> map(Function<? super T, ? extends R> func);\n+    default <R extends SlingModel> Child<R> toChild(Function<? super T, Child<R>> childAccessor) {\n+        if(isPresent()) {\n+            return childAccessor.apply(get());\n+        }\n+        return (Child<R>) NullObjects.nullChild();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MDQ4MjE3", "url": "https://github.com/redhataccess/pantheon/pull/393#pullrequestreview-545048217", "createdAt": "2020-12-04T15:17:02Z", "commit": {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToxNzowM1rOH_VW_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToxNzowM1rOH_VW_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3MjI4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Navigates to the {@link Child} provided by an accessor function.\n          \n          \n            \n                 * Navigates to the {@link Child} provided by an accessor function.\n          \n          \n            \n                 * Uses the Null Object pattern to avoid throwing an NPE in a long chain of navigation.\n          \n          \n            \n                 * For example:\n          \n          \n            \n                 * Child.from(A)\n          \n          \n            \n                 * .toChild(B)\n          \n          \n            \n                 * .toChild(C)\n          \n          \n            \n                 * .toChild(D)\n          \n          \n            \n                 * .toChild(E)\n          \n          \n            \n                 * .getAsOptional()\n          \n          \n            \n                 * If C does not exist, the chain will not throw an exception because the nullChild will be returned for the remainder of the calls.", "url": "https://github.com/redhataccess/pantheon/pull/393#discussion_r536172287", "createdAt": "2020-12-04T15:17:03Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java", "diffHunk": "@@ -37,28 +41,92 @@\n      * Indicates if the child exists.\n      * @return True, if the child exists. False otherwise.\n      */\n-    boolean isPresent();\n+    default boolean isPresent() {\n+        return get() != null;\n+    }\n \n     /**\n-     * Provides a null-safe way to operate on the value of the child, and return an\n-     * {@link Optional} with the result of the operation. This allowes the caller to\n-     * continue to operate in a null-safe fashion.\n-     * @param func The function to apply to the value\n+     * Convert this Child to an {@link Optional}\n+     * @return An {@link Optional} with the contained value.\n+     */\n+    default Optional<T> asOptional() {\n+        return Optional.ofNullable(get());\n+    }\n+\n+    /**\n+     * Navigates to the {@link Child} provided by an accessor function.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MDQ5Mjky", "url": "https://github.com/redhataccess/pantheon/pull/393#pullrequestreview-545049292", "createdAt": "2020-12-04T15:18:16Z", "commit": {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToxODoxNlrOH_VarQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToxODoxNlrOH_VarQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3MzIyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(isPresent()) {\n          \n          \n            \n                    if(isPresent()) {  // <-- Applies to the parent (aka the current node in navigation)", "url": "https://github.com/redhataccess/pantheon/pull/393#discussion_r536173229", "createdAt": "2020-12-04T15:18:16Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java", "diffHunk": "@@ -37,28 +41,92 @@\n      * Indicates if the child exists.\n      * @return True, if the child exists. False otherwise.\n      */\n-    boolean isPresent();\n+    default boolean isPresent() {\n+        return get() != null;\n+    }\n \n     /**\n-     * Provides a null-safe way to operate on the value of the child, and return an\n-     * {@link Optional} with the result of the operation. This allowes the caller to\n-     * continue to operate in a null-safe fashion.\n-     * @param func The function to apply to the value\n+     * Convert this Child to an {@link Optional}\n+     * @return An {@link Optional} with the contained value.\n+     */\n+    default Optional<T> asOptional() {\n+        return Optional.ofNullable(get());\n+    }\n+\n+    /**\n+     * Navigates to the {@link Child} provided by an accessor function.\n+     * @param childAccessor A function which given a {@link SlingModel} type, will\n+     *                      yield a child\n      * @param <R>\n-     * @return An optional indicating the result of the operation. If the operation\n-     * returns null, or if the value of this child was not present in the first place,\n-     * this returns an empty Optional\n-     * @deprecated Use {@link ResourceTraversal#traverseFrom(SlingModel)}\n-     * for safe resource traversals\n+     * @return A {@link Child} (may be non-existent) as indicated by the accessor.\n      */\n-    @Deprecated\n-    <R> Optional<R> map(Function<? super T, ? extends R> func);\n+    default <R extends SlingModel> Child<R> toChild(Function<? super T, Child<R>> childAccessor) {\n+        if(isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "426268444daf02cf0b751fbf22d5ee76e0fa1036", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/426268444daf02cf0b751fbf22d5ee76e0fa1036", "committedDate": "2020-12-04T15:19:07Z", "message": "Update pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java\n\nCo-authored-by: Ben Radey <benr@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae7c27e7228002eeafae1a68d63a96393f422410", "author": {"user": {"login": "carlosmunoz", "name": "Carlos Munoz"}}, "url": "https://github.com/redhataccess/pantheon/commit/ae7c27e7228002eeafae1a68d63a96393f422410", "committedDate": "2020-12-04T15:19:13Z", "message": "Update pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java\n\nCo-authored-by: Ben Radey <benr@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MDYzOTA5", "url": "https://github.com/redhataccess/pantheon/pull/393#pullrequestreview-545063909", "createdAt": "2020-12-04T15:34:58Z", "commit": {"oid": "ae7c27e7228002eeafae1a68d63a96393f422410"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2019, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}