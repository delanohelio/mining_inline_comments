{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MTk0MTAy", "number": 301, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjo1NzowNVrOEA95iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMToyOTowNlrOECVGJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDQ5NjA4OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/frontend/src/app/moduleDisplay.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjo1NzowNVrOGckuCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjowODo0MlrOGeFn5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxNDkyMA==", "bodyText": "hmmm.. since this is the portal view, I thought we said the uuid in the portal url would be the module variant's id (hence making the variant parameter unnecessary)", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r432614920", "createdAt": "2020-05-29T16:57:05Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/frontend/src/app/moduleDisplay.tsx", "diffHunk": "@@ -66,7 +66,7 @@ class ModuleDisplay extends Component<any, any, any> {\n                         {this.state.releaseUpdateDate.trim() !== \"\" && this.state.releaseUpdateDate !== '-'\n                             && this.state.moduleUUID !== \"\"\n                             && this.state.portalHost !== \"\"\n-                            && <span><a href={this.state.portalHost + '/topics/en-us/' + this.state.moduleUUID} target=\"_blank\">View on Customer Portal  <i className=\"fa pf-icon-arrow\" /></a> </span>\n+                            && <span><a href={this.state.portalHost + '/topics/en-us/' + this.state.moduleUUID + '?variant=' + this.state.variant} target=\"_blank\">View on Customer Portal  <i className=\"fa pf-icon-arrow\" /></a> </span>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62fbf8d45feecb3ed3997e5ef2b9cbfd2c20d964"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIwMjU5OA==", "bodyText": "Per our conversation and team discussion, I updated the code to use variantUUID for Customer Portal view_url", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434202598", "createdAt": "2020-06-02T22:08:42Z", "author": {"login": "xdavidson"}, "path": "pantheon-bundle/frontend/src/app/moduleDisplay.tsx", "diffHunk": "@@ -66,7 +66,7 @@ class ModuleDisplay extends Component<any, any, any> {\n                         {this.state.releaseUpdateDate.trim() !== \"\" && this.state.releaseUpdateDate !== '-'\n                             && this.state.moduleUUID !== \"\"\n                             && this.state.portalHost !== \"\"\n-                            && <span><a href={this.state.portalHost + '/topics/en-us/' + this.state.moduleUUID} target=\"_blank\">View on Customer Portal  <i className=\"fa pf-icon-arrow\" /></a> </span>\n+                            && <span><a href={this.state.portalHost + '/topics/en-us/' + this.state.moduleUUID + '?variant=' + this.state.variant} target=\"_blank\">View on Customer Portal  <i className=\"fa pf-icon-arrow\" /></a> </span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxNDkyMA=="}, "originalCommit": {"oid": "62fbf8d45feecb3ed3997e5ef2b9cbfd2c20d964"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDUwOTgxOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjo1OTozNVrOGck3Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjowODo1M1rOGeFoLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxNzI3NA==", "bodyText": "I'm not sure this is where this creation should happen... but perhaps there's no better place. At the very least lets add a comment indicating that we should re-evaluate where this node gets created.", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r432617274", "createdAt": "2020-05-29T16:59:35Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "diffHunk": "@@ -300,6 +294,9 @@ private String buildModule(@Nonnull Module base, @Nonnull Locale locale, @Nonnul\n                         .jcrData().get());\n                 html = asciidoctor.convert(content.toString(), ob.get());\n                 cacheContent(moduleVersion, html);\n+\n+                // ack_status\n+                moduleVersion.ackStatus().getOrCreate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62fbf8d45feecb3ed3997e5ef2b9cbfd2c20d964"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIwMjY3MQ==", "bodyText": "comment added", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434202671", "createdAt": "2020-06-02T22:08:53Z", "author": {"login": "xdavidson"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "diffHunk": "@@ -300,6 +294,9 @@ private String buildModule(@Nonnull Module base, @Nonnull Locale locale, @Nonnul\n                         .jcrData().get());\n                 html = asciidoctor.convert(content.toString(), ob.get());\n                 cacheContent(moduleVersion, html);\n+\n+                // ack_status\n+                moduleVersion.ackStatus().getOrCreate();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxNzI3NA=="}, "originalCommit": {"oid": "62fbf8d45feecb3ed3997e5ef2b9cbfd2c20d964"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzA0MDIzOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/frontend/src/app/versions.test.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzo1MzowOFrOGec5ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTo1MDo0N1rOGerCJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NDAwMw==", "bodyText": "hmmm... I don't think this resource path is valid after the JCR changes.", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434584003", "createdAt": "2020-06-03T13:53:08Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/frontend/src/app/versions.test.tsx", "diffHunk": "@@ -15,7 +15,7 @@ const props = {\n     onGetProduct: (productValue) => anymatch,\n     onGetVersion: (versionValue) => anymatch,\n     productInfo: \"Red Hat Enterprise Linux\",\n-    updateDate: (draftUpdateDate, releaseUpdateDate, releaseVersion, moduleUUID) => anymatch,\n+    updateDate: (draftUpdateDate, releaseUpdateDate, releaseVersion, variantUUID) => anymatch,\n     variant: \"test\",\n     versionModulePath: \"/modules/test/en_US/1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5de92d26ed920ef46573905699c0fe3c685059"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgxNTUyNg==", "bodyText": "updated.", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434815526", "createdAt": "2020-06-03T19:50:47Z", "author": {"login": "xdavidson"}, "path": "pantheon-bundle/frontend/src/app/versions.test.tsx", "diffHunk": "@@ -15,7 +15,7 @@ const props = {\n     onGetProduct: (productValue) => anymatch,\n     onGetVersion: (versionValue) => anymatch,\n     productInfo: \"Red Hat Enterprise Linux\",\n-    updateDate: (draftUpdateDate, releaseUpdateDate, releaseVersion, moduleUUID) => anymatch,\n+    updateDate: (draftUpdateDate, releaseUpdateDate, releaseVersion, variantUUID) => anymatch,\n     variant: \"test\",\n     versionModulePath: \"/modules/test/en_US/1\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NDAwMw=="}, "originalCommit": {"oid": "dc5de92d26ed920ef46573905699c0fe3c685059"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzA0NDEyOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzo1Mzo1M1rOGec8KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToyMjoyN1rOGeqDgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NDYxNw==", "bodyText": "I would just get rid of the comment", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434584617", "createdAt": "2020-06-03T13:53:53Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "diffHunk": "@@ -102,6 +104,7 @@ protected String getQuery(SlingHttpServletRequest request) {\n                     .append(\"jcr:like(*/*/*/*/metadata/@jcr:title,'%\" + searchParam + \"%') \")\n                     .append(\"or jcr:like(*/*/*/*/metadata/@jcr:description,'%\" + searchParam + \"%')\")\n                     .append(\"or jcr:like(*/*/*/*/cached_html/jcr:content/@jcr:data,'%\" + searchParam + \"%')\")\n+//                    .append(\"or jcr:like(*/*/source/@jcr:created,'%\" + searchParam + \"%') \")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5de92d26ed920ef46573905699c0fe3c685059"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5OTQ5MQ==", "bodyText": "done", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434799491", "createdAt": "2020-06-03T19:22:27Z", "author": {"login": "xdavidson"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "diffHunk": "@@ -102,6 +104,7 @@ protected String getQuery(SlingHttpServletRequest request) {\n                     .append(\"jcr:like(*/*/*/*/metadata/@jcr:title,'%\" + searchParam + \"%') \")\n                     .append(\"or jcr:like(*/*/*/*/metadata/@jcr:description,'%\" + searchParam + \"%')\")\n                     .append(\"or jcr:like(*/*/*/*/cached_html/jcr:content/@jcr:data,'%\" + searchParam + \"%')\")\n+//                    .append(\"or jcr:like(*/*/source/@jcr:created,'%\" + searchParam + \"%') \")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NDYxNw=="}, "originalCommit": {"oid": "dc5de92d26ed920ef46573905699c0fe3c685059"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzA2MjAwOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzo1Nzo0MlrOGedHVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMTozMTozNlrOGeuVbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NzQ3OQ==", "bodyText": "instead of this conditional you coul use the traversal api. It would yield cleaner, more concise code.", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434587479", "createdAt": "2020-06-03T13:57:42Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "diffHunk": "@@ -183,11 +187,14 @@ protected String getQuery(SlingHttpServletRequest request) {\n     protected Map<String, Object> resourceToMap(Resource resource) {\n         Module module = resource.adaptTo(Module.class);\n \n-        String variantName = module.getWorkspace()\n+        String variantName = DEFAULT_VARIANT_NAME;\n+        Stream<ModuleVariantDefinition> mvd = module.getWorkspace()\n                 .moduleVariantDefinitions().get()\n-                .getVariants()\n-                .findFirst().get()\n-                .getName();\n+                .getVariants();\n+\n+        if (mvd != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5de92d26ed920ef46573905699c0fe3c685059"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgxMjUzNA==", "bodyText": "updated.", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434812534", "createdAt": "2020-06-03T19:44:42Z", "author": {"login": "xdavidson"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "diffHunk": "@@ -183,11 +187,14 @@ protected String getQuery(SlingHttpServletRequest request) {\n     protected Map<String, Object> resourceToMap(Resource resource) {\n         Module module = resource.adaptTo(Module.class);\n \n-        String variantName = module.getWorkspace()\n+        String variantName = DEFAULT_VARIANT_NAME;\n+        Stream<ModuleVariantDefinition> mvd = module.getWorkspace()\n                 .moduleVariantDefinitions().get()\n-                .getVariants()\n-                .findFirst().get()\n-                .getName();\n+                .getVariants();\n+\n+        if (mvd != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NzQ3OQ=="}, "originalCommit": {"oid": "dc5de92d26ed920ef46573905699c0fe3c685059"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg2OTYxNA==", "bodyText": "\ud83d\udc4d\n(you could keep traversing all the way down to the variant name and avoid that null check \ud83d\ude03 )", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434869614", "createdAt": "2020-06-03T21:31:36Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "diffHunk": "@@ -183,11 +187,14 @@ protected String getQuery(SlingHttpServletRequest request) {\n     protected Map<String, Object> resourceToMap(Resource resource) {\n         Module module = resource.adaptTo(Module.class);\n \n-        String variantName = module.getWorkspace()\n+        String variantName = DEFAULT_VARIANT_NAME;\n+        Stream<ModuleVariantDefinition> mvd = module.getWorkspace()\n                 .moduleVariantDefinitions().get()\n-                .getVariants()\n-                .findFirst().get()\n-                .getName();\n+                .getVariants();\n+\n+        if (mvd != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NzQ3OQ=="}, "originalCommit": {"oid": "dc5de92d26ed920ef46573905699c0fe3c685059"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzA2NDQ5OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/VariantJsonServlet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzo1ODoxNFrOGedIzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzo1ODoxNFrOGedIzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4Nzg1NQ==", "bodyText": "love this url style! \ud83d\udc4d", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434587855", "createdAt": "2020-06-03T13:58:14Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/VariantJsonServlet.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package com.redhat.pantheon.servlet.module;\n+\n+import com.google.common.base.Charsets;\n+import com.ibm.icu.util.ULocale;\n+import com.redhat.pantheon.html.Html;\n+import com.redhat.pantheon.model.ProductVersion;\n+import com.redhat.pantheon.model.api.FileResource;\n+import com.redhat.pantheon.model.module.Metadata;\n+import com.redhat.pantheon.model.module.ModuleVariant;\n+import com.redhat.pantheon.model.module.ModuleVersion;\n+import com.redhat.pantheon.servlet.AbstractJsonSingleQueryServlet;\n+import com.redhat.pantheon.servlet.ServletUtils;\n+import org.apache.sling.api.SlingHttpServletRequest;\n+import org.apache.sling.api.resource.Resource;\n+import org.apache.sling.servlets.annotations.SlingServletPaths;\n+import org.jetbrains.annotations.NotNull;\n+import org.osgi.framework.Constants;\n+import org.osgi.service.component.annotations.Component;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.annotation.Nonnull;\n+import javax.jcr.RepositoryException;\n+import javax.servlet.Servlet;\n+import java.util.*;\n+\n+import static com.redhat.pantheon.conf.GlobalConfig.CONTENT_TYPE;\n+import static com.redhat.pantheon.model.api.util.ResourceTraversal.traverseFrom;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+\n+@Component(\n+        service = Servlet.class,\n+        property = {\n+                Constants.SERVICE_DESCRIPTION + \"=Servlet to facilitate GET operation which accepts locale and module uuid to output module data\",\n+                Constants.SERVICE_VENDOR + \"=Red Hat Content Tooling team\"\n+        })\n+// /api/module/variant.json/${variantUuid}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5de92d26ed920ef46573905699c0fe3c685059"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODc4MjQ1OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/extension/HydraIntegration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMToyOTowNlrOGeuQtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMToyOTowNlrOGeuQtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg2ODQwNg==", "bodyText": "Not a blocker, but we should add the uuid field to the ModuleVariant model so we can use it.", "url": "https://github.com/redhataccess/pantheon/pull/301#discussion_r434868406", "createdAt": "2020-06-03T21:29:06Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/extension/HydraIntegration.java", "diffHunk": "@@ -241,32 +242,26 @@ public void checkServerTrusted(X509Certificate[] certs, String authType) {\n     private String buildModuleVersionUri(ModuleVersion moduleVersion) {\n         StringSubstitutor strSubs = new StringSubstitutor();\n         HashMap values = Maps.newHashMap();\n-        values.put(\"moduleUuid\", moduleVersion.getParent().getParent().getParent().getParent().uuid().get());\n-        values.put(\"localeId\", moduleVersion.getParent().getParent().getParent().getName());\n-        values.put(\"variantName\", moduleVersion.getParent().getName());\n+        values.put(\"variantUuid\", moduleVersion.getParent().getValueMap().containsKey(JcrConstants.JCR_UUID) ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ce99b0b382323511fcad0446dc7bff938f0647d"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 298, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}