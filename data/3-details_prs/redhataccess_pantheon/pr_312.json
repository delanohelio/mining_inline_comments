{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMTAxMTI3", "number": 312, "title": "Module uploads will now build canonical variant", "bodyText": "Variant selected is either the first match if any variant definitions have the canonical flag set, otherwise it builds the \"DEFAULT\" variant for modules.\nOne thing this does NOT have is the logic to copy metadata from any old released version onto the draft version. Is that functionality we still want? @xdavidson @carlosmunoz", "createdAt": "2020-06-09T22:37:11Z", "url": "https://github.com/redhataccess/pantheon/pull/312", "merged": true, "mergeCommit": {"oid": "f119486f458642630e3e52aa60aeee0e0e4ec166"}, "closed": true, "closedAt": "2020-06-11T19:50:56Z", "author": {"login": "benradey"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcps4w0AH2gAyNDMyMTAxMTI3OjFmNzdkNDlmNGVmNTUxYjQ4MzNhMmIyNzlhMTJkNzJjN2EyZjFmMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqTm3cgFqTQyOTIyODY5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1f77d49f4ef551b4833a2b279a12d72c7a2f1f22", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/1f77d49f4ef551b4833a2b279a12d72c7a2f1f22", "committedDate": "2020-06-09T22:34:48Z", "message": "upload builds canonical variant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NTk1MjA2", "url": "https://github.com/redhataccess/pantheon/pull/312#pullrequestreview-427595206", "createdAt": "2020-06-09T22:43:05Z", "commit": {"oid": "1f77d49f4ef551b4833a2b279a12d72c7a2f1f22"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMjo0MzowNVrOGhe5OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMjo0NTowM1rOGhe7nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2MjM2MQ==", "bodyText": "lets break this up into multiple lines, both for readability and in case we are hit by NPEs", "url": "https://github.com/redhataccess/pantheon/pull/312#discussion_r437762361", "createdAt": "2020-06-09T22:43:05Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/ModuleVersionUpload.java", "diffHunk": "@@ -103,13 +121,19 @@ protected void doRun(SlingHttpServletRequest request, PostResponse response, Lis\n                 draftSrc.jcrContent().getOrCreate()\n                         .mimeType().set(\"text/x-asciidoc\");\n \n-                // TODO Html can no longer be generated on upload since there might be too many variants\n-                // TODO This will need to be re-thought since metadata now lies on the variant\n+                resolver.commit();\n+\n+                Map<String, Object> context = asciidoctorService.buildContextFromRequest(request);\n+                asciidoctorService.getModuleHtml(module, localeObj, module.getWorkspace().getCanonicalVariantName(),\n+                        true, context, true);\n+\n+                Metadata metadata = moduleLocale.variants().getOrCreate().variant(moduleLocale.getWorkspace().getCanonicalVariantName()).getOrCreate().draft().getOrCreate().metadata().getOrCreate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f77d49f4ef551b4833a2b279a12d72c7a2f1f22"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2Mjk3NQ==", "bodyText": "a comment for all these tests:\nwe should at least add verify calls to ensure the appropriate methods are being called in the asciidoctorService and serviceResourceResolvedProvider objects", "url": "https://github.com/redhataccess/pantheon/pull/312#discussion_r437762975", "createdAt": "2020-06-09T22:45:03Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/test/java/com/redhat/pantheon/servlet/module/ModuleVersionUploadTest.java", "diffHunk": "@@ -49,7 +74,7 @@ void createFirstVersion() throws Exception {\n         // Then\n         assertEquals(HttpServletResponse.SC_CREATED, response.getStatusCode());\n         assertNotNull(slingContext.resourceResolver().getResource(\"/content/repositories/test_workspace/entities/new/proc_module/es_ES/source/draft/jcr:content\"));\n-        assertNull(slingContext.resourceResolver().getResource(\"/content/repositories/test_workspace/entities/new/proc_module/es_ES/variants\"));\n+        assertNotNull(slingContext.resourceResolver().getResource(\"/content/repositories/test_workspace/entities/new/proc_module/es_ES/variants\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f77d49f4ef551b4833a2b279a12d72c7a2f1f22"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fa204982c2d0694b618e2a0b17c65f93b06ed5a", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/4fa204982c2d0694b618e2a0b17c65f93b06ed5a", "committedDate": "2020-06-11T19:36:31Z", "message": "Updates based on pr feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4839a15caad0eeb4a5f56214b7a45e0b2b925ed", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/f4839a15caad0eeb4a5f56214b7a45e0b2b925ed", "committedDate": "2020-06-11T19:41:13Z", "message": "Removing unused reference to serviceResourceResolvedProvider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjI4Njk4", "url": "https://github.com/redhataccess/pantheon/pull/312#pullrequestreview-429228698", "createdAt": "2020-06-11T19:41:33Z", "commit": {"oid": "4fa204982c2d0694b618e2a0b17c65f93b06ed5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2143, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}