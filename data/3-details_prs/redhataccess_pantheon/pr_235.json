{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MzczNjEz", "number": 235, "title": "Ccs 3384 backend fixes2", "bodyText": "This PR injects metadata values to the header section of the html", "createdAt": "2020-02-19T20:14:58Z", "url": "https://github.com/redhataccess/pantheon/pull/235", "merged": true, "mergeCommit": {"oid": "e083799eedf0538494cb5c10ea5ec5f2cb8f7fde"}, "closed": true, "closedAt": "2020-02-20T18:40:39Z", "author": {"login": "xdavidson"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEUOjzgH2gAyMzc3MzczNjEzOjAyNGFlOGE1ZjY4YjcyMWIwNDA0MjM0YzY2MTdlMTUxOGQ1ZjM4MTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGPUx3AFqTM2MjEyNzkxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "024ae8a5f68b721b0404234c6617e1518d5f3817", "author": {"user": {"login": "xdavidson", "name": "Lisa Davidson"}}, "url": "https://github.com/redhataccess/pantheon/commit/024ae8a5f68b721b0404234c6617e1518d5f3817", "committedDate": "2020-02-14T18:55:47Z", "message": "fix attribute names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83a8e08da080130c739587bfc39ddce2485d8491", "author": {"user": {"login": "xdavidson", "name": "Lisa Davidson"}}, "url": "https://github.com/redhataccess/pantheon/commit/83a8e08da080130c739587bfc39ddce2485d8491", "committedDate": "2020-02-18T21:06:31Z", "message": "populate product/version/update/publish info from metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c057abfb4124d7e2bc9362b7bc7269f34f60f1f1", "author": {"user": {"login": "xdavidson", "name": "Lisa Davidson"}}, "url": "https://github.com/redhataccess/pantheon/commit/c057abfb4124d7e2bc9362b7bc7269f34f60f1f1", "committedDate": "2020-02-19T18:24:16Z", "message": "inject metadata to the new variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff2a8feefafa124762ba223b93dfcdcb12690ae3", "author": {"user": {"login": "xdavidson", "name": "Lisa Davidson"}}, "url": "https://github.com/redhataccess/pantheon/commit/ff2a8feefafa124762ba223b93dfcdcb12690ae3", "committedDate": "2020-02-19T19:24:30Z", "message": "remove debugging messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a77552a500b3ec7663a7fd2d0072f32ee2ecddea", "author": {"user": {"login": "xdavidson", "name": "Lisa Davidson"}}, "url": "https://github.com/redhataccess/pantheon/commit/a77552a500b3ec7663a7fd2d0072f32ee2ecddea", "committedDate": "2020-02-19T19:26:11Z", "message": "resolve merge confilcts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDIzNzM5", "url": "https://github.com/redhataccess/pantheon/pull/235#pullrequestreview-361423739", "createdAt": "2020-02-19T20:46:06Z", "commit": {"oid": "a77552a500b3ec7663a7fd2d0072f32ee2ecddea"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMDo0NjowN1rOFr2_0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMDo0ODo1OFrOFr3FKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUzNDE2Mw==", "bodyText": "massive import order change \ud83d\ude1e\nWe should align all of our editors... somehow, as these changes obfuscate things", "url": "https://github.com/redhataccess/pantheon/pull/235#discussion_r381534163", "createdAt": "2020-02-19T20:46:07Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "diffHunk": "@@ -27,10 +25,21 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import javax.annotation.Nonnull;\n-import java.util.Map;\n-\n-import static java.util.stream.Collectors.toMap;\n+import com.google.common.base.Charsets;\n+import com.google.common.hash.HashCode;\n+import com.google.common.hash.Hashing;\n+import com.ibm.icu.text.DateFormat;\n+import com.redhat.pantheon.asciidoctor.extension.HtmlModulePostprocessor;\n+import com.redhat.pantheon.asciidoctor.extension.MetadataExtractorTreeProcessor;\n+import com.redhat.pantheon.asciidoctor.extension.SlingResourceIncludeProcessor;\n+import com.redhat.pantheon.conf.GlobalConfig;\n+import com.redhat.pantheon.extension.HydraIntegration;\n+import com.redhat.pantheon.model.ProductVersion;\n+import com.redhat.pantheon.model.module.Content;\n+import com.redhat.pantheon.model.module.Metadata;\n+import com.redhat.pantheon.model.module.Module;\n+import com.redhat.pantheon.model.module.ModuleVersion;\n+import com.redhat.pantheon.sling.ServiceResourceResolverProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a77552a500b3ec7663a7fd2d0072f32ee2ecddea"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUzNTUzMA==", "bodyText": "you should use the new method here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            productName = productVersion.getProduct().getValueMap().get(\"name\").toString();\n          \n          \n            \n                            productName = productVersion.getProduct().name().get();", "url": "https://github.com/redhataccess/pantheon/pull/235#discussion_r381535530", "createdAt": "2020-02-19T20:48:58Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "diffHunk": "@@ -142,25 +151,55 @@ private String buildModule(Module base, ModuleVersion moduleVersion, Map<String,\n         try (ResourceResolver serviceResourceResolver = serviceResourceResolverProvider.getServiceResourceResolver()) {\n             moduleVersion = serviceResourceResolver.getResource(moduleVersion.getPath()).adaptTo(ModuleVersion.class);\n \n+            // process product and version.\n+            ProductVersion productVersion = null;\n+            productVersion = moduleVersion.metadata().map(Metadata::productVersion)\n+                    .map(t -> {\n+                        try {\n+                            return t.getReference();\n+                        } catch (RepositoryException e) {\n+                            return null;\n+                        }\n+                    })\n+                    .get();\n+            String productName = null;\n+            if (productVersion != null) {\n+                productName = productVersion.getProduct().getValueMap().get(\"name\").toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a77552a500b3ec7663a7fd2d0072f32ee2ecddea"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f712ffeee39abe99fc2e5caaf374d34aae31d09d", "author": {"user": {"login": "xdavidson", "name": "Lisa Davidson"}}, "url": "https://github.com/redhataccess/pantheon/commit/f712ffeee39abe99fc2e5caaf374d34aae31d09d", "committedDate": "2020-02-19T23:32:44Z", "message": "fix exceptions when productVersion is not set or module is not published"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45bf00bb62625fec5d151f6ef70cd2c898b3c138", "author": {"user": {"login": "xdavidson", "name": "Lisa Davidson"}}, "url": "https://github.com/redhataccess/pantheon/commit/45bf00bb62625fec5d151f6ef70cd2c898b3c138", "committedDate": "2020-02-20T01:22:04Z", "message": "fix test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTk3NDA4", "url": "https://github.com/redhataccess/pantheon/pull/235#pullrequestreview-361597408", "createdAt": "2020-02-20T02:31:37Z", "commit": {"oid": "45bf00bb62625fec5d151f6ef70cd2c898b3c138"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMjozMTozN1rOFsABRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMjozMTozN1rOFsABRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY4MTk4OA==", "bodyText": "I think this can be simplified. The map calls are supposed to provide null-safety, but from your changes I suspect they aren\u2019t at the end. The last get() call will throw a NoSuchElementException if the updated date is not present, so I suggest the following:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (moduleVersion.metadata().get().getValueMap().containsKey(\"dateUploaded\")) {\n          \n          \n            \n                        Optional<Calendar> updatedDate = moduleVersion.metadata()\n          \n          \n            \n                                .map(Metadata::dataUploaded)\n          \n          \n            \n                                .map(Supplier::get);\n          \n      \n    \n    \n  \n\nAnd then in line 179 you should be able to do:\n            if(updatedDate.isPresent()) {\n                arts.attribute(\u201cpantheonupdateddate\u201d,  dateFormat.format(updatedDate.get().getTime()));\n            }", "url": "https://github.com/redhataccess/pantheon/pull/235#discussion_r381681988", "createdAt": "2020-02-20T02:31:37Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "diffHunk": "@@ -153,30 +151,38 @@ private String buildModule(Module base, ModuleVersion moduleVersion, Map<String,\n \n             // process product and version.\n             ProductVersion productVersion = null;\n-            productVersion = moduleVersion.metadata().map(Metadata::productVersion)\n-                    .map(t -> {\n-                        try {\n-                            return t.getReference();\n-                        } catch (RepositoryException e) {\n-                            return null;\n-                        }\n-                    })\n-                    .get();\n+            if (moduleVersion.metadata().get().getValueMap().containsKey(\"productVersion\")) {\n+                productVersion = moduleVersion.metadata().map(Metadata::productVersion)\n+                        .map(t -> {\n+                            try {\n+                                return t.getReference();\n+                            } catch (RepositoryException e) {\n+                                return null;\n+                            }\n+                        })\n+                        .get();\n+            }\n+\n             String productName = null;\n             if (productVersion != null) {\n-                productName = productVersion.getProduct().getValueMap().get(\"name\").toString();\n+                productName = productVersion.getProduct().name().get();\n+            }\n+            Calendar updatedDate = null;\n+            if (moduleVersion.metadata().get().getValueMap().containsKey(\"dateUploaded\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45bf00bb62625fec5d151f6ef70cd2c898b3c138"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTE5MzI0", "url": "https://github.com/redhataccess/pantheon/pull/235#pullrequestreview-362119324", "createdAt": "2020-02-20T18:07:38Z", "commit": {"oid": "45bf00bb62625fec5d151f6ef70cd2c898b3c138"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODowNzozOFrOFsdtAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODowNzozOFrOFsdtAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2ODMyMw==", "bodyText": "\ud83d\udc4d I guess this was never changed, but I wonder why it's presenting problems only now \ud83e\udd14", "url": "https://github.com/redhataccess/pantheon/pull/235#discussion_r382168323", "createdAt": "2020-02-20T18:07:38Z", "author": {"login": "carlosmunoz"}, "path": "pantheon-bundle/src/test/java/com/redhat/pantheon/asciidoctor/AsciidoctorServiceTest.java", "diffHunk": "@@ -75,16 +76,16 @@ public void testGetModuleHtmlWhenCached() throws Exception {\n \n         // Given\n         slingContext.build()\n-                .resource(\"/module/locales/en_US/released/metadata\")\n-                .resource(\"/module/locales/en_US/released/content/asciidoc/jcr:content\",\n+                .resource(\"/module/en_US/released/metadata\")\n+                .resource(\"/module/en_US/released/content/asciidoc/jcr:content\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45bf00bb62625fec5d151f6ef70cd2c898b3c138"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7be85216c8c132cce459953b01b754d1448d9f86", "author": {"user": {"login": "xdavidson", "name": "Lisa Davidson"}}, "url": "https://github.com/redhataccess/pantheon/commit/7be85216c8c132cce459953b01b754d1448d9f86", "committedDate": "2020-02-20T18:17:51Z", "message": "code review fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTI3OTEy", "url": "https://github.com/redhataccess/pantheon/pull/235#pullrequestreview-362127912", "createdAt": "2020-02-20T18:20:54Z", "commit": {"oid": "7be85216c8c132cce459953b01b754d1448d9f86"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2057, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}