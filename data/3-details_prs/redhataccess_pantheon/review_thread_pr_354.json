{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MzIxMTA0", "number": 354, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODowNToxN1rOES7Xtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOTowNzo0N1rOEW7EXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjgyNTUxOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODowNToxN1rOG4YY5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMToxNjoxNVrOG4fMKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3MzAzMA==", "bodyText": "Thanks, invisible whitespace bugs me. :)", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r461773030", "createdAt": "2020-07-28T18:05:17Z", "author": {"login": "benradey"}, "path": "README.md", "diffHunk": "@@ -22,9 +22,9 @@ and built on top of Apache sling.\n \n ### Prerequisites\n \n-* You must have an account on GitHub.  \n+* You must have an account on GitHub.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4NDQ1Nw==", "bodyText": "Agree!! I just realized my editor hadn't been removing trailing white space for me this week.\nThanks!", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r461884457", "createdAt": "2020-07-28T21:16:15Z", "author": {"login": "wesruv"}, "path": "README.md", "diffHunk": "@@ -22,9 +22,9 @@ and built on top of Apache sling.\n \n ### Prerequisites\n \n-* You must have an account on GitHub.  \n+* You must have an account on GitHub.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3MzAzMA=="}, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjgyNzQzOnYy", "diffSide": "LEFT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODowNTo1M1rOG4YaFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODowNTo1M1rOG4YaFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3MzMzNA==", "bodyText": "Glad you got rid of this, it always felt like a hack.", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r461773334", "createdAt": "2020-07-28T18:05:53Z", "author": {"login": "benradey"}, "path": "README.md", "diffHunk": "@@ -182,27 +182,26 @@ This will install the code in this project on the running Sling instance, where\n be previewed and modified.\n ### Developing the frontend code\n \n-If making modifications that are entirely contained within the frontend, it is not necessary to use maven to rebuild and redeploy the package on every change.\n-\n-These instructions provide an imperfect-but-workable shortcut that can accelerate development.\n+If making modifications that are entirely contained within the frontend, follow the instructions to build the application in this README, then\n \n ```sh\n-cd pantheon/frontend\n+cd pantheon-bundle/frontend\n+# Install/update node deps\n+yarn\n+# Build the app\n+yarn build\n+# Run React dev server/process\n yarn start\n ```\n \n+See the pantheon-bundle/frontend/README.md for more information on the development server\n+\n NOTE: It will likely be necessary to increase your inotify limit to ensure that yarn is able to detect changes in every project file.\n If you are running into issues with yarn not automatically detecting saved changes, run the following command (its effects are permenent):\n ```sh\n echo fs.inotify.max_user_watches=65535 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n ```\n \n-```sh\n-chromium-browser --disable-web-security --user-data-dir=/home/user/anywhere/chromeDev/ &\n-```\n-\n-This works because there is code in app.tsx that preempts all fetch() calls and checks if the app is being served from localhost. If so, it modifies the request to point to localhost:8080 specifically, rather than localhost:9000 which is where webpack-dev-server serves the frontend code from.\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjg1NDAzOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/frontend/src/app/app.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODoxMzozNlrOG4YqqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowNTozMlrOG4864g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3NzU3Ng==", "bodyText": "I do not recall why we originally needed this... are you sure it is still necessary? Did you try and remove it completely?\n(I'm the one who wrote this method in the first place... I don't recall if it was for a frontend development workaround, or if it was so that our yarn tests would pass... if only I had included some comments about this...)", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r461777576", "createdAt": "2020-07-28T18:13:36Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/frontend/src/app/app.tsx", "diffHunk": "@@ -27,12 +27,16 @@ class App extends Component<any, IAppState> {\n \n     const realFetch = self.fetch\n     self.fetch = (input: RequestInfo, init?: RequestInit | undefined) => {\n-      let newInput = input.toString()\n-      if (window.location.host.startsWith('localhost') && input.toString().startsWith('/')) {\n+      let newInput = input.toString();\n+      if (\n+        window.location.host.startsWith('localhost')\n+        // Only changing requests Sling's old port\n+        && parseInt(window.location.port) === 8080\n+        && input.toString().startsWith('/')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4NTgyMQ==", "bodyText": "It's required if you want it to work inside of Karaf. I'm not sure how all that stuff works, so I thought it'd be fine to leave it.\nWhat's really weird is that the code is trying to reach :8080 in Karaf, when it should be :8181, if we fix that then we can definitely get rid of this code. No idea what's causing it.", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r461885821", "createdAt": "2020-07-28T21:19:01Z", "author": {"login": "wesruv"}, "path": "pantheon-bundle/frontend/src/app/app.tsx", "diffHunk": "@@ -27,12 +27,16 @@ class App extends Component<any, IAppState> {\n \n     const realFetch = self.fetch\n     self.fetch = (input: RequestInfo, init?: RequestInit | undefined) => {\n-      let newInput = input.toString()\n-      if (window.location.host.startsWith('localhost') && input.toString().startsWith('/')) {\n+      let newInput = input.toString();\n+      if (\n+        window.location.host.startsWith('localhost')\n+        // Only changing requests Sling's old port\n+        && parseInt(window.location.port) === 8080\n+        && input.toString().startsWith('/')) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3NzU3Ng=="}, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3MTU1NA==", "bodyText": "I did some quick testing without the code and it doesn't look like it makes any difference anymore - so please take this opportunity to get rid of it.", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r462371554", "createdAt": "2020-07-29T15:05:32Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/frontend/src/app/app.tsx", "diffHunk": "@@ -27,12 +27,16 @@ class App extends Component<any, IAppState> {\n \n     const realFetch = self.fetch\n     self.fetch = (input: RequestInfo, init?: RequestInit | undefined) => {\n-      let newInput = input.toString()\n-      if (window.location.host.startsWith('localhost') && input.toString().startsWith('/')) {\n+      let newInput = input.toString();\n+      if (\n+        window.location.host.startsWith('localhost')\n+        // Only changing requests Sling's old port\n+        && parseInt(window.location.port) === 8080\n+        && input.toString().startsWith('/')) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3NzU3Ng=="}, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjg1NjUzOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/frontend/src/app/app.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODoxNDoxOFrOG4YsQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMToxODo0N1rOG4fRCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3Nzk4NA==", "bodyText": "\ud83e\udd2f", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r461777984", "createdAt": "2020-07-28T18:14:18Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/frontend/src/app/app.tsx", "diffHunk": "@@ -27,12 +27,16 @@ class App extends Component<any, IAppState> {\n \n     const realFetch = self.fetch\n     self.fetch = (input: RequestInfo, init?: RequestInit | undefined) => {\n-      let newInput = input.toString()\n-      if (window.location.host.startsWith('localhost') && input.toString().startsWith('/')) {\n+      let newInput = input.toString();\n+      if (\n+        window.location.host.startsWith('localhost')\n+        // Only changing requests Sling's old port\n+        && parseInt(window.location.port) === 8080\n+        && input.toString().startsWith('/')) {\n         newInput = 'http://localhost:8181' + input.toString()\n       }\n       console.log('Development fetch', input, '=>', newInput)\n-      return realFetch(newInput, init)\n+      return realFetch(newInput, init);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4NTcwNA==", "bodyText": "All this JS without colons makes me itchy \ud83d\ude02", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r461885704", "createdAt": "2020-07-28T21:18:47Z", "author": {"login": "wesruv"}, "path": "pantheon-bundle/frontend/src/app/app.tsx", "diffHunk": "@@ -27,12 +27,16 @@ class App extends Component<any, IAppState> {\n \n     const realFetch = self.fetch\n     self.fetch = (input: RequestInfo, init?: RequestInit | undefined) => {\n-      let newInput = input.toString()\n-      if (window.location.host.startsWith('localhost') && input.toString().startsWith('/')) {\n+      let newInput = input.toString();\n+      if (\n+        window.location.host.startsWith('localhost')\n+        // Only changing requests Sling's old port\n+        && parseInt(window.location.port) === 8080\n+        && input.toString().startsWith('/')) {\n         newInput = 'http://localhost:8181' + input.toString()\n       }\n       console.log('Development fetch', input, '=>', newInput)\n-      return realFetch(newInput, init)\n+      return realFetch(newInput, init);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3Nzk4NA=="}, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjcyMjY2OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/frontend/spandx.config.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowOTowNVrOG49E1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjozMDoxOFrOG5Ajdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NDEwMg==", "bodyText": "One thing I noticed while I was playing with this is this - while the application 99% works in \"hot frontend\" mode, the login screen does not. The login request results in a 404. I'm wondering if we need to add an additional route here to account for the login api endpoint?\nHere's a screenshot that might help:", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r462374102", "createdAt": "2020-07-29T15:09:05Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/frontend/spandx.config.js", "diffHunk": "@@ -0,0 +1,47 @@\n+require(\"dotenv\").config();\n+\n+// If we have a .env file respect the HOST and PORT settings\n+// If not default to localhost\n+const HOST = process.env.HOST || 'localhost';\n+// If not default to 9595\n+const PORT = process.env.PORT || 9595;\n+\n+module.exports = {\n+  host: {\n+    local: HOST\n+  },\n+  port: PORT,\n+  open: true,\n+  startPath: \"/\",\n+  verbose: true,\n+  routes: {\n+    // Here are some routing examples to get started.\n+    \"/\": {\n+      host: {\n+          local: \"http://localhost:9000\"\n+      },\n+      path: \"/\"\n+    },\n+\n+    \"/content\": {\n+      host: {\n+        local: \"http://localhost:8181\"\n+      }\n+    },\n+    \"/system\": {\n+      host: {\n+        local: \"http://localhost:8181\"\n+      }\n+    },\n+    \"/pantheon\": {\n+      host: {\n+        local: \"http://localhost:8181\"\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQzMTA5NA==", "bodyText": "Ahh, yes! I can capture that login request to make sure it goes to Karaf.\nGood catch!", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r462431094", "createdAt": "2020-07-29T16:30:18Z", "author": {"login": "wesruv"}, "path": "pantheon-bundle/frontend/spandx.config.js", "diffHunk": "@@ -0,0 +1,47 @@\n+require(\"dotenv\").config();\n+\n+// If we have a .env file respect the HOST and PORT settings\n+// If not default to localhost\n+const HOST = process.env.HOST || 'localhost';\n+// If not default to 9595\n+const PORT = process.env.PORT || 9595;\n+\n+module.exports = {\n+  host: {\n+    local: HOST\n+  },\n+  port: PORT,\n+  open: true,\n+  startPath: \"/\",\n+  verbose: true,\n+  routes: {\n+    // Here are some routing examples to get started.\n+    \"/\": {\n+      host: {\n+          local: \"http://localhost:9000\"\n+      },\n+      path: \"/\"\n+    },\n+\n+    \"/content\": {\n+      host: {\n+        local: \"http://localhost:8181\"\n+      }\n+    },\n+    \"/system\": {\n+      host: {\n+        local: \"http://localhost:8181\"\n+      }\n+    },\n+    \"/pantheon\": {\n+      host: {\n+        local: \"http://localhost:8181\"\n+      }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NDEwMg=="}, "originalCommit": {"oid": "74aad66fcb8c70829b9f9b8c634ca8b40293cf9d"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDcxOTAzOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/frontend/src/app/productDetails.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOTowNzo0N1rOG-bo7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOToyODozN1rOG-ch8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExNzc0Mg==", "bodyText": "@wesruv what is the thought behind this change? I believe this causes the user to be unable to actually navigate into product details page. I'm not sure why - I just noticed that clicking the 'product details' widget just takes you nowhere now.", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r468117742", "createdAt": "2020-08-10T19:07:47Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/frontend/src/app/productDetails.tsx", "diffHunk": "@@ -28,17 +28,17 @@ class ProductDetails extends Component<IProps, IState> {\n         }\n     }\n \n-    public componentWillReceiveProps(nextProps) {\n+    public componentDidUpdate() {\n         // allow page load from productDetails to products listing\n-        if (nextProps.productName !== undefined && nextProps.productName.trim() !== '') {\n+        if (this.props.productName !== undefined && this.props.productName.trim() !== '') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e686dfa25a3ee42126782e0c3b18841ceae66e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEyMTIzNw==", "bodyText": "BLARG.\ncomponentWillReceiveProps  is deprecated, I think it might have caused one of the test failures, but maybe I was mistaken. I'll try and revert it and rerun the tests.\nSee: https://github.com/redhataccess/pantheon/pull/354/files/b2e686dfa25a3ee42126782e0c3b18841ceae66e#diff-275ba574586207026ee0741897867bdbR117\nIt's definitely something we'll have to address at some point.", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r468121237", "createdAt": "2020-08-10T19:14:30Z", "author": {"login": "wesruv"}, "path": "pantheon-bundle/frontend/src/app/productDetails.tsx", "diffHunk": "@@ -28,17 +28,17 @@ class ProductDetails extends Component<IProps, IState> {\n         }\n     }\n \n-    public componentWillReceiveProps(nextProps) {\n+    public componentDidUpdate() {\n         // allow page load from productDetails to products listing\n-        if (nextProps.productName !== undefined && nextProps.productName.trim() !== '') {\n+        if (this.props.productName !== undefined && this.props.productName.trim() !== '') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExNzc0Mg=="}, "originalCommit": {"oid": "b2e686dfa25a3ee42126782e0c3b18841ceae66e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEyNDIyOQ==", "bodyText": "Looks like it wasn't breaking the tests, but it does throw an error.", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r468124229", "createdAt": "2020-08-10T19:20:25Z", "author": {"login": "wesruv"}, "path": "pantheon-bundle/frontend/src/app/productDetails.tsx", "diffHunk": "@@ -28,17 +28,17 @@ class ProductDetails extends Component<IProps, IState> {\n         }\n     }\n \n-    public componentWillReceiveProps(nextProps) {\n+    public componentDidUpdate() {\n         // allow page load from productDetails to products listing\n-        if (nextProps.productName !== undefined && nextProps.productName.trim() !== '') {\n+        if (this.props.productName !== undefined && this.props.productName.trim() !== '') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExNzc0Mg=="}, "originalCommit": {"oid": "b2e686dfa25a3ee42126782e0c3b18841ceae66e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEzMjMzOA==", "bodyText": "Yeah, it's been awhile, but I vaguely recall being the person who wrote that and needing to specifically hunt down just the right method to make the logic work. Sucks that it's going away, I guess we'll cross that bridge when we come to it.", "url": "https://github.com/redhataccess/pantheon/pull/354#discussion_r468132338", "createdAt": "2020-08-10T19:28:37Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/frontend/src/app/productDetails.tsx", "diffHunk": "@@ -28,17 +28,17 @@ class ProductDetails extends Component<IProps, IState> {\n         }\n     }\n \n-    public componentWillReceiveProps(nextProps) {\n+    public componentDidUpdate() {\n         // allow page load from productDetails to products listing\n-        if (nextProps.productName !== undefined && nextProps.productName.trim() !== '') {\n+        if (this.props.productName !== undefined && this.props.productName.trim() !== '') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExNzc0Mg=="}, "originalCommit": {"oid": "b2e686dfa25a3ee42126782e0c3b18841ceae66e"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 145, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}