{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMzMxMTUx", "number": 383, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOToxMTo1NlrOEcfGVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjowNzoxNVrOEdsfjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzA1MTA4OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/PublishDraftVersion.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOToxMTo1NlrOHHDIPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODozNDo1MFrOHIcg5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1MzM0MA==", "bodyText": "@benradey returning null directly in code, is not a good practice.\nAlso, as per our discussion on JCR changes, we are under impression, in case of no variant, it should create a default or return a default variant.\n@xdavidson Am i missing something here ?\nAlso, As a coding standard we should move, our hard coded variables in Constant Class.", "url": "https://github.com/redhataccess/pantheon/pull/383#discussion_r477153340", "createdAt": "2020-08-26T09:11:56Z", "author": {"login": "rednitish"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/PublishDraftVersion.java", "diffHunk": "@@ -72,12 +73,17 @@ private Locale getLocale(SlingHttpServletRequest request) {\n     }\n \n     private String getVariant(SlingHttpServletRequest request) {\n-        return paramValue(request, \"variant\", DocumentVariant.DEFAULT_VARIANT_NAME);\n+        return paramValue(request, \"variant\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5b6c400bdb5d3369b3fd176dfea56351f60b73b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM0MTgwNg==", "bodyText": "Hi Nitish,\nCan you clarify what you mean by \"returning null is not a good practice?\" That is a vague statement and in this scenario, returning null is exactly the appropriate thing to do.\nAlso, my argument is exactly that returning a default variant is inappropriate. Publishing is a very important operation, and if the user does not specify which variant they are trying to publish, then it's wrong and dangerous to think we can correctly guess what they want. It is better to throw an error and force the caller to be explicit about what they want.", "url": "https://github.com/redhataccess/pantheon/pull/383#discussion_r477341806", "createdAt": "2020-08-26T14:23:51Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/PublishDraftVersion.java", "diffHunk": "@@ -72,12 +73,17 @@ private Locale getLocale(SlingHttpServletRequest request) {\n     }\n \n     private String getVariant(SlingHttpServletRequest request) {\n-        return paramValue(request, \"variant\", DocumentVariant.DEFAULT_VARIANT_NAME);\n+        return paramValue(request, \"variant\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1MzM0MA=="}, "originalCommit": {"oid": "d5b6c400bdb5d3369b3fd176dfea56351f60b73b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM2NTYyMw==", "bodyText": "@benradey\nIf we are to pass a null in this line in place of \"DocumentVariant.DEFAULT_VARIANT_NAME\", com.redhat.pantheon.servlet.ServletUtils.paramValue will return null directly.\nThe rationale behind not returning null is code should not follow a different path based on the return value. There is a Design pattern \"\" Null Object Pattern \"\" which provides more information on this.\nif I were to do the same, I would typically prefer to return an empty collection  or String rather than null as it means my client code is cleaner.\nRegarding my second query tagging  @xdavidson   to provide some more inputs.", "url": "https://github.com/redhataccess/pantheon/pull/383#discussion_r477365623", "createdAt": "2020-08-26T14:55:01Z", "author": {"login": "rednitish"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/PublishDraftVersion.java", "diffHunk": "@@ -72,12 +73,17 @@ private Locale getLocale(SlingHttpServletRequest request) {\n     }\n \n     private String getVariant(SlingHttpServletRequest request) {\n-        return paramValue(request, \"variant\", DocumentVariant.DEFAULT_VARIANT_NAME);\n+        return paramValue(request, \"variant\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1MzM0MA=="}, "originalCommit": {"oid": "d5b6c400bdb5d3369b3fd176dfea56351f60b73b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyNTMxOQ==", "bodyText": "Thanks for clarifying, Nitish.\nI think I understand what you're describing, but I have two thoughts.\n1st and more relevant: the code is not any different and/or cleaner if we replace a null check with an empty string check. It is practically identical.\n2nd and less relevant, but still related: saying that something is a \"good design pattern\" or \"bad design pattern\" generally may be true, but that doesn't mean it's the right or wrong tool for the job in any specific circumstance. I would agree that if we were in some hypothetical example where we were building a collection, then returning an empty collection would be more appropriate than returning null, and the pattern you refer to might apply nicely to that. However, the situation we have here is different. We are asking for input that the user supplied, and the value of null has the special meaning of \"the user did not supply anything\" which would be distinct from \"the user supplied a value of nothing.\"\nUltimately, this is splitting hairs. Avoiding the use of null does not gain us anything tangible here, so I'm not in favor of making that code change.", "url": "https://github.com/redhataccess/pantheon/pull/383#discussion_r477425319", "createdAt": "2020-08-26T16:19:00Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/PublishDraftVersion.java", "diffHunk": "@@ -72,12 +73,17 @@ private Locale getLocale(SlingHttpServletRequest request) {\n     }\n \n     private String getVariant(SlingHttpServletRequest request) {\n-        return paramValue(request, \"variant\", DocumentVariant.DEFAULT_VARIANT_NAME);\n+        return paramValue(request, \"variant\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1MzM0MA=="}, "originalCommit": {"oid": "d5b6c400bdb5d3369b3fd176dfea56351f60b73b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE3NDU1NQ==", "bodyText": "Thanks Ben & Thanks again for putting forward your thoughts, But i still strongly disagree with point 1 you mentioned.\nand yes, we opt for different design patterns according to our requirement, and I can see a lot of points where we should include them. I will tag them all going forwards and lets have a cleaner code going forward :)", "url": "https://github.com/redhataccess/pantheon/pull/383#discussion_r478174555", "createdAt": "2020-08-27T06:23:14Z", "author": {"login": "rednitish"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/PublishDraftVersion.java", "diffHunk": "@@ -72,12 +73,17 @@ private Locale getLocale(SlingHttpServletRequest request) {\n     }\n \n     private String getVariant(SlingHttpServletRequest request) {\n-        return paramValue(request, \"variant\", DocumentVariant.DEFAULT_VARIANT_NAME);\n+        return paramValue(request, \"variant\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1MzM0MA=="}, "originalCommit": {"oid": "d5b6c400bdb5d3369b3fd176dfea56351f60b73b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxNzgzMQ==", "bodyText": "@rednitish I understand that you strongly disagree, but I still maintain that your request is not functionally different from what is already here and that this code is correct as-is.\nIf you have no other concerns, then I would ask that you approve this PR with the code as I have it.", "url": "https://github.com/redhataccess/pantheon/pull/383#discussion_r478617831", "createdAt": "2020-08-27T18:34:50Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/PublishDraftVersion.java", "diffHunk": "@@ -72,12 +73,17 @@ private Locale getLocale(SlingHttpServletRequest request) {\n     }\n \n     private String getVariant(SlingHttpServletRequest request) {\n-        return paramValue(request, \"variant\", DocumentVariant.DEFAULT_VARIANT_NAME);\n+        return paramValue(request, \"variant\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1MzM0MA=="}, "originalCommit": {"oid": "d5b6c400bdb5d3369b3fd176dfea56351f60b73b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzA3NTQ4OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/UnpublishVersion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOToxNjoyNlrOHHDX0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOToxNjoyNlrOHHDX0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1NzMzMA==", "bodyText": "same comment as above", "url": "https://github.com/redhataccess/pantheon/pull/383#discussion_r477157330", "createdAt": "2020-08-26T09:16:26Z", "author": {"login": "rednitish"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/UnpublishVersion.java", "diffHunk": "@@ -82,12 +83,17 @@ private Locale getLocale(SlingHttpServletRequest request) {\n     }\n \n     private String getVariant(SlingHttpServletRequest request) {\n-        return paramValue(request, \"variant\", DocumentVariant.DEFAULT_VARIANT_NAME);\n+        return paramValue(request, \"variant\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5b6c400bdb5d3369b3fd176dfea56351f60b73b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTcyMzg5OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/PublishDraftVersion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjowNjowN1rOHJAZPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjowNjowN1rOHJAZPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIwNTY5Mg==", "bodyText": "@benradey  Can you please add a test case for below block in PublishDraftVersionTest.java", "url": "https://github.com/redhataccess/pantheon/pull/383#discussion_r479205692", "createdAt": "2020-08-28T12:06:07Z", "author": {"login": "rednitish"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/PublishDraftVersion.java", "diffHunk": "@@ -72,12 +73,17 @@ private Locale getLocale(SlingHttpServletRequest request) {\n     }\n \n     private String getVariant(SlingHttpServletRequest request) {\n-        return paramValue(request, \"variant\", DocumentVariant.DEFAULT_VARIANT_NAME);\n+        return paramValue(request, \"variant\", null);\n     }\n \n     @Override\n     public void run(SlingHttpServletRequest request, PostResponse response, SlingPostProcessor[] processors) {\n         logger.debug(\"Operation Publishinging draft version started\");\n+        String variant = getVariant(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5b6c400bdb5d3369b3fd176dfea56351f60b73b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTczMTM1OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/UnpublishVersion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjowNzoxNVrOHJAeNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjowNzoxNVrOHJAeNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIwNjk2NA==", "bodyText": "add test case for below piece of code in UnpublishVersionTest.java", "url": "https://github.com/redhataccess/pantheon/pull/383#discussion_r479206964", "createdAt": "2020-08-28T12:07:15Z", "author": {"login": "rednitish"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/UnpublishVersion.java", "diffHunk": "@@ -82,12 +83,17 @@ private Locale getLocale(SlingHttpServletRequest request) {\n     }\n \n     private String getVariant(SlingHttpServletRequest request) {\n-        return paramValue(request, \"variant\", DocumentVariant.DEFAULT_VARIANT_NAME);\n+        return paramValue(request, \"variant\", null);\n     }\n \n     @Override\n     public void run(SlingHttpServletRequest request, PostResponse response, SlingPostProcessor[] processors) {\n         logger.debug(\"Operation UnPublishinging draft version started\");\n+        String variant = getVariant(request);\n+        if (variant == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5b6c400bdb5d3369b3fd176dfea56351f60b73b"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 193, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}