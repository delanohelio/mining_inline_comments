{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMjI3NjI2", "number": 484, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzoxMzo0MFrOFAy2nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzoxMzo0MFrOFAy2nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mzc3NTAxOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzoxMzo0MFrOH_QW3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo1Nzo0N1rOH_Uh1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA5MDMzNQ==", "bodyText": "Just one query - what is the intent behind using ISO9875.encode rather than UTF-8? Other than that LGTM.", "url": "https://github.com/redhataccess/pantheon/pull/484#discussion_r536090335", "createdAt": "2020-12-04T13:13:40Z", "author": {"login": "aprajshekhar"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "diffHunk": "@@ -99,9 +100,15 @@ protected String getQuery(SlingHttpServletRequest request) {\n \n         StringBuilder queryBuilder = null;\n         if (repoParam != null) {\n-            log.info(\"[\" + ModuleListingServlet.class.getSimpleName() + \"] contentTypeParam: \" + contentTypeParam);\n-            String repos = String.join(\" | \", repoParam);\n-            log.info(\"[\" + ModuleListingServlet.class.getSimpleName() + \"] repos: \" + repos);\n+            // encode if repo name contains space\n+            String repos = Arrays.stream(repoParam)\n+                    .map( repo -> {\n+                        if (repo.contains(\" \")) {\n+                            return ISO9075.encode(repo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50640b5a0d8c2f3e7f1686a1aa55ed404dd288ec"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE1MDY0Mw==", "bodyText": "jackrabbit uses ISO9075.encode to handle the spaces.\nhttps://www.mail-archive.com/users@jackrabbit.apache.org/msg05782.html", "url": "https://github.com/redhataccess/pantheon/pull/484#discussion_r536150643", "createdAt": "2020-12-04T14:46:25Z", "author": {"login": "xdavidson"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "diffHunk": "@@ -99,9 +100,15 @@ protected String getQuery(SlingHttpServletRequest request) {\n \n         StringBuilder queryBuilder = null;\n         if (repoParam != null) {\n-            log.info(\"[\" + ModuleListingServlet.class.getSimpleName() + \"] contentTypeParam: \" + contentTypeParam);\n-            String repos = String.join(\" | \", repoParam);\n-            log.info(\"[\" + ModuleListingServlet.class.getSimpleName() + \"] repos: \" + repos);\n+            // encode if repo name contains space\n+            String repos = Arrays.stream(repoParam)\n+                    .map( repo -> {\n+                        if (repo.contains(\" \")) {\n+                            return ISO9075.encode(repo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA5MDMzNQ=="}, "originalCommit": {"oid": "50640b5a0d8c2f3e7f1686a1aa55ed404dd288ec"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE1ODY3Ng==", "bodyText": "That is an excellent find, bravo for being able to dig up this relatively obscure internet artifact.\nWould you mind adding this link as a comment in the source code?\nAlso, do we need the if (repo.contains(\" \")) statement? Can we just encode the string unconditionally?", "url": "https://github.com/redhataccess/pantheon/pull/484#discussion_r536158676", "createdAt": "2020-12-04T14:57:47Z", "author": {"login": "benradey"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/ModuleListingServlet.java", "diffHunk": "@@ -99,9 +100,15 @@ protected String getQuery(SlingHttpServletRequest request) {\n \n         StringBuilder queryBuilder = null;\n         if (repoParam != null) {\n-            log.info(\"[\" + ModuleListingServlet.class.getSimpleName() + \"] contentTypeParam: \" + contentTypeParam);\n-            String repos = String.join(\" | \", repoParam);\n-            log.info(\"[\" + ModuleListingServlet.class.getSimpleName() + \"] repos: \" + repos);\n+            // encode if repo name contains space\n+            String repos = Arrays.stream(repoParam)\n+                    .map( repo -> {\n+                        if (repo.contains(\" \")) {\n+                            return ISO9075.encode(repo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA5MDMzNQ=="}, "originalCommit": {"oid": "50640b5a0d8c2f3e7f1686a1aa55ed404dd288ec"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 125, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}