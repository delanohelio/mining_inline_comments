{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTM5MTI5", "number": 371, "title": "Basic Xref functionality", "bodyText": "If the author is writing moduleA.adoc and includes text like xref:moduleB.adoc[label], and moduleB.adoc is present in Pantheon at build time, then Pantheon will now rewrite the xref to xref:ABCD1234-EFGH-ETC[label] automatically, which will ultimately become a link to <a href=\"ABCD1234-EFGH-ETC.html\">label</a>.\nThis PR also adds UUID-based preview servlets that allow these links to resolve. If you start a preview session at /pantheon/preview/latest/MODULE-A-UUID, and follow an xref to module B, that should resolve successfully via the new servlets.\nOur React UI will need to be refactored to use these new servlets, and triangle-bracket xrefs are not yet handled.", "createdAt": "2020-08-13T17:39:22Z", "url": "https://github.com/redhataccess/pantheon/pull/371", "merged": true, "mergeCommit": {"oid": "86c3cf283e792850dd6ae6b0441902e0f70e9327"}, "closed": true, "closedAt": "2020-08-21T19:47:10Z", "author": {"login": "benradey"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc97QFnAH2gAyNDY3NTM5MTI5OjdiZmNjMTA5N2I3YTdjNzkwNjY5MThhOTdjMTgzNTNiOWQ1N2M0NWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBKN7AgFqTQ3Mjc3ODAxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7bfcc1097b7a7c79066918a97c18353b9d57c45a", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/7bfcc1097b7a7c79066918a97c18353b9d57c45a", "committedDate": "2020-08-11T18:37:26Z", "message": "Preliminary preprocessor and preliminary uuid-based preview servlet filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d3cfbc894ef3c3e2c2ed074e25b194745977cbc", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/7d3cfbc894ef3c3e2c2ed074e25b194745977cbc", "committedDate": "2020-08-11T18:37:30Z", "message": "Adding a preview filter that delivers uuid-based xref targets, and adding a servlet that previews module variants directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91505a0bd5b8be6c2deb97614e81da3a74b4c250", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/91505a0bd5b8be6c2deb97614e81da3a74b4c250", "committedDate": "2020-08-11T18:38:24Z", "message": "basic xrefs work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "679b49a8a0d7bae736f883d05f25f0b58072a404", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/679b49a8a0d7bae736f883d05f25f0b58072a404", "committedDate": "2020-08-11T18:38:26Z", "message": "xrefs between standalone modules work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41ad6cd29c2a1931a2008225937dc40020dc0cfe", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/41ad6cd29c2a1931a2008225937dc40020dc0cfe", "committedDate": "2020-08-11T18:38:26Z", "message": "Refactoring a bit of logic and removing println's"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "943d0c93499425bd83d3c475f78ee30a0709f8a3", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/943d0c93499425bd83d3c475f78ee30a0709f8a3", "committedDate": "2020-08-11T18:38:26Z", "message": "fixing variant preview servlet for assemblies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f58f005661398c1d7e9c0a8769a725ac8c0486dd", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/f58f005661398c1d7e9c0a8769a725ac8c0486dd", "committedDate": "2020-08-11T18:38:26Z", "message": "xrefs to anchors now mostly work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e41587d3d32fda24db712a84b18799940508b93c", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/e41587d3d32fda24db712a84b18799940508b93c", "committedDate": "2020-08-11T19:37:49Z", "message": "xrefs pretty much work for assemblies, there might be a haml bug getting in the way but the link targets are correctly rewritten"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44d5e0381d02213b70b7129c564b1e4c4e865e88", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/44d5e0381d02213b70b7129c564b1e4c4e865e88", "committedDate": "2020-08-13T17:32:29Z", "message": "Adding test classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a56930d0b77ff447a59b0b5f7c51193698af55ab", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/a56930d0b77ff447a59b0b5f7c51193698af55ab", "committedDate": "2020-08-13T17:33:46Z", "message": "Removing printlns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a819108bb026ec02d17e33bab0c8f463a2ef8c", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/30a819108bb026ec02d17e33bab0c8f463a2ef8c", "committedDate": "2020-08-13T18:27:21Z", "message": "Triangle xrefs work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72377fedd076442a6a11fdaf88436ef8be9c742e", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/72377fedd076442a6a11fdaf88436ef8be9c742e", "committedDate": "2020-08-13T18:35:16Z", "message": "Adding empty anchor check necessitated by triangle xrefs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwODAzNzk3", "url": "https://github.com/redhataccess/pantheon/pull/371#pullrequestreview-470803797", "createdAt": "2020-08-19T19:50:23Z", "commit": {"oid": "72377fedd076442a6a11fdaf88436ef8be9c742e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOTo1MDoyM1rOHDWtdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOTo1MDoyM1rOHDWtdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI3OTg2Mg==", "bodyText": "I wonder if we should change pantheon_module_id to something more generic? :pantheon_document_id?", "url": "https://github.com/redhataccess/pantheon/pull/371#discussion_r473279862", "createdAt": "2020-08-19T19:50:23Z", "author": {"login": "xdavidson"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/extension/SlingResourceIncludeProcessor.java", "diffHunk": "@@ -79,9 +79,13 @@ public void process(Document document, PreprocessorReader reader, String target,\n                         .toChild(FileResource::jcrContent)\n                         .toField(FileResource.JcrContent::jcrData)\n                         .get();\n-                content = new StringBuilder(\":pantheon_module_id: \")\n+                content = new StringBuilder()\n+                        .append(\":pantheon_module_id: \")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72377fedd076442a6a11fdaf88436ef8be9c742e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwODE2MjM1", "url": "https://github.com/redhataccess/pantheon/pull/371#pullrequestreview-470816235", "createdAt": "2020-08-19T19:55:59Z", "commit": {"oid": "72377fedd076442a6a11fdaf88436ef8be9c742e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOTo1NTo1OVrOHDW5Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOTo1NTo1OVrOHDW5Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4Mjg0Mg==", "bodyText": "if would be super if we can add some line wrap here to make it more readable :-)", "url": "https://github.com/redhataccess/pantheon/pull/371#discussion_r473282842", "createdAt": "2020-08-19T19:55:59Z", "author": {"login": "xdavidson"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/extension/XrefPreprocessor.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package com.redhat.pantheon.asciidoctor.extension;\n+\n+import com.redhat.pantheon.helper.PantheonConstants;\n+import com.redhat.pantheon.model.assembly.TableOfContents;\n+import com.redhat.pantheon.model.document.Document;\n+import com.redhat.pantheon.model.document.DocumentLocale;\n+import com.redhat.pantheon.model.document.DocumentVariant;\n+import com.redhat.pantheon.model.module.Module;\n+import org.apache.sling.api.resource.Resource;\n+import org.asciidoctor.extension.Preprocessor;\n+import org.asciidoctor.extension.PreprocessorReader;\n+import org.jetbrains.annotations.NotNull;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class XrefPreprocessor extends Preprocessor {\n+\n+    private static final Logger log = LoggerFactory.getLogger(XrefPreprocessor.class);\n+\n+    private static final Pattern XREF_PATTERN = Pattern.compile(\"xref:(?<filepath>\\\\S*?)(?:#(?<anchor>\\\\S*))?\\\\[(?<label>.*?)\\\\]\");\n+    private static final Pattern TRIANGLE_PATTERN = Pattern.compile(\"<<(?<filepath>\\\\S*?)(?:#(?<anchor>\\\\S*))?,(?<label>.*?)>>\");\n+\n+    private DocumentVariant documentVariant;\n+    private TableOfContents toc;\n+    private Set<String> modulePaths = new HashSet<>();\n+\n+    /**\n+     * @param documentVariant\n+     * @param tableOfContents Doesn't necessarily need to be populated when this constructor is called.\n+     */\n+    public XrefPreprocessor(DocumentVariant documentVariant, TableOfContents tableOfContents) {\n+        this.documentVariant = documentVariant;\n+        this.toc = tableOfContents;\n+    }\n+\n+    @Override\n+    public void process(org.asciidoctor.ast.Document adocDocument, @NotNull PreprocessorReader reader) {\n+        reader.restoreLines(preprocess(reader.readLines()));\n+    }\n+\n+    private String processLineWithPattern(String line, Pattern pattern) {\n+        Matcher matcher = pattern.matcher(line);\n+        StringBuffer sb = new StringBuffer();\n+        while (matcher.find()) {\n+            String originalTarget = matcher.group(\"filepath\");\n+            // Assume it's a relative path to a file in the same repo for now\n+            Resource desiredTarget = documentVariant.getResourceResolver().getResource(documentVariant.getParentLocale().getParent().getParent().getPath() + \"/\" + originalTarget);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72377fedd076442a6a11fdaf88436ef8be9c742e"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwODQyNTI3", "url": "https://github.com/redhataccess/pantheon/pull/371#pullrequestreview-470842527", "createdAt": "2020-08-19T20:08:03Z", "commit": {"oid": "72377fedd076442a6a11fdaf88436ef8be9c742e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMDowODowM1rOHDXQ-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMDowODowM1rOHDXQ-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4ODk1Mg==", "bodyText": "are those allowed values for RELEASED_SUFFICES?", "url": "https://github.com/redhataccess/pantheon/pull/371#discussion_r473288952", "createdAt": "2020-08-19T20:08:03Z", "author": {"login": "xdavidson"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/DocumentVariantRenderServlet.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package com.redhat.pantheon.servlet;\n+\n+import com.redhat.pantheon.asciidoctor.AsciidoctorService;\n+import com.redhat.pantheon.helper.PantheonConstants;\n+import com.redhat.pantheon.model.document.DocumentVariant;\n+import com.redhat.pantheon.model.document.DocumentVersion;\n+import org.apache.commons.lang3.LocaleUtils;\n+import org.apache.sling.api.SlingHttpServletRequest;\n+import org.apache.sling.api.SlingHttpServletResponse;\n+import org.apache.sling.api.servlets.SlingSafeMethodsServlet;\n+import org.apache.sling.servlets.annotations.SlingServletResourceTypes;\n+import org.osgi.framework.Constants;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.Servlet;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+import java.io.Writer;\n+import java.util.HashSet;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import static com.redhat.pantheon.servlet.ServletUtils.paramValueAsBoolean;\n+\n+/**\n+ * Renders an HTML preview for a single document variant.\n+ * To provide parameters to the asciidoc generation process, provide the parameters with their name prefixed\n+ * with \"ctx_\".\n+ *\n+ * For example, if an asciidoc attribute of name 'product' needs to be passed, there will need to be a\n+ * query parameter of name 'ctx_product' provided in the url.\n+ */\n+@Component(\n+        service = Servlet.class,\n+        property = {\n+                Constants.SERVICE_DESCRIPTION + \"=Servlet which transforms asciidoc content into html\",\n+                Constants.SERVICE_VENDOR + \"=Red Hat Content Tooling team\"\n+        })\n+@SlingServletResourceTypes(\n+        resourceTypes = { \"pantheon/moduleVariant\", \"pantheon/assemblyVariant\" },\n+        methods = \"GET\",\n+        extensions = \"preview\")\n+public class DocumentVariantRenderServlet extends SlingSafeMethodsServlet {\n+\n+    private static final Set<String> RELEASED_SUFFIXES = new HashSet<>();\n+    static {\n+        RELEASED_SUFFIXES.add(\"/released\");\n+        RELEASED_SUFFIXES.add(\"/\");\n+        RELEASED_SUFFIXES.add(\"\");\n+        RELEASED_SUFFIXES.add(null);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72377fedd076442a6a11fdaf88436ef8be9c742e"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwODQ5MTk0", "url": "https://github.com/redhataccess/pantheon/pull/371#pullrequestreview-470849194", "createdAt": "2020-08-19T20:11:09Z", "commit": {"oid": "72377fedd076442a6a11fdaf88436ef8be9c742e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3c865ff6739a11114277a32177822ffb637b0e3", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/b3c865ff6739a11114277a32177822ffb637b0e3", "committedDate": "2020-08-20T18:57:44Z", "message": "Merge with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8efe38561acab98dd4e6f44f7187e72036b8717", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/b8efe38561acab98dd4e6f44f7187e72036b8717", "committedDate": "2020-08-21T19:17:57Z", "message": "Preview UI buttons now use new uuid-based variant preview servlet; still need to fix 'regenerate' UI button"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b0f6e24c93789eb123b54bd9e9e1b84026a4c84", "author": {"user": {"login": "benradey", "name": "Ben Radey"}}, "url": "https://github.com/redhataccess/pantheon/commit/3b0f6e24c93789eb123b54bd9e9e1b84026a4c84", "committedDate": "2020-08-21T19:40:36Z", "message": "Fixing rerender buttons"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzc4MDE4", "url": "https://github.com/redhataccess/pantheon/pull/371#pullrequestreview-472778018", "createdAt": "2020-08-21T19:45:25Z", "commit": {"oid": "b8efe38561acab98dd4e6f44f7187e72036b8717"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1995, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}