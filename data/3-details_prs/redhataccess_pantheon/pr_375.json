{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNzc2NzEx", "number": 375, "title": "CCS-3762: Error in git2pantheonpod while gitimport: http: superfluous  response.WriteHeader", "bodyText": "This PR:\n\nAdds the logic to return the response if parsing fails with correct code (400) withe detail rather than just 500.\nFixes the http: superfluous  response.WriteHeader.\nChanges the error response given by go app  to {\"error\": \"\"}. This is to make responses standardized.", "createdAt": "2020-08-20T09:14:12Z", "url": "https://github.com/redhataccess/pantheon/pull/375", "merged": true, "mergeCommit": {"oid": "b0cb871bffc6ab61a0a5b5d83180aec9b0ffc4c0"}, "closed": true, "closedAt": "2020-08-21T14:28:29Z", "author": {"login": "aprajshekhar"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAsXWpAH2gAyNDcwNzc2NzExOjhiNzYzMzZlZTA2OGQ1MWI2NTA5NjZmZmQxYjUwZTQ1MDE5YmQ1YTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBFdU3gFqTQ3MjUyNDk2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8b76336ee068d51b650966ffd1b50e45019bd5a2", "author": {"user": {"login": "aprajshekhar", "name": "A.P.Rajshekhar"}}, "url": "https://github.com/redhataccess/pantheon/commit/8b76336ee068d51b650966ffd1b50e45019bd5a2", "committedDate": "2020-08-20T08:58:34Z", "message": "CCS-3762: Error in git2pantheonpod while gitimport: http: superfluous response.WriteHeader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b016c5cb5d777cfec48507c4bdb19edc4e50de3f", "author": {"user": {"login": "aprajshekhar", "name": "A.P.Rajshekhar"}}, "url": "https://github.com/redhataccess/pantheon/commit/b016c5cb5d777cfec48507c4bdb19edc4e50de3f", "committedDate": "2020-08-20T09:51:43Z", "message": "CCS-3762: fixing failing tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTQwMDAz", "url": "https://github.com/redhataccess/pantheon/pull/375#pullrequestreview-471940003", "createdAt": "2020-08-20T19:54:37Z", "commit": {"oid": "b016c5cb5d777cfec48507c4bdb19edc4e50de3f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1NDozOFrOHERIIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1NDozOFrOHERIIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNjk2MQ==", "bodyText": "I recall we currently only support import via git repo.", "url": "https://github.com/redhataccess/pantheon/pull/375#discussion_r474236961", "createdAt": "2020-08-20T19:54:38Z", "author": {"login": "xdavidson"}, "path": "tools/git2pantheon/main.go", "diffHunk": "@@ -33,20 +33,30 @@ func cloneBranch(w http.ResponseWriter, r *http.Request) {\n \t\tvar repo repository_and_branch\n \t\terr = json.Unmarshal(body, &repo)\n \n-\t\tlog.Println(repo.Repo)\n-\t\tlog.Println(repo.Branch)\n+\t\t//check parsing error. If error is not null, log and return 400 if parse failed\n+\t\tif err != nil {\n+\t\t\tlog.Printf(\"Error in unmarshalling request body %s\", err)\n+\t\t\t//setting the response in JSON format for standardizing error responses\n+\t\t\tresponse := \"{\\\"error\\\" : \\\"Error reading request body due to \" + err.Error() + \" \\\"}\"\n+\t\t\thttp.Error(w, response, http.StatusBadRequest)\n+\t\t\treturn\n+\t\t}\n+\n+\t\tlog.Println(\"repo:  \" + repo.Repo)\n+\t\tlog.Println(\"branch: \" + repo.Branch)\n \n \t\trepository := repo.Repo\n-\t\terror_status := false\n+\n \t\tif repository == \"\" {\n-\t\t\thttp.Error(w, \"Error reading repository url\", http.StatusInternalServerError)\n-\t\t\terror_status = true\n+\t\t\t//setting the response in JSON format for standardizing error responses\n+\t\t\thttp.Error(w, \"{\\\"error\\\" : \\\"Error reading repository url\\\"}\", http.StatusInternalServerError)\n+\t\t\t// return after setting error response to avoid superfluous error header in logs\n+\t\t\treturn\n \t\t}\n \t\tif !strings.Contains(strings.ToUpper(repository), \"GIT\") {\n-\t\t\thttp.Error(w, \"The repository entered does not look like a git repo.\", http.StatusInternalServerError)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b016c5cb5d777cfec48507c4bdb19edc4e50de3f"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNTI0OTY1", "url": "https://github.com/redhataccess/pantheon/pull/375#pullrequestreview-472524965", "createdAt": "2020-08-21T14:12:43Z", "commit": {"oid": "b016c5cb5d777cfec48507c4bdb19edc4e50de3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2003, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}