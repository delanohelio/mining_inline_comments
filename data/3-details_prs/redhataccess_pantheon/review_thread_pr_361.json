{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMzQ4MTc3", "number": 361, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoyMzowOVrOEVY7Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjo0NDozM1rOEVZZHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODYzOTM4OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/PublishDraftVersion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoyMzowOVrOG8HRNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoyMzowOVrOG8HRNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NjgzNw==", "bodyText": "Why Boolean and not boolean is being used?", "url": "https://github.com/redhataccess/pantheon/pull/361#discussion_r465686837", "createdAt": "2020-08-05T12:23:09Z", "author": {"login": "aprajshekhar"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/PublishDraftVersion.java", "diffHunk": "@@ -92,11 +99,23 @@ public void run(SlingHttpServletRequest request, PostResponse response, SlingPos\n     @Override\n     protected void doRun(SlingHttpServletRequest request, PostResponse response, List<Modification> changes) throws  RepositoryException{\n         try {\n-            ResourceResolver serviceResourceResolver = serviceResourceResolverProvider.getServiceResourceResolver();\n+            Boolean canPublish = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2bce6698660c7eb41eb86efd892d9d4ceb5aa22"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODY0MjUyOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/UnpublishVersion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoyNDowNFrOG8HTCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoyNDowNFrOG8HTCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NzMwNg==", "bodyText": "Same as above.", "url": "https://github.com/redhataccess/pantheon/pull/361#discussion_r465687306", "createdAt": "2020-08-05T12:24:04Z", "author": {"login": "aprajshekhar"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/UnpublishVersion.java", "diffHunk": "@@ -99,7 +106,20 @@ public void run(SlingHttpServletRequest request, PostResponse response, SlingPos\n     @Override\n     protected void doRun(SlingHttpServletRequest request, PostResponse response, List<Modification> changes) throws RepositoryException{\n         try {\n-            ResourceResolver serviceResourceResolver = serviceResourceResolverProvider.getServiceResourceResolver();\n+            Boolean canUnPublish = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2bce6698660c7eb41eb86efd892d9d4ceb5aa22"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODcxMzE3OnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/PublishDraftVersion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjo0Mzo1MFrOG8H-Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjo0Mzo1MFrOG8H-Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5ODMxOQ==", "bodyText": "It will be better to break once you set canPublish", "url": "https://github.com/redhataccess/pantheon/pull/361#discussion_r465698319", "createdAt": "2020-08-05T12:43:50Z", "author": {"login": "aprajshekhar"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/PublishDraftVersion.java", "diffHunk": "@@ -92,11 +99,23 @@ public void run(SlingHttpServletRequest request, PostResponse response, SlingPos\n     @Override\n     protected void doRun(SlingHttpServletRequest request, PostResponse response, List<Modification> changes) throws  RepositoryException{\n         try {\n-            ResourceResolver serviceResourceResolver = serviceResourceResolverProvider.getServiceResourceResolver();\n+            boolean canPublish = false;\n+            Session session = request.getResourceResolver().adaptTo(Session.class);\n+            UserManager userManager = AccessControlUtil.getUserManager(session);\n+            Iterator<Group> groupIterator = userManager.getAuthorizable(session.getUserID()).memberOf();\n+            while (groupIterator.hasNext()) {\n+                Authorizable group = groupIterator.next();\n+                if (group.isGroup() && PantheonConstants.PANTHEON_PUBLISHERS.equalsIgnoreCase(group.getID())) {\n+                    canPublish = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cdcbad34964e4a5388fa8e1d010475baf17b615"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODcxNTgwOnYy", "diffSide": "RIGHT", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/UnpublishVersion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjo0NDozM1rOG8H_tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjo0NDozM1rOG8H_tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5ODc0MQ==", "bodyText": "It will be better to break once you set canPublish as check is done and we have the required state.", "url": "https://github.com/redhataccess/pantheon/pull/361#discussion_r465698741", "createdAt": "2020-08-05T12:44:33Z", "author": {"login": "aprajshekhar"}, "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/module/UnpublishVersion.java", "diffHunk": "@@ -99,7 +106,20 @@ public void run(SlingHttpServletRequest request, PostResponse response, SlingPos\n     @Override\n     protected void doRun(SlingHttpServletRequest request, PostResponse response, List<Modification> changes) throws RepositoryException{\n         try {\n-            ResourceResolver serviceResourceResolver = serviceResourceResolverProvider.getServiceResourceResolver();\n+            boolean canUnPublish = false;\n+            Session session = request.getResourceResolver().adaptTo(Session.class);\n+            UserManager userManager = AccessControlUtil.getUserManager(session);\n+            Iterator<Group> groupIterator = userManager.getAuthorizable(session.getUserID()).memberOf();\n+            while (groupIterator.hasNext()) {\n+                Authorizable group = groupIterator.next();\n+                if (group.isGroup() && PantheonConstants.PANTHEON_PUBLISHERS.equalsIgnoreCase(group.getID())) {\n+                    canUnPublish = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cdcbad34964e4a5388fa8e1d010475baf17b615"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 161, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}