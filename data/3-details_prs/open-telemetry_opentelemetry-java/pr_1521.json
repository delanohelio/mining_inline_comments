{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NzE3ODQw", "number": 1521, "title": "Changed TraceConfigz zPage form to use POST request", "bodyText": "This PR addresses #1517", "createdAt": "2020-08-07T17:00:11Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521", "merged": true, "mergeCommit": {"oid": "ce8cfd4d5b0e5ce34ccec2eb6cd2f5b8473ef766"}, "closed": true, "closedAt": "2020-08-12T15:20:29Z", "author": {"login": "wtyanan"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc19SBrAH2gAyNDY0NzE3ODQwOmVjMzFlM2U5Y2IwMjEyYzc1MTMzMzMxMjkwMjQ2YjI1OGY0NDViMTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-NBZsgFqTQ2NjAyMDg1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ec31e3e9cb0212c75133331290246b258f445b13", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ec31e3e9cb0212c75133331290246b258f445b13", "committedDate": "2020-07-18T00:27:58Z", "message": "Removed URLEncoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0fe0ede7bbd0e660feab6b0eac647f972224a12", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e0fe0ede7bbd0e660feab6b0eac647f972224a12", "committedDate": "2020-07-18T00:44:15Z", "message": "Fixed typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf7f5c8f7890ffb19aabcd675ca4bcc7f4a5739a", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/cf7f5c8f7890ffb19aabcd675ca4bcc7f4a5739a", "committedDate": "2020-07-20T21:20:21Z", "message": "Added URLDecoding"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9db8e7e6edd7b8188fe3b4deda6b091cf2f92a66", "committedDate": "2020-07-20T21:29:32Z", "message": "Included comment for string replacement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "412797843fe71d406538cd0173d414afd3872019", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/412797843fe71d406538cd0173d414afd3872019", "committedDate": "2020-07-20T23:50:41Z", "message": "Added unit tests for special characters in span names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e17c337050a0c57947eea07b53c36393805fc3e3", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e17c337050a0c57947eea07b53c36393805fc3e3", "committedDate": "2020-07-21T20:34:47Z", "message": "Resolved URL decoding issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb58b26018ed710133ff0493894b58d70b977640", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/bb58b26018ed710133ff0493894b58d70b977640", "committedDate": "2020-07-21T22:08:18Z", "message": "Moved url decoding to parseQueryMap and updated the corresponding unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80a5ccf2b19dbdb2cd3fad4a968962318131883f", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/80a5ccf2b19dbdb2cd3fad4a968962318131883f", "committedDate": "2020-07-22T20:39:04Z", "message": "Added a README file for zPage quickstart"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcbd9aa23db84e85639a17f02f25d2e54d5b5f4b", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/dcbd9aa23db84e85639a17f02f25d2e54d5b5f4b", "committedDate": "2020-07-22T20:42:13Z", "message": "Add images for README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24ffce2bb7b6a24ba3ad8e86e476710be7ccd76a", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/24ffce2bb7b6a24ba3ad8e86e476710be7ccd76a", "committedDate": "2020-07-22T21:02:18Z", "message": "Updated README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5047849b2843b486649d3a286cc36ab627f76901", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5047849b2843b486649d3a286cc36ab627f76901", "committedDate": "2020-07-22T21:52:04Z", "message": "Add frontend images"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85a539ed8b5539985017b3a96e9539dd11f70aa1", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/85a539ed8b5539985017b3a96e9539dd11f70aa1", "committedDate": "2020-07-22T22:05:05Z", "message": "Add backend images"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4156123799670059e9ea44cb1a0174b8a65c9aed", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4156123799670059e9ea44cb1a0174b8a65c9aed", "committedDate": "2020-07-22T23:32:06Z", "message": "Added our design doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "265cf27c704f368c0b28c04c555568f1be926e9a", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/265cf27c704f368c0b28c04c555568f1be926e9a", "committedDate": "2020-07-23T17:19:22Z", "message": "Added details on package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c102e45b016ccb12458c3f657fe8cf64c0cc5d2a", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c102e45b016ccb12458c3f657fe8cf64c0cc5d2a", "committedDate": "2020-07-23T19:17:16Z", "message": "Reworded a few lines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e977dcf1146700915bbe6d1a2d095aaa79ed131f", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e977dcf1146700915bbe6d1a2d095aaa79ed131f", "committedDate": "2020-07-23T19:26:44Z", "message": "Merge branch 'master' of https://github.com/open-telemetry/opentelemetry-java into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed8ef33353ece317374cb46b29209c030781460c", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ed8ef33353ece317374cb46b29209c030781460c", "committedDate": "2020-07-24T17:09:38Z", "message": "Moved DESIGN.md to a docs folder and changed gradle config to implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f595909769797804702ce7ccca807df9b177e197", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f595909769797804702ce7ccca807df9b177e197", "committedDate": "2020-07-27T14:34:34Z", "message": "Changed wording regarding HttpServer requirement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "806b6322ef2e6440c0569e255ffa954cf97da42d", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/806b6322ef2e6440c0569e255ffa954cf97da42d", "committedDate": "2020-07-27T15:12:53Z", "message": "Added zpages folder under docs, resolved broken image links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e4dde8cdcae5bcd69322b04d30fd4b3d85887c2", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9e4dde8cdcae5bcd69322b04d30fd4b3d85887c2", "committedDate": "2020-07-27T18:00:10Z", "message": "Resolved comments for the design md file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86c2a517f201cc217acf5f747a62dd55078cafa1", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/86c2a517f201cc217acf5f747a62dd55078cafa1", "committedDate": "2020-07-27T20:40:52Z", "message": "Made a few wording changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3c9a5a03bb2e2ea9ad1d62eadc3110794c5c823", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a3c9a5a03bb2e2ea9ad1d62eadc3110794c5c823", "committedDate": "2020-07-29T22:02:47Z", "message": "Wrote a benchmark test for TracezSpanBuckets (#23)\n\n* Scaffolded logic for basic benchmark tests\r\n\r\n* Wrote benchmark tests for TracezSpanBuckets\r\n\r\n* Updated README with benchmark tests\r\n\r\n* Changed the wording slightly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07b2fcf7564f64347c0d4fa4b2e482fec28d247e", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/07b2fcf7564f64347c0d4fa4b2e482fec28d247e", "committedDate": "2020-08-04T18:57:44Z", "message": "Updated README file (#25)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "542f7569c7d47c1565c76912bdddd7ab245c429f", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/542f7569c7d47c1565c76912bdddd7ab245c429f", "committedDate": "2020-08-04T22:17:07Z", "message": "Wrote benchmark tests for TracezDataAggregator (#24)\n\n* Scaffolded logic for basic benchmark tests\r\n\r\n* Wrote benchmark tests for TracezSpanBuckets\r\n\r\n* Updated README with benchmark tests\r\n\r\n* Changed the wording slightly\r\n\r\n* Added a set of benchmark tests for TracezDataAggregator\r\n\r\n* Modified README formatting\r\n\r\n* Changed benchmark test to negate dead code elimination"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe056e3a4dce4816efd2c6e3a7ae626a54e396bc", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fe056e3a4dce4816efd2c6e3a7ae626a54e396bc", "committedDate": "2020-08-04T22:20:58Z", "message": "Merged with original repo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f714b4397ad69538999336a4283c08c7a1b0e0a9", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f714b4397ad69538999336a4283c08c7a1b0e0a9", "committedDate": "2020-08-05T00:27:38Z", "message": "Added Javadocs to the TracezDataAggregator benchmark tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "922e95059d3616de987e26e7b127d7924cca8358", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/922e95059d3616de987e26e7b127d7924cca8358", "committedDate": "2020-08-05T20:15:45Z", "message": "Removed benchmark results from README and added a param to the TracezDataAggregator benchmark tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13d82c49fb7daa1bdeb2640dbfca59fdb275cb5d", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/13d82c49fb7daa1bdeb2640dbfca59fdb275cb5d", "committedDate": "2020-08-06T17:40:54Z", "message": "Update sdk_extensions/zpages/src/jmh/java/io/opentelemetry/sdk/extensions/zpages/TracezDataAggregatorBenchmark.java\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ab6f6afdbb19f3cb393ccb3be29fe4dd1893556", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5ab6f6afdbb19f3cb393ccb3be29fe4dd1893556", "committedDate": "2020-08-06T18:10:19Z", "message": "Added multiple param values for TracezDataAggregatorBenchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18a4141a519f15b4fa308d36501585f0f5c3f20d", "author": {"user": {"login": "williamhu99", "name": "William Hu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/18a4141a519f15b4fa308d36501585f0f5c3f20d", "committedDate": "2020-08-06T18:10:36Z", "message": "Merge branch 'master' of github.com:williamhu99/opentelemetry-java into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ad0ebeb473923d138ac0921ee8c779497d55b81", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0ad0ebeb473923d138ac0921ee8c779497d55b81", "committedDate": "2020-08-07T14:36:53Z", "message": "Merged with OpenTelemetry repo for latest updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48138f77a0be0663033400a516c58c7f755e2531", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/48138f77a0be0663033400a516c58c7f755e2531", "committedDate": "2020-08-07T16:40:41Z", "message": "Changed TraceConfigz zPage form submit to use POST request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNTQzMTU5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#pullrequestreview-463543159", "createdAt": "2020-08-07T19:00:08Z", "commit": {"oid": "48138f77a0be0663033400a516c58c7f755e2531"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTowMDowOFrOG9kq_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTowMDowOFrOG9kq_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzE0OQ==", "bodyText": "Is this saying that using the GET request still works?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r467217149", "createdAt": "2020-08-07T19:00:08Z", "author": {"login": "v-y-l"}, "path": "sdk_extensions/zpages/src/test/java/io/opentelemetry/sdk/extensions/zpages/ZPageHttpHandlerTest.java", "diffHunk": "@@ -29,14 +29,19 @@\n   @Test\n   void parseEmptyQuery() throws URISyntaxException, UnsupportedEncodingException {\n     URI uri = new URI(\"http://localhost:8000/tracez\");\n+    String queryString = \"\";\n     assertThat(ZPageHttpHandler.parseQueryMap(uri)).isEmpty();\n+    assertThat(ZPageHttpHandler.parseQueryMap(queryString)).isEmpty();\n   }\n \n   @Test\n   void parseNormalQuery() throws URISyntaxException, UnsupportedEncodingException {\n     URI uri =\n         new URI(\"http://localhost:8000/tracez/tracez?zspanname=Test&ztype=1&zsubtype=5&noval\");\n+    String queryString = \"zspanname=Test&ztype=1&zsubtype=5&noval\";\n     assertThat(ZPageHttpHandler.parseQueryMap(uri))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48138f77a0be0663033400a516c58c7f755e2531"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eb533251f71b9b3b3a0bd8692d2ac3506d49cce", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1eb533251f71b9b3b3a0bd8692d2ac3506d49cce", "committedDate": "2020-08-07T19:31:50Z", "message": "Added requestMethod parameter to emitHtml, limited TraceConfig change on POST request only"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNzEwNTc4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#pullrequestreview-463710578", "createdAt": "2020-08-08T02:22:23Z", "commit": {"oid": "1eb533251f71b9b3b3a0bd8692d2ac3506d49cce"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMjoyMjoyM1rOG9sxgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMjozMDo0MVrOG9s0UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM0OTg4OQ==", "bodyText": "Does it work to just use CharStreams.toString(httpExchange.getRequestBody())?\nAlso don't forget to close it.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r467349889", "createdAt": "2020-08-08T02:22:23Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/ZPageHttpHandler.java", "diffHunk": "@@ -75,9 +103,20 @@\n   @Override\n   public final void handle(HttpExchange httpExchange) throws IOException {\n     try {\n+      String requestMethod = httpExchange.getRequestMethod();\n       httpExchange.sendResponseHeaders(200, 0);\n-      zpageHandler.emitHtml(\n-          parseQueryMap(httpExchange.getRequestURI()), httpExchange.getResponseBody());\n+      if (requestMethod.equalsIgnoreCase(\"get\")) {\n+        zpageHandler.emitHtml(\n+            requestMethod,\n+            parseQueryMap(httpExchange.getRequestURI()),\n+            httpExchange.getResponseBody());\n+      } else if (requestMethod.equalsIgnoreCase(\"post\")) {\n+        BufferedReader requestBodyReader =\n+            new BufferedReader(new InputStreamReader(httpExchange.getRequestBody(), \"utf-8\"));\n+        String queryString = requestBodyReader.readLine();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eb533251f71b9b3b3a0bd8692d2ac3506d49cce"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM0OTk4MQ==", "bodyText": "parseQueryString", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r467349981", "createdAt": "2020-08-08T02:23:34Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/ZPageHttpHandler.java", "diffHunk": "@@ -49,17 +51,43 @@\n   /**\n    * Build a query map from the {@code uri}.\n    *\n-   * @param uri the {@link URI} for buiding the query map\n-   * @return the query map built based on the @{code uri}\n+   * @param uri the {@link URI} for buiding the query map.\n+   * @return the query map built based on the @{code uri}.\n    */\n   @VisibleForTesting\n   static ImmutableMap<String, String> parseQueryMap(URI uri) throws UnsupportedEncodingException {\n-    String queryStrings = uri.getRawQuery();\n-    if (queryStrings == null) {\n+    String queryString = uri.getRawQuery();\n+    if (queryString == null) {\n       return ImmutableMap.of();\n     }\n     Map<String, String> queryMap = new HashMap<String, String>();\n-    for (String param : QUERY_SPLITTER.split(queryStrings)) {\n+    for (String param : QUERY_SPLITTER.split(queryString)) {\n+      List<String> keyValuePair = QUERY_KEYVAL_SPLITTER.splitToList(param);\n+      if (keyValuePair.size() > 1) {\n+        if (keyValuePair.get(0).equals(PARAM_SPAN_NAME)) {\n+          queryMap.put(keyValuePair.get(0), URLDecoder.decode(keyValuePair.get(1), \"UTF-8\"));\n+        } else {\n+          queryMap.put(keyValuePair.get(0), keyValuePair.get(1));\n+        }\n+      }\n+    }\n+    return ImmutableMap.copyOf(queryMap);\n+  }\n+\n+  /**\n+   * Build a query map from the query string.\n+   *\n+   * @param queryString the query string for buiding the query map.\n+   * @return the query map built based on the query string.\n+   */\n+  @VisibleForTesting\n+  static ImmutableMap<String, String> parseQueryMap(String queryString)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eb533251f71b9b3b3a0bd8692d2ac3506d49cce"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM1MDIxMQ==", "bodyText": "You should be able to just pass this instead of copying the logic as is.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r467350211", "createdAt": "2020-08-08T02:26:10Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/ZPageHttpHandler.java", "diffHunk": "@@ -49,17 +51,43 @@\n   /**\n    * Build a query map from the {@code uri}.\n    *\n-   * @param uri the {@link URI} for buiding the query map\n-   * @return the query map built based on the @{code uri}\n+   * @param uri the {@link URI} for buiding the query map.\n+   * @return the query map built based on the @{code uri}.\n    */\n   @VisibleForTesting\n   static ImmutableMap<String, String> parseQueryMap(URI uri) throws UnsupportedEncodingException {\n-    String queryStrings = uri.getRawQuery();\n-    if (queryStrings == null) {\n+    String queryString = uri.getRawQuery();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eb533251f71b9b3b3a0bd8692d2ac3506d49cce"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM1MDYwOA==", "bodyText": "Can you add a test that makes sure get doesn't update the config?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r467350608", "createdAt": "2020-08-08T02:30:41Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/test/java/io/opentelemetry/sdk/extensions/zpages/TraceConfigzZPageHandlerTest.java", "diffHunk": "@@ -45,7 +45,7 @@ void changeTable_emitRowsCorrectly() {\n \n     TraceConfigzZPageHandler traceConfigzZPageHandler =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eb533251f71b9b3b3a0bd8692d2ac3506d49cce"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f0928883388f313fc38b481c8c32398aaa90d82", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0f0928883388f313fc38b481c8c32398aaa90d82", "committedDate": "2020-08-10T15:40:31Z", "message": "Removed duplicate parse function, added test for update on POST request only"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDIzNjUz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#pullrequestreview-464423653", "createdAt": "2020-08-10T17:17:40Z", "commit": {"oid": "0f0928883388f313fc38b481c8c32398aaa90d82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzoxNzo0MFrOG-X-KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzoxNzo0MFrOG-X-KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1NzY0MQ==", "bodyText": "if the requestMethod isn't used in this method, why pass it in?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r468057641", "createdAt": "2020-08-10T17:17:40Z", "author": {"login": "jkwatson"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TracezZPageHandler.java", "diffHunk": "@@ -522,7 +522,8 @@ private void emitHtmlBody(Map<String, String> queryMap, PrintStream out) {\n   }\n \n   @Override\n-  public void emitHtml(Map<String, String> queryMap, OutputStream outputStream) {\n+  public void emitHtml(\n+      String requestMethod, Map<String, String> queryMap, OutputStream outputStream) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f0928883388f313fc38b481c8c32398aaa90d82"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDI4ODUy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#pullrequestreview-464428852", "createdAt": "2020-08-10T17:25:13Z", "commit": {"oid": "0f0928883388f313fc38b481c8c32398aaa90d82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzoyNToxM1rOG-YOhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzoyNToxM1rOG-YOhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MTgzMA==", "bodyText": "rather than just having a single emitHtml method, it would be better to have 2 methods, I think.  One to process the POST changes, and one to then emit the resulting HTML page. What do you think about splitting the interface in 2, and then the things that don't support any updates can just no-op the implementation on the processUpdate method (or whatever you call it)?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r468061830", "createdAt": "2020-08-10T17:25:13Z", "author": {"login": "jkwatson"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/ZPageHttpHandler.java", "diffHunk": "@@ -75,9 +76,24 @@\n   @Override\n   public final void handle(HttpExchange httpExchange) throws IOException {\n     try {\n+      String requestMethod = httpExchange.getRequestMethod();\n       httpExchange.sendResponseHeaders(200, 0);\n-      zpageHandler.emitHtml(\n-          parseQueryMap(httpExchange.getRequestURI()), httpExchange.getResponseBody());\n+      if (requestMethod.equalsIgnoreCase(\"GET\")) {\n+        zpageHandler.emitHtml(\n+            requestMethod,\n+            parseQueryString(httpExchange.getRequestURI().getRawQuery()),\n+            httpExchange.getResponseBody());\n+      } else if (requestMethod.equalsIgnoreCase(\"POST\")) {\n+        // BufferedReader requestBodyReader =\n+        // new BufferedReader(new InputStreamReader(httpExchange.getRequestBody(), \"utf-8\"));\n+        // String queryString = requestBodyReader.readLine();\n+        InputStreamReader requestBodyReader =\n+            new InputStreamReader(httpExchange.getRequestBody(), \"utf-8\");\n+        String queryString = CharStreams.toString(requestBodyReader);\n+        requestBodyReader.close();\n+        zpageHandler.emitHtml(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f0928883388f313fc38b481c8c32398aaa90d82"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8044ba183ca7bb7c1fcea61814437f825aab06fa", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8044ba183ca7bb7c1fcea61814437f825aab06fa", "committedDate": "2020-08-11T01:32:41Z", "message": "Added separate method for processing request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTgzMjA5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#pullrequestreview-464983209", "createdAt": "2020-08-11T11:39:40Z", "commit": {"oid": "8044ba183ca7bb7c1fcea61814437f825aab06fa"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMTozOTo0MFrOG-z74w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMTo0MTowNlrOG-z-5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxNTgxMQ==", "bodyText": "This section seems like an error applying the config, not an error generating HTML right?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r468515811", "createdAt": "2020-08-11T11:39:40Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/TraceConfigzZPageHandler.java", "diffHunk": "@@ -327,6 +325,44 @@ public void emitHtml(Map<String, String> queryMap, OutputStream outputStream) {\n     }\n   }\n \n+  @Override\n+  public boolean processRequest(\n+      String requestMethod, Map<String, String> queryMap, OutputStream outputStream) {\n+    if (requestMethod.equalsIgnoreCase(\"POST\")) {\n+      try {\n+        applyTraceConfig(queryMap);\n+      } catch (Throwable t) {\n+        try (PrintStream out = new PrintStream(outputStream, /* autoFlush= */ false, \"UTF-8\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8044ba183ca7bb7c1fcea61814437f825aab06fa"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxNjQwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    InputStreamReader requestBodyReader =\n          \n          \n            \n                        new InputStreamReader(httpExchange.getRequestBody(), \"utf-8\");\n          \n          \n            \n                    String queryString = CharStreams.toString(requestBodyReader);\n          \n          \n            \n                    requestBodyReader.close();\n          \n          \n            \n                    final String queryString;\n          \n          \n            \n                    try (InputStreamReader requestBodyReader =\n          \n          \n            \n                        new InputStreamReader(httpExchange.getRequestBody(), \"utf-8\")) {\n          \n          \n            \n                      queryString = CharStreams.toString(requestBodyReader);\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nMay as well use try/resources", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r468516403", "createdAt": "2020-08-11T11:40:44Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/main/java/io/opentelemetry/sdk/extensions/zpages/ZPageHttpHandler.java", "diffHunk": "@@ -75,9 +76,24 @@\n   @Override\n   public final void handle(HttpExchange httpExchange) throws IOException {\n     try {\n+      String requestMethod = httpExchange.getRequestMethod();\n       httpExchange.sendResponseHeaders(200, 0);\n-      zpageHandler.emitHtml(\n-          parseQueryMap(httpExchange.getRequestURI()), httpExchange.getResponseBody());\n+      if (requestMethod.equalsIgnoreCase(\"GET\")) {\n+        zpageHandler.emitHtml(\n+            parseQueryString(httpExchange.getRequestURI().getRawQuery()),\n+            httpExchange.getResponseBody());\n+      } else {\n+        InputStreamReader requestBodyReader =\n+            new InputStreamReader(httpExchange.getRequestBody(), \"utf-8\");\n+        String queryString = CharStreams.toString(requestBodyReader);\n+        requestBodyReader.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8044ba183ca7bb7c1fcea61814437f825aab06fa"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxNjU4MQ==", "bodyText": "Do we need to check this in all the tests? Aren't they non-error tests?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#discussion_r468516581", "createdAt": "2020-08-11T11:41:06Z", "author": {"login": "anuraaga"}, "path": "sdk_extensions/zpages/src/test/java/io/opentelemetry/sdk/extensions/zpages/TraceConfigzZPageHandlerTest.java", "diffHunk": "@@ -154,7 +182,10 @@ void appliesChangesCorrectly_formSubmit() {\n \n     TraceConfigzZPageHandler traceConfigzZPageHandler =\n         new TraceConfigzZPageHandler(tracerProvider);\n-    traceConfigzZPageHandler.emitHtml(queryMap, output);\n+    boolean error = traceConfigzZPageHandler.processRequest(\"POST\", queryMap, output);\n+    if (!error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8044ba183ca7bb7c1fcea61814437f825aab06fa"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95ff5b77f87bcb805d8d10cb94d82ef5ee84c52f", "author": {"user": {"login": "wtyanan", "name": "Terry (Tianyu) Wang"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/95ff5b77f87bcb805d8d10cb94d82ef5ee84c52f", "committedDate": "2020-08-11T14:58:56Z", "message": "Removed unnecessary error check in tests, used try resources for inputstream"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Njc4ODcx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#pullrequestreview-465678871", "createdAt": "2020-08-12T08:01:11Z", "commit": {"oid": "95ff5b77f87bcb805d8d10cb94d82ef5ee84c52f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1OTMzNjU4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#pullrequestreview-465933658", "createdAt": "2020-08-12T13:48:37Z", "commit": {"oid": "95ff5b77f87bcb805d8d10cb94d82ef5ee84c52f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDIwODU5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1521#pullrequestreview-466020859", "createdAt": "2020-08-12T15:19:41Z", "commit": {"oid": "95ff5b77f87bcb805d8d10cb94d82ef5ee84c52f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2306, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}