{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NzI2MDg4", "number": 2301, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMDoyNzo0NlrOFFVJVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyMToyNFrOFF1ZrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMTMzNjUyOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMDoyNzo0NlrOIFzKfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMToyNDozNlrOIGgm7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1MjA2MQ==", "bodyText": "Oh - also should we call out final before non-final?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#discussion_r542952061", "createdAt": "2020-12-15T00:27:46Z", "author": {"login": "anuraaga"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -67,6 +67,15 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n * Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.\n+* In general, we use the following ordering of class members:\n+    * static fields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f65f4ceb84255f65a832216caf6eee6d93dc0517"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1NzYxMA==", "bodyText": "yeah, that's probably a good call. I'll update.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#discussion_r542957610", "createdAt": "2020-12-15T00:42:37Z", "author": {"login": "jkwatson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -67,6 +67,15 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n * Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.\n+* In general, we use the following ordering of class members:\n+    * static fields", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1MjA2MQ=="}, "originalCommit": {"oid": "f65f4ceb84255f65a832216caf6eee6d93dc0517"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY5NjYyMA==", "bodyText": "done!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#discussion_r543696620", "createdAt": "2020-12-15T21:24:36Z", "author": {"login": "jkwatson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -67,6 +67,15 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n * Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.\n+* In general, we use the following ordering of class members:\n+    * static fields", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1MjA2MQ=="}, "originalCommit": {"oid": "f65f4ceb84255f65a832216caf6eee6d93dc0517"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjYyMTI1OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyMToyNFrOIGinjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjoyMToxMlrOIGpFog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyOTU0OA==", "bodyText": "This is not very visible for the users of the API. Consider to add similar statement in the API readme? Or package info?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#discussion_r543729548", "createdAt": "2020-12-15T22:21:24Z", "author": {"login": "bogdandrutu"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -67,6 +67,15 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n * Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.\n+* In general, we use the following ordering of class members:\n+    * static fields (final before non-final)\n+    * non-static fields (final before non-final)\n+    * constructors\n+    * static methods\n+    * instance methods\n+    * inner classes\n+* Adding `toString()` overrides on classes is encouraged, but we only use `toString()` to provide debugging assistance. The implementations\n+of all `toString()` methods should be considered to be unstable unless explicitly documented otherwise.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4578e1089b603b33ce9e26657a8412805fa096d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NjQ3Mg==", "bodyText": "Agreed. Probably both in the readme and the package info. I can add that to this PR, or create a separate one, your call.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#discussion_r543776472", "createdAt": "2020-12-16T00:02:08Z", "author": {"login": "jkwatson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -67,6 +67,15 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n * Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.\n+* In general, we use the following ordering of class members:\n+    * static fields (final before non-final)\n+    * non-static fields (final before non-final)\n+    * constructors\n+    * static methods\n+    * instance methods\n+    * inner classes\n+* Adding `toString()` overrides on classes is encouraged, but we only use `toString()` to provide debugging assistance. The implementations\n+of all `toString()` methods should be considered to be unstable unless explicitly documented otherwise.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyOTU0OA=="}, "originalCommit": {"oid": "e4578e1089b603b33ce9e26657a8412805fa096d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgzNTU1NA==", "bodyText": "Let's do separate since the title reflects this PR well :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2301#discussion_r543835554", "createdAt": "2020-12-16T02:21:12Z", "author": {"login": "anuraaga"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -67,6 +67,15 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n * Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.\n+* In general, we use the following ordering of class members:\n+    * static fields (final before non-final)\n+    * non-static fields (final before non-final)\n+    * constructors\n+    * static methods\n+    * instance methods\n+    * inner classes\n+* Adding `toString()` overrides on classes is encouraged, but we only use `toString()` to provide debugging assistance. The implementations\n+of all `toString()` methods should be considered to be unstable unless explicitly documented otherwise.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyOTU0OA=="}, "originalCommit": {"oid": "e4578e1089b603b33ce9e26657a8412805fa096d"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1715, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}