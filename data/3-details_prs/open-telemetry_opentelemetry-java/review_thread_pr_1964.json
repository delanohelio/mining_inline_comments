{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNzcyMzIw", "number": 1964, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo1OToxM1rOE0d1fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDozODoxMFrOE0iqag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDUwMjM4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo1OToxM1rOHsNSjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjowMDo0NlrOHshFtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExNzEzNA==", "bodyText": "Maybe we should do a fine-level logging here (can be discussed in/as a follow-up).", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516117134", "createdAt": "2020-11-02T16:59:13Z", "author": {"login": "carlosalberto"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "diffHunk": "@@ -135,6 +136,9 @@ public String toString() {\n \n     @Override\n     public Baggage.Builder put(String key, String value, EntryMetadata entryMetadata) {\n+      if (!isKeyValid(key) || !isValueValid(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6b72424274c099ffbe320aa818bed7f464feaa"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzOTYyMg==", "bodyText": "why not throwing exception?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516239622", "createdAt": "2020-11-02T20:36:55Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "diffHunk": "@@ -135,6 +136,9 @@ public String toString() {\n \n     @Override\n     public Baggage.Builder put(String key, String value, EntryMetadata entryMetadata) {\n+      if (!isKeyValid(key) || !isValueValid(value)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExNzEzNA=="}, "originalCommit": {"oid": "fc6b72424274c099ffbe320aa818bed7f464feaa"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ0MTUyNg==", "bodyText": "We currently don't log for parameter checks in most places I believe. Maybe we should, but I think we should do it consistently separate from removing the exceptions.\n@bogdandrutu To throw exceptions, I believe we'd need a spec change https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/error-handling.md#basic-error-handling-principles", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516441526", "createdAt": "2020-11-03T06:00:46Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "diffHunk": "@@ -135,6 +136,9 @@ public String toString() {\n \n     @Override\n     public Baggage.Builder put(String key, String value, EntryMetadata entryMetadata) {\n+      if (!isKeyValid(key) || !isValueValid(value)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExNzEzNA=="}, "originalCommit": {"oid": "fc6b72424274c099ffbe320aa818bed7f464feaa"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTI4ODM0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/api/baggage/EntryMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDozNjozMVrOHsUwPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTowNjoyMVrOHsdMcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzOTQyMw==", "bodyText": "Mark metadata as Nullable", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516239423", "createdAt": "2020-11-02T20:36:31Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/EntryMetadata.java", "diffHunk": "@@ -26,6 +26,9 @@\n    * @return an {@code EntryMetadata}.\n    */\n   public static EntryMetadata create(String metadata) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6b72424274c099ffbe320aa818bed7f464feaa"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NzcxMw==", "bodyText": "We don't use Nullable on APIs which shouldn't be passed null but we have defensive behavior anyways. IIUC this is the answer to all your comments?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516377713", "createdAt": "2020-11-03T01:06:21Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/EntryMetadata.java", "diffHunk": "@@ -26,6 +26,9 @@\n    * @return an {@code EntryMetadata}.\n    */\n   public static EntryMetadata create(String metadata) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzOTQyMw=="}, "originalCommit": {"oid": "fc6b72424274c099ffbe320aa818bed7f464feaa"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTI5MjEyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDozNzo0N1rOHsUyog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjoxMTozMlrOHshQBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDAzNA==", "bodyText": "This is wrong, either not allow and check for null or throw exception.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516240034", "createdAt": "2020-11-02T20:37:47Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "diffHunk": "@@ -146,14 +150,14 @@ public String toString() {\n \n     @Override\n     public Baggage.Builder put(String key, String value) {\n-      entries.put(\n-          Objects.requireNonNull(key, \"key\"),\n-          Entry.create(key, Objects.requireNonNull(value, \"value\"), EntryMetadata.EMPTY));\n-      return this;\n+      return put(key, value, EntryMetadata.EMPTY);\n     }\n \n     @Override\n     public Baggage.Builder remove(String key) {\n+      if (key == null) {\n+        return this;\n+      }\n       entries.remove(Objects.requireNonNull(key, \"key\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6b72424274c099ffbe320aa818bed7f464feaa"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ0NDE2NQ==", "bodyText": "Oops, removed the redundant checks", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516444165", "createdAt": "2020-11-03T06:11:32Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "diffHunk": "@@ -146,14 +150,14 @@ public String toString() {\n \n     @Override\n     public Baggage.Builder put(String key, String value) {\n-      entries.put(\n-          Objects.requireNonNull(key, \"key\"),\n-          Entry.create(key, Objects.requireNonNull(value, \"value\"), EntryMetadata.EMPTY));\n-      return this;\n+      return put(key, value, EntryMetadata.EMPTY);\n     }\n \n     @Override\n     public Baggage.Builder remove(String key) {\n+      if (key == null) {\n+        return this;\n+      }\n       entries.remove(Objects.requireNonNull(key, \"key\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDAzNA=="}, "originalCommit": {"oid": "fc6b72424274c099ffbe320aa818bed7f464feaa"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTI5MzIyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDozODoxMVrOHsUzTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDozODoxMVrOHsUzTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDIwNw==", "bodyText": "Either throw exception or allow Nullable", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516240207", "createdAt": "2020-11-02T20:38:11Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "diffHunk": "@@ -135,6 +136,9 @@ public String toString() {\n \n     @Override\n     public Baggage.Builder put(String key, String value, EntryMetadata entryMetadata) {\n+      if (!isKeyValid(key) || !isValueValid(value)) {\n+        return this;\n+      }\n       entries.put(\n           Objects.requireNonNull(key, \"key\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6b72424274c099ffbe320aa818bed7f464feaa"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1856, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}