{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NTUwNDE0", "number": 1846, "title": "Automatically generate Semantic Convention attributes", "bodyText": "Fixes #1841. I am suffixing this class with V2 because EXCEPTION_EVENT_NAME is not part of the YAML definitions. I will follow up by refactoring the code and moving that constant somewhere.\nDoes this solve your issue @trask? Or do you prefer having a new class for just the enum values?\nFor your example, the enum is available here: https://github.com/open-telemetry/opentelemetry-java/pull/1846/files#diff-50fb78fbdb13d122ada839fd124b2beffec95fe51107c23cffc9a5e48ca3e4ceR714\nAs future work, I am leaving the definition of the proper workflow to follow. ATM, I have the following in mind:\n\nManually run the generate.sh script provided within this PR\nUse git submodules as we do for the protobuf definitions and define a gradle task\nCreate a GitHub action that opens a PR in otel-java with the newly generated java class(es) every time master in otel-spec updates a YAML file", "createdAt": "2020-10-21T13:34:34Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846", "merged": true, "mergeCommit": {"oid": "d0785ff84fe10ae823a5286a307b92a47b8ea0e4"}, "closed": true, "closedAt": "2020-10-23T16:00:43Z", "author": {"login": "thisthat"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUtPr_gH2gAyNTA3NTUwNDE0OmExZTdmYmFjNGY3OWM3Njk5M2UwNWRhNGM3NWQ5N2E5M2Q5M2M5NGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVYO_AAFqTUxNTc3MjQxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a1e7fbac4f79c76993e05da4c75d97a93d93c94c", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a1e7fbac4f79c76993e05da4c75d97a93d93c94c", "committedDate": "2020-10-21T13:18:35Z", "message": "Automatically generate Semantic Convention attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8b230108cc8405f6135f2bac508c2f9dbd1fe826", "committedDate": "2020-10-21T13:43:55Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNzA3MTc2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#pullrequestreview-513707176", "createdAt": "2020-10-21T13:49:20Z", "commit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzo0OToyMFrOHltSnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzo1MTo1OFrOHltfdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMwMTQwNw==", "bodyText": "I think it should be relatively straightforward to generate this in gradle using e.g. https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Exec.html. Then we would not have to check in this file.\nOn the minus side, we would then require contributors to have a recent Python 3 installed (actually Docker currently which makes it un-buildable on Windows \ud83e\udd14).\nIf we don't auto-generate the file, we should check during build that the file matches the generated output (does the tool support that for any generator currently or only markdown?)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509301407", "createdAt": "2020-10-21T13:49:20Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributesV2.java", "diffHunk": "@@ -0,0 +1,1006 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.trace.attributes;\n+\n+import static io.opentelemetry.common.AttributeKey.booleanKey;\n+import static io.opentelemetry.common.AttributeKey.longKey;\n+import static io.opentelemetry.common.AttributeKey.stringKey;\n+\n+import io.opentelemetry.common.AttributeKey;\n+\n+// DO NOT EDIT, this is an Auto-generated file from /templates/SemanticAttributesV2.java.j2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMwNDY5Mw==", "bodyText": "We should pin this to a certain commit, or check out a release branch to have a latest 0.x version at least.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509304693", "createdAt": "2020-10-21T13:51:58Z", "author": {"login": "Oberon00"}, "path": "semantic_convention/generate.sh", "diffHunk": "@@ -0,0 +1,22 @@\n+#!/bin/bash\n+\n+DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+rm -rf opentelemetry-specification || true\n+git clone https://github.com/open-telemetry/opentelemetry-specification.git --depth 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MTkyMjM1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#pullrequestreview-514192235", "createdAt": "2020-10-21T21:16:13Z", "commit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMToxNjoxM1rOHmF5aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMToxNjoxM1rOHmF5aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwNDU1NQ==", "bodyText": "double?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509704555", "createdAt": "2020-10-21T21:16:13Z", "author": {"login": "Oberon00"}, "path": "semantic_convention/templates/SemanticAttributesV2.java.j2", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+\n+{%- macro to_java_type(type) -%}\n+  {%- if type == \"string\" -%}\n+    String\n+  {%- elif type == \"boolean\" -%}\n+    boolean\n+  {%- elif type == \"number\" -%}\n+    long", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1339da463d22a2d6071e23b37597bfadecaee17e", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1339da463d22a2d6071e23b37597bfadecaee17e", "committedDate": "2020-10-22T07:34:35Z", "message": "Transition to automatically generated class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "586a4eec5d883c2e8b540c054b9eb878962e4abd", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/586a4eec5d883c2e8b540c054b9eb878962e4abd", "committedDate": "2020-10-22T07:41:41Z", "message": "Pin to specific commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d1df65fbb724c4ce6431ae9559bb077dc304b79", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7d1df65fbb724c4ce6431ae9559bb077dc304b79", "committedDate": "2020-10-23T07:23:25Z", "message": "Move EXCEPTION_EVENT_NAME inside the template"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzY0Njgz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#pullrequestreview-515764683", "createdAt": "2020-10-23T15:17:13Z", "commit": {"oid": "7d1df65fbb724c4ce6431ae9559bb077dc304b79"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzcyNDEy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#pullrequestreview-515772412", "createdAt": "2020-10-23T15:23:44Z", "commit": {"oid": "7d1df65fbb724c4ce6431ae9559bb077dc304b79"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4103, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}