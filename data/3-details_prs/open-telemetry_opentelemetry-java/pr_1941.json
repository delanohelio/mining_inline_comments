{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMDQzMDk1", "number": 1941, "title": "Prevent SDK from throwing on null instrumentation name", "bodyText": "Fixes #1879\nThe first commit has the fix. The other 2 commits are more of a code cleanup based on changes made in the first commit, but are not strictly necessary to fix the issue.", "createdAt": "2020-10-30T14:23:31Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941", "merged": true, "mergeCommit": {"oid": "4bc4f04e75d646e837f075ecb1cafbed6722537e"}, "closed": true, "closedAt": "2020-11-13T17:48:45Z", "author": {"login": "MariusVolkhart"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXqFo-AFqTUyMDg3Nzg5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcKwEQABqjM5OTQ1NjY4MTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODc3ODk2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-520877896", "createdAt": "2020-10-30T17:19:39Z", "commit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoxOTo0MFrOHrYsoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoxOTo0MFrOHrYsoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1NTQ1Ng==", "bodyText": "I don't think this is a good idea. If the compiler can catch someone explicitly passing in a null version, then that person can change to use the method that doesn't take one at all.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#discussion_r515255456", "createdAt": "2020-10-30T17:19:40Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/api/OpenTelemetry.java", "diffHunk": "@@ -169,7 +170,7 @@ default Tracer getTracer(String instrumentationName) {\n    *     \"semver:1.0.0\").\n    * @return a tracer instance.\n    */\n-  default Tracer getTracer(String instrumentationName, String instrumentationVersion) {\n+  default Tracer getTracer(String instrumentationName, @Nullable String instrumentationVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODc4ODkx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-520878891", "createdAt": "2020-10-30T17:21:01Z", "commit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyMTowMVrOHrYv0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyMTowMVrOHrYv0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1NjI3NA==", "bodyText": "why get rid of this convenience method?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#discussion_r515256274", "createdAt": "2020-10-30T17:21:01Z", "author": {"login": "jkwatson"}, "path": "sdk/common/src/main/java/io/opentelemetry/sdk/internal/ComponentRegistry.java", "diffHunk": "@@ -22,18 +22,6 @@\n \n   private final ConcurrentMap<InstrumentationLibraryInfo, V> registry = new ConcurrentHashMap<>();\n \n-  /**\n-   * Returns the registered value associated with this name and {@code null} version if any,\n-   * otherwise creates a new instance and associates it with the given name and {@code null}\n-   * version.\n-   *\n-   * @param instrumentationName the name of the instrumentation library.\n-   * @return the registered value associated with this name and {@code null} version.\n-   */\n-  public final V get(String instrumentationName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODgwMzY4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-520880368", "createdAt": "2020-10-30T17:22:57Z", "commit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyMjo1N1rOHrY0UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyMjo1N1rOHrY0UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1NzQyNQ==", "bodyText": "we prefer capitalizing constant names, so change to DEFAULT_METER_NAME", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#discussion_r515257425", "createdAt": "2020-10-30T17:22:57Z", "author": {"login": "jkwatson"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java", "diffHunk": "@@ -29,6 +31,8 @@\n  */\n public final class MeterSdkProvider implements MeterProvider {\n \n+  private static final Logger logger = Logger.getLogger(MeterSdkProvider.class.getName());\n+  private static final String defaultMeterName = \"unknown\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODgxMjMz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-520881233", "createdAt": "2020-10-30T17:24:04Z", "commit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyNDowNFrOHrY3CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyNDowNFrOHrY3CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1ODEyMA==", "bodyText": "I'd lower this log level, maybe to FINE. We don't want to spam user logs if an instrumentation library has not passed in a name.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#discussion_r515258120", "createdAt": "2020-10-30T17:24:04Z", "author": {"login": "jkwatson"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java", "diffHunk": "@@ -41,11 +45,17 @@ private MeterSdkProvider(Clock clock, Resource resource) {\n \n   @Override\n   public MeterSdk get(String instrumentationName) {\n-    return registry.get(instrumentationName);\n+    return get(instrumentationName, null);\n   }\n \n   @Override\n-  public MeterSdk get(String instrumentationName, String instrumentationVersion) {\n+  public MeterSdk get(String instrumentationName, @Nullable String instrumentationVersion) {\n+    // Per the spec, both null and empty are \"invalid\" and a \"default\" should be used. See commit\n+    //   message for further details.\n+    if (instrumentationName == null || instrumentationName.isEmpty()) {\n+      logger.warning(\"Meter requested without instrumentation name.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODgxNTQ4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-520881548", "createdAt": "2020-10-30T17:24:25Z", "commit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyNDoyNVrOHrY4Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyNDoyNVrOHrY4Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1ODM4Ng==", "bodyText": "same comment on constant naming.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#discussion_r515258386", "createdAt": "2020-10-30T17:24:25Z", "author": {"login": "jkwatson"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "diffHunk": "@@ -28,6 +29,7 @@\n  */\n public class TracerSdkProvider implements TracerProvider, TracerSdkManagement {\n   private static final Logger logger = Logger.getLogger(TracerSdkProvider.class.getName());\n+  private static final String defaultTracerName = \"unknown\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODgxODg3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-520881887", "createdAt": "2020-10-30T17:24:49Z", "commit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyNDo0OVrOHrY49g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyNDo0OVrOHrY49g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1ODYxNA==", "bodyText": "maybe make the constant package access so we don't have to fix up tests if the default value is decided to change?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#discussion_r515258614", "createdAt": "2020-10-30T17:24:49Z", "author": {"login": "jkwatson"}, "path": "sdk/metrics/src/test/java/io/opentelemetry/sdk/metrics/MeterSdkRegistryTest.java", "diffHunk": "@@ -101,4 +101,22 @@ void metricProducer_GetAllMetrics() {\n                 Collections.singletonList(\n                     LongPoint.create(testClock.now(), testClock.now(), Labels.empty(), 10))));\n   }\n+\n+  @Test\n+  void suppliesDefaultMeterForNullName() {\n+    MeterSdk meter = meterProvider.get(null);\n+    assertThat(meter.getInstrumentationLibraryInfo().getName()).isEqualTo(\"unknown\");\n+\n+    meter = meterProvider.get(null, null);\n+    assertThat(meter.getInstrumentationLibraryInfo().getName()).isEqualTo(\"unknown\");\n+  }\n+\n+  @Test\n+  void suppliesDefaultMeterForEmptyName() {\n+    MeterSdk meter = meterProvider.get(\"\");\n+    assertThat(meter.getInstrumentationLibraryInfo().getName()).isEqualTo(\"unknown\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODgzMDY4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-520883068", "createdAt": "2020-10-30T17:26:16Z", "commit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyNjoxNlrOHrY8fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyNjoxNlrOHrY8fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1OTUxNw==", "bodyText": "I'm not a fan of referring to commit messages in explanatory comments. Over time, finding the correct commit could be a pretty large chore for someone reading this. I think first sentence should suffice here (and in the meter case as well).", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#discussion_r515259517", "createdAt": "2020-10-30T17:26:16Z", "author": {"login": "jkwatson"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "diffHunk": "@@ -47,11 +49,17 @@ private TracerSdkProvider(Clock clock, IdsGenerator idsGenerator, Resource resou\n \n   @Override\n   public Tracer get(String instrumentationName) {\n-    return tracerSdkComponentRegistry.get(instrumentationName);\n+    return get(instrumentationName, null);\n   }\n \n   @Override\n-  public Tracer get(String instrumentationName, String instrumentationVersion) {\n+  public Tracer get(String instrumentationName, @Nullable String instrumentationVersion) {\n+    // Per the spec, both null and empty are \"invalid\" and a \"default\" should be used. See commit\n+    //   message for further details.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bc71afab3d788f7d5bb994afd14a01b60caee1b", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9bc71afab3d788f7d5bb994afd14a01b60caee1b", "committedDate": "2020-10-30T14:20:06Z", "message": "Remove ComponentRegistry#get(String) overload\n\nThis overload is not no longer used by our code."}, "afterCommit": {"oid": "c3ad26c40371312eb7a3170a130b179b636f1c80", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c3ad26c40371312eb7a3170a130b179b636f1c80", "committedDate": "2020-11-01T11:58:31Z", "message": "fixup! Provide a default Tracer and Meter for invalid instrumentation names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODA5MzM4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-521809338", "createdAt": "2020-11-02T16:47:14Z", "commit": {"oid": "4fd38148af69be5bd4b79c649c8ff28e9e3d2603"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMDE1NTE2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-522015516", "createdAt": "2020-11-02T21:45:26Z", "commit": {"oid": "d2b0ca709b921baf1cd39f3f782051dbdb3f6ffe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMTo0NToyNlrOHsWxwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMTo0NToyNlrOHsWxwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3MjU3OA==", "bodyText": "I think this will be a common case, I would suggest to actually resolve this as a static variable and return the instance.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#discussion_r516272578", "createdAt": "2020-11-02T21:45:26Z", "author": {"login": "bogdandrutu"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java", "diffHunk": "@@ -41,11 +45,16 @@ private MeterSdkProvider(Clock clock, Resource resource) {\n \n   @Override\n   public MeterSdk get(String instrumentationName) {\n-    return registry.get(instrumentationName);\n+    return get(instrumentationName, null);\n   }\n \n   @Override\n-  public MeterSdk get(String instrumentationName, String instrumentationVersion) {\n+  public MeterSdk get(String instrumentationName, @Nullable String instrumentationVersion) {\n+    // Per the spec, both null and empty are \"invalid\" and a \"default\" should be used.\n+    if (instrumentationName == null || instrumentationName.isEmpty()) {\n+      LOGGER.fine(\"Meter requested without instrumentation name.\");\n+      instrumentationName = DEFAULT_METER_NAME;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2b0ca709b921baf1cd39f3f782051dbdb3f6ffe"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2b0ca709b921baf1cd39f3f782051dbdb3f6ffe", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d2b0ca709b921baf1cd39f3f782051dbdb3f6ffe", "committedDate": "2020-11-02T19:02:50Z", "message": "fixup! Remove ComponentRegistry#get(String) overload\n\nThis reverts commit db56814c"}, "afterCommit": {"oid": "72e0c0454c8b2ef8754755913c689cea88db17f7", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/72e0c0454c8b2ef8754755913c689cea88db17f7", "committedDate": "2020-11-07T16:49:17Z", "message": "fixup! Remove ComponentRegistry#get(String) overload\n\nThis reverts commit db56814c"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjgxOTI4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-529681928", "createdAt": "2020-11-13T03:34:38Z", "commit": {"oid": "72e0c0454c8b2ef8754755913c689cea88db17f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMzozNDozOFrOHyYgjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMzozNDozOFrOHyYgjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU5MjM5OQ==", "bodyText": "@MariusVolkhart Thanks for this change - the implementation looks good, but I agree that we don't need to add the @Nullable annotation to parameters that, we defensively check, but still expect to not be null. Do you think you can remove the annotations?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#discussion_r522592399", "createdAt": "2020-11-13T03:34:38Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/api/metrics/MeterProvider.java", "diffHunk": "@@ -43,5 +44,5 @@ static MeterProvider getDefault() {\n    * @param instrumentationVersion The version of the instrumentation library.\n    * @return a tracer instance.\n    */\n-  Meter get(String instrumentationName, String instrumentationVersion);\n+  Meter get(String instrumentationName, @Nullable String instrumentationVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72e0c0454c8b2ef8754755913c689cea88db17f7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjIwMzUy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1941#pullrequestreview-530220352", "createdAt": "2020-11-13T16:43:14Z", "commit": {"oid": "f7c54473312e2cec814aa62be9bf57eea4cf995c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1165a3a138317462f23808cdc2c2431b60e73285", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1165a3a138317462f23808cdc2c2431b60e73285", "committedDate": "2020-11-13T17:38:14Z", "message": "Provide a default Tracer and Meter for invalid instrumentation names\n\nAccording to the spec, https://github.com/open-telemetry/opentelemetry-specification/blob/v0.6.0/specification/trace/api.md#tracerprovider-operations both a null and empty instrumentation name are invalid and a default implementation should be provided.\n\nHowever, the spec is vague on what default means. See https://github.com/open-telemetry/opentelemetry-specification/issues/586#issuecomment-669856711\n\nThis change interprets \"default\" as meaning, \"it should still work, but it's not ideal\". Accordingly, a real Tracer or Meter implementation from the SDK is used. It meets the requirements of exporters and such by using a valid instrumentation name. It meets the requirements of application developers by producing valid tracing data. It also warns library and application developers by logging at the WARN level that an invalid value has been given.\n\nThe rational for this interpretation is that things should always work for the application developer. If an app developer doesn't provide a name, they should be chided, but they are instrumenting their own app, and likely don't care about the lack of name. If an app developer incorporates a library that doesn't specify the instrumentation name, the instrumentation should still be made available to application devs, but they should be able to turn if off (hence a valid name) and be made aware of something not being right (hence the logging) so they can report it to the library maintainers.\n\nFies #1879"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5439914070c2d7c959ba67980cd59a8e7ac5e03a", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5439914070c2d7c959ba67980cd59a8e7ac5e03a", "committedDate": "2020-11-13T17:38:14Z", "message": "Mark instrumentation version nullable in MeterProvider and TracerProvider\n\nThe spec dictates this to be optional, and the implementations treat it as nullable already."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3117f9c15adedcd72dfa34c490b7734d176d5669", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/3117f9c15adedcd72dfa34c490b7734d176d5669", "committedDate": "2020-11-13T17:38:15Z", "message": "Remove ComponentRegistry#get(String) overload\n\nThis overload is not no longer used by our code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "962d044eed28fe61e26b9a8a60252f0826e8bbd3", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/962d044eed28fe61e26b9a8a60252f0826e8bbd3", "committedDate": "2020-11-13T17:38:15Z", "message": "fixup! Mark instrumentation version nullable in MeterProvider and TracerProvider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd0d342084c6f8bd50827df135af820f077ec109", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/dd0d342084c6f8bd50827df135af820f077ec109", "committedDate": "2020-11-13T17:38:15Z", "message": "fixup! Provide a default Tracer and Meter for invalid instrumentation names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7219ccd57c6d0bee9bbb019afe7d1719951c0854", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7219ccd57c6d0bee9bbb019afe7d1719951c0854", "committedDate": "2020-11-13T17:38:15Z", "message": "fixup! Provide a default Tracer and Meter for invalid instrumentation names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "674df9d78def990651f8ab6f58a50d83b101f8f4", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/674df9d78def990651f8ab6f58a50d83b101f8f4", "committedDate": "2020-11-13T17:38:15Z", "message": "fixup! Remove ComponentRegistry#get(String) overload\n\nThis reverts commit db56814c"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49d2b4e7e887b21055c1575adc3318a2b0f6c84b", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/49d2b4e7e887b21055c1575adc3318a2b0f6c84b", "committedDate": "2020-11-13T17:38:15Z", "message": "Revert \"Mark instrumentation version nullable in MeterProvider and TracerProvider\"\n\nThis reverts commit 7e92b396"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7c54473312e2cec814aa62be9bf57eea4cf995c", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f7c54473312e2cec814aa62be9bf57eea4cf995c", "committedDate": "2020-11-13T11:26:43Z", "message": "Revert \"Mark instrumentation version nullable in MeterProvider and TracerProvider\"\n\nThis reverts commit 7e92b396"}, "afterCommit": {"oid": "49d2b4e7e887b21055c1575adc3318a2b0f6c84b", "author": {"user": {"login": "MariusVolkhart", "name": "Marius Volkhart"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/49d2b4e7e887b21055c1575adc3318a2b0f6c84b", "committedDate": "2020-11-13T17:38:15Z", "message": "Revert \"Mark instrumentation version nullable in MeterProvider and TracerProvider\"\n\nThis reverts commit 7e92b396"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4219, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}