{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NzI5Mjk1", "number": 2116, "title": "Rename HttpTraceContext to W3CTraceContextPropagator.", "bodyText": "Rename HttpTraceContext to W3CTraceContextPropagator, implement interface only in inner class, leave deprecated HttpTraceContext behind.", "createdAt": "2020-11-23T13:24:44Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116", "merged": true, "mergeCommit": {"oid": "bbe8702257fbbc4bdb0ac6287c012a9a27b1e804"}, "closed": true, "closedAt": "2020-11-25T01:27:08Z", "author": {"login": "Oberon00"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfVFi2gH2gAyNTI1NzI5Mjk1OmExYTQ5Zjc5YzMxZGIwMzQ2YjU4NWQ3NWZlMzliNzI2NGJkYzFhYjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfuDuDgFqTUzNzc5NDUzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a1a49f79c31db0346b585d75fe39b7264bdc1ab5", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a1a49f79c31db0346b585d75fe39b7264bdc1ab5", "committedDate": "2020-11-23T13:22:57Z", "message": "Rename HttpTraceContext to W3CTraceContextPropagator."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDY4OTI2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116#pullrequestreview-536468926", "createdAt": "2020-11-23T13:25:59Z", "commit": {"oid": "a1a49f79c31db0346b585d75fe39b7264bdc1ab5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzoyNTo1OVrOH4NWPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzoyNTo1OVrOH4NWPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwMDk5MQ==", "bodyText": "Moving these tho the inner class, removing the interface implemenation and declaring getInstance as returning only TextMapPropagator instead of W3CTraceContextPropagator where the only changes here. Unfortunately it seems GitHub does not show that well.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116#discussion_r528700991", "createdAt": "2020-11-23T13:25:59Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/api/trace/propagation/W3CTraceContextPropagator.java", "diffHunk": "@@ -0,0 +1,239 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.api.trace.propagation;\n+\n+import static io.opentelemetry.api.internal.Utils.checkArgument;\n+\n+import io.opentelemetry.api.internal.TemporaryBuffers;\n+import io.opentelemetry.api.trace.Span;\n+import io.opentelemetry.api.trace.SpanContext;\n+import io.opentelemetry.api.trace.SpanId;\n+import io.opentelemetry.api.trace.TraceFlags;\n+import io.opentelemetry.api.trace.TraceId;\n+import io.opentelemetry.api.trace.TraceState;\n+import io.opentelemetry.api.trace.TraceStateBuilder;\n+import io.opentelemetry.context.Context;\n+import io.opentelemetry.context.propagation.TextMapPropagator;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.logging.Logger;\n+import java.util.regex.Pattern;\n+import javax.annotation.Nullable;\n+import javax.annotation.concurrent.Immutable;\n+\n+/**\n+ * Implementation of the W3C TraceContext propagation protocol. See <a\n+ * href=\"https://www.w3.org/TR/trace-context-1/\">W3C Trace Context</a>.\n+ *\n+ * <p>This is the default propagator for {@link SpanContext}s. The {@link SpanContext} type is\n+ * designed to support all the data propagated via W3C propagation natively.\n+ */\n+@Immutable\n+public final class W3CTraceContextPropagator {\n+  private static final Logger logger = Logger.getLogger(W3CTraceContextPropagator.class.getName());\n+\n+  private static final TraceState TRACE_STATE_DEFAULT = TraceState.builder().build();\n+  static final String TRACE_PARENT = \"traceparent\";\n+  static final String TRACE_STATE = \"tracestate\";\n+  private static final List<String> FIELDS =\n+      Collections.unmodifiableList(Arrays.asList(TRACE_PARENT, TRACE_STATE));\n+\n+  private static final String VERSION = \"00\";\n+  private static final int VERSION_SIZE = 2;\n+  private static final char TRACEPARENT_DELIMITER = '-';\n+  private static final int TRACEPARENT_DELIMITER_SIZE = 1;\n+  private static final int TRACE_ID_HEX_SIZE = TraceId.getHexLength();\n+  private static final int SPAN_ID_HEX_SIZE = SpanId.getHexLength();\n+  private static final int TRACE_OPTION_HEX_SIZE = TraceFlags.getHexLength();\n+  private static final int TRACE_ID_OFFSET = VERSION_SIZE + TRACEPARENT_DELIMITER_SIZE;\n+  private static final int SPAN_ID_OFFSET =\n+      TRACE_ID_OFFSET + TRACE_ID_HEX_SIZE + TRACEPARENT_DELIMITER_SIZE;\n+  private static final int TRACE_OPTION_OFFSET =\n+      SPAN_ID_OFFSET + SPAN_ID_HEX_SIZE + TRACEPARENT_DELIMITER_SIZE;\n+  private static final int TRACEPARENT_HEADER_SIZE = TRACE_OPTION_OFFSET + TRACE_OPTION_HEX_SIZE;\n+  private static final int TRACESTATE_MAX_SIZE = 512;\n+  private static final int TRACESTATE_MAX_MEMBERS = 32;\n+  private static final char TRACESTATE_KEY_VALUE_DELIMITER = '=';\n+  private static final char TRACESTATE_ENTRY_DELIMITER = ',';\n+  private static final Pattern TRACESTATE_ENTRY_DELIMITER_SPLIT_PATTERN =\n+      Pattern.compile(\"[ \\t]*\" + TRACESTATE_ENTRY_DELIMITER + \"[ \\t]*\");\n+  private static final Set<String> VALID_VERSIONS;\n+  private static final String VERSION_00 = \"00\";\n+  private static final TextMapPropagator INSTANCE =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a49f79c31db0346b585d75fe39b7264bdc1ab5"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NzQ2Mjk1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116#pullrequestreview-536746295", "createdAt": "2020-11-23T18:37:02Z", "commit": {"oid": "a1a49f79c31db0346b585d75fe39b7264bdc1ab5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODozNzowMlrOH4ae8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODozNzowMlrOH4ae8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxNjIxMA==", "bodyText": "If you could add some javadoc with a pointer over to what the user should be using, that would be more user-friendly. Also on the getInstance() method, I think.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116#discussion_r528916210", "createdAt": "2020-11-23T18:37:02Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/api/trace/propagation/HttpTraceContext.java", "diffHunk": "@@ -5,78 +5,17 @@\n \n package io.opentelemetry.api.trace.propagation;\n \n-import static io.opentelemetry.api.internal.Utils.checkArgument;\n-\n-import io.opentelemetry.api.internal.TemporaryBuffers;\n-import io.opentelemetry.api.trace.Span;\n-import io.opentelemetry.api.trace.SpanContext;\n-import io.opentelemetry.api.trace.SpanId;\n-import io.opentelemetry.api.trace.TraceFlags;\n-import io.opentelemetry.api.trace.TraceId;\n-import io.opentelemetry.api.trace.TraceState;\n-import io.opentelemetry.api.trace.TraceStateBuilder;\n import io.opentelemetry.context.Context;\n import io.opentelemetry.context.propagation.TextMapPropagator;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.HashSet;\n import java.util.List;\n-import java.util.Objects;\n-import java.util.Set;\n-import java.util.logging.Logger;\n-import java.util.regex.Pattern;\n import javax.annotation.Nullable;\n import javax.annotation.concurrent.Immutable;\n \n-/**\n- * Implementation of the TraceContext propagation protocol. See <a\n- * href=https://github.com/w3c/distributed-tracing>w3c/distributed-tracing</a>.\n- */\n @Immutable\n+@Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a49f79c31db0346b585d75fe39b7264bdc1ab5"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NzQ3ODAx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116#pullrequestreview-536747801", "createdAt": "2020-11-23T18:39:11Z", "commit": {"oid": "a1a49f79c31db0346b585d75fe39b7264bdc1ab5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODozOToxMVrOH4ajVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODozOToxMVrOH4ajVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxNzMzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /** Unit tests for {@link W3CTraceContextPropagator}. */", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116#discussion_r528917335", "createdAt": "2020-11-23T18:39:11Z", "author": {"login": "jkwatson"}, "path": "extensions/trace-propagators/src/test/java/io/opentelemetry/extension/trace/propagation/B3PropagatorTest.java", "diffHunk": "@@ -25,7 +26,7 @@\n import javax.annotation.Nullable;\n import org.junit.jupiter.api.Test;\n \n-/** Unit tests for {@link io.opentelemetry.api.trace.propagation.HttpTraceContext}. */\n+/** Unit tests for {@link W3CTraceContextPropagator}. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a49f79c31db0346b585d75fe39b7264bdc1ab5"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NzQ5NjYx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116#pullrequestreview-536749661", "createdAt": "2020-11-23T18:41:49Z", "commit": {"oid": "a1a49f79c31db0346b585d75fe39b7264bdc1ab5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDQzNjIz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116#pullrequestreview-537043623", "createdAt": "2020-11-24T03:06:31Z", "commit": {"oid": "a1a49f79c31db0346b585d75fe39b7264bdc1ab5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e27143450ed0639270e8f7e7639613eee39bd33", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1e27143450ed0639270e8f7e7639613eee39bd33", "committedDate": "2020-11-24T08:46:53Z", "message": "Add javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "332732ec9ca41208895b2b9cab0e0ff658d9d0b2", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/332732ec9ca41208895b2b9cab0e0ff658d9d0b2", "committedDate": "2020-11-24T08:47:15Z", "message": "Merge remote-tracking branch 'upstream/master' into rename-http-trace-context-w3c"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3Nzk0NTM4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2116#pullrequestreview-537794538", "createdAt": "2020-11-24T18:28:35Z", "commit": {"oid": "332732ec9ca41208895b2b9cab0e0ff658d9d0b2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3753, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}