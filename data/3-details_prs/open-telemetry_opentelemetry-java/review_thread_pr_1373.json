{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMDU4MTc1", "number": 1373, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTowMjowN1rOEIzQNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjowMjo0OFrOEI-smQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjYzNzk2OnYy", "diffSide": "RIGHT", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTowMjowN1rOGo-5DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNToxNzowNlrOGo_jOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYyNjYzNw==", "bodyText": "There is a proposal in the specs to standardize environment variables for this sort of thing. Can you please add a comment to https://github.com/open-telemetry/opentelemetry-specification/pull/666/files with the needs here?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445626637", "createdAt": "2020-06-25T15:02:07Z", "author": {"login": "jkwatson"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -41,13 +49,21 @@\n  * <ul>\n  *   <li>{@code otel.otlp.span.timeout}: to set the max waiting time allowed to send each span\n  *       batch.\n+ *   <li>{@code otel.otlp.endpoint}: to set the endpoint to connect to.\n+ *   <li>{@code otel.otlp.use.tls}: to set use or not TLS.\n+ *   <li>{@code otel.otlp.metadata} to set key-value pairs separated by semicolon to pass as request\n+ *       metadata.\n  * </ul>\n  *\n  * <p>For environment variables, {@link OtlpGrpcSpanExporter} will look for the following names:\n  *\n  * <ul>\n  *   <li>{@code OTEL_OTLP_SPAN_TIMEOUT}: to set the max waiting time allowed to send each span\n  *       batch.\n+ *   <li>{@code OTEL_OTLP_ENDPOINT}: to set the endpoint to connect to.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzNzQzMw==", "bodyText": "open-telemetry/opentelemetry-specification#666 (comment)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445637433", "createdAt": "2020-06-25T15:17:06Z", "author": {"login": "malafeev"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -41,13 +49,21 @@\n  * <ul>\n  *   <li>{@code otel.otlp.span.timeout}: to set the max waiting time allowed to send each span\n  *       batch.\n+ *   <li>{@code otel.otlp.endpoint}: to set the endpoint to connect to.\n+ *   <li>{@code otel.otlp.use.tls}: to set use or not TLS.\n+ *   <li>{@code otel.otlp.metadata} to set key-value pairs separated by semicolon to pass as request\n+ *       metadata.\n  * </ul>\n  *\n  * <p>For environment variables, {@link OtlpGrpcSpanExporter} will look for the following names:\n  *\n  * <ul>\n  *   <li>{@code OTEL_OTLP_SPAN_TIMEOUT}: to set the max waiting time allowed to send each span\n  *       batch.\n+ *   <li>{@code OTEL_OTLP_ENDPOINT}: to set the endpoint to connect to.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYyNjYzNw=="}, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODUxMDI4OnYy", "diffSide": "RIGHT", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjowMDo1OFrOGpRYqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo1Nzo1NlrOGpV0sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTY0MA==", "bodyText": "@Nullable", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445929640", "createdAt": "2020-06-26T02:00:58Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -146,11 +162,18 @@ public void shutdown() {\n   /** Builder utility for this exporter. */\n   public static class Builder extends ConfigBuilder<Builder> {\n     private static final String KEY_SPAN_TIMEOUT = \"otel.otlp.span.timeout\";\n+    private static final String KEY_ENDPOINT = \"otel.otlp.endpoint\";\n+    private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n+    private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n     private long deadlineMs = 1_000; // 1 second\n+    private String endpoint;\n+    private boolean useTls;\n+    private Metadata metadata;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMjM1Mg==", "bodyText": "added", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446002352", "createdAt": "2020-06-26T06:57:56Z", "author": {"login": "malafeev"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -146,11 +162,18 @@ public void shutdown() {\n   /** Builder utility for this exporter. */\n   public static class Builder extends ConfigBuilder<Builder> {\n     private static final String KEY_SPAN_TIMEOUT = \"otel.otlp.span.timeout\";\n+    private static final String KEY_ENDPOINT = \"otel.otlp.endpoint\";\n+    private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n+    private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n     private long deadlineMs = 1_000; // 1 second\n+    private String endpoint;\n+    private boolean useTls;\n+    private Metadata metadata;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTY0MA=="}, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODUxMDQ4OnYy", "diffSide": "RIGHT", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjowMTowN1rOGpRYxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODowNTozMlrOGpXoYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTY3MQ==", "bodyText": "@Nullable", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445929671", "createdAt": "2020-06-26T02:01:07Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -146,11 +162,18 @@ public void shutdown() {\n   /** Builder utility for this exporter. */\n   public static class Builder extends ConfigBuilder<Builder> {\n     private static final String KEY_SPAN_TIMEOUT = \"otel.otlp.span.timeout\";\n+    private static final String KEY_ENDPOINT = \"otel.otlp.endpoint\";\n+    private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n+    private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n     private long deadlineMs = 1_000; // 1 second\n+    private String endpoint;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzMTk3MQ==", "bodyText": "added", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446031971", "createdAt": "2020-06-26T08:05:32Z", "author": {"login": "malafeev"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -146,11 +162,18 @@ public void shutdown() {\n   /** Builder utility for this exporter. */\n   public static class Builder extends ConfigBuilder<Builder> {\n     private static final String KEY_SPAN_TIMEOUT = \"otel.otlp.span.timeout\";\n+    private static final String KEY_ENDPOINT = \"otel.otlp.endpoint\";\n+    private static final String KEY_USE_TLS = \"otel.otlp.use.tls\";\n+    private static final String KEY_METADATA = \"otel.otlp.metadata\";\n     private ManagedChannel channel;\n     private long deadlineMs = 1_000; // 1 second\n+    private String endpoint;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTY3MQ=="}, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODUxMjE2OnYy", "diffSide": "RIGHT", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjowMjoxOFrOGpRZvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNjo1MDoyMFrOGpz0gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTkxNw==", "bodyText": "Extra semicolon", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445929917", "createdAt": "2020-06-26T02:02:18Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);\n+          ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMjM4Ng==", "bodyText": "removed", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446002386", "createdAt": "2020-06-26T06:58:02Z", "author": {"login": "malafeev"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);\n+          ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTkxNw=="}, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyNTMyOQ==", "bodyText": "looks like it's still there...", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446325329", "createdAt": "2020-06-26T17:47:23Z", "author": {"login": "jkwatson"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);\n+          ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTkxNw=="}, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5MzgyNg==", "bodyText": "removed one more time", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446493826", "createdAt": "2020-06-27T06:50:20Z", "author": {"login": "malafeev"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);\n+          ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkyOTkxNw=="}, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODUxMjg5OnYy", "diffSide": "RIGHT", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjowMjo0OFrOGpRaLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzoyMDozN1rOGpWXYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDAyOQ==", "bodyText": "Believe you can use Splitter.withKeyValueSeparator", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445930029", "createdAt": "2020-06-26T02:02:48Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDI4Nw==", "bodyText": "Would be good to create a static final with the splitter\n`private static final Splitter.MapSplitter METADATA_PROPERTY_SPLITTER = Splitter.on(';').trimResults().omitEmptyStrings().withKeyValueSplitter('=');", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r445930287", "createdAt": "2020-06-26T02:04:00Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDAyOQ=="}, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMTQxOQ==", "bodyText": "withKeyValueSeparator  is annotated by @Beta, should we use it?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446001419", "createdAt": "2020-06-26T06:55:29Z", "author": {"login": "malafeev"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDAyOQ=="}, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAxMTIzMw==", "bodyText": "Oof - good catch, I always forget that. Yeah let's not use it.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1373#discussion_r446011233", "createdAt": "2020-06-26T07:20:37Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -196,6 +274,27 @@ protected Builder fromConfigMap(\n       if (value != null) {\n         this.setDeadlineMs(value);\n       }\n+      String endpointValue = getStringProperty(KEY_ENDPOINT, configMap);\n+      if (endpointValue != null) {\n+        this.setEndpoint(endpointValue);\n+      }\n+\n+      Boolean useTlsValue = getBooleanProperty(KEY_USE_TLS, configMap);\n+      if (useTlsValue != null) {\n+        this.setUseTls(useTlsValue);\n+      }\n+\n+      String metadataValue = getStringProperty(KEY_METADATA, configMap);\n+      if (metadataValue != null) {\n+        for (String keyValueString : Splitter.on(';').split(metadataValue)) {\n+          final List<String> keyValue = Splitter.on('=').splitToList(keyValueString);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDAyOQ=="}, "originalCommit": {"oid": "f356998d6c6c41bced3ed2173c5b3777bee09bb1"}, "originalPosition": 149}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1451, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}