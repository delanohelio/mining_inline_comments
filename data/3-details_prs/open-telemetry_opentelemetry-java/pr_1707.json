{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMzkxMTg3", "number": 1707, "title": "Change the Sampler interface to allow a SamplingResult to update the TraceState", "bodyText": "Resolves #1705", "createdAt": "2020-09-25T21:57:52Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707", "merged": true, "mergeCommit": {"oid": "22281d6f61f4acf8aa9a0883bb7b98b655969b4f"}, "closed": true, "closedAt": "2020-10-13T05:46:03Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMlLBPgFqTQ5Njk0OTM2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSAV-6gFqTUwNzA1MDcxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2OTQ5MzYw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707#pullrequestreview-496949360", "createdAt": "2020-09-26T07:22:47Z", "commit": {"oid": "f23245425e088292de52b8e05773359bcf9080bb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNzoyMjo0N1rOHYecxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNzoyMjo0N1rOHYecxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNjc1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * <p>Note: if a null is returned, the TraceState will be reset to {@link\n          \n          \n            \n                 * <p>Note: if {@code null} is returned, the TraceState will be reset to {@link\n          \n      \n    \n    \n  \n\nOr I might remove this, this is not a nullable method so we don't want to indicate null is allowed. We just happen to have a default to prevent crashing in case that happens.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707#discussion_r495426757", "createdAt": "2020-09-26T07:22:47Z", "author": {"login": "anuraaga"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Sampler.java", "diffHunk": "@@ -88,5 +89,14 @@ SamplingResult shouldSample(\n      *     {@link Decision#RECORD_AND_SAMPLE}.\n      */\n     Attributes getAttributes();\n+\n+    /**\n+     * Return the {@link TraceState} that should be associated with the resulting Span. This may be\n+     * the same {@link TraceState} that was provided originally, or an updated one.\n+     *\n+     * <p>Note: if a null is returned, the TraceState will be reset to {@link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f23245425e088292de52b8e05773359bcf9080bb"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2OTk3NDAz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707#pullrequestreview-496997403", "createdAt": "2020-09-26T11:04:40Z", "commit": {"oid": "f23245425e088292de52b8e05773359bcf9080bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxMTowNDo0MFrOHYfmPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxMTowNDo0MFrOHYfmPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ0NTU2Nw==", "bodyText": "If we use null (or some static final instance of TraceState) to indicate \"use parent tracestate\", we could keep the constant objects, conserving allocations.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707#discussion_r495445567", "createdAt": "2020-09-26T11:04:40Z", "author": {"login": "Oberon00"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -96,19 +92,20 @@ public static SamplingResult samplingResult(Decision decision, Attributes attrib\n    *\n    * <p>This is meant for use by custom {@link Sampler} implementations.\n    *\n-   * <p>Use {@link #samplingResult(Decision, Attributes)} if you need attributes.\n+   * <p>Use {@link #samplingResult(Decision, Attributes, TraceState)} if you need attributes.\n    *\n    * @param decision The decision made on the span.\n+   * @param traceState The {@link TraceState} to use.\n    * @return A {@link SamplingResult} with empty attributes and the provided {@code decision}.\n    */\n-  public static SamplingResult emptySamplingResult(Decision decision) {\n+  public static SamplingResult emptySamplingResult(Decision decision, TraceState traceState) {\n     switch (decision) {\n       case RECORD_AND_SAMPLE:\n-        return EMPTY_RECORDED_AND_SAMPLED_SAMPLING_RESULT;\n+        return SamplingResultImpl.createWithoutAttributes(Decision.RECORD_AND_SAMPLE, traceState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f23245425e088292de52b8e05773359bcf9080bb"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDEyMTQz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707#pullrequestreview-497012143", "createdAt": "2020-09-26T15:27:32Z", "commit": {"oid": "f23245425e088292de52b8e05773359bcf9080bb"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f23245425e088292de52b8e05773359bcf9080bb", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f23245425e088292de52b8e05773359bcf9080bb", "committedDate": "2020-09-25T22:01:58Z", "message": "revert errant change from another PR"}, "afterCommit": {"oid": "33ac2b472b0d5f966af47ccd6ada2c66d073f366", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/33ac2b472b0d5f966af47ccd6ada2c66d073f366", "committedDate": "2020-10-09T16:48:24Z", "message": "Change the SamplingResult API to allow a Function that will update the TraceState."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4524a201f37fc575d84076e0342f335cad97f5ed", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4524a201f37fc575d84076e0342f335cad97f5ed", "committedDate": "2020-10-12T16:59:51Z", "message": "Change the Sampler interface to have the SamplingResult contain the TraceState to use."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf8747fe45a4d0f41ef4db36bc2692e48f5f446a", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/bf8747fe45a4d0f41ef4db36bc2692e48f5f446a", "committedDate": "2020-10-12T16:59:51Z", "message": "revert errant change from another PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad4c85a0802f8cdd9bc4d5de147242c37d74d062", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ad4c85a0802f8cdd9bc4d5de147242c37d74d062", "committedDate": "2020-10-12T16:59:51Z", "message": "Change the SamplingResult API to allow a Function that will update the TraceState."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba3b61f8fceedc8d1d0d9ce35a0279cc7644ce99", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ba3b61f8fceedc8d1d0d9ce35a0279cc7644ce99", "committedDate": "2020-10-12T16:59:51Z", "message": "revert an odd change from a rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55224f011bae0f37cdd106f3864ad2a525239fb5", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/55224f011bae0f37cdd106f3864ad2a525239fb5", "committedDate": "2020-10-12T17:07:15Z", "message": "Change the SamplingResult to not have a functional response a concrete one."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9fa67911edfe5d3ecec2c6e4660bb5a607ec882e", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9fa67911edfe5d3ecec2c6e4660bb5a607ec882e", "committedDate": "2020-10-09T16:52:53Z", "message": "revert an odd change from a rebase"}, "afterCommit": {"oid": "55224f011bae0f37cdd106f3864ad2a525239fb5", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/55224f011bae0f37cdd106f3864ad2a525239fb5", "committedDate": "2020-10-12T17:07:15Z", "message": "Change the SamplingResult to not have a functional response a concrete one."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2Nzg5ODg1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707#pullrequestreview-506789885", "createdAt": "2020-10-12T17:12:01Z", "commit": {"oid": "55224f011bae0f37cdd106f3864ad2a525239fb5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoxMjowMlrOHgG2Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoxMjowMlrOHgG2Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyODcwMw==", "bodyText": "We could document here that this will always be the same instance as the one passed to ShouldSample before.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707#discussion_r503428703", "createdAt": "2020-10-12T17:12:02Z", "author": {"login": "Oberon00"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Sampler.java", "diffHunk": "@@ -77,5 +79,16 @@ SamplingResult shouldSample(\n      *     {@link Decision#RECORD_AND_SAMPLE}.\n      */\n     Attributes getAttributes();\n+\n+    /**\n+     * Return an optionally-updated {@link TraceState}, based on the parent TraceState. This may\n+     * return the same {@link TraceState} that was provided originally, or an updated one.\n+     *\n+     * @param parentTraceState The TraceState from any parent span. Might be an empty TraceState, if", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55224f011bae0f37cdd106f3864ad2a525239fb5"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28a37ea61b00be48a2baa7cb2978ab93deb57c61", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/28a37ea61b00be48a2baa7cb2978ab93deb57c61", "committedDate": "2020-10-12T22:45:35Z", "message": "Add an additional bit of javadoc to the new method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MDUwNzE3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707#pullrequestreview-507050717", "createdAt": "2020-10-13T03:51:35Z", "commit": {"oid": "28a37ea61b00be48a2baa7cb2978ab93deb57c61"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMzo1MTozNlrOHgUcvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMzo1MTozNlrOHgUcvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1MTUxOQ==", "bodyText": "Thanks sorry for missing the allocation issue, got it. TBH this API still feels weird to me - having to call the sampler, and then the caller has to correctly call this method to get the trace state.\nI'm reading the discussion here\n#1707 (comment)\nand I'm personally not sure this functional style is that much better than null indicating a non-update, in a caller\nspan.traceState = result.getUpdatedTraceState() != null ? result.getUpdatedTraceState() : parentTraceState;\n\nseems more direct? It's true that there's no updated trace state, so use the non-updated one.\nOtherwise, another approach that is similar to this one but seems a bit nicer is having this sort of method on the Sampler, accepting the decision with the parent trace state. \"update trace state\" is a business logic operation, it's nice if that lives in the Sampler which has the logic, a result feels like it should be mostly constant.\nFinally, maybe we can just live with an extra allocation if it seems like a normal getTraceState() seems like a more intuitive API. Sampling result is very short lived, it may even be optimized away who knows.\nFood for thought, I don't really have a strong preference for any, but a small preference for eating the allocation.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1707#discussion_r503651519", "createdAt": "2020-10-13T03:51:36Z", "author": {"login": "anuraaga"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Sampler.java", "diffHunk": "@@ -77,5 +79,18 @@ SamplingResult shouldSample(\n      *     {@link Decision#RECORD_AND_SAMPLE}.\n      */\n     Attributes getAttributes();\n+\n+    /**\n+     * Return an optionally-updated {@link TraceState}, based on the parent TraceState. This may\n+     * return the same {@link TraceState} that was provided originally, or an updated one.\n+     *\n+     * @param parentTraceState The TraceState from the parent span. Might be an empty TraceState, if\n+     *     there is no parent. This will be the same TraceState that was passed in via the {@link\n+     *     SpanContext} parameter on the {@link #shouldSample(SpanContext, String, String, Kind,\n+     *     ReadableAttributes, List)} call.\n+     */\n+    default TraceState getUpdatedTraceState(TraceState parentTraceState) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28a37ea61b00be48a2baa7cb2978ab93deb57c61"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3501, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}