{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MzQzMzY2", "number": 1237, "title": "use java 8 for tests", "bodyText": "resolves #1187\nTests now use Java 8.\nI modified the HttpTraceContextTest to demonstrate that Java 8 is used,  I removed some boilerplate, which is now using lambdas.\nI also disabled the Java7ApiChecker and AndroidJdkLibsChecker errorprone checks when compiling tests as these will warn if you use e.g. streams in your test.", "createdAt": "2020-05-18T08:35:15Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1237", "merged": true, "mergeCommit": {"oid": "22f5b1a15b5d8c1f9d9a0d5ecb4d571f6b692708"}, "closed": true, "closedAt": "2020-06-17T18:05:29Z", "author": {"login": "jarebudev"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciS5X-AH2gAyNDE5MzQzMzY2OjgwZDk3MGIwOWY3ZjI4Mzg3M2YzMjliNWY5MTZiM2MyODFiNzRmNWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsN0y9gFqTQzMjY0ODE5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "80d970b09f7f283873f329b5f916b3c281b74f5f", "author": {"user": {"login": "jarebudev", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/80d970b09f7f283873f329b5f916b3c281b74f5f", "committedDate": "2020-05-17T22:20:28Z", "message": "use java 8 for tests, and disabled specific errorprone checks for tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "334b018b8bfdab71c0b9df2695ef5645ecd4d0ce", "author": {"user": {"login": "jarebudev", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/334b018b8bfdab71c0b9df2695ef5645ecd4d0ce", "committedDate": "2020-05-18T07:57:43Z", "message": "modified existing test to use java 8 features"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99c25aa509fbd2856fd9ab7f3fd7d9ec53475fdb", "author": {"user": {"login": "jarebudev", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/99c25aa509fbd2856fd9ab7f3fd7d9ec53475fdb", "committedDate": "2020-05-18T08:29:51Z", "message": "updated contributing doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMzg5NjQ1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1237#pullrequestreview-413389645", "createdAt": "2020-05-18T08:46:05Z", "commit": {"oid": "99c25aa509fbd2856fd9ab7f3fd7d9ec53475fdb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjQyMDg1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1237#pullrequestreview-413642085", "createdAt": "2020-05-18T14:21:24Z", "commit": {"oid": "99c25aa509fbd2856fd9ab7f3fd7d9ec53475fdb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODcyNzY4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1237#pullrequestreview-413872768", "createdAt": "2020-05-18T19:18:26Z", "commit": {"oid": "99c25aa509fbd2856fd9ab7f3fd7d9ec53475fdb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjQ4MTk3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1237#pullrequestreview-432648197", "createdAt": "2020-06-17T18:05:07Z", "commit": {"oid": "99c25aa509fbd2856fd9ab7f3fd7d9ec53475fdb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODowNTowN1rOGlRKag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODowNTowN1rOGlRKag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMTY5MA==", "bodyText": "Noooo, I have to learn how to write lambdas :(", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1237#discussion_r441731690", "createdAt": "2020-06-17T18:05:07Z", "author": {"login": "bogdandrutu"}, "path": "api/src/test/java/io/opentelemetry/trace/propagation/HttpTraceContextTest.java", "diffHunk": "@@ -58,21 +57,8 @@\n       \"00-\" + TRACE_ID_BASE16 + \"-\" + SPAN_ID_BASE16 + \"-01\";\n   private static final String TRACEPARENT_HEADER_NOT_SAMPLED =\n       \"00-\" + TRACE_ID_BASE16 + \"-\" + SPAN_ID_BASE16 + \"-00\";\n-  private static final Setter<Map<String, String>> setter =\n-      new Setter<Map<String, String>>() {\n-        @Override\n-        public void set(Map<String, String> carrier, String key, String value) {\n-          carrier.put(key, value);\n-        }\n-      };\n-  private static final Getter<Map<String, String>> getter =\n-      new Getter<Map<String, String>>() {\n-        @Nullable\n-        @Override\n-        public String get(Map<String, String> carrier, String key) {\n-          return carrier.get(key);\n-        }\n-      };\n+  private static final Setter<Map<String, String>> setter = Map::put;\n+  private static final Getter<Map<String, String>> getter = (carrier, key) -> carrier.get(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c25aa509fbd2856fd9ab7f3fd7d9ec53475fdb"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2737, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}