{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MDM4ODI2", "number": 1835, "title": "Fix non-null carrier not working in extract.", "bodyText": "The added unit tests for HttpTraceContext demonstrates one case where that is useful. A getter that handles null gracefully would be another case.\nNote that inject already allowed null carriers, but extract (where these are actually more likely to happen) did not. For example, if I have a getter that handles null like an empty headerlist, I still get a NPE when using HttpTraceContext. This PR fixes that.", "createdAt": "2020-10-19T14:39:32Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1835", "merged": true, "mergeCommit": {"oid": "9b73fb06fd7f9f61e40f15acae27055535430648"}, "closed": true, "closedAt": "2020-10-19T20:07:03Z", "author": {"login": "Oberon00"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUFL4_AH2gAyNTA2MDM4ODI2OmYwNjI4ZGFlMWMxN2ZlZGU2YzQ0MDk5MTc4MDM3MjcxNDRiNzAwNTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUJ4cVgFqTUxMjExODQ2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f0628dae1c17fede6c4409917803727144b70051", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f0628dae1c17fede6c4409917803727144b70051", "committedDate": "2020-10-19T14:38:14Z", "message": "Fix non-null carrier not working in extract."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODQxNjEy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1835#pullrequestreview-511841612", "createdAt": "2020-10-19T14:42:37Z", "commit": {"oid": "f0628dae1c17fede6c4409917803727144b70051"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo0MjozOFrOHkSQfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo0MjozOFrOHkSQfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwOTkxOA==", "bodyText": "This should probably fixed -- either remove the check and let an NPE occur \"naturally\" or use Objects.requireNonNull. Or we could change all propagators to do something like here (best with logging though).\nIn any case, this should be a follow-up.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1835#discussion_r507809918", "createdAt": "2020-10-19T14:42:38Z", "author": {"login": "Oberon00"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/OtTracerPropagator.java", "diffHunk": "@@ -64,8 +65,9 @@ public static OtTracerPropagator getInstance() {\n   }\n \n   @Override\n-  public <C> Context extract(Context context, C carrier, Getter<C> getter) {\n+  public <C> Context extract(Context context, @Nullable C carrier, Getter<C> getter) {\n     if (context == null || getter == null) {\n+      // TODO Other propagators throw exceptions here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0628dae1c17fede6c4409917803727144b70051"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODQzMjI2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1835#pullrequestreview-511843226", "createdAt": "2020-10-19T14:44:12Z", "commit": {"oid": "f0628dae1c17fede6c4409917803727144b70051"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo0NDoxMlrOHkSVPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo0NDoxMlrOHkSVPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgxMTEzNA==", "bodyText": "This test here demonstrates one case where a null carrier might be sensibly used.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1835#discussion_r507811134", "createdAt": "2020-10-19T14:44:12Z", "author": {"login": "Oberon00"}, "path": "api/src/test/java/io/opentelemetry/trace/propagation/HttpTraceContextTest.java", "diffHunk": "@@ -166,6 +166,18 @@ void extract_SampledContext() {\n                 TRACE_ID_BASE16, SPAN_ID_BASE16, SAMPLED_TRACE_OPTIONS, TRACE_STATE_DEFAULT));\n   }\n \n+  @Test\n+  void extract_NullCarrier() {\n+    Map<String, String> carrier = new LinkedHashMap<>();\n+    carrier.put(TRACE_PARENT, TRACEPARENT_HEADER_SAMPLED);\n+    assertThat(\n+            getSpanContext(\n+                httpTraceContext.extract(Context.current(), null, (c, k) -> carrier.get(k))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0628dae1c17fede6c4409917803727144b70051"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODg1Mzc4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1835#pullrequestreview-511885378", "createdAt": "2020-10-19T15:25:26Z", "commit": {"oid": "f0628dae1c17fede6c4409917803727144b70051"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTE4NDYw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1835#pullrequestreview-512118460", "createdAt": "2020-10-19T20:06:31Z", "commit": {"oid": "f0628dae1c17fede6c4409917803727144b70051"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4088, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}