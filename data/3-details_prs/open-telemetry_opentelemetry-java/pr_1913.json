{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExODg2OTA2", "number": 1913, "title": "Add a method to the Baggage interface to return the current baggage in the context", "bodyText": "This will make it easy for a user to modify existing Baggage, something like this:\nBaggage updated = Baggage.current().toBuilder().put(\"newKey\", \"newValue\").build();\ntry (Scope s = Context.with(update).makeCurrent()) {\n  //do your thing\n}\n\nnote: I had to update some other tests that were assuming that Context.current() was always clean and empty of Baggages.", "createdAt": "2020-10-28T23:05:29Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1913", "merged": true, "mergeCommit": {"oid": "ed75175578fbba98a1112eee739d5089c5ae3350"}, "closed": true, "closedAt": "2020-10-29T02:07:09Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXFynJAH2gAyNTExODg2OTA2OmY5OTc4ODE4NzgxZjZiM2E1Y2NiMzEzYmYyMDYwNWVhMjhjNmYzYzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXITgBAH2gAyNTExODg2OTA2OjdjMjNmMzZjYzg4YjZhZWY1ZjFiMDI5MWY2NWU3Y2Y5ODk4MDRjMzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9978818781f6b3a5ccb313bf20605ea28c6f3c4", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f9978818781f6b3a5ccb313bf20605ea28c6f3c4", "committedDate": "2020-10-28T23:02:18Z", "message": "Add a method to the Baggage interface to return the current baggage in the context."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3fb8908039ae734494429507410b3da92cb4fa2", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e3fb8908039ae734494429507410b3da92cb4fa2", "committedDate": "2020-10-28T23:10:55Z", "message": "formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "097d4302ca01b330d7853bb6dcbd7fbbf7bacd3e", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/097d4302ca01b330d7853bb6dcbd7fbbf7bacd3e", "committedDate": "2020-10-28T23:31:31Z", "message": "Fix tests broken by not clearing state"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MTc0MTYw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1913#pullrequestreview-519174160", "createdAt": "2020-10-28T23:58:23Z", "commit": {"oid": "097d4302ca01b330d7853bb6dcbd7fbbf7bacd3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MjY0NDk5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1913#pullrequestreview-519264499", "createdAt": "2020-10-29T01:14:07Z", "commit": {"oid": "097d4302ca01b330d7853bb6dcbd7fbbf7bacd3e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMToxNDowN1rOHqDCwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMToxNToyOVrOHqDFeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1MjA5OA==", "bodyText": "try/resources the scopes - guessing you had to add the root.makeCurrent to the other tests because of missing closing here but we should have tests not interfere with each other :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1913#discussion_r513852098", "createdAt": "2020-10-29T01:14:07Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/api/baggage/BaggageTest.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.api.baggage;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import io.opentelemetry.context.Context;\n+import org.junit.jupiter.api.Test;\n+\n+class BaggageTest {\n+  @Test\n+  void current_empty() {\n+    Context.root().makeCurrent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "097d4302ca01b330d7853bb6dcbd7fbbf7bacd3e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1MjM1OQ==", "bodyText": "Though I don't think I'd make the root current here anyways, can leave this out to test \"the default\".", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1913#discussion_r513852359", "createdAt": "2020-10-29T01:14:39Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/api/baggage/BaggageTest.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.api.baggage;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import io.opentelemetry.context.Context;\n+import org.junit.jupiter.api.Test;\n+\n+class BaggageTest {\n+  @Test\n+  void current_empty() {\n+    Context.root().makeCurrent();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1MjA5OA=="}, "originalCommit": {"oid": "097d4302ca01b330d7853bb6dcbd7fbbf7bacd3e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1MjYwOA==", "bodyText": "Ditto, don't make the root current, it's the default.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1913#discussion_r513852608", "createdAt": "2020-10-29T01:15:07Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/api/baggage/BaggageUtilsTest.java", "diffHunk": "@@ -9,10 +9,16 @@\n \n import io.opentelemetry.context.Context;\n import io.opentelemetry.context.Scope;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n class BaggageUtilsTest {\n \n+  @BeforeEach\n+  void setUp() {\n+    Context.root().makeCurrent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "097d4302ca01b330d7853bb6dcbd7fbbf7bacd3e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1Mjc5Mw==", "bodyText": "Ditto", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1913#discussion_r513852793", "createdAt": "2020-10-29T01:15:29Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/api/baggage/ScopedBaggageTest.java", "diffHunk": "@@ -29,6 +31,11 @@\n       EntryMetadata.create(\"unlimited\");\n   private static final EntryMetadata METADATA_NO_PROPAGATION = EntryMetadata.create(\"noprop\");\n \n+  @BeforeEach\n+  void setUp() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "097d4302ca01b330d7853bb6dcbd7fbbf7bacd3e"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d1d4f297dc977a44d39ffc7a5501864ffb26e1c", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7d1d4f297dc977a44d39ffc7a5501864ffb26e1c", "committedDate": "2020-10-29T01:38:42Z", "message": "don't try to code while overly tired. the result is scopes that aren't closed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MjczODcz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1913#pullrequestreview-519273873", "createdAt": "2020-10-29T01:46:08Z", "commit": {"oid": "7d1d4f297dc977a44d39ffc7a5501864ffb26e1c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMTo0NjowOFrOHqEECw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMTo0NjowOFrOHqEECw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg2ODgxMQ==", "bodyText": "Let's remove the scope - just to make sure to test what happens when makeCurrent hasn't ever been called", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1913#discussion_r513868811", "createdAt": "2020-10-29T01:46:08Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/api/baggage/ScopedBaggageTest.java", "diffHunk": "@@ -31,15 +30,12 @@\n       EntryMetadata.create(\"unlimited\");\n   private static final EntryMetadata METADATA_NO_PROPAGATION = EntryMetadata.create(\"noprop\");\n \n-  @BeforeEach\n-  void setUp() {\n-    Context.root().makeCurrent();\n-  }\n-\n   @Test\n   void emptyBaggage() {\n-    Baggage defaultBaggage = BaggageUtils.getCurrentBaggage();\n-    assertThat(defaultBaggage.getEntries()).isEmpty();\n+    try (Scope s = Context.root().makeCurrent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d1d4f297dc977a44d39ffc7a5501864ffb26e1c"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c23f36cc88b6aef5f1b0291f65e7cf989804c34", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7c23f36cc88b6aef5f1b0291f65e7cf989804c34", "committedDate": "2020-10-29T01:58:02Z", "message": "remove the scope to make sure the root scope has no baggage"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4177, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}