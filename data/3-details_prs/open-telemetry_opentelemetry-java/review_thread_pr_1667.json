{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMjg0NDU1", "number": 1667, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzoyODoxOFrOElqGzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTo1MDowMlrOEl7mXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTIyNjM2OnYy", "diffSide": "RIGHT", "path": "extensions/trace_propagators/src/test/java/io/opentelemetry/extensions/trace/propagation/TraceMultiPropagatorTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzoyODoxOFrOHVP-Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTowODo0MFrOHVqYRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0Mzg1OA==", "bodyText": "Nit: we could skip this since it is already covered by containsOnly\nThe same at line 91", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492043858", "createdAt": "2020-09-21T13:28:18Z", "author": {"login": "thisthat"}, "path": "extensions/trace_propagators/src/test/java/io/opentelemetry/extensions/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -76,7 +76,20 @@ void fields() {\n \n     List<String> fields = prop.fields();\n     assertThat(fields).hasSize(4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbf935b7bd319e02c68897a75073603dce10a26f"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwMjQ0Mg==", "bodyText": "no, because containsOnly doesn't check duplicates.\ne.g. assertThat(Lists.newArrayList(\"one\", \"one\")).containsOnly(\"one\"); will pass.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492102442", "createdAt": "2020-09-21T14:41:30Z", "author": {"login": "malafeev"}, "path": "extensions/trace_propagators/src/test/java/io/opentelemetry/extensions/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -76,7 +76,20 @@ void fields() {\n \n     List<String> fields = prop.fields();\n     assertThat(fields).hasSize(4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0Mzg1OA=="}, "originalCommit": {"oid": "dbf935b7bd319e02c68897a75073603dce10a26f"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwNTQ0Nw==", "bodyText": "there is containsExactlyInAnyOrder(...) which can be used to skip checking size", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492105447", "createdAt": "2020-09-21T14:45:31Z", "author": {"login": "malafeev"}, "path": "extensions/trace_propagators/src/test/java/io/opentelemetry/extensions/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -76,7 +76,20 @@ void fields() {\n \n     List<String> fields = prop.fields();\n     assertThat(fields).hasSize(4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0Mzg1OA=="}, "originalCommit": {"oid": "dbf935b7bd319e02c68897a75073603dce10a26f"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NzE4Mw==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492447183", "createdAt": "2020-09-22T02:45:13Z", "author": {"login": "malafeev"}, "path": "extensions/trace_propagators/src/test/java/io/opentelemetry/extensions/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -76,7 +76,20 @@ void fields() {\n \n     List<String> fields = prop.fields();\n     assertThat(fields).hasSize(4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0Mzg1OA=="}, "originalCommit": {"oid": "dbf935b7bd319e02c68897a75073603dce10a26f"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ3NjQ4Nw==", "bodyText": "Thx for the clarification! The semantics of the name is misleading \ud83d\ude1d", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492476487", "createdAt": "2020-09-22T05:08:40Z", "author": {"login": "thisthat"}, "path": "extensions/trace_propagators/src/test/java/io/opentelemetry/extensions/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -76,7 +76,20 @@ void fields() {\n \n     List<String> fields = prop.fields();\n     assertThat(fields).hasSize(4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0Mzg1OA=="}, "originalCommit": {"oid": "dbf935b7bd319e02c68897a75073603dce10a26f"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjA5MDI3OnYy", "diffSide": "RIGHT", "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/DefaultContextPropagators.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTo0OTowMFrOHVrAOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTo0OTowMFrOHVrAOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4NjcxMg==", "bodyText": "Nice catch!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492486712", "createdAt": "2020-09-22T05:49:00Z", "author": {"login": "anuraaga"}, "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/DefaultContextPropagators.java", "diffHunk": "@@ -114,7 +118,7 @@ public ContextPropagators build() {\n     private MultiTextMapPropagator(List<TextMapPropagator> textPropagators) {\n       this.textPropagators = new TextMapPropagator[textPropagators.size()];\n       textPropagators.toArray(this.textPropagators);\n-      this.allFields = getAllFields(this.textPropagators);\n+      this.allFields = Collections.unmodifiableList(getAllFields(this.textPropagators));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83e6672198827077ca2a5e12018bec274a1ff3fb"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjA5MTcwOnYy", "diffSide": "RIGHT", "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/DefaultContextPropagators.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTo0OTo0MlrOHVrA7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTo1OTozN1rOHVrK4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4Njg5NQ==", "bodyText": "Let's use LinkedHashSet to preserve order, users may have a reason to iterate in a specified order.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492486895", "createdAt": "2020-09-22T05:49:42Z", "author": {"login": "anuraaga"}, "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/DefaultContextPropagators.java", "diffHunk": "@@ -123,12 +127,12 @@ private MultiTextMapPropagator(List<TextMapPropagator> textPropagators) {\n     }\n \n     private static List<String> getAllFields(TextMapPropagator[] textPropagators) {\n-      List<String> fields = new ArrayList<>();\n+      Set<String> fields = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83e6672198827077ca2a5e12018bec274a1ff3fb"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4OTQ0Mw==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492489443", "createdAt": "2020-09-22T05:59:37Z", "author": {"login": "malafeev"}, "path": "context_prop/src/main/java/io/opentelemetry/context/propagation/DefaultContextPropagators.java", "diffHunk": "@@ -123,12 +127,12 @@ private MultiTextMapPropagator(List<TextMapPropagator> textPropagators) {\n     }\n \n     private static List<String> getAllFields(TextMapPropagator[] textPropagators) {\n-      List<String> fields = new ArrayList<>();\n+      Set<String> fields = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4Njg5NQ=="}, "originalCommit": {"oid": "83e6672198827077ca2a5e12018bec274a1ff3fb"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjA5MjQ2OnYy", "diffSide": "RIGHT", "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/TraceMultiPropagator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTo1MDowMlrOHVrBUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNTo1OTo0NFrOHVrLAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4Njk5NQ==", "bodyText": "Ditto", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492486995", "createdAt": "2020-09-22T05:50:02Z", "author": {"login": "anuraaga"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/TraceMultiPropagator.java", "diffHunk": "@@ -66,11 +70,11 @@ private TraceMultiPropagator(List<TextMapPropagator> propagatorList) {\n     this.propagators = new TextMapPropagator[propagatorList.size()];\n     propagatorList.toArray(this.propagators);\n \n-    List<String> fields = new ArrayList<>();\n+    Set<String> fields = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83e6672198827077ca2a5e12018bec274a1ff3fb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4OTQ3NA==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1667#discussion_r492489474", "createdAt": "2020-09-22T05:59:44Z", "author": {"login": "malafeev"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/TraceMultiPropagator.java", "diffHunk": "@@ -66,11 +70,11 @@ private TraceMultiPropagator(List<TextMapPropagator> propagatorList) {\n     this.propagators = new TextMapPropagator[propagatorList.size()];\n     propagatorList.toArray(this.propagators);\n \n-    List<String> fields = new ArrayList<>();\n+    Set<String> fields = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ4Njk5NQ=="}, "originalCommit": {"oid": "83e6672198827077ca2a5e12018bec274a1ff3fb"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1194, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}