{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NzcwODAx", "number": 2232, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDozMDo1OVrOFCqk0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDozMDo1OVrOFCqk0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MzM5MDI3OnYy", "diffSide": "RIGHT", "path": "api/all/src/main/java/io/opentelemetry/api/DefaultOpenTelemetry.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDozMDo1OVrOIB8nIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxOTozNjo0M1rOIEIdKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkxMjU0Ng==", "bodyText": "static looks good, I would keep the instance fields where they were and move the constructor to be just below them, instead of moving them above the statics", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2232#discussion_r538912546", "createdAt": "2020-12-09T00:30:59Z", "author": {"login": "anuraaga"}, "path": "api/all/src/main/java/io/opentelemetry/api/DefaultOpenTelemetry.java", "diffHunk": "@@ -24,6 +24,11 @@\n @ThreadSafe\n public class DefaultOpenTelemetry implements OpenTelemetry {\n   private static final Object mutex = new Object();\n+  @Nullable private static volatile OpenTelemetry globalOpenTelemetry;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0731796348eb9404c06ad56cf08b41a803e610f2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAwMDA1NQ==", "bodyText": "I personally prefer this order, with the fields all above all the methods. Does the google style guide specify one way or another? If not, we should have a documented order, so we don't need to think about it. :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2232#discussion_r539000055", "createdAt": "2020-12-09T04:38:16Z", "author": {"login": "jkwatson"}, "path": "api/all/src/main/java/io/opentelemetry/api/DefaultOpenTelemetry.java", "diffHunk": "@@ -24,6 +24,11 @@\n @ThreadSafe\n public class DefaultOpenTelemetry implements OpenTelemetry {\n   private static final Object mutex = new Object();\n+  @Nullable private static volatile OpenTelemetry globalOpenTelemetry;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkxMjU0Ng=="}, "originalCommit": {"oid": "0731796348eb9404c06ad56cf08b41a803e610f2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAxMjE3OQ==", "bodyText": "I always have (in my code) fields first then methods.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2232#discussion_r539012179", "createdAt": "2020-12-09T05:16:39Z", "author": {"login": "bogdandrutu"}, "path": "api/all/src/main/java/io/opentelemetry/api/DefaultOpenTelemetry.java", "diffHunk": "@@ -24,6 +24,11 @@\n @ThreadSafe\n public class DefaultOpenTelemetry implements OpenTelemetry {\n   private static final Object mutex = new Object();\n+  @Nullable private static volatile OpenTelemetry globalOpenTelemetry;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkxMjU0Ng=="}, "originalCommit": {"oid": "0731796348eb9404c06ad56cf08b41a803e610f2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc3MjIyOQ==", "bodyText": "@anuraaga you ok with switching to this style? If so, I can add it to the contributing doc, so it's not a point of debate. I checked the google style guide and it explicitly doesn't specify this. Only that things are in a \"logical\" order.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2232#discussion_r539772229", "createdAt": "2020-12-10T01:24:15Z", "author": {"login": "jkwatson"}, "path": "api/all/src/main/java/io/opentelemetry/api/DefaultOpenTelemetry.java", "diffHunk": "@@ -24,6 +24,11 @@\n @ThreadSafe\n public class DefaultOpenTelemetry implements OpenTelemetry {\n   private static final Object mutex = new Object();\n+  @Nullable private static volatile OpenTelemetry globalOpenTelemetry;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkxMjU0Ng=="}, "originalCommit": {"oid": "0731796348eb9404c06ad56cf08b41a803e610f2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwNjcwMg==", "bodyText": "Oops sorry for missing replying\nI've always found statics before non-statics to be easier to reason about - lifecycle and end-user usage is totally different. The instance fields can't be used in the static methods no matter what so they seem distracting to be grouped with them. I wouldn't block the change since 2/3 wins but please give it one more consideration given this reasoning :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2232#discussion_r539806702", "createdAt": "2020-12-10T02:57:05Z", "author": {"login": "anuraaga"}, "path": "api/all/src/main/java/io/opentelemetry/api/DefaultOpenTelemetry.java", "diffHunk": "@@ -24,6 +24,11 @@\n @ThreadSafe\n public class DefaultOpenTelemetry implements OpenTelemetry {\n   private static final Object mutex = new Object();\n+  @Nullable private static volatile OpenTelemetry globalOpenTelemetry;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkxMjU0Ng=="}, "originalCommit": {"oid": "0731796348eb9404c06ad56cf08b41a803e610f2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIwMzc1NQ==", "bodyText": "My $0.02 -- I never want to see fields (regardless of static or instance) declared below any methods (regardless of static/instance).  I always want to see all fields at the top of the class in order to get a quick-glance overview of any state being held without having to visually scan between methods.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2232#discussion_r541203755", "createdAt": "2020-12-11T19:36:43Z", "author": {"login": "breedx-splk"}, "path": "api/all/src/main/java/io/opentelemetry/api/DefaultOpenTelemetry.java", "diffHunk": "@@ -24,6 +24,11 @@\n @ThreadSafe\n public class DefaultOpenTelemetry implements OpenTelemetry {\n   private static final Object mutex = new Object();\n+  @Nullable private static volatile OpenTelemetry globalOpenTelemetry;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkxMjU0Ng=="}, "originalCommit": {"oid": "0731796348eb9404c06ad56cf08b41a803e610f2"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1660, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}