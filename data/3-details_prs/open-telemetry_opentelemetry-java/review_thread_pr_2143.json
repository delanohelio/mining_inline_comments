{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MDUwNDI1", "number": 2143, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjo0MDo1N1rOE9noag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjo0MzozM1rOE9nsBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDQ3OTE0OnYy", "diffSide": "RIGHT", "path": "sdk-extensions/resources/src/main/java/io/opentelemetry/sdk/extension/resources/ProcessRuntimeResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjo0MDo1N1rOH6Z0yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNToxODoxM1rOH6fg3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAwMjU2OA==", "bodyText": "I think I would slightly prefer using + here, but no strong opinion.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2143#discussion_r531002568", "createdAt": "2020-11-26T12:40:57Z", "author": {"login": "Oberon00"}, "path": "sdk-extensions/resources/src/main/java/io/opentelemetry/sdk/extension/resources/ProcessRuntimeResource.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.sdk.extension.resources;\n+\n+import static io.opentelemetry.sdk.resources.ResourceAttributes.PROCESS_RUNTIME_DESCRIPTION;\n+import static io.opentelemetry.sdk.resources.ResourceAttributes.PROCESS_RUNTIME_NAME;\n+import static io.opentelemetry.sdk.resources.ResourceAttributes.PROCESS_RUNTIME_VERSION;\n+\n+import io.opentelemetry.api.common.Attributes;\n+import io.opentelemetry.sdk.resources.ResourceProvider;\n+\n+/** {@link ResourceProvider} which provides information about the Java runtime. */\n+public final class ProcessRuntimeResource extends ResourceProvider {\n+  @Override\n+  protected Attributes getAttributes() {\n+    try {\n+      String name = System.getProperty(\"java.runtime.name\");\n+      String version = System.getProperty(\"java.runtime.version\");\n+      String description =\n+          String.join(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e47fc3a83c3ff6b7448d90911eb92d537a7ba73"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5NTc3Mw==", "bodyText": "I'm fine with both versions.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2143#discussion_r531095773", "createdAt": "2020-11-26T15:18:13Z", "author": {"login": "mateuszrzeszutek"}, "path": "sdk-extensions/resources/src/main/java/io/opentelemetry/sdk/extension/resources/ProcessRuntimeResource.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.sdk.extension.resources;\n+\n+import static io.opentelemetry.sdk.resources.ResourceAttributes.PROCESS_RUNTIME_DESCRIPTION;\n+import static io.opentelemetry.sdk.resources.ResourceAttributes.PROCESS_RUNTIME_NAME;\n+import static io.opentelemetry.sdk.resources.ResourceAttributes.PROCESS_RUNTIME_VERSION;\n+\n+import io.opentelemetry.api.common.Attributes;\n+import io.opentelemetry.sdk.resources.ResourceProvider;\n+\n+/** {@link ResourceProvider} which provides information about the Java runtime. */\n+public final class ProcessRuntimeResource extends ResourceProvider {\n+  @Override\n+  protected Attributes getAttributes() {\n+    try {\n+      String name = System.getProperty(\"java.runtime.name\");\n+      String version = System.getProperty(\"java.runtime.version\");\n+      String description =\n+          String.join(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAwMjU2OA=="}, "originalCommit": {"oid": "6e47fc3a83c3ff6b7448d90911eb92d537a7ba73"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDQ4ODM4OnYy", "diffSide": "RIGHT", "path": "sdk-extensions/resources/src/test/java/io/opentelemetry/sdk/extension/resources/ProcessRuntimeResourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMjo0MzozM1rOH6Z6XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNToxNzo1N1rOH6fgTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAwMzk5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(attributes.get(ResourceAttributes.PROCESS_RUNTIME_NAME)).isNotNull();\n          \n          \n            \n                assertThat(attributes.get(ResourceAttributes.PROCESS_RUNTIME_NAME)).isNotBlank();\n          \n      \n    \n    \n  \n\nSlightly stricter assertion: https://joel-costigliola.github.io/assertj/core/api/org/assertj/core/api/AbstractCharSequenceAssert.html#isNotBlank()", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2143#discussion_r531003996", "createdAt": "2020-11-26T12:43:33Z", "author": {"login": "Oberon00"}, "path": "sdk-extensions/resources/src/test/java/io/opentelemetry/sdk/extension/resources/ProcessRuntimeResourceTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.sdk.extension.resources;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import io.opentelemetry.api.common.ReadableAttributes;\n+import io.opentelemetry.sdk.resources.Resource;\n+import io.opentelemetry.sdk.resources.ResourceAttributes;\n+import org.junit.jupiter.api.Test;\n+\n+class ProcessRuntimeResourceTest {\n+  @Test\n+  void shouldCreateRuntimeAttributes() {\n+    // when\n+    ReadableAttributes attributes = new ProcessRuntimeResource().getAttributes();\n+\n+    // then\n+    assertThat(attributes.get(ResourceAttributes.PROCESS_RUNTIME_NAME)).isNotNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e47fc3a83c3ff6b7448d90911eb92d537a7ba73"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5NTYzMQ==", "bodyText": "Good point, done.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2143#discussion_r531095631", "createdAt": "2020-11-26T15:17:57Z", "author": {"login": "mateuszrzeszutek"}, "path": "sdk-extensions/resources/src/test/java/io/opentelemetry/sdk/extension/resources/ProcessRuntimeResourceTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.sdk.extension.resources;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import io.opentelemetry.api.common.ReadableAttributes;\n+import io.opentelemetry.sdk.resources.Resource;\n+import io.opentelemetry.sdk.resources.ResourceAttributes;\n+import org.junit.jupiter.api.Test;\n+\n+class ProcessRuntimeResourceTest {\n+  @Test\n+  void shouldCreateRuntimeAttributes() {\n+    // when\n+    ReadableAttributes attributes = new ProcessRuntimeResource().getAttributes();\n+\n+    // then\n+    assertThat(attributes.get(ResourceAttributes.PROCESS_RUNTIME_NAME)).isNotNull();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAwMzk5Ng=="}, "originalCommit": {"oid": "6e47fc3a83c3ff6b7448d90911eb92d537a7ba73"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1784, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}