{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MjgxNzU1", "number": 2051, "title": "Add assertj helpers for asserting traces and expose from the junit5 h\u2026", "bodyText": "\u2026elper.\nI think this makes it very nice to assert on traces in tests. There's some future work though that requiring ordering doesn't seem very helpful here, especially for hasTracesSatisfying. Leaving it for now to not complicate this change too much.", "createdAt": "2020-11-10T07:22:31Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2051", "merged": true, "mergeCommit": {"oid": "9d17c6619ab77f2acc9fdb9e50a808529871bcf9"}, "closed": true, "closedAt": "2020-11-12T00:06:01Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbEGx8gH2gAyNTE4MjgxNzU1OjUwN2IwYTc2NmJiZTJjZTExNWMxMGQ0YjIyYjhkZDNkNDBiYmQyMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbZNKwAH2gAyNTE4MjgxNzU1OjAxNWYzZDY1MDQ3YzVmOWYzODRhZGY5YWFkZWUyZDU4ZDNlZGQ5OTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "507b0a766bbe2ce115c10d4b22b8dd3d40bbd216", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/507b0a766bbe2ce115c10d4b22b8dd3d40bbd216", "committedDate": "2020-11-10T07:20:13Z", "message": "Add assertj helpers for asserting traces and expose from the junit5 helper."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTE4ODU2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2051#pullrequestreview-526918856", "createdAt": "2020-11-10T07:25:38Z", "commit": {"oid": "507b0a766bbe2ce115c10d4b22b8dd3d40bbd216"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzoyNTozOVrOHwPMuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzoyNTozOVrOHwPMuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0MjcxNQ==", "bodyText": "Since it's a testing helper, I think we can assume user's won't try to trick the compiler with a bad array.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2051#discussion_r520342715", "createdAt": "2020-11-10T07:25:39Z", "author": {"login": "anuraaga"}, "path": "sdk/testing/src/main/java/io/opentelemetry/sdk/testing/assertj/TraceAssert.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.sdk.testing.assertj;\n+\n+import io.opentelemetry.sdk.trace.data.SpanData;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.function.Consumer;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+import org.assertj.core.api.AbstractIterableAssert;\n+\n+/** Assertions for an exported trace, a list of {@link SpanData} with the same trace ID. */\n+public class TraceAssert\n+    extends AbstractIterableAssert<TraceAssert, List<SpanData>, SpanData, SpanDataAssert> {\n+\n+  TraceAssert(List<SpanData> spanData) {\n+    super(spanData, TraceAssert.class);\n+  }\n+\n+  public TraceAssert hasTraceId(String traceId) {\n+    isNotNull();\n+    isNotEmpty();\n+\n+    String actualTraceId = actual.get(0).getTraceId();\n+    if (!actualTraceId.equals(traceId)) {\n+      failWithActualExpectedAndMessage(\n+          actualTraceId,\n+          traceId,\n+          \"Expected trace to have trace ID <%s> but was <%s>\",\n+          traceId,\n+          actualTraceId);\n+    }\n+    return this;\n+  }\n+\n+  /**\n+   * Asserts that the trace under assertion has the same number of spans as provided {@code\n+   * assertions} and executes each {@link SpanDataAssert} in {@code assertions} in order with the\n+   * corresponding span.\n+   */\n+  @SafeVarargs\n+  @SuppressWarnings(\"varargs\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507b0a766bbe2ce115c10d4b22b8dd3d40bbd216"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c771881a54ea315d3500be9a922d1c34691a8834", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c771881a54ea315d3500be9a922d1c34691a8834", "committedDate": "2020-11-10T07:32:42Z", "message": "Style and stability of map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NDU2MTcz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2051#pullrequestreview-527456173", "createdAt": "2020-11-10T17:48:08Z", "commit": {"oid": "c771881a54ea315d3500be9a922d1c34691a8834"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1aa258e59c1b8e32c006a30a2c4768a41f22a153", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1aa258e59c1b8e32c006a30a2c4768a41f22a153", "committedDate": "2020-11-11T03:53:24Z", "message": "Revert rename, any order comes in future."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45b74f3d3425646ee6643b456565ff09cd552da4", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/45b74f3d3425646ee6643b456565ff09cd552da4", "committedDate": "2020-11-11T04:05:54Z", "message": "Add coverage for protected method implementations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eb1d1f79cbcff073bee786f90dd5e60c95b35c8", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2eb1d1f79cbcff073bee786f90dd5e60c95b35c8", "committedDate": "2020-11-11T04:45:18Z", "message": "Test hasTraceId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "015f3d65047c5f9f384adf9aadee2d58d3edd990", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/015f3d65047c5f9f384adf9aadee2d58d3edd990", "committedDate": "2020-11-11T07:55:12Z", "message": "Check hasTraceId failure too."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4009, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}