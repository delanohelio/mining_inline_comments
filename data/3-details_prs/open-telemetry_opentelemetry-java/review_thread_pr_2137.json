{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NjQ5OTcx", "number": 2137, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMzo1MzoyMFrOE9d6ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMzo1MzoyMFrOE9d6ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODg4NzM5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/api/common/Labels.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMzo1MzoyMFrOH6K9ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo0MDo0M1rOH8NA3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1OTA1MA==", "bodyText": "same request as https://github.com/open-telemetry/opentelemetry-java/pull/2134/files#r530758547, would you mind making LabelsBuilder an interface?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2137#discussion_r530759050", "createdAt": "2020-11-26T03:53:20Z", "author": {"login": "trask"}, "path": "api/src/main/java/io/opentelemetry/api/common/Labels.java", "diffHunk": "@@ -34,31 +58,41 @@ public void forEach(BiConsumer<String, String> consumer) {\n         consumer.accept((String) data.get(i), (String) data.get(i + 1));\n       }\n     }\n+\n+    static Labels sortAndFilterToLabels(Object... data) {\n+      return new AutoValue_Labels_ArrayBackedLabels(\n+          sortAndFilter(data, /* filterNullValues= */ false));\n+    }\n+\n+    @Override\n+    public LabelsBuilder toBuilder() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0af52e675b97a06bc6dc5e93213fcbe98bbb2c60"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4OTgyMA==", "bodyText": "done. please take a look", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2137#discussion_r532889820", "createdAt": "2020-11-30T20:40:43Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/api/common/Labels.java", "diffHunk": "@@ -34,31 +58,41 @@ public void forEach(BiConsumer<String, String> consumer) {\n         consumer.accept((String) data.get(i), (String) data.get(i + 1));\n       }\n     }\n+\n+    static Labels sortAndFilterToLabels(Object... data) {\n+      return new AutoValue_Labels_ArrayBackedLabels(\n+          sortAndFilter(data, /* filterNullValues= */ false));\n+    }\n+\n+    @Override\n+    public LabelsBuilder toBuilder() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1OTA1MA=="}, "originalCommit": {"oid": "0af52e675b97a06bc6dc5e93213fcbe98bbb2c60"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1778, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}