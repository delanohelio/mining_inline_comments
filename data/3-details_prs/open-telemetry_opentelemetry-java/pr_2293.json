{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTgwOTQ4", "number": 2293, "title": "Manually structure output of log exporter instead of delegating to un\u2026", "bodyText": "\u2026stable toString\nFor now, I mostly copied the logging from instrumentation repo\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java#L32\nI think we agree we should use something more stable than toString for this exporter, but I don't know what format we'd all like. I'm thinking of something like {name: foo, traceId: aefaefaefefafe, spanId: afeeafaefaef, attributes: {foo=\"bar\"}, events: [], links: []}. Any preferences?", "createdAt": "2020-12-14T06:34:26Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2293", "merged": true, "mergeCommit": {"oid": "9bce6f17feae4a440f2bcf4af0521b27ffecabae"}, "closed": true, "closedAt": "2020-12-17T05:14:05Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdl_zIVAH2gAyNTM5MTgwOTQ4OmVkNDVmZDA5ZGQwMjNiOWMwYjhmZTUwYjJlMjczYzExNTQxZDM0YjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm7k2CAH2gAyNTM5MTgwOTQ4OmMzYmM0MmViZTgxNzM2MWJkMDRkNDQzMjE5Y2UwZTJhMGIzMWYwY2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ed45fd09dd023b9c0b8fe50b2e273c11541d34b4", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ed45fd09dd023b9c0b8fe50b2e273c11541d34b4", "committedDate": "2020-12-14T06:32:18Z", "message": "Manually structure output of log exporter instead of delegating to unstable toString"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNzgzMzEy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2293#pullrequestreview-551783312", "createdAt": "2020-12-14T18:36:52Z", "commit": {"oid": "ed45fd09dd023b9c0b8fe50b2e273c11541d34b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODozNjo1MlrOIFfHrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODozNjo1MlrOIFfHrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYyMzY2Mw==", "bodyText": "any thoughts to prefixing \"t\" before the trace id and \"s\" before the span id?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2293#discussion_r542623663", "createdAt": "2020-12-14T18:36:52Z", "author": {"login": "jkwatson"}, "path": "exporters/logging/src/main/java/io/opentelemetry/exporter/logging/LoggingSpanExporter.java", "diffHunk": "@@ -15,12 +15,23 @@\n \n /** A Span Exporter that logs every span at INFO level using java.util.logging. */\n public class LoggingSpanExporter implements SpanExporter {\n-  private static final Logger logger = Logger.getLogger(LoggingSpanExporter.class.getName());\n+  // Visible for testing\n+  static final Logger logger = Logger.getLogger(LoggingSpanExporter.class.getName());\n \n   @Override\n   public CompletableResultCode export(Collection<SpanData> spans) {\n+    // We always have 32 + 16 + name + several whitespace, 60 seems like an OK initial guess.\n+    StringBuilder sb = new StringBuilder(60);\n     for (SpanData span : spans) {\n-      logger.log(Level.INFO, \"span: {0}\", span);\n+      sb.setLength(0);\n+      sb.append(span.getName())\n+          .append(\" \")\n+          .append(span.getTraceId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed45fd09dd023b9c0b8fe50b2e273c11541d34b4"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0052dc469400122335711f9e1fd79924e6a4794b", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0052dc469400122335711f9e1fd79924e6a4794b", "committedDate": "2020-12-15T06:11:33Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into logging-exporter-structured"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMTU3NzY0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2293#pullrequestreview-553157764", "createdAt": "2020-12-16T00:18:17Z", "commit": {"oid": "0052dc469400122335711f9e1fd79924e6a4794b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3bc42ebe817361bd04d443219ce0e2a0b31f0ce", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c3bc42ebe817361bd04d443219ce0e2a0b31f0ce", "committedDate": "2020-12-17T04:11:00Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into logging-exporter-structured"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3661, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}