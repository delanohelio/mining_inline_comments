{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjQ5OTQ5", "number": 2197, "title": "add some basic benchmarks for various baggage operations", "bodyText": "Resolves #791\nThe benchmarks here are for 0,1,10 and 100 items for each of the 4 different scenarios.\n\nBenchmark                                                                       (itemsToAdd)  Mode  Cnt       Score       Error   Units\nBaggageBenchmark.baggageItemBenchmark                                                      0  avgt   15      25.129 \u00b1     0.717   ns/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.alloc.rate                                       0  avgt   15    3035.656 \u00b1    81.597  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.alloc.rate.norm                                  0  avgt   15     120.000 \u00b1     0.001    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Eden_Space                              0  avgt   15    3041.779 \u00b1   131.702  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                         0  avgt   15     120.222 \u00b1     3.292    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Old_Gen                                 0  avgt   15       0.004 \u00b1     0.003  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                            0  avgt   15      \u2248 10\u207b\u2074                B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.count                                            0  avgt   15     259.000              counts\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.time                                             0  avgt   15     111.000                  ms\nBaggageBenchmark.baggageItemBenchmark                                                      1  avgt   15      92.714 \u00b1     1.209   ns/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.alloc.rate                                       1  avgt   15    1644.047 \u00b1    21.016  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.alloc.rate.norm                                  1  avgt   15     240.000 \u00b1     0.001    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Eden_Space                              1  avgt   15    1654.261 \u00b1    95.332  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                         1  avgt   15     241.503 \u00b1    13.824    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Old_Gen                                 1  avgt   15       0.002 \u00b1     0.002  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                            1  avgt   15      \u2248 10\u207b\u00b3                B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.count                                            1  avgt   15     141.000              counts\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.time                                             1  avgt   15      65.000                  ms\nBaggageBenchmark.baggageItemBenchmark                                                     10  avgt   15     771.125 \u00b1     9.200   ns/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.alloc.rate                                      10  avgt   15     705.019 \u00b1     8.002  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.alloc.rate.norm                                 10  avgt   15     856.001 \u00b1     0.002    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Eden_Space                             10  avgt   15     706.164 \u00b1     0.933  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                        10  avgt   15     857.488 \u00b1    10.500    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Old_Gen                                10  avgt   15       0.002 \u00b1     0.001  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                           10  avgt   15       0.003 \u00b1     0.002    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.count                                           10  avgt   15     105.000              counts\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.time                                            10  avgt   15      40.000                  ms\nBaggageBenchmark.baggageItemBenchmark                                                    100  avgt   15   11329.149 \u00b1   170.070   ns/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.alloc.rate                                     100  avgt   15     447.224 \u00b1     6.920  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.alloc.rate.norm                                100  avgt   15    7976.013 \u00b1     0.034    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Eden_Space                            100  avgt   15     450.719 \u00b1    55.720  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                       100  avgt   15    8038.497 \u00b1   987.124    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Old_Gen                               100  avgt   15       0.002 \u00b1     0.003  MB/sec\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                          100  avgt   15       0.035 \u00b1     0.051    B/op\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.count                                          100  avgt   15      67.000              counts\nBaggageBenchmark.baggageItemBenchmark:\u00b7gc.time                                           100  avgt   15      25.000                  ms\nBaggageBenchmark.baggageParentBenchmark                                                    0  avgt   15      10.221 \u00b1     0.224   ns/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.alloc.rate                                     0  avgt   15    1491.731 \u00b1    32.007  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.alloc.rate.norm                                0  avgt   15      24.000 \u00b1     0.001    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Eden_Space                            0  avgt   15    1496.393 \u00b1    64.661  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                       0  avgt   15      24.074 \u00b1     0.837    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Old_Gen                               0  avgt   15       0.001 \u00b1     0.001  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                          0  avgt   15      \u2248 10\u207b\u2075                B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.count                                          0  avgt   15     153.000              counts\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.time                                           0  avgt   15      62.000                  ms\nBaggageBenchmark.baggageParentBenchmark                                                    1  avgt   15     118.326 \u00b1     1.481   ns/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.alloc.rate                                     1  avgt   15    1718.494 \u00b1    21.620  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.alloc.rate.norm                                1  avgt   15     320.000 \u00b1     0.001    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Eden_Space                            1  avgt   15    1713.595 \u00b1    86.829  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                       1  avgt   15     319.042 \u00b1    14.552    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Old_Gen                               1  avgt   15       0.002 \u00b1     0.002  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                          1  avgt   15      \u2248 10\u207b\u00b3                B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.count                                          1  avgt   15     146.000              counts\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.time                                           1  avgt   15      68.000                  ms\nBaggageBenchmark.baggageParentBenchmark                                                   10  avgt   15    3977.633 \u00b1    62.635   ns/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.alloc.rate                                    10  avgt   15     982.083 \u00b1    14.850  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.alloc.rate.norm                               10  avgt   15    6152.004 \u00b1     0.012    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Eden_Space                           10  avgt   15     987.224 \u00b1    71.887  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                      10  avgt   15    6184.874 \u00b1   452.713    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Old_Gen                              10  avgt   15       0.002 \u00b1     0.001  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                         10  avgt   15       0.011 \u00b1     0.008    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.count                                         10  avgt   15     101.000              counts\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.time                                          10  avgt   15      41.000                  ms\nBaggageBenchmark.baggageParentBenchmark                                                  100  avgt   15  468079.784 \u00b1  5002.079   ns/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.alloc.rate                                   100  avgt   15     425.955 \u00b1     4.704  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.alloc.rate.norm                              100  avgt   15  313952.529 \u00b1     1.394    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Eden_Space                          100  avgt   15     430.627 \u00b1    49.500  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                     100  avgt   15  317359.433 \u00b1 35829.324    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Old_Gen                             100  avgt   15       0.002 \u00b1     0.001  MB/sec\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                        100  avgt   15       1.542 \u00b1     0.902    B/op\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.count                                        100  avgt   15      64.000              counts\nBaggageBenchmark.baggageParentBenchmark:\u00b7gc.time                                         100  avgt   15      23.000                  ms\nBaggageBenchmark.baggageParentBenchmark_noContent                                          0  avgt   15      10.226 \u00b1     0.207   ns/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.alloc.rate                           0  avgt   15    1490.986 \u00b1    30.017  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.alloc.rate.norm                      0  avgt   15      24.000 \u00b1     0.001    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Eden_Space                  0  avgt   15    1487.544 \u00b1    80.517  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Eden_Space.norm             0  avgt   15      23.939 \u00b1     1.069    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Old_Gen                     0  avgt   15       0.001 \u00b1     0.001  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Old_Gen.norm                0  avgt   15      \u2248 10\u207b\u2075                B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.count                                0  avgt   15     152.000              counts\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.time                                 0  avgt   15      62.000                  ms\nBaggageBenchmark.baggageParentBenchmark_noContent                                          1  avgt   15      49.688 \u00b1     0.872   ns/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.alloc.rate                           1  avgt   15    2554.822 \u00b1    44.222  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.alloc.rate.norm                      1  avgt   15     200.000 \u00b1     0.001    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Eden_Space                  1  avgt   15    2564.362 \u00b1    94.304  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Eden_Space.norm             1  avgt   15     200.745 \u00b1     6.459    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Old_Gen                     1  avgt   15       0.004 \u00b1     0.002  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Old_Gen.norm                1  avgt   15      \u2248 10\u207b\u00b3                B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.count                                1  avgt   15     219.000              counts\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.time                                 1  avgt   15      99.000                  ms\nBaggageBenchmark.baggageParentBenchmark_noContent                                         10  avgt   15     316.118 \u00b1     4.488   ns/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.alloc.rate                          10  avgt   15    2812.121 \u00b1    40.809  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.alloc.rate.norm                     10  avgt   15    1400.000 \u00b1     0.001    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Eden_Space                 10  avgt   15    2812.564 \u00b1   120.082  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Eden_Space.norm            10  avgt   15    1400.003 \u00b1    48.778    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Old_Gen                    10  avgt   15       0.003 \u00b1     0.001  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Old_Gen.norm               10  avgt   15       0.001 \u00b1     0.001    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.count                               10  avgt   15     186.000              counts\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.time                                10  avgt   15      93.000                  ms\nBaggageBenchmark.baggageParentBenchmark_noContent                                        100  avgt   15    3503.121 \u00b1    30.072   ns/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.alloc.rate                         100  avgt   15    2905.655 \u00b1    23.747  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.alloc.rate.norm                    100  avgt   15   16040.004 \u00b1     0.010    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Eden_Space                100  avgt   15    2909.937 \u00b1   106.258  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Eden_Space.norm           100  avgt   15   16063.257 \u00b1   556.193    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Old_Gen                   100  avgt   15       0.003 \u00b1     0.002  MB/sec\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.churn.G1_Old_Gen.norm              100  avgt   15       0.015 \u00b1     0.013    B/op\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.count                              100  avgt   15     199.000              counts\nBaggageBenchmark.baggageParentBenchmark_noContent:\u00b7gc.time                               100  avgt   15      99.000                  ms\nBaggageBenchmark.baggageToBuilderBenchmark                                                 0  avgt   15       2.496 \u00b1     0.038   ns/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.alloc.rate                                  0  avgt   15       0.001 \u00b1     0.002  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.alloc.rate.norm                             0  avgt   15      \u2248 10\u207b\u2076                B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.count                                       0  avgt   15         \u2248 0              counts\nBaggageBenchmark.baggageToBuilderBenchmark                                                 1  avgt   15     115.387 \u00b1     1.575   ns/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.alloc.rate                                  1  avgt   15    1451.636 \u00b1    20.154  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.alloc.rate.norm                             1  avgt   15     264.000 \u00b1     0.001    B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Eden_Space                         1  avgt   15    1450.429 \u00b1    71.549  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                    1  avgt   15     263.765 \u00b1    12.114    B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Old_Gen                            1  avgt   15       0.002 \u00b1     0.001  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                       1  avgt   15      \u2248 10\u207b\u00b3                B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.count                                       1  avgt   15     149.000              counts\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.time                                        1  avgt   15      64.000                  ms\nBaggageBenchmark.baggageToBuilderBenchmark                                                10  avgt   15    3134.037 \u00b1    37.989   ns/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.alloc.rate                                 10  avgt   15     960.178 \u00b1    11.599  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.alloc.rate.norm                            10  avgt   15    4744.004 \u00b1     0.010    B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Eden_Space                        10  avgt   15     967.081 \u00b1     1.922  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                   10  avgt   15    4778.685 \u00b1    59.368    B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Old_Gen                           10  avgt   15       0.002 \u00b1     0.002  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                      10  avgt   15       0.010 \u00b1     0.008    B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.count                                      10  avgt   15     120.000              counts\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.time                                       10  avgt   15      49.000                  ms\nBaggageBenchmark.baggageToBuilderBenchmark                                               100  avgt   15  400883.491 \u00b1  3981.205   ns/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.alloc.rate                                100  avgt   15     444.326 \u00b1     4.280  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.alloc.rate.norm                           100  avgt   15  280864.455 \u00b1     1.207    B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Eden_Space                       100  avgt   15     448.485 \u00b1    55.284  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Eden_Space.norm                  100  avgt   15  283369.040 \u00b1 33549.280    B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Old_Gen                          100  avgt   15       0.001 \u00b1     0.001  MB/sec\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.churn.G1_Old_Gen.norm                     100  avgt   15       0.892 \u00b1     0.754    B/op\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.count                                     100  avgt   15      67.000              counts\nBaggageBenchmark.baggageToBuilderBenchmark:\u00b7gc.time                                      100  avgt   15      25.000                  ms", "createdAt": "2020-12-04T16:42:54Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2197", "merged": true, "mergeCommit": {"oid": "704dfe270b44dda6c578905251c4fc872d12e12a"}, "closed": true, "closedAt": "2020-12-08T19:00:56Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjxTeIAFqTU0NTkxOTY2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj6NzGgH2gAyNTMyNjQ5OTQ5OjVmOGRjMDBjYmJlNzMyM2VkNDA1ZjczZTBlNDllMmMwZjNmZjM5OTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1OTE5NjYz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2197#pullrequestreview-545919663", "createdAt": "2020-12-07T08:27:38Z", "commit": {"oid": "8496be1a53d50fa964f1cd9e8a1a9578c6987b06"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODoyNzozOFrOIAbEuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODoyODo0NlrOIAbHUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMxNDQ4OQ==", "bodyText": "Nit we use singular BaggageBenchmark for all our others I think", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2197#discussion_r537314489", "createdAt": "2020-12-07T08:27:38Z", "author": {"login": "anuraaga"}, "path": "api/src/jmh/java/io/opentelemetry/api/trace/BaggageBenchmarks.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.api.trace;\n+\n+import io.opentelemetry.api.baggage.Baggage;\n+import io.opentelemetry.api.baggage.BaggageBuilder;\n+import io.opentelemetry.context.Context;\n+import java.util.concurrent.TimeUnit;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+@SuppressWarnings(\"JavadocMethod\")\n+@State(Scope.Thread)\n+public class BaggageBenchmarks {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8496be1a53d50fa964f1cd9e8a1a9578c6987b06"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMxNTE1NA==", "bodyText": "Can you preallocate the key / value strings in a Setup? No idea how significant the string allocation here is without trying that, it may not be though. Though it would definitely skew the GC numbers", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2197#discussion_r537315154", "createdAt": "2020-12-07T08:28:46Z", "author": {"login": "anuraaga"}, "path": "api/src/jmh/java/io/opentelemetry/api/trace/BaggageBenchmarks.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.api.trace;\n+\n+import io.opentelemetry.api.baggage.Baggage;\n+import io.opentelemetry.api.baggage.BaggageBuilder;\n+import io.opentelemetry.context.Context;\n+import java.util.concurrent.TimeUnit;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+@SuppressWarnings(\"JavadocMethod\")\n+@State(Scope.Thread)\n+public class BaggageBenchmarks {\n+\n+  @Param({\"0\", \"1\", \"10\", \"100\"})\n+  public int itemsToAdd;\n+\n+  @Benchmark\n+  @BenchmarkMode({Mode.AverageTime})\n+  @Fork(1)\n+  @Measurement(iterations = 15, time = 1)\n+  @OutputTimeUnit(TimeUnit.NANOSECONDS)\n+  @Warmup(iterations = 5, time = 1)\n+  public Baggage baggageItemBenchmark() {\n+    BaggageBuilder builder = Baggage.builder();\n+    for (int i = 0; i < itemsToAdd; i++) {\n+      builder.put(\"key\" + i, \"value\" + i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8496be1a53d50fa964f1cd9e8a1a9578c6987b06"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac4d94932336f468689733c541190d2081b0ce03", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ac4d94932336f468689733c541190d2081b0ce03", "committedDate": "2020-12-07T16:34:43Z", "message": "add some basic benchmarks for various baggage operations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9e387c0774b7d1a06a4fa4db4b709c0eb72f015", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d9e387c0774b7d1a06a4fa4db4b709c0eb72f015", "committedDate": "2020-12-07T18:38:33Z", "message": "update for changes from upstream; pre-allocate the strings in the benchmark."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8496be1a53d50fa964f1cd9e8a1a9578c6987b06", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8496be1a53d50fa964f1cd9e8a1a9578c6987b06", "committedDate": "2020-12-04T16:41:37Z", "message": "add some basic benchmarks for various baggage operations"}, "afterCommit": {"oid": "d9e387c0774b7d1a06a4fa4db4b709c0eb72f015", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d9e387c0774b7d1a06a4fa4db4b709c0eb72f015", "committedDate": "2020-12-07T18:38:33Z", "message": "update for changes from upstream; pre-allocate the strings in the benchmark."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f8dc00cbbe7323ed405f73e0e49e2c0f3ff3999", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5f8dc00cbbe7323ed405f73e0e49e2c0f3ff3999", "committedDate": "2020-12-07T18:54:09Z", "message": "allocate the strings statically because we can"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3860, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}