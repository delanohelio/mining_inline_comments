{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MTQzNTcz", "number": 1611, "title": "Implement spec change to only accept Context as span parent.", "bodyText": "Partial implementation of (now merged) open-telemetry/opentelemetry-specification#875\nThis is a prototype for spec PR open-telemetry/opentelemetry-specification#875 (spec issue open-telemetry/opentelemetry-specification#510).\nTo be more minimal, it does not currently add the Context parameter to SpanProcessor.OnStart, but that would be a trivial follow-up.\n\nOLD OUTDATED DESCRIPTION\nIt replaces the parentSpanId + hasRemoteParent in RecordEventsReadableSpan with a full io.grpc.Context. That was the simple part. The part that is a bit funky is that DefaultSpan now has also has a parent Context in addition to still having a SpanContext for itself.\nAll in all, this removes 24 lines according to git diff --stat, so as stated in the spec PR, the total complexity does not really increase here.\nThe most interesting changes are in SpanBuilderSdk, RecordEventsReadableSpan and DefaultSpan.\nEND OLD OUTDATED DESCRIPTION", "createdAt": "2020-09-01T15:00:17Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611", "merged": true, "mergeCommit": {"oid": "83b9ba5701fdffcad867009b08d12e446e0456a6"}, "closed": true, "closedAt": "2020-09-25T02:37:38Z", "author": {"login": "Oberon00"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEoqZxgH2gAyNDc3MTQzNTczOjgxNTRiMzI4Y2Q0NjNjNDViMjFjMzYxM2I0NjZiZjMwOGMxNWQzODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMMfbfgFqTQ5NjA3MjI5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8154b328cd463c45b21c3613b466bf308c15d388", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8154b328cd463c45b21c3613b466bf308c15d388", "committedDate": "2020-09-01T14:55:27Z", "message": "Prototype for Context as span parent."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTAwODg4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#pullrequestreview-479900888", "createdAt": "2020-09-01T16:03:35Z", "commit": {"oid": "8154b328cd463c45b21c3613b466bf308c15d388"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNjowMzozNVrOHK9nGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNjowMzozNVrOHK9nGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI1NzI0MQ==", "bodyText": "This is only used in the OpenTracingShim so far and the usage there is questionable (but might actually be helpful for baggage propagation @carlosalberto?), so we could remove this change if we want to minimize the PR. This in turn would remove the changes to DefaultSpan which in turn would remove many usage changes that create a DefaultSpan.\nI initially introduced this getter because I thought it was logical that this should be propagated even for the default span, but now I'm not so sure anymore -- the instrumentation should be responsible for propagating the context, not the span, right?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#discussion_r481257241", "createdAt": "2020-09-01T16:03:35Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -283,6 +283,14 @@\n    */\n   SpanContext getContext();\n \n+  /**\n+   * Returns the parent {@code Context} associated with this {@code Span}.\n+   *\n+   * @return the parent {@code Context} associated with this {@code Span}.\n+   * @since 0.8.0\n+   */\n+  Context getParent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8154b328cd463c45b21c3613b466bf308c15d388"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTI4MzM3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#pullrequestreview-479928337", "createdAt": "2020-09-01T16:37:08Z", "commit": {"oid": "8154b328cd463c45b21c3613b466bf308c15d388"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNjozNzowOFrOHK_Kug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNjozNzowOFrOHK_Kug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI4Mjc0Ng==", "bodyText": "This is a bug I found when writing this. setNoParent and then calling setParent(Context) will ignore the context.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#discussion_r481282746", "createdAt": "2020-09-01T16:37:08Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/trace/DefaultTracer.java", "diffHunk": "@@ -67,43 +67,32 @@ static NoopSpanBuilder create(String spanName) {\n     }\n \n     private boolean isRootSpan;\n-    @Nullable private SpanContext spanContext;\n+    @Nullable private Context parent;\n \n     @Override\n     public Span startSpan() {\n-      if (spanContext == null && !isRootSpan) {\n-        spanContext = TracingContextUtils.getCurrentSpan().getContext();\n+      if (parent == null) {\n+        parent = Context.current();\n+      }\n+      if (isRootSpan) {\n+        parent = TracingContextUtils.withSpan(DefaultSpan.getInvalid(), parent);\n       }\n \n-      return spanContext != null && !SpanContext.getInvalid().equals(spanContext)\n-          ? new DefaultSpan(spanContext)\n-          : DefaultSpan.getInvalid();\n-    }\n-\n-    @Override\n-    public NoopSpanBuilder setParent(Span parent) {\n-      Utils.checkNotNull(parent, \"parent\");\n-      spanContext = parent.getContext();\n-      return this;\n-    }\n-\n-    @Override\n-    public NoopSpanBuilder setParent(SpanContext remoteParent) {\n-      Utils.checkNotNull(remoteParent, \"remoteParent\");\n-      spanContext = remoteParent;\n-      return this;\n+      return new DefaultSpan(TracingContextUtils.getSpan(parent).getContext(), parent);\n     }\n \n     @Override\n     public NoopSpanBuilder setParent(Context context) {\n       Utils.checkNotNull(context, \"context\");\n-      spanContext = TracingContextUtils.getSpan(context).getContext();\n+      isRootSpan = false; // TODO port this fix to mainline", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8154b328cd463c45b21c3613b466bf308c15d388"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7fccf470dd250441820c43ae00bca840a1fdd48", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a7fccf470dd250441820c43ae00bca840a1fdd48", "committedDate": "2020-09-01T16:55:01Z", "message": "Simplify ZipkinSpanExporterEndToEndHttpTest."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e102deff195ea8f8088f59e28de9edbdadbfa079", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e102deff195ea8f8088f59e28de9edbdadbfa079", "committedDate": "2020-09-01T16:55:52Z", "message": "Minimize PR diff."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5500b81d50b13fe508c6c3ac5489410aa21004eb", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5500b81d50b13fe508c6c3ac5489410aa21004eb", "committedDate": "2020-09-01T17:26:57Z", "message": "Make Codecov happy."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNTM5MTgw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#pullrequestreview-480539180", "createdAt": "2020-09-02T07:07:55Z", "commit": {"oid": "5500b81d50b13fe508c6c3ac5489410aa21004eb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzowNzo1NVrOHLfkYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzoxNjoyMVrOHLf_Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxMzYwMg==", "bodyText": "I don't quite understand what we're getting from the change in this PR. It seems we round-trip through Context API instead of much more efficiently accessing fields directly?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#discussion_r481813602", "createdAt": "2020-09-02T07:07:55Z", "author": {"login": "anuraaga"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -508,7 +501,7 @@ private Status getStatusWithDefault() {\n   }\n \n   SpanId getParentSpanId() {\n-    return parentSpanId;\n+    return TracingContextUtils.getSpan(parent).getContext().getSpanId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5500b81d50b13fe508c6c3ac5489410aa21004eb"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxOTA1MA==", "bodyText": "For example, for a root span this looks almost like this series of expensive no-ops\nTracingContextUtils.getSpan(TracingContextUtils.withSpan(DefaultSpan.getInvalid(), Context.current())).getContext()\nvs\nDefaultSpan.getInvalid()", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#discussion_r481819050", "createdAt": "2020-09-02T07:14:37Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/DefaultTracer.java", "diffHunk": "@@ -67,43 +67,32 @@ static NoopSpanBuilder create(String spanName) {\n     }\n \n     private boolean isRootSpan;\n-    @Nullable private SpanContext spanContext;\n+    @Nullable private Context parent;\n \n     @Override\n     public Span startSpan() {\n-      if (spanContext == null && !isRootSpan) {\n-        spanContext = TracingContextUtils.getCurrentSpan().getContext();\n+      if (parent == null) {\n+        parent = Context.current();\n+      }\n+      if (isRootSpan) {\n+        parent = TracingContextUtils.withSpan(DefaultSpan.getInvalid(), parent);\n       }\n \n-      return spanContext != null && !SpanContext.getInvalid().equals(spanContext)\n-          ? new DefaultSpan(spanContext)\n-          : DefaultSpan.getInvalid();\n-    }\n-\n-    @Override\n-    public NoopSpanBuilder setParent(Span parent) {\n-      Utils.checkNotNull(parent, \"parent\");\n-      spanContext = parent.getContext();\n-      return this;\n-    }\n-\n-    @Override\n-    public NoopSpanBuilder setParent(SpanContext remoteParent) {\n-      Utils.checkNotNull(remoteParent, \"remoteParent\");\n-      spanContext = remoteParent;\n-      return this;\n+      return new DefaultSpan(TracingContextUtils.getSpan(parent).getContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5500b81d50b13fe508c6c3ac5489410aa21004eb"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgyMDUxOQ==", "bodyText": "Context isn't data, it's a way to move data around in-process, not out-of-process", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#discussion_r481820519", "createdAt": "2020-09-02T07:16:21Z", "author": {"login": "anuraaga"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/data/SpanData.java", "diffHunk": "@@ -77,6 +78,15 @@\n    */\n   SpanId getParentSpanId();\n \n+  /**\n+   * Returns the parent {@code Context}. If the {@code Span} is a root {@code Span}, the Context\n+   * will contain no Span or an invalid span.\n+   *\n+   * @return the parent {@code SpanId} or an invalid SpanId if this is a root {@code Span}.\n+   * @since 0.8.0\n+   */\n+  Context getParent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5500b81d50b13fe508c6c3ac5489410aa21004eb"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0eb98299bacafc3a226a944e99be0245b3968d92", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0eb98299bacafc3a226a944e99be0245b3968d92", "committedDate": "2020-09-02T07:57:34Z", "message": "Fix overcomplicated DefaultTracer."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e152a50fd261702df19ff5cc0cf532ce80369c1c", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e152a50fd261702df19ff5cc0cf532ce80369c1c", "committedDate": "2020-09-02T17:34:53Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/contextparent\n\nConflicts:\n\tapi/src/main/java/io/opentelemetry/trace/DefaultTracer.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6308f5e153095ec33c801d198d0b531de6692d6", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a6308f5e153095ec33c801d198d0b531de6692d6", "committedDate": "2020-09-04T16:21:37Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/contextparent\n\nConflicts:\n\texporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/AdapterTest.java\n\texporters/zipkin/src/test/java/io/opentelemetry/exporters/zipkin/ZipkinSpanExporterEndToEndHttpTest.java\n\texporters/zipkin/src/test/java/io/opentelemetry/exporters/zipkin/ZipkinSpanExporterTest.java\n\tsdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n\tsdk/tracing/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java\n\tsdk/tracing/src/test/java/io/opentelemetry/sdk/trace/SpanBuilderSdkTest.java\n\ttesting_internal/src/main/java/io/opentelemetry/sdk/trace/TestSpanData.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66b6130c30fe65210a97919adffadb39223567aa", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/66b6130c30fe65210a97919adffadb39223567aa", "committedDate": "2020-09-04T16:22:07Z", "message": "Fix build after merge."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2221c2af98fc5fda452ef437333874871c5991f8", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2221c2af98fc5fda452ef437333874871c5991f8", "committedDate": "2020-09-11T08:13:31Z", "message": "Merge branch 'master' into feature/contextparent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c24deafc238ba8e7d386491a9202039f4a4b31c5", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c24deafc238ba8e7d386491a9202039f4a4b31c5", "committedDate": "2020-09-15T14:05:56Z", "message": "Merge branch 'master' into feature/contextparent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30fbaf74c9fa6e1f20346b91a762fe6d3932214a", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/30fbaf74c9fa6e1f20346b91a762fe6d3932214a", "committedDate": "2020-09-15T14:24:02Z", "message": "Fix build after merge."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "255cd9cf70f218fdbbccb9fe93b1b4e09509d997", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/255cd9cf70f218fdbbccb9fe93b1b4e09509d997", "committedDate": "2020-09-16T09:21:46Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/contextparent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2253f8dbade0c7c6591b1f07a2da4ed2bba31349", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2253f8dbade0c7c6591b1f07a2da4ed2bba31349", "committedDate": "2020-09-16T09:44:55Z", "message": "Revert storage of full Context."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e275b267a0e8f23cf8bbeab4e97e41af5f107de", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2e275b267a0e8f23cf8bbeab4e97e41af5f107de", "committedDate": "2020-09-23T14:20:18Z", "message": "Merge branch 'master' into feature/contextparent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8dc898e21cbc1c7428ee0383824e19fba3be9ba", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e8dc898e21cbc1c7428ee0383824e19fba3be9ba", "committedDate": "2020-09-23T14:29:38Z", "message": "Lint."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODY0NDEx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#pullrequestreview-494864411", "createdAt": "2020-09-23T16:58:08Z", "commit": {"oid": "e8dc898e21cbc1c7428ee0383824e19fba3be9ba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjo1ODowOVrOHW38sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjo1ODowOVrOHW38sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc0NzM3OQ==", "bodyText": "youch. this API sure is ugly! Remind me again how this is going to make things easier/better for our users?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#discussion_r493747379", "createdAt": "2020-09-23T16:58:09Z", "author": {"login": "jkwatson"}, "path": "api/src/test/java/io/opentelemetry/trace/SpanBuilderTest.java", "diffHunk": "@@ -32,8 +33,8 @@\n   void doNotCrash_NoopImplementation() {\n     Span.Builder spanBuilder = tracer.spanBuilder(\"MySpanName\");\n     spanBuilder.setSpanKind(Kind.SERVER);\n-    spanBuilder.setParent(DefaultSpan.getInvalid());\n-    spanBuilder.setParent(DefaultSpan.getInvalid().getContext());\n+    spanBuilder.setParent(TracingContextUtils.withSpan(DefaultSpan.create(null), Context.ROOT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8dc898e21cbc1c7428ee0383824e19fba3be9ba"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODY5MTYy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#pullrequestreview-494869162", "createdAt": "2020-09-23T17:04:02Z", "commit": {"oid": "e8dc898e21cbc1c7428ee0383824e19fba3be9ba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzowNDowMlrOHW4LGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzowNDowMlrOHW4LGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc1MTA2Nw==", "bodyText": "I wonder if it might be better to rename the Context class in this package to TestContext or something, so we don't have the name collision in here.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#discussion_r493751067", "createdAt": "2020-09-23T17:04:02Z", "author": {"login": "jkwatson"}, "path": "sdk_extensions/testbed/src/test/java/io/opentelemetry/sdk/extensions/trace/testbed/concurrentcommonrequesthandler/RequestHandler.java", "diffHunk": "@@ -30,13 +29,13 @@\n \n   private final Tracer tracer;\n \n-  private final SpanContext parentContext;\n+  private final io.grpc.Context parentContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8dc898e21cbc1c7428ee0383824e19fba3be9ba"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTI1OTA4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#pullrequestreview-494925908", "createdAt": "2020-09-23T18:18:06Z", "commit": {"oid": "e8dc898e21cbc1c7428ee0383824e19fba3be9ba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoxODowNlrOHW65Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoxODowNlrOHW65Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5NTY0Nw==", "bodyText": "can you explain the TODO here? Do we need an issue to track a change? I'd prefer not to leave a cryptic TODO in the code like this, since it's not clear what the issue is.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#discussion_r493795647", "createdAt": "2020-09-23T18:18:06Z", "author": {"login": "jkwatson"}, "path": "opentracing_shim/src/main/java/io/opentelemetry/opentracingshim/SpanBuilderShim.java", "diffHunk": "@@ -192,11 +195,15 @@ public Span start() {\n     if (ignoreActiveSpan && parentSpan == null && parentSpanContext == null) {\n       builder.setNoParent();\n     } else if (parentSpan != null) {\n-      builder.setParent(parentSpan.getSpan());\n+      // Note: We ignore the (potentially stored) parentSpan's (grand)parent context here.\n+      builder.setParent(TracingContextUtils.withSpan(parentSpan.getSpan(), Context.current()));\n       SpanContextShim contextShim = spanContextTable().get(parentSpan);\n       distContext = contextShim == null ? null : contextShim.getCorrelationContext();\n     } else if (parentSpanContext != null) {\n-      builder.setParent(parentSpanContext.getSpanContext());\n+      // TODO: This might be wonky", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8dc898e21cbc1c7428ee0383824e19fba3be9ba"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f618e0c3e526d39a86bacba672fdac48a65ee67", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9f618e0c3e526d39a86bacba672fdac48a65ee67", "committedDate": "2020-09-24T15:46:53Z", "message": "Clean up OpenTracing SpanBuilderShim."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eea962875d0971421d557d067d17018a34832c4", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6eea962875d0971421d557d067d17018a34832c4", "committedDate": "2020-09-24T15:55:41Z", "message": "Rename Context -> RequestHandlerContext in testbed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "332ce258ac6c63830c3ae8a779a940116204b7a1", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/332ce258ac6c63830c3ae8a779a940116204b7a1", "committedDate": "2020-09-24T16:01:37Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/contextparent\n\n Conflicts:\n\tsdk/tracing/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NzI5MTI4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#pullrequestreview-495729128", "createdAt": "2020-09-24T16:05:28Z", "commit": {"oid": "6eea962875d0971421d557d067d17018a34832c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MDcyMjk4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1611#pullrequestreview-496072298", "createdAt": "2020-09-25T02:37:31Z", "commit": {"oid": "332ce258ac6c63830c3ae8a779a940116204b7a1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2422, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}