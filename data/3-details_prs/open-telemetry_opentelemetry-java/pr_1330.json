{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzE0MDYx", "number": 1330, "title": "Convert SpanData to use immutable Attributes", "bodyText": "", "createdAt": "2020-06-10T21:31:20Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330", "merged": true, "mergeCommit": {"oid": "7644ef4d560b1a92b4c1b30e881b62e2e064532a"}, "closed": true, "closedAt": "2020-06-15T15:51:50Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqAjy8AH2gAyNDMyNzE0MDYxOjNjNmJmMTE3N2M4NGZhNWVlYzZhODMyYzUzNjAxZTAxODQ5OGIxZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcribMXAFqTQzMDc1Nzk4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3c6bf1177c84fa5eec6a832c53601e018498b1df", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/3c6bf1177c84fa5eec6a832c53601e018498b1df", "committedDate": "2020-06-10T21:30:00Z", "message": "Convert SpanData to use immutable Attributes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDQ1Njc3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#pullrequestreview-428445677", "createdAt": "2020-06-10T21:35:59Z", "commit": {"oid": "3c6bf1177c84fa5eec6a832c53601e018498b1df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTozNjowMFrOGiHJFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTozNjowMFrOGiHJFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyMTc4MQ==", "bodyText": "What do y'all think about adding this method to Attributes itself? It's not ultra efficient, but that could be documented as such.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#discussion_r438421781", "createdAt": "2020-06-10T21:36:00Z", "author": {"login": "jkwatson"}, "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/TestUtils.java", "diffHunk": "@@ -124,4 +125,32 @@ public static SpanData makeBasicSpan() {\n       tracerSdkFactory.updateActiveTraceConfig(originalConfig);\n     }\n   }\n+\n+  /** Find an AttributeValue by the key. */\n+  public static AttributeValue findByKey(Attributes attributes, String key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6bf1177c84fa5eec6a832c53601e018498b1df"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26b6eacb0a2728199d93576d4f3766d0860f2dc0", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/26b6eacb0a2728199d93576d4f3766d0860f2dc0", "committedDate": "2020-06-10T23:19:44Z", "message": "Add a get(key) method to the ImmutableKeyValuePairs and get rid of the extra test cruft"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7497b48e6474cef560d7a4ed84d6bee7149cc8b", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d7497b48e6474cef560d7a4ed84d6bee7149cc8b", "committedDate": "2020-06-10T23:24:41Z", "message": "revert an unneeded change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "471cd7086f3ad5a38545cf68a20faa8a3dddb172", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/471cd7086f3ad5a38545cf68a20faa8a3dddb172", "committedDate": "2020-06-10T23:27:00Z", "message": "another simple revert"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTEyODEw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#pullrequestreview-428512810", "createdAt": "2020-06-11T00:21:30Z", "commit": {"oid": "471cd7086f3ad5a38545cf68a20faa8a3dddb172"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDoyMTozMFrOGiKekw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDoyMjozMVrOGiKfrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3NjQzNQ==", "bodyText": "+1 to linear search, these should always be small enough where it's faster and opens up optimizations like deferring / not sorting.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#discussion_r438476435", "createdAt": "2020-06-11T00:21:30Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/common/ImmutableKeyValuePairs.java", "diffHunk": "@@ -56,6 +57,22 @@ public void forEach(KeyValueConsumer<V> consumer) {\n     }\n   }\n \n+  /**\n+   * Returns the value of the given key, or null if the key does not exist.\n+   *\n+   * <p>Warning: currently implemented via a linear search, so O(n) performance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "471cd7086f3ad5a38545cf68a20faa8a3dddb172"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3NjcxNg==", "bodyText": "For Attributes, having getString etc would make these sort of unit tests (thinking user code unit tests less worried about these speifically) nicer.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#discussion_r438476716", "createdAt": "2020-06-11T00:22:31Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -149,4 +149,41 @@ public void builder_arrayTypes() {\n                 \"double\", arrayAttributeValue(33.44, -44.33),\n                 \"boolean\", arrayAttributeValue(false, true)));\n   }\n+\n+  @Test\n+  public void get_Null() {\n+    assertThat(Attributes.empty().get(\"foo\")).isNull();\n+    assertThat(Attributes.of(\"key\", stringAttributeValue(\"value\")).get(\"foo\")).isNull();\n+  }\n+\n+  @Test\n+  public void get() {\n+    assertThat(Attributes.of(\"key\", stringAttributeValue(\"value\")).get(\"key\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "471cd7086f3ad5a38545cf68a20faa8a3dddb172"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTU1NDkz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#pullrequestreview-428955493", "createdAt": "2020-06-11T14:14:12Z", "commit": {"oid": "471cd7086f3ad5a38545cf68a20faa8a3dddb172"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoxNDoxMlrOGifWuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoxNDoxMlrOGifWuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxODQ4OA==", "bodyText": "Looking at this I see a lot of allocations happening here. Do you have a plan to change AttributeMap to implement the Attributes so we don't reconstruct the entire map when converting to SpanData?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#discussion_r438818488", "createdAt": "2020-06-11T14:14:12Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -516,13 +515,15 @@ int getTotalRecordedLinks() {\n   }\n \n   @GuardedBy(\"lock\")\n-  private Map<String, AttributeValue> getImmutableAttributes() {\n+  private Attributes getImmutableAttributes() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "471cd7086f3ad5a38545cf68a20faa8a3dddb172"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTEwODA1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#pullrequestreview-430110805", "createdAt": "2020-06-13T03:48:04Z", "commit": {"oid": "471cd7086f3ad5a38545cf68a20faa8a3dddb172"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMzo0ODowNFrOGjVhEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMzo0ODowNFrOGjVhEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcwNTg3NQ==", "bodyText": "Ok with addressing later. Don't quite understand this being not an end-user API since it would be used to create Resource too?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#discussion_r439705875", "createdAt": "2020-06-13T03:48:04Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -149,4 +149,41 @@ public void builder_arrayTypes() {\n                 \"double\", arrayAttributeValue(33.44, -44.33),\n                 \"boolean\", arrayAttributeValue(false, true)));\n   }\n+\n+  @Test\n+  public void get_Null() {\n+    assertThat(Attributes.empty().get(\"foo\")).isNull();\n+    assertThat(Attributes.of(\"key\", stringAttributeValue(\"value\")).get(\"foo\")).isNull();\n+  }\n+\n+  @Test\n+  public void get() {\n+    assertThat(Attributes.of(\"key\", stringAttributeValue(\"value\")).get(\"key\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3NjcxNg=="}, "originalCommit": {"oid": "471cd7086f3ad5a38545cf68a20faa8a3dddb172"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzU3OTg3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1330#pullrequestreview-430757987", "createdAt": "2020-06-15T15:31:18Z", "commit": {"oid": "471cd7086f3ad5a38545cf68a20faa8a3dddb172"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2863, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}