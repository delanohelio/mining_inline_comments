{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMDI0NTY3", "number": 1774, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjo0ODoyNVrOEw20RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNDoxNToyOVrOExBnSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjY1MjIwOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/io/opentelemetry/trace/propagation/HttpTraceContextTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjo0ODoyNVrOHmq76A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjo0ODoyNVrOHmq76A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMxMTQwMA==", "bodyText": "tiny spelling nit: this should be ingestCarrier injectCarrier.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1774#discussion_r510311400", "createdAt": "2020-10-22T16:48:25Z", "author": {"login": "jkwatson"}, "path": "api/src/test/java/io/opentelemetry/trace/propagation/HttpTraceContextTest.java", "diffHunk": "@@ -177,6 +177,17 @@ void extract_NullCarrier() {\n                 TRACE_ID_BASE16, SPAN_ID_BASE16, SAMPLED_TRACE_OPTIONS, TRACE_STATE_DEFAULT));\n   }\n \n+  @Test\n+  void extractAndInject_MoreFlags() {\n+    String traceParent = \"00-\" + TRACE_ID_BASE16 + \"-\" + SPAN_ID_BASE16 + \"-03\";\n+    Map<String, String> extractCarrier = new LinkedHashMap<>();\n+    extractCarrier.put(TRACE_PARENT, traceParent);\n+    Context context = httpTraceContext.extract(Context.current(), extractCarrier, getter);\n+    Map<String, String> injestCarrier = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "755c644a4c38b8e3c3b2ac8a78f2a07c8861b2d0"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODQyMTIzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/io/opentelemetry/trace/propagation/HttpTraceContextTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNDoxNToyOVrOHm7jhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNDoxNToyOVrOHm7jhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU4MzY4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Map<String, String> injestCarrier = new LinkedHashMap<>();\n          \n          \n            \n                httpTraceContext.inject(context, injestCarrier, setter);\n          \n          \n            \n                assertThat(extractCarrier).isEqualTo(injestCarrier);\n          \n          \n            \n                Map<String, String> injectCarrier = new LinkedHashMap<>();\n          \n          \n            \n                httpTraceContext.inject(context, injectCarrier, setter);\n          \n          \n            \n                assertThat(extractCarrier).isEqualTo(injectCarrier);", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1774#discussion_r510583685", "createdAt": "2020-10-23T04:15:29Z", "author": {"login": "anuraaga"}, "path": "api/src/test/java/io/opentelemetry/trace/propagation/HttpTraceContextTest.java", "diffHunk": "@@ -177,6 +177,17 @@ void extract_NullCarrier() {\n                 TRACE_ID_BASE16, SPAN_ID_BASE16, SAMPLED_TRACE_OPTIONS, TRACE_STATE_DEFAULT));\n   }\n \n+  @Test\n+  void extractAndInject_MoreFlags() {\n+    String traceParent = \"00-\" + TRACE_ID_BASE16 + \"-\" + SPAN_ID_BASE16 + \"-03\";\n+    Map<String, String> extractCarrier = new LinkedHashMap<>();\n+    extractCarrier.put(TRACE_PARENT, traceParent);\n+    Context context = httpTraceContext.extract(Context.current(), extractCarrier, getter);\n+    Map<String, String> injestCarrier = new LinkedHashMap<>();\n+    httpTraceContext.inject(context, injestCarrier, setter);\n+    assertThat(extractCarrier).isEqualTo(injestCarrier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "755c644a4c38b8e3c3b2ac8a78f2a07c8861b2d0"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1285, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}