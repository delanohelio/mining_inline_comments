{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MTQ5NTkw", "number": 2156, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNDoyMzoyMlrOE-fcOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTowNTowNVrOE-jioQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzOTYyMjk2OnYy", "diffSide": "RIGHT", "path": "context/src/main/java/io/opentelemetry/context/propagation/TextMapPropagator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNDoyMzoyMlrOH7rgVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNDoyMzoyMlrOH7rgVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM0MDgyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @return collection of fields that will be used by this formatter.\n          \n          \n            \n               * @return the fields that will be used by this formatter.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2156#discussion_r532340821", "createdAt": "2020-11-30T04:23:22Z", "author": {"login": "anuraaga"}, "path": "context/src/main/java/io/opentelemetry/context/propagation/TextMapPropagator.java", "diffHunk": "@@ -87,12 +88,12 @@ static TextMapPropagator noop() {\n    * clear fields as they couldn't have been set before. If it is a mutable, retryable object,\n    * successive calls should clear these fields first.\n    *\n-   * @return list of fields that will be used by this formatter.\n+   * @return collection of fields that will be used by this formatter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc5470e81237d2fe0745e95701478faac6aaedc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDI5NDczOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/api/trace/propagation/HttpTraceContext.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTowNTowNVrOH7xhVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMToxNjowOVrOH8OJYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzOTM4Mw==", "bodyText": "It seems the W3CTraceContextPropagator's implementation should also be changed.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2156#discussion_r532439383", "createdAt": "2020-11-30T09:05:05Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/api/trace/propagation/HttpTraceContext.java", "diffHunk": "@@ -33,7 +33,7 @@ public static HttpTraceContext getInstance() {\n   }\n \n   @Override\n-  public List<String> fields() {\n+  public Collection<String> fields() {\n     return W3CTraceContextPropagator.getInstance().fields();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc5470e81237d2fe0745e95701478faac6aaedc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYwMDI0OA==", "bodyText": "Additionally, when doing a CMD + SHFT + F in IntelliJ for fields().. It also highlights the following fields() methods in the propagators.\n\nDo you think we should also change these implementations? As although they are List which is a subtype of Collection, it may be best to be explicit with the types for clarity and consistency.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2156#discussion_r532600248", "createdAt": "2020-11-30T13:35:18Z", "author": {"login": "ChrisJBurns"}, "path": "api/src/main/java/io/opentelemetry/api/trace/propagation/HttpTraceContext.java", "diffHunk": "@@ -33,7 +33,7 @@ public static HttpTraceContext getInstance() {\n   }\n \n   @Override\n-  public List<String> fields() {\n+  public Collection<String> fields() {\n     return W3CTraceContextPropagator.getInstance().fields();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzOTM4Mw=="}, "originalCommit": {"oid": "7bc5470e81237d2fe0745e95701478faac6aaedc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc5ODg3Mw==", "bodyText": "Yes, let's change them all for consistency. good catch.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2156#discussion_r532798873", "createdAt": "2020-11-30T18:10:54Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/api/trace/propagation/HttpTraceContext.java", "diffHunk": "@@ -33,7 +33,7 @@ public static HttpTraceContext getInstance() {\n   }\n \n   @Override\n-  public List<String> fields() {\n+  public Collection<String> fields() {\n     return W3CTraceContextPropagator.getInstance().fields();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzOTM4Mw=="}, "originalCommit": {"oid": "7bc5470e81237d2fe0745e95701478faac6aaedc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkwODM4NQ==", "bodyText": "Pushed changes for all implementations also", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2156#discussion_r532908385", "createdAt": "2020-11-30T21:16:09Z", "author": {"login": "ChrisJBurns"}, "path": "api/src/main/java/io/opentelemetry/api/trace/propagation/HttpTraceContext.java", "diffHunk": "@@ -33,7 +33,7 @@ public static HttpTraceContext getInstance() {\n   }\n \n   @Override\n-  public List<String> fields() {\n+  public Collection<String> fields() {\n     return W3CTraceContextPropagator.getInstance().fields();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzOTM4Mw=="}, "originalCommit": {"oid": "7bc5470e81237d2fe0745e95701478faac6aaedc"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1804, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}