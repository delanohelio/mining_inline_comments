{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NDAzNTA4", "number": 1723, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjowNToxMVrOEoYddw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzowNzozMlrOEoZirg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzc5MjU1OnYy", "diffSide": "RIGHT", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjowNToxMVrOHZcJMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMToxMjoxMVrOHaKC0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzNzU1NA==", "bodyText": "Does the new interface allow this to be private? And then maybe we don't need to change the return types", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1723#discussion_r496437554", "createdAt": "2020-09-29T06:05:11Z", "author": {"login": "anuraaga"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "diffHunk": "@@ -36,7 +36,7 @@\n  * io.opentelemetry.OpenTelemetry}. However, if you need a custom implementation of the factory, you\n  * can create one as needed.\n  */\n-public class TracerSdkProvider implements TracerProvider {\n+public class TracerSdkProvider implements TracerProvider, TracerSdkManagement {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8972bc5abc5db15e0a7547cd93d522fecc1a58f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MTgxOQ==", "bodyText": "what do you want to be private?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1723#discussion_r496791819", "createdAt": "2020-09-29T15:02:12Z", "author": {"login": "jkwatson"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "diffHunk": "@@ -36,7 +36,7 @@\n  * io.opentelemetry.OpenTelemetry}. However, if you need a custom implementation of the factory, you\n  * can create one as needed.\n  */\n-public class TracerSdkProvider implements TracerProvider {\n+public class TracerSdkProvider implements TracerProvider, TracerSdkManagement {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzNzU1NA=="}, "originalCommit": {"oid": "8972bc5abc5db15e0a7547cd93d522fecc1a58f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgzMzU3NA==", "bodyText": "If you want to make TracerSdkProvider package-private, we would need to move the SPI implementation into this package: TracerProviderFactorySdk. That seems possible, if we're ok with moving it.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1723#discussion_r496833574", "createdAt": "2020-09-29T15:46:16Z", "author": {"login": "jkwatson"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "diffHunk": "@@ -36,7 +36,7 @@\n  * io.opentelemetry.OpenTelemetry}. However, if you need a custom implementation of the factory, you\n  * can create one as needed.\n  */\n-public class TracerSdkProvider implements TracerProvider {\n+public class TracerSdkProvider implements TracerProvider, TracerSdkManagement {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzNzU1NA=="}, "originalCommit": {"oid": "8972bc5abc5db15e0a7547cd93d522fecc1a58f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgzNTcyMQ==", "bodyText": "although it's used in a lot of tests as well right now, so we'd need to do quite a bit of test refactoring.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1723#discussion_r496835721", "createdAt": "2020-09-29T15:48:14Z", "author": {"login": "jkwatson"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "diffHunk": "@@ -36,7 +36,7 @@\n  * io.opentelemetry.OpenTelemetry}. However, if you need a custom implementation of the factory, you\n  * can create one as needed.\n  */\n-public class TracerSdkProvider implements TracerProvider {\n+public class TracerSdkProvider implements TracerProvider, TracerSdkManagement {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzNzU1NA=="}, "originalCommit": {"oid": "8972bc5abc5db15e0a7547cd93d522fecc1a58f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njg0ODk3NA==", "bodyText": "I removed all the \"production\" usages except the SPI implementation class.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1723#discussion_r496848974", "createdAt": "2020-09-29T16:00:33Z", "author": {"login": "jkwatson"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "diffHunk": "@@ -36,7 +36,7 @@\n  * io.opentelemetry.OpenTelemetry}. However, if you need a custom implementation of the factory, you\n  * can create one as needed.\n  */\n-public class TracerSdkProvider implements TracerProvider {\n+public class TracerSdkProvider implements TracerProvider, TracerSdkManagement {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzNzU1NA=="}, "originalCommit": {"oid": "8972bc5abc5db15e0a7547cd93d522fecc1a58f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE4OTU4Nw==", "bodyText": "I feel like moving the SPI implementation into this package is a win, less API is nice - I would say SPI package usually defines an SPI interface, but doesn't have to or even should define an SPI implementation. Doesn't have to be in this PR though.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1723#discussion_r497189587", "createdAt": "2020-09-30T01:12:11Z", "author": {"login": "anuraaga"}, "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/TracerSdkProvider.java", "diffHunk": "@@ -36,7 +36,7 @@\n  * io.opentelemetry.OpenTelemetry}. However, if you need a custom implementation of the factory, you\n  * can create one as needed.\n  */\n-public class TracerSdkProvider implements TracerProvider {\n+public class TracerSdkProvider implements TracerProvider, TracerSdkManagement {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzNzU1NA=="}, "originalCommit": {"oid": "8972bc5abc5db15e0a7547cd93d522fecc1a58f4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzk2OTc0OnYy", "diffSide": "RIGHT", "path": "exporters/inmemory/src/main/java/io/opentelemetry/exporters/inmemory/InMemoryTracing.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzowNzozMlrOHZdyOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMjowMjo0NFrOHaKylg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ2NDQ0MA==", "bodyText": "Methods names should be changed too, shouldn't they?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1723#discussion_r496464440", "createdAt": "2020-09-29T07:07:32Z", "author": {"login": "iNikem"}, "path": "exporters/inmemory/src/main/java/io/opentelemetry/exporters/inmemory/InMemoryTracing.java", "diffHunk": "@@ -57,7 +58,7 @@\n    * @return the {@code TracerSdkProvider} passed during construction.\n    * @since 0.1.0\n    */\n-  abstract TracerSdkProvider getTracerProvider();\n+  abstract TracerSdkManagement getTracerProvider();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8972bc5abc5db15e0a7547cd93d522fecc1a58f4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MTk4Nw==", "bodyText": "yep. will fix.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1723#discussion_r496791987", "createdAt": "2020-09-29T15:02:27Z", "author": {"login": "jkwatson"}, "path": "exporters/inmemory/src/main/java/io/opentelemetry/exporters/inmemory/InMemoryTracing.java", "diffHunk": "@@ -57,7 +58,7 @@\n    * @return the {@code TracerSdkProvider} passed during construction.\n    * @since 0.1.0\n    */\n-  abstract TracerSdkProvider getTracerProvider();\n+  abstract TracerSdkManagement getTracerProvider();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ2NDQ0MA=="}, "originalCommit": {"oid": "8972bc5abc5db15e0a7547cd93d522fecc1a58f4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwMTgxNA==", "bodyText": "fixed.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1723#discussion_r497201814", "createdAt": "2020-09-30T02:02:44Z", "author": {"login": "jkwatson"}, "path": "exporters/inmemory/src/main/java/io/opentelemetry/exporters/inmemory/InMemoryTracing.java", "diffHunk": "@@ -57,7 +58,7 @@\n    * @return the {@code TracerSdkProvider} passed during construction.\n    * @since 0.1.0\n    */\n-  abstract TracerSdkProvider getTracerProvider();\n+  abstract TracerSdkManagement getTracerProvider();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ2NDQ0MA=="}, "originalCommit": {"oid": "8972bc5abc5db15e0a7547cd93d522fecc1a58f4"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1240, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}