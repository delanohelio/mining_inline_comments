{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTI2NjYw", "number": 2285, "title": "Make classes that can be shutdown Closeable", "bodyText": "Regardless of where open-telemetry/opentelemetry-specification#1288 goes, I think it's a no-brainer to allow using Java's mechanism for cleanup.", "createdAt": "2020-12-14T04:48:51Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285", "merged": true, "mergeCommit": {"oid": "b68fc82b897ba9c26a1c945e72ff908a0a02dbb1"}, "closed": true, "closedAt": "2021-01-13T04:57:20Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdl-Tr7gH2gAyNTM5MTI2NjYwOjg2MjBmMGRmNTUxNDQxZDg4MDIyNDM5ZTc2YzBmNzEzMTdjZjdkN2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvoSYEgH2gAyNTM5MTI2NjYwOjg5M2M0NjdiZDE5MzNiZjliODQwN2Q3Yzg4MjAwYTlmYjVlYjgzMmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8620f0df551441d88022439e76c0f71317cf7d7e", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8620f0df551441d88022439e76c0f71317cf7d7e", "committedDate": "2020-12-14T04:48:03Z", "message": "Make classes that can be shutdown Closeable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dde44a9a3b6ec2e35a83119aad777b939d5059b9", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/dde44a9a3b6ec2e35a83119aad777b939d5059b9", "committedDate": "2020-12-14T04:49:19Z", "message": "Glad not my password"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTI5Mzgw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#pullrequestreview-551129380", "createdAt": "2020-12-14T08:18:44Z", "commit": {"oid": "dde44a9a3b6ec2e35a83119aad777b939d5059b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODoxODo0NFrOIFEl7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODoxODo0NFrOIFEl7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4OTAzNw==", "bodyText": "This seems a bit questionable. If we have a shutdown timeout, should it be hardcoded or configurable? If it is hardcoded, maybe use a constant?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#discussion_r542189037", "createdAt": "2020-12-14T08:18:44Z", "author": {"login": "Oberon00"}, "path": "sdk/trace/src/main/java/io/opentelemetry/sdk/trace/SpanProcessor.java", "diffHunk": "@@ -99,4 +101,13 @@ default CompletableResultCode shutdown() {\n   default CompletableResultCode forceFlush() {\n     return CompletableResultCode.ofSuccess();\n   }\n+\n+  /**\n+   * Closes this {@link SpanProcessor} after processing any remaining spans, releasing any\n+   * resources.\n+   */\n+  @Override\n+  default void close() {\n+    shutdown().join(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dde44a9a3b6ec2e35a83119aad777b939d5059b9"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNTI1MTA4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#pullrequestreview-551525108", "createdAt": "2020-12-14T16:12:38Z", "commit": {"oid": "dde44a9a3b6ec2e35a83119aad777b939d5059b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjoxMjozOFrOIFYKMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjoxMjozOFrOIFYKMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUwOTYxOQ==", "bodyText": "Do we need a shutdown and a close?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#discussion_r542509619", "createdAt": "2020-12-14T16:12:38Z", "author": {"login": "bogdandrutu"}, "path": "sdk/trace/src/main/java/io/opentelemetry/sdk/trace/SpanProcessor.java", "diffHunk": "@@ -99,4 +101,13 @@ default CompletableResultCode shutdown() {\n   default CompletableResultCode forceFlush() {\n     return CompletableResultCode.ofSuccess();\n   }\n+\n+  /**\n+   * Closes this {@link SpanProcessor} after processing any remaining spans, releasing any\n+   * resources.\n+   */\n+  @Override\n+  default void close() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dde44a9a3b6ec2e35a83119aad777b939d5059b9"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1312ee7fe21ec6b049f3d37a0ba3d054ad9b6d0b", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1312ee7fe21ec6b049f3d37a0ba3d054ad9b6d0b", "committedDate": "2020-12-16T02:28:15Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into closeable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzEwNTgy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#pullrequestreview-553310582", "createdAt": "2020-12-16T02:28:42Z", "commit": {"oid": "dde44a9a3b6ec2e35a83119aad777b939d5059b9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjoyODo0MlrOIGpYwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjozMToyNlrOIGpg3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0MDQ1MA==", "bodyText": "I don't think so if the spec is ok with changing names.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#discussion_r543840450", "createdAt": "2020-12-16T02:28:42Z", "author": {"login": "anuraaga"}, "path": "sdk/trace/src/main/java/io/opentelemetry/sdk/trace/SpanProcessor.java", "diffHunk": "@@ -99,4 +101,13 @@ default CompletableResultCode shutdown() {\n   default CompletableResultCode forceFlush() {\n     return CompletableResultCode.ofSuccess();\n   }\n+\n+  /**\n+   * Closes this {@link SpanProcessor} after processing any remaining spans, releasing any\n+   * resources.\n+   */\n+  @Override\n+  default void close() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUwOTYxOQ=="}, "originalCommit": {"oid": "dde44a9a3b6ec2e35a83119aad777b939d5059b9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0MjUyNQ==", "bodyText": "I think we expect this to finish relatively quickly, just finish things up. So maybe 10 seconds was too large, let me try 1 second. I'd prefer hard-coded just to keep things simpler, if extracting a constant are you thinking internal package?\n\nAlso, maybe it would be better to throw a timeout exception if the shutdown does not complete.\n\nI don't know if I've ever been able to handle an exception during shutdown so am ambivalent, but can add it. How useful does it seem?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#discussion_r543842525", "createdAt": "2020-12-16T02:31:26Z", "author": {"login": "anuraaga"}, "path": "sdk/trace/src/main/java/io/opentelemetry/sdk/trace/SpanProcessor.java", "diffHunk": "@@ -99,4 +101,13 @@ default CompletableResultCode shutdown() {\n   default CompletableResultCode forceFlush() {\n     return CompletableResultCode.ofSuccess();\n   }\n+\n+  /**\n+   * Closes this {@link SpanProcessor} after processing any remaining spans, releasing any\n+   * resources.\n+   */\n+  @Override\n+  default void close() {\n+    shutdown().join(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4OTAzNw=="}, "originalCommit": {"oid": "dde44a9a3b6ec2e35a83119aad777b939d5059b9"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MjU5MTg3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#pullrequestreview-557259187", "createdAt": "2020-12-22T17:53:41Z", "commit": {"oid": "1312ee7fe21ec6b049f3d37a0ba3d054ad9b6d0b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzo1Mzo0MVrOIKDsSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzo1Mzo0MVrOIKDsSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxNzE2MQ==", "bodyText": "can you create an issue to make the shutdown() return CompletableResultCode for consistency? Thanks!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#discussion_r547417161", "createdAt": "2020-12-22T17:53:41Z", "author": {"login": "jkwatson"}, "path": "sdk/trace/src/main/java/io/opentelemetry/sdk/trace/SdkTracerManagement.java", "diffHunk": "@@ -70,4 +71,22 @@\n    * @see SpanProcessor#forceFlush()\n    */\n   CompletableResultCode forceFlush();\n+\n+  /**\n+   * Attempts to stop all the activity for this {@link Tracer}. Calls {@link\n+   * SpanProcessor#shutdown()} for all registered {@link SpanProcessor}s.\n+   *\n+   * <p>This operation may block until all the Spans are processed. Must be called before turning\n+   * off the main application to ensure all data are processed and exported.\n+   *\n+   * <p>After this is called, newly created {@code Span}s will be no-ops.\n+   *\n+   * <p>After this is called, further attempts at re-using or reconfiguring this instance will\n+   * result in undefined behavior. It should be considered a terminal operation for the SDK\n+   * implementation.\n+   */\n+  @Override\n+  default void close() {\n+    shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1312ee7fe21ec6b049f3d37a0ba3d054ad9b6d0b"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MjU5NDUy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2285#pullrequestreview-557259452", "createdAt": "2020-12-22T17:54:10Z", "commit": {"oid": "1312ee7fe21ec6b049f3d37a0ba3d054ad9b6d0b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "812a4f85bd1abf58b0ae88981472fb060399aaaf", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/812a4f85bd1abf58b0ae88981472fb060399aaaf", "committedDate": "2021-01-06T05:17:04Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into closeable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0de2c4b10a18d4d652e59b427bb2b2879e94d26", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c0de2c4b10a18d4d652e59b427bb2b2879e94d26", "committedDate": "2021-01-13T04:47:24Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into closeable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "893c467bd1933bf9b8407d7c88200a9fb5eb832f", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/893c467bd1933bf9b8407d7c88200a9fb5eb832f", "committedDate": "2021-01-13T04:47:57Z", "message": "Drift"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3651, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}