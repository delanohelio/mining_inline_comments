{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzOTIxMzQ3", "number": 1115, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo0Mjo0OVrODyMpcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjoxODo1NlrODyk9Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTYyNjA5OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo0Mjo0OVrOGGGzGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjowOTozNFrOGGsuYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw==", "bodyText": "I would do the opposite and disable by default, what do you think?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409056027", "createdAt": "2020-04-15T18:42:49Z", "author": {"login": "bogdandrutu"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -72,7 +72,10 @@ $ git commit -m \"Update javadoc for API.\"\n Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n-1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon. If\n+you cannot run the docker daemon, you can disable the docker tests by setting a gradle property of\n+``\"disable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2NTk1Nw==", "bodyText": "I also support disabling it by default, and enabling it by default only for CircleCI.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409065957", "createdAt": "2020-04-15T18:59:12Z", "author": {"login": "carlosalberto"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -72,7 +72,10 @@ $ git commit -m \"Update javadoc for API.\"\n Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n-1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon. If\n+you cannot run the docker daemon, you can disable the docker tests by setting a gradle property of\n+``\"disable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, "originalCommit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MzAzNA==", "bodyText": "no strong opinion. My only concern is that we somehow get it disabled for CI and never notice.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409093034", "createdAt": "2020-04-15T19:48:40Z", "author": {"login": "jkwatson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -72,7 +72,10 @@ $ git commit -m \"Update javadoc for API.\"\n Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n-1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon. If\n+you cannot run the docker daemon, you can disable the docker tests by setting a gradle property of\n+``\"disable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, "originalCommit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MzM0NA==", "bodyText": "Personally, I like to always run them, so I'll probably just add the property to my personal gradle.properties and be fine.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409093344", "createdAt": "2020-04-15T19:49:15Z", "author": {"login": "jkwatson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -72,7 +72,10 @@ $ git commit -m \"Update javadoc for API.\"\n Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n-1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon. If\n+you cannot run the docker daemon, you can disable the docker tests by setting a gradle property of\n+``\"disable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, "originalCommit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEwODA1Nw==", "bodyText": "ok, reversed the logic and the name of the property (so we don't have double negatives everywhere).", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409108057", "createdAt": "2020-04-15T20:16:59Z", "author": {"login": "jkwatson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -72,7 +72,10 @@ $ git commit -m \"Update javadoc for API.\"\n Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n-1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon. If\n+you cannot run the docker daemon, you can disable the docker tests by setting a gradle property of\n+``\"disable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, "originalCommit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4NTk5Ng==", "bodyText": "I think enabling by default but skipping the tests without error if container setup fails, unless explicitly enabled, would be best.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409485996", "createdAt": "2020-04-16T11:33:46Z", "author": {"login": "Oberon00"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -72,7 +72,10 @@ $ git commit -m \"Update javadoc for API.\"\n Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n-1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon. If\n+you cannot run the docker daemon, you can disable the docker tests by setting a gradle property of\n+``\"disable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, "originalCommit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3NzQxMA==", "bodyText": "So your suggestion is to always try, but only fail if the property is set to true?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409677410", "createdAt": "2020-04-16T16:09:34Z", "author": {"login": "jkwatson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -72,7 +72,10 @@ $ git commit -m \"Update javadoc for API.\"\n Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n-1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon. If\n+you cannot run the docker daemon, you can disable the docker tests by setting a gradle property of\n+``\"disable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, "originalCommit": {"oid": "34c185c5065690747d09cc82e726ad8e4309d05c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzEyMDg2OnYy", "diffSide": "RIGHT", "path": "gradle.properties", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDozMTozMVrOGGoQRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjowNjoyMlrOGGslww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDE2NQ==", "bodyText": "I don't think this is needed, correct? Not present means false. Up to you.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409604165", "createdAt": "2020-04-16T14:31:31Z", "author": {"login": "bogdandrutu"}, "path": "gradle.properties", "diffHunk": "@@ -1,3 +1,8 @@\n org.gradle.parallel=true\n org.gradle.workers.max=4\n org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m\n+\n+### Override this property to 'true' to enable the end-to-end tests that use docker.\n+### This can be done via -Penable.docker.tests=true on the command line, or by\n+### setting this property to true in the gradle.properties in your home directory.\n+enable.docker.tests=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY0NDUxNg==", "bodyText": "I think it's nice to have it documented. But maybe add it as commented-out line.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409644516", "createdAt": "2020-04-16T15:23:46Z", "author": {"login": "Oberon00"}, "path": "gradle.properties", "diffHunk": "@@ -1,3 +1,8 @@\n org.gradle.parallel=true\n org.gradle.workers.max=4\n org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m\n+\n+### Override this property to 'true' to enable the end-to-end tests that use docker.\n+### This can be done via -Penable.docker.tests=true on the command line, or by\n+### setting this property to true in the gradle.properties in your home directory.\n+enable.docker.tests=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDE2NQ=="}, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1MDY3MQ==", "bodyText": "I also like having this as documentation; no reason to comment it out, really. having it \"live\", I think, makes it clear that it's a real thing, and will be less likely to just bitrot over time.\nThat being said, I don't actually care too much, either way.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409650671", "createdAt": "2020-04-16T15:31:40Z", "author": {"login": "jkwatson"}, "path": "gradle.properties", "diffHunk": "@@ -1,3 +1,8 @@\n org.gradle.parallel=true\n org.gradle.workers.max=4\n org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m\n+\n+### Override this property to 'true' to enable the end-to-end tests that use docker.\n+### This can be done via -Penable.docker.tests=true on the command line, or by\n+### setting this property to true in the gradle.properties in your home directory.\n+enable.docker.tests=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDE2NQ=="}, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3NTIwMw==", "bodyText": "Fine with having it here.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409675203", "createdAt": "2020-04-16T16:06:22Z", "author": {"login": "bogdandrutu"}, "path": "gradle.properties", "diffHunk": "@@ -1,3 +1,8 @@\n org.gradle.parallel=true\n org.gradle.workers.max=4\n org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m\n+\n+### Override this property to 'true' to enable the end-to-end tests that use docker.\n+### This can be done via -Penable.docker.tests=true on the command line, or by\n+### setting this property to true in the gradle.properties in your home directory.\n+enable.docker.tests=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDE2NQ=="}, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzEyNTUzOnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDozMjozNVrOGGoTbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoxNzozOVrOGGvX9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw==", "bodyText": "s/jaeger/jaegerBackend? (or jaegerContainer?)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409604973", "createdAt": "2020-04-16T14:32:35Z", "author": {"login": "bogdandrutu"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MTcyNg==", "bodyText": "I like jaegerContainer", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409661726", "createdAt": "2020-04-16T15:47:12Z", "author": {"login": "jkwatson"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw=="}, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyMDgyMw==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409720823", "createdAt": "2020-04-16T17:17:39Z", "author": {"login": "jkwatson"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw=="}, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzEzODE0OnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDozNTowNlrOGGobJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoxNzo1N1rOGGvYsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNjk1MA==", "bodyText": "It is confusing to have this in Before, and probably before is not needed since only one test. I would remove Before from this method and explicitly call it in the only test we have. Then the Assume is only in the test method.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409606950", "createdAt": "2020-04-16T14:35:06Z", "author": {"login": "bogdandrutu"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =\n+          new GenericContainer<>(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n+              .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n+              .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+    }\n+  }\n \n   @Before\n   public void setupJaegerExporter() {\n+    Assume.assumeNotNull(jaeger);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyMTAxMA==", "bodyText": "implemented. please take a look", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409721010", "createdAt": "2020-04-16T17:17:57Z", "author": {"login": "jkwatson"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =\n+          new GenericContainer<>(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n+              .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n+              .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+    }\n+  }\n \n   @Before\n   public void setupJaegerExporter() {\n+    Assume.assumeNotNull(jaeger);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNjk1MA=="}, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzUwNDY4OnYy", "diffSide": "RIGHT", "path": "gradle.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1Mzo1NFrOGGsEDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1Mzo1NFrOGGsEDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2NjU3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            enable.docker.tests=false\n          \n          \n            \n            enable.docker.tests=false", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409666574", "createdAt": "2020-04-16T15:53:54Z", "author": {"login": "arminru"}, "path": "gradle.properties", "diffHunk": "@@ -1,3 +1,8 @@\n org.gradle.parallel=true\n org.gradle.workers.max=4\n org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m\n+\n+### Override this property to 'true' to enable the end-to-end tests that use docker.\n+### This can be done via -Penable.docker.tests=true on the command line, or by\n+### setting this property to true in the gradle.properties in your home directory.\n+enable.docker.tests=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzUyNjA3OnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1ODo1N1rOGGsR6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1ODo1N1rOGGsR6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3MDEyMg==", "bodyText": "could be shortened to\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n          \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\")) {", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409670122", "createdAt": "2020-04-16T15:58:57Z", "author": {"login": "arminru"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzUyODQ0OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1OTozNFrOGGsTfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjoyNDo1MFrOGGtWZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3MDUyNQ==", "bodyText": "The property name looks a bit odd to me, I'd actually expect it to be the other way round since the periods usually resemble some kind of hierarchy but that's just a nitpick \ud83d\ude42", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409670525", "createdAt": "2020-04-16T15:59:34Z", "author": {"login": "arminru"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -73,6 +73,10 @@ Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n 1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+The tests that require docker are disabled by default. If you wish to run them,\n+you can enable the docker tests by setting a gradle property of\n+``\"enable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NzY1NA==", "bodyText": "yeah, I just made something up. I don't feel strongly about it.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409687654", "createdAt": "2020-04-16T16:24:50Z", "author": {"login": "jkwatson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -73,6 +73,10 @@ Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n 1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+The tests that require docker are disabled by default. If you wish to run them,\n+you can enable the docker tests by setting a gradle property of\n+``\"enable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3MDUyNQ=="}, "originalCommit": {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzYwOTI2OnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjoxODo1NlrOGGtGwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjoyMzo1N1rOGGtUFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4MzY0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\"))) {\n          \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\")) {\n          \n      \n    \n    \n  \n\nsorry, my bad :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409683649", "createdAt": "2020-04-16T16:18:56Z", "author": {"login": "arminru"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -60,7 +60,7 @@\n \n   static {\n     // make sure that the user has enabled the docker-based tests\n-    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+    if (Boolean.getBoolean(\"enable.docker.tests\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c5935a3d2794d1409714d4048afdff20c548753"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NzA2Mw==", "bodyText": "heh. no worries", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409687063", "createdAt": "2020-04-16T16:23:57Z", "author": {"login": "jkwatson"}, "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -60,7 +60,7 @@\n \n   static {\n     // make sure that the user has enabled the docker-based tests\n-    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+    if (Boolean.getBoolean(\"enable.docker.tests\"))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4MzY0OQ=="}, "originalCommit": {"oid": "8c5935a3d2794d1409714d4048afdff20c548753"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 853, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}