{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NDAyOTUz", "number": 2104, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjozMTozNlrOE7nSmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjozMTozNlrOE7nSmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTQ1MTc4OnYy", "diffSide": "RIGHT", "path": "extensions/trace-propagators/src/test/java/io/opentelemetry/extension/trace/propagation/TraceMultiPropagatorTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNjozMTozNlrOH3W95A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxNzozMToyNFrOH3wEHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMDAyMA==", "bodyText": "this is an odd use. Do we think maybe this is one case where we could throw an exception? An empty multi-propagator is a very strange beast.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2104#discussion_r527810020", "createdAt": "2020-11-20T16:31:36Z", "author": {"login": "jkwatson"}, "path": "extensions/trace-propagators/src/test/java/io/opentelemetry/extension/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -142,7 +132,7 @@ void inject_allFormats() {\n \n   @Test\n   void extract_noPropagators() {\n-    TextMapPropagator prop = TraceMultiPropagator.builder().build();\n+    TextMapPropagator prop = TraceMultiPropagator.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8c6b97aba3432eb69c5742f3501a4fba000c3ac"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg5MjQyMw==", "bodyText": "Agreed. Now that the Builder pattern is not used, we should prevent this from happening.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2104#discussion_r527892423", "createdAt": "2020-11-20T18:24:10Z", "author": {"login": "carlosalberto"}, "path": "extensions/trace-propagators/src/test/java/io/opentelemetry/extension/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -142,7 +132,7 @@ void inject_allFormats() {\n \n   @Test\n   void extract_noPropagators() {\n-    TextMapPropagator prop = TraceMultiPropagator.builder().build();\n+    TextMapPropagator prop = TraceMultiPropagator.create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMDAyMA=="}, "originalCommit": {"oid": "c8c6b97aba3432eb69c5742f3501a4fba000c3ac"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA4NDY1Nw==", "bodyText": "This is a bit tricky. I agree that this usage .create() has no use case. But I think these do\nTraceMultiPropagator.create(available.stream().filter(this::isEnabled).toArray(TextMapPropagator[]::new));\nTraceMultiPropagator.create(available.stream().filter(this::isEnabled).collect(toList()));\nand I generally would not require the result of such an expression to be non-empty. What do you think?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2104#discussion_r528084657", "createdAt": "2020-11-21T06:38:27Z", "author": {"login": "anuraaga"}, "path": "extensions/trace-propagators/src/test/java/io/opentelemetry/extension/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -142,7 +132,7 @@ void inject_allFormats() {\n \n   @Test\n   void extract_noPropagators() {\n-    TextMapPropagator prop = TraceMultiPropagator.builder().build();\n+    TextMapPropagator prop = TraceMultiPropagator.create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMDAyMA=="}, "originalCommit": {"oid": "c8c6b97aba3432eb69c5742f3501a4fba000c3ac"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIyMTIxMg==", "bodyText": "It's definitely not harmful to have an empty multi-propagator. I was pondering if users might accidentally create one with nothing in it and be confused. There is a decent use-case for it, though, as you point out. I'm ok with it; but let's keep an eye out for confused users.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2104#discussion_r528221212", "createdAt": "2020-11-21T17:31:24Z", "author": {"login": "jkwatson"}, "path": "extensions/trace-propagators/src/test/java/io/opentelemetry/extension/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -142,7 +132,7 @@ void inject_allFormats() {\n \n   @Test\n   void extract_noPropagators() {\n-    TextMapPropagator prop = TraceMultiPropagator.builder().build();\n+    TextMapPropagator prop = TraceMultiPropagator.create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMDAyMA=="}, "originalCommit": {"oid": "c8c6b97aba3432eb69c5742f3501a4fba000c3ac"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1749, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}