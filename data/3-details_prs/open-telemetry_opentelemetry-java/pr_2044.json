{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NjA5NDky", "number": 2044, "title": "Allow registering ContextStorage wrappers with code to avoid requirin\u2026", "bodyText": "\u2026g SPI for listening to events.\n@sfriberg reached out in wanting to be able to listen ContextStorage events without overriding the detected storage mechanism, and I think being able to register listeners with code is important in any case. It was the first feature request we got in Armeria after adding the ContextStorage SPI since SPI is too tedious to just do something like pushing MDC.\nFixes #922", "createdAt": "2020-11-09T09:13:36Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2044", "merged": true, "mergeCommit": {"oid": "220d6d83d72bbc8215874284cf0db6ab8a41466c"}, "closed": true, "closedAt": "2020-11-12T20:51:21Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaxFX4gH2gAyNTE3NjA5NDkyOjdiYTBkMTVjMDhkMTU1N2U2NDk1NTMyMGMwODRlMDM3NzE3OWU2M2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbNJUUAFqTUyNzQ1OTUwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ba0d15c08d1557e64955320c084e0377179e63c", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7ba0d15c08d1557e64955320c084e0377179e63c", "committedDate": "2020-11-09T09:10:29Z", "message": "Allow registering ContextStorage wrappers with code to avoid requiring SPI for listening to events."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NDEzNjI1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2044#pullrequestreview-526413625", "createdAt": "2020-11-09T16:10:58Z", "commit": {"oid": "7ba0d15c08d1557e64955320c084e0377179e63c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoxMDo1OFrOHv2GLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoxMDo1OFrOHv2GLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzMTQzNw==", "bodyText": "It probably doesn't matter too much, since this class isn't public, but exposing synchronized methods is generally a bad practice, as it could allow accidental deadlocking if someone synchronizes on this class.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2044#discussion_r519931437", "createdAt": "2020-11-09T16:10:58Z", "author": {"login": "jkwatson"}, "path": "context/src/main/java/io/opentelemetry/context/ContextStorageWrappers.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.context;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Function;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+/**\n+ * Holder of functions to wrap the used {@link ContextStorage}. Separate class from {@link\n+ * LazyStorage} to allow registering wrappers before initializing storage.\n+ */\n+final class ContextStorageWrappers {\n+\n+  private static final Logger log = Logger.getLogger(ContextStorageWrappers.class.getName());\n+\n+  private static boolean storageInitialized;\n+\n+  private static final List<Function<? super ContextStorage, ? extends ContextStorage>> wrappers =\n+      new ArrayList<>();\n+\n+  static synchronized void addWrapper(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba0d15c08d1557e64955320c084e0377179e63c"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81f241b5518a3cb14bbe20b9991fd8ece3d90b2d", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/81f241b5518a3cb14bbe20b9991fd8ece3d90b2d", "committedDate": "2020-11-10T05:28:00Z", "message": "Mutex"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NDU5NTA2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2044#pullrequestreview-527459506", "createdAt": "2020-11-10T17:52:08Z", "commit": {"oid": "81f241b5518a3cb14bbe20b9991fd8ece3d90b2d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3999, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}