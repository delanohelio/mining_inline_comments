{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyODAxNTg4", "number": 2366, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMzo1Mjo0N1rOFHaOBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwOToyMTo1NlrOFP6viA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzEzOTI2OnYy", "diffSide": "RIGHT", "path": "sdk/metrics/src/test/java/io/opentelemetry/sdk/metrics/spi/SdkMeterProviderFactoryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMzo1Mjo0N1rOII4jpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMzo1Mjo0N1rOII4jpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4NjE0OA==", "bodyText": "Think it's good if at least one of the tests has another attribute in it.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2366#discussion_r546186148", "createdAt": "2020-12-19T03:52:47Z", "author": {"login": "anuraaga"}, "path": "sdk/metrics/src/test/java/io/opentelemetry/sdk/metrics/spi/SdkMeterProviderFactoryTest.java", "diffHunk": "@@ -17,4 +20,26 @@\n   void testDefault() {\n     assertThat(GlobalMetricsProvider.get()).isInstanceOf(SdkMeterProvider.class);\n   }\n+\n+  @Test\n+  void builder_fallbackServiceName() {\n+    Resource resourceWithFallbacks =\n+        Resource.create(Attributes.of(ResourceAttributes.SERVICE_NAME, \"unknown_service:java\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18d6c9dbae073d9f1b114a5c7468663b102a8f10"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzEzOTc3OnYy", "diffSide": "RIGHT", "path": "sdk/trace/src/test/java/io/opentelemetry/sdk/trace/SdkTracerProviderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMzo1MzozMlrOII4j4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwNDowMTo0N1rOII4m9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4NjIxMA==", "bodyText": "Do we need this mock?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2366#discussion_r546186210", "createdAt": "2020-12-19T03:53:32Z", "author": {"login": "anuraaga"}, "path": "sdk/trace/src/test/java/io/opentelemetry/sdk/trace/SdkTracerProviderTest.java", "diffHunk": "@@ -42,15 +44,44 @@ void setUp() {\n   }\n \n   @Test\n-  void builder_HappyPath() {\n-    assertThat(\n-            SdkTracerProvider.builder()\n-                .setClock(mock(Clock.class))\n-                .setResource(mock(Resource.class))\n-                .setIdGenerator(mock(IdGenerator.class))\n-                .setTraceConfig(mock(TraceConfig.class))\n-                .build())\n-        .isNotNull();\n+  void builder_fallbackServiceName() {\n+    Resource resource = mock(Resource.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18d6c9dbae073d9f1b114a5c7468663b102a8f10"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4Njk5OA==", "bodyText": "probably not. Can just use Resource.getEmpty(), for sure.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2366#discussion_r546186998", "createdAt": "2020-12-19T04:01:47Z", "author": {"login": "jkwatson"}, "path": "sdk/trace/src/test/java/io/opentelemetry/sdk/trace/SdkTracerProviderTest.java", "diffHunk": "@@ -42,15 +44,44 @@ void setUp() {\n   }\n \n   @Test\n-  void builder_HappyPath() {\n-    assertThat(\n-            SdkTracerProvider.builder()\n-                .setClock(mock(Clock.class))\n-                .setResource(mock(Resource.class))\n-                .setIdGenerator(mock(IdGenerator.class))\n-                .setTraceConfig(mock(TraceConfig.class))\n-                .build())\n-        .isNotNull();\n+  void builder_fallbackServiceName() {\n+    Resource resource = mock(Resource.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4NjIxMA=="}, "originalCommit": {"oid": "18d6c9dbae073d9f1b114a5c7468663b102a8f10"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzQ4ODcxOnYy", "diffSide": "RIGHT", "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/SdkMeterProviderBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxMToxNDozN1rOII7ABQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxOToxNDoyNVrOII91KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIyNjE4MQ==", "bodyText": "This is how I initially proposed the spec PR, but not how I reworked it shortly after and how it got approved \ud83d\ude03\nNow the spec basically says that we should treat the service.name exactly the same as we already treat the telemetry.sdk.name: It's there by default, but if the user set's their own resource explicitly, they need to merge it in manually.\nSee open-telemetry/opentelemetry-specification#1294 (comment) and https://github.com/open-telemetry/opentelemetry-specification/blob/39fa82f0a7e58975782520c304768d63da0c7612/specification/resource/sdk.md (not yet merged).\nIf you think the first version of the PR was better, you should say so on the spec.\n@anuraaga @jkwatson You approved the spec PR after I made this change, but maybe you want to check again?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2366#discussion_r546226181", "createdAt": "2020-12-19T11:14:37Z", "author": {"login": "Oberon00"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/SdkMeterProviderBuilder.java", "diffHunk": "@@ -52,6 +54,9 @@ public SdkMeterProviderBuilder setResource(@Nonnull Resource resource) {\n    * @return An initialized TracerSdkFactory.\n    */\n   public SdkMeterProvider build() {\n-    return new SdkMeterProvider(clock, resource);\n+    Resource resourceWithFallbacks =\n+        Resource.create(\n+            FALLBACK_MANDATORY_ATTRIBUTES.toBuilder().putAll(resource.getAttributes()).build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18d6c9dbae073d9f1b114a5c7468663b102a8f10"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI3MDM5Nw==", "bodyText": "I removed my approval, because I was mostly going on the PR description, which seems to match what I've implemented here. What's now written in the spec is no longer comprehensible to me. :(", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2366#discussion_r546270397", "createdAt": "2020-12-19T18:51:11Z", "author": {"login": "jkwatson"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/SdkMeterProviderBuilder.java", "diffHunk": "@@ -52,6 +54,9 @@ public SdkMeterProviderBuilder setResource(@Nonnull Resource resource) {\n    * @return An initialized TracerSdkFactory.\n    */\n   public SdkMeterProvider build() {\n-    return new SdkMeterProvider(clock, resource);\n+    Resource resourceWithFallbacks =\n+        Resource.create(\n+            FALLBACK_MANDATORY_ATTRIBUTES.toBuilder().putAll(resource.getAttributes()).build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIyNjE4MQ=="}, "originalCommit": {"oid": "18d6c9dbae073d9f1b114a5c7468663b102a8f10"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI3MjU1Mw==", "bodyText": "@jkwatson To really dismiss your approval you have to expand the box at the bottom of the PR and click the dots next to your approval there (or add a request-changes review). Adding a comment-only review does not remove the approval.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2366#discussion_r546272553", "createdAt": "2020-12-19T19:14:25Z", "author": {"login": "Oberon00"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/SdkMeterProviderBuilder.java", "diffHunk": "@@ -52,6 +54,9 @@ public SdkMeterProviderBuilder setResource(@Nonnull Resource resource) {\n    * @return An initialized TracerSdkFactory.\n    */\n   public SdkMeterProvider build() {\n-    return new SdkMeterProvider(clock, resource);\n+    Resource resourceWithFallbacks =\n+        Resource.create(\n+            FALLBACK_MANDATORY_ATTRIBUTES.toBuilder().putAll(resource.getAttributes()).build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIyNjE4MQ=="}, "originalCommit": {"oid": "18d6c9dbae073d9f1b114a5c7468663b102a8f10"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMjM1NDAwOnYy", "diffSide": "RIGHT", "path": "sdk/common/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwOToyMTo1NlrOIVgSWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQxNzowMTo1MFrOIWYJpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQxOTk5NQ==", "bodyText": "I don't think this needs to be separated from DEFAULT. Also, this would be the only public field in this class, the others are private and have getters.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2366#discussion_r559419995", "createdAt": "2021-01-18T09:21:56Z", "author": {"login": "Oberon00"}, "path": "sdk/common/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -52,9 +53,15 @@\n   private static final String ERROR_MESSAGE_INVALID_VALUE =\n       \" should be a ASCII string with a length not exceed \" + MAX_LENGTH + \" characters.\";\n   private static final Resource EMPTY = create(Attributes.empty());\n-\n   private static final Resource TELEMETRY_SDK;\n \n+  /**\n+   * The MANDATORY Resource instance contains the mandatory attributes that must be used if they are\n+   * not provided by the Resource that is given to an SDK signal provider.\n+   */\n+  public static final Resource MANDATORY =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e60588b6313266ac8c39aaf925bd6efc7c0b775b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDMzMTQ1MA==", "bodyText": "I like having it be a separate thing in the code, but agree it should be private, and can be accessed via the default Resource.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2366#discussion_r560331450", "createdAt": "2021-01-19T16:56:51Z", "author": {"login": "jkwatson"}, "path": "sdk/common/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -52,9 +53,15 @@\n   private static final String ERROR_MESSAGE_INVALID_VALUE =\n       \" should be a ASCII string with a length not exceed \" + MAX_LENGTH + \" characters.\";\n   private static final Resource EMPTY = create(Attributes.empty());\n-\n   private static final Resource TELEMETRY_SDK;\n \n+  /**\n+   * The MANDATORY Resource instance contains the mandatory attributes that must be used if they are\n+   * not provided by the Resource that is given to an SDK signal provider.\n+   */\n+  public static final Resource MANDATORY =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQxOTk5NQ=="}, "originalCommit": {"oid": "e60588b6313266ac8c39aaf925bd6efc7c0b775b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDMzNTI2OQ==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2366#discussion_r560335269", "createdAt": "2021-01-19T17:01:50Z", "author": {"login": "jkwatson"}, "path": "sdk/common/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -52,9 +53,15 @@\n   private static final String ERROR_MESSAGE_INVALID_VALUE =\n       \" should be a ASCII string with a length not exceed \" + MAX_LENGTH + \" characters.\";\n   private static final Resource EMPTY = create(Attributes.empty());\n-\n   private static final Resource TELEMETRY_SDK;\n \n+  /**\n+   * The MANDATORY Resource instance contains the mandatory attributes that must be used if they are\n+   * not provided by the Resource that is given to an SDK signal provider.\n+   */\n+  public static final Resource MANDATORY =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQxOTk5NQ=="}, "originalCommit": {"oid": "e60588b6313266ac8c39aaf925bd6efc7c0b775b"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1586, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}