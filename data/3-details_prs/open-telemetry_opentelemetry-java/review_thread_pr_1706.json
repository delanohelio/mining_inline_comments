{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMzQ2Njcw", "number": 1706, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwODo1NDoyOVrOEnukLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODo0OTozMlrOEn-4dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDkyODQ0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwODo1NDoyOVrOHYe7Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo0MDoxMlrOHZI_tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzNDUzNQ==", "bodyText": "I don't think we use @Nonnull, we default to non-null. We're missing package-info.java to set ParametersNonNullByDefault but that's a better fix I think", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495434535", "createdAt": "2020-09-26T08:54:29Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -79,7 +83,7 @@ public static Attributes empty() {\n   }\n \n   /** Returns a {@link Attributes} instance with a single key-value pair. */\n-  public static <T> Attributes of(AttributeKey<T> key, T value) {\n+  public static <T> Attributes of(AttributeKey<T> key, @Nonnull T value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NTEyNg==", "bodyText": "I agree. As I was writing this, I was also wondering why we didn't put the same annotation on the key. :)\nHaving it set for the package as a whole is much better solution. I'll make it so.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495475126", "createdAt": "2020-09-26T16:56:42Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -79,7 +83,7 @@ public static Attributes empty() {\n   }\n \n   /** Returns a {@link Attributes} instance with a single key-value pair. */\n-  public static <T> Attributes of(AttributeKey<T> key, T value) {\n+  public static <T> Attributes of(AttributeKey<T> key, @Nonnull T value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzNDUzNQ=="}, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMzgyOQ==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496123829", "createdAt": "2020-09-28T17:40:12Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -79,7 +83,7 @@ public static Attributes empty() {\n   }\n \n   /** Returns a {@link Attributes} instance with a single key-value pair. */\n-  public static <T> Attributes of(AttributeKey<T> key, T value) {\n+  public static <T> Attributes of(AttributeKey<T> key, @Nonnull T value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzNDUzNQ=="}, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjExMjIwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxMzo1MzowOVrOHYnhzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxMzo1MzowOVrOHYnhzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NTUwMA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495575500", "createdAt": "2020-09-27T13:53:09Z", "author": {"login": "iNikem"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -164,13 +172,7 @@ public static Builder newBuilder() {\n   /** Returns a new {@link Builder} instance from ReadableAttributes. */\n   public static Builder newBuilder(ReadableAttributes attributes) {\n     final Builder builder = new Builder();\n-    attributes.forEach(\n-        new AttributeConsumer() {\n-          @Override\n-          public <T> void consume(AttributeKey<T> key, T value) {\n-            builder.setAttribute(key, value);\n-          }\n-        });\n+    attributes.forEach(builder::setAttribute);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzU5NzY5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODo0ODoyM1rOHY0LhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODo0ODoyM1rOHY0LhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4Mjc4OQ==", "bodyText": "Nit: for simmetry with the other checks\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (value == null || key == null || key.getKey() == null || key.getKey().length() == 0) {\n          \n          \n            \n                  if (key == null || key.getKey() == null || key.getKey().length() == 0 || value == null ) {", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495782789", "createdAt": "2020-09-28T08:48:23Z", "author": {"login": "thisthat"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -199,24 +201,7 @@ public Attributes build() {\n \n     /** Sets a {@link AttributeKey} with associated value into this. */\n     public <T> Builder setAttribute(AttributeKey<T> key, T value) {\n-      if (key == null || key.getKey() == null || key.getKey().length() == 0) {\n-        return this;\n-      }\n-      if (value == null) {\n-        // Remove key/value pairs\n-        Iterator<Object> itr = data.iterator();\n-        while (itr.hasNext()) {\n-          AttributeKey k = (AttributeKey) itr.next();\n-          if (key.equals(k)) {\n-            // delete key and value\n-            itr.remove();\n-            itr.next();\n-            itr.remove();\n-          } else {\n-            // skip the value part\n-            itr.next();\n-          }\n-        }\n+      if (value == null || key == null || key.getKey() == null || key.getKey().length() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzYwMTgwOnYy", "diffSide": "LEFT", "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODo0OTozMlrOHY0N-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOTozNTowNFrOHZMyAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA==", "bodyText": "should we check that we implement a no-op behavior instead of leaving it undefined?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495783418", "createdAt": "2020-09-28T08:49:32Z", "author": {"login": "thisthat"}, "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -253,26 +253,4 @@ void toBuilder() {\n     // Original not mutated.\n     assertThat(partial).isEqualTo(Attributes.newBuilder().setAttribute(\"cat\", \"meow\").build());\n   }\n-\n-  @Test\n-  void deleteByNull() {\n-    Attributes.Builder attributes = Attributes.newBuilder();\n-    attributes.setAttribute(stringKey(\"attrValue\"), \"attrValue\");\n-    attributes.setAttribute(\"string\", \"string\");\n-    attributes.setAttribute(\"long\", 10);\n-    attributes.setAttribute(\"double\", 1.0);\n-    attributes.setAttribute(\"bool\", true);\n-    attributes.setAttribute(\"arrayString\", new String[] {\"string\"});\n-    attributes.setAttribute(\"arrayLong\", new Long[] {10L});\n-    attributes.setAttribute(\"arrayDouble\", new Double[] {1.0});\n-    attributes.setAttribute(\"arrayBool\", new Boolean[] {true});\n-    assertThat(attributes.build().size()).isEqualTo(9);\n-    attributes.setAttribute(stringKey(\"attrValue\"), null);\n-    attributes.setAttribute(\"string\", (String) null);\n-    attributes.setAttribute(\"arrayString\", (String[]) null);\n-    attributes.setAttribute(\"arrayLong\", (Long[]) null);\n-    attributes.setAttribute(\"arrayDouble\", (Double[]) null);\n-    attributes.setAttribute(\"arrayBool\", (Boolean[]) null);\n-    assertThat(attributes.build().size()).isEqualTo(3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAxMjQwOA==", "bodyText": "I went back and forth on this. I'm not really sure which we should do, since we're explicitly saying that behavior is undefined. :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496012408", "createdAt": "2020-09-28T15:02:18Z", "author": {"login": "jkwatson"}, "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -253,26 +253,4 @@ void toBuilder() {\n     // Original not mutated.\n     assertThat(partial).isEqualTo(Attributes.newBuilder().setAttribute(\"cat\", \"meow\").build());\n   }\n-\n-  @Test\n-  void deleteByNull() {\n-    Attributes.Builder attributes = Attributes.newBuilder();\n-    attributes.setAttribute(stringKey(\"attrValue\"), \"attrValue\");\n-    attributes.setAttribute(\"string\", \"string\");\n-    attributes.setAttribute(\"long\", 10);\n-    attributes.setAttribute(\"double\", 1.0);\n-    attributes.setAttribute(\"bool\", true);\n-    attributes.setAttribute(\"arrayString\", new String[] {\"string\"});\n-    attributes.setAttribute(\"arrayLong\", new Long[] {10L});\n-    attributes.setAttribute(\"arrayDouble\", new Double[] {1.0});\n-    attributes.setAttribute(\"arrayBool\", new Boolean[] {true});\n-    assertThat(attributes.build().size()).isEqualTo(9);\n-    attributes.setAttribute(stringKey(\"attrValue\"), null);\n-    attributes.setAttribute(\"string\", (String) null);\n-    attributes.setAttribute(\"arrayString\", (String[]) null);\n-    attributes.setAttribute(\"arrayLong\", (Long[]) null);\n-    attributes.setAttribute(\"arrayDouble\", (Double[]) null);\n-    attributes.setAttribute(\"arrayBool\", (Boolean[]) null);\n-    assertThat(attributes.build().size()).isEqualTo(3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEwNDQwMw==", "bodyText": "If undefined, don't test for it. Some may consider tests as a kind of documentation.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496104403", "createdAt": "2020-09-28T17:05:25Z", "author": {"login": "iNikem"}, "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -253,26 +253,4 @@ void toBuilder() {\n     // Original not mutated.\n     assertThat(partial).isEqualTo(Attributes.newBuilder().setAttribute(\"cat\", \"meow\").build());\n   }\n-\n-  @Test\n-  void deleteByNull() {\n-    Attributes.Builder attributes = Attributes.newBuilder();\n-    attributes.setAttribute(stringKey(\"attrValue\"), \"attrValue\");\n-    attributes.setAttribute(\"string\", \"string\");\n-    attributes.setAttribute(\"long\", 10);\n-    attributes.setAttribute(\"double\", 1.0);\n-    attributes.setAttribute(\"bool\", true);\n-    attributes.setAttribute(\"arrayString\", new String[] {\"string\"});\n-    attributes.setAttribute(\"arrayLong\", new Long[] {10L});\n-    attributes.setAttribute(\"arrayDouble\", new Double[] {1.0});\n-    attributes.setAttribute(\"arrayBool\", new Boolean[] {true});\n-    assertThat(attributes.build().size()).isEqualTo(9);\n-    attributes.setAttribute(stringKey(\"attrValue\"), null);\n-    attributes.setAttribute(\"string\", (String) null);\n-    attributes.setAttribute(\"arrayString\", (String[]) null);\n-    attributes.setAttribute(\"arrayLong\", (Long[]) null);\n-    attributes.setAttribute(\"arrayDouble\", (Double[]) null);\n-    attributes.setAttribute(\"arrayBool\", (Boolean[]) null);\n-    assertThat(attributes.build().size()).isEqualTo(3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMjI2MA==", "bodyText": "that was my thinking as well.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496112260", "createdAt": "2020-09-28T17:19:44Z", "author": {"login": "jkwatson"}, "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -253,26 +253,4 @@ void toBuilder() {\n     // Original not mutated.\n     assertThat(partial).isEqualTo(Attributes.newBuilder().setAttribute(\"cat\", \"meow\").build());\n   }\n-\n-  @Test\n-  void deleteByNull() {\n-    Attributes.Builder attributes = Attributes.newBuilder();\n-    attributes.setAttribute(stringKey(\"attrValue\"), \"attrValue\");\n-    attributes.setAttribute(\"string\", \"string\");\n-    attributes.setAttribute(\"long\", 10);\n-    attributes.setAttribute(\"double\", 1.0);\n-    attributes.setAttribute(\"bool\", true);\n-    attributes.setAttribute(\"arrayString\", new String[] {\"string\"});\n-    attributes.setAttribute(\"arrayLong\", new Long[] {10L});\n-    attributes.setAttribute(\"arrayDouble\", new Double[] {1.0});\n-    attributes.setAttribute(\"arrayBool\", new Boolean[] {true});\n-    assertThat(attributes.build().size()).isEqualTo(9);\n-    attributes.setAttribute(stringKey(\"attrValue\"), null);\n-    attributes.setAttribute(\"string\", (String) null);\n-    attributes.setAttribute(\"arrayString\", (String[]) null);\n-    attributes.setAttribute(\"arrayLong\", (Long[]) null);\n-    attributes.setAttribute(\"arrayDouble\", (Double[]) null);\n-    attributes.setAttribute(\"arrayBool\", (Boolean[]) null);\n-    assertThat(attributes.build().size()).isEqualTo(3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExNjk4Mg==", "bodyText": "I would argue that the specification says \"undefined behavior\", i.e. each implementation of the spec can do whatever they prefer, but the OTel SDK has a well-defined behavior. IMHO we should verify that we implement correctly the no-op behavior in every point that touches null attributes.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496116982", "createdAt": "2020-09-28T17:27:56Z", "author": {"login": "thisthat"}, "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -253,26 +253,4 @@ void toBuilder() {\n     // Original not mutated.\n     assertThat(partial).isEqualTo(Attributes.newBuilder().setAttribute(\"cat\", \"meow\").build());\n   }\n-\n-  @Test\n-  void deleteByNull() {\n-    Attributes.Builder attributes = Attributes.newBuilder();\n-    attributes.setAttribute(stringKey(\"attrValue\"), \"attrValue\");\n-    attributes.setAttribute(\"string\", \"string\");\n-    attributes.setAttribute(\"long\", 10);\n-    attributes.setAttribute(\"double\", 1.0);\n-    attributes.setAttribute(\"bool\", true);\n-    attributes.setAttribute(\"arrayString\", new String[] {\"string\"});\n-    attributes.setAttribute(\"arrayLong\", new Long[] {10L});\n-    attributes.setAttribute(\"arrayDouble\", new Double[] {1.0});\n-    attributes.setAttribute(\"arrayBool\", new Boolean[] {true});\n-    assertThat(attributes.build().size()).isEqualTo(9);\n-    attributes.setAttribute(stringKey(\"attrValue\"), null);\n-    attributes.setAttribute(\"string\", (String) null);\n-    attributes.setAttribute(\"arrayString\", (String[]) null);\n-    attributes.setAttribute(\"arrayLong\", (Long[]) null);\n-    attributes.setAttribute(\"arrayDouble\", (Double[]) null);\n-    attributes.setAttribute(\"arrayBool\", (Boolean[]) null);\n-    assertThat(attributes.build().size()).isEqualTo(3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NDMzOA==", "bodyText": "I've added a test that validates the current behavior, with a clear message that it's not required behavior and would be fine to be changed.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496144338", "createdAt": "2020-09-28T18:16:45Z", "author": {"login": "jkwatson"}, "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -253,26 +253,4 @@ void toBuilder() {\n     // Original not mutated.\n     assertThat(partial).isEqualTo(Attributes.newBuilder().setAttribute(\"cat\", \"meow\").build());\n   }\n-\n-  @Test\n-  void deleteByNull() {\n-    Attributes.Builder attributes = Attributes.newBuilder();\n-    attributes.setAttribute(stringKey(\"attrValue\"), \"attrValue\");\n-    attributes.setAttribute(\"string\", \"string\");\n-    attributes.setAttribute(\"long\", 10);\n-    attributes.setAttribute(\"double\", 1.0);\n-    attributes.setAttribute(\"bool\", true);\n-    attributes.setAttribute(\"arrayString\", new String[] {\"string\"});\n-    attributes.setAttribute(\"arrayLong\", new Long[] {10L});\n-    attributes.setAttribute(\"arrayDouble\", new Double[] {1.0});\n-    attributes.setAttribute(\"arrayBool\", new Boolean[] {true});\n-    assertThat(attributes.build().size()).isEqualTo(9);\n-    attributes.setAttribute(stringKey(\"attrValue\"), null);\n-    attributes.setAttribute(\"string\", (String) null);\n-    attributes.setAttribute(\"arrayString\", (String[]) null);\n-    attributes.setAttribute(\"arrayLong\", (Long[]) null);\n-    attributes.setAttribute(\"arrayDouble\", (Double[]) null);\n-    attributes.setAttribute(\"arrayBool\", (Boolean[]) null);\n-    assertThat(attributes.build().size()).isEqualTo(3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE4NTg1Ng==", "bodyText": "@thisthat As a C++ dev, I'd say that would be \"implementation-defined\" behavior, not undefined behavior \ud83d\ude00", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496185856", "createdAt": "2020-09-28T19:35:04Z", "author": {"login": "Oberon00"}, "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -253,26 +253,4 @@ void toBuilder() {\n     // Original not mutated.\n     assertThat(partial).isEqualTo(Attributes.newBuilder().setAttribute(\"cat\", \"meow\").build());\n   }\n-\n-  @Test\n-  void deleteByNull() {\n-    Attributes.Builder attributes = Attributes.newBuilder();\n-    attributes.setAttribute(stringKey(\"attrValue\"), \"attrValue\");\n-    attributes.setAttribute(\"string\", \"string\");\n-    attributes.setAttribute(\"long\", 10);\n-    attributes.setAttribute(\"double\", 1.0);\n-    attributes.setAttribute(\"bool\", true);\n-    attributes.setAttribute(\"arrayString\", new String[] {\"string\"});\n-    attributes.setAttribute(\"arrayLong\", new Long[] {10L});\n-    attributes.setAttribute(\"arrayDouble\", new Double[] {1.0});\n-    attributes.setAttribute(\"arrayBool\", new Boolean[] {true});\n-    assertThat(attributes.build().size()).isEqualTo(9);\n-    attributes.setAttribute(stringKey(\"attrValue\"), null);\n-    attributes.setAttribute(\"string\", (String) null);\n-    attributes.setAttribute(\"arrayString\", (String[]) null);\n-    attributes.setAttribute(\"arrayLong\", (Long[]) null);\n-    attributes.setAttribute(\"arrayDouble\", (Double[]) null);\n-    attributes.setAttribute(\"arrayBool\", (Boolean[]) null);\n-    assertThat(attributes.build().size()).isEqualTo(3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, "originalCommit": {"oid": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1227, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}