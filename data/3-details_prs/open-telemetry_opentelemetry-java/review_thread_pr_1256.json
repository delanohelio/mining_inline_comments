{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNjE3NTI2", "number": 1256, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozOTowOVrOD-IzQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoxMTo0MVrOD_vv7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDgyNDk2OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozOTowOVrOGYDgGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMTo0MjozNFrOGYHkTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NjM3OQ==", "bodyText": "I would expect custom Samplers to use something like:\nSamplers.alwaysOn/Off().shouldSample(...)\n\nso attributes can be set", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r427876379", "createdAt": "2020-05-20T09:39:09Z", "author": {"login": "thisthat"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -51,6 +51,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {\n+    return isSampled ? ALWAYS_ON_DECISION : ALWAYS_OFF_DECISION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a5d9485ea4f5f6bb39b4b237582f8c5a870c5b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NDY1NQ==", "bodyText": "I don't understand. Which attributes could be set?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r427894655", "createdAt": "2020-05-20T10:09:16Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -51,6 +51,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {\n+    return isSampled ? ALWAYS_ON_DECISION : ALWAYS_OFF_DECISION;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NjM3OQ=="}, "originalCommit": {"oid": "e0a5d9485ea4f5f6bb39b4b237582f8c5a870c5b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxMDI3NA==", "bodyText": "That depends on the implementation. For example, jaeger adds their rate limiter to the attributes", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r427910274", "createdAt": "2020-05-20T10:38:09Z", "author": {"login": "thisthat"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -51,6 +51,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {\n+    return isSampled ? ALWAYS_ON_DECISION : ALWAYS_OFF_DECISION;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NjM3OQ=="}, "originalCommit": {"oid": "e0a5d9485ea4f5f6bb39b4b237582f8c5a870c5b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk0MTI2Mg==", "bodyText": "Of course, for samplers that needs to add attribute, this function cannot be used.\nBut at least for the negative decision, attributes will AFAIK be ignored, so at least for this case it could be used by any sampler.\nProbably a more full-featured version of this PR could also add singleAttributeDecision(boolean, key, value) and attributedDecision(boolean, Map). But for the sampler I'm thinking of I would only need emptyDecision.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r427941262", "createdAt": "2020-05-20T11:38:59Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -51,6 +51,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {\n+    return isSampled ? ALWAYS_ON_DECISION : ALWAYS_OFF_DECISION;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NjM3OQ=="}, "originalCommit": {"oid": "e0a5d9485ea4f5f6bb39b4b237582f8c5a870c5b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk0MjU0Nw==", "bodyText": "About your suggestion with Samplers.alwaysOn/Off().shouldSample(...):\nFirst, it is very verbose and IMHO also not as clear. Second, if you need to do something like someBoolean ? Samplers.alwaysOn... : Samplers.alwaysOff... it becomes even twice as verbose.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r427942547", "createdAt": "2020-05-20T11:41:40Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -51,6 +51,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {\n+    return isSampled ? ALWAYS_ON_DECISION : ALWAYS_OFF_DECISION;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NjM3OQ=="}, "originalCommit": {"oid": "e0a5d9485ea4f5f6bb39b4b237582f8c5a870c5b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk0Mjk5MQ==", "bodyText": "And I still don't understand how attributes could be added using Samplers.alwaysOn/Off().shouldSample(...)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r427942991", "createdAt": "2020-05-20T11:42:34Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -51,6 +51,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {\n+    return isSampled ? ALWAYS_ON_DECISION : ALWAYS_OFF_DECISION;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NjM3OQ=="}, "originalCommit": {"oid": "e0a5d9485ea4f5f6bb39b4b237582f8c5a870c5b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTEyMDcxOnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMjowNjo1MlrOGaMjkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToxMjowM1rOGai8SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEyMTg3Mg==", "bodyText": "What about having just a decision(bool, map) and you would call that with a emptyMap?\npublic static final Decision decision(boolean isSampled, Map<String, AttributeValue> attributes) {\n  Objects.requireNotNull(attributes, \"attributes\");\n  if (attributes.isEmpty()) {\n    return isSampled ? EMPTY_SAMPLED_DECISION : EMPTY_NOT_SAMPLED_DECISION;\n  }\n  return DecisionImpl.create(isSampled, attributes);\n}", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430121872", "createdAt": "2020-05-26T02:06:52Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +63,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "920064305c5eaadfd3b527bf298088525a93456a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzOTI0Mg==", "bodyText": "Ah, the DecisionImpl was not there when I created the PR I guess \ud83d\ude03  That totally makes sense.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430239242", "createdAt": "2020-05-26T08:23:31Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +63,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEyMTg3Mg=="}, "originalCommit": {"oid": "920064305c5eaadfd3b527bf298088525a93456a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI3NTIxMg==", "bodyText": "I added Samplers.decision but decided to keep emptyDecision, since using the explicit empty map is quite a mouthful (CheckStyle even requires a parameter comment for the sampled boolean) and it is needed in the implementation anyway.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430275212", "createdAt": "2020-05-26T09:22:57Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +63,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEyMTg3Mg=="}, "originalCommit": {"oid": "920064305c5eaadfd3b527bf298088525a93456a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4MDI0NQ==", "bodyText": "What about calling this decision as well?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430480245", "createdAt": "2020-05-26T15:00:32Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +63,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEyMTg3Mg=="}, "originalCommit": {"oid": "920064305c5eaadfd3b527bf298088525a93456a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4ODY0OA==", "bodyText": "I'm fine with either way. Would you prefer that?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430488648", "createdAt": "2020-05-26T15:12:03Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +63,20 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   * value of the parameter {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @return A {@link Decision} with empty attributes and {@link Decision#isSampled()} returning the\n+   *     value of the parameter {@code isSampled}.\n+   */\n+  public static final Decision emptyDecision(boolean isSampled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEyMTg3Mg=="}, "originalCommit": {"oid": "920064305c5eaadfd3b527bf298088525a93456a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTY5MTk5OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoxMTo0MVrOGalw1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODowMjo0NFrOGbW9rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA==", "bodyText": "Just having this note in here, rather than copying the attributes, feels too weak. If having the map be non-modified is truly a hard requirement, the API should protect itself, rather than relying on implementors to read this javadoc.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430534868", "createdAt": "2020-05-26T16:11:41Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNzM2OA==", "bodyText": "First, I think this is an SDK-only API that will only be used by sampler implementations. An \"advanced\" API so to speak. If I knew that this function was uselessly copying my map, I would rather write my own replacement for efficiency.\nSecond, in the currently only usage of the Sampler the attributes are actually copied into the span right-away, so I think ignoring this note won't actually do any harm.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430537368", "createdAt": "2020-05-26T16:15:18Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzODY4Nw==", "bodyText": "Then the word \"must\" here seems overly strong, and possibly misleading. Can you update the javadoc to reflect the reality of the situation?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430538687", "createdAt": "2020-05-26T16:17:16Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0MTAwMw==", "bodyText": "Hmm, I wouldn't place too much value on the second point, as the usage of the sampler may change in the future. So anyone who reads the javadoc certainly MUST NOT modify this later.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430541003", "createdAt": "2020-05-26T16:20:39Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1OTMzMg==", "bodyText": "All I'm saying is: If this is an important constraint, then we should either a) enforce it via code or b) clearly explain what the ramifications of violating it are, and not just mention it offhand in attribute documentation.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430559332", "createdAt": "2020-05-26T16:46:04Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU2ODk5OQ==", "bodyText": "Unfortunately I think a) is not possible without losing efficiency. And I think with b) we would over-constrain ourselves regarding future changes.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430568999", "createdAt": "2020-05-26T17:01:50Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU3Mjk3Mw==", "bodyText": "How about adding a line to the javadoc, not in the attributes section like this:\nYou should not modify the contents of the attributes after passing them to this function. If you modify the contents of the attributes after passing them to this function, behavior is not well defined.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430572973", "createdAt": "2020-05-26T17:08:45Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNzEzMA==", "bodyText": "a) is not possible without losing efficiency.\n\nConfused about this, you should cache the result if performance is important, otherwise it is good to have your own implementation of the Decision where you ensure the immutable part differently.\nHaving an API that relies on these kind of comments is not safe and we cannot guarantee correctness (we can NLP or other exceptions if the user changes the map while we are reading it).", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430617130", "createdAt": "2020-05-26T18:22:53Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYyNTU4NQ==", "bodyText": "you should cache the result if performance is important\n\nGood point actually. I think you convinced me that it is better to copy the attributes after all. I will add this to Decision.create.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r430625585", "createdAt": "2020-05-26T18:37:19Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwODM1NA==", "bodyText": "Waiting for this :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r431208354", "createdAt": "2020-05-27T15:00:39Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM0MDk3Mg==", "bodyText": "Done! I used ImmutableMap.copyOf and also fixed the javadoc.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1256#discussion_r431340972", "createdAt": "2020-05-27T18:02:44Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -63,6 +64,45 @@\n   // No instance of this class.\n   private Samplers() {}\n \n+  /**\n+   * Returns a {@link Decision} with the given {@code attributes} and {@link Decision#isSampled()}\n+   * returning {@code isSampled}.\n+   *\n+   * <p>This is meant for use by custom {@link Sampler} implementations.\n+   *\n+   * <p>Using {@link #emptyDecision(boolean)} instead of this method is slightly faster and shorter\n+   * if you don't need attributes.\n+   *\n+   * @param isSampled The value to return from {@link Decision#isSampled()}.\n+   * @param attributes The attributes to return from {@link Decision#getAttributes()}. A different\n+   *     object instance with the same elements may be returned. The map must not be modified after\n+   *     being passed to this function. Use {@link Collections#emptyMap()} for an empty decision.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNDg2OA=="}, "originalCommit": {"oid": "62173ad8cbba5b1c1f5cb4280104a0d914d67b60"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 707, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}