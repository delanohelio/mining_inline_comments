{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDk5NjE2", "number": 1461, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo0MToyNlrOER-T7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMjowMjo0M1rOESAe7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjgyMTU3OnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo0MToyNlrOG2-giQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjoyODo0OFrOG2_W3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMDQyNQ==", "bodyText": "I would not create the channel here. I would set the default endpoint in the ctor of the builder. Then in build() will check if the channel was set externally otherwise would create a new channel from \"endpoint\".\nIt feels to my more natural.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460300425", "createdAt": "2020-07-24T21:41:26Z", "author": {"login": "bogdandrutu"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -192,6 +193,19 @@ public Builder setChannel(ManagedChannel channel) {\n       return this;\n     }\n \n+    /**\n+     * Sets the jaeger endpoint. This will use the endpoint to assign a {@link ManagedChannel}\n+     * instance to this builder.\n+     *\n+     * @param endpoint The Jaeger endpoint URL, ex. \"jaegerhost:14250\".\n+     * @return this.\n+     * @since 0.7.0\n+     */\n+    public Builder setEndpoint(String endpoint) {\n+      setChannel(createChannel(endpoint));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca413fe090fb348a8eda08bbb484d9b739755a3b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNDMzMg==", "bodyText": "Makes sense, done", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460314332", "createdAt": "2020-07-24T22:28:48Z", "author": {"login": "trask"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -192,6 +193,19 @@ public Builder setChannel(ManagedChannel channel) {\n       return this;\n     }\n \n+    /**\n+     * Sets the jaeger endpoint. This will use the endpoint to assign a {@link ManagedChannel}\n+     * instance to this builder.\n+     *\n+     * @param endpoint The Jaeger endpoint URL, ex. \"jaegerhost:14250\".\n+     * @return this.\n+     * @since 0.7.0\n+     */\n+    public Builder setEndpoint(String endpoint) {\n+      setChannel(createChannel(endpoint));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMDQyNQ=="}, "originalCommit": {"oid": "ca413fe090fb348a8eda08bbb484d9b739755a3b"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzE3NzAxOnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMjowMjowMFrOG3BlHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo1NzowMVrOG3CeuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDc1MQ==", "bodyText": "Does it make sense to validate this point in build?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460350751", "createdAt": "2020-07-25T02:02:00Z", "author": {"login": "anuraaga"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -182,7 +184,10 @@ public Builder setServiceName(String serviceName) {\n     }\n \n     /**\n-     * Sets the managed chanel to use when communicating with the backend. Required.\n+     * Sets the managed chanel to use when communicating with the backend.\n+     *\n+     * <p>Should use only one of {@link #setChannel(ManagedChannel)} or {@link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c3f2c6a910a54550d8eed38275f107af0273e95"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NDMyOQ==", "bodyText": "I updated this to match the OTLP exporter builders behavior and javadoc", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460364329", "createdAt": "2020-07-25T04:42:24Z", "author": {"login": "trask"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -182,7 +184,10 @@ public Builder setServiceName(String serviceName) {\n     }\n \n     /**\n-     * Sets the managed chanel to use when communicating with the backend. Required.\n+     * Sets the managed chanel to use when communicating with the backend.\n+     *\n+     * <p>Should use only one of {@link #setChannel(ManagedChannel)} or {@link", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDc1MQ=="}, "originalCommit": {"oid": "4c3f2c6a910a54550d8eed38275f107af0273e95"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTQ5Ng==", "bodyText": "changed it again, no longer quite matches OTLP exporter behavior/javadoc, but i think a bit better (because of the default on endpoint, it's easier to check if channel was set, and if not fall back to endpoint). i will update my OTLP exporter PR to match", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460365496", "createdAt": "2020-07-25T04:57:01Z", "author": {"login": "trask"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -182,7 +184,10 @@ public Builder setServiceName(String serviceName) {\n     }\n \n     /**\n-     * Sets the managed chanel to use when communicating with the backend. Required.\n+     * Sets the managed chanel to use when communicating with the backend.\n+     *\n+     * <p>Should use only one of {@link #setChannel(ManagedChannel)} or {@link", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDc1MQ=="}, "originalCommit": {"oid": "4c3f2c6a910a54550d8eed38275f107af0273e95"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzE3NzQzOnYy", "diffSide": "RIGHT", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMjowMjo0M1rOG3BlWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo1NDoyOFrOG3Cd7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDgxMA==", "bodyText": "Think we should validate that endpoint is set to provide a better error message, guessing otherwise it's an NPE.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460350810", "createdAt": "2020-07-25T02:02:43Z", "author": {"login": "anuraaga"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -223,27 +251,12 @@ public static Builder fromEnv() {\n      * @return a new exporter's instance.\n      */\n     public JaegerGrpcSpanExporter build() {\n+      if (channel == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c3f2c6a910a54550d8eed38275f107af0273e95"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTI5NA==", "bodyText": "oh, i just realized, endpoint has a default, so no need to validate here i think?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460365294", "createdAt": "2020-07-25T04:54:28Z", "author": {"login": "trask"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -223,27 +251,12 @@ public static Builder fromEnv() {\n      * @return a new exporter's instance.\n      */\n     public JaegerGrpcSpanExporter build() {\n+      if (channel == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDgxMA=="}, "originalCommit": {"oid": "4c3f2c6a910a54550d8eed38275f107af0273e95"}, "originalPosition": 113}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1543, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}