{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMzQyOTA1", "number": 1781, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzoyODoxMlrOEsgXHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoxODoxOFrOEst0FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTAzMDA1OnYy", "diffSide": "RIGHT", "path": ".github/workflows/patch-release-build.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzoyODoxMlrOHfyL7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzoyODoxMlrOHfyL7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDE1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        enable.docker.tests=trued\n          \n          \n            \n                        enable.docker.tests=true", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503090157", "createdAt": "2020-10-12T07:28:12Z", "author": {"login": "iNikem"}, "path": ".github/workflows/patch-release-build.yml", "diffHunk": "@@ -0,0 +1,99 @@\n+name: Patch Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.1, 1.2.2\n+        required: true\n+      commits:\n+        description: Comma separated list of commit shas to cherrypick\n+        required: true\n+\n+jobs:\n+  prepare-release-branch:\n+    runs-on: ubuntu-latest\n+    outputs:\n+      release-branch-name: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+    steps:\n+      - id: parse-release-branch\n+        name: Parse release branch name\n+        run: |\n+          # Sets the release-branch-name output to the version number with the last non-period element replaced with an 'x' and preprended with v.\n+          echo \"::set-output name=release-branch-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.x/')\"\n+          # Sets the release-tag-name output to the version number with the last non-period element replace with a '0' and prepended with v\n+          echo \"::set-output name=release-tag-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.0/')\"\n+      - id: checkout-release-branch\n+        name: Check out release branch\n+        continue-on-error: true\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+      - id: checkout-release-tag\n+        name: Check out release tag\n+        if: ${{ steps.checkout-release-branch.outcome == 'failure' }}\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-tag-name }}\n+      - name: Create release branch\n+        if: ${{ steps.checkout-release-tag.outcome == 'success' }}\n+        run: |\n+          git checkout -b ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+          git push --set-upstream origin ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+  build:\n+    runs-on: ubuntu-latest\n+    needs: prepare-release-branch\n+    steps:\n+      - name: Checkout release branch\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ needs.prepare-release-branch.outputs.release-branch-name }}\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - name: Setup git name\n+        run: |\n+          git config user.name github-actions\n+          git config user.email github-actions@github.com\n+      - name: Cherrypicks\n+        run: |\n+          git fetch origin master\n+          echo ${{ github.event.inputs.commits }} | sed -n 1'p' | tr ',' '\\n' | while read word; do\n+              # Trim whitespaces and cherrypick\n+              echo $word | sed 's/ *$//g' | sed 's/^ *//g' | git cherry-pick --stdin\n+          done\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=true\n+      - name: Publish artifacts\n+        uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=trued", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTAzMTEyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/patch-release-build.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzoyODoyOVrOHfyMjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzoyODoyOVrOHfyMjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDMxOQ==", "bodyText": "Isn't this set by GHA?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503090319", "createdAt": "2020-10-12T07:28:29Z", "author": {"login": "iNikem"}, "path": ".github/workflows/patch-release-build.yml", "diffHunk": "@@ -0,0 +1,99 @@\n+name: Patch Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.1, 1.2.2\n+        required: true\n+      commits:\n+        description: Comma separated list of commit shas to cherrypick\n+        required: true\n+\n+jobs:\n+  prepare-release-branch:\n+    runs-on: ubuntu-latest\n+    outputs:\n+      release-branch-name: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+    steps:\n+      - id: parse-release-branch\n+        name: Parse release branch name\n+        run: |\n+          # Sets the release-branch-name output to the version number with the last non-period element replaced with an 'x' and preprended with v.\n+          echo \"::set-output name=release-branch-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.x/')\"\n+          # Sets the release-tag-name output to the version number with the last non-period element replace with a '0' and prepended with v\n+          echo \"::set-output name=release-tag-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.0/')\"\n+      - id: checkout-release-branch\n+        name: Check out release branch\n+        continue-on-error: true\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+      - id: checkout-release-tag\n+        name: Check out release tag\n+        if: ${{ steps.checkout-release-branch.outcome == 'failure' }}\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-tag-name }}\n+      - name: Create release branch\n+        if: ${{ steps.checkout-release-tag.outcome == 'success' }}\n+        run: |\n+          git checkout -b ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+          git push --set-upstream origin ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+  build:\n+    runs-on: ubuntu-latest\n+    needs: prepare-release-branch\n+    steps:\n+      - name: Checkout release branch\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ needs.prepare-release-branch.outputs.release-branch-name }}\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - name: Setup git name\n+        run: |\n+          git config user.name github-actions\n+          git config user.email github-actions@github.com\n+      - name: Cherrypicks\n+        run: |\n+          git fetch origin master\n+          echo ${{ github.event.inputs.commits }} | sed -n 1'p' | tr ',' '\\n' | while read word; do\n+              # Trim whitespaces and cherrypick\n+              echo $word | sed 's/ *$//g' | sed 's/^ *//g' | git cherry-pick --stdin\n+          done\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=true\n+      - name: Publish artifacts\n+        uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=trued\n+        env:\n+          CI: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTAzMzI1OnYy", "diffSide": "RIGHT", "path": ".github/workflows/patch-release-build.yml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzoyOToxMFrOHfyN0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMTowMzozMVrOHf57fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDY0Mw==", "bodyText": "What does this do after final task above?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503090643", "createdAt": "2020-10-12T07:29:10Z", "author": {"login": "iNikem"}, "path": ".github/workflows/patch-release-build.yml", "diffHunk": "@@ -0,0 +1,99 @@\n+name: Patch Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.1, 1.2.2\n+        required: true\n+      commits:\n+        description: Comma separated list of commit shas to cherrypick\n+        required: true\n+\n+jobs:\n+  prepare-release-branch:\n+    runs-on: ubuntu-latest\n+    outputs:\n+      release-branch-name: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+    steps:\n+      - id: parse-release-branch\n+        name: Parse release branch name\n+        run: |\n+          # Sets the release-branch-name output to the version number with the last non-period element replaced with an 'x' and preprended with v.\n+          echo \"::set-output name=release-branch-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.x/')\"\n+          # Sets the release-tag-name output to the version number with the last non-period element replace with a '0' and prepended with v\n+          echo \"::set-output name=release-tag-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.0/')\"\n+      - id: checkout-release-branch\n+        name: Check out release branch\n+        continue-on-error: true\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+      - id: checkout-release-tag\n+        name: Check out release tag\n+        if: ${{ steps.checkout-release-branch.outcome == 'failure' }}\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-tag-name }}\n+      - name: Create release branch\n+        if: ${{ steps.checkout-release-tag.outcome == 'success' }}\n+        run: |\n+          git checkout -b ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+          git push --set-upstream origin ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+  build:\n+    runs-on: ubuntu-latest\n+    needs: prepare-release-branch\n+    steps:\n+      - name: Checkout release branch\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ needs.prepare-release-branch.outputs.release-branch-name }}\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - name: Setup git name\n+        run: |\n+          git config user.name github-actions\n+          git config user.email github-actions@github.com\n+      - name: Cherrypicks\n+        run: |\n+          git fetch origin master\n+          echo ${{ github.event.inputs.commits }} | sed -n 1'p' | tr ',' '\\n' | while read word; do\n+              # Trim whitespaces and cherrypick\n+              echo $word | sed 's/ *$//g' | sed 's/^ *//g' | git cherry-pick --stdin\n+          done\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=true\n+      - name: Publish artifacts\n+        uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=trued\n+        env:\n+          CI: true\n+          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n+          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n+          GRGIT_USER: ${{ github.actor }}\n+          GRGIT_PASS: ${{ secrets.GITHUB_TOKEN }}\n+      - run: git push\n+      - name: Checkout master\n+        uses: actions/checkout@v2\n+        with:\n+           submodules: true\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: prepareRelease --stacktrace -Prelease.version=${{ github.event.inputs.version }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNTY4Mg==", "bodyText": "Yeah I should just rename to updateReadme instead of prepareRelease, I didn't notice this use case of needing to do it on a different branch from the release at the time. Should I do it in this PR?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503115682", "createdAt": "2020-10-12T08:14:50Z", "author": {"login": "anuraaga"}, "path": ".github/workflows/patch-release-build.yml", "diffHunk": "@@ -0,0 +1,99 @@\n+name: Patch Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.1, 1.2.2\n+        required: true\n+      commits:\n+        description: Comma separated list of commit shas to cherrypick\n+        required: true\n+\n+jobs:\n+  prepare-release-branch:\n+    runs-on: ubuntu-latest\n+    outputs:\n+      release-branch-name: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+    steps:\n+      - id: parse-release-branch\n+        name: Parse release branch name\n+        run: |\n+          # Sets the release-branch-name output to the version number with the last non-period element replaced with an 'x' and preprended with v.\n+          echo \"::set-output name=release-branch-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.x/')\"\n+          # Sets the release-tag-name output to the version number with the last non-period element replace with a '0' and prepended with v\n+          echo \"::set-output name=release-tag-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.0/')\"\n+      - id: checkout-release-branch\n+        name: Check out release branch\n+        continue-on-error: true\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+      - id: checkout-release-tag\n+        name: Check out release tag\n+        if: ${{ steps.checkout-release-branch.outcome == 'failure' }}\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-tag-name }}\n+      - name: Create release branch\n+        if: ${{ steps.checkout-release-tag.outcome == 'success' }}\n+        run: |\n+          git checkout -b ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+          git push --set-upstream origin ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+  build:\n+    runs-on: ubuntu-latest\n+    needs: prepare-release-branch\n+    steps:\n+      - name: Checkout release branch\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ needs.prepare-release-branch.outputs.release-branch-name }}\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - name: Setup git name\n+        run: |\n+          git config user.name github-actions\n+          git config user.email github-actions@github.com\n+      - name: Cherrypicks\n+        run: |\n+          git fetch origin master\n+          echo ${{ github.event.inputs.commits }} | sed -n 1'p' | tr ',' '\\n' | while read word; do\n+              # Trim whitespaces and cherrypick\n+              echo $word | sed 's/ *$//g' | sed 's/^ *//g' | git cherry-pick --stdin\n+          done\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=true\n+      - name: Publish artifacts\n+        uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=trued\n+        env:\n+          CI: true\n+          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n+          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n+          GRGIT_USER: ${{ github.actor }}\n+          GRGIT_PASS: ${{ secrets.GITHUB_TOKEN }}\n+      - run: git push\n+      - name: Checkout master\n+        uses: actions/checkout@v2\n+        with:\n+           submodules: true\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: prepareRelease --stacktrace -Prelease.version=${{ github.event.inputs.version }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDY0Mw=="}, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIxNzAyMA==", "bodyText": "I think so", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503217020", "createdAt": "2020-10-12T11:03:31Z", "author": {"login": "iNikem"}, "path": ".github/workflows/patch-release-build.yml", "diffHunk": "@@ -0,0 +1,99 @@\n+name: Patch Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.1, 1.2.2\n+        required: true\n+      commits:\n+        description: Comma separated list of commit shas to cherrypick\n+        required: true\n+\n+jobs:\n+  prepare-release-branch:\n+    runs-on: ubuntu-latest\n+    outputs:\n+      release-branch-name: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+    steps:\n+      - id: parse-release-branch\n+        name: Parse release branch name\n+        run: |\n+          # Sets the release-branch-name output to the version number with the last non-period element replaced with an 'x' and preprended with v.\n+          echo \"::set-output name=release-branch-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.x/')\"\n+          # Sets the release-tag-name output to the version number with the last non-period element replace with a '0' and prepended with v\n+          echo \"::set-output name=release-tag-name::$(echo '${{ github.event.inputs.version }}' | sed -E 's/([^.]+)\\.([^.]+)\\.([^.]+)/v\\1.\\2.0/')\"\n+      - id: checkout-release-branch\n+        name: Check out release branch\n+        continue-on-error: true\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+      - id: checkout-release-tag\n+        name: Check out release tag\n+        if: ${{ steps.checkout-release-branch.outcome == 'failure' }}\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ steps.parse-release-branch.outputs.release-tag-name }}\n+      - name: Create release branch\n+        if: ${{ steps.checkout-release-tag.outcome == 'success' }}\n+        run: |\n+          git checkout -b ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+          git push --set-upstream origin ${{ steps.parse-release-branch.outputs.release-branch-name }}\n+  build:\n+    runs-on: ubuntu-latest\n+    needs: prepare-release-branch\n+    steps:\n+      - name: Checkout release branch\n+        uses: actions/checkout@v2\n+        with:\n+          ref: ${{ needs.prepare-release-branch.outputs.release-branch-name }}\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - name: Setup git name\n+        run: |\n+          git config user.name github-actions\n+          git config user.email github-actions@github.com\n+      - name: Cherrypicks\n+        run: |\n+          git fetch origin master\n+          echo ${{ github.event.inputs.commits }} | sed -n 1'p' | tr ',' '\\n' | while read word; do\n+              # Trim whitespaces and cherrypick\n+              echo $word | sed 's/ *$//g' | sed 's/^ *//g' | git cherry-pick --stdin\n+          done\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: build --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=true\n+      - name: Publish artifacts\n+        uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: final --stacktrace -Prelease.version=${{ github.event.inputs.version }}\n+          properties: |\n+            enable.docker.tests=trued\n+        env:\n+          CI: true\n+          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}\n+          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}\n+          GRGIT_USER: ${{ github.actor }}\n+          GRGIT_PASS: ${{ secrets.GITHUB_TOKEN }}\n+      - run: git push\n+      - name: Checkout master\n+        uses: actions/checkout@v2\n+        with:\n+           submodules: true\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk11\n+          remote-build-cache-proxy-enabled: false\n+          arguments: prepareRelease --stacktrace -Prelease.version=${{ github.event.inputs.version }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDY0Mw=="}, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTAzNDQxOnYy", "diffSide": "RIGHT", "path": ".github/workflows/release-build.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzoyOTozNlrOHfyOiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzoyOTozNlrOHfyOiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDgyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      job-id: jdk8\n          \n          \n            \n                      job-id: jdk11", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503090824", "createdAt": "2020-10-12T07:29:36Z", "author": {"login": "iNikem"}, "path": ".github/workflows/release-build.yml", "diffHunk": "@@ -0,0 +1,42 @@\n+name: Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1\n+        required: true\n+\n+jobs:\n+  build:\n+    name: Build and release\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+        with:\n+          submodules: true\n+      - uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+      - uses: burrunan/gradle-cache-action@v1.5\n+        with:\n+          job-id: jdk8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTAzNjU3OnYy", "diffSide": "RIGHT", "path": ".github/workflows/release-build.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzozMDoxMVrOHfyPzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODoxNTo1M1rOHfzyLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MTE0OA==", "bodyText": "This releases current HEAD of the main branch, correct?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503091148", "createdAt": "2020-10-12T07:30:11Z", "author": {"login": "iNikem"}, "path": ".github/workflows/release-build.yml", "diffHunk": "@@ -0,0 +1,42 @@\n+name: Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNjMzNA==", "bodyText": "Yup, added a comment.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503116334", "createdAt": "2020-10-12T08:15:53Z", "author": {"login": "anuraaga"}, "path": ".github/workflows/release-build.yml", "diffHunk": "@@ -0,0 +1,42 @@\n+name: Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MTE0OA=="}, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTAzODcyOnYy", "diffSide": "RIGHT", "path": "Makefile", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzozMDo1MlrOHfyRLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODoxNjo0NlrOHfz0KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MTUwMg==", "bodyText": "Cannot you just create a correct tag on the main branch for the current released version?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503091502", "createdAt": "2020-10-12T07:30:52Z", "author": {"login": "iNikem"}, "path": "Makefile", "diffHunk": "@@ -24,7 +24,8 @@ verify-format:\n .PHONY: publish-snapshots\n publish-snapshots:\n ifeq ($(CIRCLE_BRANCH),master)\n-\t./gradlew artifactoryPublish\n+  # TODO(anuraaga): Remove version specificer after next release creates a tag on master.\n+\t./gradlew artifactoryPublish -Prelease.version=0.10.0-SNAPSHOT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNjg0MQ==", "bodyText": "Well, we already have a tag referring to a release branch which is what we built from. While moving it to the main branch could be effectively the same, I think it's some rewriting history that I want to avoid, this workaround isn't so bad I think.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503116841", "createdAt": "2020-10-12T08:16:46Z", "author": {"login": "anuraaga"}, "path": "Makefile", "diffHunk": "@@ -24,7 +24,8 @@ verify-format:\n .PHONY: publish-snapshots\n publish-snapshots:\n ifeq ($(CIRCLE_BRANCH),master)\n-\t./gradlew artifactoryPublish\n+  # TODO(anuraaga): Remove version specificer after next release creates a tag on master.\n+\t./gradlew artifactoryPublish -Prelease.version=0.10.0-SNAPSHOT", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MTUwMg=="}, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTA0MzU3OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzozMjoyNVrOHfyUEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODoxNzoyN1rOHfz1ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MjI0Mw==", "bodyText": "This will run them even if releaseTask fails, are you sure?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503092243", "createdAt": "2020-10-12T07:32:25Z", "author": {"login": "iNikem"}, "path": "build.gradle", "diffHunk": "@@ -11,15 +14,35 @@ ext {\n     opentelemetryProjects = subprojects - project(\":opentelemetry-bom\")\n }\n \n+release {\n+    defaultVersionStrategy = Strategies.getSNAPSHOT()\n+}\n+\n+nebulaRelease {\n+    addReleaseBranchPattern(/v\\d+\\.\\d+\\.x/)\n+}\n+\n+def releaseTask = tasks.named(\"release\")\n+releaseTask.configure {\n+    mustRunAfter(\"snapshotSetup\", \"finalSetup\")\n+}\n+\n subprojects {\n     group = \"io.opentelemetry\"\n-    version = \"0.10.0-SNAPSHOT\" // CURRENT_OPEN_TELEMETRY_VERSION\n \n     plugins.withId(\"maven-publish\") {\n         // Always include the artifactory/bintray plugins to do the deployment.\n         pluginManager.apply \"com.jfrog.artifactory\"\n         pluginManager.apply \"com.jfrog.bintray\"\n \n+        releaseTask.configure {\n+            if (version.toString().endsWith('-SNAPSHOT')) {\n+                finalizedBy(tasks.named('artifactoryPublish'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNzIxNA==", "bodyText": "releaseTask is just a placeholder, so it can't fail. I think it's ok - it's the simplest way to have publishing guaranteed to happen after the dependencies of releaseTask instead of wiring dependencies if needed.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503117214", "createdAt": "2020-10-12T08:17:27Z", "author": {"login": "anuraaga"}, "path": "build.gradle", "diffHunk": "@@ -11,15 +14,35 @@ ext {\n     opentelemetryProjects = subprojects - project(\":opentelemetry-bom\")\n }\n \n+release {\n+    defaultVersionStrategy = Strategies.getSNAPSHOT()\n+}\n+\n+nebulaRelease {\n+    addReleaseBranchPattern(/v\\d+\\.\\d+\\.x/)\n+}\n+\n+def releaseTask = tasks.named(\"release\")\n+releaseTask.configure {\n+    mustRunAfter(\"snapshotSetup\", \"finalSetup\")\n+}\n+\n subprojects {\n     group = \"io.opentelemetry\"\n-    version = \"0.10.0-SNAPSHOT\" // CURRENT_OPEN_TELEMETRY_VERSION\n \n     plugins.withId(\"maven-publish\") {\n         // Always include the artifactory/bintray plugins to do the deployment.\n         pluginManager.apply \"com.jfrog.artifactory\"\n         pluginManager.apply \"com.jfrog.bintray\"\n \n+        releaseTask.configure {\n+            if (version.toString().endsWith('-SNAPSHOT')) {\n+                finalizedBy(tasks.named('artifactoryPublish'))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MjI0Mw=="}, "originalCommit": {"oid": "064a1d5015e1b95d9c80b2423138d511bae90eed"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzIzNDEyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/patch-release-build.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoxODoxOFrOHgHBiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNDo1OTozOVrOHgVbfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzMTU2MA==", "bodyText": "In case we need a patch that can't be done with a simple cherrypick, do we have a description of what that process would look like? An example would be a bugfix change that was done against the main branch, but where the main branch APIs have changed from what was on the release branch.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503431560", "createdAt": "2020-10-12T17:18:18Z", "author": {"login": "jkwatson"}, "path": ".github/workflows/patch-release-build.yml", "diffHunk": "@@ -0,0 +1,100 @@\n+# Releases a patch by cherrypicking commits into a release branch based on the previous\n+# release tag.\n+name: Patch Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.1, 1.2.2\n+        required: true\n+      commits:\n+        description: Comma separated list of commit shas to cherrypick", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c561064964a520ce490ef9cf7d529243ab1f5f3"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2NzU4MQ==", "bodyText": "Great callout - I added docs for this case.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1781#discussion_r503667581", "createdAt": "2020-10-13T04:59:39Z", "author": {"login": "anuraaga"}, "path": ".github/workflows/patch-release-build.yml", "diffHunk": "@@ -0,0 +1,100 @@\n+# Releases a patch by cherrypicking commits into a release branch based on the previous\n+# release tag.\n+name: Patch Release Build\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      version:\n+        description: The version to tag the release with, e.g., 1.2.1, 1.2.2\n+        required: true\n+      commits:\n+        description: Comma separated list of commit shas to cherrypick", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzMTU2MA=="}, "originalCommit": {"oid": "9c561064964a520ce490ef9cf7d529243ab1f5f3"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2072, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}