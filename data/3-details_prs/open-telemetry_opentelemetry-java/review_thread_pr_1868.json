{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NTQwNDE4", "number": 1868, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjoyNzo0OVrOExAmMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjoyNzo0OVrOExAmMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODI1NDU3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/baggage/ImmutableBaggage.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjoyNzo0OVrOHm6E0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDo0OToxNFrOHnRKvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1OTQ0Mw==", "bodyText": "this was the only bit that gave me pause. I think it ends with the simplest outcome, but does have a consequence that you're forced to manually parent if you use the toBuilder() method and you want to use Context.current() as the parent.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1868#discussion_r510559443", "createdAt": "2020-10-23T02:27:49Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/baggage/ImmutableBaggage.java", "diffHunk": "@@ -67,6 +68,15 @@ public String getEntryValue(String entryKey) {\n     }\n   }\n \n+  @Override\n+  public Baggage.Builder toBuilder() {\n+    Builder builder = new Builder();\n+    builder.entries.putAll(entries);\n+    builder.parent = parent;\n+    builder.noImplicitParent = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d10e5057cfbdef5be6078fca04197e5381673dcf"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU3MzUxNw==", "bodyText": "Yeah this felt natural to me so I didn't even think of it. But that's an interesting callout - seems ok to me with this behavior though.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1868#discussion_r510573517", "createdAt": "2020-10-23T03:28:13Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/baggage/ImmutableBaggage.java", "diffHunk": "@@ -67,6 +68,15 @@ public String getEntryValue(String entryKey) {\n     }\n   }\n \n+  @Override\n+  public Baggage.Builder toBuilder() {\n+    Builder builder = new Builder();\n+    builder.entries.putAll(entries);\n+    builder.parent = parent;\n+    builder.noImplicitParent = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1OTQ0Mw=="}, "originalCommit": {"oid": "d10e5057cfbdef5be6078fca04197e5381673dcf"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU3MzY5Mw==", "bodyText": "Though I wonder if this is a reason to consider making Baggage mutable? Spans are mutable, so there would be symmetry with that.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1868#discussion_r510573693", "createdAt": "2020-10-23T03:28:58Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/baggage/ImmutableBaggage.java", "diffHunk": "@@ -67,6 +68,15 @@ public String getEntryValue(String entryKey) {\n     }\n   }\n \n+  @Override\n+  public Baggage.Builder toBuilder() {\n+    Builder builder = new Builder();\n+    builder.entries.putAll(entries);\n+    builder.parent = parent;\n+    builder.noImplicitParent = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1OTQ0Mw=="}, "originalCommit": {"oid": "d10e5057cfbdef5be6078fca04197e5381673dcf"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkzNzc5MA==", "bodyText": "I'm not going to push for that, personally, but I'm also not an expert, so I'm going to leave it as-is for now.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1868#discussion_r510937790", "createdAt": "2020-10-23T14:49:14Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/baggage/ImmutableBaggage.java", "diffHunk": "@@ -67,6 +68,15 @@ public String getEntryValue(String entryKey) {\n     }\n   }\n \n+  @Override\n+  public Baggage.Builder toBuilder() {\n+    Builder builder = new Builder();\n+    builder.entries.putAll(entries);\n+    builder.parent = parent;\n+    builder.noImplicitParent = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1OTQ0Mw=="}, "originalCommit": {"oid": "d10e5057cfbdef5be6078fca04197e5381673dcf"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2000, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}