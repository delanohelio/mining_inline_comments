{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMDgxNTU3", "number": 1791, "title": "Remove DefaultSpan from public API.", "bodyText": "We use DefaultSpan, a no-op wrapper of a spancontext, for three use cases\n\npropagated span\nunsampled span\ndisabling implicit tracing in a scope\n\nSo it actually didn't make sense to use the propagated span terminology to replace it. I used a wrapAsNoop factory instead since that's literally what we're doing. To give the propagated term some love, I renamed the relevant SpanContext factory to use the word. Realized I was confusing propagated span with remote span but they are different.\nWould be much easier to reason about without the SpanContext I guess \ud83d\ude0b\nFixes #1704", "createdAt": "2020-10-13T08:05:25Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791", "merged": true, "mergeCommit": {"oid": "2d0f91b5389cd8b50521a2302836db38be8a9595"}, "closed": true, "closedAt": "2020-10-15T02:37:05Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSEpCbgFqTUwNzIxMDkzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSoBNqAFqTUwODg4Njk2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjEwOTM5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#pullrequestreview-507210939", "createdAt": "2020-10-13T08:52:19Z", "commit": {"oid": "408fafeff0ce8f624189e0fdfac386eabdbe51f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwODo1MjoxOVrOHgcQwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwODo1MjoxOVrOHgcQwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc3OTUyMQ==", "bodyText": "@Oberon00 Based on the conversation in open-telemetry/opentelemetry-specification#1086 this should be something like wrapForPropagation, we're wrapping this SpanContext into a PropagatedSpan. This seems like odd naming to me though, as there is nothing about propagation happening here really, doubly-so because propagation is still more commonly used for remote propagation than in-process propagation I think. That's not great here since we don't do remote propagation of the invalid span.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#discussion_r503779521", "createdAt": "2020-10-13T08:52:19Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -23,6 +23,26 @@\n @ThreadSafe\n public interface Span {\n \n+  /**\n+   * Returns an invalid {@link Span}. An invalid {@link Span} is used when tracing is disabled,\n+   * usually because there is no OpenTelemetry SDK installed.\n+   */\n+  static Span getInvalid() {\n+    return DefaultSpan.INVALID;\n+  }\n+\n+  /**\n+   * Returns a {@link Span} that only wraps the provided {@link SpanContext} but has no\n+   * functionality. It will not be exported and all operations are no-op, but it can be used to\n+   * propagate the {@link SpanContext} downstream.\n+   */\n+  static Span wrapWithNoop(SpanContext spanContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "408fafeff0ce8f624189e0fdfac386eabdbe51f4"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjUwOTE0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#pullrequestreview-507650914", "createdAt": "2020-10-13T16:58:58Z", "commit": {"oid": "952058709c2565f9afe643598645a453a723a3ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo1ODo1OFrOHgwx-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo1ODo1OFrOHgwx-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNTcwNw==", "bodyText": "This change seems a bit orthogonal to the PR. Does it need to be included?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#discussion_r504115707", "createdAt": "2020-10-13T16:58:58Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/propagation/HttpTraceContext.java", "diffHunk": "@@ -144,44 +144,45 @@ public static HttpTraceContext getInstance() {\n     Objects.requireNonNull(carrier, \"carrier\");\n     Objects.requireNonNull(getter, \"getter\");\n \n-    SpanContext spanContext = extractImpl(carrier, getter);\n-    if (!spanContext.isValid()) {\n+    Span span = extractImpl(carrier, getter);\n+    if (!span.isValid()) {\n       return context;\n     }\n \n-    return TracingContextUtils.withSpan(DefaultSpan.create(spanContext), context);\n+    return TracingContextUtils.withSpan(span, context);\n   }\n \n-  private static <C> SpanContext extractImpl(C carrier, Getter<C> getter) {\n+  private static <C> Span extractImpl(C carrier, Getter<C> getter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "952058709c2565f9afe643598645a453a723a3ad"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3Njg5NDYx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#pullrequestreview-507689461", "createdAt": "2020-10-13T17:50:25Z", "commit": {"oid": "952058709c2565f9afe643598645a453a723a3ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzo1MDoyNVrOHgyouw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzo1MDoyNVrOHgyouw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NjEwNw==", "bodyText": "I'd like to separate out this changes into a follow-on PR, just to keep this one a little more tight in its scope.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#discussion_r504146107", "createdAt": "2020-10-13T17:50:25Z", "author": {"login": "jkwatson"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/AwsXRayPropagator.java", "diffHunk": "@@ -123,18 +122,18 @@ public static AwsXRayPropagator getInstance() {\n     Objects.requireNonNull(carrier, \"carrier\");\n     Objects.requireNonNull(getter, \"getter\");\n \n-    SpanContext spanContext = getSpanContextFromHeader(carrier, getter);\n-    if (!spanContext.isValid()) {\n+    Span span = extractSpan(carrier, getter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "952058709c2565f9afe643598645a453a723a3ad"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3Njk0MzI4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#pullrequestreview-507694328", "createdAt": "2020-10-13T17:56:34Z", "commit": {"oid": "952058709c2565f9afe643598645a453a723a3ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzo1NjozNFrOHgy2wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzo1NjozNFrOHgy2wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0OTY5OA==", "bodyText": "ditto on reducing scope for this PR", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#discussion_r504149698", "createdAt": "2020-10-13T17:56:34Z", "author": {"login": "jkwatson"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/B3PropagatorExtractorMultipleHeaders.java", "diffHunk": "@@ -29,33 +28,33 @@\n       Context context, C carrier, TextMapPropagator.Getter<C> getter) {\n     Objects.requireNonNull(carrier, \"carrier\");\n     Objects.requireNonNull(getter, \"getter\");\n-    SpanContext spanContext = getSpanContextFromMultipleHeaders(carrier, getter);\n-    if (!spanContext.isValid()) {\n+    Span span = extractFromMultipleHeaders(carrier, getter);\n+    if (!span.isValid()) {\n       return Optional.empty();\n     }\n \n-    return Optional.of(TracingContextUtils.withSpan(DefaultSpan.create(spanContext), context));\n+    return Optional.of(TracingContextUtils.withSpan(span, context));\n   }\n \n-  private static <C> SpanContext getSpanContextFromMultipleHeaders(\n+  private static <C> Span extractFromMultipleHeaders(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "952058709c2565f9afe643598645a453a723a3ad"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dae27aa65adc3c79851a79a3f0a98037699f45c5", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/dae27aa65adc3c79851a79a3f0a98037699f45c5", "committedDate": "2020-10-14T02:24:20Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59e676fce1698e49c91c423dec74545430802249", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/59e676fce1698e49c91c423dec74545430802249", "committedDate": "2020-10-14T02:26:10Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into remove-default-span"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "952058709c2565f9afe643598645a453a723a3ad", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/952058709c2565f9afe643598645a453a723a3ad", "committedDate": "2020-10-13T08:56:07Z", "message": "propagated span != remote"}, "afterCommit": {"oid": "59e676fce1698e49c91c423dec74545430802249", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/59e676fce1698e49c91c423dec74545430802249", "committedDate": "2020-10-14T02:26:10Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into remove-default-span"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ceec41364224421d92885b12381753782b6184a", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0ceec41364224421d92885b12381753782b6184a", "committedDate": "2020-10-14T02:30:55Z", "message": "Fix comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NDQzMTMw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#pullrequestreview-508443130", "createdAt": "2020-10-14T15:01:14Z", "commit": {"oid": "0ceec41364224421d92885b12381753782b6184a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTowMToxNFrOHhXiQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTowMToxNFrOHhXiQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1MDY1Ng==", "bodyText": "this is a nice cleanup. much tighter and clearer.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#discussion_r504750656", "createdAt": "2020-10-14T15:01:14Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/DefaultTracer.java", "diffHunk": "@@ -64,9 +64,7 @@ public Span startSpan() {\n         spanContext = TracingContextUtils.getCurrentSpan().getContext();\n       }\n \n-      return spanContext != null && !SpanContext.getInvalid().equals(spanContext)\n-          ? new DefaultSpan(spanContext)\n-          : DefaultSpan.getInvalid();\n+      return Span.getPropagated(spanContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ceec41364224421d92885b12381753782b6184a"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NDU0MTk5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#pullrequestreview-508454199", "createdAt": "2020-10-14T15:12:08Z", "commit": {"oid": "0ceec41364224421d92885b12381753782b6184a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NTY5MzA3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#pullrequestreview-508569307", "createdAt": "2020-10-14T17:23:11Z", "commit": {"oid": "0ceec41364224421d92885b12381753782b6184a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoyMzoxMVrOHhdatQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoyNDowOFrOHhdc4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg0NzAyOQ==", "bodyText": "s/getPropagated/toPropagated?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#discussion_r504847029", "createdAt": "2020-10-14T17:23:11Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -23,6 +23,26 @@\n @ThreadSafe\n public interface Span {\n \n+  /**\n+   * Returns an invalid {@link Span}. An invalid {@link Span} is used when tracing is disabled,\n+   * usually because there is no OpenTelemetry SDK installed.\n+   */\n+  static Span getInvalid() {\n+    return PropagatedSpan.INVALID;\n+  }\n+\n+  /**\n+   * Returns a non-recording {@link Span} that holds the provided {@link SpanContext} but has no\n+   * functionality. It will not be exported and all tracing operations are no-op, but it can be used\n+   * to propagate a valid {@link SpanContext} downstream.\n+   */\n+  static Span getPropagated(SpanContext spanContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ceec41364224421d92885b12381753782b6184a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg0NzU4NQ==", "bodyText": "I think this change is unrelated with the PR description and purpose, consider to not add \"secondary\" changes to a PR.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#discussion_r504847585", "createdAt": "2020-10-14T17:24:08Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -304,6 +324,15 @@ default void setAttribute(AttributeKey<Long> key, int value) {\n    */\n   boolean isRecording();\n \n+  /**\n+   * Returns whether this {@link Span} is valid.\n+   *\n+   * @see Span#getInvalid()\n+   */\n+  default boolean isValid() {\n+    return getContext().isValid();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ceec41364224421d92885b12381753782b6184a"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b75200f4275422b59e5cf4ed057b6daa7a842ac", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0b75200f4275422b59e5cf4ed057b6daa7a842ac", "committedDate": "2020-10-14T23:25:19Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into remove-default-span"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e6c3d96489e7a198ad8fa0c122e38641483bd2f", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2e6c3d96489e7a198ad8fa0c122e38641483bd2f", "committedDate": "2020-10-14T23:38:31Z", "message": "isValid not valid"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4ODg2OTYz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1791#pullrequestreview-508886963", "createdAt": "2020-10-15T02:05:24Z", "commit": {"oid": "2e6c3d96489e7a198ad8fa0c122e38641483bd2f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4232, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}