{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTk5NDk4", "number": 1457, "title": "B3: Add Additional Validity Checks and tests for Trace and Span ID", "bodyText": "From the B3 Spec (https://github.com/openzipkin/b3-propagation)\nTrace identifiers are 64 or 128-bit, but all span identifiers within a trace are 64-bit\nIdentifiers must also be implemented as hex-characters.\nTechnically these checks were happening before (and these tests would have passed), but an exception was raised elsewhere in the code. It felt more intuitive to move the checks into this validity checking function.", "createdAt": "2020-07-23T23:22:23Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457", "merged": true, "mergeCommit": {"oid": "9350f485f90c9980699cdee838c183af1d64ff72"}, "closed": true, "closedAt": "2020-07-27T17:50:11Z", "author": {"login": "MitchellDumovic"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc338nLABqjM1ODIwNTgyMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5AYJ-gFqTQ1NTcwNjk5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "922650d38d39b59e79b75da374c0cacf9059e693", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/922650d38d39b59e79b75da374c0cacf9059e693", "committedDate": "2020-07-23T23:19:08Z", "message": "B3: Add Additional Validity Checks and tests for Trace and Span ID"}, "afterCommit": {"oid": "686008bbc927ee4d06456ff0cff5eee518e09059", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/686008bbc927ee4d06456ff0cff5eee518e09059", "committedDate": "2020-07-23T23:22:44Z", "message": "B3: Add Additional Validity Checks and tests for Trace and Span ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "686008bbc927ee4d06456ff0cff5eee518e09059", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/686008bbc927ee4d06456ff0cff5eee518e09059", "committedDate": "2020-07-23T23:22:44Z", "message": "B3: Add Additional Validity Checks and tests for Trace and Span ID"}, "afterCommit": {"oid": "5eb3f244fbe6406aee11ceea4e661639a313ece2", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5eb3f244fbe6406aee11ceea4e661639a313ece2", "committedDate": "2020-07-23T23:49:00Z", "message": "B3: Add Additional Validity Checks and tests for Trace and Span ID"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/63f52d6a4f62b07e561c07e935a12d425858929a", "committedDate": "2020-07-24T01:11:40Z", "message": "B3: Add Additional Validity Checks and tests for Trace and Span ID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5eb3f244fbe6406aee11ceea4e661639a313ece2", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5eb3f244fbe6406aee11ceea4e661639a313ece2", "committedDate": "2020-07-23T23:49:00Z", "message": "B3: Add Additional Validity Checks and tests for Trace and Span ID"}, "afterCommit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/63f52d6a4f62b07e561c07e935a12d425858929a", "committedDate": "2020-07-24T01:11:40Z", "message": "B3: Add Additional Validity Checks and tests for Trace and Span ID"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjUzNTE2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#pullrequestreview-454653516", "createdAt": "2020-07-24T06:14:38Z", "commit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNDozOFrOG2kMpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNDozOFrOG2kMpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTM1MA==", "bodyText": "I am somewhat concerned about creating one extra object every time we want to check if traceId or spanId are valid", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#discussion_r459869350", "createdAt": "2020-07-24T06:14:38Z", "author": {"login": "iNikem"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/B3PropagatorExtractor.java", "diffHunk": "@@ -63,12 +65,25 @@ static SpanContext buildSpanContext(String traceId, String spanId, String sample\n       }\n     }\n \n+    private static boolean isHex(String value) {\n+      try {\n+        new BigInteger(value, 16);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjU0MTYz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#pullrequestreview-454654163", "createdAt": "2020-07-24T06:16:41Z", "commit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNjo0MVrOG2kOqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNzowOVrOG2kPGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTg2Ng==", "bodyText": "Let's check length before hex since it's a simpler check", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#discussion_r459869866", "createdAt": "2020-07-24T06:16:41Z", "author": {"login": "anuraaga"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/B3PropagatorExtractor.java", "diffHunk": "@@ -63,12 +65,25 @@ static SpanContext buildSpanContext(String traceId, String spanId, String sample\n       }\n     }\n \n+    private static boolean isHex(String value) {\n+      try {\n+        new BigInteger(value, 16);\n+        return true;\n+      } catch (NumberFormatException e) {\n+        return false;\n+      }\n+    }\n+\n     static boolean isTraceIdValid(String value) {\n-      return !(StringUtils.isNullOrEmpty(value) || value.length() > MAX_TRACE_ID_LENGTH);\n+      return !(StringUtils.isNullOrEmpty(value)\n+          || !isHex(value)\n+          || (value.length() != MIN_TRACE_ID_LENGTH && value.length() != MAX_TRACE_ID_LENGTH));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTk3Nw==", "bodyText": "Agree, looping through and checking the character range shouldn't be too much more complex.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#discussion_r459869977", "createdAt": "2020-07-24T06:17:09Z", "author": {"login": "anuraaga"}, "path": "extensions/trace_propagators/src/main/java/io/opentelemetry/extensions/trace/propagation/B3PropagatorExtractor.java", "diffHunk": "@@ -63,12 +65,25 @@ static SpanContext buildSpanContext(String traceId, String spanId, String sample\n       }\n     }\n \n+    private static boolean isHex(String value) {\n+      try {\n+        new BigInteger(value, 16);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTM1MA=="}, "originalCommit": {"oid": "63f52d6a4f62b07e561c07e935a12d425858929a"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d30e86c6a8eb7445d5f1f70004b7e44517ce4079", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d30e86c6a8eb7445d5f1f70004b7e44517ce4079", "committedDate": "2020-07-24T20:09:49Z", "message": "loop through characters to check hex instead of creating new object"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa7391a3a77ba77a02a0609029f22b2383cdb6c6", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fa7391a3a77ba77a02a0609029f22b2383cdb6c6", "committedDate": "2020-07-24T20:08:51Z", "message": "loop through characters to check hex instead of creating new object"}, "afterCommit": {"oid": "d30e86c6a8eb7445d5f1f70004b7e44517ce4079", "author": {"user": {"login": "MitchellDumovic", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d30e86c6a8eb7445d5f1f70004b7e44517ce4079", "committedDate": "2020-07-24T20:09:49Z", "message": "loop through characters to check hex instead of creating new object"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjQ3Mzcy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#pullrequestreview-455247372", "createdAt": "2020-07-25T01:03:30Z", "commit": {"oid": "d30e86c6a8eb7445d5f1f70004b7e44517ce4079"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NzA2OTk4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1457#pullrequestreview-455706998", "createdAt": "2020-07-27T11:46:09Z", "commit": {"oid": "d30e86c6a8eb7445d5f1f70004b7e44517ce4079"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2627, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}