{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzOTE1MDcz", "number": 2211, "title": "Add caching for sanitized labels in the Prometheus MetricAdapter.", "bodyText": "This resolves #1341.", "createdAt": "2020-12-07T20:02:53Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211", "merged": true, "mergeCommit": {"oid": "bd4e93187ac57c5d695335a054ad3ace8f04889b"}, "closed": true, "closedAt": "2020-12-09T21:39:55Z", "author": {"login": "breedx-splk"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdj7JddgH2gAyNTMzOTE1MDczOmVhODRhODc0NzdlMDAyNzI4ZmMyYmU3NjY1MGM2Y2NhMGJkYzg0Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkNWmzAH2gAyNTMzOTE1MDczOmIzMDM0NWViMTQxNjcwMzJmN2RmNWFhYjg3YzNiNmFiODc1MzAyMDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ea84a87477e002728fc2be76650c6cca0bdc8428", "author": {"user": {"login": "breedx-splk", "name": "jason plumb"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ea84a87477e002728fc2be76650c6cca0bdc8428", "committedDate": "2020-12-07T19:59:19Z", "message": "cache sanitized labels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8800dc07c2ada61727d685284bc9ef90da7781da", "author": {"user": {"login": "breedx-splk", "name": "jason plumb"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8800dc07c2ada61727d685284bc9ef90da7781da", "committedDate": "2020-12-07T20:02:13Z", "message": "rollback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTA2NjEy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#pullrequestreview-546506612", "createdAt": "2020-12-07T20:24:07Z", "commit": {"oid": "8800dc07c2ada61727d685284bc9ef90da7781da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjYzNzI2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#pullrequestreview-546663726", "createdAt": "2020-12-08T00:58:23Z", "commit": {"oid": "8800dc07c2ada61727d685284bc9ef90da7781da"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDo1ODoyNFrOIBB4sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMTowMDowNFrOIBB7NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MDM4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class LabelNameSanitizer implements Function<String, String> {\n          \n          \n            \n            class LabelNameSanitizer implements Function<String, String> {", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#discussion_r537950384", "createdAt": "2020-12-08T00:58:24Z", "author": {"login": "anuraaga"}, "path": "exporters/prometheus/src/main/java/io/opentelemetry/exporter/prometheus/LabelNameSanitizer.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.exporter.prometheus;\n+\n+import io.prometheus.client.Collector;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+/** Used to convert a label keys to a label names. Sanitizes the label keys. Not thread safe. */\n+public class LabelNameSanitizer implements Function<String, String> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8800dc07c2ada61727d685284bc9ef90da7781da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MDc0NQ==", "bodyText": "Is prometheus exporter always guaranteed to be scraped by the same thread? I think I'd just stick with ConcurrentHashMap to let this be safe.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#discussion_r537950745", "createdAt": "2020-12-08T00:59:24Z", "author": {"login": "anuraaga"}, "path": "exporters/prometheus/src/main/java/io/opentelemetry/exporter/prometheus/LabelNameSanitizer.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.exporter.prometheus;\n+\n+import io.prometheus.client.Collector;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+/** Used to convert a label keys to a label names. Sanitizes the label keys. Not thread safe. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8800dc07c2ada61727d685284bc9ef90da7781da"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MTAyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                LabelNameSanitizer testClass = new LabelNameSanitizer(delegate);\n          \n          \n            \n                LabelNameSanitizer sanitizer = new LabelNameSanitizer(delegate);\n          \n      \n    \n    \n  \n\nmakes the test easier to read", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#discussion_r537951029", "createdAt": "2020-12-08T01:00:04Z", "author": {"login": "anuraaga"}, "path": "exporters/prometheus/src/test/java/io/opentelemetry/exporter/prometheus/LabelNameSanitizerTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.exporter.prometheus;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.Function;\n+import org.junit.jupiter.api.Test;\n+\n+class LabelNameSanitizerTest {\n+\n+  @Test\n+  void testSanitizerCaching() {\n+    AtomicInteger count = new AtomicInteger();\n+    Function<String, String> delegate = labelName -> labelName + count.incrementAndGet();\n+    LabelNameSanitizer testClass = new LabelNameSanitizer(delegate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8800dc07c2ada61727d685284bc9ef90da7781da"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b30345eb14167032f7df5aab87c3b6ab87530202", "author": {"user": {"login": "breedx-splk", "name": "jason plumb"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b30345eb14167032f7df5aab87c3b6ab87530202", "committedDate": "2020-12-08T17:11:58Z", "message": "address PR feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3867, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}