{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMjUzOTEy", "number": 1333, "title": "Make the IntervalMetricReader robust to exporter failures", "bodyText": "resolves #1324", "createdAt": "2020-06-11T18:14:52Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1333", "merged": true, "mergeCommit": {"oid": "c87729579650cebb2c48881c8a4c2cf504e335d0"}, "closed": true, "closedAt": "2020-06-11T22:44:21Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqSK-lgH2gAyNDMzMjUzOTEyOjY3NmU1ZTI0NGU0OTMyZDY2MThiOTUzMDFmZmQ5ODc4MjA2YzM2OGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqWOJgAFqTQyOTM0MjU2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "676e5e244e4932d6618b95301ffd9878206c368a", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/676e5e244e4932d6618b95301ffd9878206c368a", "committedDate": "2020-06-11T18:01:11Z", "message": "If an exporter throws an exception, log it, rather than having the IMR stop altogether."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjU4ODcy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1333#pullrequestreview-429258872", "createdAt": "2020-06-11T20:16:55Z", "commit": {"oid": "676e5e244e4932d6618b95301ffd9878206c368a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxNjo1NVrOGitPNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxNjo1NVrOGitPNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0NTk0MQ==", "bodyText": "Do we need this section to be in this try block too?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1333#discussion_r439045941", "createdAt": "2020-06-11T20:16:55Z", "author": {"login": "carlosalberto"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReader.java", "diffHunk": "@@ -202,11 +206,15 @@ private Exporter(InternalState internalState) {\n \n     @Override\n     public void run() {\n-      List<MetricData> metricsList = new ArrayList<>();\n-      for (MetricProducer metricProducer : internalState.getMetricProducers()) {\n-        metricsList.addAll(metricProducer.getAllMetrics());\n+      try {\n+        List<MetricData> metricsList = new ArrayList<>();\n+        for (MetricProducer metricProducer : internalState.getMetricProducers()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676e5e244e4932d6618b95301ffd9878206c368a"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjYwMDY1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1333#pullrequestreview-429260065", "createdAt": "2020-06-11T20:18:50Z", "commit": {"oid": "676e5e244e4932d6618b95301ffd9878206c368a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MzQyNTYw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1333#pullrequestreview-429342560", "createdAt": "2020-06-11T22:44:16Z", "commit": {"oid": "676e5e244e4932d6618b95301ffd9878206c368a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2866, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}