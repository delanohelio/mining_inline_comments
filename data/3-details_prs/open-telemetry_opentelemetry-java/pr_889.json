{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDQ3OTA1", "number": 889, "title": "Add instrumentation to the BatchSpansProcessor to count the number of dropped spans", "bodyText": "related to #766\nIs this the pattern that we think makes sense to use for instrumenting the SDK? Does this style of usage introduce a race condition in the creation of the SDKs? Does it mandate that the MeterSdk is created and installed before the TracerSdk is installed? Is there a better pattern to use?", "createdAt": "2020-02-19T23:23:15Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889", "merged": true, "mergeCommit": {"oid": "d31441ae2d61492c03cb1ced58a37020c54ca185"}, "closed": true, "closedAt": "2020-02-20T15:39:19Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF-81gAH2gAyMzc3NDQ3OTA1OjczNDNhMjcxZTVlMDc0Y2VjZjFhMmY3ZGE5YzM0NTg3MWRjYzRmMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGNAU4gFqTM2MjAwNTY5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7343a271e5e074cecf1a2f7da9c345871dcc4f19", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7343a271e5e074cecf1a2f7da9c345871dcc4f19", "committedDate": "2020-02-19T23:16:16Z", "message": "Add instrumentation to the BatchSpansProcessor to count the number of dropped spans."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTE2NTE1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#pullrequestreview-361516515", "createdAt": "2020-02-19T23:34:06Z", "commit": {"oid": "7343a271e5e074cecf1a2f7da9c345871dcc4f19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMzozNDowNlrOFr7j8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMzozNDowNlrOFr7j8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYwODk0NA==", "bodyText": "As a limitation of the current API for metrics the bound needs to be static or you need to unbind it, maybe in shutdown?\nAlso creating the same instrument twice may fail (we have not implement that check yet). So the instrument can easily be static :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#discussion_r381608944", "createdAt": "2020-02-19T23:34:06Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessor.java", "diffHunk": "@@ -267,12 +272,25 @@ private Worker(\n       this.maxExportBatchSize = maxExportBatchSize;\n       this.spansList = new ArrayList<>(maxQueueSize);\n       this.exporterTimeoutMillis = exporterTimeoutMillis;\n+\n+      Meter meter = OpenTelemetry.getMeterRegistry().get(\"opentelemetry\");\n+      LongCounter droppedSpansCounter =\n+          meter\n+              .longCounterBuilder(\"droppedSpans\")\n+              .setMonotonic(true)\n+              .setUnit(\"1\")\n+              .setDescription(\n+                  \"The number of spans dropped by the BatchSpansProcessor due to high throughput.\")\n+              .build();\n+      this.droppedSpans =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7343a271e5e074cecf1a2f7da9c345871dcc4f19"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8376a6e119976a18a4e46373cdae7e991c556b6", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a8376a6e119976a18a4e46373cdae7e991c556b6", "committedDate": "2020-02-20T00:16:08Z", "message": "Make the bound counter static."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTMyNjg3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#pullrequestreview-361532687", "createdAt": "2020-02-20T00:18:38Z", "commit": {"oid": "a8376a6e119976a18a4e46373cdae7e991c556b6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDoxODozOFrOFr8YsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDoxODozOFrOFr8YsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMjQ0OA==", "bodyText": "io.opentelemetry.sdk.trace?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#discussion_r381622448", "createdAt": "2020-02-20T00:18:38Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessor.java", "diffHunk": "@@ -233,6 +237,23 @@ private static Thread newThread(Runnable runnable) {\n   // concurrency.\n   private static final class Worker implements Runnable {\n \n+    static {\n+      Meter meter = OpenTelemetry.getMeterRegistry().get(\"opentelemetry\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8376a6e119976a18a4e46373cdae7e991c556b6"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2bf9f5dd6e991bfd73e4c430a89ffa16ee6a493", "author": {"user": null}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a2bf9f5dd6e991bfd73e4c430a89ffa16ee6a493", "committedDate": "2020-02-20T00:19:59Z", "message": "name the meter more specifically for the tracing package"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjk5NDIw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#pullrequestreview-361699420", "createdAt": "2020-02-20T08:11:40Z", "commit": {"oid": "a2bf9f5dd6e991bfd73e4c430a89ffa16ee6a493"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDA1Njkx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/889#pullrequestreview-362005691", "createdAt": "2020-02-20T15:38:45Z", "commit": {"oid": "a2bf9f5dd6e991bfd73e4c430a89ffa16ee6a493"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3406, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}