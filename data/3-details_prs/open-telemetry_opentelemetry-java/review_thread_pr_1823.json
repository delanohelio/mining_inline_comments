{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MzExNDE1", "number": 1823, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNDowOTowM1rOEvH1bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNDowOTowM1rOEvH1bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3ODQ2ODkyOnYy", "diffSide": "RIGHT", "path": "context/src/main/java/io/opentelemetry/context/LazyStorage.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNDowOTowM1rOHj7MZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyMTowMVrOHkFVNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzMjAzOQ==", "bodyText": "@dengliming Sorry if my suggestions weren't clear, thanks for bearing with me. We have these success cases\n\n1 provider, providerClassName empty - returns the 1 provider\n1 provider, providerClassName matches the provider - returns the 1 provider <- currently missing\nmultiple providers, providerClassName matches one of them - returns the provider that matches\n\nOtherwise log an error message and return default storage\nHope this makes it clear", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1823#discussion_r507432039", "createdAt": "2020-10-19T04:09:03Z", "author": {"login": "anuraaga"}, "path": "context/src/main/java/io/opentelemetry/context/LazyStorage.java", "diffHunk": "@@ -48,17 +48,11 @@ private static ContextStorage createStorage(AtomicReference<Throwable> deferredS\n       return DefaultContext.threadLocalStorage();\n     }\n \n-    if (providers.size() == 1) {\n-      ContextStorageProvider provider = providers.get(0);\n-      try {\n-        return provider.get();\n-      } catch (Throwable t) {\n-        deferredStorageFailure.set(t);\n-        return DefaultContext.threadLocalStorage();\n+    if (providerClassName.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71a80d94f56b77845994d8217c19aa7742d70d5d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ1OTEyMQ==", "bodyText": "yeah. a little confused. Can you also add the right return for each case\uff1f\n\n1 provider, providerClassName matches the provider <- currently missing\n\ndon't know what is missing. The following code should cover this case. is that correct?\nfor (ContextStorageProvider provider : providers) {\n      if (provider.getClass().getName().equals(providerClassName)) {\n        return provider.get();\n      }\n    }", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1823#discussion_r507459121", "createdAt": "2020-10-19T04:58:52Z", "author": {"login": "dengliming"}, "path": "context/src/main/java/io/opentelemetry/context/LazyStorage.java", "diffHunk": "@@ -48,17 +48,11 @@ private static ContextStorage createStorage(AtomicReference<Throwable> deferredS\n       return DefaultContext.threadLocalStorage();\n     }\n \n-    if (providers.size() == 1) {\n-      ContextStorageProvider provider = providers.get(0);\n-      try {\n-        return provider.get();\n-      } catch (Throwable t) {\n-        deferredStorageFailure.set(t);\n-        return DefaultContext.threadLocalStorage();\n+    if (providerClassName.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzMjAzOQ=="}, "originalCommit": {"oid": "71a80d94f56b77845994d8217c19aa7742d70d5d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ4MDc4MQ==", "bodyText": "Sure updated my comment, in every other case we log and return default storage.\nYeah starting with that, and than one more branch for if there's a single provider and empty providerClassName seems fine to me.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1823#discussion_r507480781", "createdAt": "2020-10-19T05:43:08Z", "author": {"login": "anuraaga"}, "path": "context/src/main/java/io/opentelemetry/context/LazyStorage.java", "diffHunk": "@@ -48,17 +48,11 @@ private static ContextStorage createStorage(AtomicReference<Throwable> deferredS\n       return DefaultContext.threadLocalStorage();\n     }\n \n-    if (providers.size() == 1) {\n-      ContextStorageProvider provider = providers.get(0);\n-      try {\n-        return provider.get();\n-      } catch (Throwable t) {\n-        deferredStorageFailure.set(t);\n-        return DefaultContext.threadLocalStorage();\n+    if (providerClassName.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzMjAzOQ=="}, "originalCommit": {"oid": "71a80d94f56b77845994d8217c19aa7742d70d5d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5NTg3NA==", "bodyText": "I think the current changes can satisfy all the cases. Just need log in some case. WDYT?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1823#discussion_r507595874", "createdAt": "2020-10-19T09:17:20Z", "author": {"login": "dengliming"}, "path": "context/src/main/java/io/opentelemetry/context/LazyStorage.java", "diffHunk": "@@ -48,17 +48,11 @@ private static ContextStorage createStorage(AtomicReference<Throwable> deferredS\n       return DefaultContext.threadLocalStorage();\n     }\n \n-    if (providers.size() == 1) {\n-      ContextStorageProvider provider = providers.get(0);\n-      try {\n-        return provider.get();\n-      } catch (Throwable t) {\n-        deferredStorageFailure.set(t);\n-        return DefaultContext.threadLocalStorage();\n+    if (providerClassName.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzMjAzOQ=="}, "originalCommit": {"oid": "71a80d94f56b77845994d8217c19aa7742d70d5d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5ODEzNA==", "bodyText": "Sorry got it! Yeah seems good, really needed to expand the diff", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1823#discussion_r507598134", "createdAt": "2020-10-19T09:21:01Z", "author": {"login": "anuraaga"}, "path": "context/src/main/java/io/opentelemetry/context/LazyStorage.java", "diffHunk": "@@ -48,17 +48,11 @@ private static ContextStorage createStorage(AtomicReference<Throwable> deferredS\n       return DefaultContext.threadLocalStorage();\n     }\n \n-    if (providers.size() == 1) {\n-      ContextStorageProvider provider = providers.get(0);\n-      try {\n-        return provider.get();\n-      } catch (Throwable t) {\n-        deferredStorageFailure.set(t);\n-        return DefaultContext.threadLocalStorage();\n+    if (providerClassName.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQzMjAzOQ=="}, "originalCommit": {"oid": "71a80d94f56b77845994d8217c19aa7742d70d5d"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1963, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}