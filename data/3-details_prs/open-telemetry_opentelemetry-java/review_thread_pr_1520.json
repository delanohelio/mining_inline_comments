{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NDEyNDc2", "number": 1520, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzoxODo1MlrOEWG2kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzoyMTo0NFrOEWG5yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjE2NDAzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzoxODo1MlrOG9POKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzoyMzo0MVrOG9PWKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2NTcwNw==", "bodyText": "I would still add the comment\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static final StringAttributeSetter RPC_METHOD = StringAttributeSetter.create(\"rpc.method\");\n          \n          \n            \n            /* The name of the method being called, must be equal to the $method part in the span name */\n          \n          \n            \n              public static final StringAttributeSetter RPC_METHOD = StringAttributeSetter.create(\"rpc.method\");", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1520#discussion_r466865707", "createdAt": "2020-08-07T07:18:52Z", "author": {"login": "thisthat"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -127,20 +127,30 @@\n    */\n   public static final LongAttributeSetter HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n       LongAttributeSetter.create(\"http.response_content_length_uncompressed\");\n-  /** The service name, must be equal to the $service part in the span name. */\n+\n+  /** A string identifying the remoting system, e.g., \"grpc\", \"java_rmi\" or \"wcf\". */\n+  public static final StringAttributeSetter RPC_SYSTEM = StringAttributeSetter.create(\"rpc.system\");\n+  /** The full name of the service being called, including its package name, if applicable. */\n   public static final StringAttributeSetter RPC_SERVICE =\n       StringAttributeSetter.create(\"rpc.service\");\n-  /** RPC span event attribute with value \"SENT\" or \"RECEIVED\". */\n-  public static final StringAttributeSetter MESSAGE_TYPE =\n+\n+  public static final StringAttributeSetter RPC_METHOD = StringAttributeSetter.create(\"rpc.method\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "428bbd007d4b5b0b0003ab5c98cfb93ec834bc5f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2NzExOA==", "bodyText": "Thanks somehow missed this one", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1520#discussion_r466867118", "createdAt": "2020-08-07T07:22:11Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -127,20 +127,30 @@\n    */\n   public static final LongAttributeSetter HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n       LongAttributeSetter.create(\"http.response_content_length_uncompressed\");\n-  /** The service name, must be equal to the $service part in the span name. */\n+\n+  /** A string identifying the remoting system, e.g., \"grpc\", \"java_rmi\" or \"wcf\". */\n+  public static final StringAttributeSetter RPC_SYSTEM = StringAttributeSetter.create(\"rpc.system\");\n+  /** The full name of the service being called, including its package name, if applicable. */\n   public static final StringAttributeSetter RPC_SERVICE =\n       StringAttributeSetter.create(\"rpc.service\");\n-  /** RPC span event attribute with value \"SENT\" or \"RECEIVED\". */\n-  public static final StringAttributeSetter MESSAGE_TYPE =\n+\n+  public static final StringAttributeSetter RPC_METHOD = StringAttributeSetter.create(\"rpc.method\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2NTcwNw=="}, "originalCommit": {"oid": "428bbd007d4b5b0b0003ab5c98cfb93ec834bc5f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2Nzc1NA==", "bodyText": "Thanks to you for keeping this up2date :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1520#discussion_r466867754", "createdAt": "2020-08-07T07:23:41Z", "author": {"login": "thisthat"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -127,20 +127,30 @@\n    */\n   public static final LongAttributeSetter HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n       LongAttributeSetter.create(\"http.response_content_length_uncompressed\");\n-  /** The service name, must be equal to the $service part in the span name. */\n+\n+  /** A string identifying the remoting system, e.g., \"grpc\", \"java_rmi\" or \"wcf\". */\n+  public static final StringAttributeSetter RPC_SYSTEM = StringAttributeSetter.create(\"rpc.system\");\n+  /** The full name of the service being called, including its package name, if applicable. */\n   public static final StringAttributeSetter RPC_SERVICE =\n       StringAttributeSetter.create(\"rpc.service\");\n-  /** RPC span event attribute with value \"SENT\" or \"RECEIVED\". */\n-  public static final StringAttributeSetter MESSAGE_TYPE =\n+\n+  public static final StringAttributeSetter RPC_METHOD = StringAttributeSetter.create(\"rpc.method\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2NTcwNw=="}, "originalCommit": {"oid": "428bbd007d4b5b0b0003ab5c98cfb93ec834bc5f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjE3MjI0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzoyMTo0NFrOG9PS6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzoyMTo0NFrOG9PS6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2NjkyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1520#discussion_r466866920", "createdAt": "2020-08-07T07:21:44Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -127,20 +127,31 @@\n    */\n   public static final LongAttributeSetter HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n       LongAttributeSetter.create(\"http.response_content_length_uncompressed\");\n-  /** The service name, must be equal to the $service part in the span name. */\n+\n+  /** A string identifying the remoting system, e.g., \"grpc\", \"java_rmi\" or \"wcf\". */\n+  public static final StringAttributeSetter RPC_SYSTEM = StringAttributeSetter.create(\"rpc.system\");\n+  /** The full name of the service being called, including its package name, if applicable. */\n   public static final StringAttributeSetter RPC_SERVICE =\n       StringAttributeSetter.create(\"rpc.service\");\n-  /** RPC span event attribute with value \"SENT\" or \"RECEIVED\". */\n-  public static final StringAttributeSetter MESSAGE_TYPE =\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7639aa9e921fea3dce58c9191326784592acbc"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1319, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}