{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjAyNzIy", "number": 1300, "title": "Add implementation for value observers", "bodyText": "Currently we use a delta batcher with MinMaxSumCount as the default batcher for this. There are some questions about what should be the start time for this points. We can address this later.", "createdAt": "2020-06-01T20:39:07Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1300", "merged": true, "mergeCommit": {"oid": "a1bae308db93997b966c1ec41fa9feed0168d375"}, "closed": true, "closedAt": "2020-06-02T04:11:03Z", "author": {"login": "bogdandrutu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnHu7FgFqTQyMjIxNjQxMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnLMuZgFqTQyMjI5NjUxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjE2NDEy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1300#pullrequestreview-422216412", "createdAt": "2020-06-01T22:09:42Z", "commit": {"oid": "e63989dafbf3849732ba5aa296cb9d93ec95ee2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowOTo0MlrOGdbxCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowOTo0MlrOGdbxCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxNjgxMA==", "bodyText": "Please add an issue for this.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1300#discussion_r433516810", "createdAt": "2020-06-01T22:09:42Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleValueObserverSdk.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.metrics;\n+\n+import io.opentelemetry.metrics.DoubleValueObserver;\n+import io.opentelemetry.metrics.DoubleValueObserver.ResultDoubleValueObserver;\n+import io.opentelemetry.sdk.metrics.aggregator.Aggregator;\n+import io.opentelemetry.sdk.metrics.common.InstrumentType;\n+import io.opentelemetry.sdk.metrics.common.InstrumentValueType;\n+import io.opentelemetry.sdk.metrics.view.Aggregations;\n+\n+final class DoubleValueObserverSdk extends AbstractAsynchronousInstrument<ResultDoubleValueObserver>\n+    implements DoubleValueObserver {\n+\n+  DoubleValueObserverSdk(\n+      InstrumentDescriptor descriptor,\n+      MeterProviderSharedState meterProviderSharedState,\n+      MeterSharedState meterSharedState) {\n+    super(\n+        descriptor,\n+        meterProviderSharedState,\n+        meterSharedState,\n+        // TODO: Revisit the batcher used here, currently this does not remove duplicate records in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e63989dafbf3849732ba5aa296cb9d93ec95ee2a"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0542b52d69e5c04d41090720a5a82308efa81a91", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0542b52d69e5c04d41090720a5a82308efa81a91", "committedDate": "2020-06-01T22:21:05Z", "message": "Add implementation for value observers\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e63989dafbf3849732ba5aa296cb9d93ec95ee2a", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e63989dafbf3849732ba5aa296cb9d93ec95ee2a", "committedDate": "2020-06-01T20:37:37Z", "message": "Add implementation for value observers\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "0542b52d69e5c04d41090720a5a82308efa81a91", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0542b52d69e5c04d41090720a5a82308efa81a91", "committedDate": "2020-06-01T22:21:05Z", "message": "Add implementation for value observers\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjk2NTE5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1300#pullrequestreview-422296519", "createdAt": "2020-06-02T02:11:59Z", "commit": {"oid": "0542b52d69e5c04d41090720a5a82308efa81a91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2836, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}