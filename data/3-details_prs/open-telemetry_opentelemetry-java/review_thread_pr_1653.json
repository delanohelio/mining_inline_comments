{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3OTU4MTQw", "number": 1653, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNDoxMVrOEkIruw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjoxNzowN1rOElCLqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzI2NDU5OnYy", "diffSide": "RIGHT", "path": "integration_tests/tracecontext/README.md", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNDoxMVrOHS5HlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjozNDowMFrOHVCJfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3MjI0NQ==", "bodyText": "Can you add some notes in here about the environmental requirements to have this be runnable? It looks like you'll need to be on some sort of system that supports a bourne shell, and have python3/pip3 installed.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r489572245", "createdAt": "2020-09-16T16:34:11Z", "author": {"login": "jkwatson"}, "path": "integration_tests/tracecontext/README.md", "diffHunk": "@@ -0,0 +1,7 @@\n+# OpenTelemetry W3C Context Propagation tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d0e717753f83a4de4426cbd1fd298d9deac236"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk1NjMzMg==", "bodyText": "It'd be great if we can push a docker image with this test environment. I wouldn't block this PR on it, but then we'd even be able to run it as part of the build.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r489956332", "createdAt": "2020-09-17T04:11:47Z", "author": {"login": "anuraaga"}, "path": "integration_tests/tracecontext/README.md", "diffHunk": "@@ -0,0 +1,7 @@\n+# OpenTelemetry W3C Context Propagation tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3MjI0NQ=="}, "originalCommit": {"oid": "05d0e717753f83a4de4426cbd1fd298d9deac236"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMyNTQ0OA==", "bodyText": "I would have to guess that there's a stock ubuntu image out there with python3/pip3 already ready-to-go.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r490325448", "createdAt": "2020-09-17T15:03:50Z", "author": {"login": "jkwatson"}, "path": "integration_tests/tracecontext/README.md", "diffHunk": "@@ -0,0 +1,7 @@\n+# OpenTelemetry W3C Context Propagation tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3MjI0NQ=="}, "originalCommit": {"oid": "05d0e717753f83a4de4426cbd1fd298d9deac236"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3NzI2NA==", "bodyText": "updated readme and circleci config to run in docker image", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r490977264", "createdAt": "2020-09-18T14:11:50Z", "author": {"login": "malafeev"}, "path": "integration_tests/tracecontext/README.md", "diffHunk": "@@ -0,0 +1,7 @@\n+# OpenTelemetry W3C Context Propagation tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3MjI0NQ=="}, "originalCommit": {"oid": "05d0e717753f83a4de4426cbd1fd298d9deac236"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxNzM0Mw==", "bodyText": "circleci config reverted", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r491817343", "createdAt": "2020-09-21T06:34:00Z", "author": {"login": "malafeev"}, "path": "integration_tests/tracecontext/README.md", "diffHunk": "@@ -0,0 +1,7 @@\n+# OpenTelemetry W3C Context Propagation tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3MjI0NQ=="}, "originalCommit": {"oid": "05d0e717753f83a4de4426cbd1fd298d9deac236"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjMxMDE2OnYy", "diffSide": "RIGHT", "path": ".circleci/config.yml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDozOToxNVrOHUQAGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjozMjo1MlrOHVCIAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTczOQ==", "bodyText": "If we have failing tests, won't this fail every build until we get them fixed?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r490995739", "createdAt": "2020-09-18T14:39:15Z", "author": {"login": "jkwatson"}, "path": ".circleci/config.yml", "diffHunk": "@@ -107,13 +107,36 @@ jobs:\n           paths:\n             - ~/.gradle\n           key: gradle-{{ checksum \"build.gradle\" }}\n+# Integration tests\n+  integration-tests:\n+    environment:\n+      # Configure the JVM and Gradle to avoid OOM errors\n+      _JAVA_OPTIONS: \"-Xmx1g\"\n+      GRADLE_OPTS: \"-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2\"\n+    docker:\n+      - image: openkbs/jdk-mvn-py3\n+    steps:\n+      - checkout\n+      - restore_cache:\n+          keys:\n+            - gradle-w3c-{{ checksum \"build.gradle\" }}\n+      - run:\n+          name: Integration Tests\n+          command: cd integration_tests/tracecontext && ./tracecontext-integration-test.sh\n+      - run:\n+          <<: *publish_snapshots_task\n+      - save_cache:\n+          paths:\n+            - ~/.gradle\n+          key: gradle-w3c-{{ checksum \"build.gradle\" }}\n \n workflows:\n   version: 2\n   build_and_test:\n     jobs:\n       - build\n       - java11\n+      - integration-tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4656244798b123c96201228e5d27d791f877443"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAzOTAyNA==", "bodyText": "get docker image with jdk and python3 and pip3 made my day crazy... still not be able to do that", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r491039024", "createdAt": "2020-09-18T15:49:20Z", "author": {"login": "malafeev"}, "path": ".circleci/config.yml", "diffHunk": "@@ -107,13 +107,36 @@ jobs:\n           paths:\n             - ~/.gradle\n           key: gradle-{{ checksum \"build.gradle\" }}\n+# Integration tests\n+  integration-tests:\n+    environment:\n+      # Configure the JVM and Gradle to avoid OOM errors\n+      _JAVA_OPTIONS: \"-Xmx1g\"\n+      GRADLE_OPTS: \"-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2\"\n+    docker:\n+      - image: openkbs/jdk-mvn-py3\n+    steps:\n+      - checkout\n+      - restore_cache:\n+          keys:\n+            - gradle-w3c-{{ checksum \"build.gradle\" }}\n+      - run:\n+          name: Integration Tests\n+          command: cd integration_tests/tracecontext && ./tracecontext-integration-test.sh\n+      - run:\n+          <<: *publish_snapshots_task\n+      - save_cache:\n+          paths:\n+            - ~/.gradle\n+          key: gradle-w3c-{{ checksum \"build.gradle\" }}\n \n workflows:\n   version: 2\n   build_and_test:\n     jobs:\n       - build\n       - java11\n+      - integration-tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTczOQ=="}, "originalCommit": {"oid": "d4656244798b123c96201228e5d27d791f877443"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA0NTkzOQ==", "bodyText": "we can hold on that for a follow-up if you want. I'd be happy getting the tests in as a first step, then automating the running of them as a second step.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r491045939", "createdAt": "2020-09-18T16:00:19Z", "author": {"login": "jkwatson"}, "path": ".circleci/config.yml", "diffHunk": "@@ -107,13 +107,36 @@ jobs:\n           paths:\n             - ~/.gradle\n           key: gradle-{{ checksum \"build.gradle\" }}\n+# Integration tests\n+  integration-tests:\n+    environment:\n+      # Configure the JVM and Gradle to avoid OOM errors\n+      _JAVA_OPTIONS: \"-Xmx1g\"\n+      GRADLE_OPTS: \"-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2\"\n+    docker:\n+      - image: openkbs/jdk-mvn-py3\n+    steps:\n+      - checkout\n+      - restore_cache:\n+          keys:\n+            - gradle-w3c-{{ checksum \"build.gradle\" }}\n+      - run:\n+          name: Integration Tests\n+          command: cd integration_tests/tracecontext && ./tracecontext-integration-test.sh\n+      - run:\n+          <<: *publish_snapshots_task\n+      - save_cache:\n+          paths:\n+            - ~/.gradle\n+          key: gradle-w3c-{{ checksum \"build.gradle\" }}\n \n workflows:\n   version: 2\n   build_and_test:\n     jobs:\n       - build\n       - java11\n+      - integration-tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTczOQ=="}, "originalCommit": {"oid": "d4656244798b123c96201228e5d27d791f877443"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxNjk2Mg==", "bodyText": "I removed automation", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r491816962", "createdAt": "2020-09-21T06:32:52Z", "author": {"login": "malafeev"}, "path": ".circleci/config.yml", "diffHunk": "@@ -107,13 +107,36 @@ jobs:\n           paths:\n             - ~/.gradle\n           key: gradle-{{ checksum \"build.gradle\" }}\n+# Integration tests\n+  integration-tests:\n+    environment:\n+      # Configure the JVM and Gradle to avoid OOM errors\n+      _JAVA_OPTIONS: \"-Xmx1g\"\n+      GRADLE_OPTS: \"-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2\"\n+    docker:\n+      - image: openkbs/jdk-mvn-py3\n+    steps:\n+      - checkout\n+      - restore_cache:\n+          keys:\n+            - gradle-w3c-{{ checksum \"build.gradle\" }}\n+      - run:\n+          name: Integration Tests\n+          command: cd integration_tests/tracecontext && ./tracecontext-integration-test.sh\n+      - run:\n+          <<: *publish_snapshots_task\n+      - save_cache:\n+          paths:\n+            - ~/.gradle\n+          key: gradle-w3c-{{ checksum \"build.gradle\" }}\n \n workflows:\n   version: 2\n   build_and_test:\n     jobs:\n       - build\n       - java11\n+      - integration-tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTczOQ=="}, "originalCommit": {"oid": "d4656244798b123c96201228e5d27d791f877443"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjY4NTIzOnYy", "diffSide": "RIGHT", "path": ".circleci/config.yml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjoxNzowN1rOHUTpKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjozMjozMFrOHVCHbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1NTQwMA==", "bodyText": "this docker image has pip3, but output shows that pip3 not found.\nhow it's possible?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r491055400", "createdAt": "2020-09-18T16:17:07Z", "author": {"login": "malafeev"}, "path": ".circleci/config.yml", "diffHunk": "@@ -107,13 +107,36 @@ jobs:\n           paths:\n             - ~/.gradle\n           key: gradle-{{ checksum \"build.gradle\" }}\n+# Integration tests\n+  integration-tests:\n+    environment:\n+      # Configure the JVM and Gradle to avoid OOM errors\n+      _JAVA_OPTIONS: \"-Xmx1g\"\n+      GRADLE_OPTS: \"-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2\"\n+    docker:\n+      - image: openkbs/jdk-mvn-py3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1d4a481e544afaf78b95192d267b9dc71cd184b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3NzY3OQ==", "bodyText": "maybe it's not on the default PATH?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r491077679", "createdAt": "2020-09-18T16:59:34Z", "author": {"login": "jkwatson"}, "path": ".circleci/config.yml", "diffHunk": "@@ -107,13 +107,36 @@ jobs:\n           paths:\n             - ~/.gradle\n           key: gradle-{{ checksum \"build.gradle\" }}\n+# Integration tests\n+  integration-tests:\n+    environment:\n+      # Configure the JVM and Gradle to avoid OOM errors\n+      _JAVA_OPTIONS: \"-Xmx1g\"\n+      GRADLE_OPTS: \"-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2\"\n+    docker:\n+      - image: openkbs/jdk-mvn-py3", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1NTQwMA=="}, "originalCommit": {"oid": "c1d4a481e544afaf78b95192d267b9dc71cd184b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxNjgxMw==", "bodyText": "no, something different, I removed it now.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1653#discussion_r491816813", "createdAt": "2020-09-21T06:32:30Z", "author": {"login": "malafeev"}, "path": ".circleci/config.yml", "diffHunk": "@@ -107,13 +107,36 @@ jobs:\n           paths:\n             - ~/.gradle\n           key: gradle-{{ checksum \"build.gradle\" }}\n+# Integration tests\n+  integration-tests:\n+    environment:\n+      # Configure the JVM and Gradle to avoid OOM errors\n+      _JAVA_OPTIONS: \"-Xmx1g\"\n+      GRADLE_OPTS: \"-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2\"\n+    docker:\n+      - image: openkbs/jdk-mvn-py3", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1NTQwMA=="}, "originalCommit": {"oid": "c1d4a481e544afaf78b95192d267b9dc71cd184b"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1179, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}