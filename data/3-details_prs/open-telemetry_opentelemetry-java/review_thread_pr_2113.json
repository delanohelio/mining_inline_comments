{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0OTY2NDIw", "number": 2113, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQwNDoyMDozMVrOE7x19g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQwNDoyMDozMVrOE7x19g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMTE4MDcwOnYy", "diffSide": "RIGHT", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporter/otlp/OtlpGrpcSpanExporter.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQwNDoyMDozMVrOH3mzsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxODoyNzoxNVrOH4aKGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA2OTU1NQ==", "bodyText": "Thanks for the fixes! While we're here, should we extract constants for constant labels?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2113#discussion_r528069555", "createdAt": "2020-11-21T04:20:31Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporter/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -111,8 +112,7 @@ private OtlpGrpcSpanExporter(ManagedChannel channel, long deadlineMs) {\n    */\n   @Override\n   public CompletableResultCode export(Collection<SpanData> spans) {\n-    spansSeen.add(\n-        spans.size(), Labels.of(\"exporter\", OtlpGrpcMetricExporter.class.getSimpleName()));\n+    spansSeen.add(spans.size(), Labels.of(\"exporter\", OtlpGrpcSpanExporter.class.getSimpleName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b03b3feab531786a63d3988d51287154dcb8c5bd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA2OTY2Mw==", "bodyText": "Though as an aside, after seeing some metrics code recently, I sort of wish constant labels could be specified when creating a meter instead of only when observing to save the tedium of always extracting constants to save allocation", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2113#discussion_r528069663", "createdAt": "2020-11-21T04:21:54Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporter/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -111,8 +112,7 @@ private OtlpGrpcSpanExporter(ManagedChannel channel, long deadlineMs) {\n    */\n   @Override\n   public CompletableResultCode export(Collection<SpanData> spans) {\n-    spansSeen.add(\n-        spans.size(), Labels.of(\"exporter\", OtlpGrpcMetricExporter.class.getSimpleName()));\n+    spansSeen.add(spans.size(), Labels.of(\"exporter\", OtlpGrpcSpanExporter.class.getSimpleName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA2OTU1NQ=="}, "originalCommit": {"oid": "b03b3feab531786a63d3988d51287154dcb8c5bd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA2OTgxNA==", "bodyText": "This was a feature in the API that we decided to remove from the API for now. It may very well come back later, but we wanted to limit the features pre-GA, I think.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2113#discussion_r528069814", "createdAt": "2020-11-21T04:23:50Z", "author": {"login": "jkwatson"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporter/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -111,8 +112,7 @@ private OtlpGrpcSpanExporter(ManagedChannel channel, long deadlineMs) {\n    */\n   @Override\n   public CompletableResultCode export(Collection<SpanData> spans) {\n-    spansSeen.add(\n-        spans.size(), Labels.of(\"exporter\", OtlpGrpcMetricExporter.class.getSimpleName()));\n+    spansSeen.add(spans.size(), Labels.of(\"exporter\", OtlpGrpcSpanExporter.class.getSimpleName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA2OTU1NQ=="}, "originalCommit": {"oid": "b03b3feab531786a63d3988d51287154dcb8c5bd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA2OTk0NQ==", "bodyText": "yeah, I guess this could just be a constant for the labels instance, eh? Very happy to make that happen, either as a follow-up, or part of this PR.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2113#discussion_r528069945", "createdAt": "2020-11-21T04:25:01Z", "author": {"login": "jkwatson"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporter/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -111,8 +112,7 @@ private OtlpGrpcSpanExporter(ManagedChannel channel, long deadlineMs) {\n    */\n   @Override\n   public CompletableResultCode export(Collection<SpanData> spans) {\n-    spansSeen.add(\n-        spans.size(), Labels.of(\"exporter\", OtlpGrpcMetricExporter.class.getSimpleName()));\n+    spansSeen.add(spans.size(), Labels.of(\"exporter\", OtlpGrpcSpanExporter.class.getSimpleName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA2OTU1NQ=="}, "originalCommit": {"oid": "b03b3feab531786a63d3988d51287154dcb8c5bd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA3MTk2MQ==", "bodyText": "Either's fine with me this is approved :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2113#discussion_r528071961", "createdAt": "2020-11-21T04:47:45Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporter/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -111,8 +112,7 @@ private OtlpGrpcSpanExporter(ManagedChannel channel, long deadlineMs) {\n    */\n   @Override\n   public CompletableResultCode export(Collection<SpanData> spans) {\n-    spansSeen.add(\n-        spans.size(), Labels.of(\"exporter\", OtlpGrpcMetricExporter.class.getSimpleName()));\n+    spansSeen.add(spans.size(), Labels.of(\"exporter\", OtlpGrpcSpanExporter.class.getSimpleName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA2OTU1NQ=="}, "originalCommit": {"oid": "b03b3feab531786a63d3988d51287154dcb8c5bd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkxMDg3NA==", "bodyText": "easy enough to do, so I just amended this PR with the constant label extraction", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2113#discussion_r528910874", "createdAt": "2020-11-23T18:27:15Z", "author": {"login": "jkwatson"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporter/otlp/OtlpGrpcSpanExporter.java", "diffHunk": "@@ -111,8 +112,7 @@ private OtlpGrpcSpanExporter(ManagedChannel channel, long deadlineMs) {\n    */\n   @Override\n   public CompletableResultCode export(Collection<SpanData> spans) {\n-    spansSeen.add(\n-        spans.size(), Labels.of(\"exporter\", OtlpGrpcMetricExporter.class.getSimpleName()));\n+    spansSeen.add(spans.size(), Labels.of(\"exporter\", OtlpGrpcSpanExporter.class.getSimpleName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA2OTU1NQ=="}, "originalCommit": {"oid": "b03b3feab531786a63d3988d51287154dcb8c5bd"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1759, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}