{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NjI2NTIw", "number": 2258, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNDozNzoyNlrOFDRHow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjoxODoyMlrOFDj6Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4OTcwNTMxOnYy", "diffSide": "RIGHT", "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNDozNzoyNlrOIC1Kuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNDozNzoyNlrOIC1Kuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzOTE2Mw==", "bodyText": "@jkwatson see what I mentioned in the previous PR :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2258#discussion_r539839163", "createdAt": "2020-12-10T04:37:26Z", "author": {"login": "bogdandrutu"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "diffHunk": "@@ -37,8 +38,8 @@ public void add(double increment) {\n   static final class BoundInstrument extends AbstractBoundInstrument\n       implements DoubleCounter.BoundDoubleCounter {\n \n-    BoundInstrument(InstrumentProcessor instrumentProcessor) {\n-      super(instrumentProcessor.getAggregator());\n+    BoundInstrument(Aggregator aggregator) {\n+      super(aggregator);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ef9345341af562f72fe124fe01e2fedab36e12b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mjc4NDIzOnYy", "diffSide": "RIGHT", "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/AbstractSynchronousInstrument.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjoxODoyMlrOIDRbrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjoxODoyMlrOIDRbrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwMjI1Mg==", "bodyText": "interesting that the coupling is the reverse of what is in @jmacd's design in the spec. I don't think it's necessarily a problem, but it might point at some tweaks to the SDK spec being necessary.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2258#discussion_r540302252", "createdAt": "2020-12-10T16:18:22Z", "author": {"login": "jkwatson"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/AbstractSynchronousInstrument.java", "diffHunk": "@@ -41,7 +42,7 @@ public B bind(Labels labels) {\n     }\n \n     // Missing entry or no longer mapped, try to add a new entry.\n-    binding = boundFactory.apply(instrumentProcessor);\n+    binding = boundFactory.apply(instrumentProcessor.getAggregator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ef9345341af562f72fe124fe01e2fedab36e12b"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1681, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}