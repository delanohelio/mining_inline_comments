{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNDYwMjY0", "number": 1800, "title": "Update Jaeger exporter to map Resources to process tags", "bodyText": "fix #1609", "createdAt": "2020-10-14T15:31:08Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800", "merged": true, "mergeCommit": {"oid": "17ef49abf7e4ee99c2c181460b7a7a698d85ca27"}, "closed": true, "closedAt": "2020-10-21T02:05:29Z", "author": {"login": "malafeev"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSe8CWAH2gAyNTAzNDYwMjY0OjhjZGJjZmUwZWI4ZWE5Mzk3ZmRmMTg2YzcxMzBiMDg4ZTE1MjdhMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUjnVtAFqTUxMzI1NTMwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8cdbcfe0eb8ea9397fdf186c7130b088e1527a22", "author": {"user": {"login": "malafeev", "name": "Sergei Malafeev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8cdbcfe0eb8ea9397fdf186c7130b088e1527a22", "committedDate": "2020-10-14T15:30:36Z", "message": "#1609 Update Jaeger exporter to map Resources to process tags\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NTY3NDU4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#pullrequestreview-508567458", "createdAt": "2020-10-14T17:20:46Z", "commit": {"oid": "8cdbcfe0eb8ea9397fdf186c7130b088e1527a22"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoyMDo0NlrOHhdVZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoyMDo0NlrOHhdVZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg0NTY3MA==", "bodyText": "Why is this needed?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#discussion_r504845670", "createdAt": "2020-10-14T17:20:46Z", "author": {"login": "bogdandrutu"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/Adapter.java", "diffHunk": "@@ -192,7 +196,10 @@ private Adapter() {}\n   @VisibleForTesting\n   static <T> Model.KeyValue toKeyValue(AttributeKey<T> key, T value) {\n     Model.KeyValue.Builder builder = Model.KeyValue.newBuilder();\n-    builder.setKey(key.getKey());\n+    builder.setKey(\n+        key.getKey()\n+            .replace(\"InstrumentationLibrary.name\", \"otel.library.name\")\n+            .replace(\"InstrumentationLibrary.version\", \"otel.library.version\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdbcfe0eb8ea9397fdf186c7130b088e1527a22"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4ODUxMzg5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#pullrequestreview-508851389", "createdAt": "2020-10-15T00:04:42Z", "commit": {"oid": "8cdbcfe0eb8ea9397fdf186c7130b088e1527a22"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMDowNDo0MlrOHhsLzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMDowNToyMFrOHhsMkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA4ODk3NA==", "bodyText": "Thanks @malafeev - looks like there was some confusion on the issue, yeah you shouldn't need to do any sort of name translation logic.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#discussion_r505088974", "createdAt": "2020-10-15T00:04:42Z", "author": {"login": "anuraaga"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/Adapter.java", "diffHunk": "@@ -192,7 +196,10 @@ private Adapter() {}\n   @VisibleForTesting\n   static <T> Model.KeyValue toKeyValue(AttributeKey<T> key, T value) {\n     Model.KeyValue.Builder builder = Model.KeyValue.newBuilder();\n-    builder.setKey(key.getKey());\n+    builder.setKey(\n+        key.getKey()\n+            .replace(\"InstrumentationLibrary.name\", \"otel.library.name\")\n+            .replace(\"InstrumentationLibrary.version\", \"otel.library.version\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg0NTY3MA=="}, "originalCommit": {"oid": "8cdbcfe0eb8ea9397fdf186c7130b088e1527a22"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA4OTE3MA==", "bodyText": "Resource corresponds to process, so we want to add these to the process's tags. Can you move this logic to the process here?\nhttps://github.com/open-telemetry/opentelemetry-java/blob/master/exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java#L89", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#discussion_r505089170", "createdAt": "2020-10-15T00:05:20Z", "author": {"login": "anuraaga"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/Adapter.java", "diffHunk": "@@ -75,6 +75,10 @@ private Adapter() {}\n     target.addAllLogs(toJaegerLogs(span.getEvents()));\n     target.addAllReferences(toSpanRefs(span.getLinks()));\n \n+    if (span.getResource() != null && span.getResource().getAttributes() != null) {\n+      target.addAllTags(toKeyValues(span.getResource().getAttributes()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdbcfe0eb8ea9397fdf186c7130b088e1527a22"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c00c19f61cb43618f89b6db6e90ba9cc7eb49b2", "author": {"user": {"login": "malafeev", "name": "Sergei Malafeev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7c00c19f61cb43618f89b6db6e90ba9cc7eb49b2", "committedDate": "2020-10-16T15:25:19Z", "message": "add resource attributes to process tags\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b13536fee97013122f5d06de6565c68530846031", "author": {"user": {"login": "malafeev", "name": "Sergei Malafeev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b13536fee97013122f5d06de6565c68530846031", "committedDate": "2020-10-16T15:49:15Z", "message": "fix checkstyle error\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNjQ0NTEw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#pullrequestreview-510644510", "createdAt": "2020-10-16T16:56:19Z", "commit": {"oid": "b13536fee97013122f5d06de6565c68530846031"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjo1NjoxOVrOHjIjiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjo1NjoxOVrOHjIjiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwMjM3Nw==", "bodyText": "Did you consider using a java 8 Stream with a groupingBy collector to do this work? It might read a little more clearly. It's a one-liner in this case:\n    return spans.stream().collect(Collectors.groupingBy(SpanData::getResource));", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#discussion_r506602377", "createdAt": "2020-10-16T16:56:19Z", "author": {"login": "jkwatson"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/Adapter.java", "diffHunk": "@@ -39,6 +42,22 @@\n \n   private Adapter() {}\n \n+  /**\n+   * Groups {@link SpanData}'s by {@link Resource}.\n+   *\n+   * @param spans the list of spans to be grouped\n+   * @return the map of grouped spans\n+   */\n+  static Map<Resource, List<SpanData>> groupByResource(Collection<SpanData> spans) {\n+    Map<Resource, List<SpanData>> result = new HashMap<>();\n+    for (SpanData spanData : spans) {\n+      Resource resource = spanData.getResource();\n+      List<SpanData> spanDataList = result.computeIfAbsent(resource, k -> new ArrayList<>());\n+      spanDataList.add(spanData);\n+    }\n+    return result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13536fee97013122f5d06de6565c68530846031"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNjQ3OTYy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#pullrequestreview-510647962", "createdAt": "2020-10-16T17:01:06Z", "commit": {"oid": "b13536fee97013122f5d06de6565c68530846031"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowMTowNlrOHjItnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowMTowNlrOHjItnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwNDk1Ng==", "bodyText": "I'd extract lines 120-132 into a separate method, and then you could use a java 8 Stream/map to collapse this logic significantly.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#discussion_r506604956", "createdAt": "2020-10-16T17:01:06Z", "author": {"login": "jkwatson"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -104,26 +109,42 @@ private JaegerGrpcSpanExporter(String serviceName, ManagedChannel channel, long\n    */\n   @Override\n   public CompletableResultCode export(Collection<SpanData> spans) {\n-    Collector.PostSpansRequest request =\n-        Collector.PostSpansRequest.newBuilder()\n-            .setBatch(\n-                Model.Batch.newBuilder()\n-                    .addAllSpans(Adapter.toJaeger(spans))\n-                    .setProcess(this.process)\n-                    .build())\n-            .build();\n-\n     CollectorServiceGrpc.CollectorServiceFutureStub stub = this.stub;\n     if (deadlineMs > 0) {\n       stub = stub.withDeadlineAfter(deadlineMs, TimeUnit.MILLISECONDS);\n     }\n \n+    Map<Resource, List<SpanData>> resourceAndSpanData = Adapter.groupByResource(spans);\n+    List<Collector.PostSpansRequest> requests = new ArrayList<>();\n+    for (Map.Entry<Resource, List<SpanData>> entry : resourceAndSpanData.entrySet()) {\n+      Process.Builder builder = this.processBuilder.clone();\n+      if (entry.getKey().getAttributes() != null) {\n+        builder.addAllTags(Adapter.toKeyValues(entry.getKey().getAttributes()));\n+      }\n+\n+      Collector.PostSpansRequest request =\n+          Collector.PostSpansRequest.newBuilder()\n+              .setBatch(\n+                  Model.Batch.newBuilder()\n+                      .addAllSpans(Adapter.toJaeger(entry.getValue()))\n+                      .setProcess(builder.build())\n+                      .build())\n+              .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13536fee97013122f5d06de6565c68530846031"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76aaf3a956526f1326b718eeaf735b7877d667b4", "author": {"user": {"login": "malafeev", "name": "Sergei Malafeev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/76aaf3a956526f1326b718eeaf735b7877d667b4", "committedDate": "2020-10-19T14:31:17Z", "message": "refactored according to review comments\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjM5MDQ3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#pullrequestreview-512239047", "createdAt": "2020-10-19T23:57:52Z", "commit": {"oid": "76aaf3a956526f1326b718eeaf735b7877d667b4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMzo1Nzo1M1rOHklvRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDowMzoxN1rOHkl1hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyOTA5NQ==", "bodyText": "We can remove this code now right?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#discussion_r508129095", "createdAt": "2020-10-19T23:57:53Z", "author": {"login": "anuraaga"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/Adapter.java", "diffHunk": "@@ -75,6 +75,10 @@ private Adapter() {}\n     target.addAllLogs(toJaegerLogs(span.getEvents()));\n     target.addAllReferences(toSpanRefs(span.getLinks()));\n \n+    if (span.getResource() != null && span.getResource().getAttributes() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76aaf3a956526f1326b718eeaf735b7877d667b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzMDY5NA==", "bodyText": "Don't need null check for attributes", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#discussion_r508130694", "createdAt": "2020-10-20T00:03:17Z", "author": {"login": "anuraaga"}, "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -137,6 +144,21 @@ public void onFailure(Throwable t) {\n     return result;\n   }\n \n+  private Collector.PostSpansRequest buildRequest(Resource resource, List<SpanData> spans) {\n+    Process.Builder builder = this.processBuilder.clone();\n+    if (resource.getAttributes() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76aaf3a956526f1326b718eeaf735b7877d667b4"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f76addffad8f119131ecbd27a21487743b812ee", "author": {"user": {"login": "malafeev", "name": "Sergei Malafeev"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2f76addffad8f119131ecbd27a21487743b812ee", "committedDate": "2020-10-20T03:44:04Z", "message": "implement comments\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTEzNDMy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#pullrequestreview-512913432", "createdAt": "2020-10-20T16:20:14Z", "commit": {"oid": "2f76addffad8f119131ecbd27a21487743b812ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMjU1MzAw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1800#pullrequestreview-513255300", "createdAt": "2020-10-21T02:05:22Z", "commit": {"oid": "2f76addffad8f119131ecbd27a21487743b812ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4242, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}