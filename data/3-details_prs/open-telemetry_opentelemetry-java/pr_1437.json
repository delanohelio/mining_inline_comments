{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNTE1MjUy", "number": 1437, "title": "Update Attributes API to comply the spec ", "bodyText": "Update attributes API to the latest spec: open-telemetry/opentelemetry-specification#777", "createdAt": "2020-07-20T14:37:14Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437", "merged": true, "mergeCommit": {"oid": "792f0f452b971e635b3f97fd1e0ffc0ec936d531"}, "closed": true, "closedAt": "2020-08-18T19:03:33Z", "author": {"login": "thisthat"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2ypeigFqTQ1MTY2OTg0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAL0QSAFqTQ2OTc0MTY3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjY5ODQ0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-451669844", "createdAt": "2020-07-20T14:38:32Z", "commit": {"oid": "b2b6fc559eb85ad46f6452986841a22270270de2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDozODozMlrOG0QYuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDozODozMlrOG0QYuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ0NzYxMQ==", "bodyText": "Simple if would be much simpler :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r457447611", "createdAt": "2020-07-20T14:38:32Z", "author": {"login": "iNikem"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -114,7 +114,31 @@ public static Resource getTelemetrySdk() {\n    */\n   public static Resource create(Attributes attributes) {\n     checkAttributes(Objects.requireNonNull(attributes, \"attributes\"));\n-    return new AutoValue_Resource(attributes);\n+    Attributes.Builder attrBuilder = Attributes.newBuilder();\n+    attributes.forEach(new NullRemover(attrBuilder));\n+    return new AutoValue_Resource(attrBuilder.build());\n+  }\n+\n+  private static final class NullRemover implements KeyValueConsumer<AttributeValue> {\n+    private final Attributes.Builder attrBuilder;\n+\n+    private NullRemover(Attributes.Builder attrBuilder) {\n+      this.attrBuilder = attrBuilder;\n+    }\n+\n+    @Override\n+    public void consume(String key, AttributeValue value) {\n+      switch (value.getType()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b6fc559eb85ad46f6452986841a22270270de2"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODE0ODEw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-451814810", "createdAt": "2020-07-20T17:30:26Z", "commit": {"oid": "b2b6fc559eb85ad46f6452986841a22270270de2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzozMDoyNlrOG0YOLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzozMDoyNlrOG0YOLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU3NTk4MA==", "bodyText": "How about \"NullValueFilter\" ?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r457575980", "createdAt": "2020-07-20T17:30:26Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -114,7 +114,31 @@ public static Resource getTelemetrySdk() {\n    */\n   public static Resource create(Attributes attributes) {\n     checkAttributes(Objects.requireNonNull(attributes, \"attributes\"));\n-    return new AutoValue_Resource(attributes);\n+    Attributes.Builder attrBuilder = Attributes.newBuilder();\n+    attributes.forEach(new NullRemover(attrBuilder));\n+    return new AutoValue_Resource(attrBuilder.build());\n+  }\n+\n+  private static final class NullRemover implements KeyValueConsumer<AttributeValue> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2b6fc559eb85ad46f6452986841a22270270de2"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDE0ODQz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-452014843", "createdAt": "2020-07-20T22:57:41Z", "commit": {"oid": "b2b6fc559eb85ad46f6452986841a22270270de2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjgyMjY2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-452682266", "createdAt": "2020-07-21T17:34:32Z", "commit": {"oid": "387ce57026581b0868ebc21b2ef39905287c7f00"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTUxMTM5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-452951139", "createdAt": "2020-07-22T02:23:58Z", "commit": {"oid": "387ce57026581b0868ebc21b2ef39905287c7f00"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMjoyMzo1OFrOG1QWSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMjoyMzo1OFrOG1QWSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ5NTU2MQ==", "bodyText": "Why other values like null array is not removed?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r458495561", "createdAt": "2020-07-22T02:23:58Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -114,7 +114,25 @@ public static Resource getTelemetrySdk() {\n    */\n   public static Resource create(Attributes attributes) {\n     checkAttributes(Objects.requireNonNull(attributes, \"attributes\"));\n-    return new AutoValue_Resource(attributes);\n+    Attributes.Builder attrBuilder = Attributes.newBuilder();\n+    attributes.forEach(new NullValueFilter(attrBuilder));\n+    return new AutoValue_Resource(attrBuilder.build());\n+  }\n+\n+  private static final class NullValueFilter implements KeyValueConsumer<AttributeValue> {\n+    private final Attributes.Builder attrBuilder;\n+\n+    private NullValueFilter(Attributes.Builder attrBuilder) {\n+      this.attrBuilder = attrBuilder;\n+    }\n+\n+    @Override\n+    public void consume(String key, AttributeValue value) {\n+      if (value.getType() == AttributeValue.Type.STRING && value.getStringValue() == null) {\n+        return;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "387ce57026581b0868ebc21b2ef39905287c7f00"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzYwMDE2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-458760016", "createdAt": "2020-07-30T21:11:51Z", "commit": {"oid": "387ce57026581b0868ebc21b2ef39905287c7f00"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "387ce57026581b0868ebc21b2ef39905287c7f00", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/387ce57026581b0868ebc21b2ef39905287c7f00", "committedDate": "2020-07-21T06:38:36Z", "message": "Fix error prone error"}, "afterCommit": {"oid": "18e3719ac988d6acfede8a8462726db51e115263", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/18e3719ac988d6acfede8a8462726db51e115263", "committedDate": "2020-08-04T08:43:01Z", "message": "Uniform null handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTk2Mjc3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-461196277", "createdAt": "2020-08-04T21:44:41Z", "commit": {"oid": "d9944df874dc8670e72618b6f0926f18c92c287f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTo0NDo0MVrOG7yk-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTo0NDo0MVrOG7yk-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0NzgzNA==", "bodyText": "It might be easier just to call isEmpty() rather than comparing explicitly to an empty list. And, this makes me think we could have an isEmpty() method on the AttributeValue, and then you can skip all of the switch branches and have the logic much more simple.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r465347834", "createdAt": "2020-08-04T21:44:41Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -116,7 +117,45 @@ public static Resource getTelemetrySdk() {\n    */\n   public static Resource create(Attributes attributes) {\n     checkAttributes(Objects.requireNonNull(attributes, \"attributes\"));\n-    return new AutoValue_Resource(attributes);\n+    Attributes.Builder attrBuilder = Attributes.newBuilder();\n+    attributes.forEach(new NullValueFilter(attrBuilder));\n+    return new AutoValue_Resource(attrBuilder.build());\n+  }\n+\n+  private static final class NullValueFilter implements KeyValueConsumer<AttributeValue> {\n+    private final Attributes.Builder attrBuilder;\n+\n+    private NullValueFilter(Attributes.Builder attrBuilder) {\n+      this.attrBuilder = attrBuilder;\n+    }\n+\n+    @Override\n+    public void consume(String key, AttributeValue value) {\n+      boolean ignore = false;\n+      switch (value.getType()) {\n+        case STRING:\n+          ignore = value.getStringValue() == null;\n+          break;\n+        case LONG_ARRAY:\n+          ignore = value.getLongArrayValue().equals(Collections.<Long>emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9944df874dc8670e72618b6f0926f18c92c287f"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzg1NzA0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-461385704", "createdAt": "2020-08-05T06:51:52Z", "commit": {"oid": "7aa5eacf81d5ef89255005ae917b6c51d5ddb10d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjo1MTo1MlrOG78iWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjo1MTo1MlrOG78iWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxMTAwMA==", "bodyText": "I thought we got on the same page but see this didn't change yet - can't we filter in the producer here?\nhttps://github.com/open-telemetry/opentelemetry-java/blob/master/api/src/main/java/io/opentelemetry/common/ImmutableKeyValuePairs.java#L58", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r465511000", "createdAt": "2020-08-05T06:51:52Z", "author": {"login": "anuraaga"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -116,7 +116,25 @@ public static Resource getTelemetrySdk() {\n    */\n   public static Resource create(Attributes attributes) {\n     checkAttributes(Objects.requireNonNull(attributes, \"attributes\"));\n-    return new AutoValue_Resource(attributes);\n+    Attributes.Builder attrBuilder = Attributes.newBuilder();\n+    attributes.forEach(new NullValueFilter(attrBuilder));\n+    return new AutoValue_Resource(attrBuilder.build());\n+  }\n+\n+  private static final class NullValueFilter implements KeyValueConsumer<AttributeValue> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aa5eacf81d5ef89255005ae917b6c51d5ddb10d"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxODMzNTMy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-461833532", "createdAt": "2020-08-05T16:33:19Z", "commit": {"oid": "7aa5eacf81d5ef89255005ae917b6c51d5ddb10d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjozMzoxOVrOG8RjFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjozMzoxOVrOG8RjFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1NTI1Mw==", "bodyText": "we could just have this be concrete and return false and only override it for the types that support emptiness.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r465855253", "createdAt": "2020-08-05T16:33:19Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/common/AttributeValue.java", "diffHunk": "@@ -244,6 +244,15 @@ public double getDoubleValue() {\n    */\n   public abstract Type getType();\n \n+  /**\n+   * Returns {@code true} if the {@code AttributeValue} contains a {@code null} value or it is an\n+   * empty array.\n+   *\n+   * @return {@code true} if the {@code AttributeValue} is empty.\n+   * @since 0.8.0\n+   */\n+  public abstract boolean isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aa5eacf81d5ef89255005ae917b6c51d5ddb10d"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMjEzMzA5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-462213309", "createdAt": "2020-08-06T06:12:42Z", "commit": {"oid": "bf546e77777c2d96390a20642c0baaae130ddc93"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d349e45efe582f5d52d841a94374f643df14c771", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d349e45efe582f5d52d841a94374f643df14c771", "committedDate": "2020-08-17T07:16:13Z", "message": "Forbit null values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0209eddc5c5cc9acee75474276e934d025374a06", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0209eddc5c5cc9acee75474276e934d025374a06", "committedDate": "2020-08-17T07:16:13Z", "message": "Simplify code and better naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a648e44bd05931f32d6db21ff4465c3545692597", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a648e44bd05931f32d6db21ff4465c3545692597", "committedDate": "2020-08-17T07:16:14Z", "message": "Fix error prone error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a97baaf967791969b544e4f343f66b5db5a370f8", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a97baaf967791969b544e4f343f66b5db5a370f8", "committedDate": "2020-08-17T07:16:14Z", "message": "Uniform null handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83fe7c4f469fa21d4c892c47346c20b1f2792b4a", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/83fe7c4f469fa21d4c892c47346c20b1f2792b4a", "committedDate": "2020-08-17T07:16:14Z", "message": "Improve tests for SpanAttributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34cdcca2afc7a881b01cf908f8deefe4d8573dc5", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/34cdcca2afc7a881b01cf908f8deefe4d8573dc5", "committedDate": "2020-08-17T07:16:15Z", "message": "Improve tests for Resource Attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3785f6f786424eb5ff2da112190fcecaa8c30c6", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c3785f6f786424eb5ff2da112190fcecaa8c30c6", "committedDate": "2020-08-17T07:16:15Z", "message": "Change interface of AttributeValue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22e19484bf0d53707a58f94111c59e1f1a00a672", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/22e19484bf0d53707a58f94111c59e1f1a00a672", "committedDate": "2020-08-17T07:16:15Z", "message": "isEmpty overrided only when necessary"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b90449d25edc588b4224fc194c24357cb54abede", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b90449d25edc588b4224fc194c24357cb54abede", "committedDate": "2020-08-17T07:16:55Z", "message": "Update Attributes API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bdb1cf6eecd2c0f38cd10c064bc6a192cf7ecd7", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2bdb1cf6eecd2c0f38cd10c064bc6a192cf7ecd7", "committedDate": "2020-08-17T07:16:55Z", "message": "Remove unused code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98372f3f4844e12e77729ae316ecd3dc1f05ea4e", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/98372f3f4844e12e77729ae316ecd3dc1f05ea4e", "committedDate": "2020-08-17T07:13:34Z", "message": "Remove unused code"}, "afterCommit": {"oid": "2bdb1cf6eecd2c0f38cd10c064bc6a192cf7ecd7", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2bdb1cf6eecd2c0f38cd10c064bc6a192cf7ecd7", "committedDate": "2020-08-17T07:16:55Z", "message": "Remove unused code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MjQxNTI5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-468241529", "createdAt": "2020-08-17T07:51:19Z", "commit": {"oid": "2bdb1cf6eecd2c0f38cd10c064bc6a192cf7ecd7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzo1MToxOVrOHBeDZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzo1MjoyNFrOHBeFYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMwMzAxMw==", "bodyText": "How about shouldAdd and return false when it shouldn't? Having trouble following this method", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r471303013", "createdAt": "2020-08-17T07:51:19Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -155,12 +155,32 @@ public Attributes build() {\n       return sortAndFilterToAttributes(data.toArray());\n     }\n \n+    private boolean checkKeyValue(String key, AttributeValue value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bdb1cf6eecd2c0f38cd10c064bc6a192cf7ecd7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMwMzUyMg==", "bodyText": "This is pretty slow but maybe we don't need to worry.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r471303522", "createdAt": "2020-08-17T07:52:24Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -155,12 +155,32 @@ public Attributes build() {\n       return sortAndFilterToAttributes(data.toArray());\n     }\n \n+    private boolean checkKeyValue(String key, AttributeValue value) {\n+      if (key == null || key.length() == 0) {\n+        return true;\n+      }\n+      if (value == null || value.isEmpty()) {\n+        int index = data.indexOf(key);\n+        if (index == -1) {\n+          return true;\n+        }\n+        // Remove key/value pair\n+        data.remove(index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bdb1cf6eecd2c0f38cd10c064bc6a192cf7ecd7"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ed949be06c5d72ad310ab6a1b48a28bcff758e8a", "committedDate": "2020-08-17T08:15:15Z", "message": "Rename method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MjYyMTcz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-468262173", "createdAt": "2020-08-17T08:22:52Z", "commit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTY0NzIx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-468564721", "createdAt": "2020-08-17T15:26:03Z", "commit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyNjowM1rOHBthyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyNjowM1rOHBthyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1NjU1Mw==", "bodyText": "Having this method, which looks like a simple query method, also have the side effect of removing data is very surprising. The name of this method should reflect that it is potentially an update operation. Also, how does this handle the fact that the key might be in the data twice at this point? Don't we need to iterate through the entire array to remove all instances of the key?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r471556553", "createdAt": "2020-08-17T15:26:03Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -155,12 +155,32 @@ public Attributes build() {\n       return sortAndFilterToAttributes(data.toArray());\n     }\n \n+    private boolean doNotAdd(String key, AttributeValue value) {\n+      if (key == null || key.length() == 0) {\n+        return true;\n+      }\n+      if (value == null || value.isEmpty()) {\n+        int index = data.indexOf(key);\n+        if (index == -1) {\n+          return true;\n+        }\n+        // Remove key/value pair\n+        data.remove(index);\n+        data.remove(index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTY1MTcx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-468565171", "createdAt": "2020-08-17T15:26:35Z", "commit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyNjozNVrOHBtjHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyNjozNVrOHBtjHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1Njg5NQ==", "bodyText": "rather than repeating this logic over and over again, can we just call the setAttribute method with the attribute value above?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r471556895", "createdAt": "2020-08-17T15:26:35Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -172,8 +192,12 @@ public Builder setAttribute(String key, AttributeValue value) {\n      * @return this Builder\n      */\n     public Builder setAttribute(String key, String value) {\n+      AttributeValue v = stringAttributeValue(value);\n+      if (doNotAdd(key, v)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTY3NzE5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-468567719", "createdAt": "2020-08-17T15:29:29Z", "commit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyOToyOVrOHBtqpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNToyOToyOVrOHBtqpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1ODgyMA==", "bodyText": "could we just return a static final AttributeValue instance, rather than creating a new one for each call?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r471558820", "createdAt": "2020-08-17T15:29:29Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/common/AttributeValue.java", "diffHunk": "@@ -325,12 +341,13 @@ public final Type getType() {\n   @AutoValue\n   abstract static class AttributeValueStringArray extends AttributeValue {\n \n+    private static final List<String> EMPTY = Collections.<String>emptyList();\n+\n     AttributeValueStringArray() {}\n \n     static AttributeValue create(String... stringValues) {\n       if (stringValues == null) {\n-        return new AutoValue_AttributeValue_AttributeValueStringArray(\n-            Collections.<String>emptyList());\n+        return new AutoValue_AttributeValue_AttributeValueStringArray(EMPTY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NjQwNjU3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-468640657", "createdAt": "2020-08-17T16:54:02Z", "commit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo1NDowMlrOHBw2JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo1NDowMlrOHBw2JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYxMDkxNw==", "bodyText": "interesting. now that empty arrays are explicitly allowed, I wonder if \"isEmpty\" is no longer the right name. Maybe isMissing ?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#discussion_r471610917", "createdAt": "2020-08-17T16:54:02Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -314,11 +312,10 @@ public void setAttribute(String key, AttributeValue value) {\n         logger.log(Level.FINE, \"Calling setAttribute() on an ended Span.\");\n         return;\n       }\n-      if (value == null || (value.getType().equals(STRING) && value.getStringValue() == null)) {\n-        if (attributes == null) {\n-          return;\n+      if (value == null || value.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed949be06c5d72ad310ab6a1b48a28bcff758e8a"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "075ce06164eeb9d75f56d4bcd3075b00b0168cf3", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/075ce06164eeb9d75f56d4bcd3075b00b0168cf3", "committedDate": "2020-08-18T06:31:43Z", "message": "Address PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0387979dc327bec41231ab512ca077835fcb52b7", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0387979dc327bec41231ab512ca077835fcb52b7", "committedDate": "2020-08-18T06:34:38Z", "message": "fix javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzQxNjcz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1437#pullrequestreview-469741673", "createdAt": "2020-08-18T19:03:16Z", "commit": {"oid": "0387979dc327bec41231ab512ca077835fcb52b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2592, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}