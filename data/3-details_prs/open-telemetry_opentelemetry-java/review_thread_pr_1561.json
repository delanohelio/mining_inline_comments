{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzM4NzQ1", "number": 1561, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxMjo1M1rOEaVORw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxNzozMlrOEaVVwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDQ2MTUxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxMjo1M1rOHDsYYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxMzoxNFrOHDsZPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNDkxMw==", "bodyText": "I'm having trouble grokking this code.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r473634913", "createdAt": "2020-08-20T06:12:53Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNTEzMw==", "bodyText": "Sorry accidentally hit Add single comment, continuing below", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r473635133", "createdAt": "2020-08-20T06:13:14Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNDkxMw=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDQ2NzkwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxNDozMVrOHDscWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxNDozMVrOHDscWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNTkzMA==", "bodyText": "Instead of having atPosition is it ok to do something like this in this branch?\n// remaining is vendor id, must be 13 characters or less\nif (key.length() - i > 13) {\n  return false;\n}", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r473635930", "createdAt": "2020-08-20T06:14:31Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDQ3MTQ4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxNToxNVrOHDsekg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODowNzo1OVrOHE2kFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA==", "bodyText": "I may just be misgrokking, but isn't atPosition 0 for most of the loop rather than the actual atPosition? If my reading is right, my above suggestion would probably solve it but it also means there's a unit test missing for the current buggy state.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r473636498", "createdAt": "2020-08-20T06:15:15Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzODQyMQ==", "bodyText": "atSeenCount is incremented only when atPosition changes to i. This way, this if is checked only for atPosition > 0.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r473638421", "createdAt": "2020-08-20T06:18:09Z", "author": {"login": "thisthat"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY0MDI4NA==", "bodyText": "Yeah but atPosition is declared inside the loop, which I think is the original bug. So except for when key[i] == '@', atPosition == 0 for the remainder of the loop since it's initialized to 0. Sorry if I'm missing it though I've tried to stare long and this is what I came up with.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r473640284", "createdAt": "2020-08-20T06:20:43Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY0NzYzMw==", "bodyText": "Oh! You are totally right! I miss that bit! We are indeed missing a test here!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r473647633", "createdAt": "2020-08-20T06:30:46Z", "author": {"login": "thisthat"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzMTUzMw==", "bodyText": "I'm not following the problem. Can you give me a key that we're not handling correctly, so I can add a unit test for the issue?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r474131533", "createdAt": "2020-08-20T16:46:43Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MjczNw==", "bodyText": "Note, I'm rewriting this chunk of code to make it clearer. But, having an example key that we're not handling correctly would be very useful (because I don't see the issue).", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r474142737", "createdAt": "2020-08-20T17:06:20Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5MTIxNA==", "bodyText": "I've pushed the rewrite. Let me know if that helps at all with understanding what's going on in here.\nAnd, please give me a concrete key example case we're not handling correctly if there is one.  :)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r474191214", "createdAt": "2020-08-20T18:34:49Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NjU1Nw==", "bodyText": "I'm pretty sure 12345678901234567890@nr is valid but fails when I added this to your branch. Basically any time the tenant id is longer than 13 characters, since the current logic is resetting the atPosition to the beinning of the string.\nMy suggestion of not bothering with atPosition still stands :)\n\n\n  @Test\n  void testValidLongVendorKey() {\n    TraceState result = EMPTY.toBuilder().set(\"12345678901234567890@nr\", FIRST_VALUE).build();\n    assertThat(result.get(\"12345678901234567890@nr\")).isEqualTo(FIRST_VALUE);\n  }", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r474386557", "createdAt": "2020-08-21T03:21:10Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwMzYzMQ==", "bodyText": "doh! I know you said it like 5 times, but I totally missed that we were resetting the atPosition inside the loop.  \ud83e\udd26", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r474803631", "createdAt": "2020-08-21T16:30:56Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg1MDMyNA==", "bodyText": "fixed and pushed.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r474850324", "createdAt": "2020-08-21T18:07:59Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNjQ5OA=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDQ4MDY1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxNzozM1rOHDskaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODowNzo1MlrOHE2j3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNzk5NQ==", "bodyText": "Also, guess we should avoid unicode comparisons like this and stick with simple ones we implement", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r473637995", "createdAt": "2020-08-20T06:17:33Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {\n+          return false;\n+        }\n+      }\n+    }\n+    if (atSeenCount == 0) {\n+      // if it's not the vendor format (with an '@' sign), the key must start with a letter.\n+      return !Character.isDigit(key.charAt(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzMjA4Mg==", "bodyText": "that's fair. I'll extract the digit logic into a separate method and us that.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r474132082", "createdAt": "2020-08-20T16:47:38Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {\n+          return false;\n+        }\n+      }\n+    }\n+    if (atSeenCount == 0) {\n+      // if it's not the vendor format (with an '@' sign), the key must start with a letter.\n+      return !Character.isDigit(key.charAt(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNzk5NQ=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg1MDI3MA==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1561#discussion_r474850270", "createdAt": "2020-08-21T18:07:52Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/TraceState.java", "diffHunk": "@@ -235,26 +235,53 @@ public static Entry create(String key, String value) {\n   // Key is opaque string up to 256 characters printable. It MUST begin with a lowercase letter, and\n   // can only contain lowercase letters a-z, digits 0-9, underscores _, dashes -, asterisks *, and\n   // forward slashes /.  For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n-  // vendor name.\n+  // vendor name. The tenant id (before the '@') is limited to 240 characters and the vendor id is\n+  // limited to 13 characters. If in the multi-tenant vendor format, then the first character\n+  // may additionally be digit.\n+  //\n   // todo: benchmark this implementation\n   private static boolean validateKey(String key) {\n-    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isNumberOrDigit(key.charAt(0))) {\n+    if (key.length() > KEY_MAX_SIZE || key.isEmpty() || !isLowercaseLetterOrDigit(key.charAt(0))) {\n       return false;\n     }\n     int atSeenCount = 0;\n     for (int i = 1; i < key.length(); i++) {\n       char c = key.charAt(i);\n-      if (!isNumberOrDigit(c) && c != '_' && c != '-' && c != '@' && c != '*' && c != '/') {\n+      if (!isLowercaseLetterOrDigit(c)\n+          && c != '_'\n+          && c != '-'\n+          && c != '@'\n+          && c != '*'\n+          && c != '/') {\n         return false;\n       }\n-      if ((c == '@') && (++atSeenCount > 1)) {\n-        return false;\n+      int atPosition = 0;\n+      if (c == '@') {\n+        atPosition = i;\n+        // tenant id must be 240 characters or less\n+        if (i > 240) {\n+          return false;\n+        }\n+        atSeenCount++;\n+        if (atSeenCount > 1) {\n+          return false;\n+        }\n       }\n+      if (atSeenCount == 1) {\n+        // vendor id must be 13 characters or less\n+        if ((i - atPosition) > 13) {\n+          return false;\n+        }\n+      }\n+    }\n+    if (atSeenCount == 0) {\n+      // if it's not the vendor format (with an '@' sign), the key must start with a letter.\n+      return !Character.isDigit(key.charAt(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzNzk5NQ=="}, "originalCommit": {"oid": "d4ac2eaf9395973f70ecb793ee0fb8ea5332c879"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1359, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}