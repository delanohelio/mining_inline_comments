{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMTk0OTc0", "number": 2368, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOTozMDo1OVrOFHuRPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNjozMToxNlrOFH2sYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjQyNDI4OnYy", "diffSide": "RIGHT", "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReader.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOTozMDo1OVrOIJRylw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMDoxNzowOVrOIJTKEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5OTU3NQ==", "bodyText": "I like to use a prefix such as test_ for methods that are not only visible for testing but exist solely for testing.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546599575", "createdAt": "2020-12-21T09:30:59Z", "author": {"login": "Oberon00"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReader.java", "diffHunk": "@@ -159,6 +159,11 @@ protected Builder fromConfigMap(\n       }\n       return this;\n     }\n+\n+    // Visible for testing\n+    long getExportIntervalMillis() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDM0MQ==", "bodyText": "I don't think I've ever done that but don't mind it either. Will wait for another vote and rename.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546620341", "createdAt": "2020-12-21T10:14:00Z", "author": {"login": "anuraaga"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReader.java", "diffHunk": "@@ -159,6 +159,11 @@ protected Builder fromConfigMap(\n       }\n       return this;\n     }\n+\n+    // Visible for testing\n+    long getExportIntervalMillis() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5OTU3NQ=="}, "originalCommit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMTk2OA==", "bodyText": "No strong opinion here either. I just think it would be nice to mark the method as \"exists only for testing\" vs \"visibility extended for testing\".", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546621968", "createdAt": "2020-12-21T10:17:09Z", "author": {"login": "Oberon00"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReader.java", "diffHunk": "@@ -159,6 +159,11 @@ protected Builder fromConfigMap(\n       }\n       return this;\n     }\n+\n+    // Visible for testing\n+    long getExportIntervalMillis() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5OTU3NQ=="}, "originalCommit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzgwNDQ4OnYy", "diffSide": "RIGHT", "path": "exporters/otlp/metrics/src/test/java/io/opentelemetry/exporter/otlp/metrics/OtlpGrpcMetricExporterTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNjozMToxNlrOIJeTqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMjoyNzo1N1rOIJsKIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgwNDY0OA==", "bodyText": "rather than exposing a method, we can dig into the internals and keep the production code a bit cleaner. I can't say which is better or worse, but at least if we just dig into the internals, we've reduced a couple lines of production code and a discussion about naming those methods. ;)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546804648", "createdAt": "2020-12-21T16:31:16Z", "author": {"login": "jkwatson"}, "path": "exporters/otlp/metrics/src/test/java/io/opentelemetry/exporter/otlp/metrics/OtlpGrpcMetricExporterTest.java", "diffHunk": "@@ -70,11 +68,9 @@ void configTest() {\n     Properties options = new Properties();\n     options.put(\"otel.exporter.otlp.metric.timeout\", \"12\");\n     options.put(\"otel.exporter.otlp.insecure\", \"true\");\n-    OtlpGrpcMetricExporterBuilder config = OtlpGrpcMetricExporter.builder();\n-    OtlpGrpcMetricExporterBuilder spy = Mockito.spy(config);\n-    spy.readProperties(options);\n-    verify(spy).setDeadlineMs(12);\n-    verify(spy).setUseTls(false);\n+    OtlpGrpcMetricExporterBuilder config = OtlpGrpcMetricExporter.builder().readProperties(options);\n+    assertThat(config.getUseTls()).isFalse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzMTU4NQ==", "bodyText": "Nice", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r547031585", "createdAt": "2020-12-22T02:27:57Z", "author": {"login": "anuraaga"}, "path": "exporters/otlp/metrics/src/test/java/io/opentelemetry/exporter/otlp/metrics/OtlpGrpcMetricExporterTest.java", "diffHunk": "@@ -70,11 +68,9 @@ void configTest() {\n     Properties options = new Properties();\n     options.put(\"otel.exporter.otlp.metric.timeout\", \"12\");\n     options.put(\"otel.exporter.otlp.insecure\", \"true\");\n-    OtlpGrpcMetricExporterBuilder config = OtlpGrpcMetricExporter.builder();\n-    OtlpGrpcMetricExporterBuilder spy = Mockito.spy(config);\n-    spy.readProperties(options);\n-    verify(spy).setDeadlineMs(12);\n-    verify(spy).setUseTls(false);\n+    OtlpGrpcMetricExporterBuilder config = OtlpGrpcMetricExporter.builder().readProperties(options);\n+    assertThat(config.getUseTls()).isFalse();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgwNDY0OA=="}, "originalCommit": {"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1592, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}