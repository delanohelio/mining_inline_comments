{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1Mjk5MjIw", "number": 1120, "title": "Mark all threads/pools as daemon.", "bodyText": "Our SDK shouldn't prevent apps/cli tools/etc. from exiting.  Mark all threads/pools as daemon.\nCloses #1093", "createdAt": "2020-04-17T19:20:00Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120", "merged": true, "mergeCommit": {"oid": "04c34bf5da03192f12f4488b1fd5df151616d44d"}, "closed": true, "closedAt": "2020-04-20T14:12:40Z", "author": {"login": "johnbley"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYj6eqgH2gAyNDA1Mjk5MjIwOmNlNTJiYWY3YTQ4ZGQ3MDU4YzczYjNlYjkwMjBhZGNlZjExNDVjMTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZfuvdAFqTM5NjQ5MTg4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ce52baf7a48dd7058c73b3eb9020adcef1145c15", "author": {"user": {"login": "johnbley", "name": "John Bley"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ce52baf7a48dd7058c73b3eb9020adcef1145c15", "committedDate": "2020-04-17T16:30:49Z", "message": "Mark all threads/pools as daemon."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzI1NzM1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#pullrequestreview-395725735", "createdAt": "2020-04-17T19:41:39Z", "commit": {"oid": "ce52baf7a48dd7058c73b3eb9020adcef1145c15"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo0MTozOVrOGHa1hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo0MTozOVrOGHa1hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzMjkwMA==", "bodyText": "discussion on the very very similar #1094 says this needs to go inside the try block because security managers can make this illegal.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#discussion_r410432900", "createdAt": "2020-04-17T19:41:39Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/export/BatchSpansProcessor.java", "diffHunk": "@@ -237,6 +237,7 @@ public BatchSpansProcessor build() {\n \n   private static Thread newThread(Runnable runnable) {\n     Thread thread = MoreExecutors.platformThreadFactory().newThread(runnable);\n+    thread.setDaemon(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce52baf7a48dd7058c73b3eb9020adcef1145c15"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzI1OTE1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#pullrequestreview-395725915", "createdAt": "2020-04-17T19:41:56Z", "commit": {"oid": "ce52baf7a48dd7058c73b3eb9020adcef1145c15"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo0MTo1NlrOGHa19A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo0MTo1NlrOGHa19A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzMzAxMg==", "bodyText": "same. move into the try block", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#discussion_r410433012", "createdAt": "2020-04-17T19:41:56Z", "author": {"login": "jkwatson"}, "path": "sdk_contrib/async_processor/src/main/java/io/opentelemetry/sdk/contrib/trace/export/DisruptorEventQueue.java", "diffHunk": "@@ -249,6 +249,7 @@ private ThreadFactoryWithName(String threadName) {\n     @Override\n     public Thread newThread(Runnable runnable) {\n       Thread thread = MoreExecutors.platformThreadFactory().newThread(runnable);\n+      thread.setDaemon(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce52baf7a48dd7058c73b3eb9020adcef1145c15"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95e18c712315a118509a98889c90efed73dfb0f2", "author": {"user": {"login": "johnbley", "name": "John Bley"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/95e18c712315a118509a98889c90efed73dfb0f2", "committedDate": "2020-04-17T19:49:56Z", "message": "Move setDaemon calls inside try blocks as they can throw a security exception."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzM2MTI3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#pullrequestreview-395736127", "createdAt": "2020-04-17T19:59:26Z", "commit": {"oid": "95e18c712315a118509a98889c90efed73dfb0f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1OToyNlrOGHbVsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1OToyNlrOGHbVsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0MTEzNg==", "bodyText": "since there is a (admittedly rare) security manager-induced failure mode here, can we add a comment to the javadoc for this class about it?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#discussion_r410441136", "createdAt": "2020-04-17T19:59:26Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReader.java", "diffHunk": "@@ -135,7 +136,13 @@ public IntervalMetricReader build() {\n   @SuppressWarnings(\"FutureReturnValueIgnored\")\n   private IntervalMetricReader(InternalState internalState) {\n     this.exporter = new Exporter(internalState);\n-    this.scheduler = Executors.newScheduledThreadPool(1, MoreExecutors.platformThreadFactory());\n+    this.scheduler =\n+        Executors.newScheduledThreadPool(\n+            1,\n+            new ThreadFactoryBuilder()\n+                .setDaemon(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e18c712315a118509a98889c90efed73dfb0f2"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9225df86084d4953f0271fabb77ab3547e0cd61f", "author": {"user": {"login": "johnbley", "name": "John Bley"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9225df86084d4953f0271fabb77ab3547e0cd61f", "committedDate": "2020-04-17T20:10:46Z", "message": "Add javadoc comment about possibility of SecurityException."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzQ0NDQ0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#pullrequestreview-395744444", "createdAt": "2020-04-17T20:14:06Z", "commit": {"oid": "9225df86084d4953f0271fabb77ab3547e0cd61f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd4c91dc3abc4d82aefe7ce9b338f0f596586b55", "author": {"user": {"login": "johnbley", "name": "John Bley"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/cd4c91dc3abc4d82aefe7ce9b338f0f596586b55", "committedDate": "2020-04-18T14:11:22Z", "message": "Create common/DaemonThreadFactory and adjust all thread creation to use it."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTE5NDY5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#pullrequestreview-395919469", "createdAt": "2020-04-18T14:39:41Z", "commit": {"oid": "cd4c91dc3abc4d82aefe7ce9b338f0f596586b55"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxNDozOTo0MlrOGHrhKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxNDozOTo0MlrOGHrhKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcwNjIxNw==", "bodyText": "Can we enhance this a bit and accept a thread name prefix + a local atomic integer and name the thread prefix + \"_\" + atomicval++?\nThat way we encapsulate everything in this class. What do you think?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#discussion_r410706217", "createdAt": "2020-04-18T14:39:42Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/common/DaemonThreadFactory.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.common;\n+\n+import com.google.common.util.concurrent.MoreExecutors;\n+import java.util.concurrent.ThreadFactory;\n+\n+/**\n+ * A {@link ThreadFactory} that delegates to {@code MoreExecutors.platformThreadFactory()} and marks\n+ * all threads as daemon.\n+ */\n+public class DaemonThreadFactory implements ThreadFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd4c91dc3abc4d82aefe7ce9b338f0f596586b55"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe5faf044c19cfaf64c539363cdc3195e58e7346", "author": {"user": {"login": "johnbley", "name": "John Bley"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fe5faf044c19cfaf64c539363cdc3195e58e7346", "committedDate": "2020-04-20T13:29:43Z", "message": "Apply a name prefix in the DaemonThreadPool; rework and simplify several calling sites accordingly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDkxODg4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1120#pullrequestreview-396491888", "createdAt": "2020-04-20T14:12:18Z", "commit": {"oid": "fe5faf044c19cfaf64c539363cdc3195e58e7346"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2977, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}