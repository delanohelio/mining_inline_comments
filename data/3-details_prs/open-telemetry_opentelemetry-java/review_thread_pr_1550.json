{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NTM2NTE1", "number": 1550, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNDo1MToxMVrOEZhSDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MTowMlrOEZnDVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTk1MTQ4OnYy", "diffSide": "RIGHT", "path": "QUICKSTART.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNDo1MToxMVrOHCYTiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTowMjoxOFrOHCY08A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1NzQxOQ==", "bodyText": "extra } after Link", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1550#discussion_r472257419", "createdAt": "2020-08-18T14:51:11Z", "author": {"login": "iNikem"}, "path": "QUICKSTART.md", "diffHunk": "@@ -402,6 +403,43 @@ tracerProvider.addSpanProcessor(BatchSpanProcessor.newBuilder(\n ).build());\n ```\n \n+### TraceConfig\n+\n+`TraceConfig` associated with `TracerSdkProvider` can be updated via system properties, \n+environment variables and builder `set*` methods.  \n+\n+```java\n+// Get TraceConfig associated with TracerSdkProvider \n+TraceConfig traceConfig = OpenTelemetrySdk.getTracerProvider().getActiveTraceConfig();\n+\n+// Get TraceConfig Builder\n+Builder builder = traceConfig.toBuilder();\n+\n+// Read configuration options from system properties\n+builder.readSystemProperties();\n+\n+// Read configuration options from environment variables\n+builder.readEnvironmentVariables()\n+\n+// Set options via builder.set* methods, e.g.\n+builder.setMaxNumberOfLinks(10);\n+\n+// Update the resulting TraceConfig instance\n+OpenTelemetrySdk.getTracerProvider().updateActiveTraceConfig(builder.build());\n+```\n+\n+Supported system properties and environment variables:\n+\n+| System property                  | Environment variable             | Purpose                                            | \n+|----------------------------------|----------------------------------|----------------------------------------------------|       \n+| otel.config.sampler.probability  | OTEL_CONFIG_SAMPLER_PROBABILITY  | Sampler which is used when constructing a new span |                        \n+| otel.config.max.attrs            | OTEL_CONFIG_MAX_ATTRS            | Max number of attributes per span                  |                        \n+| otel.config.max.events           | OTEL_CONFIG_MAX_EVENTS           | Max number of Events per span                      |                        \n+| otel.config.max.links            | OTEL_CONFIG_MAX_LINKS            | Max number of Link} entries per span               |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5adeb6d02e996b7a4f8fadab812e0688a3a0166"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI2NTk2OA==", "bodyText": "fixed", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1550#discussion_r472265968", "createdAt": "2020-08-18T15:02:18Z", "author": {"login": "malafeev"}, "path": "QUICKSTART.md", "diffHunk": "@@ -402,6 +403,43 @@ tracerProvider.addSpanProcessor(BatchSpanProcessor.newBuilder(\n ).build());\n ```\n \n+### TraceConfig\n+\n+`TraceConfig` associated with `TracerSdkProvider` can be updated via system properties, \n+environment variables and builder `set*` methods.  \n+\n+```java\n+// Get TraceConfig associated with TracerSdkProvider \n+TraceConfig traceConfig = OpenTelemetrySdk.getTracerProvider().getActiveTraceConfig();\n+\n+// Get TraceConfig Builder\n+Builder builder = traceConfig.toBuilder();\n+\n+// Read configuration options from system properties\n+builder.readSystemProperties();\n+\n+// Read configuration options from environment variables\n+builder.readEnvironmentVariables()\n+\n+// Set options via builder.set* methods, e.g.\n+builder.setMaxNumberOfLinks(10);\n+\n+// Update the resulting TraceConfig instance\n+OpenTelemetrySdk.getTracerProvider().updateActiveTraceConfig(builder.build());\n+```\n+\n+Supported system properties and environment variables:\n+\n+| System property                  | Environment variable             | Purpose                                            | \n+|----------------------------------|----------------------------------|----------------------------------------------------|       \n+| otel.config.sampler.probability  | OTEL_CONFIG_SAMPLER_PROBABILITY  | Sampler which is used when constructing a new span |                        \n+| otel.config.max.attrs            | OTEL_CONFIG_MAX_ATTRS            | Max number of attributes per span                  |                        \n+| otel.config.max.events           | OTEL_CONFIG_MAX_EVENTS           | Max number of Events per span                      |                        \n+| otel.config.max.links            | OTEL_CONFIG_MAX_LINKS            | Max number of Link} entries per span               |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1NzQxOQ=="}, "originalCommit": {"oid": "e5adeb6d02e996b7a4f8fadab812e0688a3a0166"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTk1Mzk1OnYy", "diffSide": "RIGHT", "path": "QUICKSTART.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNDo1MTo0MlrOHCYVJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNToxNzoyM1rOHCZewQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1NzgzMQ==", "bodyText": "For all MAX attributes it would be useful to say what happens if that limit is exceeded.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1550#discussion_r472257831", "createdAt": "2020-08-18T14:51:42Z", "author": {"login": "iNikem"}, "path": "QUICKSTART.md", "diffHunk": "@@ -402,6 +403,43 @@ tracerProvider.addSpanProcessor(BatchSpanProcessor.newBuilder(\n ).build());\n ```\n \n+### TraceConfig\n+\n+`TraceConfig` associated with `TracerSdkProvider` can be updated via system properties, \n+environment variables and builder `set*` methods.  \n+\n+```java\n+// Get TraceConfig associated with TracerSdkProvider \n+TraceConfig traceConfig = OpenTelemetrySdk.getTracerProvider().getActiveTraceConfig();\n+\n+// Get TraceConfig Builder\n+Builder builder = traceConfig.toBuilder();\n+\n+// Read configuration options from system properties\n+builder.readSystemProperties();\n+\n+// Read configuration options from environment variables\n+builder.readEnvironmentVariables()\n+\n+// Set options via builder.set* methods, e.g.\n+builder.setMaxNumberOfLinks(10);\n+\n+// Update the resulting TraceConfig instance\n+OpenTelemetrySdk.getTracerProvider().updateActiveTraceConfig(builder.build());\n+```\n+\n+Supported system properties and environment variables:\n+\n+| System property                  | Environment variable             | Purpose                                            | \n+|----------------------------------|----------------------------------|----------------------------------------------------|       \n+| otel.config.sampler.probability  | OTEL_CONFIG_SAMPLER_PROBABILITY  | Sampler which is used when constructing a new span |                        \n+| otel.config.max.attrs            | OTEL_CONFIG_MAX_ATTRS            | Max number of attributes per span                  |                        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5adeb6d02e996b7a4f8fadab812e0688a3a0166"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI2NzYxNg==", "bodyText": "javadoc doesn't say what happens, I suppose exceeded should be dropped.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1550#discussion_r472267616", "createdAt": "2020-08-18T15:04:42Z", "author": {"login": "malafeev"}, "path": "QUICKSTART.md", "diffHunk": "@@ -402,6 +403,43 @@ tracerProvider.addSpanProcessor(BatchSpanProcessor.newBuilder(\n ).build());\n ```\n \n+### TraceConfig\n+\n+`TraceConfig` associated with `TracerSdkProvider` can be updated via system properties, \n+environment variables and builder `set*` methods.  \n+\n+```java\n+// Get TraceConfig associated with TracerSdkProvider \n+TraceConfig traceConfig = OpenTelemetrySdk.getTracerProvider().getActiveTraceConfig();\n+\n+// Get TraceConfig Builder\n+Builder builder = traceConfig.toBuilder();\n+\n+// Read configuration options from system properties\n+builder.readSystemProperties();\n+\n+// Read configuration options from environment variables\n+builder.readEnvironmentVariables()\n+\n+// Set options via builder.set* methods, e.g.\n+builder.setMaxNumberOfLinks(10);\n+\n+// Update the resulting TraceConfig instance\n+OpenTelemetrySdk.getTracerProvider().updateActiveTraceConfig(builder.build());\n+```\n+\n+Supported system properties and environment variables:\n+\n+| System property                  | Environment variable             | Purpose                                            | \n+|----------------------------------|----------------------------------|----------------------------------------------------|       \n+| otel.config.sampler.probability  | OTEL_CONFIG_SAMPLER_PROBABILITY  | Sampler which is used when constructing a new span |                        \n+| otel.config.max.attrs            | OTEL_CONFIG_MAX_ATTRS            | Max number of attributes per span                  |                        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1NzgzMQ=="}, "originalCommit": {"oid": "e5adeb6d02e996b7a4f8fadab812e0688a3a0166"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI3MTk4Nw==", "bodyText": "Yes, extra attributes/links/events will be dropped. Too long values will be truncated.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1550#discussion_r472271987", "createdAt": "2020-08-18T15:10:53Z", "author": {"login": "iNikem"}, "path": "QUICKSTART.md", "diffHunk": "@@ -402,6 +403,43 @@ tracerProvider.addSpanProcessor(BatchSpanProcessor.newBuilder(\n ).build());\n ```\n \n+### TraceConfig\n+\n+`TraceConfig` associated with `TracerSdkProvider` can be updated via system properties, \n+environment variables and builder `set*` methods.  \n+\n+```java\n+// Get TraceConfig associated with TracerSdkProvider \n+TraceConfig traceConfig = OpenTelemetrySdk.getTracerProvider().getActiveTraceConfig();\n+\n+// Get TraceConfig Builder\n+Builder builder = traceConfig.toBuilder();\n+\n+// Read configuration options from system properties\n+builder.readSystemProperties();\n+\n+// Read configuration options from environment variables\n+builder.readEnvironmentVariables()\n+\n+// Set options via builder.set* methods, e.g.\n+builder.setMaxNumberOfLinks(10);\n+\n+// Update the resulting TraceConfig instance\n+OpenTelemetrySdk.getTracerProvider().updateActiveTraceConfig(builder.build());\n+```\n+\n+Supported system properties and environment variables:\n+\n+| System property                  | Environment variable             | Purpose                                            | \n+|----------------------------------|----------------------------------|----------------------------------------------------|       \n+| otel.config.sampler.probability  | OTEL_CONFIG_SAMPLER_PROBABILITY  | Sampler which is used when constructing a new span |                        \n+| otel.config.max.attrs            | OTEL_CONFIG_MAX_ATTRS            | Max number of attributes per span                  |                        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1NzgzMQ=="}, "originalCommit": {"oid": "e5adeb6d02e996b7a4f8fadab812e0688a3a0166"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI3NjY3Mw==", "bodyText": "updated", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1550#discussion_r472276673", "createdAt": "2020-08-18T15:17:23Z", "author": {"login": "malafeev"}, "path": "QUICKSTART.md", "diffHunk": "@@ -402,6 +403,43 @@ tracerProvider.addSpanProcessor(BatchSpanProcessor.newBuilder(\n ).build());\n ```\n \n+### TraceConfig\n+\n+`TraceConfig` associated with `TracerSdkProvider` can be updated via system properties, \n+environment variables and builder `set*` methods.  \n+\n+```java\n+// Get TraceConfig associated with TracerSdkProvider \n+TraceConfig traceConfig = OpenTelemetrySdk.getTracerProvider().getActiveTraceConfig();\n+\n+// Get TraceConfig Builder\n+Builder builder = traceConfig.toBuilder();\n+\n+// Read configuration options from system properties\n+builder.readSystemProperties();\n+\n+// Read configuration options from environment variables\n+builder.readEnvironmentVariables()\n+\n+// Set options via builder.set* methods, e.g.\n+builder.setMaxNumberOfLinks(10);\n+\n+// Update the resulting TraceConfig instance\n+OpenTelemetrySdk.getTracerProvider().updateActiveTraceConfig(builder.build());\n+```\n+\n+Supported system properties and environment variables:\n+\n+| System property                  | Environment variable             | Purpose                                            | \n+|----------------------------------|----------------------------------|----------------------------------------------------|       \n+| otel.config.sampler.probability  | OTEL_CONFIG_SAMPLER_PROBABILITY  | Sampler which is used when constructing a new span |                        \n+| otel.config.max.attrs            | OTEL_CONFIG_MAX_ATTRS            | Max number of attributes per span                  |                        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1NzgzMQ=="}, "originalCommit": {"oid": "e5adeb6d02e996b7a4f8fadab812e0688a3a0166"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjg5Njg2OnYy", "diffSide": "RIGHT", "path": "QUICKSTART.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MTowMlrOHChmow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMToyOTo1MlrOHCsKgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTc2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `TraceConfig` associated with `TracerSdkProvider` can be updated via system properties, \n          \n          \n            \n            The `TraceConfig` associated with a `TracerSdkProvider` can be updated via system properties,", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1550#discussion_r472409763", "createdAt": "2020-08-18T18:51:02Z", "author": {"login": "jkwatson"}, "path": "QUICKSTART.md", "diffHunk": "@@ -402,6 +403,43 @@ tracerProvider.addSpanProcessor(BatchSpanProcessor.newBuilder(\n ).build());\n ```\n \n+### TraceConfig\n+\n+`TraceConfig` associated with `TracerSdkProvider` can be updated via system properties, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b20aa2e9915a0c164404c7ad184e6a4a4fce1477"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU4Mjc4NQ==", "bodyText": "done", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1550#discussion_r472582785", "createdAt": "2020-08-19T01:29:52Z", "author": {"login": "malafeev"}, "path": "QUICKSTART.md", "diffHunk": "@@ -402,6 +403,43 @@ tracerProvider.addSpanProcessor(BatchSpanProcessor.newBuilder(\n ).build());\n ```\n \n+### TraceConfig\n+\n+`TraceConfig` associated with `TracerSdkProvider` can be updated via system properties, ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTc2Mw=="}, "originalCommit": {"oid": "b20aa2e9915a0c164404c7ad184e6a4a4fce1477"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1353, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}