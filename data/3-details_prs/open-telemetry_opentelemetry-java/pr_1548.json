{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MzY1MTQ2", "number": 1548, "title": "Add ResourceProvider SPI to allow for custom Resources", "bodyText": "Partially addresses #1454", "createdAt": "2020-08-18T10:19:20Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1548", "merged": true, "mergeCommit": {"oid": "94eaef4d815dc17e959191a5e39640b2727f8da8"}, "closed": true, "closedAt": "2020-08-18T19:59:44Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAETjogH2gAyNDY5MzY1MTQ2OjE1ZjdkMWFmNDNlMjVkMDE4YzU0NjZkODk4NGMwNGZhYThiZTc2ZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAMnoXgFqTQ2OTc4MzkzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "15f7d1af43e25d018c5466d8984c04faa8be76d5", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/15f7d1af43e25d018c5466d8984c04faa8be76d5", "committedDate": "2020-08-18T10:18:13Z", "message": "Add ResourceProvider SPI to allow for custom Resources"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MTkyMDAx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1548#pullrequestreview-469192001", "createdAt": "2020-08-18T10:24:50Z", "commit": {"oid": "15f7d1af43e25d018c5466d8984c04faa8be76d5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDoyNDo1MFrOHCNNGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDoyNToxMlrOHCNOCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA3NTU0NA==", "bodyText": "We should probably add a property with a CSV list of implementation class name to exclude to allow users to disable resources they don't want to include automatically.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1548#discussion_r472075544", "createdAt": "2020-08-18T10:24:50Z", "author": {"login": "anuraaga"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -74,6 +75,14 @@ private static String readVersion() {\n     return properties.getProperty(\"sdk.version\");\n   }\n \n+  private static Resource readResourceFromProviders() {\n+    Resource result = Resource.EMPTY;\n+    for (ResourceProvider resourceProvider : ServiceLoader.load(ResourceProvider.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15f7d1af43e25d018c5466d8984c04faa8be76d5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA3NTc4Nw==", "bodyText": "Attributes is immutable guess you don't need to copy?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1548#discussion_r472075787", "createdAt": "2020-08-18T10:25:12Z", "author": {"login": "anuraaga"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/resources/ResourceProvider.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.opentelemetry.sdk.resources;\n+\n+import io.opentelemetry.common.AttributeValue;\n+import io.opentelemetry.common.Attributes;\n+import io.opentelemetry.common.ReadableKeyValuePairs.KeyValueConsumer;\n+import javax.annotation.concurrent.ThreadSafe;\n+\n+/**\n+ * ResourceProvider is a service provider for additional {@link Resource}s.\n+ * Users of OpenTelemetry SDK can use it to add custom {@link Resource} attributes.\n+ *\n+ * <p>Fully qualified class name of the implementation should be registered in {@code\n+ * META-INF/services/io.opentelemetry.sdk.resources.ResourceProvider}.\n+ *\n+ * <p>Resources specified via system properties or environment variables will take precedence\n+ * over any value supplied via {@code ResourceProvider}.\n+ *\n+ * @see EnvAutodetectResource\n+ */\n+@ThreadSafe\n+public abstract class ResourceProvider {\n+\n+  public Resource create() {\n+    final Attributes.Builder attrBuilder = Attributes.newBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15f7d1af43e25d018c5466d8984c04faa8be76d5"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b586893ab376c33d700f17360cc559e1d14b154", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/3b586893ab376c33d700f17360cc559e1d14b154", "committedDate": "2020-08-18T10:46:53Z", "message": "Polish"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MjEwMTA3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1548#pullrequestreview-469210107", "createdAt": "2020-08-18T10:52:47Z", "commit": {"oid": "3b586893ab376c33d700f17360cc559e1d14b154"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfd907fc5ca7f68b85b5917c5f1057c272ce229a", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/cfd907fc5ca7f68b85b5917c5f1057c272ce229a", "committedDate": "2020-08-18T12:28:47Z", "message": "Polish"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NDc4OTgx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1548#pullrequestreview-469478981", "createdAt": "2020-08-18T13:54:26Z", "commit": {"oid": "cfd907fc5ca7f68b85b5917c5f1057c272ce229a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzo1NDoyNlrOHCVuQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzo1NDoyNlrOHCVuQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIxNTEwNA==", "bodyText": "Think follow-up PR is fine.\nProbably not TraceConfig - we'd have to stop using the static instance, and I guess this doesn't need to be programmatic (can just programmatically set Resource instead) so it's only for control from command line.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1548#discussion_r472215104", "createdAt": "2020-08-18T13:54:26Z", "author": {"login": "anuraaga"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/resources/Resource.java", "diffHunk": "@@ -74,6 +75,14 @@ private static String readVersion() {\n     return properties.getProperty(\"sdk.version\");\n   }\n \n+  private static Resource readResourceFromProviders() {\n+    Resource result = Resource.EMPTY;\n+    for (ResourceProvider resourceProvider : ServiceLoader.load(ResourceProvider.class)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA3NTU0NA=="}, "originalCommit": {"oid": "15f7d1af43e25d018c5466d8984c04faa8be76d5"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzgzOTM1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1548#pullrequestreview-469783935", "createdAt": "2020-08-18T19:59:23Z", "commit": {"oid": "cfd907fc5ca7f68b85b5917c5f1057c272ce229a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2347, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}