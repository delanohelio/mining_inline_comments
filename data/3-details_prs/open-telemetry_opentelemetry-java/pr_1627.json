{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxODY3MjQ2", "number": 1627, "title": "Add rationale.md to document design decisions that people may be curi\u2026", "bodyText": "\u2026ous about later.\nFixes #688", "createdAt": "2020-09-08T08:14:22Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1627", "merged": true, "mergeCommit": {"oid": "7bce323700bec453bd5f9681a3c3cae33aeaae8b"}, "closed": true, "closedAt": "2020-09-09T14:52:09Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGzHm9gH2gAyNDgxODY3MjQ2OmM5MjRkZGUzNzJkNTE1N2UxMjgxNGQzZDc0YjJiYmI3Yzk5MmUxNWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHNQAKgFqTQ4NTA4MTk2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c924dde372d5157e12814d3d74b2bbb7c992e15f", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c924dde372d5157e12814d3d74b2bbb7c992e15f", "committedDate": "2020-09-08T08:14:15Z", "message": "Add rationale.md to document design decisions that people may be curious about later."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8017cf55692b8e29912a8618519f9687c43fe2f", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b8017cf55692b8e29912a8618519f9687c43fe2f", "committedDate": "2020-09-08T08:13:32Z", "message": "Add rationale.md to document design decisions that people may be curious about later."}, "afterCommit": {"oid": "c924dde372d5157e12814d3d74b2bbb7c992e15f", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c924dde372d5157e12814d3d74b2bbb7c992e15f", "committedDate": "2020-09-08T08:14:15Z", "message": "Add rationale.md to document design decisions that people may be curious about later."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58a4de1eb6719288b04a4214c7d763099750b4d4", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/58a4de1eb6719288b04a4214c7d763099750b4d4", "committedDate": "2020-09-08T08:14:53Z", "message": "Formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTEwNzQ0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1627#pullrequestreview-483910744", "createdAt": "2020-09-08T08:30:38Z", "commit": {"oid": "58a4de1eb6719288b04a4214c7d763099750b4d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODozMDozOFrOHOScTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODozMDozOFrOHOScTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc0NDI3MQ==", "bodyText": "In that case, wouldn't the compiler tell you that span is not available anymore? So you could then switch to using a nested try/catch or a try/finally instead of try().", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1627#discussion_r484744271", "createdAt": "2020-09-08T08:30:38Z", "author": {"login": "Oberon00"}, "path": "docs/rationale.md", "diffHunk": "@@ -0,0 +1,26 @@\n+# OpenTelemetry Rationale\n+\n+When creating a library, often times designs and decisions are made that get lost over time. This\n+document tries to collect information on design decisions to answer common questions that may come\n+up when you explore the SDK.\n+\n+## Span not `Closeable`\n+\n+Because a `Span` has a lifecycle, where it is started and MUST be ended, it seems intuitive that a\n+`Span` should implement `Closeable` or `AutoCloseable` to allow usage with Java try-with-resources\n+construct. However, `Span`s are unique in that they must still be alive when handling exceptions,\n+which try-with-resources does not allow. Take this example:\n+\n+```java\n+Span span = tracer.buildSpan(\"someWork\").start();\n+try (Scope scope = tracer.scopeManager().activate(span)) {\n+    // Do things.\n+} catch (Exception ex) {\n+    span.recordException(ex);\n+} finally {\n+    span.finish();\n+}\n+```\n+\n+It would not be possible to call `recordException` if `span` was also using try-with-resources.\n+Because this is a common usage for spans, we do not support try-with-resources.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a4de1eb6719288b04a4214c7d763099750b4d4"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTEyNTg3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1627#pullrequestreview-483912587", "createdAt": "2020-09-08T08:32:53Z", "commit": {"oid": "58a4de1eb6719288b04a4214c7d763099750b4d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODozMjo1NFrOHOSiTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODozMjo1NFrOHOSiTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc0NTgwNA==", "bodyText": "I don't think we have a \"scopeManager\" method on tracer. Should this be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            try (Scope scope = tracer.scopeManager().activate(span)) {\n          \n          \n            \n            try (Scope scope = tracer.withSpan(span)) {", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1627#discussion_r484745804", "createdAt": "2020-09-08T08:32:54Z", "author": {"login": "Oberon00"}, "path": "docs/rationale.md", "diffHunk": "@@ -0,0 +1,26 @@\n+# OpenTelemetry Rationale\n+\n+When creating a library, often times designs and decisions are made that get lost over time. This\n+document tries to collect information on design decisions to answer common questions that may come\n+up when you explore the SDK.\n+\n+## Span not `Closeable`\n+\n+Because a `Span` has a lifecycle, where it is started and MUST be ended, it seems intuitive that a\n+`Span` should implement `Closeable` or `AutoCloseable` to allow usage with Java try-with-resources\n+construct. However, `Span`s are unique in that they must still be alive when handling exceptions,\n+which try-with-resources does not allow. Take this example:\n+\n+```java\n+Span span = tracer.buildSpan(\"someWork\").start();\n+try (Scope scope = tracer.scopeManager().activate(span)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a4de1eb6719288b04a4214c7d763099750b4d4"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MTk1MDM1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1627#pullrequestreview-484195035", "createdAt": "2020-09-08T14:25:43Z", "commit": {"oid": "58a4de1eb6719288b04a4214c7d763099750b4d4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjE3ODYw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1627#pullrequestreview-484217860", "createdAt": "2020-09-08T14:48:13Z", "commit": {"oid": "58a4de1eb6719288b04a4214c7d763099750b4d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDo0ODoxNFrOHOg0jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDo0ODoxNFrOHOg0jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk3OTg1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                span.finish();\n          \n          \n            \n                span.end();", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1627#discussion_r484979853", "createdAt": "2020-09-08T14:48:14Z", "author": {"login": "jkwatson"}, "path": "docs/rationale.md", "diffHunk": "@@ -0,0 +1,26 @@\n+# OpenTelemetry Rationale\n+\n+When creating a library, often times designs and decisions are made that get lost over time. This\n+document tries to collect information on design decisions to answer common questions that may come\n+up when you explore the SDK.\n+\n+## Span not `Closeable`\n+\n+Because a `Span` has a lifecycle, where it is started and MUST be ended, it seems intuitive that a\n+`Span` should implement `Closeable` or `AutoCloseable` to allow usage with Java try-with-resources\n+construct. However, `Span`s are unique in that they must still be alive when handling exceptions,\n+which try-with-resources does not allow. Take this example:\n+\n+```java\n+Span span = tracer.buildSpan(\"someWork\").start();\n+try (Scope scope = tracer.scopeManager().activate(span)) {\n+    // Do things.\n+} catch (Exception ex) {\n+    span.recordException(ex);\n+} finally {\n+    span.finish();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a4de1eb6719288b04a4214c7d763099750b4d4"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9078df8ed139493790322af6ac442cb703ff8ecd", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9078df8ed139493790322af6ac442cb703ff8ecd", "committedDate": "2020-09-09T05:43:08Z", "message": "OT -> OTel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MDgxOTYx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1627#pullrequestreview-485081961", "createdAt": "2020-09-09T14:40:57Z", "commit": {"oid": "9078df8ed139493790322af6ac442cb703ff8ecd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2448, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}