{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMDM5NzIw", "number": 942, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozMzo0MFrODjmiHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozNDowM1rODjmihQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjU4MDc4OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdk.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozMzo0MFrOFvgRNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjo1MDoyOFrOFvj_HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjA4NA==", "bodyText": "left hand side should just be declared as List<MetricData>\nI'd also prefer the temporary variable be called results, but that's a nitpick.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/942#discussion_r385356084", "createdAt": "2020-02-27T20:33:40Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdk.java", "diffHunk": "@@ -81,4 +84,14 @@ public LabelSetSdk createLabelSet(String... keyValuePairs) {\n   public LabelSetSdk createLabelSet(Map<String, String> labels) {\n     return LabelSetSdk.create(labels);\n   }\n+\n+  Collection<MetricData> collectAll() {\n+    InstrumentRegistry instrumentRegistry = meterSharedState.getInstrumentRegistry();\n+    Collection<AbstractInstrument> instruments = instrumentRegistry.getInstruments();\n+    ArrayList<MetricData> ret = new ArrayList<>(instruments.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02822bcc9f9c12eea507a46610fb16c3399afcc"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxNjk4OQ==", "bodyText": "Done.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/942#discussion_r385416989", "createdAt": "2020-02-27T22:50:28Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdk.java", "diffHunk": "@@ -81,4 +84,14 @@ public LabelSetSdk createLabelSet(String... keyValuePairs) {\n   public LabelSetSdk createLabelSet(Map<String, String> labels) {\n     return LabelSetSdk.create(labels);\n   }\n+\n+  Collection<MetricData> collectAll() {\n+    InstrumentRegistry instrumentRegistry = meterSharedState.getInstrumentRegistry();\n+    Collection<AbstractInstrument> instruments = instrumentRegistry.getInstruments();\n+    ArrayList<MetricData> ret = new ArrayList<>(instruments.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjA4NA=="}, "originalCommit": {"oid": "b02822bcc9f9c12eea507a46610fb16c3399afcc"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjU4MTgxOnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozNDowM1rOFvgR1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjo1MDozMVrOFvj_Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjI0Ng==", "bodyText": "List<MetricData> on the LHS", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/942#discussion_r385356246", "createdAt": "2020-02-27T20:34:03Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java", "diffHunk": "@@ -50,6 +54,20 @@ public MeterSdk get(String instrumentationName, String instrumentationVersion) {\n     return registry.get(instrumentationName, instrumentationVersion);\n   }\n \n+  /**\n+   * Collects all the metrics and returns a collection of collected {@link MetricData}.\n+   *\n+   * @return a collection of collected {@link MetricData}.\n+   */\n+  public Collection<MetricData> collectAll() {\n+    Collection<MeterSdk> meters = registry.getComponents();\n+    ArrayList<MetricData> ret = new ArrayList<>(meters.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02822bcc9f9c12eea507a46610fb16c3399afcc"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxNzAxMA==", "bodyText": "Done.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/942#discussion_r385417010", "createdAt": "2020-02-27T22:50:31Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java", "diffHunk": "@@ -50,6 +54,20 @@ public MeterSdk get(String instrumentationName, String instrumentationVersion) {\n     return registry.get(instrumentationName, instrumentationVersion);\n   }\n \n+  /**\n+   * Collects all the metrics and returns a collection of collected {@link MetricData}.\n+   *\n+   * @return a collection of collected {@link MetricData}.\n+   */\n+  public Collection<MetricData> collectAll() {\n+    Collection<MeterSdk> meters = registry.getComponents();\n+    ArrayList<MetricData> ret = new ArrayList<>(meters.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjI0Ng=="}, "originalCommit": {"oid": "b02822bcc9f9c12eea507a46610fb16c3399afcc"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 931, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}