{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NDIwOTAw", "number": 1838, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMjo1NjozMFrOEvk_2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMjo1NjozMFrOEvk_2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzI0Njk5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMjo1NjozMFrOHkovlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjowOToyMFrOHlF7iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE3ODMyNA==", "bodyText": "@jkwatson Any reason to use addAll before? Couldn't think of one so made this symmetrical with above", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1838#discussion_r508178324", "createdAt": "2020-10-20T02:56:30Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -231,105 +231,105 @@ public Attributes build() {\n     /**\n      * Sets a String attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, String value) {\n-      return setAttribute(stringKey(key), value);\n+    public Builder set(String key, String value) {\n+      return set(stringKey(key), value);\n     }\n \n     /**\n      * Sets a long attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, long value) {\n-      return setAttribute(longKey(key), value);\n+    public Builder set(String key, long value) {\n+      return set(longKey(key), value);\n     }\n \n     /**\n      * Sets a double attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, double value) {\n-      return setAttribute(doubleKey(key), value);\n+    public Builder set(String key, double value) {\n+      return set(doubleKey(key), value);\n     }\n \n     /**\n      * Sets a boolean attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, boolean value) {\n-      return setAttribute(booleanKey(key), value);\n+    public Builder set(String key, boolean value) {\n+      return set(booleanKey(key), value);\n     }\n \n     /**\n      * Sets a String array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, String... value) {\n-      return setAttribute(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, String... value) {\n+      return set(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Long array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Long... value) {\n-      return setAttribute(longArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Long... value) {\n+      return set(longArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Double array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Double... value) {\n-      return setAttribute(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Double... value) {\n+      return set(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Boolean array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Boolean... value) {\n-      return setAttribute(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Boolean... value) {\n+      return set(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n-     * Add all the provided attributes to this Builder.\n+     * Sets all the provided attributes into this Builder.\n      *\n      * @return this Builder\n      */\n-    public Builder addAll(Attributes attributes) {\n+    public Builder setAll(Attributes attributes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2c286be4d6581367c60def78e53f65fb094c50"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNDA5MA==", "bodyText": "But this does not set as in \"replace current value\", it actually adds given attributes to already existing ones. No?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1838#discussion_r508424090", "createdAt": "2020-10-20T11:30:06Z", "author": {"login": "iNikem"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -231,105 +231,105 @@ public Attributes build() {\n     /**\n      * Sets a String attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, String value) {\n-      return setAttribute(stringKey(key), value);\n+    public Builder set(String key, String value) {\n+      return set(stringKey(key), value);\n     }\n \n     /**\n      * Sets a long attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, long value) {\n-      return setAttribute(longKey(key), value);\n+    public Builder set(String key, long value) {\n+      return set(longKey(key), value);\n     }\n \n     /**\n      * Sets a double attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, double value) {\n-      return setAttribute(doubleKey(key), value);\n+    public Builder set(String key, double value) {\n+      return set(doubleKey(key), value);\n     }\n \n     /**\n      * Sets a boolean attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, boolean value) {\n-      return setAttribute(booleanKey(key), value);\n+    public Builder set(String key, boolean value) {\n+      return set(booleanKey(key), value);\n     }\n \n     /**\n      * Sets a String array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, String... value) {\n-      return setAttribute(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, String... value) {\n+      return set(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Long array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Long... value) {\n-      return setAttribute(longArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Long... value) {\n+      return set(longArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Double array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Double... value) {\n-      return setAttribute(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Double... value) {\n+      return set(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Boolean array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Boolean... value) {\n-      return setAttribute(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Boolean... value) {\n+      return set(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n-     * Add all the provided attributes to this Builder.\n+     * Sets all the provided attributes into this Builder.\n      *\n      * @return this Builder\n      */\n-    public Builder addAll(Attributes attributes) {\n+    public Builder setAll(Attributes attributes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE3ODMyNA=="}, "originalCommit": {"oid": "4a2c286be4d6581367c60def78e53f65fb094c50"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1NjUyMQ==", "bodyText": "last-in wins, so this will replace current values. setAll is a better name. \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1838#discussion_r508656521", "createdAt": "2020-10-20T16:09:20Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -231,105 +231,105 @@ public Attributes build() {\n     /**\n      * Sets a String attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, String value) {\n-      return setAttribute(stringKey(key), value);\n+    public Builder set(String key, String value) {\n+      return set(stringKey(key), value);\n     }\n \n     /**\n      * Sets a long attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, long value) {\n-      return setAttribute(longKey(key), value);\n+    public Builder set(String key, long value) {\n+      return set(longKey(key), value);\n     }\n \n     /**\n      * Sets a double attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, double value) {\n-      return setAttribute(doubleKey(key), value);\n+    public Builder set(String key, double value) {\n+      return set(doubleKey(key), value);\n     }\n \n     /**\n      * Sets a boolean attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, boolean value) {\n-      return setAttribute(booleanKey(key), value);\n+    public Builder set(String key, boolean value) {\n+      return set(booleanKey(key), value);\n     }\n \n     /**\n      * Sets a String array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, String... value) {\n-      return setAttribute(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, String... value) {\n+      return set(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Long array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Long... value) {\n-      return setAttribute(longArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Long... value) {\n+      return set(longArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Double array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Double... value) {\n-      return setAttribute(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Double... value) {\n+      return set(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Boolean array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Boolean... value) {\n-      return setAttribute(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Boolean... value) {\n+      return set(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n-     * Add all the provided attributes to this Builder.\n+     * Sets all the provided attributes into this Builder.\n      *\n      * @return this Builder\n      */\n-    public Builder addAll(Attributes attributes) {\n+    public Builder setAll(Attributes attributes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE3ODMyNA=="}, "originalCommit": {"oid": "4a2c286be4d6581367c60def78e53f65fb094c50"}, "originalPosition": 153}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1976, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}