{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjAyNzIy", "number": 1300, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowOTo0MlrOEBh77A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowOTo0MlrOEBh77A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDQwMDQ0OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleValueObserverSdk.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowOTo0MlrOGdbxCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo0MzowMlrOGdccOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxNjgxMA==", "bodyText": "Please add an issue for this.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1300#discussion_r433516810", "createdAt": "2020-06-01T22:09:42Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleValueObserverSdk.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.metrics;\n+\n+import io.opentelemetry.metrics.DoubleValueObserver;\n+import io.opentelemetry.metrics.DoubleValueObserver.ResultDoubleValueObserver;\n+import io.opentelemetry.sdk.metrics.aggregator.Aggregator;\n+import io.opentelemetry.sdk.metrics.common.InstrumentType;\n+import io.opentelemetry.sdk.metrics.common.InstrumentValueType;\n+import io.opentelemetry.sdk.metrics.view.Aggregations;\n+\n+final class DoubleValueObserverSdk extends AbstractAsynchronousInstrument<ResultDoubleValueObserver>\n+    implements DoubleValueObserver {\n+\n+  DoubleValueObserverSdk(\n+      InstrumentDescriptor descriptor,\n+      MeterProviderSharedState meterProviderSharedState,\n+      MeterSharedState meterSharedState) {\n+    super(\n+        descriptor,\n+        meterProviderSharedState,\n+        meterSharedState,\n+        // TODO: Revisit the batcher used here, currently this does not remove duplicate records in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e63989dafbf3849732ba5aa296cb9d93ec95ee2a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyNzg2NA==", "bodyText": "#1302", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1300#discussion_r433527864", "createdAt": "2020-06-01T22:43:02Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleValueObserverSdk.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.metrics;\n+\n+import io.opentelemetry.metrics.DoubleValueObserver;\n+import io.opentelemetry.metrics.DoubleValueObserver.ResultDoubleValueObserver;\n+import io.opentelemetry.sdk.metrics.aggregator.Aggregator;\n+import io.opentelemetry.sdk.metrics.common.InstrumentType;\n+import io.opentelemetry.sdk.metrics.common.InstrumentValueType;\n+import io.opentelemetry.sdk.metrics.view.Aggregations;\n+\n+final class DoubleValueObserverSdk extends AbstractAsynchronousInstrument<ResultDoubleValueObserver>\n+    implements DoubleValueObserver {\n+\n+  DoubleValueObserverSdk(\n+      InstrumentDescriptor descriptor,\n+      MeterProviderSharedState meterProviderSharedState,\n+      MeterSharedState meterSharedState) {\n+    super(\n+        descriptor,\n+        meterProviderSharedState,\n+        meterSharedState,\n+        // TODO: Revisit the batcher used here, currently this does not remove duplicate records in", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxNjgxMA=="}, "originalCommit": {"oid": "e63989dafbf3849732ba5aa296cb9d93ec95ee2a"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 767, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}