{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MDUzMTI2", "number": 1410, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNDoyMjozMlrOEN10WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNDoyMjozMlrOEN10WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTQ4Njk3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNDoyMjozM1rOGwq0fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMToyNjoxN1rOGxPgrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NjM5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n              /**\n          \n          \n            \n               * A string identifying which kind of message consumption this span describes.\n          \n          \n            \n               * Either \"receive\" or \"process\".\n          \n          \n            \n               * For message consumers only.\n          \n          \n            \n               */\n          \n          \n            \n              public static final StringAttributeSetter MESSAGING_CONVERSATION_ID =\n          \n          \n            \n                  StringAttributeSetter.create(\"messaging.operation\");", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1410#discussion_r453686396", "createdAt": "2020-07-13T14:22:33Z", "author": {"login": "arminru"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -154,5 +154,53 @@\n   /** JDBC substring like \"mysql://db.example.com:3306\" */\n   public static final StringAttributeSetter DB_URL = StringAttributeSetter.create(\"db.url\");\n \n+  /** A string identifying the messaging system such as kafka, rabbitmq or activemq. */\n+  public static final StringAttributeSetter MESSAGING_SYSTEM =\n+      StringAttributeSetter.create(\"messaging.system\");\n+  /**\n+   * The message destination name, e.g. MyQueue or MyTopic. This might be equal to the span name but\n+   * is required nevertheless\n+   */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION =\n+      StringAttributeSetter.create(\"messaging.destination\");\n+  /** The kind of message destination. Either queue or topic. */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION_KIND =\n+      StringAttributeSetter.create(\"messaging.destination_kind\");\n+  /** A boolean that is true if the message destination is temporary. */\n+  public static final BooleanAttributeSetter MESSAGING_TEMP_DESTINATION =\n+      BooleanAttributeSetter.create(\"messaging.temp_destination\");\n+  /** The name of the transport protocol such as AMQP or MQTT. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL =\n+      StringAttributeSetter.create(\"messaging.protocol\");\n+  /** The version of the transport protocol such as 0.9.1. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL_VERSION =\n+      StringAttributeSetter.create(\"messaging.protocol_version\");\n+  /**\n+   * Connection string such as tibjmsnaming://localhost:7222 or\n+   * https://queue.amazonaws.com/80398EXAMPLE/MyQueue\n+   */\n+  public static final StringAttributeSetter MESSAGING_URL =\n+      StringAttributeSetter.create(\"messaging.url\");\n+  /**\n+   * A value used by the messaging system as an identifier for the message, represented as a string.\n+   */\n+  public static final StringAttributeSetter MESSAGING_MESSAGE_ID =\n+      StringAttributeSetter.create(\"messaging.message_id\");\n+  /**\n+   * A value identifying the conversation to which the message belongs, represented as a string.\n+   * Sometimes called \"Correlation ID\".\n+   */\n+  public static final StringAttributeSetter MESSAGING_CONVERSATION_ID =\n+      StringAttributeSetter.create(\"messaging.conversation_id\");\n+  /**\n+   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is\n+   * unknown whether the compressed or uncompressed payload size is reported.\n+   */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_size_bytes\");\n+  /** The compressed size of the message payload in bytes. */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_compressed_size_bytes\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946bd7b678fdb3d2e049aaf27be60a4a281ebc81"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY5NTg4OQ==", "bodyText": "Thanks! Added.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1410#discussion_r453695889", "createdAt": "2020-07-13T14:35:46Z", "author": {"login": "iNikem"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -154,5 +154,53 @@\n   /** JDBC substring like \"mysql://db.example.com:3306\" */\n   public static final StringAttributeSetter DB_URL = StringAttributeSetter.create(\"db.url\");\n \n+  /** A string identifying the messaging system such as kafka, rabbitmq or activemq. */\n+  public static final StringAttributeSetter MESSAGING_SYSTEM =\n+      StringAttributeSetter.create(\"messaging.system\");\n+  /**\n+   * The message destination name, e.g. MyQueue or MyTopic. This might be equal to the span name but\n+   * is required nevertheless\n+   */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION =\n+      StringAttributeSetter.create(\"messaging.destination\");\n+  /** The kind of message destination. Either queue or topic. */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION_KIND =\n+      StringAttributeSetter.create(\"messaging.destination_kind\");\n+  /** A boolean that is true if the message destination is temporary. */\n+  public static final BooleanAttributeSetter MESSAGING_TEMP_DESTINATION =\n+      BooleanAttributeSetter.create(\"messaging.temp_destination\");\n+  /** The name of the transport protocol such as AMQP or MQTT. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL =\n+      StringAttributeSetter.create(\"messaging.protocol\");\n+  /** The version of the transport protocol such as 0.9.1. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL_VERSION =\n+      StringAttributeSetter.create(\"messaging.protocol_version\");\n+  /**\n+   * Connection string such as tibjmsnaming://localhost:7222 or\n+   * https://queue.amazonaws.com/80398EXAMPLE/MyQueue\n+   */\n+  public static final StringAttributeSetter MESSAGING_URL =\n+      StringAttributeSetter.create(\"messaging.url\");\n+  /**\n+   * A value used by the messaging system as an identifier for the message, represented as a string.\n+   */\n+  public static final StringAttributeSetter MESSAGING_MESSAGE_ID =\n+      StringAttributeSetter.create(\"messaging.message_id\");\n+  /**\n+   * A value identifying the conversation to which the message belongs, represented as a string.\n+   * Sometimes called \"Correlation ID\".\n+   */\n+  public static final StringAttributeSetter MESSAGING_CONVERSATION_ID =\n+      StringAttributeSetter.create(\"messaging.conversation_id\");\n+  /**\n+   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is\n+   * unknown whether the compressed or uncompressed payload size is reported.\n+   */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_size_bytes\");\n+  /** The compressed size of the message payload in bytes. */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_compressed_size_bytes\");\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NjM5Ng=="}, "originalCommit": {"oid": "946bd7b678fdb3d2e049aaf27be60a4a281ebc81"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcxNTQyNQ==", "bodyText": "Sure!\nIt would make sense to add the \"for message consumer only\" indication as well. Users should consult the spec anyway but will likely not read up on it if part of it is already shown in their IDE quick definition.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1410#discussion_r453715425", "createdAt": "2020-07-13T15:02:12Z", "author": {"login": "arminru"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -154,5 +154,53 @@\n   /** JDBC substring like \"mysql://db.example.com:3306\" */\n   public static final StringAttributeSetter DB_URL = StringAttributeSetter.create(\"db.url\");\n \n+  /** A string identifying the messaging system such as kafka, rabbitmq or activemq. */\n+  public static final StringAttributeSetter MESSAGING_SYSTEM =\n+      StringAttributeSetter.create(\"messaging.system\");\n+  /**\n+   * The message destination name, e.g. MyQueue or MyTopic. This might be equal to the span name but\n+   * is required nevertheless\n+   */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION =\n+      StringAttributeSetter.create(\"messaging.destination\");\n+  /** The kind of message destination. Either queue or topic. */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION_KIND =\n+      StringAttributeSetter.create(\"messaging.destination_kind\");\n+  /** A boolean that is true if the message destination is temporary. */\n+  public static final BooleanAttributeSetter MESSAGING_TEMP_DESTINATION =\n+      BooleanAttributeSetter.create(\"messaging.temp_destination\");\n+  /** The name of the transport protocol such as AMQP or MQTT. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL =\n+      StringAttributeSetter.create(\"messaging.protocol\");\n+  /** The version of the transport protocol such as 0.9.1. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL_VERSION =\n+      StringAttributeSetter.create(\"messaging.protocol_version\");\n+  /**\n+   * Connection string such as tibjmsnaming://localhost:7222 or\n+   * https://queue.amazonaws.com/80398EXAMPLE/MyQueue\n+   */\n+  public static final StringAttributeSetter MESSAGING_URL =\n+      StringAttributeSetter.create(\"messaging.url\");\n+  /**\n+   * A value used by the messaging system as an identifier for the message, represented as a string.\n+   */\n+  public static final StringAttributeSetter MESSAGING_MESSAGE_ID =\n+      StringAttributeSetter.create(\"messaging.message_id\");\n+  /**\n+   * A value identifying the conversation to which the message belongs, represented as a string.\n+   * Sometimes called \"Correlation ID\".\n+   */\n+  public static final StringAttributeSetter MESSAGING_CONVERSATION_ID =\n+      StringAttributeSetter.create(\"messaging.conversation_id\");\n+  /**\n+   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is\n+   * unknown whether the compressed or uncompressed payload size is reported.\n+   */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_size_bytes\");\n+  /** The compressed size of the message payload in bytes. */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_compressed_size_bytes\");\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NjM5Ng=="}, "originalCommit": {"oid": "946bd7b678fdb3d2e049aaf27be60a4a281ebc81"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcxNzM4MQ==", "bodyText": "Doesn't current javadoc says this in first sentence? \"A string identifying which part and kind of message consumption this span describes\"", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1410#discussion_r453717381", "createdAt": "2020-07-13T15:05:01Z", "author": {"login": "iNikem"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -154,5 +154,53 @@\n   /** JDBC substring like \"mysql://db.example.com:3306\" */\n   public static final StringAttributeSetter DB_URL = StringAttributeSetter.create(\"db.url\");\n \n+  /** A string identifying the messaging system such as kafka, rabbitmq or activemq. */\n+  public static final StringAttributeSetter MESSAGING_SYSTEM =\n+      StringAttributeSetter.create(\"messaging.system\");\n+  /**\n+   * The message destination name, e.g. MyQueue or MyTopic. This might be equal to the span name but\n+   * is required nevertheless\n+   */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION =\n+      StringAttributeSetter.create(\"messaging.destination\");\n+  /** The kind of message destination. Either queue or topic. */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION_KIND =\n+      StringAttributeSetter.create(\"messaging.destination_kind\");\n+  /** A boolean that is true if the message destination is temporary. */\n+  public static final BooleanAttributeSetter MESSAGING_TEMP_DESTINATION =\n+      BooleanAttributeSetter.create(\"messaging.temp_destination\");\n+  /** The name of the transport protocol such as AMQP or MQTT. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL =\n+      StringAttributeSetter.create(\"messaging.protocol\");\n+  /** The version of the transport protocol such as 0.9.1. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL_VERSION =\n+      StringAttributeSetter.create(\"messaging.protocol_version\");\n+  /**\n+   * Connection string such as tibjmsnaming://localhost:7222 or\n+   * https://queue.amazonaws.com/80398EXAMPLE/MyQueue\n+   */\n+  public static final StringAttributeSetter MESSAGING_URL =\n+      StringAttributeSetter.create(\"messaging.url\");\n+  /**\n+   * A value used by the messaging system as an identifier for the message, represented as a string.\n+   */\n+  public static final StringAttributeSetter MESSAGING_MESSAGE_ID =\n+      StringAttributeSetter.create(\"messaging.message_id\");\n+  /**\n+   * A value identifying the conversation to which the message belongs, represented as a string.\n+   * Sometimes called \"Correlation ID\".\n+   */\n+  public static final StringAttributeSetter MESSAGING_CONVERSATION_ID =\n+      StringAttributeSetter.create(\"messaging.conversation_id\");\n+  /**\n+   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is\n+   * unknown whether the compressed or uncompressed payload size is reported.\n+   */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_size_bytes\");\n+  /** The compressed size of the message payload in bytes. */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_compressed_size_bytes\");\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NjM5Ng=="}, "originalCommit": {"oid": "946bd7b678fdb3d2e049aaf27be60a4a281ebc81"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4NzUzNA==", "bodyText": "I'd personally make it more explicit but it should be fine as it is as well.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1410#discussion_r454287534", "createdAt": "2020-07-14T11:26:17Z", "author": {"login": "arminru"}, "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -154,5 +154,53 @@\n   /** JDBC substring like \"mysql://db.example.com:3306\" */\n   public static final StringAttributeSetter DB_URL = StringAttributeSetter.create(\"db.url\");\n \n+  /** A string identifying the messaging system such as kafka, rabbitmq or activemq. */\n+  public static final StringAttributeSetter MESSAGING_SYSTEM =\n+      StringAttributeSetter.create(\"messaging.system\");\n+  /**\n+   * The message destination name, e.g. MyQueue or MyTopic. This might be equal to the span name but\n+   * is required nevertheless\n+   */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION =\n+      StringAttributeSetter.create(\"messaging.destination\");\n+  /** The kind of message destination. Either queue or topic. */\n+  public static final StringAttributeSetter MESSAGING_DESTINATION_KIND =\n+      StringAttributeSetter.create(\"messaging.destination_kind\");\n+  /** A boolean that is true if the message destination is temporary. */\n+  public static final BooleanAttributeSetter MESSAGING_TEMP_DESTINATION =\n+      BooleanAttributeSetter.create(\"messaging.temp_destination\");\n+  /** The name of the transport protocol such as AMQP or MQTT. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL =\n+      StringAttributeSetter.create(\"messaging.protocol\");\n+  /** The version of the transport protocol such as 0.9.1. */\n+  public static final StringAttributeSetter MESSAGING_PROTOCOL_VERSION =\n+      StringAttributeSetter.create(\"messaging.protocol_version\");\n+  /**\n+   * Connection string such as tibjmsnaming://localhost:7222 or\n+   * https://queue.amazonaws.com/80398EXAMPLE/MyQueue\n+   */\n+  public static final StringAttributeSetter MESSAGING_URL =\n+      StringAttributeSetter.create(\"messaging.url\");\n+  /**\n+   * A value used by the messaging system as an identifier for the message, represented as a string.\n+   */\n+  public static final StringAttributeSetter MESSAGING_MESSAGE_ID =\n+      StringAttributeSetter.create(\"messaging.message_id\");\n+  /**\n+   * A value identifying the conversation to which the message belongs, represented as a string.\n+   * Sometimes called \"Correlation ID\".\n+   */\n+  public static final StringAttributeSetter MESSAGING_CONVERSATION_ID =\n+      StringAttributeSetter.create(\"messaging.conversation_id\");\n+  /**\n+   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is\n+   * unknown whether the compressed or uncompressed payload size is reported.\n+   */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_size_bytes\");\n+  /** The compressed size of the message payload in bytes. */\n+  public static final LongAttributeSetter MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n+      LongAttributeSetter.create(\"messaging.message_payload_compressed_size_bytes\");\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NjM5Ng=="}, "originalCommit": {"oid": "946bd7b678fdb3d2e049aaf27be60a4a281ebc81"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1477, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}