{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMzMwNTA0", "number": 1026, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzoyMzozMlrODpNUSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo0ODo0MVrODpzlqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NTM2Mzk0OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzoyMzozMlrOF4PYhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNTowMjowNVrOF5XXyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxNjYxMg==", "bodyText": "can you add parens around the boolean expression?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r394516612", "createdAt": "2020-03-18T17:23:32Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,11 +167,24 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    boolean remove = true;\n+    if (value != null) {\n+      switch (value.getType()) {\n+        case STRING:\n+          remove = value.getStringValue() == null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38932b1158fc1a1f5f5899d40f6e965e0b3b8966"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY5NjA3NQ==", "bodyText": "I do agree just returning is better. ;)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r395696075", "createdAt": "2020-03-20T15:02:05Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,11 +167,24 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    boolean remove = true;\n+    if (value != null) {\n+      switch (value.getType()) {\n+        case STRING:\n+          remove = value.getStringValue() == null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxNjYxMg=="}, "originalCommit": {"oid": "38932b1158fc1a1f5f5899d40f6e965e0b3b8966"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NTM3MzM2OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzoyNTo1NFrOF4PeuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNjo1MTowM1rOF4h7qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxODIwMA==", "bodyText": "let's extract this logic to determine remove into its own method.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r394518200", "createdAt": "2020-03-18T17:25:54Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,11 +167,24 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    boolean remove = true;\n+    if (value != null) {\n+      switch (value.getType()) {\n+        case STRING:\n+          remove = value.getStringValue() == null;\n+          break;\n+        case BOOLEAN:\n+        case LONG:\n+        case DOUBLE:\n+          remove = false;\n+          break;\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38932b1158fc1a1f5f5899d40f6e965e0b3b8966"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxOTI4MA==", "bodyText": "speaking of which, couldn't it just be reduced to\n(value != null) && (value.getType() == STRING) && (value.getStringValue() == null)\n?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r394519280", "createdAt": "2020-03-18T17:27:32Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,11 +167,24 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    boolean remove = true;\n+    if (value != null) {\n+      switch (value.getType()) {\n+        case STRING:\n+          remove = value.getStringValue() == null;\n+          break;\n+        case BOOLEAN:\n+        case LONG:\n+        case DOUBLE:\n+          remove = false;\n+          break;\n+      }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxODIwMA=="}, "originalCommit": {"oid": "38932b1158fc1a1f5f5899d40f6e965e0b3b8966"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0OTU2NQ==", "bodyText": "Lets definitely extract the logic into its own method.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r394549565", "createdAt": "2020-03-18T18:17:01Z", "author": {"login": "carlosalberto"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,11 +167,24 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    boolean remove = true;\n+    if (value != null) {\n+      switch (value.getType()) {\n+        case STRING:\n+          remove = value.getStringValue() == null;\n+          break;\n+        case BOOLEAN:\n+        case LONG:\n+        case DOUBLE:\n+          remove = false;\n+          break;\n+      }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxODIwMA=="}, "originalCommit": {"oid": "38932b1158fc1a1f5f5899d40f6e965e0b3b8966"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDgyMDUyMQ==", "bodyText": "speaking of which, couldn't it just be reduced to\n(value != null) && (value.getType() == STRING) && (value.getStringValue() == null)\n?\n\nIn vision of Array types, I prefer a switch statement.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r394820521", "createdAt": "2020-03-19T06:51:03Z", "author": {"login": "thisthat"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,11 +167,24 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    boolean remove = true;\n+    if (value != null) {\n+      switch (value.getType()) {\n+        case STRING:\n+          remove = value.getStringValue() == null;\n+          break;\n+        case BOOLEAN:\n+        case LONG:\n+        case DOUBLE:\n+          remove = false;\n+          break;\n+      }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxODIwMA=="}, "originalCommit": {"oid": "38932b1158fc1a1f5f5899d40f6e965e0b3b8966"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzgxMjgxOnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDowMzo0NVrOF4njtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDowMzo0NVrOF4njtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxMjY5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static boolean isToRemove(AttributeValue value) {\n          \n          \n            \n              private static boolean isRemovedValue(AttributeValue value) {", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r394912692", "createdAt": "2020-03-19T10:03:45Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,14 +167,31 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    if (isToRemove(value)) {\n+      attributes.remove(key);\n+    } else {\n+      attributes.putAttribute(key, value);\n     }\n-    attributes.putAttribute(key, value);\n     return this;\n   }\n \n+  private static boolean isToRemove(AttributeValue value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50af9c5873ca8383859cf38f5e0c57ccb557fba"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTYzMTEzOnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo0Nzo0MVrOF5NMPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo1ODoyMVrOF5XONA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyOTI3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                boolean remove = true;\n          \n          \n            \n                if (value != null) {\n          \n          \n            \n                if (value == null) {\n          \n          \n            \n                  return true;\n          \n          \n            \n                }", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r395529279", "createdAt": "2020-03-20T09:47:41Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,14 +167,31 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    if (isRemovedValue(value)) {\n+      attributes.remove(key);\n+    } else {\n+      attributes.putAttribute(key, value);\n     }\n-    attributes.putAttribute(key, value);\n     return this;\n   }\n \n+  private static boolean isRemovedValue(AttributeValue value) {\n+    boolean remove = true;\n+    if (value != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efb9ea78a8e9aae308e0e221595ce251a05d3fd1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY5MzYyMA==", "bodyText": "I like this.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r395693620", "createdAt": "2020-03-20T14:58:21Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,14 +167,31 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    if (isRemovedValue(value)) {\n+      attributes.remove(key);\n+    } else {\n+      attributes.putAttribute(key, value);\n     }\n-    attributes.putAttribute(key, value);\n     return this;\n   }\n \n+  private static boolean isRemovedValue(AttributeValue value) {\n+    boolean remove = true;\n+    if (value != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyOTI3OQ=="}, "originalCommit": {"oid": "efb9ea78a8e9aae308e0e221595ce251a05d3fd1"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTYzMzA0OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo0ODoxN1rOF5NNdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo0ODoxN1rOF5NNdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyOTU4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      remove = value.getStringValue() == null;\n          \n          \n            \n                      break;\n          \n          \n            \n                      return value.getStringValue() == null;", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r395529588", "createdAt": "2020-03-20T09:48:17Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,14 +167,31 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    if (isRemovedValue(value)) {\n+      attributes.remove(key);\n+    } else {\n+      attributes.putAttribute(key, value);\n     }\n-    attributes.putAttribute(key, value);\n     return this;\n   }\n \n+  private static boolean isRemovedValue(AttributeValue value) {\n+    boolean remove = true;\n+    if (value != null) {\n+      switch (value.getType()) {\n+        case STRING:\n+          remove = value.getStringValue() == null;\n+          break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efb9ea78a8e9aae308e0e221595ce251a05d3fd1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTYzMzYzOnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo0ODozMlrOF5NN5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo0ODozMlrOF5NN5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyOTcwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      remove = false;\n          \n          \n            \n                      break;\n          \n          \n            \n                      return false;", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r395529703", "createdAt": "2020-03-20T09:48:32Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,14 +167,31 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    if (isRemovedValue(value)) {\n+      attributes.remove(key);\n+    } else {\n+      attributes.putAttribute(key, value);\n     }\n-    attributes.putAttribute(key, value);\n     return this;\n   }\n \n+  private static boolean isRemovedValue(AttributeValue value) {\n+    boolean remove = true;\n+    if (value != null) {\n+      switch (value.getType()) {\n+        case STRING:\n+          remove = value.getStringValue() == null;\n+          break;\n+        case BOOLEAN:\n+        case LONG:\n+        case DOUBLE:\n+          remove = false;\n+          break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efb9ea78a8e9aae308e0e221595ce251a05d3fd1"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTYzNDM0OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo0ODo0MVrOF5NOTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo0ODo0MVrOF5NOTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyOTgwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return remove;", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1026#discussion_r395529805", "createdAt": "2020-03-20T09:48:41Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanBuilderSdk.java", "diffHunk": "@@ -169,14 +167,31 @@\n   @Override\n   public Span.Builder setAttribute(String key, AttributeValue value) {\n     Utils.checkNotNull(key, \"key\");\n-    Utils.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return this;\n+    if (isRemovedValue(value)) {\n+      attributes.remove(key);\n+    } else {\n+      attributes.putAttribute(key, value);\n     }\n-    attributes.putAttribute(key, value);\n     return this;\n   }\n \n+  private static boolean isRemovedValue(AttributeValue value) {\n+    boolean remove = true;\n+    if (value != null) {\n+      switch (value.getType()) {\n+        case STRING:\n+          remove = value.getStringValue() == null;\n+          break;\n+        case BOOLEAN:\n+        case LONG:\n+        case DOUBLE:\n+          remove = false;\n+          break;\n+      }\n+    }\n+    return remove;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efb9ea78a8e9aae308e0e221595ce251a05d3fd1"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 999, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}