{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDAwNDIz", "number": 2322, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoxNDoyNlrOFGYLjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoxNDoyNlrOFGYLjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjMxOTUxOnYy", "diffSide": "LEFT", "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/view/InstrumentSelector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoxNDoyNlrOIHXUsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoxNzo1M1rOIHXdHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5MzA3Mg==", "bodyText": "I think it reads a little better to have these helper methods, rather than requiring callers to look for nulls.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2322#discussion_r544593072", "createdAt": "2020-12-16T20:14:26Z", "author": {"login": "jkwatson"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/view/InstrumentSelector.java", "diffHunk": "@@ -30,45 +35,30 @@ public static Builder newBuilder() {\n    * be used.\n    */\n   @Nullable\n-  public abstract InstrumentType instrumentType();\n-\n-  /**\n-   * Returns which instrument names should be selected. This is a regex. If null, then this\n-   * specifier will not be used.\n-   */\n-  @Nullable\n-  public abstract String instrumentNameRegex();\n+  public abstract InstrumentType getInstrumentType();\n \n   /**\n-   * Returns the {@link Pattern} generated by the provided {@link #instrumentNameRegex()}, or null\n-   * if none was specified.\n+   * Returns the {@link Pattern} generated by the provided {@code regex} in the {@link Builder}, or\n+   * null if none was specified.\n    */\n   @Nullable\n-  @Memoized\n-  public Pattern instrumentNamePattern() {\n-    return instrumentNameRegex() == null ? null : Pattern.compile(instrumentNameRegex());\n-  }\n-\n-  /** Returns whether the InstrumentType been specified. */\n-  public boolean hasInstrumentType() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dbfafd919289a9ad5b77f1b0e5937aa92d972f6"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5NTIyOA==", "bodyText": "Helper public methods means more to maintain and take care of, there is only one usage of this and I think it is worth the downside of reading to not have to maintain ABI compatibility.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2322#discussion_r544595228", "createdAt": "2020-12-16T20:17:53Z", "author": {"login": "bogdandrutu"}, "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/view/InstrumentSelector.java", "diffHunk": "@@ -30,45 +35,30 @@ public static Builder newBuilder() {\n    * be used.\n    */\n   @Nullable\n-  public abstract InstrumentType instrumentType();\n-\n-  /**\n-   * Returns which instrument names should be selected. This is a regex. If null, then this\n-   * specifier will not be used.\n-   */\n-  @Nullable\n-  public abstract String instrumentNameRegex();\n+  public abstract InstrumentType getInstrumentType();\n \n   /**\n-   * Returns the {@link Pattern} generated by the provided {@link #instrumentNameRegex()}, or null\n-   * if none was specified.\n+   * Returns the {@link Pattern} generated by the provided {@code regex} in the {@link Builder}, or\n+   * null if none was specified.\n    */\n   @Nullable\n-  @Memoized\n-  public Pattern instrumentNamePattern() {\n-    return instrumentNameRegex() == null ? null : Pattern.compile(instrumentNameRegex());\n-  }\n-\n-  /** Returns whether the InstrumentType been specified. */\n-  public boolean hasInstrumentType() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5MzA3Mg=="}, "originalCommit": {"oid": "6dbfafd919289a9ad5b77f1b0e5937aa92d972f6"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1737, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}