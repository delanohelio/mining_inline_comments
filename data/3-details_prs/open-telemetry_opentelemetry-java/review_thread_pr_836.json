{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjAxMDY4", "number": 836, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToxMzoxMFrODeJxDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToxMzoxMFrODeJxDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQzODg2OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToxMzoxMFrOFnKctA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToxNzozOVrOFnKjxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwOTk3Mg==", "bodyText": "Just thinking out loud...what would you think about having add return this so you could just write:\nbind(labelSet).add(delta).unbind();\n\nin one fluent call?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/836#discussion_r376609972", "createdAt": "2020-02-07T21:13:10Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "diffHunk": "@@ -38,7 +38,9 @@ private DoubleCounterSdk(\n \n   @Override\n   public void add(double delta, LabelSet labelSet) {\n-    bind(labelSet).add(delta);\n+    BoundDoubleCounter boundDoubleCounter = bind(labelSet);\n+    boundDoubleCounter.add(delta);\n+    boundDoubleCounter.unbind();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "105496c5d171aa41132d88a3e7bcd7ba3b93d5a1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMDcyOQ==", "bodyText": "I thought about this, but it is not that useful for users using bounds, but probably doesn't hurt. Happy to accept a followup PR to see how would look like:)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/836#discussion_r376610729", "createdAt": "2020-02-07T21:15:09Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "diffHunk": "@@ -38,7 +38,9 @@ private DoubleCounterSdk(\n \n   @Override\n   public void add(double delta, LabelSet labelSet) {\n-    bind(labelSet).add(delta);\n+    BoundDoubleCounter boundDoubleCounter = bind(labelSet);\n+    boundDoubleCounter.add(delta);\n+    boundDoubleCounter.unbind();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwOTk3Mg=="}, "originalCommit": {"oid": "105496c5d171aa41132d88a3e7bcd7ba3b93d5a1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMTc4MQ==", "bodyText": "yeah, I agree. The bytecode probably ends up looking identical.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/836#discussion_r376611781", "createdAt": "2020-02-07T21:17:39Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "diffHunk": "@@ -38,7 +38,9 @@ private DoubleCounterSdk(\n \n   @Override\n   public void add(double delta, LabelSet labelSet) {\n-    bind(labelSet).add(delta);\n+    BoundDoubleCounter boundDoubleCounter = bind(labelSet);\n+    boundDoubleCounter.add(delta);\n+    boundDoubleCounter.unbind();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwOTk3Mg=="}, "originalCommit": {"oid": "105496c5d171aa41132d88a3e7bcd7ba3b93d5a1"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1073, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}