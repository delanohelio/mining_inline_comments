{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDE4NjQ4", "number": 2324, "title": "Mark API's classes final, caveat a bit of duplicate code", "bodyText": "The main reason is that we do not want other implementations to inherit from our DefaulOpenTelemetry, it is better for all implementations to provide their own implementation, one less ABI compatibility to care about.\nSigned-off-by: Bogdan Drutu bogdandrutu@gmail.com", "createdAt": "2020-12-16T20:24:23Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2324", "merged": true, "mergeCommit": {"oid": "cbc8891cae4248c57582b7f4d1ec2a2a1d62610b"}, "closed": true, "closedAt": "2020-12-17T19:16:36Z", "author": {"login": "bogdandrutu"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdm1cxQgBqjQxMjE3NDA1ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnIT_9ABqjQxMjY1OTIwOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c731a0c093a0693a46c573131be2df2ed0a5c40", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6c731a0c093a0693a46c573131be2df2ed0a5c40", "committedDate": "2020-12-16T20:22:44Z", "message": "Mark API's classes final, caveat a bit of duplicate code\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5696dce854a70cea316fe833c63991857b2681fc", "committedDate": "2020-12-16T21:02:36Z", "message": "Mark API's classes final, caveat a bit of duplicate code\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MTc2Mjgy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2324#pullrequestreview-554176282", "createdAt": "2020-12-16T23:48:10Z", "commit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NDkzMDIy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2324#pullrequestreview-554493022", "createdAt": "2020-12-17T10:58:38Z", "commit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDo1ODozOFrOIHwE2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMTowMjozNlrOIHwPGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk5ODYxNg==", "bodyText": "Maybe add an @see for DefaultOpenTelemetry.builder()?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2324#discussion_r544998616", "createdAt": "2020-12-17T10:58:38Z", "author": {"login": "Oberon00"}, "path": "api/all/src/main/java/io/opentelemetry/api/DefaultOpenTelemetryBuilder.java", "diffHunk": "@@ -15,12 +15,14 @@\n \n /** Builder class for {@link DefaultOpenTelemetry}. */\n @SuppressWarnings(\"deprecation\")\n-public class DefaultOpenTelemetryBuilder\n+public final class DefaultOpenTelemetryBuilder\n     implements OpenTelemetryBuilder<DefaultOpenTelemetryBuilder> {\n-  protected ContextPropagators propagators = ContextPropagators.noop();\n+  private ContextPropagators propagators = ContextPropagators.noop();\n+  private TracerProvider tracerProvider;\n+  private MeterProvider meterProvider;\n \n-  protected TracerProvider tracerProvider;\n-  protected MeterProvider meterProvider;\n+  // Disallow direct initialization.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk5OTUyNA==", "bodyText": "I think this change is unrelated and should not be in this PR.\nAlso, the ClassCastException may actually be more informative (although not necessarily more clear to the user).", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2324#discussion_r544999524", "createdAt": "2020-12-17T10:59:56Z", "author": {"login": "Oberon00"}, "path": "sdk/all/src/main/java/io/opentelemetry/sdk/OpenTelemetrySdk.java", "diffHunk": "@@ -32,18 +42,24 @@ public static OpenTelemetrySdkBuilder builder() {\n \n   /** Returns the global {@link OpenTelemetrySdk}. */\n   public static OpenTelemetrySdk get() {\n-    return (OpenTelemetrySdk) GlobalOpenTelemetry.get();\n+    OpenTelemetry openTelemetry = GlobalOpenTelemetry.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAwMDExOA==", "bodyText": "I'm surprised. Why is it possible to remove this cast here?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2324#discussion_r545000118", "createdAt": "2020-12-17T11:00:54Z", "author": {"login": "Oberon00"}, "path": "sdk/all/src/main/java/io/opentelemetry/sdk/OpenTelemetrySdk.java", "diffHunk": "@@ -32,18 +42,24 @@ public static OpenTelemetrySdkBuilder builder() {\n \n   /** Returns the global {@link OpenTelemetrySdk}. */\n   public static OpenTelemetrySdk get() {\n-    return (OpenTelemetrySdk) GlobalOpenTelemetry.get();\n+    OpenTelemetry openTelemetry = GlobalOpenTelemetry.get();\n+    if (!(openTelemetry instanceof OpenTelemetrySdk)) {\n+      throw new IllegalStateException(\n+          \"Trying to access global OpenTelemetrySdk but global OpenTelemetry is not an \"\n+              + \"instance created by this SDK.\");\n+    }\n+    return (OpenTelemetrySdk) openTelemetry;\n   }\n \n   /** Returns the global {@link SdkTracerManagement}. */\n   public static SdkTracerManagement getGlobalTracerManagement() {\n     TracerProvider tracerProvider = GlobalOpenTelemetry.get().getTracerProvider();\n     if (!(tracerProvider instanceof ObfuscatedTracerProvider)) {\n       throw new IllegalStateException(\n-          \"Trying to access global TracerSdkManagement but global TracerProvider is not an \"\n+          \"Trying to access global SdkTracerManagement but global TracerProvider is not an \"\n               + \"instance created by this SDK.\");\n     }\n-    return (SdkTracerProvider) ((ObfuscatedTracerProvider) tracerProvider).unobfuscate();\n+    return ((ObfuscatedTracerProvider) tracerProvider).unobfuscate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAwMTI0Mw==", "bodyText": "\ud83d\udc4d Nice type safety improvement!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2324#discussion_r545001243", "createdAt": "2020-12-17T11:02:36Z", "author": {"login": "Oberon00"}, "path": "sdk/all/src/main/java/io/opentelemetry/sdk/OpenTelemetrySdkBuilder.java", "diffHunk": "@@ -5,18 +5,26 @@\n \n package io.opentelemetry.sdk;\n \n-import io.opentelemetry.api.DefaultOpenTelemetryBuilder;\n import io.opentelemetry.api.GlobalOpenTelemetry;\n import io.opentelemetry.api.metrics.MeterProvider;\n-import io.opentelemetry.api.trace.TracerProvider;\n import io.opentelemetry.context.propagation.ContextPropagators;\n import io.opentelemetry.sdk.OpenTelemetrySdk.ObfuscatedTracerProvider;\n import io.opentelemetry.sdk.metrics.MeterSdkProvider;\n import io.opentelemetry.sdk.trace.SdkTracerProvider;\n import io.opentelemetry.sdk.trace.SdkTracerProviderBuilder;\n+import java.util.concurrent.atomic.AtomicBoolean;\n \n /** A builder for configuring an {@link OpenTelemetrySdk}. */\n-public final class OpenTelemetrySdkBuilder extends DefaultOpenTelemetryBuilder {\n+public final class OpenTelemetrySdkBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NzgzNzIw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2324#pullrequestreview-554783720", "createdAt": "2020-12-17T16:40:34Z", "commit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNjo0MDozNVrOIH-dQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNjo0MDozNVrOIH-dQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIzNDI0MA==", "bodyText": "@trask @anuraaga does this have any implications for the agent's usage of the obfuscated pattern?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2324#discussion_r545234240", "createdAt": "2020-12-17T16:40:35Z", "author": {"login": "jkwatson"}, "path": "sdk/all/src/main/java/io/opentelemetry/sdk/OpenTelemetrySdk.java", "diffHunk": "@@ -97,7 +126,7 @@ public Tracer get(String instrumentationName, String instrumentationVersion) {\n       return delegate.get(instrumentationName, instrumentationVersion);\n     }\n \n-    public TracerProvider unobfuscate() {\n+    public SdkTracerProvider unobfuscate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f0213bf15c4d98160b231f756df123bb36728c0", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9f0213bf15c4d98160b231f756df123bb36728c0", "committedDate": "2020-12-17T19:01:07Z", "message": "Mark API's classes final, caveat a bit of duplicate code\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5696dce854a70cea316fe833c63991857b2681fc", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5696dce854a70cea316fe833c63991857b2681fc", "committedDate": "2020-12-16T21:02:36Z", "message": "Mark API's classes final, caveat a bit of duplicate code\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "9f0213bf15c4d98160b231f756df123bb36728c0", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9f0213bf15c4d98160b231f756df123bb36728c0", "committedDate": "2020-12-17T19:01:07Z", "message": "Mark API's classes final, caveat a bit of duplicate code\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3716, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}