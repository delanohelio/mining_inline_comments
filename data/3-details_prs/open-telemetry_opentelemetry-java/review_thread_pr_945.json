{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTEyNTAx", "number": 945, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo0NTozNlrODj6iRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo0NTozNlrODj6iRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4OTg1Nzk3OnYy", "diffSide": "RIGHT", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/export/OpenTelemetryMetricProducer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo0NTozNlrOFv_Exg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDo1OTozMlrOFwCp5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MDgwNg==", "bodyText": "this name feels weird to me in the context of the rest of the naming in the SDK. How about SdkMetricProducer or MetricProducerSdk to match the naming patterns everywhere else?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/945#discussion_r385860806", "createdAt": "2020-02-28T18:45:36Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/export/OpenTelemetryMetricProducer.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.metrics.export;\n+\n+import io.opentelemetry.sdk.metrics.MeterSdkProvider;\n+import io.opentelemetry.sdk.metrics.data.MetricData;\n+import java.util.Collection;\n+\n+/** A {@link MetricProducer} that can read metrics from an instance of {@link MeterSdkProvider}. */\n+public final class OpenTelemetryMetricProducer implements MetricProducer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7ba01af1946ed82ce0ed01c4e2aef4541bced5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxMjQyMw==", "bodyText": "Tried a different design, what do you think?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/945#discussion_r385912423", "createdAt": "2020-02-28T20:41:27Z", "author": {"login": "bogdandrutu"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/export/OpenTelemetryMetricProducer.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.metrics.export;\n+\n+import io.opentelemetry.sdk.metrics.MeterSdkProvider;\n+import io.opentelemetry.sdk.metrics.data.MetricData;\n+import java.util.Collection;\n+\n+/** A {@link MetricProducer} that can read metrics from an instance of {@link MeterSdkProvider}. */\n+public final class OpenTelemetryMetricProducer implements MetricProducer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MDgwNg=="}, "originalCommit": {"oid": "0a7ba01af1946ed82ce0ed01c4e2aef4541bced5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxOTQ2Mg==", "bodyText": "I like the one-stop-shop approach. Let's go with the new design and see how it feels in the \"real world\" over the next week or so.  \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/945#discussion_r385919462", "createdAt": "2020-02-28T20:59:32Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/export/OpenTelemetryMetricProducer.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.metrics.export;\n+\n+import io.opentelemetry.sdk.metrics.MeterSdkProvider;\n+import io.opentelemetry.sdk.metrics.data.MetricData;\n+import java.util.Collection;\n+\n+/** A {@link MetricProducer} that can read metrics from an instance of {@link MeterSdkProvider}. */\n+public final class OpenTelemetryMetricProducer implements MetricProducer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MDgwNg=="}, "originalCommit": {"oid": "0a7ba01af1946ed82ce0ed01c4e2aef4541bced5"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 935, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}