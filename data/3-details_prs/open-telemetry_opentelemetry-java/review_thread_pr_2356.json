{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMzE4MTg4", "number": 2356, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyNDozNVrOFHGh4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNjowMDozNFrOFHPvKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTkxMzI4OnYy", "diffSide": "RIGHT", "path": "sdk/all/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyNDozNVrOIIbDfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyNDozNVrOIIbDfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwMjc4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                jmh(project(':sdk:metrics'))\n          \n          \n            \n                jmh project(':sdk:metrics')", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2356#discussion_r545702781", "createdAt": "2020-12-18T09:24:35Z", "author": {"login": "Oberon00"}, "path": "sdk/all/build.gradle", "diffHunk": "@@ -25,6 +24,7 @@ dependencies {\n     testImplementation project(':sdk:testing')\n     testImplementation libraries.junit_pioneer\n \n+    jmh(project(':sdk:metrics'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "900b102d3703499968462b5c16da2dc88e7e6391"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTkxNjk2OnYy", "diffSide": "RIGHT", "path": "sdk/testing/build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyNToxMVrOIIbFuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNjowMzoyN1rOIIo9cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwMzM1Mg==", "bodyText": "If we have testing depend on metrics, we need to give it an alpha version number.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2356#discussion_r545703352", "createdAt": "2020-12-18T09:25:11Z", "author": {"login": "Oberon00"}, "path": "sdk/testing/build.gradle", "diffHunk": "@@ -9,6 +9,7 @@ ext.moduleName = 'io.opentelemetry.sdk.testing'\n dependencies {\n     api project(':api:all')\n     api project(':sdk:all')\n+    api project(':sdk:metrics')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "900b102d3703499968462b5c16da2dc88e7e6391"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwNTI3OQ==", "bodyText": "Yeah - presumably we have many extensions we'll need to give alpha too (logging for example). Let me try addressing that more generically outside this PR.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2356#discussion_r545705279", "createdAt": "2020-12-18T09:27:02Z", "author": {"login": "anuraaga"}, "path": "sdk/testing/build.gradle", "diffHunk": "@@ -9,6 +9,7 @@ ext.moduleName = 'io.opentelemetry.sdk.testing'\n dependencies {\n     api project(':api:all')\n     api project(':sdk:all')\n+    api project(':sdk:metrics')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwMzM1Mg=="}, "originalCommit": {"oid": "900b102d3703499968462b5c16da2dc88e7e6391"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzMDYxMA==", "bodyText": "I don't think we have a requirement of testing artifact stability, do we? [not that I care too much if the testing artifact is versioned alpha, really]", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2356#discussion_r545930610", "createdAt": "2020-12-18T16:03:27Z", "author": {"login": "jkwatson"}, "path": "sdk/testing/build.gradle", "diffHunk": "@@ -9,6 +9,7 @@ ext.moduleName = 'io.opentelemetry.sdk.testing'\n dependencies {\n     api project(':api:all')\n     api project(':sdk:all')\n+    api project(':sdk:metrics')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwMzM1Mg=="}, "originalCommit": {"oid": "900b102d3703499968462b5c16da2dc88e7e6391"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTQyMTg2OnYy", "diffSide": "RIGHT", "path": "exporters/otlp/trace/build.gradle", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNjowMDozNFrOIIo3KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNjowOTo1NFrOIIpMIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyOTAwMQ==", "bodyText": "This needs only implementation dependency not api correct?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2356#discussion_r545929001", "createdAt": "2020-12-18T16:00:34Z", "author": {"login": "bogdandrutu"}, "path": "exporters/otlp/trace/build.gradle", "diffHunk": "@@ -10,7 +10,7 @@ description = 'OpenTelemetry Protocol Trace Exporter'\n ext.moduleName = \"io.opentelemetry.exporter.otlp.trace\"\n \n dependencies {\n-    api project(':sdk:all')\n+    api project(':sdk:trace')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd65273396a40c618a349e0392fbac832971ed5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyOTM0OA==", "bodyText": "Actually it could be runtime dependency in this case.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2356#discussion_r545929348", "createdAt": "2020-12-18T16:01:10Z", "author": {"login": "bogdandrutu"}, "path": "exporters/otlp/trace/build.gradle", "diffHunk": "@@ -10,7 +10,7 @@ description = 'OpenTelemetry Protocol Trace Exporter'\n ext.moduleName = \"io.opentelemetry.exporter.otlp.trace\"\n \n dependencies {\n-    api project(':sdk:all')\n+    api project(':sdk:trace')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyOTAwMQ=="}, "originalCommit": {"oid": "0dd65273396a40c618a349e0392fbac832971ed5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzMTY3Mw==", "bodyText": "since the exporter implements an interface in the sdk:trace module, it effectively exposes that dependency as a part of it's API surface, so this has to be an api dependency, I believe.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2356#discussion_r545931673", "createdAt": "2020-12-18T16:05:20Z", "author": {"login": "jkwatson"}, "path": "exporters/otlp/trace/build.gradle", "diffHunk": "@@ -10,7 +10,7 @@ description = 'OpenTelemetry Protocol Trace Exporter'\n ext.moduleName = \"io.opentelemetry.exporter.otlp.trace\"\n \n dependencies {\n-    api project(':sdk:all')\n+    api project(':sdk:trace')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyOTAwMQ=="}, "originalCommit": {"oid": "0dd65273396a40c618a349e0392fbac832971ed5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkzNDM3MA==", "bodyText": "Sorry I read this metrics :))", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2356#discussion_r545934370", "createdAt": "2020-12-18T16:09:54Z", "author": {"login": "bogdandrutu"}, "path": "exporters/otlp/trace/build.gradle", "diffHunk": "@@ -10,7 +10,7 @@ description = 'OpenTelemetry Protocol Trace Exporter'\n ext.moduleName = \"io.opentelemetry.exporter.otlp.trace\"\n \n dependencies {\n-    api project(':sdk:all')\n+    api project(':sdk:trace')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyOTAwMQ=="}, "originalCommit": {"oid": "0dd65273396a40c618a349e0392fbac832971ed5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1573, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}