{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NDEyODU2", "number": 2274, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzozNzo0MFrOFEF6Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzozNzo0MFrOFEF6Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODM1Mzk1OnYy", "diffSide": "RIGHT", "path": "exporters/prometheus/src/test/java/io/opentelemetry/exporter/prometheus/PrometheusCollectorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzozNzo0MFrOIEC_bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzo0MTo1NlrOIEDJQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTExNDIyMQ==", "bodyText": "previously this was a long sum; seems like there would be value in testing both long and double here, rather than only double.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2274#discussion_r541114221", "createdAt": "2020-12-11T17:37:40Z", "author": {"login": "jkwatson"}, "path": "exporters/prometheus/src/test/java/io/opentelemetry/exporter/prometheus/PrometheusCollectorTest.java", "diffHunk": "@@ -55,23 +55,27 @@ void registerToDefault() throws IOException {\n \n   private static ImmutableList<MetricData> generateTestData() {\n     return ImmutableList.of(\n-        MetricData.create(\n+        MetricData.createDoubleSum(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6660a5b8fa70065c1f26e1c00aa0b30816d8b772"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTExNjczOA==", "bodyText": "Sorry :) good catch.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2274#discussion_r541116738", "createdAt": "2020-12-11T17:41:56Z", "author": {"login": "bogdandrutu"}, "path": "exporters/prometheus/src/test/java/io/opentelemetry/exporter/prometheus/PrometheusCollectorTest.java", "diffHunk": "@@ -55,23 +55,27 @@ void registerToDefault() throws IOException {\n \n   private static ImmutableList<MetricData> generateTestData() {\n     return ImmutableList.of(\n-        MetricData.create(\n+        MetricData.createDoubleSum(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTExNDIyMQ=="}, "originalCommit": {"oid": "6660a5b8fa70065c1f26e1c00aa0b30816d8b772"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1695, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}