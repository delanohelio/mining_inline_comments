{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNTY0NTk5", "number": 1925, "title": "Initial list of best practices to follow in our project", "bodyText": "Signed-off-by: Bogdan Drutu bogdandrutu@gmail.com", "createdAt": "2020-10-29T20:58:34Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925", "merged": true, "mergeCommit": {"oid": "75d87f467350c8786f66c92990fe7e680817d78f"}, "closed": true, "closedAt": "2020-10-31T19:36:38Z", "author": {"login": "bogdandrutu"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXYoSOgH2gAyNTEyNTY0NTk5OjlmMzZiYjVjMTNhZmM3MzQ4MmY0NzNkNGE0MDJmZWMwMjhkNDQzMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXqQ6pgFqTUyMDg4OTg0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9f36bb5c13afc73482f473d4a402fec028d44332", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9f36bb5c13afc73482f473d4a402fec028d44332", "committedDate": "2020-10-29T20:59:13Z", "message": "Initial list of best practices to follow in our project\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b8b106194b363e2351b68de80511d8b8d3b1613", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9b8b106194b363e2351b68de80511d8b8d3b1613", "committedDate": "2020-10-29T20:58:17Z", "message": "Initial list of best practices to follow in our project\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "9f36bb5c13afc73482f473d4a402fec028d44332", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9f36bb5c13afc73482f473d4a402fec028d44332", "committedDate": "2020-10-29T20:59:13Z", "message": "Initial list of best practices to follow in our project\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMDgwNTI1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#pullrequestreview-520080525", "createdAt": "2020-10-29T21:00:16Z", "commit": {"oid": "9f36bb5c13afc73482f473d4a402fec028d44332"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMTowMDoxN1rOHqud3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMTowMDoxN1rOHqud3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU2MzU0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Use `final` everywhere is possible, this ensures that classes cannot be extended when the API does not intend to offer that functionality;\n          \n          \n            \n            * Use `final` classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality;", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#discussion_r514563549", "createdAt": "2020-10-29T21:00:17Z", "author": {"login": "jkwatson"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -43,6 +43,13 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n \n `./gradlew spotless`\n \n+### Best practices that we follow\n+\n+* Avoid exposing publicly any class/method/variable that don't need to be public;\n+* By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`;\n+* The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages;\n+* Use `final` everywhere is possible, this ensures that classes cannot be extended when the API does not intend to offer that functionality;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f36bb5c13afc73482f473d4a402fec028d44332"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0470ab8a0d2aee14e115074954918f2e19d0554", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d0470ab8a0d2aee14e115074954918f2e19d0554", "committedDate": "2020-10-29T21:00:51Z", "message": "Update CONTRIBUTING.md\n\nCo-authored-by: John Watson <jkwatson@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMDg0NTM5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#pullrequestreview-520084539", "createdAt": "2020-10-29T21:03:25Z", "commit": {"oid": "d0470ab8a0d2aee14e115074954918f2e19d0554"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMTc3MDQ4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#pullrequestreview-520177048", "createdAt": "2020-10-30T00:01:12Z", "commit": {"oid": "d0470ab8a0d2aee14e115074954918f2e19d0554"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMDowMToxMlrOHqyycA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMDowMjoyOFrOHqyzvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYzNDM1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Avoid exposing publicly any class/method/variable that don't need to be public;\n          \n          \n            \n            * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`;\n          \n          \n            \n            * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages;\n          \n          \n            \n            * Use `final` classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality;\n          \n          \n            \n            * Avoid exposing publicly any class/method/variable that don't need to be public.\n          \n          \n            \n            * By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n          \n          \n            \n            * The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n          \n          \n            \n            * Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.\n          \n          \n            \n            \n          \n          \n            \n            If you notice any practice being applied in the project consistently that isn't listed here, please consider a pull request to add it.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#discussion_r514634352", "createdAt": "2020-10-30T00:01:12Z", "author": {"login": "anuraaga"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -43,6 +43,13 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n \n `./gradlew spotless`\n \n+### Best practices that we follow\n+\n+* Avoid exposing publicly any class/method/variable that don't need to be public;\n+* By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`;\n+* The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages;\n+* Use `final` classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0470ab8a0d2aee14e115074954918f2e19d0554"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYzNDY4NA==", "bodyText": "Just some formatting and a note about adding to these when something's found.\nFor final classes do you mean public? I tend to not nit for package-private classes though we could be more strict about that if the consistency helps.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#discussion_r514634684", "createdAt": "2020-10-30T00:02:28Z", "author": {"login": "anuraaga"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -43,6 +43,13 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n \n `./gradlew spotless`\n \n+### Best practices that we follow\n+\n+* Avoid exposing publicly any class/method/variable that don't need to be public;\n+* By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`;\n+* The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages;\n+* Use `final` classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYzNDM1Mg=="}, "originalCommit": {"oid": "d0470ab8a0d2aee14e115074954918f2e19d0554"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "726ff76df9117c40ebcfcb325fca0f53d852210c", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/726ff76df9117c40ebcfcb325fca0f53d852210c", "committedDate": "2020-10-30T13:51:08Z", "message": "Update CONTRIBUTING.md\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzQ1ODQz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#pullrequestreview-520745843", "createdAt": "2020-10-30T14:52:38Z", "commit": {"oid": "726ff76df9117c40ebcfcb325fca0f53d852210c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODQ1ODY1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#pullrequestreview-520845865", "createdAt": "2020-10-30T16:41:54Z", "commit": {"oid": "726ff76df9117c40ebcfcb325fca0f53d852210c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODg5ODQx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#pullrequestreview-520889841", "createdAt": "2020-10-30T17:31:58Z", "commit": {"oid": "726ff76df9117c40ebcfcb325fca0f53d852210c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzozMTo1OVrOHrZQWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzozMTo1OVrOHrZQWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2NDYwMw==", "bodyText": "Doesn't this somehow contradict #1935?\nBut note that this requirement might be annoying to follow in combination with Mockito which cannot mock final classes.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1925#discussion_r515264603", "createdAt": "2020-10-30T17:31:59Z", "author": {"login": "Oberon00"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -43,6 +43,15 @@ which uses [google-java-format](https://github.com/google/google-java-format) li\n \n `./gradlew spotless`\n \n+### Best practices that we follow\n+\n+* Avoid exposing publicly any class/method/variable that don't need to be public.\n+* By default, all arguments/members are treated as non-null. Every argument/member that can be `null` must be annotated with `@Nullable`.\n+* The project aims to provide a consistent experience across all the public APIs. It is important to ensure consistency (same look and feel) across different public packages.\n+* Use `final` for public classes everywhere it is possible, this ensures that these classes cannot be extended when the API does not intend to offer that functionality.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726ff76df9117c40ebcfcb325fca0f53d852210c"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4192, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}