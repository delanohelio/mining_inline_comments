{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4OTY4OTIx", "number": 1767, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNDozMjowNFrOErAfEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNDozMjowNFrOErAfEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTMyMTc5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/opentelemetry/baggage/BaggageManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNDozMjowNFrOHdiNyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNDo0OToxMlrOHdid8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDczMTMzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * is the same instance as the one {@link #withBaggage(Baggage) placed into scope}.\n          \n          \n            \n             * is the same instance as the one {@linkplain #withBaggage(Baggage) placed into scope}.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1767#discussion_r500731337", "createdAt": "2020-10-07T04:32:04Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/baggage/BaggageManager.java", "diffHunk": "@@ -16,7 +16,7 @@\n  *\n  * <p>Implementations may have different constraints and are free to convert entry contexts to their\n  * own subtypes. This means callers cannot assume the {@link #getCurrentBaggage() current context}\n- * is the same instance as the one {@link #withContext(Baggage) placed into scope}.\n+ * is the same instance as the one {@link #withBaggage(Baggage) placed into scope}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db1271fc5f7c2161aad6c1a6921ada8ce9c663cf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDczNTQ3NQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1767#discussion_r500735475", "createdAt": "2020-10-07T04:49:12Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/baggage/BaggageManager.java", "diffHunk": "@@ -16,7 +16,7 @@\n  *\n  * <p>Implementations may have different constraints and are free to convert entry contexts to their\n  * own subtypes. This means callers cannot assume the {@link #getCurrentBaggage() current context}\n- * is the same instance as the one {@link #withContext(Baggage) placed into scope}.\n+ * is the same instance as the one {@link #withBaggage(Baggage) placed into scope}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDczMTMzNw=="}, "originalCommit": {"oid": "db1271fc5f7c2161aad6c1a6921ada8ce9c663cf"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1276, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}