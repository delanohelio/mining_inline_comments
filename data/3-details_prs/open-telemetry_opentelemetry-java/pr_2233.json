{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0Nzg2OTk4", "number": 2233, "title": "Split global functionality into a separate class", "bodyText": "This ensure clear separation of functionality. This PR does not change any functionality, it just restructures the code to separate global functionality from\nthe Default implementation. Also helps to ensure that Global initialization does not happen by mistake when working only with the default implementation.\nAlso it helps with methods like OpenTelemetry.get() and OpenTelemetry.set() to understand they are interacting with global instance\nSigned-off-by: Bogdan Drutu bogdandrutu@gmail.com", "createdAt": "2020-12-08T23:15:10Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2233", "merged": true, "mergeCommit": {"oid": "25bf879df74d3785f4c4880a604fd0ad39d03ff9"}, "closed": true, "closedAt": "2020-12-15T18:27:36Z", "author": {"login": "bogdandrutu"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkUBYRgFqTU0Nzc1NjA3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmeWf4gBqjQxMTU5NTMzODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzU2MDc5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2233#pullrequestreview-547756079", "createdAt": "2020-12-09T00:58:06Z", "commit": {"oid": "52a878f7d200b396572a931a34c8428a23e2b9b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDo1ODowN1rOIB9Q3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDo1ODowN1rOIB9Q3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkyMzIzMQ==", "bodyText": "This is a big improvement. I think we need to compare with removing the getGlobalTracer type methods in favor of OpenTelemetry.get().getTracer() or OpenTelemetry.getGlobal().getTracer() or getGlobalOpentelemetry().getTracer() (static import). I think they're all fine, latter might lead to more testable user code by reducing the number of static methods involved.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2233#discussion_r538923231", "createdAt": "2020-12-09T00:58:07Z", "author": {"login": "anuraaga"}, "path": "api/all/src/main/java/io/opentelemetry/api/GlobalOpenTelemetry.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.api;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import io.opentelemetry.api.metrics.Meter;\n+import io.opentelemetry.api.metrics.MeterProvider;\n+import io.opentelemetry.api.trace.Tracer;\n+import io.opentelemetry.api.trace.TracerProvider;\n+import io.opentelemetry.context.propagation.ContextPropagators;\n+import io.opentelemetry.spi.OpenTelemetryFactory;\n+import io.opentelemetry.spi.metrics.MeterProviderFactory;\n+import io.opentelemetry.spi.trace.TracerProviderFactory;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A global singleton for the entrypoint to telemetry functionality for tracing, metrics and\n+ * baggage.\n+ *\n+ * <p>The global singleton can be retrieved by {@link #get()}. The default for the returned {@link\n+ * OpenTelemetry}, if none has been set via {@link #set(OpenTelemetry)}, will be created with any\n+ * {@link OpenTelemetryFactory}, {@link TracerProviderFactory} or {@link MeterProviderFactory} found\n+ * on the classpath, or otherwise will be default, with no-op behavior.\n+ *\n+ * <p>If using the OpenTelemetry SDK, you may want to instantiate the {@link OpenTelemetry} to\n+ * provide configuration, for example of {@code Resource} or {@code Sampler}. See {@code\n+ * OpenTelemetrySdk} and {@code OpenTelemetrySdk.builder} for information on how to construct the\n+ * SDK {@link OpenTelemetry}.\n+ *\n+ * @see TracerProvider\n+ * @see MeterProvider\n+ * @see ContextPropagators\n+ */\n+public final class GlobalOpenTelemetry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52a878f7d200b396572a931a34c8428a23e2b9b6"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52a878f7d200b396572a931a34c8428a23e2b9b6", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/52a878f7d200b396572a931a34c8428a23e2b9b6", "committedDate": "2020-12-08T23:12:25Z", "message": "Split global functionality into a separate class\n\nThis ensure clear separation of functionality. This PR does not change any functionality, it just restructures the code to separate global functionality from\nthe Default implementation. Also helps to ensure that Global initialization does not happen by mistake when working only with the default implementation.\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "32a1357a91a6d265cf888c282ac8518d7088e3fb", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/32a1357a91a6d265cf888c282ac8518d7088e3fb", "committedDate": "2020-12-09T05:08:22Z", "message": "Split global functionality into a separate class\n\nThis ensure clear separation of functionality. This PR does not change any functionality, it just restructures the code to separate global functionality from\nthe Default implementation. Also helps to ensure that Global initialization does not happen by mistake when working only with the default implementation.\n\nAlso it helps with methods like `OpenTelemetry.get()` and `OpenTelemetry.set()` to understand they are interacting with global instance\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32a1357a91a6d265cf888c282ac8518d7088e3fb", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/32a1357a91a6d265cf888c282ac8518d7088e3fb", "committedDate": "2020-12-09T05:08:22Z", "message": "Split global functionality into a separate class\n\nThis ensure clear separation of functionality. This PR does not change any functionality, it just restructures the code to separate global functionality from\nthe Default implementation. Also helps to ensure that Global initialization does not happen by mistake when working only with the default implementation.\n\nAlso it helps with methods like `OpenTelemetry.get()` and `OpenTelemetry.set()` to understand they are interacting with global instance\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "c6ef5dd3835703cd25030d233937d56ed4e47dc9", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c6ef5dd3835703cd25030d233937d56ed4e47dc9", "committedDate": "2020-12-09T05:14:44Z", "message": "Split global functionality into a separate class\n\nThis ensure clear separation of functionality. This PR does not change any functionality, it just restructures the code to separate global functionality from\nthe Default implementation. Also helps to ensure that Global initialization does not happen by mistake when working only with the default implementation.\n\nAlso it helps with methods like `OpenTelemetry.get()` and `OpenTelemetry.set()` to understand they are interacting with global instance\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNTY3NjA5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2233#pullrequestreview-551567609", "createdAt": "2020-12-14T16:33:54Z", "commit": {"oid": "c6ef5dd3835703cd25030d233937d56ed4e47dc9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8a214a072962806bc4650818cdaf6ccfad8fb90", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c8a214a072962806bc4650818cdaf6ccfad8fb90", "committedDate": "2020-12-15T18:07:53Z", "message": "Split global functionality into a separate class\n\nThis ensure clear separation of functionality. This PR does not change any functionality, it just restructures the code to separate global functionality from\nthe Default implementation. Also helps to ensure that Global initialization does not happen by mistake when working only with the default implementation.\n\nAlso it helps with methods like `OpenTelemetry.get()` and `OpenTelemetry.set()` to understand they are interacting with global instance\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6ef5dd3835703cd25030d233937d56ed4e47dc9", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c6ef5dd3835703cd25030d233937d56ed4e47dc9", "committedDate": "2020-12-09T05:14:44Z", "message": "Split global functionality into a separate class\n\nThis ensure clear separation of functionality. This PR does not change any functionality, it just restructures the code to separate global functionality from\nthe Default implementation. Also helps to ensure that Global initialization does not happen by mistake when working only with the default implementation.\n\nAlso it helps with methods like `OpenTelemetry.get()` and `OpenTelemetry.set()` to understand they are interacting with global instance\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}, "afterCommit": {"oid": "c8a214a072962806bc4650818cdaf6ccfad8fb90", "author": {"user": {"login": "bogdandrutu", "name": "Bogdan Drutu"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c8a214a072962806bc4650818cdaf6ccfad8fb90", "committedDate": "2020-12-15T18:07:53Z", "message": "Split global functionality into a separate class\n\nThis ensure clear separation of functionality. This PR does not change any functionality, it just restructures the code to separate global functionality from\nthe Default implementation. Also helps to ensure that Global initialization does not happen by mistake when working only with the default implementation.\n\nAlso it helps with methods like `OpenTelemetry.get()` and `OpenTelemetry.set()` to understand they are interacting with global instance\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3598, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}