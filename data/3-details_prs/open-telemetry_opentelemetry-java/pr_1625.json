{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxODE1MjEx", "number": 1625, "title": "Add incubator module with utilities for mutating SpanData.", "bodyText": "Sorry for the huge delay on this.\nFor #1321", "createdAt": "2020-09-08T06:41:44Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1625", "merged": true, "mergeCommit": {"oid": "f63c84f4e84c373661b9cfd71c630e589d3fca6a"}, "closed": true, "closedAt": "2020-09-24T15:11:56Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGxyklAH2gAyNDgxODE1MjExOjdlYzFlMTJkODM4ZDlhYjI2NGY3N2IwMzY5ZjQxOWFmNTFjZWM3NGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMCrHlAFqTQ5NTY3Nzg1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ec1e12d838d9ab264f77b0369f419af51cec74a", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7ec1e12d838d9ab264f77b0369f419af51cec74a", "committedDate": "2020-09-08T06:41:22Z", "message": "Add incubator module with utilities for mutating SpanData."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjU2NjA5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1625#pullrequestreview-484256609", "createdAt": "2020-09-08T15:27:41Z", "commit": {"oid": "7ec1e12d838d9ab264f77b0369f419af51cec74a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToyNzo0MVrOHOioSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToyNzo0MVrOHOioSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwOTQ4MQ==", "bodyText": "Can we name this something else, so we don't have the name collision, requiring using FQNs for hte interface?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1625#discussion_r485009481", "createdAt": "2020-09-08T15:27:41Z", "author": {"login": "jkwatson"}, "path": "sdk_extensions/tracing_incubator/src/main/java/io/opentelemetry/sdk/extensions/incubator/trace/data/SpanData.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.extensions.incubator.trace.data;\n+\n+import com.google.auto.value.AutoValue;\n+import io.opentelemetry.common.ReadableAttributes;\n+import io.opentelemetry.sdk.common.InstrumentationLibraryInfo;\n+import io.opentelemetry.sdk.resources.Resource;\n+import io.opentelemetry.trace.Span.Kind;\n+import io.opentelemetry.trace.Status;\n+import io.opentelemetry.trace.TraceFlags;\n+import io.opentelemetry.trace.TraceState;\n+import java.util.List;\n+import javax.annotation.concurrent.Immutable;\n+\n+/**\n+ * A {@link io.opentelemetry.sdk.trace.data.SpanData} implementation with a builder that can be used\n+ * to modify parts of a {@link io.opentelemetry.sdk.trace.data.SpanData}.\n+ *\n+ * <pre>{@code\n+ * String clientType = ClientConfig.parseUserAgent(\n+ *   data.getAttributes().get(SemanticAttributes.HTTP_USER_AGENT).getStringValue());\n+ * Attributes newAttributes = Attributes.newBuilder(data.getAttributes())\n+ *   .setAttribute(\"client_type\", clientType)\n+ *   .build();\n+ * data = io.opentelemetry.sdk.extensions.incubator.trace.data.SpanData.newBuilder(data)\n+ *   .setAttributes(newAttributes)\n+ *   .build();\n+ * exporter.export(data);\n+ *\n+ * }</pre>\n+ */\n+// AutoValue generated hashCode is fine but we need to define equals to accept the base SpanData\n+// type.\n+@Immutable\n+@AutoValue\n+public abstract class SpanData implements io.opentelemetry.sdk.trace.data.SpanData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ec1e12d838d9ab264f77b0369f419af51cec74a"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e796f67763030e0368794353ffccf5639fd94908", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e796f67763030e0368794353ffccf5639fd94908", "committedDate": "2020-09-24T06:49:50Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into incubator-spandata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f4e7111c6427145453989d6c10da115857e7539", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7f4e7111c6427145453989d6c10da115857e7539", "committedDate": "2020-09-24T06:59:38Z", "message": "Finish"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1Njc3ODU4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1625#pullrequestreview-495677858", "createdAt": "2020-09-24T15:11:14Z", "commit": {"oid": "7f4e7111c6427145453989d6c10da115857e7539"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2440, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}