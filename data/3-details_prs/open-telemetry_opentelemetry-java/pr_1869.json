{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NjcyMDU2", "number": 1869, "title": "Span return `this` to enable chain calls", "bodyText": "resolves #1864", "createdAt": "2020-10-23T03:23:33Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869", "merged": true, "mergeCommit": {"oid": "a4e23f9ed908f3fcc7223ada8a14cf12400fa40e"}, "closed": true, "closedAt": "2020-10-23T16:29:02Z", "author": {"login": "dengliming"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVN6lYAH2gAyNTA4NjcyMDU2OmM3N2Y5OTE4Mzg4MjU1YjM4ZDljZDM3ZGNhYTM0ZTE1OWE2N2EyNDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVZKkegFqTUxNTgyNTkzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c77f9918388255b38d9cd37dcaa34e159a67a249", "author": {"user": {"login": "dengliming", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c77f9918388255b38d9cd37dcaa34e159a67a249", "committedDate": "2020-10-23T03:22:24Z", "message": "Span return `this` enable chain calls"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MjUyMjc3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#pullrequestreview-515252277", "createdAt": "2020-10-23T03:26:45Z", "commit": {"oid": "c77f9918388255b38d9cd37dcaa34e159a67a249"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92", "author": {"user": {"login": "dengliming", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/db2f9d4112e48a405c28a1aead76f0156f535e92", "committedDate": "2020-10-23T03:28:07Z", "message": "Fix spotlessCheck"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1Mzk4MjQ1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#pullrequestreview-515398245", "createdAt": "2020-10-23T07:10:24Z", "commit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDQxNTQz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#pullrequestreview-515441543", "createdAt": "2020-10-23T08:16:13Z", "commit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjUzMjc0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#pullrequestreview-515653274", "createdAt": "2020-10-23T13:13:03Z", "commit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzoxMzowM1rOHnNRrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzoxMzowM1rOHnNRrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg3NDAyOA==", "bodyText": "Maybe I'm kind of obsessive - but I don't want to encourage users to do something with a Span after end() ;)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#discussion_r510874028", "createdAt": "2020-10-23T13:13:03Z", "author": {"login": "carlosalberto"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -274,16 +289,19 @@ default void setAttribute(AttributeKey<Long> key, int value) {\n    * implementation.\n    *\n    * @param name the {@code Span} name.\n+   * @return this.\n    */\n-  void updateName(String name);\n+  Span updateName(String name);\n \n   /**\n    * Marks the end of {@code Span} execution.\n    *\n    * <p>Only the timing of the first end call for a given {@code Span} will be recorded, and\n    * implementations are free to ignore all further calls.\n+   *\n+   * @return this.\n    */\n-  void end();\n+  Span end();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "originalPosition": 172}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjUzNjI3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#pullrequestreview-515653627", "createdAt": "2020-10-23T13:13:28Z", "commit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjU2MDMx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#pullrequestreview-515656031", "createdAt": "2020-10-23T13:16:24Z", "commit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzoxNjoyNFrOHnNZaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzoxNjoyNFrOHnNZaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg3NjAwOQ==", "bodyText": "Same here (#1869 (comment))", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#discussion_r510876009", "createdAt": "2020-10-23T13:16:24Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -295,8 +313,9 @@ default void setAttribute(AttributeKey<Long> key, int value) {\n    * explicit values are required, use {@link #end()}.\n    *\n    * @param endOptions the explicit {@link EndSpanOptions} for this {@code Span}.\n+   * @return this.\n    */\n-  void end(EndSpanOptions endOptions);\n+  Span end(EndSpanOptions endOptions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "originalPosition": 183}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1Njk3NzU4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#pullrequestreview-515697758", "createdAt": "2020-10-23T14:03:44Z", "commit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NzQyOTQ0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#pullrequestreview-515742944", "createdAt": "2020-10-23T14:52:42Z", "commit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDo1Mjo0MlrOHnRUNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNDo1Mjo0MlrOHnRUNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0MDIxNA==", "bodyText": "blocking the PR until the end methods return void again.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#discussion_r510940214", "createdAt": "2020-10-23T14:52:42Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/PropagatedSpan.java", "diffHunk": "@@ -31,52 +31,84 @@ private PropagatedSpan(SpanContext spanContext) {\n   }\n \n   @Override\n-  public void setAttribute(String key, String value) {}\n+  public Span setAttribute(String key, String value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, long value) {}\n+  public Span setAttribute(String key, long value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, double value) {}\n+  public Span setAttribute(String key, double value) {\n+    return this;\n+  }\n \n   @Override\n-  public void setAttribute(String key, boolean value) {}\n+  public Span setAttribute(String key, boolean value) {\n+    return this;\n+  }\n \n   @Override\n-  public <T> void setAttribute(AttributeKey<T> key, T value) {}\n+  public <T> Span setAttribute(AttributeKey<T> key, T value) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name) {}\n+  public Span addEvent(String name) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, long timestamp) {}\n+  public Span addEvent(String name, long timestamp) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, Attributes attributes) {}\n+  public Span addEvent(String name, Attributes attributes) {\n+    return this;\n+  }\n \n   @Override\n-  public void addEvent(String name, Attributes attributes, long timestamp) {}\n+  public Span addEvent(String name, Attributes attributes, long timestamp) {\n+    return this;\n+  }\n \n   @Override\n-  public void setStatus(StatusCode canonicalCode) {}\n+  public Span setStatus(StatusCode canonicalCode) {\n+    return this;\n+  }\n \n   @Override\n-  public void setStatus(StatusCode canonicalCode, String description) {}\n+  public Span setStatus(StatusCode canonicalCode, String description) {\n+    return this;\n+  }\n \n   @Override\n-  public void recordException(Throwable exception) {}\n+  public Span recordException(Throwable exception) {\n+    return this;\n+  }\n \n   @Override\n-  public void recordException(Throwable exception, Attributes additionalAttributes) {}\n+  public Span recordException(Throwable exception, Attributes additionalAttributes) {\n+    return this;\n+  }\n \n   @Override\n-  public void updateName(String name) {}\n+  public Span updateName(String name) {\n+    return this;\n+  }\n \n   @Override\n-  public void end() {}\n+  public Span end() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db2f9d4112e48a405c28a1aead76f0156f535e92"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eae56d1622b3dafd1414dcd6a50ba7c21276658", "author": {"user": {"login": "dengliming", "name": null}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9eae56d1622b3dafd1414dcd6a50ba7c21276658", "committedDate": "2020-10-23T16:20:42Z", "message": "Keep return void in end method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1ODI1OTMz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1869#pullrequestreview-515825933", "createdAt": "2020-10-23T16:28:49Z", "commit": {"oid": "9eae56d1622b3dafd1414dcd6a50ba7c21276658"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4132, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}