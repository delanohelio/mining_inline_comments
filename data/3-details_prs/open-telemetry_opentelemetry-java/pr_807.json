{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4OTI1MTM4", "number": 807, "title": "Array values for span attributes", "bodyText": "This PR implements the specification introduced in open-telemetry/opentelemetry-specification#368 and resolves #801", "createdAt": "2020-01-30T07:26:51Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807", "merged": true, "mergeCommit": {"oid": "4bcfdb703fd917d15dbe15b0aabb2a42e7333cfe"}, "closed": true, "closedAt": "2020-04-21T18:08:25Z", "author": {"login": "thisthat"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_YXfKAFqTM1MDcyNzg0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTtqIBgFqTM4NjUxNjQ3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzI3ODQ3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#pullrequestreview-350727847", "createdAt": "2020-01-30T10:41:42Z", "commit": {"oid": "f38eb5779769ec9afbe42d42b2a819357c5944f0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDo0MTo0MlrOFjmhIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDo1NDowOVrOFjm4WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg3NTU1NQ==", "bodyText": "This will throw if null is passed, same for double and long below.\nAttempts to set null (array) attributes should be silently ignored as decided in #765.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r372875555", "createdAt": "2020-01-30T10:41:42Z", "author": {"login": "arminru"}, "path": "api/src/main/java/io/opentelemetry/trace/AttributeValue.java", "diffHunk": "@@ -221,4 +320,92 @@ public final Type getType() {\n     @Override\n     public abstract double getDoubleValue();\n   }\n+\n+  @Immutable\n+  @AutoValue\n+  abstract static class AttributeValueStringArray extends AttributeValue {\n+\n+    AttributeValueStringArray() {}\n+\n+    static AttributeValue create(String... stringValues) {\n+      return new AutoValue_AttributeValue_AttributeValueStringArray(Arrays.asList(stringValues));\n+    }\n+\n+    @Override\n+    public final Type getType() {\n+      return Type.STRING_ARRAY;\n+    }\n+\n+    @Override\n+    public abstract List<String> getStringArrayValue();\n+  }\n+\n+  @Immutable\n+  @AutoValue\n+  abstract static class AttributeValueBooleanArray extends AttributeValue {\n+\n+    AttributeValueBooleanArray() {}\n+\n+    static AttributeValue create(boolean... booleanValues) {\n+      List<Boolean> values = new ArrayList<>(booleanValues.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f38eb5779769ec9afbe42d42b2a819357c5944f0"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg3NjkwOQ==", "bodyText": "Please add tests in DefaultSpanTest.doNotCrash for passing (String[]) null and so on.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r372876909", "createdAt": "2020-01-30T10:44:34Z", "author": {"login": "arminru"}, "path": "api/src/main/java/io/opentelemetry/trace/DefaultSpan.java", "diffHunk": "@@ -91,6 +91,26 @@ public void setAttribute(String key, boolean value) {\n     Utils.checkNotNull(key, \"key\");\n   }\n \n+  @Override\n+  public void setAttribute(String key, String... values) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f38eb5779769ec9afbe42d42b2a819357c5944f0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg4MTQ5Nw==", "bodyText": "Please add tests in RecordEventsReadableSpanTest.setAttribute.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r372881497", "createdAt": "2020-01-30T10:54:09Z", "author": {"login": "arminru"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -314,6 +314,26 @@ public void setAttribute(String key, boolean value) {\n     setAttribute(key, AttributeValue.booleanAttributeValue(value));\n   }\n \n+  @Override\n+  public void setAttribute(String key, String... values) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f38eb5779769ec9afbe42d42b2a819357c5944f0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzYyNDky", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#pullrequestreview-350762492", "createdAt": "2020-01-30T11:44:23Z", "commit": {"oid": "f38eb5779769ec9afbe42d42b2a819357c5944f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTo0NDoyM1rOFjoL7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTo0NDoyM1rOFjoL7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMjg5NA==", "bodyText": "Also, what should happen if null or empty strings are passed inside the array? I'm strongly against dropping them silently as done with #771 for single strings, as this would preclude use cases such as having corresponding key and value arrays where value_array[i] is the value for key_array[i].", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r372902894", "createdAt": "2020-01-30T11:44:23Z", "author": {"login": "Oberon00"}, "path": "api/src/main/java/io/opentelemetry/trace/AttributeValue.java", "diffHunk": "@@ -221,4 +320,92 @@ public final Type getType() {\n     @Override\n     public abstract double getDoubleValue();\n   }\n+\n+  @Immutable\n+  @AutoValue\n+  abstract static class AttributeValueStringArray extends AttributeValue {\n+\n+    AttributeValueStringArray() {}\n+\n+    static AttributeValue create(String... stringValues) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f38eb5779769ec9afbe42d42b2a819357c5944f0"}, "originalPosition": 140}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMDMzMjMx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#pullrequestreview-351033231", "createdAt": "2020-01-30T18:10:01Z", "commit": {"oid": "95ab9a0bf80518bfd709e10a4fc0c5ff26b4e9eb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODoxMDowMVrOFj0vqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODoxMzowOVrOFj01Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwODY0OQ==", "bodyText": "Make them immutable?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r373108649", "createdAt": "2020-01-30T18:10:01Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/trace/AttributeValue.java", "diffHunk": "@@ -221,4 +321,107 @@ public final Type getType() {\n     @Override\n     public abstract double getDoubleValue();\n   }\n+\n+  @Immutable\n+  @AutoValue\n+  abstract static class AttributeValueStringArray extends AttributeValue {\n+\n+    AttributeValueStringArray() {}\n+\n+    static AttributeValue create(String... stringValues) {\n+      if (stringValues == null) {\n+        return new AutoValue_AttributeValue_AttributeValueStringArray(\n+            Collections.<String>emptyList());\n+      }\n+      return new AutoValue_AttributeValue_AttributeValueStringArray(Arrays.asList(stringValues));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95ab9a0bf80518bfd709e10a4fc0c5ff26b4e9eb"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExMDExOQ==", "bodyText": "I wouldn't add this to the Span Api to keep the surface low. I would rely on the version with AttributeValue for this usecase.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r373110119", "createdAt": "2020-01-30T18:13:09Z", "author": {"login": "bogdandrutu"}, "path": "api/src/main/java/io/opentelemetry/trace/Span.java", "diffHunk": "@@ -122,6 +122,49 @@\n    */\n   void setAttribute(String key, boolean value);\n \n+  /**\n+   * Sets an attribute to the {@code Span}. If the {@code Span} previously contained a mapping for\n+   * the key, the old value is replaced by the specified value.\n+   *\n+   * <p>If a null or empty String {@code value} is passed in, the attribute will be silently\n+   * dropped. Note: this behavior could change in the future.\n+   *\n+   * @param key the key for this attribute.\n+   * @param values the value for this attribute.\n+   * @since 0.1.0\n+   */\n+  void setAttribute(String key, String... values);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95ab9a0bf80518bfd709e10a4fc0c5ff26b4e9eb"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc7fd73447e1ecea84839075625a59d54712ca1b", "author": {"user": {"login": "arminru", "name": "Armin Ruech"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fc7fd73447e1ecea84839075625a59d54712ca1b", "committedDate": "2020-01-31T12:29:45Z", "message": "Merge branch 'master' into array-span-attributes"}, "afterCommit": {"oid": "4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d", "author": {"user": {"login": "arminru", "name": "Armin Ruech"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d", "committedDate": "2020-01-31T12:41:46Z", "message": "Merge branch 'master' into array-span-attributes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MzQ4NjQ0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#pullrequestreview-366348644", "createdAt": "2020-02-28T12:00:54Z", "commit": {"oid": "4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjowMDo1NVrOFvyuZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjowMTo0NVrOFvyvlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1ODQ3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (value.getStringArrayValue().size() == 0) {\n          \n          \n            \n                    if (value.getStringArrayValue().isEmpty()) {\n          \n      \n    \n    \n  \n\nSubject to #948.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r385658471", "createdAt": "2020-02-28T12:00:55Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -318,8 +317,34 @@ public void setAttribute(String key, boolean value) {\n   public void setAttribute(String key, AttributeValue value) {\n     Preconditions.checkNotNull(key, \"key\");\n     Preconditions.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return;\n+    switch (value.getType()) {\n+      case STRING:\n+        if (StringUtils.isNullOrEmpty(value.getStringValue())) {\n+          return;\n+        }\n+        break;\n+      case STRING_ARRAY:\n+        if (value.getStringArrayValue().size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1ODc3NA==", "bodyText": "Is this required?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r385658774", "createdAt": "2020-02-28T12:01:45Z", "author": {"login": "Oberon00"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -318,8 +317,34 @@ public void setAttribute(String key, boolean value) {\n   public void setAttribute(String key, AttributeValue value) {\n     Preconditions.checkNotNull(key, \"key\");\n     Preconditions.checkNotNull(value, \"value\");\n-    if (value.getType() == Type.STRING && StringUtils.isNullOrEmpty(value.getStringValue())) {\n-      return;\n+    switch (value.getType()) {\n+      case STRING:\n+        if (StringUtils.isNullOrEmpty(value.getStringValue())) {\n+          return;\n+        }\n+        break;\n+      case STRING_ARRAY:\n+        if (value.getStringArrayValue().size() == 0) {\n+          return;\n+        }\n+        break;\n+      case BOOLEAN_ARRAY:\n+        if (value.getBooleanArrayValue().size() == 0) {\n+          return;\n+        }\n+        break;\n+      case LONG_ARRAY:\n+        if (value.getLongArrayValue().size() == 0) {\n+          return;\n+        }\n+        break;\n+      case DOUBLE_ARRAY:\n+        if (value.getDoubleArrayValue().size() == 0) {\n+          return;\n+        }\n+        break;\n+      default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MzUxOTc3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#pullrequestreview-366351977", "createdAt": "2020-02-28T12:07:41Z", "commit": {"oid": "4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NjA5Mzcw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#pullrequestreview-366609370", "createdAt": "2020-02-28T18:48:11Z", "commit": {"oid": "4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo0ODoxMVrOFv_JMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo0ODoxMVrOFv_JMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MTkzNw==", "bodyText": "Since API calls are not supposed to throw exceptions, should we instead just return an empty List for these cases? I'm not sure of what the right behavior is.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r385861937", "createdAt": "2020-02-28T18:48:11Z", "author": {"login": "jkwatson"}, "path": "api/src/main/java/io/opentelemetry/trace/AttributeValue.java", "diffHunk": "@@ -136,6 +188,54 @@ public double getDoubleValue() {\n         String.format(\"This type can only return %s data\", getType().name()));\n   }\n \n+  /**\n+   * Returns the String array value of this {@code AttributeValue}. An UnsupportedOperationException\n+   * will be thrown if getType() is not {@link Type#STRING_ARRAY}.\n+   *\n+   * @return the array values of this {@code AttributeValue}.\n+   * @since 0.3.0\n+   */\n+  public List<String> getStringArrayValue() {\n+    throw new UnsupportedOperationException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d"}, "originalPosition": 87}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d", "author": {"user": {"login": "arminru", "name": "Armin Ruech"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4dfd8b2768c072c91a2a6f2a0566e4d3c9a9161d", "committedDate": "2020-01-31T12:41:46Z", "message": "Merge branch 'master' into array-span-attributes"}, "afterCommit": {"oid": "e85d4278b10c740a4f57795f5be58b56a9a98a60", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e85d4278b10c740a4f57795f5be58b56a9a98a60", "committedDate": "2020-02-28T10:59:09Z", "message": "./gradlew goJF"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Mzc2MjIx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#pullrequestreview-367376221", "createdAt": "2020-03-02T17:14:55Z", "commit": {"oid": "e85d4278b10c740a4f57795f5be58b56a9a98a60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e85d4278b10c740a4f57795f5be58b56a9a98a60", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e85d4278b10c740a4f57795f5be58b56a9a98a60", "committedDate": "2020-02-28T10:59:09Z", "message": "./gradlew goJF"}, "afterCommit": {"oid": "a9ff82c107d3903828f601abad71df34b3b95405", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a9ff82c107d3903828f601abad71df34b3b95405", "committedDate": "2020-03-16T13:24:22Z", "message": "Implement ArrayAttribute"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MjIwMTY0", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#pullrequestreview-375220164", "createdAt": "2020-03-16T13:39:22Z", "commit": {"oid": "a9ff82c107d3903828f601abad71df34b3b95405"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzozOToyM1rOF20j5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzozOToyM1rOF20j5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyODU4MQ==", "bodyText": "#1020", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#discussion_r393028581", "createdAt": "2020-03-16T13:39:23Z", "author": {"login": "thisthat"}, "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/CommonAdapter.java", "diffHunk": "@@ -43,6 +43,11 @@ static AttributeKeyValue toProtoAttribute(String key, AttributeValue attributeVa\n             .setType(ValueType.DOUBLE)\n             .setDoubleValue(attributeValue.getDoubleValue())\n             .build();\n+      case BOOLEAN_ARRAY:\n+      case LONG_ARRAY:\n+      case DOUBLE_ARRAY:\n+      case STRING_ARRAY:\n+        return builder.setType(ValueType.UNRECOGNIZED).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ff82c107d3903828f601abad71df34b3b95405"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9ff82c107d3903828f601abad71df34b3b95405", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a9ff82c107d3903828f601abad71df34b3b95405", "committedDate": "2020-03-16T13:24:22Z", "message": "Implement ArrayAttribute"}, "afterCommit": {"oid": "a7c61ae7dbef40ed153ab30ac7e3a5bf1ae7945f", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a7c61ae7dbef40ed153ab30ac7e3a5bf1ae7945f", "committedDate": "2020-03-20T17:28:52Z", "message": "Rebase and add tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb82343c149ad3575095c85ab543b4fb8320552a", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/cb82343c149ad3575095c85ab543b4fb8320552a", "committedDate": "2020-03-20T17:40:38Z", "message": "Adapt RecordEventsReadableSpan"}, "afterCommit": {"oid": "1be48155f20707b41f98c3d0015fa120c3175cc4", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1be48155f20707b41f98c3d0015fa120c3175cc4", "committedDate": "2020-03-24T06:05:09Z", "message": "Adapt RecordEventsReadableSpan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb831daf49b826ba5ae31638e8404a8e816bada6", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/cb831daf49b826ba5ae31638e8404a8e816bada6", "committedDate": "2020-04-01T11:24:47Z", "message": "[API] - Add Arrays for span attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e0c4e2803f7c5c04a12d74b18f34b4033122a9c", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7e0c4e2803f7c5c04a12d74b18f34b4033122a9c", "committedDate": "2020-04-01T11:24:48Z", "message": "[SDK] - Add Arrays for span attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "721f255372aa6f822113c599bf73d7afd91b8aa2", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/721f255372aa6f822113c599bf73d7afd91b8aa2", "committedDate": "2020-04-01T11:24:48Z", "message": "[Exporters/Shim] - Add Arrays for span attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95b2b8d1e2a51ac26200bd5a412c66bd3de685b4", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/95b2b8d1e2a51ac26200bd5a412c66bd3de685b4", "committedDate": "2020-04-01T11:24:48Z", "message": "add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa68a8f3d665d90ec51153e22dc592ff5b943d96", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/aa68a8f3d665d90ec51153e22dc592ff5b943d96", "committedDate": "2020-04-01T11:24:49Z", "message": "Adjust jaeger exporter to specification. Add tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fac7d6510584e69494b58019333711f294f41fd4", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fac7d6510584e69494b58019333711f294f41fd4", "committedDate": "2020-04-01T11:24:49Z", "message": "Fix checkstyle naming issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b50ed2655f3bc023886f1854cf00640f28951be8", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b50ed2655f3bc023886f1854cf00640f28951be8", "committedDate": "2020-04-01T11:24:49Z", "message": "Add further tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23a1637620c7095641409a38b56fd8d9a8a08798", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/23a1637620c7095641409a38b56fd8d9a8a08798", "committedDate": "2020-04-01T11:24:50Z", "message": "Align null value behavior of attributes with spec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae03f6f8e20150e44c2c5d992c99b7606106c15d", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ae03f6f8e20150e44c2c5d992c99b7606106c15d", "committedDate": "2020-04-01T11:24:50Z", "message": "fix javadoc @since"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ffba0c75b6bb5f3c7a8f7061cbde586c40c6178", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9ffba0c75b6bb5f3c7a8f7061cbde586c40c6178", "committedDate": "2020-04-01T11:24:50Z", "message": "API must not crash on misusage of AttributeValue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b6cc070ca2de512e29e0b91d0c638452f207ac4", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9b6cc070ca2de512e29e0b91d0c638452f207ac4", "committedDate": "2020-04-01T11:24:51Z", "message": "API - Remove Attribute ArrayValues from Span surface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e394b29bf537e59253da00a9fb3e3357a167ea5", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1e394b29bf537e59253da00a9fb3e3357a167ea5", "committedDate": "2020-04-01T11:24:51Z", "message": "Immutable String array values for AttributeValue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3d04a2fac18cb3bc7454f5f7cf13596425e5e8e", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e3d04a2fac18cb3bc7454f5f7cf13596425e5e8e", "committedDate": "2020-04-01T11:24:51Z", "message": "Immutable values for AttributeValue arrays"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "036487928fd4accbcac8ff023eb4de2d30285058", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/036487928fd4accbcac8ff023eb4de2d30285058", "committedDate": "2020-04-01T11:24:52Z", "message": "./gradlew goJF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "331e27584197ea4fb42b4eb485109a26d414b744", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/331e27584197ea4fb42b4eb485109a26d414b744", "committedDate": "2020-04-01T11:24:52Z", "message": "Implement ArrayAttribute"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ca0412fc822b0d73eb580ffb1515e7c6c32a897", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8ca0412fc822b0d73eb580ffb1515e7c6c32a897", "committedDate": "2020-04-01T11:24:52Z", "message": "Rebase and add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84c0eb35c6a1f231301b11fdfa9780f041382ee5", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/84c0eb35c6a1f231301b11fdfa9780f041382ee5", "committedDate": "2020-04-01T11:24:53Z", "message": "Adapt RecordEventsReadableSpan"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1be48155f20707b41f98c3d0015fa120c3175cc4", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1be48155f20707b41f98c3d0015fa120c3175cc4", "committedDate": "2020-03-24T06:05:09Z", "message": "Adapt RecordEventsReadableSpan"}, "afterCommit": {"oid": "84c0eb35c6a1f231301b11fdfa9780f041382ee5", "author": {"user": {"login": "thisthat", "name": "Giovanni Liva"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/84c0eb35c6a1f231301b11fdfa9780f041382ee5", "committedDate": "2020-04-01T11:24:53Z", "message": "Adapt RecordEventsReadableSpan"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTE2NDcx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/807#pullrequestreview-386516471", "createdAt": "2020-04-02T15:02:23Z", "commit": {"oid": "84c0eb35c6a1f231301b11fdfa9780f041382ee5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3295, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}