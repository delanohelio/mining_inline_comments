{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NDc5Nzk5", "number": 2250, "title": "Another option for release versioning proposal", "bodyText": "As an alternative approach to #2212\nThis options adds -alpha to the released versions of immature libraries, rather than adding -experimental to the artifacts.\nAnother option to fulfill  open-telemetry/opentelemetry-specification#1267", "createdAt": "2020-12-09T21:36:35Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250", "merged": true, "mergeCommit": {"oid": "eccbfebf38e0c01368917ca4ca7dfc6032ee72e9"}, "closed": true, "closedAt": "2020-12-15T22:13:00Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkhXBFgH2gAyNTM1NDc5Nzk5OjdhZGZhNWQ3MmM5Y2ViMzM4NmMzOTEwNmE3MmVmYzdhZmZmYzg1OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmh2nogFqTU1Mjk3NDgyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7adfa5d72c9ceb3386c39106a72efc7afffc8594", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7adfa5d72c9ceb3386c39106a72efc7afffc8594", "committedDate": "2020-12-09T16:30:31Z", "message": "Add rationale and description of the release and versioning strategy."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c22e6f06f1686a11157ff8db58a6f03204c3f19", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2c22e6f06f1686a11157ff8db58a6f03204c3f19", "committedDate": "2020-12-09T16:30:32Z", "message": "typo fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8224412bccc258870e0e9a86d32aa07fd94cd8f", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a8224412bccc258870e0e9a86d32aa07fd94cd8f", "committedDate": "2020-12-09T21:32:21Z", "message": "alternate version of the versioning strategy that tags the version rather than the artifact."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjQ4NjEw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#pullrequestreview-548648610", "createdAt": "2020-12-09T22:03:41Z", "commit": {"oid": "a8224412bccc258870e0e9a86d32aa07fd94cd8f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjowMzo0MVrOICrk0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjowMzo0MVrOICrk0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4MjAwMg==", "bodyText": "And context itself correct?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#discussion_r539682002", "createdAt": "2020-12-09T22:03:41Z", "author": {"login": "bogdandrutu"}, "path": "docs/rationale.md", "diffHunk": "@@ -23,4 +23,72 @@ try (Scope scope = TracingContextUtils.currentContextWith(span)) {\n ```\n \n It would not be possible to call `recordException` if `span` was also using try-with-resources.\n-Because this is a common usage for spans, we do not support try-with-resources.\n\\ No newline at end of file\n+Because this is a common usage for spans, we do not support try-with-resources.\n+\n+\n+## Versioning and Releases\n+\n+### Assumptions\n+\n+- This project uses semver v2, as does the rest of OpenTelemetry.\n+\n+### Goals\n+\n+- API Stability: \n+    - Once the API for a given signal (spans, logs, metrics, baggage) has been officially released, code instrumented with that API module will \n+function, *with no recompilation required*, with any API+SDK that has the same major version, and equal or greater minor or patch version. \n+    - For example, libraries that are instrumented with `opentelemetry-api-trace:1.0.1` will function, at runtime with \n+SDK library `opentelemetry-sdk-trace:1.11.33` plus `opentelemetry-api-trace:1.11.33`. \n+    - We call this requirement the \"ABI\" compatibility requirement for \"Application Binary Interface\" compatibility. \n+- SDK Stability:\n+    - Public portions of the SDK (constructors, configuration, und-user interfaces) must remain backwards compatible.\n+        - Precisely what this includes has yet to be delineated. \n+    - Internal interfaces are allowed to break.\n+\n+### Methods\n+\n+- Mature signals\n+    - API modules for mature (i.e. released) signals will be transitive dependencies of the `opentelemetry-api` module.\n+    - Methods for accessing mature APIs will be added, as appropriate to the `OpenTelemetry` interface.\n+    - SDK modules for mature (i.e. released) signals will be transitive dependencies of the `opentelemetry-sdk` module.\n+    - Configuration options for the SDK modules for mature signals will be exposed, as appropriate, on the `OpenTelemetrySdk` class.\n+    - Modules for these mature signals will be included in the opentelemetry-bom to ensure that users runtime dependencies are kept in sync.\n+    - Mixing and matching runtime API and SDK versions, eg. by avoiding use of the BOM, will not be supported by this project.\n+    - Once a public API (either in the official API or in the SDK) has been released, we will endeavor to support that API in perpetuity.\n+\n+- Immature or experimental signals\n+    - API modules for immature signals will not be transitive dependencies of the `opentelemetry-api` module.\n+    - API modules will be versioned with an \"-alpha\" suffix to make it abundantly clear that depending on them is at your own risk.\n+    - API modules for immature signals will be co-versioned along with mature API modules, with the added suffix.\n+    - The java packages for immature APIs will be used as if they were mature signals. This will enable users to easily transition from immature to \n+    mature usage, without having to change imports. \n+    - SDK modules for immature signals will also be versioned with an \"-alpha\" suffix, in parallel to their API modules.\n+    \n+### Examples\n+\n+Purely for illustration purposes, not intended to represent actual releases:\n+\n+- `v1.0.0` release:\n+    - `io.opentelemetry:opentelemetry-api:1.0.0`\n+        - Contains APIs for tracing, baggage, propagators (via the context dependency)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8224412bccc258870e0e9a86d32aa07fd94cd8f"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bbbcb9d52bf0c0ec20e6b1c4e856211088b0eb7", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2bbbcb9d52bf0c0ec20e6b1c4e856211088b0eb7", "committedDate": "2020-12-09T22:15:15Z", "message": "add context for clarity"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzE0NjM4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#pullrequestreview-548714638", "createdAt": "2020-12-09T23:58:31Z", "commit": {"oid": "2bbbcb9d52bf0c0ec20e6b1c4e856211088b0eb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzo1ODozMlrOICvDdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzo1ODozMlrOICvDdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTczODk5OQ==", "bodyText": "I guess this is referring to interfaces in the SDK that have the public modifier but don't fall into the above bucket. While I know Precisely what this includes has yet to be delineated.  do you have any example of it? BatchSpanProcessor?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#discussion_r539738999", "createdAt": "2020-12-09T23:58:32Z", "author": {"login": "anuraaga"}, "path": "docs/rationale.md", "diffHunk": "@@ -23,4 +23,72 @@ try (Scope scope = TracingContextUtils.currentContextWith(span)) {\n ```\n \n It would not be possible to call `recordException` if `span` was also using try-with-resources.\n-Because this is a common usage for spans, we do not support try-with-resources.\n\\ No newline at end of file\n+Because this is a common usage for spans, we do not support try-with-resources.\n+\n+\n+## Versioning and Releases\n+\n+### Assumptions\n+\n+- This project uses semver v2, as does the rest of OpenTelemetry.\n+\n+### Goals\n+\n+- API Stability: \n+    - Once the API for a given signal (spans, logs, metrics, baggage) has been officially released, code instrumented with that API module will \n+function, *with no recompilation required*, with any API+SDK that has the same major version, and equal or greater minor or patch version. \n+    - For example, libraries that are instrumented with `opentelemetry-api-trace:1.0.1` will function, at runtime with \n+SDK library `opentelemetry-sdk-trace:1.11.33` plus `opentelemetry-api-trace:1.11.33`. \n+    - We call this requirement the \"ABI\" compatibility requirement for \"Application Binary Interface\" compatibility. \n+- SDK Stability:\n+    - Public portions of the SDK (constructors, configuration, und-user interfaces) must remain backwards compatible.\n+        - Precisely what this includes has yet to be delineated. \n+    - Internal interfaces are allowed to break.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bbbcb9d52bf0c0ec20e6b1c4e856211088b0eb7"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzQxMjYy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#pullrequestreview-548741262", "createdAt": "2020-12-10T01:06:57Z", "commit": {"oid": "2bbbcb9d52bf0c0ec20e6b1c4e856211088b0eb7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MDA5ODk5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#pullrequestreview-549009899", "createdAt": "2020-12-10T09:38:51Z", "commit": {"oid": "2bbbcb9d52bf0c0ec20e6b1c4e856211088b0eb7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOTozODo1MVrOIDAA5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOTozODo1MVrOIDAA5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAxNjg3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                - Public portions of the SDK (constructors, configuration, und-user interfaces) must remain backwards compatible.\n          \n          \n            \n                - Public portions of the SDK (constructors, configuration, end-user interfaces) must remain backwards compatible.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#discussion_r540016870", "createdAt": "2020-12-10T09:38:51Z", "author": {"login": "iNikem"}, "path": "docs/rationale.md", "diffHunk": "@@ -23,4 +23,72 @@ try (Scope scope = TracingContextUtils.currentContextWith(span)) {\n ```\n \n It would not be possible to call `recordException` if `span` was also using try-with-resources.\n-Because this is a common usage for spans, we do not support try-with-resources.\n\\ No newline at end of file\n+Because this is a common usage for spans, we do not support try-with-resources.\n+\n+\n+## Versioning and Releases\n+\n+### Assumptions\n+\n+- This project uses semver v2, as does the rest of OpenTelemetry.\n+\n+### Goals\n+\n+- API Stability: \n+    - Once the API for a given signal (spans, logs, metrics, baggage) has been officially released, code instrumented with that API module will \n+function, *with no recompilation required*, with any API+SDK that has the same major version, and equal or greater minor or patch version. \n+    - For example, libraries that are instrumented with `opentelemetry-api-trace:1.0.1` will function, at runtime with \n+SDK library `opentelemetry-sdk-trace:1.11.33` plus `opentelemetry-api-trace:1.11.33`. \n+    - We call this requirement the \"ABI\" compatibility requirement for \"Application Binary Interface\" compatibility. \n+- SDK Stability:\n+    - Public portions of the SDK (constructors, configuration, und-user interfaces) must remain backwards compatible.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bbbcb9d52bf0c0ec20e6b1c4e856211088b0eb7"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MDEzMDky", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#pullrequestreview-549013092", "createdAt": "2020-12-10T09:42:22Z", "commit": {"oid": "2bbbcb9d52bf0c0ec20e6b1c4e856211088b0eb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOTo0MjoyMlrOIDALRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOTo0MjoyMlrOIDALRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAxOTUyNA==", "bodyText": "But we planned to version SDK independently from API, right?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#discussion_r540019524", "createdAt": "2020-12-10T09:42:22Z", "author": {"login": "iNikem"}, "path": "docs/rationale.md", "diffHunk": "@@ -23,4 +23,72 @@ try (Scope scope = TracingContextUtils.currentContextWith(span)) {\n ```\n \n It would not be possible to call `recordException` if `span` was also using try-with-resources.\n-Because this is a common usage for spans, we do not support try-with-resources.\n\\ No newline at end of file\n+Because this is a common usage for spans, we do not support try-with-resources.\n+\n+\n+## Versioning and Releases\n+\n+### Assumptions\n+\n+- This project uses semver v2, as does the rest of OpenTelemetry.\n+\n+### Goals\n+\n+- API Stability: \n+    - Once the API for a given signal (spans, logs, metrics, baggage) has been officially released, code instrumented with that API module will \n+function, *with no recompilation required*, with any API+SDK that has the same major version, and equal or greater minor or patch version. \n+    - For example, libraries that are instrumented with `opentelemetry-api-trace:1.0.1` will function, at runtime with \n+SDK library `opentelemetry-sdk-trace:1.11.33` plus `opentelemetry-api-trace:1.11.33`. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bbbcb9d52bf0c0ec20e6b1c4e856211088b0eb7"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9f67bcdeab124af6d175b5fc17c66d0f9a0cf1b", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e9f67bcdeab124af6d175b5fc17c66d0f9a0cf1b", "committedDate": "2020-12-10T16:09:22Z", "message": "Update docs/rationale.md\n\nCo-authored-by: Nikita Salnikov-Tarnovski <gnikem@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14d3035cceb7bcf287d0555b010a3159c6ae5af3", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/14d3035cceb7bcf287d0555b010a3159c6ae5af3", "committedDate": "2020-12-10T18:35:46Z", "message": "add some additional flavor about internals and mention the bom in an example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5ODMyNDIz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#pullrequestreview-549832423", "createdAt": "2020-12-11T06:31:56Z", "commit": {"oid": "14d3035cceb7bcf287d0555b010a3159c6ae5af3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyOTc0ODIy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2250#pullrequestreview-552974822", "createdAt": "2020-12-15T22:12:53Z", "commit": {"oid": "14d3035cceb7bcf287d0555b010a3159c6ae5af3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3612, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}