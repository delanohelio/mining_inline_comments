{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NTc5MTQ4", "number": 1124, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo0NzoxNlrOD0QOgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxNTowNVrOD0RK5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTE4NDAzOnYy", "diffSide": "RIGHT", "path": "contrib/trace_propagators/src/main/java/io/opentelemetry/contrib/trace/propagation/JaegerPropagator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo0NzoxNlrOGJGpag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo0ODoxNlrOGJGsrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5OTI3NA==", "bodyText": "Out of curiosity: is this 1 expected?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1124#discussion_r412199274", "createdAt": "2020-04-21T13:47:16Z", "author": {"login": "carlosalberto"}, "path": "contrib/trace_propagators/src/main/java/io/opentelemetry/contrib/trace/propagation/JaegerPropagator.java", "diffHunk": "@@ -47,22 +47,36 @@\n \n   private static final Logger logger = Logger.getLogger(JaegerPropagator.class.getName());\n \n-  static final String TRACE_ID_HEADER = \"uber-trace-id\";\n+  static final String PROPAGATION_HEADER = \"uber-trace-id\";\n   // Parent span has been deprecated but Jaeger propagation protocol requires it\n-  static final String DEPRECATED_PARENT_SPAN = \"0\";\n-  static final String SEPARATOR = \":\";\n-\n-  private static final String IS_SAMPLED = \"1\";\n-  private static final String NOT_SAMPLED = \"0\";\n+  static final char DEPRECATED_PARENT_SPAN = '0';\n+  static final char PROPAGATION_HEADER_DELIMITER = ':';\n \n   private static final int MAX_TRACE_ID_LENGTH = 2 * TraceId.getSize();\n   private static final int MAX_SPAN_ID_LENGTH = 2 * SpanId.getSize();\n   private static final int MAX_FLAGS_LENGTH = 2;\n+\n+  private static final char IS_SAMPLED = '1';\n+  private static final char NOT_SAMPLED = '0';\n+  private static final int PROPAGATION_HEADER_DELIMITER_SIZE = 1;\n+\n+  private static final int TRACE_ID_HEX_SIZE = 2 * TraceId.getSize();\n+  private static final int SPAN_ID_HEX_SIZE = 2 * SpanId.getSize();\n+  private static final int PARENT_SPAN_ID_SIZE = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc56bd54cb59bda8cbb849d51aa5a287e63522a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwMDEwOQ==", "bodyText": "Never mind, I saw it's deprecated ;)", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1124#discussion_r412200109", "createdAt": "2020-04-21T13:48:16Z", "author": {"login": "carlosalberto"}, "path": "contrib/trace_propagators/src/main/java/io/opentelemetry/contrib/trace/propagation/JaegerPropagator.java", "diffHunk": "@@ -47,22 +47,36 @@\n \n   private static final Logger logger = Logger.getLogger(JaegerPropagator.class.getName());\n \n-  static final String TRACE_ID_HEADER = \"uber-trace-id\";\n+  static final String PROPAGATION_HEADER = \"uber-trace-id\";\n   // Parent span has been deprecated but Jaeger propagation protocol requires it\n-  static final String DEPRECATED_PARENT_SPAN = \"0\";\n-  static final String SEPARATOR = \":\";\n-\n-  private static final String IS_SAMPLED = \"1\";\n-  private static final String NOT_SAMPLED = \"0\";\n+  static final char DEPRECATED_PARENT_SPAN = '0';\n+  static final char PROPAGATION_HEADER_DELIMITER = ':';\n \n   private static final int MAX_TRACE_ID_LENGTH = 2 * TraceId.getSize();\n   private static final int MAX_SPAN_ID_LENGTH = 2 * SpanId.getSize();\n   private static final int MAX_FLAGS_LENGTH = 2;\n+\n+  private static final char IS_SAMPLED = '1';\n+  private static final char NOT_SAMPLED = '0';\n+  private static final int PROPAGATION_HEADER_DELIMITER_SIZE = 1;\n+\n+  private static final int TRACE_ID_HEX_SIZE = 2 * TraceId.getSize();\n+  private static final int SPAN_ID_HEX_SIZE = 2 * SpanId.getSize();\n+  private static final int PARENT_SPAN_ID_SIZE = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5OTI3NA=="}, "originalCommit": {"oid": "bcc56bd54cb59bda8cbb849d51aa5a287e63522a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTMzODYyOnYy", "diffSide": "RIGHT", "path": "contrib/trace_propagators/src/main/java/io/opentelemetry/contrib/trace/propagation/JaegerPropagator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxNTowNlrOGJIGIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxNTowNlrOGJIGIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyMzAwOQ==", "bodyText": "URL encoded not UTF-8", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1124#discussion_r412223009", "createdAt": "2020-04-21T14:15:06Z", "author": {"login": "bogdandrutu"}, "path": "contrib/trace_propagators/src/main/java/io/opentelemetry/contrib/trace/propagation/JaegerPropagator.java", "diffHunk": "@@ -106,30 +118,33 @@\n \n   @SuppressWarnings(\"StringSplitter\")\n   private static <C> SpanContext getSpanContextFromHeader(C carrier, Getter<C> getter) {\n-    String value = getter.get(carrier, TRACE_ID_HEADER);\n+    String value = getter.get(carrier, PROPAGATION_HEADER);\n     if (StringUtils.isNullOrEmpty(value)) {\n       return SpanContext.getInvalid();\n     }\n \n-    try {\n-      // the propagation value may contain UTF-8 encoded SEPARATOR's (:), so we need to decode it\n-      // before attempting to split it.\n-      value = URLDecoder.decode(value, \"UTF-8\");\n-    } catch (UnsupportedEncodingException e) {\n-      logger.info(\n-          \"Error decoding '\"\n-              + TRACE_ID_HEADER\n-              + \"' with value \"\n-              + value\n-              + \". Returning INVALID span context.\");\n-      return SpanContext.getInvalid();\n+    // if the delimiter (:) cannot be found then the propagation value could be UTF-8\n+    // encoded, so we need to decode it before attempting to split it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc56bd54cb59bda8cbb849d51aa5a287e63522a"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 866, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}