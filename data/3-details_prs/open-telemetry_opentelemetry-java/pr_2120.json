{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MDE5MzA4", "number": 2120, "title": "Move the AsynchronousInstrument callbacks to the builders.", "bodyText": "Deprecate the existing setCallback method.\nUpdate the code in the SDK to use the new API.\nThis will make it much more obvious that the callback can only be set once. I think it's more in line with what @kenfinnigan has been working on with #2068 .", "createdAt": "2020-11-23T21:55:23Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2120", "merged": true, "mergeCommit": {"oid": "73bad773dd7569237961b2c3a397f6fc8700c93f"}, "closed": true, "closedAt": "2020-11-30T22:12:50Z", "author": {"login": "jkwatson"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfcZJnAH2gAyNTI2MDE5MzA4OjEwZTYxMjEyZDg4ODg0ZDk3OWUyYjQxZmU1ZTQxMjQ1MDM4YWIzMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgBIIgAFqTUzODY3OTYxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "10e61212d88884d979e2b41fe5e41245038ab314", "author": {"user": {"login": "jkwatson", "name": "John Watson"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/10e61212d88884d979e2b41fe5e41245038ab314", "committedDate": "2020-11-23T21:53:42Z", "message": "Move the AsynchronousInstrument callbacks to the builders.\n\nDeprecate the existing setCallback method.\nUpdate the code in the SDK to use the new API."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDk3ODYz", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2120#pullrequestreview-537097863", "createdAt": "2020-11-24T05:56:41Z", "commit": {"oid": "10e61212d88884d979e2b41fe5e41245038ab314"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTE5MzU4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2120#pullrequestreview-537119358", "createdAt": "2020-11-24T06:50:32Z", "commit": {"oid": "10e61212d88884d979e2b41fe5e41245038ab314"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjo1MDozMlrOH4uHwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjo1MDo1NFrOH4uIPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzNzk1Mg==", "bodyText": "Moving to Builder's seems like a great change. Just confirming, though not for this PR since it's the existing behavior, is setCallback good enough and not addCallback (more common in callback-oriented APIs I think)?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2120#discussion_r529237952", "createdAt": "2020-11-24T06:50:32Z", "author": {"login": "anuraaga"}, "path": "api/src/main/java/io/opentelemetry/api/metrics/AsynchronousInstrument.java", "diffHunk": "@@ -34,13 +34,26 @@\n    * exported then it will never be called.\n    *\n    * @param callback the callback to be executed before export.\n+   * @deprecated Please register the callback while building the instrument. This method will be\n+   *     deprecated in 0.13.0.\n    */\n+  @Deprecated\n   void setCallback(Callback<R> callback);\n \n   /** Builder class for {@link AsynchronousInstrument}. */\n-  interface Builder extends Instrument.Builder {\n+  interface Builder<R extends Result> extends Instrument.Builder {\n+    /**\n+     * Sets a callback that gets executed every collection interval.\n+     *\n+     * <p>Evaluation is deferred until needed, if this {@code AsynchronousInstrument} metric is not\n+     * exported then it will never be called.\n+     *\n+     * @param callback the callback to be executed before export.\n+     */\n+    Builder<R> setCallback(Callback<R> callback);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e61212d88884d979e2b41fe5e41245038ab314"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzODA3Nw==", "bodyText": "Awesome!", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2120#discussion_r529238077", "createdAt": "2020-11-24T06:50:54Z", "author": {"login": "anuraaga"}, "path": "extensions/runtime-metrics/src/main/java/io/opentelemetry/extension/metrics/runtime/MemoryPools.java", "diffHunk": "@@ -70,30 +68,20 @@ public MemoryPools() {\n \n   /** Export only the \"area\" metric. */\n   public void exportMemoryAreaMetric() {\n-    final LongUpDownSumObserver areaMetric =\n-        this.meter\n-            .longUpDownSumObserverBuilder(\"runtime.jvm.memory.area\")\n-            .setDescription(\"Bytes of a given JVM memory area.\")\n-            .setUnit(\"By\")\n-            .build();\n-    areaMetric.setCallback(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10e61212d88884d979e2b41fe5e41245038ab314"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4Njc5NjEw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2120#pullrequestreview-538679610", "createdAt": "2020-11-25T16:41:36Z", "commit": {"oid": "10e61212d88884d979e2b41fe5e41245038ab314"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3757, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}