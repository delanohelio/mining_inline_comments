{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4OTY0MTE0", "number": 1482, "title": "Fix SpanWrapper snapshot being incomplete.", "bodyText": "Fixes #1479: io.opentelemetry.sdk.trace.SpanWrapper does not store the value of hasEnded, name or endEpochNanos, so updates to the originial Span would be inadvertedly reflected in the SpanData.\nAlso adds an unit test to check some other immutability properties of SpanWrapper.", "createdAt": "2020-07-30T08:22:31Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482", "merged": true, "mergeCommit": {"oid": "0f322b34d76c358529177e6cc91ae82c90b9c721"}, "closed": true, "closedAt": "2020-07-30T22:22:34Z", "author": {"login": "Oberon00"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc57UAagH2gAyNDU4OTY0MTE0Ojk3MTJhN2ViNTBkYWU0ODJlNDkyZjNhZWM0ODU4YmIzYjVjNDU3M2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6GVb4AFqTQ1ODc2MjczNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9712a7eb50dae482e492f3aec4858bb3b5c4573e", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9712a7eb50dae482e492f3aec4858bb3b5c4573e", "committedDate": "2020-07-30T08:26:01Z", "message": "Fix SpanWrapper snapshot being incomplete."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c663ccb1bf33de2b02397f9b1290038cd5729167", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c663ccb1bf33de2b02397f9b1290038cd5729167", "committedDate": "2020-07-30T08:20:31Z", "message": "Fix SpanWrapper snapshot being incomplete."}, "afterCommit": {"oid": "9712a7eb50dae482e492f3aec4858bb3b5c4573e", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9712a7eb50dae482e492f3aec4858bb3b5c4573e", "committedDate": "2020-07-30T08:26:01Z", "message": "Fix SpanWrapper snapshot being incomplete."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MjA2Mzk2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#pullrequestreview-458206396", "createdAt": "2020-07-30T08:48:11Z", "commit": {"oid": "9712a7eb50dae482e492f3aec4858bb3b5c4573e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODo0ODoxMVrOG5Z8IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODo0ODoxMVrOG5Z8IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg0NzAwOQ==", "bodyText": "Can you please provide more descriptive name for the test? What does it actually test?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#discussion_r462847009", "createdAt": "2020-07-30T08:48:11Z", "author": {"login": "iNikem"}, "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpanTest.java", "diffHunk": "@@ -253,6 +253,32 @@ public void toSpanData_WithInitialAttributes() {\n     assertThat(spanData.getTotalAttributeCount()).isEqualTo(attributes.size() + 1);\n   }\n \n+  @Test\n+  public void toSpanData_snapshot() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9712a7eb50dae482e492f3aec4858bb3b5c4573e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ac9a168bf82c7b18abe2b9a1ebbea274dd4be2e", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9ac9a168bf82c7b18abe2b9a1ebbea274dd4be2e", "committedDate": "2020-07-30T09:02:41Z", "message": "Improve clarity of unit test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MjM4NjI3", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#pullrequestreview-458238627", "createdAt": "2020-07-30T09:30:31Z", "commit": {"oid": "9ac9a168bf82c7b18abe2b9a1ebbea274dd4be2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MjYzMTA2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#pullrequestreview-458263106", "createdAt": "2020-07-30T10:05:13Z", "commit": {"oid": "9ac9a168bf82c7b18abe2b9a1ebbea274dd4be2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MjY3OTcx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#pullrequestreview-458267971", "createdAt": "2020-07-30T10:12:22Z", "commit": {"oid": "9ac9a168bf82c7b18abe2b9a1ebbea274dd4be2e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDoxMjoyM1rOG5c2WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMDoxMjoyM1rOG5c2WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg5NDY4MQ==", "bodyText": "I think a small comment can help\n// We reduce overhead by using the delegate for all immutable fields. Take care when adding something new to this class when determining whether to delegate or not.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#discussion_r462894681", "createdAt": "2020-07-30T10:12:23Z", "author": {"login": "anuraaga"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanWrapper.java", "diffHunk": "@@ -58,9 +64,21 @@ static SpanWrapper create(\n       ReadableAttributes attributes,\n       int totalAttributeCount,\n       int totalRecordedEvents,\n-      Status status) {\n+      Status status,\n+      String name,\n+      long endEpochNanos,\n+      boolean hasEnded) {\n     return new AutoValue_SpanWrapper(\n-        delegate, links, events, attributes, totalAttributeCount, totalRecordedEvents, status);\n+        delegate,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ac9a168bf82c7b18abe2b9a1ebbea274dd4be2e"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc79fdbbda0ffd7cd6372880c4c6b2945e67a56b", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/cc79fdbbda0ffd7cd6372880c4c6b2945e67a56b", "committedDate": "2020-07-30T10:36:16Z", "message": "Add javadoc for SpanWrapper."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NTg5NTA4", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#pullrequestreview-458589508", "createdAt": "2020-07-30T16:59:24Z", "commit": {"oid": "cc79fdbbda0ffd7cd6372880c4c6b2945e67a56b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzEzNTM2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#pullrequestreview-458713536", "createdAt": "2020-07-30T19:59:17Z", "commit": {"oid": "cc79fdbbda0ffd7cd6372880c4c6b2945e67a56b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOTo1OToxN1rOG5xycQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOTo1OToxN1rOG5xycQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNzc0NQ==", "bodyText": "I don't think this is actually a flyweight in the GoF sense, which is more like a multi-singleton. This is a pure delegate.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#discussion_r463237745", "createdAt": "2020-07-30T19:59:17Z", "author": {"login": "jkwatson"}, "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/SpanWrapper.java", "diffHunk": "@@ -30,6 +30,17 @@\n import java.util.List;\n import javax.annotation.concurrent.Immutable;\n \n+/**\n+ * Immutable class that stores {@link SpanData} based on a {@link RecordEventsReadableSpan}.\n+ *\n+ * <p>This is a variant of the \"flyweight\" design pattern, to reduce overhead. We store a reference", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc79fdbbda0ffd7cd6372880c4c6b2945e67a56b"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzE2MDA5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#pullrequestreview-458716009", "createdAt": "2020-07-30T20:03:02Z", "commit": {"oid": "cc79fdbbda0ffd7cd6372880c4c6b2945e67a56b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0e080925652c7228dfab8daea86f281ff2f74e7", "author": {"user": {"login": "Oberon00", "name": "Christian Neum\u00fcller"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c0e080925652c7228dfab8daea86f281ff2f74e7", "committedDate": "2020-07-30T21:12:25Z", "message": "Remove 'flyweight' from docstring."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzYyNzM2", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1482#pullrequestreview-458762736", "createdAt": "2020-07-30T21:16:32Z", "commit": {"oid": "c0e080925652c7228dfab8daea86f281ff2f74e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2661, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}