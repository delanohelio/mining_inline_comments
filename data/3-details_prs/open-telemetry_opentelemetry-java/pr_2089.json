{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyOTI1Mjk3", "number": 2089, "title": "Hide default context propagators implementation behind interface.", "bodyText": "This seems to be more consistent with our other default implementations like DefaultTracer.", "createdAt": "2020-11-18T05:33:12Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2089", "merged": true, "mergeCommit": {"oid": "0e013e5c73d0d4ea84aeb55224059b9297653232"}, "closed": true, "closedAt": "2020-11-20T01:58:35Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddnM_2AH2gAyNTIyOTI1Mjk3OjYwYjUyMGYxYzZjNzU3MTNjYjc5YjE5NmMzM2U1ZjYzODY5NjJmYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeK-xvgFqTUzNDkyODg5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "60b520f1c6c75713cb79b196c33e5f6386962fc1", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/60b520f1c6c75713cb79b196c33e5f6386962fc1", "committedDate": "2020-11-18T05:21:32Z", "message": "Hide default context propagators implementation behind interface."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7565f9fbef92a01deb3ca0857b146d1eac384c61", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7565f9fbef92a01deb3ca0857b146d1eac384c61", "committedDate": "2020-11-18T05:45:16Z", "message": "Deprecate"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNjQ5MTM1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2089#pullrequestreview-533649135", "createdAt": "2020-11-18T16:49:10Z", "commit": {"oid": "7565f9fbef92a01deb3ca0857b146d1eac384c61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjo0OToxMVrOH13Scw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjo0OToxMVrOH13Scw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI0MjQxOQ==", "bodyText": "Having an interface for a builder, which is just a list of propagators and a constructor call feels like overkill to me. Is the rationale here to make the agent more easily able to bridge the builder?\nCould we ditch the builder entirely and use a pattern like in #2091 where we just have a static method on the ContextPropagators that takes the list of TextMapPropagators?", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2089#discussion_r526242419", "createdAt": "2020-11-18T16:49:11Z", "author": {"login": "jkwatson"}, "path": "context/src/main/java/io/opentelemetry/context/propagation/ContextPropagatorsBuilder.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.context.propagation;\n+\n+/**\n+ * A builder of a default {@link ContextPropagators} which can have multiple {@link\n+ * TextMapPropagator} added, and extraction and injection will execute every {@link\n+ * TextMapPropagator} in order.\n+ */\n+public interface ContextPropagatorsBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7565f9fbef92a01deb3ca0857b146d1eac384c61"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94adc4e0d4bfb06686b8e5b285128e391c124c63", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/94adc4e0d4bfb06686b8e5b285128e391c124c63", "committedDate": "2020-11-19T03:41:54Z", "message": "Revamp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9c8c473612f39c63b99877d33370cb013b96073", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f9c8c473612f39c63b99877d33370cb013b96073", "committedDate": "2020-11-19T03:45:27Z", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into hide-default-contextpropagators"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDgxOTY5", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2089#pullrequestreview-534081969", "createdAt": "2020-11-19T04:57:41Z", "commit": {"oid": "94adc4e0d4bfb06686b8e5b285128e391c124c63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNDo1Nzo0MVrOH2Mx4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNDo1Nzo0MVrOH2Mx4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU5NDUyOA==", "bodyText": "this usage looks really good to me.  \ud83d\udc4d", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2089#discussion_r526594528", "createdAt": "2020-11-19T04:57:41Z", "author": {"login": "jkwatson"}, "path": "context/src/main/java/io/opentelemetry/context/propagation/ContextPropagators.java", "diffHunk": "@@ -71,25 +73,29 @@\n public interface ContextPropagators {\n \n   /**\n-   * Returns a {@link ContextPropagatorsBuilder} used to construct a new {@code ContextPropagators}\n-   * object with the specified propagators.\n-   *\n-   * <p>Invocation order of {@code TextMapPropagator#inject()} and {@code\n-   * TextMapPropagator#extract()} for registered trace propagators is undefined.\n-   *\n-   * <p>This is a example of a {@code ContextPropagators} object being created:\n+   * Returns a {@link ContextPropagators} which can be used to extract and inject context in text\n+   * payloads with the given {@link TextMapPropagator}. Use {@link\n+   * TextMapPropagator#composite(TextMapPropagator...)} to register multiple propagators, which will\n+   * all be executed when extracting or injecting.\n    *\n    * <pre>{@code\n-   * ContextPropagators propagators = DefaultContextPropagators.builder()\n-   *     .addTextMapPropagator(new HttpTraceContext())\n-   *     .addTextMapPropagator(new HttpBaggage())\n-   *     .addTextMapPropagator(new MyCustomContextPropagator())\n-   *     .build();\n+   * ContextPropagators propagators = ContextPropagators.create(\n+   *   TextMapPropagator.composite(\n+   *     HttpTraceContext.getInstance(),\n+   *     W3CBaggagePropagator.getInstance(),\n+   *     new MyCustomContextPropagator()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94adc4e0d4bfb06686b8e5b285128e391c124c63"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0OTI4ODk1", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2089#pullrequestreview-534928895", "createdAt": "2020-11-19T23:02:35Z", "commit": {"oid": "f9c8c473612f39c63b99877d33370cb013b96073"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4052, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}