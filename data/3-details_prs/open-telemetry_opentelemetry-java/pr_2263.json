{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NzE4NTEy", "number": 2263, "title": "Some example of possible SDK configuration", "bodyText": "To better see the effect of proposed changes", "createdAt": "2020-12-10T07:15:09Z", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2263", "merged": true, "mergeCommit": {"oid": "4a400fed2c519e7c8568dc874f7fd06bbd86c999"}, "closed": true, "closedAt": "2020-12-11T09:12:14Z", "author": {"login": "iNikem"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkt8f3gH2gAyNTM1NzE4NTEyOjc0YmViYjQ5NTM2YTgzMTJiYTVjNTlkMDY5YjQzMWU0ZmZkYmY4NDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlESYkAFqTU0OTkxOTg4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "74bebb49536a8312ba5c59d069b431e4ffdbf840", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/74bebb49536a8312ba5c59d069b431e4ffdbf840", "committedDate": "2020-12-10T07:10:19Z", "message": "Some example of possible SDK configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0808210d6bd36fd68f3176c80d2744180ba496cc", "author": {"user": {"login": "iNikem", "name": "Nikita Salnikov-Tarnovski"}}, "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0808210d6bd36fd68f3176c80d2744180ba496cc", "committedDate": "2020-12-10T10:18:43Z", "message": "Format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzUwOTYw", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2263#pullrequestreview-549350960", "createdAt": "2020-12-10T16:03:31Z", "commit": {"oid": "0808210d6bd36fd68f3176c80d2744180ba496cc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjowMzozMlrOIDQs9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjowMzozMlrOIDQs9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI5MDI5Mw==", "bodyText": "We could turn these all into tests by adding a simple isNotNull assert on the results. But, that's only if we feel like we need to have these tests do assertions. Just the fact that they don't throw exceptions is probably enough, TBH.", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2263#discussion_r540290293", "createdAt": "2020-12-10T16:03:32Z", "author": {"login": "jkwatson"}, "path": "sdk/all/src/test/java/io/opentelemetry/sdk/OpenTelemetrySdkTest.java", "diffHunk": "@@ -191,4 +195,74 @@ void onlySdkInstancesAllowed() {\n         IllegalArgumentException.class,\n         () -> OpenTelemetrySdk.builder().setTracerProvider(mock(TracerProvider.class)));\n   }\n+\n+  // This is just a demonstration of maximum that one can do with OpenTelemetry configuration.\n+  // Demonstrates how clear or confusing is SDK configuration\n+  @Test\n+  void fullOpenTelemetrySdkConfigurationDemo() {\n+    TraceConfig currentConfig = TraceConfig.getDefault();\n+    TraceConfig newConfig =\n+        currentConfig.toBuilder()\n+            .setSampler(mock(Sampler.class))\n+            .setMaxLengthOfAttributeValues(128)\n+            .build();\n+\n+    OpenTelemetrySdk.Builder sdkBuilder =\n+        OpenTelemetrySdk.builder()\n+            .addSpanProcessor(mock(SpanProcessor.class))\n+            .addSpanProcessor(SimpleSpanProcessor.builder(mock(SpanExporter.class)).build())\n+            .setIdGenerator(mock(IdGenerator.class))\n+            .setPropagators(ContextPropagators.create(mock(TextMapPropagator.class)))\n+            .setClock(mock(Clock.class))\n+            .setResource(mock(Resource.class));\n+\n+    TracerSdkProvider tracerSdkProvider =\n+        TracerSdkProvider.builder()\n+            .setClock(mock(Clock.class))\n+            .setIdGenerator(mock(IdGenerator.class))\n+            .setResource(mock(Resource.class))\n+            .setTraceConfig(newConfig)\n+            .build();\n+\n+    MeterSdkProvider meterSdkProvider =\n+        MeterSdkProvider.builder()\n+            .setClock(mock(Clock.class))\n+            .setResource(mock(Resource.class))\n+            .build();\n+\n+    sdkBuilder.setTracerProvider(tracerSdkProvider);\n+    sdkBuilder.setMeterProvider(meterSdkProvider);\n+    sdkBuilder.setTraceConfig(newConfig);\n+\n+    sdkBuilder.build();\n+  }\n+\n+  // This is just a demonstration of the bare minimal required configuration in order to get useful\n+  // SDK.\n+  // Demonstrates how clear or confusing is SDK configuration\n+  @Test\n+  void trivialOpenTelemetrySdkConfigurationDemo() {\n+    OpenTelemetrySdk.builder()\n+        .addSpanProcessor(SimpleSpanProcessor.builder(mock(SpanExporter.class)).build())\n+        .setPropagators(ContextPropagators.create(mock(TextMapPropagator.class)))\n+        .build();\n+  }\n+\n+  // This is just a demonstration of two small but not trivial configurations.\n+  // Demonstrates how clear or confusing is SDK configuration\n+  @Test\n+  void minimalOpenTelemetrySdkConfigurationDemo() {\n+    OpenTelemetrySdk.builder()\n+        .addSpanProcessor(SimpleSpanProcessor.builder(mock(SpanExporter.class)).build())\n+        .setPropagators(ContextPropagators.create(mock(TextMapPropagator.class)))\n+        .setTraceConfig(\n+            TraceConfig.getDefault().toBuilder().setSampler(mock(Sampler.class)).build())\n+        .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0808210d6bd36fd68f3176c80d2744180ba496cc"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzUxNzgy", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2263#pullrequestreview-549351782", "createdAt": "2020-12-10T16:04:25Z", "commit": {"oid": "0808210d6bd36fd68f3176c80d2744180ba496cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5OTE5ODgx", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2263#pullrequestreview-549919881", "createdAt": "2020-12-11T09:12:08Z", "commit": {"oid": "0808210d6bd36fd68f3176c80d2744180ba496cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3637, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}